//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	;
	add_segm_ex(0X7D000000,0X7D0356E0,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0X7D000000,".text");
	SegClass (0X7D000000,"CODE");
	SegDefReg(0x7D000000,"T",0x0);
	SegDefReg(0x7D000000,"DS",0x4);
	set_segm_type(0X7D000000,2);
	add_segm_ex(0X7D0356E0,0X7D04F380,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0X7D0356E0,".data");
	SegClass (0X7D0356E0,"DATA");
	SegDefReg(0x7D0356E0,"T",0x0);
	SegDefReg(0x7D0356E0,"DS",0x4);
	set_segm_type(0X7D0356E0,3);
	add_segm_ex(0X7D04F380,0X7D052B80,0X5,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X7D04F380,".bss");
	SegClass (0X7D04F380,"BSS");
	SegDefReg(0x7D04F380,"T",0x0);
	SegDefReg(0x7D04F380,"DS",0x4);
	set_segm_type(0X7D04F380,9);
	add_segm_ex(0X7D0F1900,0X7D0F1B00,0X6,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X7D0F1900,".bss2");
	SegClass (0X7D0F1900,"BSS");
	SegDefReg(0x7D0F1900,"T",0x0);
	SegDefReg(0x7D0F1900,"DS",0x4);
	set_segm_type(0X7D0F1900,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x4);
	set_segm_type(0XA0001020,3);
	set_inf_attr(INF_LOW_OFF, 0x7D000000);
	set_inf_attr(INF_HIGH_OFF, 0xA0001028);
}

static Enums_0(id) {

	id = add_enum(-1,"TEE_PROPSET",0x1100000);
	add_enum_member(id,"TEE_PROPSET_TEE_IMPLEMENTATION",	0XFFFFFFFD,	-1);
	add_enum_member(id,"TEE_PROPSET_CURRENT_CLIENT",	0XFFFFFFFE,	-1);
	add_enum_member(id,"TEE_PROPSET_CURRENT_TA",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"utee_time_category",0x1100000);
	add_enum_member(id,"UTEE_TIME_CAT_SYSTEM",	0,	-1);
	add_enum_member(id,"UTEE_TIME_CAT_TA_PERSISTENT",	0X1,	-1);
	add_enum_member(id,"UTEE_TIME_CAT_REE",	0X2,	-1);
	id = add_enum(-1,"TEE_OPERATIONS",0x1100000);
	add_enum_member(id,"TEE_OPERATION_CIPHER",	0X1,	-1);
	add_enum_member(id,"TEE_OPERATION_MAC",	0X3,	-1);
	add_enum_member(id,"TEE_OPERATION_AE",	0X4,	-1);
	add_enum_member(id,"TEE_OPERATION_DIGEST",	0X5,	-1);
	add_enum_member(id,"TEE_OPERATION_ASYMMETRIC_CIPHER",	0X6,	-1);
	add_enum_member(id,"TEE_OPERATION_ASYMMETRIC_SIGNATURE",	0X7,	-1);
	add_enum_member(id,"TEE_OPERATION_KEY_DERIVATION",	0X8,	-1);
	id = add_enum(-1,"TEE_OPERATION_STATES",0x1100000);
	add_enum_member(id,"TEE_OPERATION_STATE_INITIAL",	0,	-1);
	add_enum_member(id,"TEE_OPERATION_STATE_ACTIVE",	0X1,	-1);
	id = add_enum(-1,"TEE_OperationMode",0x1100000);
	add_enum_member(id,"TEE_MODE_ENCRYPT",	0,	-1);
	add_enum_member(id,"TEE_MODE_DECRYPT",	0X1,	-1);
	add_enum_member(id,"TEE_MODE_SIGN",	0X2,	-1);
	add_enum_member(id,"TEE_MODE_VERIFY",	0X3,	-1);
	add_enum_member(id,"TEE_MODE_MAC",	0X4,	-1);
	add_enum_member(id,"TEE_MODE_DIGEST",	0X5,	-1);
	add_enum_member(id,"TEE_MODE_DERIVE",	0X6,	-1);
	id = add_enum(-1,"TEE_ALG",0x1100000);
	add_enum_member(id,"TEE_ALG_AES_ECB_NOPAD",	0X10000010,	-1);
	add_enum_member(id,"TEE_ALG_DES_ECB_NOPAD",	0X10000011,	-1);
	add_enum_member(id,"TEE_ALG_DES3_ECB_NOPAD",	0X10000013,	-1);
	add_enum_member(id,"TEE_ALG_AES_CBC_NOPAD",	0X10000110,	-1);
	add_enum_member(id,"TEE_ALG_DES_CBC_NOPAD",	0X10000111,	-1);
	add_enum_member(id,"TEE_ALG_DES3_CBC_NOPAD",	0X10000113,	-1);
	add_enum_member(id,"TEE_ALG_AES_CTR",	0X10000210,	-1);
	add_enum_member(id,"TEE_ALG_AES_CTS",	0X10000310,	-1);
	add_enum_member(id,"TEE_ALG_AES_XTS",	0X10000410,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_MD5",	0X30000001,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_SHA1",	0X30000002,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_SHA224",	0X30000003,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_SHA256",	0X30000004,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_SHA384",	0X30000005,	-1);
	add_enum_member(id,"TEE_ALG_HMAC_SHA512",	0X30000006,	-1);
	add_enum_member(id,"TEE_ALG_AES_CBC_MAC_NOPAD",	0X30000110,	-1);
	add_enum_member(id,"TEE_ALG_DES_CBC_MAC_NOPAD",	0X30000111,	-1);
	add_enum_member(id,"TEE_ALG_DES3_CBC_MAC_NOPAD",	0X30000113,	-1);
	add_enum_member(id,"TEE_ALG_AES_CBC_MAC_PKCS5",	0X30000510,	-1);
	add_enum_member(id,"TEE_ALG_DES_CBC_MAC_PKCS5",	0X30000511,	-1);
	add_enum_member(id,"TEE_ALG_DES3_CBC_MAC_PKCS5",	0X30000513,	-1);
	add_enum_member(id,"TEE_ALG_AES_CMAC",	0X30000610,	-1);
	add_enum_member(id,"TEE_ALG_AES_CCM",	0X40000710,	-1);
	add_enum_member(id,"TEE_ALG_AES_GCM",	0X40000810,	-1);
	add_enum_member(id,"TEE_ALG_MD5",	0X50000001,	-1);
	add_enum_member(id,"TEE_ALG_SHA1",	0X50000002,	-1);
	add_enum_member(id,"TEE_ALG_SHA224",	0X50000003,	-1);
	add_enum_member(id,"TEE_ALG_SHA256",	0X50000004,	-1);
	add_enum_member(id,"TEE_ALG_SHA384",	0X50000005,	-1);
	add_enum_member(id,"TEE_ALG_SHA512",	0X50000006,	-1);
	add_enum_member(id,"TEE_ALG_MD5SHA1",	0X5000000F,	-1);
	add_enum_member(id,"TEE_ALG_RSA_NOPAD",	0X60000030,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_V1_5",	0X60000130,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA1",	0X60210230,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA224",	0X60310230,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA256",	0X60410230,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA384",	0X60510230,	-1);
	add_enum_member(id,"TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA512",	0X60610230,	-1);
	add_enum_member(id,"TEE_ALG_ECDSA_P192",	0X70001041,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_MD5",	0X70001830,	-1);
	add_enum_member(id,"TEE_ALG_ECDSA_P224",	0X70002041,	-1);
	add_enum_member(id,"TEE_ALG_DSA_SHA1",	0X70002131,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_SHA1",	0X70002830,	-1);
	add_enum_member(id,"TEE_ALG_ECDSA_P256",	0X70003041,	-1);
	add_enum_member(id,"TEE_ALG_DSA_SHA224",	0X70003131,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_SHA224",	0X70003830,	-1);
	add_enum_member(id,"TEE_ALG_ECDSA_P384",	0X70004041,	-1);
	add_enum_member(id,"TEE_ALG_DSA_SHA256",	0X70004131,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_SHA256",	0X70004830,	-1);
	add_enum_member(id,"TEE_ALG_ECDSA_P521",	0X70005041,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_SHA384",	0X70005830,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_SHA512",	0X70006830,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_V1_5_MD5SHA1",	0X7000F830,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_PSS_MGF1_SHA1",	0X70212930,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_PSS_MGF1_SHA224",	0X70313930,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_PSS_MGF1_SHA256",	0X70414930,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_PSS_MGF1_SHA384",	0X70515930,	-1);
	add_enum_member(id,"TEE_ALG_RSASSA_PKCS1_PSS_MGF1_SHA512",	0X70616930,	-1);
	add_enum_member(id,"TEE_ALG_DH_DERIVE_SHARED_SECRET",	0X80000032,	-1);
	add_enum_member(id,"TEE_ALG_ECDH_P192",	0X80001042,	-1);
	add_enum_member(id,"TEE_ALG_ECDH_P224",	0X80002042,	-1);
	add_enum_member(id,"TEE_ALG_ECDH_P256",	0X80003042,	-1);
	add_enum_member(id,"TEE_ALG_ECDH_P384",	0X80004042,	-1);
	add_enum_member(id,"TEE_ALG_ECDH_P521",	0X80005042,	-1);
	id = add_enum(-1,"TEE_MAIN_ALGO",0x1100000);
	add_enum_member(id,"TEE_MAIN_ALGO_MD5",	0X1,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_SHA1",	0X2,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_SHA224",	0X3,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_SHA256",	0X4,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_SHA384",	0X5,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_SHA512",	0X6,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_AES",	0X10,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_DES",	0X11,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_DES2",	0X12,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_DES3",	0X13,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_RSA",	0X30,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_DSA",	0X31,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_DH",	0X32,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_ECDSA",	0X41,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_ECDH",	0X42,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_HKDF",	0XC0,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_CONCAT_KDF",	0XC1,	-1);
	add_enum_member(id,"TEE_MAIN_ALGO_PBKDF2",	0XC2,	-1);
	id = add_enum(-1,"TEE_OBJ_TYPE",0x1100000);
	add_enum_member(id,"TEE_TYPE_GENERIC_SECRET",	0XA0000000,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_MD5",	0XA0000001,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_SHA1",	0XA0000002,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_SHA224",	0XA0000003,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_SHA256",	0XA0000004,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_SHA384",	0XA0000005,	-1);
	add_enum_member(id,"TEE_TYPE_HMAC_SHA512",	0XA0000006,	-1);
	add_enum_member(id,"TEE_TYPE_AES",	0XA0000010,	-1);
	add_enum_member(id,"TEE_TYPE_DES",	0XA0000011,	-1);
	add_enum_member(id,"TEE_TYPE_DES3",	0XA0000013,	-1);
	add_enum_member(id,"TEE_TYPE_RSA_PUBLIC_KEY",	0XA0000030,	-1);
	add_enum_member(id,"TEE_TYPE_DSA_PUBLIC_KEY",	0XA0000031,	-1);
	add_enum_member(id,"TEE_TYPE_ECDSA_PUBLIC_KEY",	0XA0000041,	-1);
	add_enum_member(id,"TEE_TYPE_ECDH_PUBLIC_KEY",	0XA0000042,	-1);
	add_enum_member(id,"TEE_TYPE_CORRUPTED_OBJECT",	0XA00000BE,	-1);
	add_enum_member(id,"TEE_TYPE_DATA",	0XA00000BF,	-1);
	add_enum_member(id,"TEE_TYPE_RSA_KEYPAIR",	0XA1000030,	-1);
	add_enum_member(id,"TEE_TYPE_DSA_KEYPAIR",	0XA1000031,	-1);
	add_enum_member(id,"TEE_TYPE_DH_KEYPAIR",	0XA1000032,	-1);
	add_enum_member(id,"TEE_TYPE_ECDSA_KEYPAIR",	0XA1000041,	-1);
	add_enum_member(id,"TEE_TYPE_ECDH_KEYPAIR",	0XA1000042,	-1);
	id = add_enum(-1,"TEE_Result",0x1100000);
	add_enum_member(id,"TEE_SUCCESS",	0,	-1);
	add_enum_member(id,"TEE_ERROR_CORRUPT_OBJECT",	0XF0100001,	-1);
	add_enum_member(id,"TEE_ERROR_CORRUPT_OBJECT_2",	0XF0100002,	-1);
	add_enum_member(id,"TEE_ERROR_STORAGE_NOT_AVAILABLE",	0XF0100003,	-1);
	add_enum_member(id,"TEE_ERROR_STORAGE_NOT_AVAILABLE_2",	0XF0100004,	-1);
	add_enum_member(id,"TEE_ERROR_GENERIC",	0XFFFF0000,	-1);
	add_enum_member(id,"TEE_ERROR_ACCESS_DENIED",	0XFFFF0001,	-1);
	add_enum_member(id,"TEE_ERROR_CANCEL",	0XFFFF0002,	-1);
	add_enum_member(id,"TEE_ERROR_ACCESS_CONFLICT",	0XFFFF0003,	-1);
	add_enum_member(id,"TEE_ERROR_EXCESS_DATA",	0XFFFF0004,	-1);
	add_enum_member(id,"TEE_ERROR_BAD_FORMAT",	0XFFFF0005,	-1);
	add_enum_member(id,"TEE_ERROR_BAD_PARAMETERS",	0XFFFF0006,	-1);
	add_enum_member(id,"TEE_ERROR_BAD_STATE",	0XFFFF0007,	-1);
	add_enum_member(id,"TEE_ERROR_ITEM_NOT_FOUND",	0XFFFF0008,	-1);
	add_enum_member(id,"TEE_ERROR_NOT_IMPLEMENTED",	0XFFFF0009,	-1);
	add_enum_member(id,"TEE_ERROR_NOT_SUPPORTED",	0XFFFF000A,	-1);
	add_enum_member(id,"TEE_ERROR_NO_DATA",	0XFFFF000B,	-1);
	add_enum_member(id,"TEE_ERROR_OUT_OF_MEMORY",	0XFFFF000C,	-1);
	add_enum_member(id,"TEE_ERROR_BUSY",	0XFFFF000D,	-1);
	add_enum_member(id,"TEE_ERROR_COMMUNICATION",	0XFFFF000E,	-1);
	add_enum_member(id,"TEE_ERROR_SECURITY",	0XFFFF000F,	-1);
	add_enum_member(id,"TEE_ERROR_SHORT_BUFFER",	0XFFFF0010,	-1);
	add_enum_member(id,"TEE_ERROR_EXTERNAL_CANCEL",	0XFFFF0011,	-1);
	add_enum_member(id,"TEE_ERROR_OVERFLOW",	0XFFFF300F,	-1);
	add_enum_member(id,"TEE_ERROR_TARGET_DEAD",	0XFFFF3024,	-1);
	add_enum_member(id,"TEE_ERROR_STORAGE_NO_SPACE",	0XFFFF3041,	-1);
	add_enum_member(id,"TEE_ERROR_MAC_INVALID",	0XFFFF3071,	-1);
	add_enum_member(id,"TEE_ERROR_SIGNATURE_INVALID",	0XFFFF3072,	-1);
	add_enum_member(id,"TEE_ERROR_TIME_NOT_SET",	0XFFFF5000,	-1);
	add_enum_member(id,"TEE_ERROR_TIME_NEEDS_RESET",	0XFFFF5001,	-1);
	id = add_enum(-1,"buf_is_attr",0x1100000);
	add_enum_member(id,"CORE_MEM_SEC",	0,	-1);
	add_enum_member(id,"CORE_MEM_NON_SEC",	0X1,	-1);
	add_enum_member(id,"CORE_MEM_TEE_RAM",	0X2,	-1);
	add_enum_member(id,"CORE_MEM_TA_RAM",	0X3,	-1);
	add_enum_member(id,"CORE_MEM_NSEC_SHM",	0X4,	-1);
	add_enum_member(id,"CORE_MEM_MULTPURPOSE",	0X5,	-1);
	add_enum_member(id,"CORE_MEM_EXTRAM",	0X6,	-1);
	add_enum_member(id,"CORE_MEM_INTRAM",	0X7,	-1);
	add_enum_member(id,"CORE_MEM_CACHED",	0X8,	-1);
	id = add_enum(-1,"thread_state",0x1100000);
	add_enum_member(id,"THREAD_STATE_FREE",	0,	-1);
	add_enum_member(id,"THREAD_STATE_SUSPENDED",	0X1,	-1);
	add_enum_member(id,"THREAD_STATE_ACTIVE",	0X2,	-1);
	id = add_enum(-1,"OPTEE_MSG_CMD",0x1100000);
	add_enum_member(id,"OPTEE_MSG_CMD_OPEN_SESSION",	0,	-1);
	add_enum_member(id,"OPTEE_MSG_CMD_INVOKE_COMMAND",	0X1,	-1);
	add_enum_member(id,"OPTEE_MSG_CMD_CLOSE_SESSION",	0X2,	-1);
	add_enum_member(id,"OPTEE_MSG_CMD_CANCEL",	0X3,	-1);
	add_enum_member(id,"OPTEE_MSG_CMD_REGISTER_SHM",	0X4,	-1);
	add_enum_member(id,"OPTEE_MSG_CMD_UNREGISTER_SHM",	0X5,	-1);
	id = add_enum(-1,"OPTEE_MSG_FUNC",0x1100000);
	add_enum_member(id,"OPTEE_SMC_FAST_CALL_FUNCID_GET_OS_UUID",	0XB2000000,	-1);
	add_enum_member(id,"OPTEE_SMC_FAST_CALL_FUNCID_GET_OS_REVISION",	0XB2000001,	-1);
	add_enum_member(id,"OPTEE_SMC_FAST_CALL_FUNCID_CALL_WITH_ARG",	0XB2000004,	-1);
	add_enum_member(id,"OPTEE_SMC_FAST_CALL_FUNCID_CALLS_UID",	0XB200FF01,	-1);
	add_enum_member(id,"OPTEE_SMC_FAST_CALL_FUNCID_CALLS_REVISION",	0XB200FF03,	-1);
	id = add_enum(-1,"CRYS_ECPKI_DomainID_t",0x1100000);
	add_enum_member(id,"CC_ECPKI_DomainID_secp160k1",	0,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp160r1",	0X1,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp160r2",	0X2,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp192k1",	0X3,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp192r1",	0X4,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp224k1",	0X5,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp224r1",	0X6,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp256k1",	0X7,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp256r1",	0X8,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp384r1",	0X9,	-1);
	add_enum_member(id,"CC_ECPKI_DomainID_secp521r1",	0XA,	-1);
	add_enum_member(id,"CC_ECPKI_DomainIDLast",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"CRYS_HASH_OperationMode_t",0x1100000);
	add_enum_member(id,"CRYS_HASH_SHA1_mode",	0,	-1);
	add_enum_member(id,"CRYS_HASH_SHA224_mode",	0X1,	-1);
	add_enum_member(id,"CRYS_HASH_SHA256_mode",	0X2,	-1);
	add_enum_member(id,"CRYS_HASH_SHA384_mode",	0X3,	-1);
	add_enum_member(id,"CRYS_HASH_SHA512_mode",	0X4,	-1);
	add_enum_member(id,"CRYS_HASH_MD5_mode",	0X5,	-1);
	add_enum_member(id,"CRYS_HASH_NumOfModes",	0X6,	-1);
	add_enum_member(id,"CRYS_HASH_OperationModeLast",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"SaSiError_e",0x1100000);
	add_enum_member(id,"CRYS_AES_MODULE_ERROR_BASE",	0XF00000,	-1);
	add_enum_member(id,"CRYS_DES_MODULE_ERROR_BASE",	0XF00100,	-1);
	add_enum_member(id,"CRYS_HASH_MODULE_ERROR_BASE",	0XF00200,	-1);
	add_enum_member(id,"CRYS_HMAC_MODULE_ERROR_BASE",	0XF00300,	-1);
	add_enum_member(id,"CRYS_RSA_MODULE_ERROR_BASE",	0XF00400,	-1);
	add_enum_member(id,"CRYS_DH_MODULE_ERROR_BASE",	0XF00500,	-1);
	add_enum_member(id,"CRYS_ECPKI_MODULE_ERROR_BASE",	0XF00800,	-1);
	add_enum_member(id,"CRYS_RND_MODULE_ERROR_BASE",	0XF00C00,	-1);
	add_enum_member(id,"CRYS_COMMON_MODULE_ERROR_BASE",	0XF00D00,	-1);
	add_enum_member(id,"CRYS_KDF_MODULE_ERROR_BASE",	0XF01100,	-1);
	add_enum_member(id,"CRYS_HKDF_MODULE_ERROR_BASE",	0XF01100,	-1);
	add_enum_member(id,"CRYS_AESCCM_MODULE_ERROR_BASE",	0XF01500,	-1);
	add_enum_member(id,"CRYS_FIPS_MODULE_ERROR_BASE",	0XF01700,	-1);
	add_enum_member(id,"PKA_MODULE_ERROR_BASE",	0XF02100,	-1);
	add_enum_member(id,"LLF_ECPKI_MODULE_ERROR_BASE",	0XF10800,	-1);
	add_enum_member(id,"LLF_RND_MODULE_ERROR_BASE",	0XF10C00,	-1);
	add_enum_member(id,"CRYS_FATAL_ERROR",	0XF50000,	-1);
	add_enum_member(id,"CRYS_OUT_OF_RESOURCE_ERROR",	0XF50001,	-1);
	add_enum_member(id,"CRYS_ILLEGAL_RESOURCE_VAL_ERROR",	0XF50002,	-1);
	id = add_enum(-1,"CRYS_RND_Error_e",0x1100000);
	add_enum_member(id,"CRYS_RND_DATA_OUT_POINTER_INVALID_ERROR",	0XF00C00,	-1);
	add_enum_member(id,"CRYS_RND_CAN_NOT_GENERATE_RAND_IN_RANGE",	0XF00C01,	-1);
	add_enum_member(id,"CRYS_RND_CPRNG_TEST_FAIL_ERROR",	0XF00C02,	-1);
	add_enum_member(id,"CRYS_RND_ADDITIONAL_INPUT_BUFFER_NULL",	0XF00C03,	-1);
	add_enum_member(id,"CRYS_RND_ADDITIONAL_INPUT_SIZE_ERROR",	0XF00C04,	-1);
	add_enum_member(id,"CRYS_RND_DATA_SIZE_OVERFLOW_ERROR",	0XF00C05,	-1);
	add_enum_member(id,"CRYS_RND_VECTOR_SIZE_ERROR",	0XF00C06,	-1);
	add_enum_member(id,"CRYS_RND_RESEED_COUNTER_OVERFLOW_ERROR",	0XF00C07,	-1);
	add_enum_member(id,"CRYS_RND_INSTANTIATION_NOT_DONE_ERROR",	0XF00C08,	-1);
	add_enum_member(id,"CRYS_RND_TRNG_LOSS_SAMPLES_ERROR",	0XF00C09,	-1);
	add_enum_member(id,"CRYS_RND_TRNG_TIME_EXCEED_ERROR",	0XF00C0A,	-1);
	add_enum_member(id,"CRYS_RND_TRNG_LOSS_SAMPLES_AND_TIME_EXCEED_ERROR",	0XF00C0B,	-1);
	add_enum_member(id,"CRYS_RND_IS_KAT_MODE_ERROR",	0XF00C0C,	-1);
	add_enum_member(id,"CRYS_RND_OPERATION_IS_NOT_SUPPORTED_ERROR",	0XF00C0D,	-1);
	add_enum_member(id,"CRYS_RND_STATE_VALIDATION_TAG_ERROR",	0XF00C0E,	-1);
	add_enum_member(id,"CRYS_RND_IS_NOT_SUPPORTED",	0XF00C0F,	-1);
	add_enum_member(id,"CRYS_RND_GEN_A_ERROR",	0XF00C10,	-1);
	add_enum_member(id,"CRYS_RND_GEN_B_ERROR",	0XF00C11,	-1);
	add_enum_member(id,"CRYS_RND_GEN_C_ERROR",	0XF00C12,	-1);
	add_enum_member(id,"CRYS_RND_ILLEGAL_PARAMS_ACCORDING_TO_PRIV_ERROR",	0XF00C13,	-1);
	add_enum_member(id,"CRYS_RND_GEN_VECTOR_FUNC_ERROR",	0XF00C14,	-1);
	add_enum_member(id,"CRYS_RND_WORK_BUFFER_PTR_INVALID_ERROR",	0XF00C20,	-1);
	add_enum_member(id,"CRYS_RND_ILLEGAL_AES_KEY_SIZE_ERROR",	0XF00C21,	-1);
	add_enum_member(id,"CRYS_RND_ILLEGAL_DATA_PTR_ERROR",	0XF00C22,	-1);
	add_enum_member(id,"CRYS_RND_ILLEGAL_DATA_SIZE_ERROR",	0XF00C23,	-1);
	add_enum_member(id,"CRYS_RND_ILLEGAL_PARAMETER_ERROR",	0XF00C24,	-1);
	add_enum_member(id,"CRYS_RND_STATE_PTR_INVALID_ERROR",	0XF00C25,	-1);
	add_enum_member(id,"CRYS_RND_TRNG_ERRORS_ERROR",	0XF00C26,	-1);
	add_enum_member(id,"CRYS_RND_CONTEXT_PTR_INVALID_ERROR",	0XF00C27,	-1);
	add_enum_member(id,"CRYS_RND_VECTOR_OUT_PTR_ERROR",	0XF00C30,	-1);
	add_enum_member(id,"CRYS_RND_VECTOR_OUT_SIZE_ERROR",	0XF00C31,	-1);
	add_enum_member(id,"CRYS_RND_MAX_VECTOR_IS_TOO_SMALL_ERROR",	0XF00C32,	-1);
	add_enum_member(id,"CRYS_RND_KAT_DATA_PARAMS_ERROR",	0XF00C33,	-1);
	add_enum_member(id,"CRYS_RND_TRNG_KAT_NOT_SUPPORTED_ERROR",	0XF00C34,	-1);
	add_enum_member(id,"CRYS_RND_SRAM_NOT_SUPPORTED_ERROR",	0XF00C35,	-1);
	id = add_enum(-1,"CRYS_ECPKI_HASH_OpMode_t",0x1100000);
	add_enum_member(id,"CRYS_ECPKI_HASH_SHA1_mode",	0,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_SHA224_mode",	0X1,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_SHA256_mode",	0X2,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_SHA384_mode",	0X3,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_SHA512_mode",	0X4,	-1);
	add_enum_member(id,"CRYS_ECPKI_AFTER_HASH_SHA1_mode",	0X5,	-1);
	add_enum_member(id,"CRYS_ECPKI_AFTER_HASH_SHA224_mode",	0X6,	-1);
	add_enum_member(id,"CRYS_ECPKI_AFTER_HASH_SHA256_mode",	0X7,	-1);
	add_enum_member(id,"CRYS_ECPKI_AFTER_HASH_SHA384_mode",	0X8,	-1);
	add_enum_member(id,"CRYS_ECPKI_AFTER_HASH_SHA512_mode",	0X9,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_NumOfModes",	0XA,	-1);
	add_enum_member(id,"CRYS_ECPKI_HASH_OpModeLast",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"CRYS_DH_OpMode_t",0x1100000);
	add_enum_member(id,"CRYS_DH_PKCS3_mode",	0,	-1);
	add_enum_member(id,"CRYS_DH_ANSI_X942_mode",	0X1,	-1);
	add_enum_member(id,"CRYS_DH_NumOfModes",	0X2,	-1);
	add_enum_member(id,"CRYS_DH_OpModeLast",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"SaSiAesOperationMode_t",0x1100000);
	add_enum_member(id,"SASI_AES_MODE_ECB",	0,	-1);
	add_enum_member(id,"SASI_AES_MODE_CBC",	0X1,	-1);
	add_enum_member(id,"SASI_AES_MODE_CBC_MAC",	0X2,	-1);
	add_enum_member(id,"SASI_AES_MODE_CTR",	0X3,	-1);
	add_enum_member(id,"SASI_AES_MODE_XCBC_MAC",	0X4,	-1);
	add_enum_member(id,"SASI_AES_MODE_CMAC",	0X5,	-1);
	add_enum_member(id,"SASI_AES_MODE_XTS",	0X6,	-1);
	add_enum_member(id,"SASI_AES_MODE_CBC_CTS",	0X7,	-1);
	add_enum_member(id,"SASI_AES_MODE_OFB",	0X8,	-1);
	add_enum_member(id,"SASI_AES_NUM_OF_OPERATION_MODES",	0X9,	-1);
	add_enum_member(id,"SASI_AES_OPERATION_MODE_LAST",	0X7FFFFFFF,	-1);
	id = add_enum(-1,"CRYSError_t",0x1100000);
	add_enum_member(id,"CRYS_RSA_INVALID_MODULUS_SIZE",	0XF00400,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MODULUS_POINTER_ERROR",	0XF00401,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_EXPONENT_POINTER_ERROR",	0XF00402,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_PUB_KEY_STRUCT_POINTER_ERROR",	0XF00403,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_PRIV_KEY_STRUCT_POINTER_ERROR",	0XF00404,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_EXPONENT_VAL",	0XF00405,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_EXPONENT_SIZE",	0XF00406,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_POINTER_ERROR",	0XF00407,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_POINTER_ERROR",	0XF00408,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_EXP_PTR_ERROR",	0XF00409,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_EXP_PTR_ERROR",	0XF0040A,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_COEFFICIENT_PTR_ERROR",	0XF0040B,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_SIZE",	0XF0040C,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_SIZE",	0XF0040D,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_AND_SECOND_FACTOR_SIZE",	0XF0040E,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_EXPONENT_VAL",	0XF0040F,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_EXPONENT_VAL",	0XF00410,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_COEFF_VAL",	0XF00411,	-1);
	add_enum_member(id,"CRYS_RSA_DATA_POINTER_INVALID_ERROR",	0XF00412,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MESSAGE_DATA_SIZE",	0XF00413,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MESSAGE_VAL",	0XF00414,	-1);
	add_enum_member(id,"CRYS_RSA_MODULUS_EVEN_ERROR",	0XF00415,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_USER_CONTEXT_POINTER_ERROR",	0XF00416,	-1);
	add_enum_member(id,"CRYS_RSA_HASH_ILLEGAL_OPERATION_MODE_ERROR",	0XF00417,	-1);
	add_enum_member(id,"CRYS_RSA_MGF_ILLEGAL_ARG_ERROR",	0XF00418,	-1);
	add_enum_member(id,"CRYS_RSA_PKCS1_VER_ARG_ERROR",	0XF00419,	-1);
	add_enum_member(id,"CRYS_RSA_PRIV_KEY_VALIDATION_TAG_ERROR",	0XF0041A,	-1);
	add_enum_member(id,"CRYS_RSA_PUB_KEY_VALIDATION_TAG_ERROR",	0XF0041B,	-1);
	add_enum_member(id,"CRYS_RSA_USER_CONTEXT_VALIDATION_TAG_ERROR",	0XF0041C,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_OUTPUT_POINTER_ERROR",	0XF0041D,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_OUTPUT_SIZE_POINTER_ERROR",	0XF0041F,	-1);
	add_enum_member(id,"CRYS_RSA_CONV_TO_CRT_INVALID_TEMP_BUFF_POINTER_ERROR",	0XF00420,	-1);
	add_enum_member(id,"CRYS_RSA_BASE_OAEP_ENCODE_PARAMETER_STRING_TOO_LONG",	0XF00422,	-1);
	add_enum_member(id,"CRYS_RSA_BASE_OAEP_DECODE_PARAMETER_STRING_TOO_LONG",	0XF00423,	-1);
	add_enum_member(id,"CRYS_RSA_BASE_OAEP_ENCODE_MESSAGE_TOO_LONG",	0XF00424,	-1);
	add_enum_member(id,"CRYS_RSA_BASE_OAEP_DECODE_MESSAGE_TOO_LONG",	0XF00425,	-1);
	add_enum_member(id,"CRYS_RSA_KEY_GEN_DATA_STRUCT_POINTER_INVALID",	0XF00426,	-1);
	add_enum_member(id,"CRYS_RSA_PRIM_DATA_STRUCT_POINTER_INVALID",	0XF00427,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MESSAGE_BUFFER_SIZE",	0XF00428,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_SIGNATURE_BUFFER_SIZE",	0XF00429,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MOD_BUFFER_SIZE_POINTER",	0XF0042A,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_EXP_BUFFER_SIZE_POINTER",	0XF0042B,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_SIGNATURE_BUFFER_POINTER",	0XF0042C,	-1);
	add_enum_member(id,"CRYS_RSA_WRONG_PRIVATE_KEY_TYPE",	0XF0042D,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_SIZE_POINTER_ERROR",	0XF0042E,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_SIZE_POINTER_ERROR",	0XF0042F,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_EXP_SIZE_PTR_ERROR",	0XF00430,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_EXP_SIZE_PTR_ERROR",	0XF00431,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_COEFFICIENT_SIZE_PTR_ERROR",	0XF00432,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_SIZE_ERROR",	0XF00433,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_SIZE_ERROR",	0XF00434,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_FIRST_FACTOR_EXP_SIZE_ERROR",	0XF00435,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_SECOND_FACTOR_EXP_SIZE_ERROR",	0XF00436,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_COEFFICIENT_SIZE_ERROR",	0XF00437,	-1);
	add_enum_member(id,"CRYS_RSA_KEY_GEN_CONDITIONAL_TEST_FAIL_ERROR",	0XF00438,	-1);
	add_enum_member(id,"CRYS_RSA_CAN_NOT_GENERATE_RAND_IN_RANGE",	0XF00439,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_CRT_PARAMETR_SIZE_ERROR",	0XF0043A,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MODULUS_ERROR",	0XF00440,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_PTR_ERROR",	0XF00441,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_DECRYPRION_MODE_ERROR",	0XF00442,	-1);
	add_enum_member(id,"CRYS_RSA_GENERATED_PRIV_KEY_IS_TOO_LOW",	0XF00443,	-1);
	add_enum_member(id,"CRYS_RSA_KEY_GENERATION_FAILURE_ERROR",	0XF00444,	-1);
	add_enum_member(id,"CRYS_RSA_ERROR_BER_PARSING",	0XF00451,	-1);
	add_enum_member(id,"CRYS_RSA_ENCODE_15_MSG_OUT_OF_RANGE",	0XF00452,	-1);
	add_enum_member(id,"CRYS_RSA_ENCODE_15_PS_TOO_SHORT",	0XF00453,	-1);
	add_enum_member(id,"CRYS_RSA_PKCS1_15_BLOCK_TYPE_NOT_SUPPORTED",	0XF00454,	-1);
	add_enum_member(id,"CRYS_RSA_15_ERROR_IN_DECRYPTED_BLOCK_PARSING",	0XF00455,	-1);
	add_enum_member(id,"CRYS_RSA_ERROR_IN_RANDOM_OPERATION_FOR_ENCODE",	0XF00456,	-1);
	add_enum_member(id,"CRYS_RSA_ERROR_VER15_INCONSISTENT_VERIFY",	0XF00457,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MESSAGE_DATA_SIZE_IN_NO_HASH_CASE",	0XF00458,	-1);
	add_enum_member(id,"CRYS_RSA_INVALID_MESSAGE_DATA_SIZE_IN_SSL_CASE",	0XF00459,	-1);
	add_enum_member(id,"CRYS_RSA_PKCS15_VERIFY_BER_ENCODING_HASH_TYPE",	0XF00460,	-1);
	add_enum_member(id,"CRYS_RSA_GET_DER_HASH_MODE_ILLEGAL",	0XF00461,	-1);
	add_enum_member(id,"CRYS_RSA_PSS_ENCODING_MODULUS_HASH_SALT_LENGTHS_ERROR",	0XF00480,	-1);
	add_enum_member(id,"CRYS_RSA_BASE_MGF_MASK_TOO_LONG",	0XF00481,	-1);
	add_enum_member(id,"CRYS_RSA_ERROR_PSS_INCONSISTENT_VERIFY",	0XF00482,	-1);
	add_enum_member(id,"CRYS_RSA_OAEP_VER21_MESSAGE_TOO_LONG",	0XF00483,	-1);
	add_enum_member(id,"CRYS_RSA_ERROR_IN_DECRYPTED_BLOCK_PARSING",	0XF00484,	-1);
	add_enum_member(id,"CRYS_RSA_OAEP_DECODE_ERROR",	0XF00485,	-1);
	add_enum_member(id,"CRYS_RSA_15_ERROR_IN_DECRYPTED_DATA_SIZE",	0XF00486,	-1);
	add_enum_member(id,"CRYS_RSA_15_ERROR_IN_DECRYPTED_DATA",	0XF00487,	-1);
	add_enum_member(id,"CRYS_RSA_OAEP_L_POINTER_ERROR",	0XF00488,	-1);
	add_enum_member(id,"CRYS_RSA_DECRYPT_INVALID_OUTPUT_SIZE",	0XF00489,	-1);
	add_enum_member(id,"CRYS_RSA_DECRYPT_OUTPUT_SIZE_POINTER_ERROR",	0XF0048A,	-1);
	add_enum_member(id,"CRYS_RSA_HOST_MSG_GENERAL_RPC_A_ERROR",	0XF00490,	-1);
	add_enum_member(id,"CRYS_RSA_HOST_MSG_GENERAL_RPC_B_ERROR",	0XF00491,	-1);
	add_enum_member(id,"CRYS_RSA_HOST_MSG_GENERAL_RPC_C_ERROR",	0XF00492,	-1);
	add_enum_member(id,"CRYS_RSA_ILLEGAL_PARAMS_ACCORDING_TO_PRIV_ERROR",	0XF00493,	-1);
	add_enum_member(id,"CRYS_RSA_IS_NOT_SUPPORTED",	0XF004FF,	-1);
	id = add_enum(-1,"ltc_asn1_type",0x1100000);
	add_enum_member(id,"LTC_ASN1_EOL",	0,	-1);
	add_enum_member(id,"LTC_ASN1_BOOLEAN",	0X1,	-1);
	add_enum_member(id,"LTC_ASN1_INTEGER",	0X2,	-1);
	add_enum_member(id,"LTC_ASN1_SHORT_INTEGER",	0X3,	-1);
	add_enum_member(id,"LTC_ASN1_BIT_STRING",	0X4,	-1);
	add_enum_member(id,"LTC_ASN1_OCTET_STRING",	0X5,	-1);
	add_enum_member(id,"LTC_ASN1_NULL",	0X6,	-1);
	add_enum_member(id,"LTC_ASN1_OBJECT_IDENTIFIER",	0X7,	-1);
	add_enum_member(id,"LTC_ASN1_IA5_STRING",	0X8,	-1);
	add_enum_member(id,"LTC_ASN1_PRINTABLE_STRING",	0X9,	-1);
	add_enum_member(id,"LTC_ASN1_UTF8_STRING",	0XA,	-1);
	add_enum_member(id,"LTC_ASN1_UTCTIME",	0XB,	-1);
	add_enum_member(id,"LTC_ASN1_CHOICE",	0XC,	-1);
	add_enum_member(id,"LTC_ASN1_SEQUENCE",	0XD,	-1);
	add_enum_member(id,"LTC_ASN1_SET",	0XE,	-1);
	add_enum_member(id,"LTC_ASN1_SETOF",	0XF,	-1);
	add_enum_member(id,"LTC_ASN1_RAW_BIT_STRING",	0X10,	-1);
	add_enum_member(id,"LTC_ASN1_TELETEX_STRING",	0X11,	-1);
	add_enum_member(id,"LTC_ASN1_CONSTRUCTED",	0X12,	-1);
	add_enum_member(id,"LTC_ASN1_CONTEXT_SPECIFIC",	0X13,	-1);
	id = add_enum(-1,"tee_smc_defines",0x1100000);
	add_enum_member(id,"OPTEE_SMC_CALL_GET_OS_UUID",	0XB2000000,	-1);
	add_enum_member(id,"OPTEE_SMC_CALL_GET_OS_REVISION",	0XB2000001,	-1);
	add_enum_member(id,"OPTEE_SMC_GET_SHM_CONFIG",	0XB2000007,	-1);
	add_enum_member(id,"OPTEE_SMC_L2CC_MUTEX",	0XB2000008,	-1);
	add_enum_member(id,"OPTEE_SMC_EXCHANGE_CAPABILITIES",	0XB2000009,	-1);
	add_enum_member(id,"OPTEE_SMC_DISABLE_SHM_CACHE",	0XB200000A,	-1);
	add_enum_member(id,"OPTEE_SMC_ENABLE_SHM_CACHE",	0XB200000B,	-1);
	add_enum_member(id,"OPTEE_SMC_BOOT_SECONDARY",	0XB200000C,	-1);
	add_enum_member(id,"OPTEE_SMC_CUSTOM_READ_PHYS",	0XB200000D,	-1);
	add_enum_member(id,"OPTEE_SMC_CUSTOM_WRITE_PHYS",	0XB200000E,	-1);
	add_enum_member(id,"OPTEE_SMC_CALLS_COUNT",	0XBF00FF00,	-1);
	add_enum_member(id,"OPTEE_SMC_CALLS_UID",	0XBF00FF01,	-1);
	add_enum_member(id,"OPTEE_SMC_CALLS_REVISION",	0XBF00FF03,	-1);
	add_enum_member(id,"OPTEE_SMC_RETURN_UNKNOWN_FUNCTION",	0XFFFFFFFF,	-1);
	id = add_enum(-1,"eagle_memory_map",0x1100000);
	set_enum_cmt(id,"physical memory addresses",1);
	add_enum_member(id,"MEMMAP_UNKNxF0A07000",	0XF0A07000,	-1);
	add_enum_member(id,"MEMMAP_UNKNxF0A401E0",	0XF0A401E0,	-1);
	add_enum_member(id,"MEMMAP_UNKNxF0A50000",	0XF0A50000,	-1);
	add_enum_member(id,"MEMMAP_CC310_BASE",	0XF0E00000,	-1);
	set_enum_member_cmt(get_enum_member(id,0XF0E00000,0,-1),"memory used by CryptoCell API; block size 0x100000",1);
	add_enum_member(id,"MEMMAP_CC310_xF0E00AA4",	0XF0E00AA4,	-1);
	add_enum_member(id,"MEMMAP_CC310_xF0E00AA8",	0XF0E00AA8,	-1);
	add_enum_member(id,"MEMMAP_CC310_xF0E00AAC",	0XF0E00AAC,	-1);
	add_enum_member(id,"MEMMAP_CC310_xF0E00AB0",	0XF0E00AB0,	-1);
	add_enum_member(id,"MEMMAP_CC310_xF0E00AB4",	0XF0E00AB4,	-1);
	add_enum_member(id,"MEMMAP_GIC_BASE",	0XFF000000,	-1);
	set_enum_member_cmt(get_enum_member(id,0XFF000000,0,-1),"Generic Interrupt Controller",1);
	add_enum_member(id,"MEMMAP_GICD_OFFSET",	0XFF001000,	-1);
	add_enum_member(id,"MEMMAP_GICC_OFFSET",	0XFF002000,	-1);
	add_enum_member(id,"MEMMAP_UNKNxFFFC0000",	0XFFFC0000,	-1);
	set_enum_member_cmt(get_enum_member(id,0XFFFC0000,0,-1),"block size 0x30000",1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("ltc_ecc_set_type");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "const char *");
	SetType(get_member_id(id, 0x8), "const char *");
	SetType(get_member_id(id, 0xC), "const char *");
	SetType(get_member_id(id, 0x10), "const char *");
	SetType(get_member_id(id, 0x14), "const char *");
	SetType(get_member_id(id, 0x18), "const char *");
	id = get_struc_id("ltc_prng_descriptor");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(struct prng_state *prng)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(const unsigned __int8 *in, unsigned int inlen, struct prng_state *prng)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(struct prng_state *prng)");
	SetType(get_member_id(id, 0x14), "unsigned int (__cdecl *)(unsigned __int8 *out, unsigned int outlen, struct prng_state *prng)");
	SetType(get_member_id(id, 0x18), "int (__cdecl *)(struct prng_state *prng)");
	SetType(get_member_id(id, 0x1C), "int (__cdecl *)(unsigned __int8 *out, unsigned int *outlen, struct prng_state *prng)");
	SetType(get_member_id(id, 0x20), "int (__cdecl *)(const unsigned __int8 *in, unsigned int inlen, struct prng_state *prng)");
	SetType(get_member_id(id, 0x24), "int (*)(void)");
	id = get_struc_id("ltc_hash_descriptor");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "unsigned __int8");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "unsigned int");
	SetType(get_member_id(id, 0x10), "unsigned int[16]");
	SetType(get_member_id(id, 0x50), "unsigned int");
	SetType(get_member_id(id, 0x54), "int (__cdecl *)(struct hash_state *hash)");
	SetType(get_member_id(id, 0x58), "int (__cdecl *)(struct hash_state *hash, const unsigned __int8 *in, unsigned int inlen)");
	SetType(get_member_id(id, 0x5C), "int (__cdecl *)(struct hash_state *hash, unsigned __int8 *out)");
	SetType(get_member_id(id, 0x60), "int (*)(void)");
	SetType(get_member_id(id, 0x64), "int (__cdecl *)(const unsigned __int8 *key, unsigned int keylen, const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen)");
	id = get_struc_id("tee_vendor_props");
	SetType(get_member_id(id, 0x0), "const struct tee_props *");
	SetType(get_member_id(id, 0x4), "size_t");
	id = get_struc_id("tee_props");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "const uint32_t");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(struct tee_ta_session *sess, void *buf, size_t *blen)");
	SetType(get_member_id(id, 0xC), "const void *");
	SetType(get_member_id(id, 0x10), "const size_t");
	id = get_struc_id("attr_ops_s");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(void *attr, const void *buffer, size_t size)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *attr, struct tee_ta_session *sess, void *buffer, uint64_t *size)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void *attr, void *data, size_t data_len, size_t *offs)");
	SetType(get_member_id(id, 0xC), "bool (__cdecl *)(void *attr, const void *data, size_t data_len, size_t *offs)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(void *attr, void *src_attr)");
	SetType(get_member_id(id, 0x14), "void (__cdecl *)(void *attr)");
	SetType(get_member_id(id, 0x18), "void (__cdecl *)(void *attr)");
	id = get_struc_id("thread_specific_data");
	SetType(get_member_id(id, 0x0), "struct TAILQ_HEAD_tee_ta_session");
	SetType(get_member_id(id, 0x8), "struct tee_ta_ctx *");
	SetType(get_member_id(id, 0xC), "struct pgt_cache");
	id = get_struc_id("itr_ops_s");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(struct itr_chip *chip, size_t it, uint32_t flags)");
	SetType(get_member_id(id, 0x4), "void (__cdecl *)(struct itr_chip *chip, size_t it)");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(struct itr_chip *chip, size_t it)");
	id = get_struc_id("tee_file_operations");
	SetType(get_member_id(id, 0x0), "int (*)(int *errno, const char *file, int flags, ...)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(int fd)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(int *errno, int fd, void *buf, size_t len)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(int *errno, int fd, const void *buf, size_t len)");
	SetType(get_member_id(id, 0x10), "size_t (__cdecl *)(int *errno, int fd, size_t offset, int whence)");
	SetType(get_member_id(id, 0x14), "int (__cdecl *)(const char *fnold, const char *fnnew)");
	SetType(get_member_id(id, 0x18), "int (__cdecl *)(const char *file)");
	SetType(get_member_id(id, 0x1C), "int (__cdecl *)(int *errno, int fd, size_t length)");
	SetType(get_member_id(id, 0x20), "int (__cdecl *)(const char *path, uint32_t mode)");
	SetType(get_member_id(id, 0x24), "struct tee_fs_dir *(__cdecl *)(const char *name)");
	SetType(get_member_id(id, 0x28), "int (__cdecl *)(struct tee_fs_dir *d)");
	SetType(get_member_id(id, 0x2C), "struct tee_fs_dirent *(__cdecl *)(struct tee_fs_dir *d)");
	SetType(get_member_id(id, 0x30), "int (__cdecl *)(const char *pathname)");
	SetType(get_member_id(id, 0x34), "int (__cdecl *)(const char *name, int mode)");
	id = get_struc_id("hash_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(uint32_t algo, size_t *size)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *ctx, uint32_t algo)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void *ctx, uint32_t algo, const uint8_t *data, size_t len)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(void *ctx, uint32_t algo, uint8_t *digest, size_t len)");
	id = get_struc_id("cipher_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(uint32_t algo, size_t *size)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *ctx, uint32_t algo, TEE_OperationMode mode, const uint8_t *key1, size_t key1_len, const uint8_t *key2, size_t key2_len, const uint8_t *iv, size_t iv_len)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void *ctx, uint32_t algo, TEE_OperationMode mode, bool last_block, const uint8_t *data, size_t len, uint8_t *dst)");
	SetType(get_member_id(id, 0xC), "void (__cdecl *)(void *ctx, uint32_t algo)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(uint32_t algo, size_t *size)");
	id = get_struc_id("mac_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(uint32_t algo, size_t *size)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *ctx, uint32_t algo, const uint8_t *key, size_t len)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void *ctx, uint32_t algo, const uint8_t *data, size_t len)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(void *ctx, uint32_t algo, uint8_t *digest, size_t digest_len)");
	id = get_struc_id("authenc_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(uint32_t algo, size_t *size)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *ctx, uint32_t algo, TEE_OperationMode mode, const uint8_t *key, size_t key_len, const uint8_t *nonce, size_t nonce_len, size_t tag_len, size_t aad_len, size_t payload_len)");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void *ctx, uint32_t algo, TEE_OperationMode mode, const uint8_t *data, size_t len)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(void *ctx, uint32_t algo, TEE_OperationMode mode, const uint8_t *src_data, size_t src_len, uint8_t *dst_data, size_t *dst_len)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(void *ctx, uint32_t algo, const uint8_t *src_data, size_t src_len, uint8_t *dst_data, size_t *dst_len, uint8_t *dst_tag, size_t *dst_tag_len)");
	SetType(get_member_id(id, 0x14), "int (__cdecl *)(void *ctx, uint32_t algo, const uint8_t *src_data, size_t src_len, uint8_t *dst_data, size_t *dst_len, const uint8_t *tag, size_t tag_len)");
	SetType(get_member_id(id, 0x18), "void (__cdecl *)(void *ctx, uint32_t algo)");
	id = get_struc_id("acipher_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(struct rsa_keypair *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(struct rsa_public_key *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(struct rsa_public_key *s)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(struct dsa_keypair *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(struct dsa_public_key *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x14), "int (__cdecl *)(struct dh_keypair *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x18), "int (__cdecl *)(struct ecc_public_key *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x1C), "int (__cdecl *)(struct ecc_keypair *s, size_t key_size_bits)");
	SetType(get_member_id(id, 0x20), "void (__cdecl *)(struct ecc_public_key *s)");
	SetType(get_member_id(id, 0x24), "int (__cdecl *)(struct rsa_keypair *key, size_t key_size)");
	SetType(get_member_id(id, 0x28), "int (__cdecl *)(struct dsa_keypair *key, size_t key_size)");
	SetType(get_member_id(id, 0x2C), "int (__cdecl *)(struct dh_keypair *key, struct bignum *q, size_t xbits)");
	SetType(get_member_id(id, 0x30), "int (__cdecl *)(struct ecc_keypair *key)");
	SetType(get_member_id(id, 0x34), "int (__cdecl *)(struct dh_keypair *private_key, struct bignum *public_key, struct bignum *secret)");
	SetType(get_member_id(id, 0x38), "int (__cdecl *)(struct rsa_keypair *key, const uint8_t *src, size_t src_len, uint8_t *dst, size_t *dst_len)");
	SetType(get_member_id(id, 0x3C), "int (__cdecl *)(struct rsa_public_key *key, const uint8_t *src, size_t src_len, uint8_t *dst, size_t *dst_len)");
	SetType(get_member_id(id, 0x40), "int (__cdecl *)(uint32_t algo, struct rsa_keypair *key, const uint8_t *label, size_t label_len, const uint8_t *src, size_t src_len, uint8_t *dst, size_t *dst_len)");
	SetType(get_member_id(id, 0x44), "int (__cdecl *)(uint32_t algo, struct rsa_public_key *key, const uint8_t *label, size_t label_len, const uint8_t *src, size_t src_len, uint8_t *dst, size_t *dst_len)");
	SetType(get_member_id(id, 0x48), "int (__cdecl *)(uint32_t algo, struct rsa_keypair *key, int salt_len, const uint8_t *msg, size_t msg_len, uint8_t *sig, size_t *sig_len)");
	SetType(get_member_id(id, 0x4C), "int (__cdecl *)(uint32_t algo, struct rsa_public_key *key, int salt_len, const uint8_t *msg, size_t msg_len, const uint8_t *sig, size_t sig_len)");
	SetType(get_member_id(id, 0x50), "int (__cdecl *)(uint32_t algo, struct dsa_keypair *key, const uint8_t *msg, size_t msg_len, uint8_t *sig, size_t *sig_len)");
	SetType(get_member_id(id, 0x54), "int (__cdecl *)(uint32_t algo, struct dsa_public_key *key, const uint8_t *msg, size_t msg_len, const uint8_t *sig, size_t sig_len)");
	SetType(get_member_id(id, 0x58), "int (__cdecl *)(uint32_t algo, struct ecc_keypair *key, const uint8_t *msg, size_t msg_len, uint8_t *sig, size_t *sig_len)");
	SetType(get_member_id(id, 0x5C), "int (__cdecl *)(uint32_t algo, struct ecc_public_key *key, const uint8_t *msg, size_t msg_len, const uint8_t *sig, size_t sig_len)");
	SetType(get_member_id(id, 0x60), "int (__cdecl *)(struct ecc_keypair *private_key, struct ecc_public_key *public_key, void *secret, unsigned int *secret_len)");
	id = get_struc_id("bignum_ops");
	SetType(get_member_id(id, 0x0), "struct bignum *(__cdecl *)(size_t size_bits)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(const uint8_t *from, size_t fromsize, struct bignum *to)");
	SetType(get_member_id(id, 0x8), "size_t (__cdecl *)(struct bignum *a)");
	SetType(get_member_id(id, 0xC), "size_t (__cdecl *)(struct bignum *a)");
	SetType(get_member_id(id, 0x10), "void (__cdecl *)(const struct bignum *from, uint8_t *to)");
	SetType(get_member_id(id, 0x14), "void (__cdecl *)(struct bignum *to, const struct bignum *from)");
	SetType(get_member_id(id, 0x18), "void (__cdecl *)(struct bignum *a)");
	SetType(get_member_id(id, 0x1C), "void (__cdecl *)(struct bignum *a)");
	SetType(get_member_id(id, 0x20), "int32_t (__cdecl *)(struct bignum *a, struct bignum *b)");
	id = get_struc_id("prng_ops");
	SetType(get_member_id(id, 0x0), "int (__cdecl *)(const uint8_t *inbuf, size_t len)");
	SetType(get_member_id(id, 0x4), "int (__cdecl *)(void *buf, size_t blen)");
	id = get_struc_id("tee_mmu_info");
	SetType(get_member_id(id, 0x0), "struct tee_mmap_region *");
	SetType(get_member_id(id, 0x4), "size_t");
	SetType(get_member_id(id, 0x8), "uint32_t");
	SetType(get_member_id(id, 0xC), "uint32_t");
	id = get_struc_id("user_ta_ctx");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "size_t");
	SetType(get_member_id(id, 0x8), "bool");
	SetType(get_member_id(id, 0xC), "struct tee_ta_session_head");
	SetType(get_member_id(id, 0x14), "struct tee_cryp_state_head");
	SetType(get_member_id(id, 0x1C), "struct tee_obj_head");
	SetType(get_member_id(id, 0x24), "struct tee_storage_enum_head");
	SetType(get_member_id(id, 0x2C), "tee_mm_entry_t *");
	SetType(get_member_id(id, 0x30), "tee_mm_entry_t *");
	SetType(get_member_id(id, 0x34), "uint32_t");
	SetType(get_member_id(id, 0x38), "uint32_t");
	SetType(get_member_id(id, 0x3C), "struct tee_mmu_info *");
	SetType(get_member_id(id, 0x40), "void *");
	SetType(get_member_id(id, 0x44), "struct tee_pager_area_head *");
	SetType(get_member_id(id, 0x48), "struct tee_se_service *");
	SetType(get_member_id(id, 0x4C), "struct thread_user_vfp_state");
	SetType(get_member_id(id, 0x15C), "struct tee_ta_ctx");
	id = get_struc_id("tee_ta_session_head");
	SetType(get_member_id(id, 0x0), "struct tee_ta_session *");
	SetType(get_member_id(id, 0x4), "struct tee_ta_session *");
	id = get_struc_id("tee_cryp_state_head");
	SetType(get_member_id(id, 0x0), "struct tee_cryp_state *");
	SetType(get_member_id(id, 0x4), "struct tee_cryp_state *");
	id = get_struc_id("tee_obj_head");
	SetType(get_member_id(id, 0x0), "struct tee_obj *");
	SetType(get_member_id(id, 0x4), "struct tee_obj *");
	id = get_struc_id("tee_storage_enum_head");
	SetType(get_member_id(id, 0x0), "struct tee_storage_enum *");
	SetType(get_member_id(id, 0x4), "struct tee_storage_enum *");
	id = get_struc_id("thread_user_vfp_state");
	SetType(get_member_id(id, 0x108), "bool");
	SetType(get_member_id(id, 0x109), "bool");
	id = get_struc_id("vfp_state");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint32_t");
	SetType(get_member_id(id, 0x8), "struct vfp_reg[32]");
	id = get_struc_id("vfp_reg");
	SetType(get_member_id(id, 0x0), "uint64_t");
	id = get_struc_id("tee_ta_ctx");
	SetType(get_member_id(id, 0x0), "struct TEE_UUID");
	SetType(get_member_id(id, 0x10), "struct tee_ta_ops *");
	SetType(get_member_id(id, 0x14), "uint32_t");
	SetType(get_member_id(id, 0x18), "struct TAILQ_ENTRY_tee_ta_ctx");
	SetType(get_member_id(id, 0x20), "uint32_t");
	SetType(get_member_id(id, 0x24), "uint32_t");
	SetType(get_member_id(id, 0x28), "uint32_t");
	SetType(get_member_id(id, 0x2C), "bool");
	SetType(get_member_id(id, 0x30), "struct condvar");
	id = get_struc_id("TEE_UUID");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint16_t");
	SetType(get_member_id(id, 0x6), "uint16_t");
	SetType(get_member_id(id, 0x8), "uint8_t[8]");
	id = get_struc_id("TAILQ_ENTRY_tee_ta_ctx");
	SetType(get_member_id(id, 0x0), "struct tee_ta_ctx *");
	SetType(get_member_id(id, 0x4), "struct tee_ta_ctx *");
	id = get_struc_id("condvar");
	SetType(get_member_id(id, 0x0), "unsigned int");
	SetType(get_member_id(id, 0x4), "struct mutex *");
	id = get_struc_id("tee_ta_session");
	SetType(get_member_id(id, 0x0), "TAILQ_ENTRY_tee_ta_session");
	SetType(get_member_id(id, 0x8), "TAILQ_ENTRY_tee_ta_session");
	SetType(get_member_id(id, 0x10), "struct tee_ta_ctx *");
	SetType(get_member_id(id, 0x14), "struct TEE_Identity");
	SetType(get_member_id(id, 0x28), "bool");
	SetType(get_member_id(id, 0x2C), "bool");
	SetType(get_member_id(id, 0x30), "struct TEE_Time");
	SetType(get_member_id(id, 0x38), "void *");
	SetType(get_member_id(id, 0x3C), "uint32_t");
	SetType(get_member_id(id, 0x40), "struct condvar");
	SetType(get_member_id(id, 0x48), "struct condvar");
	SetType(get_member_id(id, 0x50), "int");
	SetType(get_member_id(id, 0x54), "bool");
	id = get_struc_id("TAILQ_ENTRY_tee_ta_session");
	SetType(get_member_id(id, 0x0), "struct tee_ta_session *");
	SetType(get_member_id(id, 0x4), "struct tee_ta_session *");
	id = get_struc_id("TEE_Identity");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "TEE_UUID");
	id = get_struc_id("TEE_Time");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint32_t");
	id = get_struc_id("thread_ctx");
	SetType(get_member_id(id, 0x0), "struct thread_ctx_regs");
	SetType(get_member_id(id, 0x50), "enum thread_state");
	SetType(get_member_id(id, 0x54), "uint32_t");
	SetType(get_member_id(id, 0x58), "uint32_t");
	SetType(get_member_id(id, 0x5C), "uint32_t");
	SetType(get_member_id(id, 0x60), "struct core_mmu_user_map");
	SetType(get_member_id(id, 0x70), "struct thread_vfp_state");
	SetType(get_member_id(id, 0x28C), "void *");
	SetType(get_member_id(id, 0x290), "uint64_t");
	SetType(get_member_id(id, 0x2A8), "struct thread_specific_data");
	id = get_struc_id("thread_ctx_regs");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint32_t");
	SetType(get_member_id(id, 0x8), "uint32_t");
	SetType(get_member_id(id, 0xC), "uint32_t");
	SetType(get_member_id(id, 0x10), "uint32_t");
	SetType(get_member_id(id, 0x14), "uint32_t");
	SetType(get_member_id(id, 0x18), "uint32_t");
	SetType(get_member_id(id, 0x1C), "uint32_t");
	SetType(get_member_id(id, 0x20), "uint32_t");
	SetType(get_member_id(id, 0x24), "uint32_t");
	SetType(get_member_id(id, 0x28), "uint32_t");
	SetType(get_member_id(id, 0x2C), "uint32_t");
	SetType(get_member_id(id, 0x30), "uint32_t");
	SetType(get_member_id(id, 0x34), "uint32_t");
	SetType(get_member_id(id, 0x38), "uint32_t");
	SetType(get_member_id(id, 0x3C), "uint32_t");
	SetType(get_member_id(id, 0x40), "uint32_t");
	SetType(get_member_id(id, 0x44), "uint32_t");
	SetType(get_member_id(id, 0x48), "uint32_t");
	SetType(get_member_id(id, 0x4C), "uint32_t");
	id = get_struc_id("core_mmu_user_map");
	id = get_struc_id("TAILQ_HEAD_tee_ta_session");
	SetType(get_member_id(id, 0x0), "struct tee_ta_session *");
	SetType(get_member_id(id, 0x4), "struct tee_ta_session *");
	id = get_struc_id("pgt_cache");
	SetType(get_member_id(id, 0x0), "struct pgt *");
	id = get_struc_id("thread_vfp_state");
	SetType(get_member_id(id, 0x0), "bool");
	SetType(get_member_id(id, 0x1), "bool");
	SetType(get_member_id(id, 0x2), "bool");
	SetType(get_member_id(id, 0x4), "struct vfp_state");
	SetType(get_member_id(id, 0x10C), "struct vfp_state");
	SetType(get_member_id(id, 0x218), "struct thread_user_vfp_state *");
	id = get_struc_id("tee_ta_ops");
	SetType(get_member_id(id, 0x0), "enum TEE_Result (__cdecl *)(struct tee_ta_session *s, struct tee_ta_param *param, struct TEE_ErrorOrigin *eo)");
	SetType(get_member_id(id, 0x4), "enum TEE_Result (__cdecl *)(struct tee_ta_session *s, uint32_t cmd, struct tee_ta_param *param, struct TEE_ErrorOrigin *eo)");
	SetType(get_member_id(id, 0x8), "void (__cdecl *)(struct tee_ta_session *s)");
	SetType(get_member_id(id, 0xC), "void (__cdecl *)(struct tee_ta_ctx *ctx)");
	SetType(get_member_id(id, 0x10), "void (__cdecl *)(struct tee_ta_ctx *ctx)");
	id = get_struc_id("tee_mm_entry_t");
	SetType(get_member_id(id, 0x0), "struct tee_mm_pool_t *");
	SetType(get_member_id(id, 0x4), "struct tee_mm_entry_t *");
	SetType(get_member_id(id, 0x8), "uint32_t");
	SetType(get_member_id(id, 0xC), "uint32_t");
	id = get_struc_id("thread_handlers");
	SetType(get_member_id(id, 0x0), "thread_smc_handler_t");
	SetType(get_member_id(id, 0x4), "thread_smc_handler_t");
	SetType(get_member_id(id, 0x8), "thread_fiq_handler_t");
	SetType(get_member_id(id, 0xC), "thread_pm_handler_t");
	SetType(get_member_id(id, 0x10), "thread_pm_handler_t");
	SetType(get_member_id(id, 0x14), "thread_pm_handler_t");
	SetType(get_member_id(id, 0x18), "thread_pm_handler_t");
	SetType(get_member_id(id, 0x1C), "thread_pm_handler_t");
	SetType(get_member_id(id, 0x20), "thread_pm_handler_t");
	id = get_struc_id("time_source");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "uint32_t");
	SetType(get_member_id(id, 0x8), "enum TEE_Result (__cdecl *)(struct TEE_Time *time)");
	id = get_struc_id("thread_core_local_s");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("pgt");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x4), "struct SLIST_ENTRY__pgt");
	id = get_struc_id("SLIST_ENTRY__pgt");
	SetType(get_member_id(id, 0x0), "struct pgt *");
	id = get_struc_id("CRYS_ECPKI_Domain_t");
	SetType(get_member_id(id, 0x0), "uint32_t[18]");
	SetType(get_member_id(id, 0x48), "uint32_t[18]");
	SetType(get_member_id(id, 0x90), "uint32_t[18]");
	SetType(get_member_id(id, 0xD8), "uint32_t[19]");
	SetType(get_member_id(id, 0x124), "uint32_t[18]");
	SetType(get_member_id(id, 0x16C), "uint32_t[18]");
	SetType(get_member_id(id, 0x1B4), "uint32_t");
	SetType(get_member_id(id, 0x1B8), "uint32_t[64]");
	SetType(get_member_id(id, 0x2B8), "uint32_t");
	SetType(get_member_id(id, 0x2BC), "uint32_t");
	SetType(get_member_id(id, 0x2C0), "uint32_t");
	SetType(get_member_id(id, 0x2C4), "CRYS_ECPKI_DomainID_t");
	SetType(get_member_id(id, 0x2C8), "char[20]");
	id = get_struc_id("CRYS_RND_WorkBuff_t");
	SetType(get_member_id(id, 0x0), "uint32_t[1528]");
	id = get_struc_id("CRYS_HASHUserContext_t");
	SetType(get_member_id(id, 0x0), "uint32_t[60]");
	id = get_struc_id("CRYS_RND_State_t");
	SetType(get_member_id(id, 0x0), "uint32_t[12]");
	SetType(get_member_id(id, 0x30), "uint32_t[4]");
	SetType(get_member_id(id, 0x40), "uint32_t[15]");
	SetType(get_member_id(id, 0x7C), "uint32_t[16]");
	SetType(get_member_id(id, 0xBC), "uint32_t");
	SetType(get_member_id(id, 0xC0), "uint32_t");
	SetType(get_member_id(id, 0xC4), "uint32_t");
	SetType(get_member_id(id, 0xC8), "uint32_t");
	SetType(get_member_id(id, 0xCC), "uint32_t");
	SetType(get_member_id(id, 0xD0), "uint32_t");
	SetType(get_member_id(id, 0xD4), "uint32_t");
	SetType(get_member_id(id, 0xD8), "uint32_t");
	id = get_struc_id("CRYS_ECPKI_UserPrivKey_t");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint32_t[203]");
	id = get_struc_id("CRYS_DH_Temp_t");
	SetType(get_member_id(id, 0x0), "CRYS_RSAPrimeData_t");
	id = get_struc_id("CRYS_RSAPrimeData_t");
	SetType(get_member_id(id, 0x0), "uint32_t[66]");
	SetType(get_member_id(id, 0x108), "uint32_t[66]");
	SetType(get_member_id(id, 0x210), "uint8_t[632]");
	id = get_struc_id("CRYS_RSAUserPubKey_t");
	SetType(get_member_id(id, 0x0), "uint32_t");
	id = get_struc_id("CRYS_ECPKI_BUILD_TempData_t");
	SetType(get_member_id(id, 0x0), "uint32_t[418]");
	id = get_struc_id("CRYS_ECPKI_UserPublKey_t");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "uint32_t[220]");
	id = get_struc_id("CRYS_RND_Context_t");
	SetType(get_member_id(id, 0x0), "CRYS_RND_State_t");
	SetType(get_member_id(id, 0xDC), "SaSiRndGenerateVectWorkFunc_t");
	id = get_struc_id("ECDSA_SignContext_t");
	SetType(get_member_id(id, 0x0), "struct CRYS_ECPKI_UserPrivKey_t");
	SetType(get_member_id(id, 0x330), "uint32_t[240]");
	SetType(get_member_id(id, 0x6F0), "uint32_t[16]");
	SetType(get_member_id(id, 0x730), "uint32_t");
	SetType(get_member_id(id, 0x734), "enum CRYS_ECPKI_HASH_OpMode_t");
	SetType(get_member_id(id, 0x738), "uint32_t[281]");
	id = get_struc_id("CRYS_ECDSA_SignUserContext_t");
	SetType(get_member_id(id, 0x102C), "uint32_t");
	id = get_struc_id("SaSiAesUserContext_t");
	SetType(get_member_id(id, 0x0), "uint32_t[19]");
	id = get_struc_id("CRYS_RSAKGFipsContext_t");
	SetType(get_member_id(id, 0x0), "struct CRYS_RSAPrimeData_t");
	SetType(get_member_id(id, 0x488), "uint8_t[22]");
	SetType(get_member_id(id, 0x49E), "uint8_t[256]");
	id = get_struc_id("CRYS_RSAUserPrivKey_t");
	SetType(get_member_id(id, 0x0), "uint32_t");
	id = get_struc_id("CRYS_RSAKGData_t");
	SetType(get_member_id(id, 0x0), "uint32_t[33]");
	SetType(get_member_id(id, 0x84), "uint32_t[33]");
	SetType(get_member_id(id, 0x108), "uint32_t[198]");
	id = get_struc_id("CRYS_ECDH_TempData_t");
	SetType(get_member_id(id, 0x0), "uint32_t[211]");
	id = get_struc_id("CRYS_HMACUserContext_t");
	SetType(get_member_id(id, 0x0), "uint32_t[94]");
	id = get_struc_id("ImgRSAPublicKey");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int[64]");
	SetType(get_member_id(id, 0x108), "int[64]");
	SetType(get_member_id(id, 0x208), "int");
	id = get_struc_id("struc_FF10_fld28");
	id = get_struc_id("struc_FF10");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x18), "void *");
	SetType(get_member_id(id, 0x28), "struct struc_FF10_fld28[]");
	id = get_struc_id("mpa_num_base");
	SetType(get_member_id(id, 0x0), "uint32_t");
	SetType(get_member_id(id, 0x4), "int32_t");
	SetType(get_member_id(id, 0x8), "uint32_t");
	id = get_struc_id("ltc_math_descriptor");
	SetType(get_member_id(id, 0x0), "const char *");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int (__cdecl *)(void **a)");
	SetType(get_member_id(id, 0xC), "int (__cdecl *)(int size_bits, void **a)");
	SetType(get_member_id(id, 0x10), "int (__cdecl *)(void **dst, void *src)");
	SetType(get_member_id(id, 0x14), "void (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x18), "int (__cdecl *)(void *src, void *dst)");
	SetType(get_member_id(id, 0x1C), "int (__cdecl *)(void *src, void *dst)");
	SetType(get_member_id(id, 0x20), "int (__cdecl *)(void *a, unsigned int n)");
	SetType(get_member_id(id, 0x24), "unsigned int (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x28), "uint32_t (__cdecl *)(void *a, int n)");
	SetType(get_member_id(id, 0x2C), "int (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x30), "int (__cdecl *)(void *a, void *b)");
	SetType(get_member_id(id, 0x34), "int (__cdecl *)(void *a, unsigned int n)");
	SetType(get_member_id(id, 0x38), "int (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x3C), "int (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x40), "int (__cdecl *)(void *a, int n)");
	SetType(get_member_id(id, 0x44), "int (__cdecl *)(void *a, const char *str, int radix)");
	SetType(get_member_id(id, 0x48), "int (__cdecl *)(void *a, char *str, int radix)");
	SetType(get_member_id(id, 0x4C), "unsigned int (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0x50), "int (__cdecl *)(void *src, unsigned __int8 *dst)");
	SetType(get_member_id(id, 0x54), "int (__cdecl *)(void *dst, unsigned __int8 *src, unsigned int len)");
	SetType(get_member_id(id, 0x58), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x5C), "int (__cdecl *)(void *a, unsigned int b, void *c)");
	SetType(get_member_id(id, 0x60), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x64), "int (__cdecl *)(void *a, unsigned int b, void *c)");
	SetType(get_member_id(id, 0x68), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x6C), "int (__cdecl *)(void *a, unsigned int b, void *c)");
	SetType(get_member_id(id, 0x70), "int (__cdecl *)(void *a, void *b)");
	SetType(get_member_id(id, 0x74), "int (__cdecl *)(void *a, void *b, void *c, void *d)");
	SetType(get_member_id(id, 0x78), "int (__cdecl *)(void *a, void *b)");
	SetType(get_member_id(id, 0x7C), "int (__cdecl *)(void *a, unsigned int b, unsigned int *c)");
	SetType(get_member_id(id, 0x80), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x84), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x88), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x8C), "int (__cdecl *)(void *a, void *b, void *c, void *d)");
	SetType(get_member_id(id, 0x90), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0x94), "int (__cdecl *)(void *, void *, void *)");
	SetType(get_member_id(id, 0x98), "int (__cdecl *)(void *a, void **b)");
	SetType(get_member_id(id, 0x9C), "int (__cdecl *)(void *a, void *b)");
	SetType(get_member_id(id, 0xA0), "int (__cdecl *)(void *a, void *b, void *c)");
	SetType(get_member_id(id, 0xA4), "void (__cdecl *)(void *a)");
	SetType(get_member_id(id, 0xA8), "int (__cdecl *)(void *a, void *b, void *c, void *d)");
	SetType(get_member_id(id, 0xAC), "int (__cdecl *)(void *a, int b, int *c)");
	SetType(get_member_id(id, 0xB0), "int (__cdecl *)(void *k, struct ecc_point *G, struct ecc_point *R, void *modulus, int map)");
	SetType(get_member_id(id, 0xB4), "int (__cdecl *)(struct ecc_point *P, struct ecc_point *Q, struct ecc_point *R, void *modulus, void *mp)");
	SetType(get_member_id(id, 0xB8), "int (__cdecl *)(struct ecc_point *P, struct ecc_point *R, void *modulus, void *mp)");
	SetType(get_member_id(id, 0xBC), "int (__cdecl *)(struct ecc_point *P, void *modulus, void *mp)");
	SetType(get_member_id(id, 0xC0), "int (__cdecl *)(struct ecc_point *A, void *kA, struct ecc_point *B, void *kB, struct ecc_point *C, void *modulus)");
	SetType(get_member_id(id, 0xC4), "int (__cdecl *)(prng_state *prng, int wprng, int size, int e, struct rsa_key *key)");
	SetType(get_member_id(id, 0xC8), "int (__cdecl *)(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen, int which, struct rsa_key *key)");
	id = get_struc_id("ans1_der_conv_table_entry");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "int");
	id = get_struc_id("ltc_asn1_list");
	SetType(get_member_id(id, 0x0), "enum ltc_asn1_type");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "unsigned int");
	SetType(get_member_id(id, 0xC), "int");
	SetType(get_member_id(id, 0x10), "struct ltc_asn1_list *");
	SetType(get_member_id(id, 0x14), "struct ltc_asn1_list *");
	SetType(get_member_id(id, 0x18), "struct ltc_asn1_list *");
	SetType(get_member_id(id, 0x1C), "struct ltc_asn1_list *");
	id = get_struc_id("tee_rpmb_ctx");
	SetType(get_member_id(id, 0x0), "uint8_t[32]");
	SetType(get_member_id(id, 0x20), "uint8_t[16]");
	SetType(get_member_id(id, 0x30), "size_t");
	SetType(get_member_id(id, 0x34), "uint32_t");
	SetType(get_member_id(id, 0x38), "uint16_t");
	SetType(get_member_id(id, 0x3A), "uint16_t");
	SetType(get_member_id(id, 0x3C), "uint16_t");
	SetType(get_member_id(id, 0x3E), "bool");
	SetType(get_member_id(id, 0x3F), "bool");
	SetType(get_member_id(id, 0x40), "bool");
	SetType(get_member_id(id, 0x41), "bool");
	id = get_struc_id("rsa_key");
	SetType(get_member_id(id, 0x0), "int");
	SetType(get_member_id(id, 0x4), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0xC), "void *");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x14), "void *");
	SetType(get_member_id(id, 0x18), "void *");
	SetType(get_member_id(id, 0x1C), "void *");
	SetType(get_member_id(id, 0x20), "void *");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"ltc_ecc_set_type",0);
	id = add_struc(-1,"ltc_prng_descriptor",0);
	id = add_struc(-1,"ltc_hash_descriptor",0);
	id = add_struc(-1,"tee_vendor_props",0);
	id = add_struc(-1,"tee_props",0);
	id = add_struc(-1,"attr_ops_s",0);
	id = add_struc(-1,"thread_specific_data",0);
	id = add_struc(-1,"itr_ops_s",0);
	id = add_struc(-1,"tee_file_operations",0);
	id = add_struc(-1,"hash_ops",0);
	id = add_struc(-1,"cipher_ops",0);
	id = add_struc(-1,"mac_ops",0);
	id = add_struc(-1,"authenc_ops",0);
	id = add_struc(-1,"acipher_ops",0);
	id = add_struc(-1,"bignum_ops",0);
	id = add_struc(-1,"prng_ops",0);
	id = add_struc(-1,"tee_mmu_info",0);
	id = add_struc(-1,"user_ta_ctx",0);
	id = add_struc(-1,"tee_ta_session_head",0);
	id = add_struc(-1,"tee_cryp_state_head",0);
	id = add_struc(-1,"tee_obj_head",0);
	id = add_struc(-1,"tee_storage_enum_head",0);
	id = add_struc(-1,"thread_user_vfp_state",0);
	id = add_struc(-1,"vfp_state",0);
	id = add_struc(-1,"vfp_reg",0);
	id = add_struc(-1,"tee_ta_ctx",0);
	id = add_struc(-1,"TEE_UUID",0);
	id = add_struc(-1,"TAILQ_ENTRY_tee_ta_ctx",0);
	id = add_struc(-1,"condvar",0);
	id = add_struc(-1,"tee_ta_session",0);
	id = add_struc(-1,"TAILQ_ENTRY_tee_ta_session",0);
	id = add_struc(-1,"TEE_Identity",0);
	id = add_struc(-1,"TEE_Time",0);
	id = add_struc(-1,"thread_ctx",0);
	id = add_struc(-1,"thread_ctx_regs",0);
	id = add_struc(-1,"core_mmu_user_map",0);
	id = add_struc(-1,"TAILQ_HEAD_tee_ta_session",0);
	id = add_struc(-1,"pgt_cache",0);
	id = add_struc(-1,"thread_vfp_state",0);
	id = add_struc(-1,"tee_ta_ops",0);
	id = add_struc(-1,"tee_mm_entry_t",0);
	id = add_struc(-1,"thread_handlers",0);
	id = add_struc(-1,"time_source",0);
	id = add_struc(-1,"thread_core_local_s",0);
	id = add_struc(-1,"pgt",0);
	id = add_struc(-1,"SLIST_ENTRY__pgt",0);
	id = add_struc(-1,"CRYS_ECPKI_Domain_t",0);
	id = add_struc(-1,"CRYS_RND_WorkBuff_t",0);
	id = add_struc(-1,"CRYS_HASHUserContext_t",0);
	id = add_struc(-1,"CRYS_RND_State_t",0);
	id = add_struc(-1,"CRYS_ECPKI_UserPrivKey_t",0);
	id = add_struc(-1,"CRYS_DH_Temp_t",0);
	id = add_struc(-1,"CRYS_RSAPrimeData_t",0);
	id = add_struc(-1,"CRYS_RSAUserPubKey_t",0);
	set_struc_cmt(id,"size ok",1);
	id = add_struc(-1,"CRYS_ECPKI_BUILD_TempData_t",0);
	id = add_struc(-1,"CRYS_ECPKI_UserPublKey_t",0);
	set_struc_cmt(id,"size ok",1);
	id = add_struc(-1,"CRYS_RND_Context_t",0);
	id = add_struc(-1,"ECDSA_SignContext_t",0);
	id = add_struc(-1,"CRYS_ECDSA_SignUserContext_t",0);
	id = add_struc(-1,"SaSiAesUserContext_t",0);
	id = add_struc(-1,"CRYS_RSAKGFipsContext_t",0);
	id = add_struc(-1,"CRYS_RSAUserPrivKey_t",0);
	set_struc_cmt(id,"size ok",1);
	id = add_struc(-1,"CRYS_RSAKGData_t",0);
	set_struc_cmt(id,"total size ok",1);
	id = add_struc(-1,"CRYS_ECDH_TempData_t",0);
	set_struc_cmt(id,"size ok",1);
	id = add_struc(-1,"CRYS_HMACUserContext_t",0);
	id = add_struc(-1,"ImgRSAPublicKey",0);
	id = add_struc(-1,"struc_FF10_fld28",0);
	set_struc_cmt(id,"some kind of list of mem blocks",1);
	id = add_struc(-1,"struc_FF10",0);
	id = add_struc(-1,"mpa_num_base",0);
	id = add_struc(-1,"ltc_math_descriptor",0);
	id = add_struc(-1,"ans1_der_conv_table_entry",0);
	id = add_struc(-1,"ltc_asn1_list",0);
	id = add_struc(-1,"tee_rpmb_ctx",0);
	id = add_struc(-1,"rsa_key",0);
	
	id = get_struc_id("ltc_ecc_set_type");
	mid = add_struc_member(id,"size",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prime",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"B",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"order",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Gx",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"Gy",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("ltc_prng_descriptor");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"export_size",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"start",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"add_entropy",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ready",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"read",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"done",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pexport",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pimport",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"test",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("ltc_hash_descriptor");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ID",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"hashsize",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"blocksize",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"OID",	0X10,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"OIDlen",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"init",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"process",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"done",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"test",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"hmac_block",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_vendor_props");
	mid = add_struc_member(id,"props",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"len",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_props");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"prop_type",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"get_prop_func",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"data",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"len",	0X10,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("attr_ops_s");
	mid = add_struc_member(id,"from_user",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"to_user",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"to_binary",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"from_binary",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"from_obj",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"free",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"clear",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("itr_ops_s");
	mid = add_struc_member(id,"add",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"enable",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"disable",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_file_operations");
	mid = add_struc_member(id,"open",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"close",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"read",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"write",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lseek",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"frename",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"unlink",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ftruncate",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mkdir",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"opendir",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"closedir",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"readdir",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rmdir",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"access",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("hash_ops");
	mid = add_struc_member(id,"get_ctx_size",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"update",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"final",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("cipher_ops");
	mid = add_struc_member(id,"get_ctx_size",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"update",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"final",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"get_block_size",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("mac_ops");
	mid = add_struc_member(id,"get_ctx_size",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"update",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"final",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("authenc_ops");
	mid = add_struc_member(id,"get_ctx_size",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"update_aad",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"update_payload",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"enc_final",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dec_final",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"final",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("acipher_ops");
	mid = add_struc_member(id,"alloc_rsa_keypair",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_rsa_public_key",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"free_rsa_public_key",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_dsa_keypair",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_dsa_public_key",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_dh_keypair",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_ecc_public_key",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"alloc_ecc_keypair",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"free_ecc_public_key",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gen_rsa_key",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gen_dsa_key",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gen_dh_key",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gen_ecc_key",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dh_shared_secret",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsanopad_decrypt",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsanopad_encrypt",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsaes_decrypt",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsaes_encrypt",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsassa_sign",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsassa_verify",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dsa_sign",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dsa_verify",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_sign",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_verify",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_shared_secret",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("bignum_ops");
	mid = add_struc_member(id,"allocate",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bin2bn",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"num_bytes",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"num_bits",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bn2bin",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"copy",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"free",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"clear",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"compare",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("prng_ops");
	mid = add_struc_member(id,"add_entropy",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"read",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_mmu_info");
	mid = add_struc_member(id,"table",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"size",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ta_private_vmem_start",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ta_private_vmem_end",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_ta_session_head");
	mid = add_struc_member(id,"tqh_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqh_last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_cryp_state_head");
	mid = add_struc_member(id,"tqh_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqh_last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_obj_head");
	mid = add_struc_member(id,"tqh_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqh_last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_storage_enum_head");
	mid = add_struc_member(id,"tqh_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqh_last",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_user_vfp_state");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	264);
	mid = add_struc_member(id,"lazy_saved",	0X108,	0x000400,	-1,	1);
	mid = add_struc_member(id,"saved",	0X109,	0x000400,	-1,	1);
	set_struc_align(id,3);
	
	id = get_struc_id("TEE_UUID");
	mid = add_struc_member(id,"timeLow",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"timeMid",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"timeHiAndVersion",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"clockSeqAndNode",	0X8,	0x000400,	-1,	8);
	set_struc_align(id,2);
	
	id = get_struc_id("TAILQ_ENTRY_tee_ta_ctx");
	mid = add_struc_member(id,"tqe_next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqe_prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("condvar");
	mid = add_struc_member(id,"spin_lock",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"m",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_ta_ctx");
	mid = add_struc_member(id,"uuid",	0,	0x60000400,	get_struc_id("TEE_UUID"),	16);
	mid = add_struc_member(id,"ops",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"flags",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"link",	0X18,	0x60000400,	get_struc_id("TAILQ_ENTRY_tee_ta_ctx"),	8);
	mid = add_struc_member(id,"panicked",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"panic_code",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ref_count",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"busy",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"busy_cv",	0X30,	0x60000400,	get_struc_id("condvar"),	8);
	set_struc_align(id,2);
	
	id = get_struc_id("user_ta_ctx");
	mid = add_struc_member(id,"entry_func",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"stack_size",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"is_32bit",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"open_sessions",	0XC,	0x60000400,	get_struc_id("tee_ta_session_head"),	8);
	mid = add_struc_member(id,"cryp_states",	0X14,	0x60000400,	get_struc_id("tee_cryp_state_head"),	8);
	mid = add_struc_member(id,"objects",	0X1C,	0x60000400,	get_struc_id("tee_obj_head"),	8);
	mid = add_struc_member(id,"storage_enums",	0X24,	0x60000400,	get_struc_id("tee_storage_enum_head"),	8);
	mid = add_struc_member(id,"mm",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mm_stack",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"load_addr",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"context",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"mmu",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ta_time_offs",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"areas",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"se_service",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"vfp",	0X4C,	0x60000400,	get_struc_id("thread_user_vfp_state"),	272);
	mid = add_struc_member(id,"ctx",	0X15C,	0x60000400,	get_struc_id("tee_ta_ctx"),	56);
	set_struc_align(id,2);
	
	id = get_struc_id("TAILQ_ENTRY_tee_ta_session");
	mid = add_struc_member(id,"tqe_next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqe_prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("TEE_Identity");
	mid = add_struc_member(id,"login",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"uuid",	0X4,	0x60000400,	get_struc_id("TEE_UUID"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("TEE_Time");
	mid = add_struc_member(id,"seconds",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"millis",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_ta_session");
	mid = add_struc_member(id,"link",	0,	0x60000400,	get_struc_id("TAILQ_ENTRY_tee_ta_session"),	8);
	mid = add_struc_member(id,"link_tsd",	0X8,	0x60000400,	get_struc_id("TAILQ_ENTRY_tee_ta_session"),	8);
	mid = add_struc_member(id,"ctx",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"clnt_id",	0X14,	0x60000400,	get_struc_id("TEE_Identity"),	20);
	mid = add_struc_member(id,"cancel",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cancel_mask",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"cancel_time",	0X30,	0x60000400,	get_struc_id("TEE_Time"),	8);
	mid = add_struc_member(id,"user_ctx",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ref_count",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"refc_cv",	0X40,	0x60000400,	get_struc_id("condvar"),	8);
	mid = add_struc_member(id,"lock_cv",	0X48,	0x60000400,	get_struc_id("condvar"),	8);
	mid = add_struc_member(id,"lock_thread",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unlink",	0X54,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("TAILQ_HEAD_tee_ta_session");
	mid = add_struc_member(id,"tqe_next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"tqe_prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_specific_data");
	mid = add_struc_member(id,"sess_stack",	0,	0x60000400,	get_struc_id("TAILQ_HEAD_tee_ta_session"),	8);
	mid = add_struc_member(id,"ctx",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"pgt_cache",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_ctx_regs");
	mid = add_struc_member(id,"_r0",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r1",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r2",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r3",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r4",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r5",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r6",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r7",	0X1C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r8",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r9",	0X24,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r10",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r11",	0X2C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_r12",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"usr_sp",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"usr_lr",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"svc_spsr",	0X3C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"svc_sp",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"svc_lr",	0X44,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_pc",	0X48,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_cpsr",	0X4C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("core_mmu_user_map");
	mid = add_struc_member(id,"user_map",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"asid",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("vfp_reg");
	mid = add_struc_member(id,"v",	0,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("vfp_state");
	mid = add_struc_member(id,"_fpexc",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_fpscr",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"reg",	0X8,	0x60000400,	get_struc_id("vfp_reg"),	256);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_vfp_state");
	mid = add_struc_member(id,"ns_saved",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sec_saved",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sec_lazy_saved",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ns",	0X4,	0x60000400,	get_struc_id("vfp_state"),	264);
	mid = add_struc_member(id,"sec",	0X10C,	0x60000400,	get_struc_id("vfp_state"),	264);
	mid = add_struc_member(id,"field_214",	0X214,	0x000400,	-1,	4);
	mid = add_struc_member(id,"uvfp",	0X218,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_ctx");
	mid = add_struc_member(id,"regs",	0,	0x60000400,	get_struc_id("thread_ctx_regs"),	80);
	mid = add_struc_member(id,"state",	0X50,	0x28800400,	get_enum("thread_state"),	4);
	mid = add_struc_member(id,"stack_va_end",	0X54,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hyp_clnt_id",	0X58,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"flags",	0X5C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"user_map",	0X60,	0x60000400,	get_struc_id("core_mmu_user_map"),	8);
	mid = add_struc_member(id,"have_user_map",	0X68,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_69",	0X69,	0x000400,	-1,	3);
	mid = add_struc_member(id,"kern_sp",	0X6C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"vfp_state",	0X70,	0x60000400,	get_struc_id("thread_vfp_state"),	540);
	mid = add_struc_member(id,"rpc_arg",	0X28C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rpc_carg",	0X290,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"mutexes",	0X298,	0x000400,	-1,	16);
	mid = add_struc_member(id,"tsd",	0X2A8,	0x60000400,	get_struc_id("thread_specific_data"),	16);
	set_struc_align(id,2);
	
	id = get_struc_id("pgt_cache");
	mid = add_struc_member(id,"slh_first",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_ta_ops");
	mid = add_struc_member(id,"enter_open_session",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"enter_invoke_cmd",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"enter_close_session",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dump_state",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"destroy",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_mm_entry_t");
	mid = add_struc_member(id,"pool",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"offset",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"size",	0XC,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_handlers");
	mid = add_struc_member(id,"std_smc",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fast_smc",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"fiq",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cpu_on",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cpu_off",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cpu_suspend",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"cpu_resume",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"system_off",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"system_reset",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("time_source");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"protection_level",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"get_sys_time",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("thread_core_local_s");
	mid = add_struc_member(id,"tmp_stack_va_end",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"curr_thread",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("SLIST_ENTRY__pgt");
	mid = add_struc_member(id,"sle_next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("pgt");
	mid = add_struc_member(id,"tbl",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"link",	0X4,	0x60000400,	get_struc_id("SLIST_ENTRY__pgt"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECPKI_Domain_t");
	mid = add_struc_member(id,"ecP",	0,	0x20000400,	-1,	72);
	mid = add_struc_member(id,"ecA",	0X48,	0x20000400,	-1,	72);
	mid = add_struc_member(id,"ecB",	0X90,	0x20000400,	-1,	72);
	mid = add_struc_member(id,"ecR",	0XD8,	0x20000400,	-1,	76);
	mid = add_struc_member(id,"ecGx",	0X124,	0x20000400,	-1,	72);
	mid = add_struc_member(id,"ecGy",	0X16C,	0x20000400,	-1,	72);
	mid = add_struc_member(id,"ecH",	0X1B4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"llfBuff",	0X1B8,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"modSizeInBits",	0X2B8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ordSizeInBits",	0X2BC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"barrTagSizeInWords",	0X2C0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"DomainID",	0X2C4,	0x28800400,	get_enum("CRYS_ECPKI_DomainID_t"),	4);
	mid = add_struc_member(id,"name",	0X2C8,	0x50000400,	0,	20);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RND_WorkBuff_t");
	mid = add_struc_member(id,"crysRndWorkBuff",	0,	0x20000400,	-1,	6112);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_HASHUserContext_t");
	mid = add_struc_member(id,"buff",	0,	0x20000400,	-1,	240);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RSAPrimeData_t");
	mid = add_struc_member(id,"DataIn",	0,	0x20000400,	-1,	264);
	mid = add_struc_member(id,"DataOut",	0X108,	0x20000400,	-1,	264);
	mid = add_struc_member(id,"InternalBuff",	0X210,	0x000400,	-1,	632);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_DH_Temp_t");
	mid = add_struc_member(id,"PrimeData",	0,	0x60000400,	get_struc_id("CRYS_RSAPrimeData_t"),	1160);
	mid = add_struc_member(id,"field_488",	0X488,	0x000400,	-1,	564);
	mid = add_struc_member(id,"TempBuff",	0X6BC,	0x20000400,	-1,	264);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RSAUserPubKey_t");
	mid = add_struc_member(id,"valid_tag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PublicKeyDbBuff",	0X4,	0x20000400,	-1,	1088);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECPKI_BUILD_TempData_t");
	mid = add_struc_member(id,"crysBuildTmpIntBuff",	0,	0x20000400,	-1,	1672);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECPKI_UserPublKey_t");
	mid = add_struc_member(id,"valid_tag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PublKeyDbBuff",	0X4,	0x20000400,	-1,	880);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RND_State_t");
	mid = add_struc_member(id,"Seed",	0,	0x20000400,	-1,	48);
	mid = add_struc_member(id,"PreviousRandValue",	0X30,	0x20000400,	-1,	16);
	mid = add_struc_member(id,"PreviousAdditionalInput",	0X40,	0x20000400,	-1,	60);
	mid = add_struc_member(id,"AdditionalInput",	0X7C,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"AddInputSizeWords",	0XBC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EntropySourceSizeWords",	0XC0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ReseedCounter",	0XC4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"KeySizeWords",	0XC8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"StateFlag",	0XCC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"TrngProcesState",	0XD0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"ValidTag",	0XD4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"EntropySizeBits",	0XD8,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RND_Context_t");
	mid = add_struc_member(id,"rndState",	0,	0x60000400,	get_struc_id("CRYS_RND_State_t"),	220);
	mid = add_struc_member(id,"rndGenerateVectFunc",	0XDC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECPKI_UserPrivKey_t");
	mid = add_struc_member(id,"valid_tag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PrivKeyDbBuff",	0X4,	0x20000400,	-1,	812);
	set_struc_align(id,2);
	
	id = get_struc_id("ECDSA_SignContext_t");
	mid = add_struc_member(id,"ECDSA_SignerPrivKey",	0,	0x60000400,	get_struc_id("CRYS_ECPKI_UserPrivKey_t"),	816);
	mid = add_struc_member(id,"hashUserCtxBuff",	0X330,	0x20000400,	-1,	960);
	mid = add_struc_member(id,"hashResult",	0X6F0,	0x20000400,	-1,	64);
	mid = add_struc_member(id,"hashResultSizeWords",	0X730,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"hashMode",	0X734,	0x28800400,	get_enum("CRYS_ECPKI_HASH_OpMode_t"),	4);
	mid = add_struc_member(id,"crysEcdsaSignIntBuff",	0X738,	0x20000400,	-1,	1124);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECDSA_SignUserContext_t");
	mid = add_struc_member(id,"context_buff",	0,	0x20000400,	-1,	4140);
	mid = add_struc_member(id,"valid_tag",	0X102C,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("SaSiAesUserContext_t");
	mid = add_struc_member(id,"buff",	0,	0x20000400,	-1,	76);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RSAKGFipsContext_t");
	mid = add_struc_member(id,"primData",	0,	0x60000400,	get_struc_id("CRYS_RSAPrimeData_t"),	1160);
	mid = add_struc_member(id,"decBuff",	0X488,	0x000400,	-1,	22);
	mid = add_struc_member(id,"encBuff",	0X49E,	0x000400,	-1,	256);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RSAUserPrivKey_t");
	mid = add_struc_member(id,"valid_tag",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"PrivateKeyDbBuff",	0X4,	0x20000400,	-1,	1924);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_RSAKGData_t");
	mid = add_struc_member(id,"KGData__p",	0,	0x20000400,	-1,	132);
	mid = add_struc_member(id,"KGData__q",	0X84,	0x20000400,	-1,	132);
	mid = add_struc_member(id,"KGData__crysRSAKGDataIntBuff_or_TempbuffExp",	0X108,	0x20000400,	-1,	792);
	mid = add_struc_member(id,"primExt_or_SW_Shared_PrimData",	0X420,	0x20000400,	-1,	1188);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_ECDH_TempData_t");
	mid = add_struc_member(id,"crysEcdhIntBuff",	0,	0x20000400,	-1,	844);
	set_struc_align(id,2);
	
	id = get_struc_id("CRYS_HMACUserContext_t");
	mid = add_struc_member(id,"buff",	0,	0x20000400,	-1,	376);
	set_struc_align(id,2);
	
	id = get_struc_id("ImgRSAPublicKey");
	mid = add_struc_member(id,"len",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"n0inv",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"n",	0X8,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"rr",	0X108,	0x20000400,	-1,	256);
	mid = add_struc_member(id,"exponent",	0X208,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("struc_FF10_fld28");
	mid = add_struc_member(id,"phys",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"len",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_C",	0XC,	0x20000400,	-1,	4);
	
	id = get_struc_id("struc_FF10");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	16);
	mid = add_struc_member(id,"field_10",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_14",	0X14,	0x000400,	-1,	4);
	mid = add_struc_member(id,"field_18",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_1C",	0X1C,	0x000400,	-1,	4);
	mid = add_struc_member(id,"field_20",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_24",	0X24,	0x000400,	-1,	4);
	mid = add_struc_member(id,"field_28",	0X28,	0x60000400,	get_struc_id("struc_FF10_fld28"),	2048);
	mid = add_struc_member(id,"field_828",	0X828,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_82C",	0X82C,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_830",	0X830,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_834",	0X834,	0x20000400,	-1,	4);
	
	id = get_struc_id("mpa_num_base");
	mid = add_struc_member(id,"alloc",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"size",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"d",	0X8,	0x20000400,	-1,	4);
	
	id = get_struc_id("ltc_math_descriptor");
	mid = add_struc_member(id,"name",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"bits_per_digit",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"init",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init_size",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"init_copy",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"deinit",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"neg",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"copy",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"set_int",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"get_int",	0X24,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"get_digit",	0X28,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"get_digit_count",	0X2C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"compare",	0X30,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"compare_d",	0X34,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"count_bits",	0X38,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"count_lsb_bits",	0X3C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"twoexpt",	0X40,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"read_radix",	0X44,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"write_radix",	0X48,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"unsigned_size",	0X4C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"unsigned_write",	0X50,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"unsigned_read",	0X54,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"add",	0X58,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"addi",	0X5C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sub",	0X60,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"subi",	0X64,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mul",	0X68,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"muli",	0X6C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sqr",	0X70,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mpdiv",	0X74,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"div_2",	0X78,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"modi",	0X7C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"gcd",	0X80,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"lcm",	0X84,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mod",	0X88,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"mulmod",	0X8C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"sqrmod",	0X90,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"invmod",	0X94,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"montgomery_setup",	0X98,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"montgomery_normalization",	0X9C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"montgomery_reduce",	0XA0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"montgomery_deinit",	0XA4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"exptmod",	0XA8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"isprime",	0XAC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_ptmul",	0XB0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_ptadd",	0XB4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_ptdbl",	0XB8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_map",	0XBC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"ecc_mul2add",	0XC0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsa_keygen",	0XC4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"rsa_me",	0XC8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("ans1_der_conv_table_entry");
	mid = add_struc_member(id,"code",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"value",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("ltc_asn1_list");
	mid = add_struc_member(id,"type",	0,	0x28800400,	get_enum("ltc_asn1_type"),	4);
	mid = add_struc_member(id,"data",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"size",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"used",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"prev",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"next",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"child",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"parent",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	
	id = get_struc_id("tee_rpmb_ctx");
	mid = add_struc_member(id,"key",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"cid",	0X20,	0x000400,	-1,	16);
	mid = add_struc_member(id,"hash_ctx_size",	0X30,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"wr_cnt",	0X34,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"max_blk_idx",	0X38,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"rel_wr_blkcnt",	0X3A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"dev_id",	0X3C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"wr_cnt_synced",	0X3E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"key_derived",	0X3F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"key_verified",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"dev_info_synced",	0X41,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("rsa_key");
	mid = add_struc_member(id,"type",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"e",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"d",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"N",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"p",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"q",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"qP",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dP",	0X1C,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"dQ",	0X20,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	set_struc_align(id,2);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X7D000000,	E_PREV + 0,	"; File Name   : wm230_0801_v10.00.07.12_20180126-recovery.img.TZOS.elf");
	update_extra_cmt		(0X7D000000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0X7D000000,	E_PREV + 2,	"; Imagebase   : 7D000000");
	update_extra_cmt		(0X7D000000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0X7D000000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0X7D000000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0X7D000000,	E_PREV + 6,	"; ");
	create_insn	(0X7D000000);
	set_name	(0X7D000000,	"__text_start");
	create_insn	(0X7D000004);
	create_insn	(0X7D000008);
	create_insn	(0X7D00000C);
	create_insn	(0X7D000010);
	create_insn	(0X7D000014);
	create_insn	(0X7D000018);
	create_insn	(0X7D00001C);
	create_insn	(0X7D000020);
	set_name	(0X7D000020,	"plat_cpu_reset_early_weak_overriden");
	create_insn	(0X7D000024);
	set_name	(0X7D000024,	"plat_cpu_reset_late_weak_overriden");
	create_insn	(0X7D000028);
	set_name	(0X7D000028,	"cpu_is_ready");
	create_insn	(0X7D00002C);
	set_name	(0X7D00002C,	"wait_primary");
	create_insn	(0X7D000030);
	set_name	(0X7D000030,	"wait_secondary");
	create_insn	(x=0X7D000034);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D000034,	"reset");
	create_insn	(x=0X7D00004C);
	op_hex		(x,	1);
	create_insn	(x=0X7D000050);
	op_hex		(x,	1);
	create_insn	(x=0X7D000054);
	op_hex		(x,	1);
	create_insn	(x=0X7D000064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00007C);
	set_name	(0X7D00007C,	"reset_primary");
	create_insn	(x=0X7D00008C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0000A8,	"s",	0);
	create_insn	(x=0X7D0000A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0000AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0000B0,	"e",	0);
	set_cmt	(0X7D0000CC,	"pageable_part",	0);
	set_cmt	(0X7D0000D0,	"nsec_entry",	0);
	set_cmt	(0X7D0000D4,	"fdt",	0);
	set_cmt	(0X7D0000E8,	"s",	0);
	create_insn	(x=0X7D0000E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0000EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0000F0,	"e",	0);
	create_insn	(x=0X7D00010C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D000120);
	set_name	(0X7D000120,	"unhandled_cpu");
	create_insn	(0X7D000128);
	set_name	(0X7D000128,	"reset_secondary");
	set_cmt	(0X7D00012C,	"asm macro set_sp start",	1);
	create_insn	(x=0X7D00013C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00014C,	"asm macro set_sp end",	1);
	create_insn	(x=0X7D000174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00017C,	"nsec_entry",	0);
	create_dword	(x=0X7D00019C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0001AC,	"s");
	create_dword	(x=0X7D0001B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0001B4,	"__initcall_start");
	create_dword	(x=0X7D0001B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0001C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0001C4);
	make_array	(0X7D0001C4,	0X7);
	set_name	(0X7D0001C4,	"__initcall_end");
	create_insn	(0X7D0001E0);
	set_name	(0X7D0001E0,	"vector_std_smc_entry");
	set_cmt	(0X7D0001E4,	"args",	0);
	create_insn	(0X7D0001FC);
	set_name	(0X7D0001FC,	"vector_fast_smc_entry");
	set_cmt	(0X7D000200,	"args",	0);
	create_insn	(0X7D000218);
	set_name	(0X7D000218,	"vector_fiq_entry");
	create_insn	(x=0X7D00021C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D000238,	"vector_cpu_on_entry");
	create_insn	(x=0X7D000254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D000254,	"vector_cpu_off_entry");
	create_insn	(x=0X7D000270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D000270,	"vector_cpu_suspend_entry");
	create_insn	(x=0X7D00028C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00028C,	"vector_cpu_resume_entry");
	create_insn	(x=0X7D0002A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0002A8,	"vector_system_off_entry");
	create_insn	(x=0X7D0002C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0002C4,	"vector_system_reset_entry");
	create_insn	(0X7D0002E0);
	set_name	(0X7D0002E0,	"thread_vector_table__vector_std_smc_entry");
	create_insn	(0X7D0002E4);
	set_name	(0X7D0002E4,	"thread_vector_table__vector_fast_smc_entry");
	create_insn	(0X7D0002E8);
	set_name	(0X7D0002E8,	"thread_vector_table__vector_cpu_on_entry");
	create_insn	(0X7D0002EC);
	set_name	(0X7D0002EC,	"thread_vector_table__vector_cpu_off_entry");
	create_insn	(0X7D0002F0);
	set_name	(0X7D0002F0,	"thread_vector_table__vector_cpu_resume_entry");
	create_insn	(0X7D0002F4);
	set_name	(0X7D0002F4,	"thread_vector_table__vector_cpu_suspend_entry");
	create_insn	(0X7D0002F8);
	set_name	(0X7D0002F8,	"thread_vector_table__vector_fiq_entry");
	create_insn	(0X7D0002FC);
	set_name	(0X7D0002FC,	"thread_vector_table__vector_system_off_entry");
	create_insn	(0X7D000300);
	set_name	(0X7D000300,	"thread_vector_table__vector_system_reset_entry");
	create_insn	(0X7D000304);
	set_name	(0X7D000304,	"thread_set_abt_sp");
	create_insn	(0X7D000318);
	set_name	(0X7D000318,	"thread_set_irq_sp");
	create_insn	(0X7D00032C);
	set_name	(0X7D00032C,	"thread_set_fiq_sp");
	create_insn	(0X7D000340);
	set_name	(0X7D000340,	"thread_resume");
	create_insn	(0X7D00036C);
	set_name	(0X7D00036C,	"thread_save_state");
	create_insn	(x=0X7D0003BC);
	op_hex		(x,	1);
	create_insn	(0X7D0003CC);
	set_name	(0X7D0003CC,	"thread_std_smc_entry");
	set_cmt	(0X7D0003D0,	"args",	0);
	create_insn	(0X7D00040C);
	set_name	(0X7D00040C,	"__thread_rpc");
	create_insn	(x=0X7D000410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000420);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00042C,	"flags",	0);
	set_cmt	(0X7D000430,	"cpsr",	0);
	set_cmt	(0X7D000434,	"pc",	0);
	create_insn	(x=0X7D000434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000450);
	op_stkvar	(x,	1);
	set_name	(0X7D000450,	".thread_rpc_return");
	create_insn	(0X7D00045C);
	set_name	(0X7D00045C,	"thread_fiq_handler");
	create_insn	(x=0X7D000468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00047C);
	set_name	(0X7D00047C,	"thread_irq_handler");
	create_insn	(x=0X7D000484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000488);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000490,	"flags",	0);
	create_insn	(x=0X7D000498);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00049C,	"pc",	0);
	create_insn	(x=0X7D00049C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0004CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0004CC,	"thread_init_vbar");
	create_insn	(0X7D0004D8);
	set_name	(0X7D0004D8,	"__thread_enter_user_mode");
	create_insn	(x=0X7D0004DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0004E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0004E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000508);
	op_stkvar	(x,	1);
	set_name	(0X7D000508,	"__thread_unwind_user_mode");
	create_insn	(x=0X7D000510);
	op_stkvar	(x,	1);
	create_insn	(0X7D00052C);
	set_name	(0X7D00052C,	"__thread_abort_handler");
	create_insn	(x=0X7D00053C);
	op_hex		(x,	1);
	create_insn	(0X7D00055C);
	set_name	(0X7D00055C,	"__thread_dabort_handler");
	create_insn	(0X7D000574);
	set_name	(0X7D000574,	"__thread_pabort_handler");
	create_insn	(0X7D00058C);
	create_insn	(0X7D0005D0);
	set_name	(0X7D0005D0,	"__thread_svc_handler");
	create_insn	(x=0X7D0005D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0005DC,	"regs",	0);
	create_insn	(x=0X7D0005E4);
	op_stkvar	(x,	1);
	make_array	(0X7D0005F4,	0XC);
	create_insn	(0X7D000600);
	set_name	(0X7D000600,	"thread_vect_table__reset");
	create_insn	(0X7D000604);
	set_name	(0X7D000604,	"thread_vect_table__undefined_instr");
	create_insn	(0X7D000608);
	set_name	(0X7D000608,	"thread_vect_table__svc_call");
	create_insn	(0X7D00060C);
	set_name	(0X7D00060C,	"thread_vect_table__pabort");
	create_insn	(x=0X7D000610);
	op_bin		(x,	0);
	set_name	(0X7D000610,	"thread_vect_table__dabort");
	create_insn	(0X7D000614);
	set_name	(0X7D000614,	"thread_vect_table__reserved1");
	create_insn	(0X7D000618);
	set_name	(0X7D000618,	"thread_vect_table__irq");
	create_insn	(0X7D00061C);
	set_name	(0X7D00061C,	"thread_vect_table__fiq");
	create_dword	(0X7D000620);
	create_dword	(x=0X7D000624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000628);
	create_dword	(x=0X7D00062C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000630);
	create_dword	(x=0X7D000634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000638);
	create_dword	(x=0X7D00063C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000640);
	create_dword	(x=0X7D000644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000648);
	create_dword	(x=0X7D00064C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000650);
	create_dword	(x=0X7D000654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000658);
	create_dword	(x=0X7D00065C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00065C,	"pc");
	create_dword	(0X7D000660);
	create_dword	(x=0X7D000664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X7D000668,	0X18);
	create_insn	(0X7D000680);
	set_name	(0X7D000680,	"sm_save_modes_regs");
	create_insn	(0X7D0006D4);
	set_name	(0X7D0006D4,	"sm_restore_modes_regs");
	create_insn	(0X7D000728);
	set_name	(0X7D000728,	"sm_smc_entry");
	create_insn	(x=0X7D000738);
	op_hex		(x,	1);
	create_insn	(x=0X7D000744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00075C);
	op_stkvar	(x,	1);
	create_insn	(0X7D000764);
	create_insn	(x=0X7D00076C);
	op_hex		(x,	1);
	create_insn	(x=0X7D000778);
	op_hex		(x,	1);
	create_insn	(x=0X7D00078C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0007A4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0007AC);
	create_insn	(0X7D0007B4);
	set_name	(0X7D0007B4,	"sm_fiq_entry");
	create_insn	(x=0X7D0007C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0007D8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0007FC);
	create_insn	(0X7D000800);
	set_name	(0X7D000800,	"sm_vect_table");
	create_insn	(0X7D000804);
	create_insn	(0X7D000808);
	create_insn	(0X7D00080C);
	create_insn	(0X7D000810);
	create_insn	(0X7D000814);
	create_insn	(0X7D000818);
	create_insn	(0X7D00081C);
	create_insn	(0X7D000820);
	set_name	(0X7D000820,	"sm_init");
	create_insn	(x=0X7D000834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D000840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D000844);
	create_insn	(0X7D000860);
	set_name	(0X7D000860,	"sha384_init");
	create_insn	(x=0X7D00086C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00088E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0008A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0008AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0008B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0008C4);
	create_qword	(0X7D0008C8);
	create_qword	(0X7D0008D0);
	create_qword	(0X7D0008D8);
	create_qword	(0X7D0008E0);
	create_qword	(0X7D0008E8);
	create_qword	(0X7D0008F0);
	create_qword	(0X7D0008F8);
	create_qword	(0X7D000900);
	create_insn	(0X7D000908);
	set_name	(0X7D000908,	"sha512_init");
	create_insn	(x=0X7D000914);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00092C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00094A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00095E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00096C);
	create_qword	(0X7D000970);
	create_qword	(0X7D000978);
	create_qword	(0X7D000980);
	create_qword	(0X7D000988);
	create_qword	(0X7D000990);
	create_qword	(0X7D000998);
	create_qword	(0X7D0009A0);
	create_qword	(0X7D0009A8);
	create_insn	(0X7D0009B0);
	set_name	(0X7D0009B0,	"tee_ta_verify_param");
	create_insn	(x=0X7D0009C0);
	op_hex		(x,	1);
	create_insn	(0X7D0009E2);
	set_cmt	(0X7D0009E8,	"attr",	0);
	set_cmt	(0X7D0009EA,	"pbuf",	0);
	set_cmt	(0X7D0009EC,	"len",	0);
	set_cmt	(0X7D000A0A,	"attr",	0);
	create_insn	(0X7D000A0A);
	set_cmt	(0X7D000A0C,	"pbuf",	0);
	set_cmt	(0X7D000A0E,	"len",	0);
	set_cmt	(0X7D000A18,	"attr",	0);
	create_insn	(0X7D000A18);
	set_cmt	(0X7D000A1A,	"pbuf",	0);
	set_cmt	(0X7D000A1C,	"len",	0);
	create_dword	(0X7D000A34);
	create_insn	(0X7D000A38);
	set_name	(0X7D000A38,	"user_ta_dump_state");
	create_insn	(x=0X7D000A3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000A42,	"function",	0);
	set_cmt	(0X7D000A44,	"fmt",	0);
	create_insn	(x=0X7D000A44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A48,	"level",	0);
	create_insn	(x=0X7D000A4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A4E,	"line",	0);
	create_insn	(x=0X7D000A50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A52,	"level_ok",	0);
	create_insn	(x=0X7D000A5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000A5C,	"function",	0);
	set_cmt	(0X7D000A5E,	"fmt",	0);
	create_insn	(x=0X7D000A5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A62,	"level",	0);
	set_cmt	(0X7D000A66,	"line",	0);
	create_insn	(x=0X7D000A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000A72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A74,	"level_ok",	0);
	create_insn	(x=0X7D000A84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A8A,	"fmt",	0);
	create_insn	(x=0X7D000A8A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A90,	"function",	0);
	create_insn	(x=0X7D000A92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A96,	"level",	0);
	create_insn	(x=0X7D000A98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000A9A,	"line",	0);
	set_cmt	(0X7D000A9C,	"level_ok",	0);
	create_insn	(0X7D000AA4);
	create_dword	(x=0X7D000AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000AAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D000AB4);
	set_name	(0X7D000AB4,	"user_ta_enter");
	create_insn	(x=0X7D000AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000AD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000AD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000AD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000ADE,	"utc",	0);
	create_insn	(0X7D000ADE);
	set_cmt	(0X7D000AE0,	"param",	0);
	set_cmt	(0X7D000AEC,	"sess",	0);
	create_insn	(x=0X7D000B16);
	op_hex		(x,	1);
	set_cmt	(0X7D000B1A,	"switch 7 cases ",	0);
	set_cmt	(0X7D000B20,	"switch jump",	0);
	set_cmt	(0X7D000B24,	"jump table for switch statement",	0);
	create_byte	(0X7D000B24);
	set_name	(0X7D000B24,	"jpt_7D000B20");
	create_byte	(0X7D000B25);
	create_byte	(0X7D000B26);
	create_byte	(0X7D000B27);
	create_byte	(0X7D000B28);
	create_byte	(0X7D000B29);
	create_byte	(0X7D000B2A);
	set_cmt	(0X7D000B2C,	"jumptable 7D000B20 cases 1,3,5-7",	1);
	create_insn	(0X7D000B2C);
	set_cmt	(0X7D000B34,	"jumptable 7D000B20 default case",	1);
	create_insn	(0X7D000B34);
	set_name	(0X7D000B34,	"def_7D000B20");
	create_insn	(x=0X7D000B50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000B52,	"a2",	0);
	set_cmt	(0X7D000B56,	"user_sp",	0);
	create_insn	(x=0X7D000B56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000B60,	"entry_func",	0);
	create_insn	(x=0X7D000B60);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000B64,	"a0",	0);
	set_cmt	(0X7D000B66,	"is_32bit",	0);
	create_insn	(x=0X7D000B66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000B6C,	"exit_status0",	0);
	create_insn	(x=0X7D000B6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000B72,	"exit_status1",	0);
	create_insn	(x=0X7D000B72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000B74,	"a3",	0);
	set_cmt	(0X7D000B7C,	"uvfp",	0);
	set_cmt	(0X7D000B7C,	"inlined clear_vfp_state()",	1);
	create_insn	(x=0X7D000BA6);
	op_hex		(x,	1);
	set_cmt	(0X7D000BAA,	"switch 6 cases ",	0);
	set_cmt	(0X7D000BB0,	"switch jump",	0);
	set_cmt	(0X7D000BB4,	"jump table for switch statement",	0);
	create_byte	(0X7D000BB4);
	set_name	(0X7D000BB4,	"jpt_7D000BB0");
	create_byte	(0X7D000BB5);
	create_byte	(0X7D000BB6);
	create_byte	(0X7D000BB7);
	create_byte	(0X7D000BB8);
	create_byte	(0X7D000BB9);
	set_cmt	(0X7D000BBA,	"jumptable 7D000BB0 cases 6,7",	1);
	create_insn	(0X7D000BBA);
	set_cmt	(0X7D000BBE,	"jumptable 7D000BB0 cases 2,3",	1);
	create_insn	(0X7D000BBE);
	set_cmt	(0X7D000BCA,	"jumptable 7D000BB0 default case",	1);
	set_name	(0X7D000BCA,	"def_7D000BB0");
	create_insn	(0X7D000BDC);
	create_insn	(x=0X7D000BDE);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D000BF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000BF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000BF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000BFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D000C00);
	create_insn	(0X7D000C04);
	set_name	(0X7D000C04,	"load_elf_segments");
	create_insn	(x=0X7D000C0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C1C,	"mm",	0);
	set_cmt	(0X7D000C22,	"pa",	0);
	set_cmt	(0X7D000C24,	"size",	0);
	set_cmt	(0X7D000C26,	"utc",	0);
	set_cmt	(0X7D000C30,	"prot",	0);
	set_cmt	(0X7D000C36,	"mm",	0);
	set_cmt	(0X7D000C3E,	"state",	0);
	create_insn	(x=0X7D000C40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C42,	"flags",	0);
	create_insn	(x=0X7D000C42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C44,	"vaddr",	0);
	create_insn	(x=0X7D000C44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C46,	"idx",	0);
	set_cmt	(0X7D000C48,	"size",	0);
	create_insn	(x=0X7D000C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000C56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000C5A);
	op_hex		(x,	1);
	create_insn	(x=0X7D000C6A);
	op_hex		(x,	1);
	create_insn	(x=0X7D000C72);
	op_hex		(x,	1);
	create_insn	(0X7D000C78);
	set_cmt	(0X7D000C7A,	"prot",	0);
	create_insn	(x=0X7D000C7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C7C,	"utc",	0);
	set_cmt	(0X7D000C7E,	"base_pa",	0);
	set_cmt	(0X7D000C80,	"offs",	0);
	create_insn	(x=0X7D000C80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000C82,	"size",	0);
	create_insn	(x=0X7D000C82);
	op_stkvar	(x,	1);
	create_insn	(0X7D000C8E);
	make_array	(0X7D000C96,	0X2);
	create_dword	(x=0X7D000C98);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D000C9C);
	set_name	(0X7D000C9C,	"tee_ta_init_user_ta_session");
	create_insn	(x=0X7D000CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000CBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CC8,	"source",	0);
	create_insn	(x=0X7D000CC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CCA,	"num",	0);
	set_cmt	(0X7D000CCC,	"destination",	0);
	set_cmt	(0X7D000CDE,	"cmd",	0);
	set_cmt	(0X7D000CE0,	"params",	0);
	create_insn	(x=0X7D000CE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CE2,	"num_params",	0);
	set_cmt	(0X7D000CEE,	"size",	0);
	create_insn	(x=0X7D000CEE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CF0,	"payload",	0);
	create_insn	(x=0X7D000CF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CF2,	"cookie",	0);
	create_insn	(x=0X7D000CF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CF8,	"pa",	0);
	create_insn	(x=0X7D000CF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000CFE,	"m",	0);
	create_insn	(x=0X7D000D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D0E,	"num",	0);
	set_cmt	(0X7D000D10,	"source",	0);
	create_insn	(x=0X7D000D10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D12,	"destination",	0);
	create_insn	(x=0X7D000D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D34,	"cmd",	0);
	set_cmt	(0X7D000D36,	"params",	0);
	create_insn	(x=0X7D000D36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D38,	"num_params",	0);
	create_insn	(x=0X7D000D3A);
	op_stkvar	(x,	1);
	create_insn	(0X7D000D48);
	create_insn	(x=0X7D000D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D4E);
	op_stkvar	(x,	1);
	create_insn	(0X7D000D5C);
	create_insn	(0X7D000D5E);
	create_insn	(x=0X7D000D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000D66);
	op_stkvar	(x,	1);
	create_insn	(0X7D000D6A);
	create_insn	(0X7D000D70);
	create_insn	(x=0X7D000D78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000D7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D7E,	"img_name",	0);
	set_cmt	(0X7D000D86,	"dt_ptr",	0);
	set_cmt	(0X7D000D88,	"support_chunks",	0);
	create_insn	(x=0X7D000D88);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D8A,	"a4",	0);
	create_insn	(x=0X7D000D92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000D96,	"fmt",	0);
	create_insn	(x=0X7D000D96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000D98,	"line",	0);
	set_cmt	(0X7D000D9C,	"level",	0);
	set_cmt	(0X7D000D9E,	"level_ok",	0);
	create_insn	(x=0X7D000DB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000DB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000DCC,	"size",	0);
	set_cmt	(0X7D000DDA,	"num",	0);
	set_cmt	(0X7D000DDC,	"source",	0);
	create_insn	(x=0X7D000DE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000DEA);
	op_stkvar	(x,	1);
	create_insn	(0X7D000DF6);
	create_insn	(x=0X7D000E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E0A);
	op_hex		(x,	1);
	create_insn	(x=0X7D000E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000E24);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000E2A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000E34);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000E3E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000E62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000E66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000E8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000E96,	"nmemb",	0);
	set_cmt	(0X7D000E98,	"size",	0);
	create_insn	(0X7D000EA6);
	create_insn	(0X7D000EAA);
	create_insn	(x=0X7D000EC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000EEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000EF0);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000EF6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000EFE);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000F06);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D000F08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F10,	"size",	0);
	create_insn	(x=0X7D000F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000F16);
	op_hex		(x,	1);
	set_cmt	(0X7D000F1A,	"algo",	0);
	set_cmt	(0X7D000F24,	"size",	0);
	create_insn	(x=0X7D000F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000F32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000F3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F4E,	"hash_ctx",	0);
	create_insn	(x=0X7D000F50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F52,	"ret_state",	0);
	create_insn	(x=0X7D000F52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F54,	"hash_algo",	0);
	set_cmt	(0X7D000F56,	"nwdata",	0);
	set_cmt	(0X7D000F58,	"nwdata_len",	0);
	create_insn	(x=0X7D000F58);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F64,	"state",	0);
	create_insn	(x=0X7D000F64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F6A,	"is_32bit",	0);
	create_insn	(x=0X7D000F6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F6C,	"head",	0);
	create_insn	(x=0X7D000F6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F6E,	"head_size",	0);
	set_cmt	(0X7D000F70,	"vasize",	0);
	create_insn	(x=0X7D000F70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D000F7C,	"pool",	0);
	create_insn	(x=0X7D000F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000F7E,	"size",	0);
	create_insn	(x=0X7D000F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D000F80);
	op_stkvar	(x,	1);
	create_insn	(0X7D000F8E);
	create_insn	(0X7D000F94);
	create_dword	(x=0X7D000F98);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D000F9C);
	op_chr		(x,	0);
	set_name	(0X7D000F9C,	"a4");
	create_dword	(x=0X7D000FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D000FA4,	"function");
	create_dword	(x=0X7D000FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000FAC);
	op_chr		(x,	0);
	create_dword	(x=0X7D000FB0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D000FB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000FBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D000FC0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D000FC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D000FC4,	"pool");
	create_dword	(x=0X7D000FC8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D000FCC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D000FD0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D000FD4);
	set_cmt	(0X7D000FEA,	"pool",	0);
	create_insn	(x=0X7D000FEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D000FEC);
	op_hex		(x,	1);
	create_insn	(x=0X7D000FFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D000FFC,	"level",	0);
	set_cmt	(0X7D000FFE,	"fmt",	0);
	create_insn	(x=0X7D000FFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001004);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001006,	"line",	0);
	set_cmt	(0X7D00100A,	"level_ok",	0);
	set_cmt	(0X7D001016,	"utc",	0);
	create_insn	(0X7D001016);
	set_cmt	(0X7D001020,	"utc",	0);
	set_cmt	(0X7D001022,	"elf_state",	0);
	create_insn	(x=0X7D001022);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001024,	"init_attrs",	0);
	create_insn	(x=0X7D001036);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00103C,	"ptr",	0);
	set_cmt	(0X7D001042,	"ptr",	0);
	set_cmt	(0X7D001050,	"ctx",	0);
	set_cmt	(0X7D001058,	"m2",	0);
	create_insn	(x=0X7D001058);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00105A,	"n",	0);
	create_insn	(x=0X7D00106A);
	op_hex		(x,	1);
	create_insn	(x=0X7D001072);
	op_hex		(x,	1);
	create_insn	(x=0X7D00107A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00107C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00107E,	"fmt",	0);
	create_insn	(x=0X7D00107E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001082);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001084,	"level",	0);
	create_insn	(x=0X7D001088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00108A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00108C,	"line",	0);
	set_cmt	(0X7D001090,	"level_ok",	0);
	create_insn	(0X7D00109A);
	create_insn	(x=0X7D0010BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0010BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0010C0);
	op_plain_offset	(x,	1,	0X7D04F0AC);
	op_plain_offset	(x,	129,	0X7D04F0AC);
	create_insn	(x=0X7D0010CC);
	op_plain_offset	(x,	1,	0X7D04F0AC);
	op_plain_offset	(x,	129,	0X7D04F0AC);
	set_cmt	(0X7D0010D2,	"ptr",	0);
	create_insn	(0X7D0010DA);
	create_insn	(0X7D0010DE);
	create_insn	(0X7D0010E2);
	set_cmt	(0X7D0010E4,	"ptr",	0);
	set_cmt	(0X7D0010F2,	"utc",	0);
	set_cmt	(0X7D0010F8,	"p",	0);
	set_cmt	(0X7D0010FE,	"p",	0);
	set_cmt	(0X7D001104,	"ptr",	0);
	create_insn	(x=0X7D00110C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00110E);
	op_stkvar	(x,	1);
	create_insn	(0X7D001114);
	create_insn	(x=0X7D00111A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00111C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001124);
	create_insn	(0X7D001128);
	create_insn	(0X7D001130);
	create_insn	(0X7D001136);
	create_insn	(x=0X7D001140);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001142,	"ctx",	0);
	set_cmt	(0X7D001148,	"vabase",	0);
	set_cmt	(0X7D00114A,	"state",	0);
	set_cmt	(0X7D00115A,	"size",	0);
	create_insn	(x=0X7D00116C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00117C,	"m1",	0);
	set_cmt	(0X7D00117E,	"m2",	0);
	set_cmt	(0X7D001182,	"n",	0);
	set_cmt	(0X7D00118A,	"init_attrs",	0);
	set_cmt	(0X7D00118C,	"utc",	0);
	set_cmt	(0X7D00118E,	"elf_state",	0);
	create_insn	(x=0X7D00118E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00119C,	"ctx",	0);
	set_cmt	(0X7D0011A2,	"va",	0);
	set_cmt	(0X7D0011A4,	"len",	0);
	create_insn	(x=0X7D0011A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0011A6,	"op",	0);
	set_cmt	(0X7D0011AC,	"ctx",	0);
	set_cmt	(0X7D0011B2,	"va",	0);
	set_cmt	(0X7D0011B4,	"len",	0);
	create_insn	(x=0X7D0011B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0011B6,	"op",	0);
	create_insn	(0X7D0011BE);
	create_insn	(0X7D0011C2);
	make_array	(0X7D0011CA,	0X2);
	create_dword	(x=0X7D0011CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0011D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0011D0,	"fmt");
	create_dword	(x=0X7D0011D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0011D8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0011DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0011E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0011E4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0011E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0011EC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0011F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0011F4);
	set_name	(0X7D0011F4,	"tee_ta_param_pa2va");
	create_insn	(x=0X7D0011FE);
	op_hex		(x,	1);
	set_cmt	(0X7D00120C,	"m",	0);
	set_cmt	(0X7D00120E,	"pa",	0);
	create_insn	(0X7D001222);
	make_array	(0X7D001226,	0X2);
	create_dword	(x=0X7D001228);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00122C);
	set_name	(0X7D00122C,	"tee_ta_init_static_ta_session");
	create_insn	(x=0X7D001234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00123C,	"m1",	0);
	set_cmt	(0X7D00123E,	"m2",	0);
	set_cmt	(0X7D001240,	"n",	0);
	set_cmt	(0X7D00124E,	"nmemb",	0);
	create_insn	(0X7D00124E);
	set_cmt	(0X7D001250,	"size",	0);
	create_insn	(x=0X7D001274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00127C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001280);
	op_plain_offset	(x,	1,	0X7D04F0AC);
	op_plain_offset	(x,	129,	0X7D04F0AC);
	create_insn	(x=0X7D001286);
	op_plain_offset	(x,	1,	0X7D04F0AC);
	op_plain_offset	(x,	129,	0X7D04F0AC);
	create_insn	(0X7D00128C);
	create_insn	(0X7D001292);
	create_dword	(x=0X7D001298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D001298,	"m1");
	create_dword	(x=0X7D00129C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0012A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0012A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0012A8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0012AC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0012B0);
	set_name	(0X7D0012B0,	"advance_to");
	create_insn	(x=0X7D0012C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0012C8,	"data",	0);
	set_cmt	(0X7D0012CA,	"ctx",	0);
	set_cmt	(0X7D0012CC,	"algo",	0);
	set_cmt	(0X7D0012CE,	"len",	0);
	create_insn	(x=0X7D0012D0);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D0012DA);
	create_insn	(0X7D0012DE);
	create_insn	(0X7D0012E2);
	make_array	(0X7D0012E6,	0X2);
	create_dword	(x=0X7D0012E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0012EC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0012F0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0012F4);
	set_name	(0X7D0012F4,	"e64_process_rel");
	create_dword	(x=0X7D0012F8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	set_cmt	(0X7D0012FC,	"fmt",	0);
	create_insn	(0X7D0012FC);
	set_name	(0X7D0012FC,	"e32_process_rel");
	create_insn	(0X7D001342);
	create_insn	(x=0X7D001350);
	op_hex		(x,	1);
	create_insn	(x=0X7D00135E);
	op_hex		(x,	1);
	create_insn	(0X7D001368);
	create_insn	(0X7D0013A4);
	create_insn	(x=0X7D0013AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0013B0,	"level",	0);
	create_insn	(x=0X7D0013B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0013B8,	"line",	0);
	set_cmt	(0X7D0013BC,	"level_ok",	0);
	create_insn	(0X7D0013C4);
	create_insn	(0X7D0013C8);
	make_array	(0X7D0013CE,	0X2);
	create_dword	(x=0X7D0013D0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0013D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0013D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0013DC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0013E0);
	set_name	(0X7D0013E0,	"copy_to");
	create_insn	(x=0X7D0013E4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0013E8,	"offs",	0);
	create_insn	(x=0X7D0013F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001412,	"num",	0);
	set_cmt	(0X7D001414,	"source",	0);
	set_cmt	(0X7D001416,	"destination",	0);
	set_cmt	(0X7D00141C,	"len",	0);
	create_insn	(x=0X7D00141E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001420,	"ctx",	0);
	set_cmt	(0X7D001422,	"algo",	0);
	set_cmt	(0X7D001424,	"data",	0);
	create_insn	(x=0X7D001426);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D001434);
	create_insn	(0X7D00143A);
	create_dword	(x=0X7D001440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001444);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D001448);
	set_name	(0X7D001448,	"alloc_and_copy_to");
	set_cmt	(0X7D00144E,	"size",	0);
	set_cmt	(0X7D00145E,	"len",	0);
	create_insn	(x=0X7D00145E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001460,	"dst_size",	0);
	set_cmt	(0X7D001462,	"offs",	0);
	create_insn	(x=0X7D001462);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001466,	"state",	0);
	set_cmt	(0X7D001468,	"dst",	0);
	set_cmt	(0X7D00146A,	"dst_offs",	0);
	set_cmt	(0X7D001478,	"ptr",	0);
	create_insn	(0X7D001478);
	create_insn	(0X7D001482);
	make_array	(0X7D00148A,	0X2);
	create_dword	(x=0X7D00148C);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D001490);
	set_name	(0X7D001490,	"elf_load_init");
	set_cmt	(0X7D001496,	"nmemb",	0);
	set_cmt	(0X7D001498,	"size",	0);
	create_insn	(x=0X7D0014A4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0014B4);
	create_dword	(x=0X7D0014B8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0014BC);
	set_name	(0X7D0014BC,	"elf_load_head");
	set_cmt	(0X7D0014C0,	"offs",	0);
	set_cmt	(0X7D0014C6,	"dst_offs",	0);
	set_cmt	(0X7D0014CA,	"dst",	0);
	create_insn	(x=0X7D0014CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0014D2,	"dst_size",	0);
	create_insn	(x=0X7D0014DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0014E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0014EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0014F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0014F8);
	op_hex		(x,	1);
	create_insn	(x=0X7D001502);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00150A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001512,	"size",	0);
	create_insn	(x=0X7D001522);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00153A,	"offs",	0);
	set_cmt	(0X7D001542,	"state",	0);
	set_cmt	(0X7D001544,	"p",	0);
	create_insn	(x=0X7D001544);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00154E,	"state",	0);
	create_insn	(x=0X7D00154E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001550,	"phdr",	0);
	create_insn	(x=0X7D001550);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001552,	"idx",	0);
	create_insn	(x=0X7D00155A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001560);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001564,	"state",	0);
	set_cmt	(0X7D001568,	"idx",	0);
	set_cmt	(0X7D00156A,	"phdr",	0);
	create_insn	(x=0X7D00156A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001576);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001582);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001588,	"state",	0);
	set_cmt	(0X7D00158A,	"p",	0);
	create_insn	(x=0X7D00158A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00158C,	"offs",	0);
	create_insn	(x=0X7D00158C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00158E,	"len",	0);
	create_insn	(x=0X7D001596);
	op_stkvar	(x,	1);
	create_insn	(0X7D0015A0);
	create_insn	(0X7D0015A4);
	create_insn	(x=0X7D0015B4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0015BA);
	create_insn	(0X7D0015BE);
	create_insn	(0X7D0015C2);
	make_array	(0X7D0015CA,	0X2);
	create_dword	(x=0X7D0015CC);
	op_chr		(x,	0);
	create_dword	(0X7D0015D0);
	create_dword	(0X7D0015D4);
	create_dword	(x=0X7D0015D8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0015DC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0015E0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0015E4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0015E8);
	set_name	(0X7D0015E8,	"elf_load_get_next_segment");
	create_insn	(x=0X7D0015F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0015FE,	"idx",	0);
	set_cmt	(0X7D001604,	"phdr",	0);
	set_cmt	(0X7D001606,	"state",	0);
	create_insn	(x=0X7D001612);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00161A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00162C);
	op_stkvar	(x,	1);
	create_insn	(0X7D001634);
	create_dword	(0X7D00163C);
	create_insn	(0X7D001640);
	set_name	(0X7D001640,	"elf_load_body");
	set_cmt	(0X7D001664,	"destination",	0);
	set_cmt	(0X7D001666,	"source",	0);
	set_cmt	(0X7D001668,	"num",	0);
	set_cmt	(0X7D001678,	"state",	0);
	set_cmt	(0X7D00167A,	"phdr",	0);
	create_insn	(x=0X7D00167A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00167C,	"idx",	0);
	create_insn	(x=0X7D001682);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001688);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00168A,	"state",	0);
	set_cmt	(0X7D00168E,	"offs",	0);
	create_insn	(x=0X7D00168E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001690);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001692,	"dst",	0);
	set_cmt	(0X7D001698,	"len",	0);
	create_insn	(x=0X7D001698);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00169A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00169C,	"dst_size",	0);
	set_cmt	(0X7D00169E,	"dst_offs",	0);
	create_insn	(0X7D0016AE);
	set_cmt	(0X7D0016B0,	"state",	0);
	set_cmt	(0X7D0016B2,	"p",	0);
	create_insn	(x=0X7D0016B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0016B4,	"offs",	0);
	create_insn	(x=0X7D0016C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0016C4,	"state",	0);
	set_cmt	(0X7D0016C6,	"offs",	0);
	create_insn	(0X7D0016D6);
	create_insn	(x=0X7D0016D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0016DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0016FE,	"state",	0);
	set_cmt	(0X7D001700,	"rel_sidx",	0);
	set_cmt	(0X7D001702,	"vabase",	0);
	create_insn	(0X7D00170C);
	make_array	(0X7D001712,	0X2);
	create_dword	(x=0X7D001714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00171C);
	set_name	(0X7D00171C,	"tee_time_get_sys_time");
	create_insn	(x=0X7D00171E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001720);
	op_plain_offset	(x,	1,	0X7D0511C0);
	op_plain_offset	(x,	129,	0X7D0511C0);
	make_array	(0X7D001726,	0X2);
	create_dword	(x=0X7D001728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D00172C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00172C,	"tee_time_get_sys_time_protection_level");
	create_insn	(x=0X7D00172E);
	op_plain_offset	(x,	1,	0X7D0511C0);
	op_plain_offset	(x,	129,	0X7D0511C0);
	make_array	(0X7D001732,	0X2);
	create_dword	(x=0X7D001734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001738);
	set_name	(0X7D001738,	"tee_time_get_ree_time");
	set_cmt	(0X7D001752,	"cmd",	0);
	set_cmt	(0X7D001754,	"num_params",	0);
	set_cmt	(0X7D001756,	"params",	0);
	create_insn	(x=0X7D001760);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001768,	"a3",	0);
	set_cmt	(0X7D00176A,	"a4",	0);
	create_insn	(0X7D001774);
	create_insn	(0X7D001778);
	make_array	(0X7D00177E,	0X2);
	create_dword	(x=0X7D001780);
	op_dec		(x,	0);
	create_dword	(x=0X7D001784);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(x=0X7D001788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D001788,	"time_source_init");
	create_dword	(x=0X7D001794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00179C);
	set_name	(0X7D00179C,	"cpu_spin_lock");
	create_insn	(0X7D0017C8);
	set_name	(0X7D0017C8,	"cpu_spin_trylock");
	create_insn	(0X7D0017F0);
	create_insn	(0X7D0017FC);
	set_name	(0X7D0017FC,	"cpu_spin_unlock");
	create_insn	(0X7D001814);
	set_name	(0X7D001814,	"cpu_mmu_enable");
	create_insn	(x=0X7D00181C);
	op_hex		(x,	1);
	create_insn	(0X7D001830);
	set_name	(0X7D001830,	"cpu_mmu_enable_icache");
	create_insn	(x=0X7D00183C);
	op_hex		(x,	1);
	create_insn	(0X7D001850);
	set_name	(0X7D001850,	"cpu_mmu_enable_dcache");
	create_insn	(x=0X7D001854);
	op_hex		(x,	1);
	create_insn	(0X7D001868);
	set_name	(0X7D001868,	"secure_mmu_unifiedtlbinvall");
	create_insn	(0X7D001878);
	create_insn	(0X7D00187C);
	set_name	(0X7D00187C,	"secure_mmu_unifiedtlbinvbymva");
	create_insn	(x=0X7D001880);
	op_hex		(x,	1);
	create_insn	(0X7D001898);
	set_name	(0X7D001898,	"secure_mmu_unifiedtlbinv_curasid");
	create_insn	(x=0X7D00189C);
	op_hex		(x,	1);
	create_insn	(x=0X7D0018B0);
	op_hex		(x,	1);
	set_name	(0X7D0018B0,	"secure_mmu_unifiedtlbinv_byasid");
	create_insn	(0X7D0018C4);
	set_name	(0X7D0018C4,	"arm_cl1_d_cleanbysetway");
	create_insn	(0X7D001900);
	set_name	(0X7D001900,	"arm_cl1_d_invbysetway");
	create_insn	(0X7D00193C);
	set_name	(0X7D00193C,	"arm_cl1_d_cleaninvbysetway");
	create_insn	(0X7D001978);
	set_name	(0X7D001978,	"arm_cl1_d_cleanbyva");
	create_insn	(x=0X7D00198C);
	op_hex		(x,	1);
	create_insn	(0X7D0019A8);
	set_name	(0X7D0019A8,	"arm_cl1_d_invbyva");
	create_insn	(x=0X7D0019BC);
	op_hex		(x,	1);
	create_insn	(0X7D0019D8);
	set_name	(0X7D0019D8,	"arm_cl1_d_cleaninvbyva");
	create_insn	(x=0X7D0019EC);
	op_hex		(x,	1);
	create_insn	(0X7D001A08);
	set_name	(0X7D001A08,	"arm_cl1_i_inv_all");
	create_insn	(0X7D001A20);
	set_name	(0X7D001A20,	"arm_cl1_i_inv");
	create_insn	(x=0X7D001A28);
	op_hex		(x,	1);
	create_insn	(x=0X7D001A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D001A54,	"lock_global");
	make_array	(0X7D001A5A,	0X2);
	create_dword	(x=0X7D001A5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D001A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D001A60,	"unlock_global");
	make_array	(0X7D001A66,	0X2);
	create_dword	(x=0X7D001A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001A6C);
	set_name	(0X7D001A6C,	"thread_check_canaries");
	create_insn	(x=0X7D001A82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001A84,	"function",	0);
	set_cmt	(0X7D001A86,	"fmt",	0);
	create_insn	(x=0X7D001A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001A88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001A8A,	"line",	0);
	create_insn	(x=0X7D001A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001A8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001A92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001A94,	"level",	0);
	set_cmt	(0X7D001A96,	"level_ok",	0);
	create_insn	(x=0X7D001A9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001AA2);
	create_insn	(x=0X7D001AB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001AB2,	"function",	0);
	set_cmt	(0X7D001AB4,	"fmt",	0);
	create_insn	(x=0X7D001AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001AB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001AB8,	"line",	0);
	create_insn	(x=0X7D001ABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001AC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001AC2,	"level",	0);
	set_cmt	(0X7D001AC4,	"level_ok",	0);
	create_insn	(x=0X7D001ACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001ACE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001AD6);
	create_insn	(x=0X7D001AF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001AF2,	"function",	0);
	set_cmt	(0X7D001AF4,	"fmt",	0);
	create_insn	(x=0X7D001AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001AF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001AF8,	"line",	0);
	create_insn	(x=0X7D001AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001AFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001B02,	"level",	0);
	set_cmt	(0X7D001B04,	"level_ok",	0);
	create_insn	(x=0X7D001B0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001B10);
	create_insn	(x=0X7D001B1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B20,	"function",	0);
	set_cmt	(0X7D001B22,	"fmt",	0);
	create_insn	(x=0X7D001B22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B26,	"line",	0);
	create_insn	(x=0X7D001B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001B30,	"level",	0);
	set_cmt	(0X7D001B32,	"level_ok",	0);
	create_insn	(x=0X7D001B38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001B3E);
	create_insn	(x=0X7D001B56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B58,	"function",	0);
	set_cmt	(0X7D001B5A,	"fmt",	0);
	create_insn	(x=0X7D001B5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B5E,	"line",	0);
	create_insn	(x=0X7D001B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001B68,	"level",	0);
	set_cmt	(0X7D001B6A,	"level_ok",	0);
	create_insn	(x=0X7D001B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001B76);
	create_insn	(x=0X7D001B82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B84,	"function",	0);
	set_cmt	(0X7D001B86,	"fmt",	0);
	create_insn	(x=0X7D001B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001B8A,	"line",	0);
	create_insn	(x=0X7D001B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001B92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001B94,	"level",	0);
	set_cmt	(0X7D001B96,	"level_ok",	0);
	create_insn	(x=0X7D001B9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001BA2);
	create_insn	(x=0X7D001BBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001BBE,	"function",	0);
	set_cmt	(0X7D001BC0,	"fmt",	0);
	create_insn	(x=0X7D001BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001BC4,	"line",	0);
	create_insn	(x=0X7D001BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001BCE,	"level",	0);
	set_cmt	(0X7D001BD0,	"level_ok",	0);
	create_insn	(x=0X7D001BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001BDC);
	create_insn	(x=0X7D001BEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001BEC,	"function",	0);
	set_cmt	(0X7D001BEE,	"fmt",	0);
	create_insn	(x=0X7D001BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001BF2,	"line",	0);
	create_insn	(x=0X7D001BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001BFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D001BFC,	"level",	0);
	set_cmt	(0X7D001BFE,	"level_ok",	0);
	create_insn	(x=0X7D001C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001C0A);
	create_dword	(x=0X7D001C14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001C48);
	set_name	(0X7D001C48,	"thread_init_boot_thread");
	create_insn	(x=0X7D001C4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001C7E);
	op_plain_offset	(x,	1,	0X7D0511DC);
	op_plain_offset	(x,	129,	0X7D0511DC);
	create_insn	(x=0X7D001C80);
	op_plain_offset	(x,	1,	0X7D0511DC);
	op_plain_offset	(x,	129,	0X7D0511DC);
	create_insn	(x=0X7D001C82);
	op_plain_offset	(x,	1,	0X7D0511DC);
	op_plain_offset	(x,	129,	0X7D0511DC);
	create_insn	(x=0X7D001C84);
	op_plain_offset	(x,	1,	0X7D0511DC);
	op_plain_offset	(x,	129,	0X7D0511DC);
	create_insn	(x=0X7D001C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001C8E);
	op_plain_offset	(x,	1,	0X7D04F3C0);
	op_plain_offset	(x,	129,	0X7D04F3C0);
	make_array	(0X7D001C92,	0X2);
	create_dword	(x=0X7D001C94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001CA0);
	set_name	(0X7D001CA0,	"thread_clr_boot_thread");
	create_insn	(x=0X7D001CA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001CA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D001CC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001CC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001CCC);
	set_name	(0X7D001CCC,	"thread_handle_fast_smc");
	create_insn	(x=0X7D001CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D001CDE,	0X2);
	create_dword	(x=0X7D001CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001CE4);
	set_name	(0X7D001CE4,	"thread_get_tmp_sp");
	create_insn	(x=0X7D001CEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D001CF2,	0X2);
	create_dword	(x=0X7D001CF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001CF8);
	set_name	(0X7D001CF8,	"thread_get_id");
	create_insn	(x=0X7D001D06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001D0E,	"state",	0);
	create_dword	(x=0X7D001D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001D1C);
	set_name	(0X7D001D1C,	"thread_lazy_save_ns_vfp");
	create_insn	(x=0X7D001D22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001D32,	"state",	0);
	create_dword	(x=0X7D001D3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001D40);
	set_name	(0X7D001D40,	"thread_handle_std_smc");
	create_insn	(x=0X7D001D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001D82);
	create_insn	(0X7D001D90);
	create_insn	(x=0X7D001D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001D96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001DC0);
	op_hex		(x,	1);
	create_insn	(x=0X7D001DC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001DF0);
	create_insn	(x=0X7D001DFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001E06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D001E14);
	create_insn	(x=0X7D001E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001E3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001E48);
	op_hex		(x,	1);
	create_insn	(x=0X7D001E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001E50);
	op_hex		(x,	1);
	create_insn	(x=0X7D001E54);
	op_hex		(x,	1);
	create_insn	(x=0X7D001E58);
	op_hex		(x,	1);
	set_cmt	(0X7D001E90,	"regs",	0);
	make_array	(0X7D001E9A,	0X2);
	create_dword	(0X7D001E9C);
	create_dword	(x=0X7D001EA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001EA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001EAC);
	set_name	(0X7D001EAC,	"thread_lazy_restore_ns_vfp");
	create_insn	(x=0X7D001EB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001ECE,	"state",	0);
	set_cmt	(0X7D001EDA,	"full_state",	0);
	set_cmt	(0X7D001EDE,	"state",	0);
	make_array	(0X7D001EEE,	0X2);
	create_dword	(x=0X7D001EF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001EF4);
	set_name	(0X7D001EF4,	"thread_state_free");
	create_insn	(x=0X7D001EFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D001F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001F2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D001F30);
	set_name	(0X7D001F30,	"thread_rpc_free");
	create_insn	(x=0X7D001F46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001F4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D001F84,	"rv",	0);
	create_insn	(x=0X7D001F86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D001F8A);
	op_stkvar	(x,	1);
	make_array	(0X7D001F96,	0X2);
	create_dword	(x=0X7D001F98);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D001F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D001FA0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D001FA4);
	set_name	(0X7D001FA4,	"thread_init_primary");
	create_insn	(x=0X7D001FA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D001FE4);
	op_plain_offset	(x,	1,	0X7D0DB400);
	op_plain_offset	(x,	129,	0X7D0DB400);
	create_insn	(x=0X7D001FF6);
	op_plain_offset	(x,	1,	0X7D0DD400);
	op_plain_offset	(x,	129,	0X7D0DD400);
	create_insn	(x=0X7D002006);
	op_plain_offset	(x,	1,	0X7D0DF480);
	op_plain_offset	(x,	129,	0X7D0DF480);
	create_insn	(x=0X7D002008);
	op_plain_offset	(x,	1,	0X7D0E1400);
	op_plain_offset	(x,	129,	0X7D0E1400);
	create_insn	(x=0X7D00200E);
	op_plain_offset	(x,	1,	0X7D0DF480);
	op_plain_offset	(x,	129,	0X7D0DF480);
	create_insn	(x=0X7D002010);
	op_plain_offset	(x,	1,	0X7D0E0AC8);
	op_plain_offset	(x,	129,	0X7D0E0AC8);
	create_insn	(x=0X7D002018);
	op_plain_offset	(x,	1,	0X7D0E3508);
	op_plain_offset	(x,	129,	0X7D0E3508);
	create_insn	(x=0X7D00201A);
	op_plain_offset	(x,	1,	0X7D0E3508);
	op_plain_offset	(x,	129,	0X7D0E3508);
	create_insn	(x=0X7D002020);
	op_plain_offset	(x,	1,	0X7D0E5548);
	op_plain_offset	(x,	129,	0X7D0E5548);
	create_insn	(x=0X7D002022);
	op_plain_offset	(x,	1,	0X7D0E5548);
	op_plain_offset	(x,	129,	0X7D0E5548);
	create_insn	(x=0X7D00202C);
	op_plain_offset	(x,	1,	0X7D0E7548);
	op_plain_offset	(x,	129,	0X7D0E7548);
	create_insn	(x=0X7D00202E);
	op_plain_offset	(x,	1,	0X7D0E7548);
	op_plain_offset	(x,	129,	0X7D0E7548);
	create_insn	(x=0X7D002030);
	op_plain_offset	(x,	1,	0X7D0E95C8);
	op_plain_offset	(x,	129,	0X7D0E95C8);
	create_insn	(x=0X7D002034);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D00203C);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D002040);
	op_plain_offset	(x,	1,	0X7D0EB908);
	op_plain_offset	(x,	129,	0X7D0EB908);
	create_insn	(x=0X7D002042);
	op_plain_offset	(x,	1,	0X7D0EB908);
	op_plain_offset	(x,	129,	0X7D0EB908);
	create_insn	(x=0X7D002048);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D00204C);
	op_plain_offset	(x,	1,	0X7D0ED908);
	op_plain_offset	(x,	129,	0X7D0ED908);
	create_insn	(x=0X7D00204E);
	op_plain_offset	(x,	1,	0X7D0ED908);
	op_plain_offset	(x,	129,	0X7D0ED908);
	create_insn	(x=0X7D002054);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D002058);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D00205C);
	op_plain_offset	(x,	1,	0X7D0EF988);
	op_plain_offset	(x,	129,	0X7D0EF988);
	create_insn	(x=0X7D002062);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D002066);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D00206A);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D00206E);
	op_plain_offset	(x,	1,	0X7D0E9288);
	op_plain_offset	(x,	129,	0X7D0E9288);
	create_insn	(x=0X7D002076);
	op_plain_offset	(x,	1,	0X7D0F1988);
	op_plain_offset	(x,	129,	0X7D0F1988);
	create_insn	(x=0X7D00207C);
	op_plain_offset	(x,	1,	0X7D0EF988);
	op_plain_offset	(x,	129,	0X7D0EF988);
	create_insn	(x=0X7D002080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002082);
	op_plain_offset	(x,	1,	0X7D04F3C0);
	op_plain_offset	(x,	129,	0X7D04F3C0);
	create_insn	(x=0X7D00208E);
	op_plain_offset	(x,	1,	0X7D04F3C0);
	op_plain_offset	(x,	129,	0X7D04F3C0);
	create_insn	(x=0X7D002096);
	op_plain_offset	(x,	1,	0X7D04F3C0);
	op_plain_offset	(x,	129,	0X7D04F3C0);
	create_insn	(x=0X7D0020A0);
	op_plain_offset	(x,	1,	0X7D04F3C0);
	op_plain_offset	(x,	129,	0X7D04F3C0);
	create_dword	(x=0X7D0020A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0020D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0020DC);
	set_name	(0X7D0020DC,	"thread_init_per_cpu");
	create_insn	(x=0X7D0020E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0020F6,	"stack_pointer",	0);
	set_cmt	(0X7D0020FE,	"entry_vector",	0);
	create_insn	(x=0X7D0020FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002106);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00210E,	"sp",	0);
	set_cmt	(0X7D002114,	"sp",	0);
	create_insn	(x=0X7D00211A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00211C,	"sp",	0);
	make_array	(0X7D00212A,	0X2);
	create_dword	(x=0X7D00212C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D002130,	"entry_vector");
	create_dword	(x=0X7D002134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00213C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002140);
	set_name	(0X7D002140,	"thread_get_tsd");
	create_insn	(x=0X7D002146);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D002156,	0X2);
	create_dword	(x=0X7D002158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00215C);
	set_name	(0X7D00215C,	"thread_get_ctx_regs");
	create_insn	(x=0X7D002162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D002176,	0X2);
	create_dword	(x=0X7D002178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00217C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002180);
	set_name	(0X7D002180,	"thread_set_irq");
	create_insn	(x=0X7D002190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002192);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0021A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0021AC);
	op_hex		(x,	1);
	create_insn	(0X7D0021BA);
	create_insn	(x=0X7D0021BC);
	op_hex		(x,	1);
	create_dword	(x=0X7D0021C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0021C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0021CC);
	set_name	(0X7D0021CC,	"thread_restore_irq");
	create_insn	(x=0X7D0021DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0021DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0021F2);
	op_hex		(x,	1);
	create_insn	(0X7D0021FE);
	create_dword	(x=0X7D002200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002208);
	set_name	(0X7D002208,	"thread_kernel_save_vfp");
	create_insn	(x=0X7D002216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002220,	"state",	0);
	create_dword	(x=0X7D002230);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002234);
	set_name	(0X7D002234,	"thread_kernel_restore_vfp");
	create_insn	(x=0X7D00223A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00224A,	"full_state",	0);
	set_cmt	(0X7D00224E,	"state",	0);
	make_array	(0X7D002262,	0X2);
	create_dword	(x=0X7D002264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002268);
	set_name	(0X7D002268,	"thread_user_enable_vfp");
	create_insn	(x=0X7D002270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002284,	"state",	0);
	create_insn	(0X7D002294);
	set_cmt	(0X7D0022A6,	"state",	0);
	set_cmt	(0X7D0022B8,	"state",	0);
	set_cmt	(0X7D0022BA,	"full_state",	0);
	create_dword	(x=0X7D0022D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0022DC);
	set_name	(0X7D0022DC,	"thread_user_save_vfp");
	create_insn	(x=0X7D0022E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0022F6,	"state",	0);
	create_dword	(x=0X7D002304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002308);
	set_name	(0X7D002308,	"thread_state_suspend");
	create_insn	(x=0X7D00230C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002322);
	op_hex		(x,	1);
	create_insn	(x=0X7D002336);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D002382,	0X2);
	create_dword	(x=0X7D002384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00238C);
	set_name	(0X7D00238C,	"thread_user_clear_vfp");
	create_insn	(x=0X7D002394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D0023B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0023BC);
	set_name	(0X7D0023BC,	"thread_enter_user_mode");
	create_insn	(x=0X7D0023C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023D6);
	op_hex		(x,	1);
	set_cmt	(0X7D0023DA,	"user_sp",	0);
	create_insn	(x=0X7D0023DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0023E2,	"user_func",	0);
	create_insn	(x=0X7D0023E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023E6);
	op_hex		(x,	1);
	set_cmt	(0X7D0023EA,	"exit_status0",	0);
	create_insn	(x=0X7D0023EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0023EE);
	op_hex		(x,	1);
	set_cmt	(0X7D0023F2,	"spsr",	0);
	create_insn	(x=0X7D0023F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0023F4,	"exit_status1",	0);
	create_insn	(x=0X7D0023F4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0023FE);
	create_dword	(0X7D00240C);
	create_dword	(0X7D002410);
	create_insn	(0X7D002414);
	set_name	(0X7D002414,	"thread_add_mutex");
	create_insn	(x=0X7D00241C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00242C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D002444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00244C);
	set_name	(0X7D00244C,	"thread_rem_mutex");
	create_insn	(x=0X7D002454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00246C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D002480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002484);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002488);
	set_name	(0X7D002488,	"thread_disable_prealloc_rpc_cache");
	create_insn	(x=0X7D00249A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00249E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0024D6);
	create_insn	(0X7D0024EC);
	set_cmt	(0X7D0024F2,	"state",	0);
	create_dword	(x=0X7D0024FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002504);
	set_name	(0X7D002504,	"thread_enable_prealloc_rpc_cache");
	create_insn	(x=0X7D002514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00252E);
	set_cmt	(0X7D002534,	"state",	0);
	make_array	(0X7D00253E,	0X2);
	create_dword	(x=0X7D002540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002544);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002548);
	set_name	(0X7D002548,	"rpc_cmd_nolock");
	create_insn	(x=0X7D002568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00256E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00258C,	"destination",	0);
	set_cmt	(0X7D002590,	"source",	0);
	set_cmt	(0X7D0025A8,	"rv",	0);
	create_insn	(x=0X7D0025AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0025AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0025E0,	"destination",	0);
	set_cmt	(0X7D0025E2,	"source",	0);
	set_cmt	(0X7D0025E6,	"num",	0);
	create_insn	(0X7D0025F6);
	create_dword	(0X7D002600);
	create_dword	(x=0X7D002604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D002608);
	create_insn	(0X7D00260C);
	set_name	(0X7D00260C,	"thread_rpc_free_arg");
	create_insn	(x=0X7D002624);
	op_enum		(x,	1,	GetEnum("TEE_Result"),0);
	set_cmt	(0X7D002626,	"rv",	0);
	create_insn	(x=0X7D00262C);
	op_stkvar	(x,	1);
	make_array	(0X7D002636,	0X2);
	create_dword	(x=0X7D002638);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00263C);
	set_name	(0X7D00263C,	"thread_rpc_alloc_arg");
	create_insn	(x=0X7D002652);
	op_enum		(x,	1,	GetEnum("TEE_Result"),0);
	set_cmt	(0X7D002654,	"rv",	0);
	create_insn	(x=0X7D00265E);
	op_stkvar	(x,	1);
	set_name	(0X7D00265E,	"thread_rpc_unknown1");
	create_insn	(x=0X7D002662);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00266C);
	op_hex		(x,	1);
	create_insn	(x=0X7D002672);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002676,	"cookie",	0);
	set_cmt	(0X7D002678,	"cookie",	0);
	set_cmt	(0X7D002688,	"attr",	0);
	create_insn	(0X7D002688);
	set_cmt	(0X7D00268A,	"pbuf",	0);
	set_cmt	(0X7D00268C,	"len",	0);
	create_dword	(x=0X7D0026A4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0026A8);
	set_name	(0X7D0026A8,	"__thread_std_smc_entry");
	set_cmt	(0X7D0026C0,	"size",	0);
	set_cmt	(0X7D0026C2,	"arg",	0);
	create_insn	(x=0X7D0026C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0026C4,	"cookie",	0);
	create_insn	(x=0X7D0026C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0026CA,	"pa",	0);
	create_insn	(x=0X7D0026CA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0026DC);
	set_cmt	(0X7D0026E0,	"m",	0);
	create_insn	(x=0X7D0026FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D002722,	0X2);
	create_dword	(x=0X7D002724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00272C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002730);
	set_name	(0X7D002730,	"thread_rpc_alloc_payload");
	create_insn	(x=0X7D00274C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002792,	"rv",	0);
	create_insn	(x=0X7D002794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002798);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0027B6,	"pbuf",	0);
	set_cmt	(0X7D0027C6,	"attr",	0);
	create_insn	(0X7D0027C6);
	set_cmt	(0X7D0027C8,	"len",	0);
	create_insn	(0X7D0027DE);
	make_array	(0X7D0027F2,	0X2);
	create_dword	(x=0X7D0027F4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0027F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0027FC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D002800);
	set_name	(0X7D002800,	"print_detailed_abort");
	create_insn	(x=0X7D002804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002808,	"level",	0);
	set_cmt	(0X7D00280A,	"function",	0);
	set_cmt	(0X7D00280C,	"fmt",	0);
	create_insn	(x=0X7D00280C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002810,	"level_ok",	0);
	set_cmt	(0X7D002812,	"line",	0);
	set_cmt	(0X7D002818,	"inlined abort_type_to_str()",	1);
	create_insn	(x=0X7D00281E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00282A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00283A,	"switch 5 cases ",	0);
	set_cmt	(0X7D00283E,	"switch jump",	0);
	set_cmt	(0X7D002842,	"jump table for switch statement",	0);
	create_byte	(0X7D002842);
	set_name	(0X7D002842,	"jpt_7D00283E");
	create_byte	(0X7D002843);
	create_byte	(0X7D002844);
	create_byte	(0X7D002845);
	create_byte	(0X7D002846);
	set_cmt	(0X7D002848,	"jumptable 7D00283E case 0",	1);
	create_insn	(x=0X7D002848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00284C,	"jumptable 7D00283E case 4",	1);
	create_insn	(x=0X7D00284C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002850,	"jumptable 7D00283E case 3",	1);
	create_insn	(x=0X7D002850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002854,	"jumptable 7D00283E default case",	1);
	create_insn	(x=0X7D002854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D002854,	"def_7D00283E");
	set_cmt	(0X7D002858,	"jumptable 7D00283E case 2",	1);
	create_insn	(x=0X7D002858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00285A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00285C,	"function",	0);
	set_cmt	(0X7D002862,	"level",	0);
	create_insn	(x=0X7D002864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002868);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00286A,	"line",	0);
	set_cmt	(0X7D00286C,	"level_ok",	0);
	create_insn	(x=0X7D00287E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002880);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002882,	"fmt",	0);
	create_insn	(x=0X7D002882);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002886);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002888,	"function",	0);
	set_cmt	(0X7D00288A,	"level",	0);
	create_insn	(x=0X7D00288C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00288E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002890,	"level_ok",	0);
	set_cmt	(0X7D002892,	"line",	0);
	create_insn	(x=0X7D00289C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00289E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028A0,	"fmt",	0);
	create_insn	(x=0X7D0028A0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028A4,	"function",	0);
	set_cmt	(0X7D0028A8,	"level",	0);
	create_insn	(x=0X7D0028AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028AC,	"line",	0);
	set_cmt	(0X7D0028AE,	"level_ok",	0);
	create_insn	(x=0X7D0028B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0028B8,	"function",	0);
	set_cmt	(0X7D0028BA,	"fmt",	0);
	create_insn	(x=0X7D0028BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028BE,	"line",	0);
	create_insn	(x=0X7D0028C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0028C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0028C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028CC,	"level",	0);
	create_insn	(x=0X7D0028CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028D0,	"level_ok",	0);
	create_insn	(x=0X7D0028DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0028E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0028EA,	"level",	0);
	create_insn	(x=0X7D0028EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0028EE,	"function",	0);
	set_cmt	(0X7D0028F4,	"line",	0);
	set_cmt	(0X7D0028F6,	"level_ok",	0);
	create_insn	(x=0X7D0028F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0028FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002908);
	op_hex		(x,	1);
	create_insn	(x=0X7D002912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002914);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002916,	"level",	0);
	set_cmt	(0X7D002918,	"function",	0);
	set_cmt	(0X7D00291E,	"line",	0);
	set_cmt	(0X7D002920,	"level_ok",	0);
	create_insn	(x=0X7D002922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00292C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00292E,	"function",	0);
	set_cmt	(0X7D002930,	"fmt",	0);
	create_insn	(x=0X7D002930);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002934,	"line",	0);
	create_insn	(x=0X7D002936);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00293A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00293E,	"level",	0);
	create_insn	(x=0X7D002940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002944);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002946,	"level_ok",	0);
	create_dword	(x=0X7D002950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00295C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00296C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002974);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00297C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00298C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002990);
	set_name	(0X7D002990,	"handle_user_ta_panic");
	create_insn	(x=0X7D002992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0029A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029B0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0029C8);
	op_hex		(x,	1);
	create_dword	(x=0X7D0029D0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0029D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0029D8);
	create_insn	(x=0X7D0029DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0029DC,	"abort_print");
	make_array	(0X7D0029E2,	0X2);
	create_dword	(x=0X7D0029E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0029E8);
	set_name	(0X7D0029E8,	"abort_print_error");
	create_insn	(x=0X7D0029EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0029F4,	"inlined print_stack_unwind()",	1);
	create_insn	(x=0X7D0029F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0029F6,	"function",	0);
	set_cmt	(0X7D0029F8,	"level",	0);
	set_cmt	(0X7D0029FA,	"line",	0);
	set_cmt	(0X7D0029FC,	"fmt",	0);
	create_insn	(x=0X7D0029FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0029FE,	"level_ok",	0);
	create_insn	(x=0X7D002A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A1A);
	op_hex		(x,	1);
	create_insn	(x=0X7D002A1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A52);
	op_hex		(x,	1);
	create_insn	(x=0X7D002A5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002A66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002A68,	"function",	0);
	set_cmt	(0X7D002A6A,	"level",	0);
	create_insn	(x=0X7D002A6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002A6E,	"line",	0);
	set_cmt	(0X7D002A70,	"fmt",	0);
	create_insn	(x=0X7D002A70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002A72,	"level_ok",	0);
	set_cmt	(0X7D002A78,	"state",	0);
	create_insn	(x=0X7D002A78);
	op_stkvar	(x,	1);
	make_array	(0X7D002A86,	0X2);
	create_dword	(x=0X7D002A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D002A88,	"ctx");
	create_dword	(x=0X7D002A8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002A94);
	set_name	(0X7D002A94,	"abort_handler");
	create_insn	(x=0X7D002AAA);
	op_stkvar	(x,	1);
	create_insn	(0X7D002AB2);
	create_insn	(x=0X7D002AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002ABC);
	op_stkvar	(x,	1);
	create_insn	(0X7D002AC0);
	create_insn	(x=0X7D002AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002ACA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002AFA);
	op_hex		(x,	1);
	create_insn	(x=0X7D002AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002B2C);
	op_hex		(x,	1);
	create_insn	(0X7D002B36);
	create_insn	(x=0X7D002B56);
	op_hex		(x,	1);
	create_insn	(x=0X7D002B5E);
	op_hex		(x,	1);
	create_insn	(0X7D002B6E);
	create_insn	(0X7D002B76);
	create_insn	(x=0X7D002B78);
	op_hex		(x,	1);
	set_cmt	(0X7D002B80,	"ai",	0);
	create_insn	(x=0X7D002B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002B86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002B8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002B8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002B92);
	set_cmt	(0X7D002B94,	"ai",	0);
	create_insn	(x=0X7D002B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002B9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BA8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002BAE,	"switch 7 cases ",	0);
	set_cmt	(0X7D002BB2,	"switch jump",	0);
	set_cmt	(0X7D002BB6,	"jump table for switch statement",	0);
	create_byte	(0X7D002BB6);
	set_name	(0X7D002BB6,	"jpt_7D002BB2");
	create_byte	(0X7D002BB7);
	create_byte	(0X7D002BB8);
	create_byte	(0X7D002BB9);
	create_byte	(0X7D002BBA);
	create_byte	(0X7D002BBB);
	create_byte	(0X7D002BBC);
	set_cmt	(0X7D002BBE,	"jumptable 7D002BB2 case 0",	1);
	create_insn	(x=0X7D002BBE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002BC8,	"ai",	0);
	create_insn	(x=0X7D002BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002BCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002BDA,	"jumptable 7D002BB2 case 6",	1);
	create_insn	(x=0X7D002BDA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002BE2,	"ai",	0);
	create_insn	(x=0X7D002BE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002BE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002BF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002BF4,	"jumptable 7D002BB2 default case",	1);
	create_insn	(x=0X7D002BF4);
	op_stkvar	(x,	1);
	set_name	(0X7D002BF4,	"def_7D002BB2");
	create_insn	(0X7D002BFC);
	create_insn	(x=0X7D002C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002C0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002C10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002C14,	"uvfp",	0);
	set_cmt	(0X7D002C1E,	"jumptable 7D002BB2 cases 2-4",	1);
	create_insn	(0X7D002C1E);
	create_insn	(x=0X7D002C26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002C2E,	"ai",	0);
	create_insn	(x=0X7D002C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002C3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002C3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002C40,	"inlined print_user_abort()",	1);
	create_insn	(x=0X7D002C40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002C42,	"ai",	0);
	create_insn	(x=0X7D002C42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002C50,	"ai",	0);
	create_insn	(x=0X7D002C50);
	op_stkvar	(x,	1);
	make_array	(0X7D002C5A,	0X2);
	create_dword	(0X7D002C5C);
	create_dword	(0X7D002C60);
	create_dword	(0X7D002C64);
	create_dword	(0X7D002C68);
	create_dword	(0X7D002C6C);
	create_dword	(0X7D002C70);
	create_dword	(0X7D002C74);
	create_dword	(0X7D002C78);
	create_dword	(0X7D002C7C);
	create_dword	(0X7D002C80);
	create_dword	(0X7D002C84);
	create_dword	(x=0X7D002C88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002C8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002C94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002CA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002CA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002CAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002CB0);
	set_name	(0X7D002CB0,	"vfp_save_extension_regs");
	create_insn	(0X7D002CBC);
	set_name	(0X7D002CBC,	"vfp_restore_extension_regs");
	create_insn	(0X7D002CC8);
	set_name	(0X7D002CC8,	"vfp_write_fpexc");
	create_insn	(0X7D002CD0);
	set_name	(0X7D002CD0,	"vfp_read_fpexc");
	create_insn	(0X7D002CD8);
	set_name	(0X7D002CD8,	"vfp_write_fpscr");
	create_insn	(0X7D002CE0);
	set_name	(0X7D002CE0,	"vfp_read_fpscr");
	create_insn	(0X7D002CE8);
	set_name	(0X7D002CE8,	"get_core_pos");
	create_insn	(x=0X7D002CEC);
	op_hex		(x,	1);
	create_insn	(x=0X7D002CF0);
	op_hex		(x,	1);
	create_insn	(0X7D002CFC);
	set_name	(0X7D002CFC,	"temp_set_mode");
	create_insn	(x=0X7D002D10);
	op_hex		(x,	1);
	create_insn	(0X7D002D1C);
	set_name	(0X7D002D1C,	"read_mode_sp");
	create_insn	(0X7D002D38);
	set_name	(0X7D002D38,	"read_mode_lr");
	create_insn	(0X7D002D54);
	set_name	(0X7D002D54,	"thread_unknown54");
	create_dword	(0X7D002D74);
	create_insn	(0X7D002D78);
	set_name	(0X7D002D78,	"__mutex_unlock");
	set_cmt	(0X7D002D88,	"address",	0);
	create_insn	(x=0X7D002D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002DA0);
	set_cmt	(0X7D002DA2,	"m",	0);
	set_cmt	(0X7D002DAE,	"address",	0);
	set_cmt	(0X7D002DB4,	"state",	0);
	set_cmt	(0X7D002DBA,	"wq",	0);
	set_cmt	(0X7D002DBC,	"sync_obj",	0);
	create_dword	(x=0X7D002DCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002DD4);
	set_name	(0X7D002DD4,	"mutex_destroy");
	create_insn	(x=0X7D002DDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002DDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002DE4,	"wq",	0);
	create_insn	(0X7D002DE4);
	create_insn	(x=0X7D002DEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002DF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002DF8);
	make_array	(0X7D002DFA,	0X2);
	create_dword	(x=0X7D002DFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002E04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002E08);
	set_name	(0X7D002E08,	"condvar_destroy");
	set_cmt	(0X7D002E10,	"cv",	0);
	set_cmt	(0X7D002E12,	"wq",	0);
	create_insn	(x=0X7D002E1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002E1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002E26);
	make_array	(0X7D002E2E,	0X2);
	create_dword	(x=0X7D002E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002E34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002E38);
	set_name	(0X7D002E38,	"condvar_wait");
	set_cmt	(0X7D002E4A,	"address",	0);
	create_insn	(x=0X7D002E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002E5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002E5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002E62,	"address",	0);
	create_insn	(0X7D002E62);
	set_cmt	(0X7D002E70,	"address",	0);
	set_cmt	(0X7D002E76,	"wq",	0);
	set_cmt	(0X7D002E78,	"wqe",	0);
	create_insn	(x=0X7D002E78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002E7A,	"cv",	0);
	create_insn	(x=0X7D002E86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002E92);
	set_cmt	(0X7D002E94,	"m",	0);
	set_cmt	(0X7D002E9A,	"address",	0);
	set_cmt	(0X7D002EA2,	"state",	0);
	set_cmt	(0X7D002EA8,	"wq",	0);
	set_cmt	(0X7D002EAA,	"sync_obj",	0);
	set_cmt	(0X7D002EBA,	"wqe",	0);
	create_insn	(x=0X7D002EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D002EBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D002EBE,	"wq",	0);
	set_cmt	(0X7D002EC0,	"sync_obj",	0);
	set_cmt	(0X7D002EC8,	"m",	0);
	create_dword	(x=0X7D002ED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D002EDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002EE0);
	set_name	(0X7D002EE0,	"wq_wait_init");
	set_cmt	(0X7D002EFC,	"address",	0);
	create_insn	(x=0X7D002EFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002F0E);
	create_insn	(0X7D002F14);
	set_cmt	(0X7D002F18,	"address",	0);
	create_insn	(x=0X7D002F18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002F1E,	"state",	0);
	create_dword	(x=0X7D002F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D002F28,	"address");
	create_insn	(0X7D002F2C);
	set_name	(0X7D002F2C,	"wq_wait_final");
	set_cmt	(0X7D002F32,	"id",	0);
	set_cmt	(0X7D002F36,	"func",	0);
	set_cmt	(0X7D002F44,	"address",	0);
	create_insn	(x=0X7D002F44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D002F5A);
	create_insn	(0X7D002F64);
	set_cmt	(0X7D002F68,	"address",	0);
	create_insn	(x=0X7D002F68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002F6E,	"state",	0);
	make_array	(0X7D002F7A,	0X2);
	create_dword	(x=0X7D002F7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002F80);
	set_name	(0X7D002F80,	"wq_wake_one");
	set_cmt	(0X7D002F8C,	"address",	0);
	create_insn	(x=0X7D002F8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D002FA0);
	op_hex		(x,	1);
	create_insn	(0X7D002FAA);
	create_insn	(0X7D002FAE);
	set_cmt	(0X7D002FB4,	"address",	0);
	create_insn	(x=0X7D002FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002FBA,	"state",	0);
	set_cmt	(0X7D002FC2,	"id",	0);
	set_cmt	(0X7D002FC4,	"func",	0);
	create_insn	(0X7D002FCE);
	create_dword	(x=0X7D002FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D002FD4);
	set_name	(0X7D002FD4,	"wq_promote_condvar");
	set_cmt	(0X7D002FE6,	"address",	0);
	create_insn	(x=0X7D002FE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D002FFC,	"address",	0);
	create_insn	(x=0X7D002FFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003002,	"state",	0);
	create_insn	(0X7D00300C);
	create_insn	(0X7D003010);
	make_array	(0X7D003012,	0X2);
	create_dword	(x=0X7D003014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003018);
	set_name	(0X7D003018,	"wq_have_condvar");
	set_cmt	(0X7D003026,	"address",	0);
	create_insn	(x=0X7D003026);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00303A);
	create_insn	(0X7D00303E);
	set_cmt	(0X7D003040,	"address",	0);
	create_insn	(x=0X7D003040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003046,	"state",	0);
	create_dword	(x=0X7D003050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003054);
	set_name	(0X7D003054,	"wq_is_empty");
	create_insn	(x=0X7D003056);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003062,	"address",	0);
	set_cmt	(0X7D00306A,	"address",	0);
	set_cmt	(0X7D003078,	"state",	0);
	make_array	(0X7D003082,	0X2);
	create_dword	(x=0X7D003084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003088);
	set_name	(0X7D003088,	"pm_panic");
	create_insn	(x=0X7D00308A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00308E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D003096,	0X2);
	create_dword	(x=0X7D003098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00309C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0030A0);
	set_name	(0X7D0030A0,	"generic_boot_init_primary");
	set_cmt	(0X7D0030A2,	"exceptions",	0);
	create_insn	(x=0X7D0030AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0030B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0030BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0030BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0030CA,	"buf",	0);
	create_insn	(x=0X7D0030CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0030CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0030CE,	"len",	0);
	create_insn	(x=0X7D0030D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0030DA,	"level",	0);
	set_cmt	(0X7D0030DC,	"fmt",	0);
	create_insn	(x=0X7D0030DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0030DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0030E0,	"line",	0);
	create_insn	(x=0X7D0030E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0030E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0030E8,	"level_ok",	0);
	set_cmt	(0X7D0030FA,	"nsec_entry",	0);
	create_insn	(x=0X7D003108);
	op_hex		(x,	1);
	create_insn	(x=0X7D00311A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D003128);
	create_dword	(x=0X7D00312C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D003134,	"buf");
	create_dword	(x=0X7D003138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00313C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00314C);
	set_name	(0X7D00314C,	"unwind_stack");
	create_insn	(x=0X7D003150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003152);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00318C);
	create_insn	(0X7D003190);
	create_insn	(x=0X7D0031BA);
	op_hex		(x,	1);
	create_insn	(0X7D0031D4);
	set_cmt	(0X7D0031E6,	"state",	0);
	create_insn	(0X7D0031E6);
	create_insn	(x=0X7D0031F0);
	op_hex		(x,	1);
	create_insn	(0X7D00320A);
	create_insn	(x=0X7D00321A);
	op_hex		(x,	1);
	set_cmt	(0X7D003222,	"state",	0);
	create_insn	(x=0X7D003224);
	op_hex		(x,	1);
	create_insn	(0X7D00325A);
	create_insn	(0X7D00326C);
	create_insn	(x=0X7D003270);
	op_hex		(x,	1);
	create_insn	(x=0X7D003278);
	op_hex		(x,	1);
	create_insn	(0X7D003282);
	create_insn	(x=0X7D003288);
	op_hex		(x,	1);
	create_insn	(0X7D0032B2);
	create_insn	(0X7D0032C0);
	create_insn	(0X7D0032CA);
	set_cmt	(0X7D0032CE,	"state",	0);
	create_insn	(x=0X7D0032D8);
	op_hex		(x,	1);
	create_insn	(0X7D003306);
	set_cmt	(0X7D00330A,	"state",	0);
	create_insn	(0X7D00331E);
	create_insn	(0X7D003328);
	create_insn	(0X7D003330);
	create_insn	(x=0X7D00334A);
	op_hex		(x,	1);
	create_insn	(0X7D003350);
	create_insn	(x=0X7D00335A);
	op_hex		(x,	1);
	create_insn	(0X7D003364);
	create_insn	(0X7D003368);
	create_dword	(x=0X7D00336C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003374);
	set_name	(0X7D003374,	"TA_KeyDerivation");
	set_cmt	(0X7D00337A,	"destination",	0);
	create_insn	(x=0X7D00337A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00337C,	"num",	0);
	create_insn	(x=0X7D00337E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00338A,	"passphrase",	0);
	create_insn	(x=0X7D00338A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003392);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003394,	"fourcc",	0);
	create_insn	(x=0X7D003394);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003396,	"out_key",	0);
	create_insn	(x=0X7D003396);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003398,	"fourcc_len",	0);
	create_insn	(x=0X7D003398);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00339A,	"passphrase_len",	0);
	set_cmt	(0X7D00339C,	"out_key_len",	0);
	create_insn	(x=0X7D00339C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00339E,	"a2",	0);
	set_cmt	(0X7D0033A0,	"a1",	0);
	set_cmt	(0X7D0033A8,	"passphrase",	0);
	create_insn	(x=0X7D0033A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0033AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0033B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0033B2,	"out_key_len",	0);
	create_insn	(x=0X7D0033B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0033B4,	"out_key",	0);
	create_insn	(x=0X7D0033B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0033B6,	"a2",	0);
	set_cmt	(0X7D0033B8,	"passphrase_len",	0);
	set_cmt	(0X7D0033BA,	"a1",	0);
	make_array	(0X7D0033C6,	0X2);
	create_dword	(x=0X7D0033C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0033C8,	"source");
	create_dword	(0X7D0033CC);
	create_dword	(x=0X7D0033D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0033D0,	"out_key");
	create_dword	(0X7D0033D4);
	create_dword	(x=0X7D0033D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D0033DC,	"fmt",	0);
	create_insn	(0X7D0033DC);
	set_name	(0X7D0033DC,	"tee_core_cc_key_generate");
	create_insn	(x=0X7D0033DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0033E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0033F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0033F4,	"level",	0);
	create_insn	(x=0X7D0033FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0033FC,	"line",	0);
	set_cmt	(0X7D0033FE,	"level_ok",	0);
	create_insn	(x=0X7D003406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003408,	"prak_len",	0);
	set_cmt	(0X7D00340C,	"ufie",	0);
	create_insn	(x=0X7D00340C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00340E,	"tbie_len",	0);
	set_cmt	(0X7D003410,	"ufie_len",	0);
	create_insn	(x=0X7D003410);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003412,	"tbie",	0);
	set_cmt	(0X7D003414,	"prak",	0);
	create_insn	(x=0X7D003414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00341C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00341E,	"prak",	0);
	create_insn	(x=0X7D00341E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003420,	"ufie",	0);
	create_insn	(x=0X7D003420);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003422,	"tbie_len",	0);
	set_cmt	(0X7D003424,	"ufie_len",	0);
	create_insn	(x=0X7D003424);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003426,	"prak_len",	0);
	set_cmt	(0X7D00342A,	"tbie",	0);
	create_insn	(x=0X7D00342A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D003438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00343C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D003440,	"ufie");
	create_dword	(x=0X7D003444);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D003444,	"tbie");
	create_dword	(x=0X7D003448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D003448,	"prak");
	create_dword	(x=0X7D00344C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D003454,	"key");
	create_insn	(0X7D003458);
	set_name	(0X7D003458,	"fw_image_verify");
	set_cmt	(0X7D00345C,	"fmt",	0);
	create_insn	(x=0X7D003462);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003476,	"level",	0);
	set_cmt	(0X7D00347C,	"function",	0);
	create_insn	(x=0X7D00347C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00347E,	"line",	0);
	set_cmt	(0X7D003480,	"level_ok",	0);
	create_insn	(0X7D00348A);
	create_insn	(x=0X7D00348E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003490,	"level",	0);
	set_cmt	(0X7D003496,	"function",	0);
	create_insn	(x=0X7D003496);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003498,	"line",	0);
	set_cmt	(0X7D00349A,	"level_ok",	0);
	set_cmt	(0X7D0034A6,	"source",	0);
	create_insn	(0X7D0034A6);
	set_cmt	(0X7D0034AA,	"destination",	0);
	create_insn	(x=0X7D0034AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034B2,	"img_size",	0);
	set_cmt	(0X7D0034B6,	"expect_type",	0);
	set_cmt	(0X7D0034BC,	"flags",	0);
	create_insn	(x=0X7D0034BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034BE,	"a7",	0);
	create_insn	(x=0X7D0034BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034C0,	"dt_ptr",	0);
	set_cmt	(0X7D0034C2,	"a6",	0);
	create_insn	(x=0X7D0034C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034C4,	"a8",	0);
	create_insn	(x=0X7D0034C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034C6,	"a9",	0);
	create_insn	(x=0X7D0034C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034C8,	"a10",	0);
	create_insn	(x=0X7D0034C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034CA,	"expect_name",	0);
	create_insn	(x=0X7D0034D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0034D6,	"level",	0);
	set_cmt	(0X7D0034D8,	"fmt",	0);
	create_insn	(x=0X7D0034D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0034DA,	"function",	0);
	create_insn	(x=0X7D0034DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0034DC,	"line",	0);
	set_cmt	(0X7D0034E0,	"level_ok",	0);
	create_insn	(0X7D0034EA);
	create_insn	(x=0X7D0034F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0034F8);
	op_stkvar	(x,	1);
	create_insn	(0X7D003500);
	create_insn	(0X7D003504);
	create_insn	(0X7D003508);
	make_array	(0X7D003512,	0X2);
	create_dword	(x=0X7D003514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00351C);
	create_dword	(x=0X7D003520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003528);
	set_name	(0X7D003528,	"crypto_init");
	set_cmt	(0X7D00352C,	"fmt",	0);
	create_insn	(x=0X7D003534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00353C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00353E,	"level",	0);
	set_cmt	(0X7D003540,	"fmt",	0);
	create_insn	(x=0X7D003540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003542);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003544,	"line",	0);
	set_cmt	(0X7D003546,	"level_ok",	0);
	create_insn	(x=0X7D003550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003558,	"size",	0);
	create_insn	(x=0X7D003566);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003568,	"level",	0);
	set_cmt	(0X7D00356A,	"fmt",	0);
	create_insn	(x=0X7D00356A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00356C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00356E,	"line",	0);
	set_cmt	(0X7D003570,	"level_ok",	0);
	create_insn	(0X7D003578);
	create_insn	(0X7D003592);
	create_insn	(0X7D0035A0);
	create_insn	(0X7D0035A6);
	create_insn	(x=0X7D0035AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0035AE,	"level",	0);
	create_insn	(x=0X7D0035B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0035B6,	"level_ok",	0);
	set_cmt	(0X7D0035B8,	"line",	0);
	create_insn	(x=0X7D0035BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0035C0,	"level",	0);
	create_insn	(x=0X7D0035C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0035C8,	"line",	0);
	set_cmt	(0X7D0035CA,	"level_ok",	0);
	create_insn	(0X7D0035D4);
	create_insn	(0X7D0035DA);
	create_insn	(x=0X7D0035E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0035EA,	"destination",	0);
	set_cmt	(0X7D0035EE,	"source",	0);
	set_cmt	(0X7D0035F0,	"num",	0);
	create_insn	(x=0X7D0035F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0035F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0035FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003602);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003606);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00360C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00361A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003622);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D003624,	"ctx",	0);
	set_cmt	(0X7D003628,	"algo",	0);
	create_dword	(x=0X7D003634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00363C);
	create_dword	(x=0X7D003640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003644);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D003648);
	create_dword	(0X7D00364C);
	create_dword	(x=0X7D003650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00365C);
	create_dword	(0X7D003660);
	create_dword	(0X7D003664);
	create_dword	(x=0X7D003668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00366C);
	set_name	(0X7D00366C,	"crypto_update");
	set_cmt	(0X7D00367A,	"algo",	0);
	create_insn	(x=0X7D00367E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003682);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003686,	"len",	0);
	create_insn	(x=0X7D003686);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003688,	"data",	0);
	create_insn	(x=0X7D003688);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00368A,	"dst",	0);
	create_insn	(x=0X7D00368A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00368E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D003690,	"mode",	0);
	set_cmt	(0X7D003692,	"last_block",	0);
	set_cmt	(0X7D003694,	"ctx",	0);
	create_insn	(x=0X7D00369A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00369C,	"ctx",	0);
	create_insn	(0X7D0036A4);
	create_dword	(0X7D0036AC);
	create_dword	(x=0X7D0036B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0036B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0036B8);
	set_name	(0X7D0036B8,	"crypto_finalize");
	set_cmt	(0X7D0036BA,	"digest",	0);
	set_cmt	(0X7D0036BE,	"algo",	0);
	create_insn	(x=0X7D0036C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0036C8,	"ctx",	0);
	create_insn	(x=0X7D0036CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0036CC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D0036D2);
	create_insn	(x=0X7D0036D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0036D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0036D8,	"ctx",	0);
	create_insn	(x=0X7D0036DA);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D0036DC,	"len",	0);
	create_insn	(x=0X7D0036E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0036E4,	"ptr",	0);
	create_insn	(0X7D0036F2);
	create_dword	(0X7D0036F8);
	create_dword	(x=0X7D0036FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003704);
	set_name	(0X7D003704,	"image_auth");
	create_insn	(x=0X7D00370C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00370E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00372A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00372E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003732);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00373A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00373E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003766);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003770);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D003774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003776);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00377A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00377E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003792);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D003794);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D0037A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0037A4);
	create_insn	(0X7D0037A8);
	set_name	(0X7D0037A8,	"keymgr_get_key");
	create_insn	(x=0X7D0037AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0037C6);
	create_insn	(x=0X7D0037D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0037E6);
	make_array	(0X7D0037EA,	0X2);
	create_dword	(x=0X7D0037EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0037F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0037F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0037F8);
	set_name	(0X7D0037F8,	"keymgr_add_key");
	create_insn	(x=0X7D003808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00381C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00382E);
	create_insn	(x=0X7D003830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003832,	"level",	0);
	set_cmt	(0X7D003834,	"fmt",	0);
	create_insn	(x=0X7D003834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00383A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00383C,	"line",	0);
	create_insn	(x=0X7D00383E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003840,	"level_ok",	0);
	create_insn	(0X7D00384C);
	set_cmt	(0X7D00384E,	"destination",	0);
	set_cmt	(0X7D003850,	"source",	0);
	set_cmt	(0X7D003852,	"num",	0);
	set_cmt	(0X7D003858,	"source",	0);
	set_cmt	(0X7D00385A,	"destination",	0);
	set_cmt	(0X7D00385C,	"num",	0);
	create_insn	(0X7D003866);
	set_cmt	(0X7D003868,	"destination",	0);
	set_cmt	(0X7D00386A,	"source",	0);
	set_cmt	(0X7D00386C,	"num",	0);
	create_dword	(x=0X7D003878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00387C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003888);
	set_name	(0X7D003888,	"keymgr_inject_key");
	create_insn	(x=0X7D00388E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00389C);
	op_chr		(x,	1);
	create_insn	(x=0X7D00389E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038A6);
	op_chr		(x,	1);
	create_insn	(x=0X7D0038AC);
	op_chr		(x,	1);
	create_insn	(x=0X7D0038B4);
	op_chr		(x,	1);
	create_insn	(x=0X7D0038BA);
	op_chr		(x,	1);
	create_insn	(x=0X7D0038C0);
	op_chr		(x,	1);
	create_insn	(x=0X7D0038C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0038D4);
	create_insn	(x=0X7D0038D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038E0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0038E4);
	create_insn	(x=0X7D0038E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0038F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0038F8,	"level",	0);
	set_cmt	(0X7D0038FA,	"fmt",	0);
	create_insn	(x=0X7D0038FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0038FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003900,	"line",	0);
	set_cmt	(0X7D003902,	"level_ok",	0);
	set_cmt	(0X7D003908,	"key",	0);
	set_cmt	(0X7D00390A,	"key_head",	0);
	create_insn	(x=0X7D00390A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00390C);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D003918);
	op_chr		(x,	0);
	create_dword	(x=0X7D00391C);
	op_chr		(x,	0);
	create_dword	(x=0X7D003920);
	op_chr		(x,	0);
	create_dword	(x=0X7D003924);
	op_chr		(x,	0);
	create_dword	(x=0X7D003928);
	op_chr		(x,	0);
	create_dword	(x=0X7D00392C);
	op_chr		(x,	0);
	create_dword	(x=0X7D003930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003938);
	set_name	(0X7D003938,	"keymgr_inject_lc_keys");
	set_cmt	(0X7D00393E,	"fourcc",	0);
	set_cmt	(0X7D003940,	"key",	0);
	set_cmt	(0X7D003942,	"key_len",	0);
	set_cmt	(0X7D003948,	"key",	0);
	create_insn	(x=0X7D003948);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00394A,	"key_len",	0);
	create_insn	(x=0X7D00394A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00394C,	"fourcc",	0);
	set_cmt	(0X7D003952,	"key",	0);
	set_cmt	(0X7D003954,	"key_len",	0);
	set_cmt	(0X7D003956,	"fourcc",	0);
	create_dword	(0X7D003960);
	set_name	(0X7D003960,	"fourcc");
	create_dword	(0X7D003964);
	create_dword	(0X7D003968);
	create_insn	(0X7D00396C);
	set_name	(0X7D00396C,	"keymgr_inject_uc_keys");
	set_cmt	(0X7D003972,	"fourcc",	0);
	set_cmt	(0X7D003974,	"key",	0);
	set_cmt	(0X7D003976,	"key_len",	0);
	set_cmt	(0X7D00397C,	"key",	0);
	create_insn	(x=0X7D00397C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00397E,	"key_len",	0);
	create_insn	(x=0X7D00397E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003980,	"fourcc",	0);
	set_cmt	(0X7D003986,	"key",	0);
	set_cmt	(0X7D003988,	"key_len",	0);
	set_cmt	(0X7D00398A,	"fourcc",	0);
	create_dword	(x=0X7D003994);
	op_chr		(x,	0);
	create_dword	(x=0X7D003998);
	op_chr		(x,	0);
	create_dword	(x=0X7D00399C);
	op_chr		(x,	0);
	set_cmt	(0X7D0039A0,	"fmt",	0);
	create_insn	(0X7D0039A0);
	set_name	(0X7D0039A0,	"chunk_load");
	set_cmt	(0X7D0039A4,	"op",	0);
	create_insn	(x=0X7D0039B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0039B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0039C0,	"op",	0);
	create_insn	(0X7D0039C0);
	set_cmt	(0X7D0039C2,	"va",	0);
	set_cmt	(0X7D0039C4,	"len",	0);
	create_insn	(x=0X7D0039CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0039D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0039D2,	"line",	0);
	set_cmt	(0X7D0039DA,	"level",	0);
	set_cmt	(0X7D0039DC,	"level_ok",	0);
	set_cmt	(0X7D0039E4,	"destination",	0);
	create_insn	(0X7D0039E4);
	set_cmt	(0X7D0039E6,	"source",	0);
	set_cmt	(0X7D0039E8,	"num",	0);
	create_dword	(x=0X7D0039F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0039F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0039FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D003A00);
	op_hex		(x,	1);
	set_name	(0X7D003A00,	"image_extract_payload");
	create_insn	(0X7D003A22);
	create_insn	(x=0X7D003A2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003A2C,	"level",	0);
	set_cmt	(0X7D003A2E,	"fmt",	0);
	create_insn	(x=0X7D003A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003A34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003A36,	"line",	0);
	set_cmt	(0X7D003A3A,	"level_ok",	0);
	create_insn	(0X7D003A46);
	create_insn	(x=0X7D003A48);
	op_hex		(x,	1);
	create_insn	(x=0X7D003A4E);
	op_hex		(x,	1);
	create_insn	(0X7D003A5E);
	create_insn	(x=0X7D003A62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003A66,	"source",	0);
	set_cmt	(0X7D003A6A,	"num",	0);
	set_cmt	(0X7D003A6C,	"destination",	0);
	create_insn	(x=0X7D003A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003A70);
	op_hex		(x,	1);
	create_insn	(x=0X7D003A98);
	op_stkvar	(x,	1);
	create_insn	(0X7D003A9E);
	create_insn	(0X7D003AB2);
	make_array	(0X7D003ABA,	0X2);
	create_dword	(x=0X7D003ABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003AC4);
	set_name	(0X7D003AC4,	"image_decrypt_payload");
	set_cmt	(0X7D003AC8,	"fmt",	0);
	create_insn	(x=0X7D003AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003AEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003AEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003AF4,	"level",	0);
	set_cmt	(0X7D003AF6,	"line",	0);
	set_cmt	(0X7D003AF8,	"level_ok",	0);
	create_insn	(0X7D003B04);
	set_cmt	(0X7D003B08,	"destination",	0);
	create_insn	(x=0X7D003B08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003B0A,	"num",	0);
	set_cmt	(0X7D003B0C,	"source",	0);
	create_insn	(x=0X7D003B16);
	op_hex		(x,	1);
	create_insn	(0X7D003B28);
	create_insn	(x=0X7D003B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B48);
	op_hex		(x,	1);
	create_insn	(x=0X7D003B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003B52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003B54);
	op_stkvar	(x,	1);
	create_insn	(0X7D003B5A);
	create_insn	(x=0X7D003B72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B76);
	op_hex		(x,	1);
	set_cmt	(0X7D003B7E,	"data",	0);
	create_insn	(x=0X7D003B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003B90,	"crypto",	0);
	set_cmt	(0X7D003B92,	"len",	0);
	set_cmt	(0X7D003B94,	"dst",	0);
	create_insn	(x=0X7D003B96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003BA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003BA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003BAA,	"line",	0);
	set_cmt	(0X7D003BAE,	"fmt",	0);
	create_insn	(x=0X7D003BAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003BB0,	"level",	0);
	set_cmt	(0X7D003BB2,	"level_ok",	0);
	create_insn	(0X7D003BBE);
	create_insn	(0X7D003BC6);
	set_cmt	(0X7D003BCA,	"crypto",	0);
	create_insn	(0X7D003BCA);
	set_cmt	(0X7D003BCC,	"a2",	0);
	create_insn	(x=0X7D003BD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003BD8);
	op_stkvar	(x,	1);
	create_insn	(0X7D003BE0);
	create_insn	(x=0X7D003BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003BEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003BEC,	"level",	0);
	set_cmt	(0X7D003BEE,	"fmt",	0);
	create_insn	(x=0X7D003BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003BF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003BF2,	"line",	0);
	set_cmt	(0X7D003BF6,	"level_ok",	0);
	create_dword	(x=0X7D003C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003C0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003C14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003C1C);
	set_name	(0X7D003C1C,	"image_verify_digest");
	set_cmt	(0X7D003C1E,	"fmt",	0);
	create_insn	(x=0X7D003C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003C36,	"level",	0);
	create_insn	(x=0X7D003C3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003C3E,	"line",	0);
	set_cmt	(0X7D003C40,	"level_ok",	0);
	set_cmt	(0X7D003C4C,	"num",	0);
	create_insn	(0X7D003C4C);
	set_cmt	(0X7D003C4E,	"source",	0);
	set_cmt	(0X7D003C52,	"destination",	0);
	create_insn	(x=0X7D003C52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003C5A,	"num",	0);
	set_cmt	(0X7D003C5C,	"source",	0);
	set_cmt	(0X7D003C60,	"destination",	0);
	create_insn	(x=0X7D003C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003C80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003C82);
	op_stkvar	(x,	1);
	create_insn	(0X7D003C88);
	set_cmt	(0X7D003C8C,	"dst",	0);
	create_insn	(x=0X7D003C8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003C92,	"crypto",	0);
	create_insn	(x=0X7D003C92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003C9A,	"data",	0);
	create_insn	(x=0X7D003C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003CA0);
	op_hex		(x,	1);
	create_insn	(x=0X7D003CAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003CAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003CB0,	"line",	0);
	set_cmt	(0X7D003CB2,	"fmt",	0);
	create_insn	(x=0X7D003CB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003CB4,	"level",	0);
	set_cmt	(0X7D003CB6,	"level_ok",	0);
	set_cmt	(0X7D003CC2,	"crypto",	0);
	create_insn	(x=0X7D003CC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003CC4,	"a2",	0);
	create_insn	(x=0X7D003CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003CCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003CCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003CD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003CD6,	"n",	0);
	create_insn	(0X7D003CD6);
	set_cmt	(0X7D003CD8,	"m1",	0);
	create_insn	(x=0X7D003CD8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003CDA,	"m2",	0);
	create_insn	(x=0X7D003CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003CE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003CE4,	"level",	0);
	set_cmt	(0X7D003CE6,	"fmt",	0);
	create_insn	(x=0X7D003CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003CEA,	"line",	0);
	set_cmt	(0X7D003CEC,	"level_ok",	0);
	create_dword	(x=0X7D003CFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003D04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003D0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D003D10);
	set_name	(0X7D003D10,	"image_verify");
	set_cmt	(0X7D003D14,	"fmt",	0);
	create_insn	(x=0X7D003D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003D2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003D2C,	"fmt",	0);
	create_insn	(x=0X7D003D2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003D30,	"level",	0);
	create_insn	(x=0X7D003D32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003D36,	"line",	0);
	set_cmt	(0X7D003D38,	"level_ok",	0);
	create_insn	(0X7D003D44);
	create_insn	(x=0X7D003D5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003D5C,	"level",	0);
	set_cmt	(0X7D003D5E,	"fmt",	0);
	create_insn	(x=0X7D003D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003D64,	"line",	0);
	set_cmt	(0X7D003D66,	"level_ok",	0);
	create_insn	(0X7D003D72);
	create_insn	(x=0X7D003D7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003D7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003D7E,	"level",	0);
	set_cmt	(0X7D003D80,	"fmt",	0);
	create_insn	(x=0X7D003D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003D86,	"line",	0);
	set_cmt	(0X7D003D88,	"level_ok",	0);
	create_insn	(0X7D003D94);
	create_insn	(x=0X7D003DA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003DAA,	"level",	0);
	create_insn	(x=0X7D003DB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003DB2,	"line",	0);
	set_cmt	(0X7D003DB4,	"level_ok",	0);
	create_insn	(0X7D003DC0);
	create_insn	(x=0X7D003DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003DCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003DCC);
	op_stkvar	(x,	1);
	create_insn	(0X7D003DD2);
	create_insn	(x=0X7D003DD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003DD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003DDA,	"line",	0);
	set_cmt	(0X7D003DDC,	"fmt",	0);
	create_insn	(x=0X7D003DDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003DDE,	"level",	0);
	set_cmt	(0X7D003DE0,	"level_ok",	0);
	create_insn	(x=0X7D003DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003E14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003E16,	"level",	0);
	set_cmt	(0X7D003E18,	"fmt",	0);
	create_insn	(x=0X7D003E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003E1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003E1C,	"line",	0);
	set_cmt	(0X7D003E1E,	"level_ok",	0);
	create_insn	(0X7D003E2A);
	create_insn	(0X7D003E36);
	create_insn	(x=0X7D003E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003E56);
	op_stkvar	(x,	1);
	create_insn	(0X7D003E5A);
	create_insn	(x=0X7D003E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E6E,	"a2",	0);
	create_insn	(0X7D003E6E);
	set_cmt	(0X7D003E70,	"out",	0);
	create_insn	(x=0X7D003E70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E76,	"flags",	0);
	create_insn	(x=0X7D003E76);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E78,	"a6",	0);
	create_insn	(x=0X7D003E78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E7A,	"a7",	0);
	create_insn	(x=0X7D003E7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E7C,	"a8",	0);
	create_insn	(x=0X7D003E7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E7E,	"inp_buf",	0);
	set_cmt	(0X7D003E80,	"inp_len",	0);
	create_insn	(x=0X7D003E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003E92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E94,	"shadig",	0);
	create_insn	(x=0X7D003E94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E96,	"signtr_ptr",	0);
	set_cmt	(0X7D003E98,	"key",	0);
	create_insn	(x=0X7D003E98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003E9A,	"signtr_len",	0);
	set_cmt	(0X7D003E9E,	"shadig_len",	0);
	create_insn	(x=0X7D003EA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003EAA,	"level",	0);
	set_cmt	(0X7D003EAC,	"fmt",	0);
	create_insn	(x=0X7D003EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003EAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003EB0,	"line",	0);
	set_cmt	(0X7D003EB2,	"level_ok",	0);
	create_insn	(0X7D003EBE);
	create_insn	(x=0X7D003EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003EE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003EE4,	"fmt",	0);
	create_insn	(x=0X7D003EE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003EE6,	"line",	0);
	create_insn	(x=0X7D003EEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003EEE,	"level",	0);
	set_cmt	(0X7D003EF0,	"level_ok",	0);
	create_insn	(0X7D003EFC);
	create_insn	(x=0X7D003F06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003F0A,	"line",	0);
	set_cmt	(0X7D003F0E,	"fmt",	0);
	create_insn	(x=0X7D003F0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F10,	"level",	0);
	set_cmt	(0X7D003F12,	"level_ok",	0);
	create_insn	(0X7D003F1E);
	set_cmt	(0X7D003F2C,	"a2",	0);
	create_insn	(x=0X7D003F2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F2E,	"flags",	0);
	create_insn	(x=0X7D003F2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F30,	"inp_buf",	0);
	create_insn	(x=0X7D003F34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F36,	"out",	0);
	set_cmt	(0X7D003F38,	"a6",	0);
	create_insn	(x=0X7D003F38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F3A,	"a7",	0);
	create_insn	(x=0X7D003F3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F3E,	"a8",	0);
	create_insn	(x=0X7D003F3E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F40,	"inp_len",	0);
	create_insn	(x=0X7D003F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003F4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003F4C);
	op_stkvar	(x,	1);
	create_insn	(0X7D003F54);
	create_insn	(0X7D003F5A);
	set_cmt	(0X7D003F5E,	"dt_ptr",	0);
	create_insn	(x=0X7D003F66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003F68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003F6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003F72,	"a5",	0);
	create_insn	(x=0X7D003F72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003F74);
	op_hex		(x,	1);
	set_cmt	(0X7D003F78,	"dt_ptr",	0);
	set_cmt	(0X7D003F7A,	"a2",	0);
	set_cmt	(0X7D003F7E,	"a4",	0);
	set_cmt	(0X7D003F80,	"enc_key",	0);
	create_insn	(x=0X7D003F80);
	op_stkvar	(x,	1);
	create_dword	(0X7D003F8C);
	create_dword	(x=0X7D003F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003F94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D003FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D003FD4);
	create_insn	(x=0X7D003FD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003FDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003FDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003FE4,	"a3",	0);
	create_insn	(0X7D003FE4);
	set_cmt	(0X7D003FE6,	"a4",	0);
	create_insn	(x=0X7D003FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D003FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D003FF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D003FF4,	"line",	0);
	set_cmt	(0X7D003FF8,	"fmt",	0);
	create_insn	(x=0X7D003FF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D003FFA,	"level",	0);
	set_cmt	(0X7D003FFC,	"level_ok",	0);
	set_cmt	(0X7D004008,	"a5",	0);
	create_insn	(x=0X7D004008);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00400A,	"dt_ptr",	0);
	set_cmt	(0X7D00400C,	"a2",	0);
	set_cmt	(0X7D00400E,	"a3",	0);
	set_cmt	(0X7D004010,	"a4",	0);
	create_insn	(x=0X7D004010);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00401C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004028);
	set_name	(0X7D004028,	"find_map_by_type_and_pa");
	create_insn	(x=0X7D00402A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004056);
	create_insn	(0X7D00405E);
	make_array	(0X7D004062,	0X2);
	create_dword	(x=0X7D004064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D004068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D004068,	"find_map_by_pa");
	create_insn	(0X7D00408C);
	make_array	(0X7D004092,	0X2);
	create_dword	(x=0X7D004094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D004098,	"switch 9 cases ",	0);
	create_insn	(0X7D004098);
	set_name	(0X7D004098,	"type_to_attr");
	set_cmt	(0X7D0040A0,	"switch jump",	0);
	set_cmt	(0X7D0040A4,	"jump table for switch statement",	0);
	create_byte	(0X7D0040A4);
	set_name	(0X7D0040A4,	"jpt_7D0040A0");
	create_byte	(0X7D0040A5);
	create_byte	(0X7D0040A6);
	create_byte	(0X7D0040A7);
	create_byte	(0X7D0040A8);
	create_byte	(0X7D0040A9);
	create_byte	(0X7D0040AA);
	create_byte	(0X7D0040AB);
	create_byte	(0X7D0040AC);
	set_cmt	(0X7D0040AE,	"jumptable 7D0040A0 case 7",	1);
	create_insn	(0X7D0040AE);
	set_cmt	(0X7D0040B4,	"jumptable 7D0040A0 case 8",	1);
	create_insn	(0X7D0040B4);
	set_cmt	(0X7D0040BA,	"jumptable 7D0040A0 cases 4,5",	1);
	create_insn	(0X7D0040BA);
	set_cmt	(0X7D0040C0,	"jumptable 7D0040A0 case 9",	1);
	create_insn	(0X7D0040C0);
	set_cmt	(0X7D0040C4,	"jumptable 7D0040A0 default case",	1);
	create_insn	(x=0X7D0040C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0040C4,	"def_7D0040A0");
	create_insn	(x=0X7D0040CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0040CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0040D2,	"jumptable 7D0040A0 case 1",	1);
	create_insn	(0X7D0040D2);
	set_cmt	(0X7D0040D8,	"jumptable 7D0040A0 cases 3,6",	1);
	create_insn	(0X7D0040D8);
	make_array	(0X7D0040DE,	0X2);
	create_dword	(x=0X7D0040E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0040E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0040E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D0040EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0040EC,	"core_init_mmu_map");
	set_cmt	(0X7D0040F2,	"fmt",	0);
	create_insn	(x=0X7D0040F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X7D004106);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00410C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00410E);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D004116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00411A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00412A);
	create_insn	(x=0X7D004150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00417C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0041A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0041A4,	"level",	0);
	set_cmt	(0X7D0041A6,	"fmt",	0);
	create_insn	(x=0X7D0041A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0041AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0041AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0041AE,	"line",	0);
	set_cmt	(0X7D0041B2,	"level_ok",	0);
	create_insn	(x=0X7D0041B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0041BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0041C6);
	set_cmt	(0X7D0041E2,	"ptr1",	0);
	set_cmt	(0X7D0041E4,	"ptr2",	0);
	create_insn	(0X7D0041FC);
	create_insn	(x=0X7D004202);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D00420C,	"t",	0);
	create_insn	(x=0X7D004212);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D004214);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D00421A);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D00421C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004224);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D00422C,	"t",	0);
	create_insn	(0X7D004250);
	create_insn	(x=0X7D00426A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004286);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0042AA);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D0042BC,	"t",	0);
	create_insn	(x=0X7D0042EC);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D0042F0,	"jumptable 7D004306 cases 4-8",	1);
	set_cmt	(0X7D004300,	"switch 9 cases ",	0);
	create_insn	(x=0X7D004304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004306,	"switch jump",	0);
	make_array	(0X7D00430A,	0X2);
	set_cmt	(0X7D00430C,	"jump table for switch statement",	0);
	create_dword	(x=0X7D00430C);
	make_array	(x,	0X9);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D004330,	"jumptable 7D004306 case 0",	1);
	create_insn	(x=0X7D004330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004342);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00434A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00434E,	"jumptable 7D004306 case 2",	1);
	create_insn	(x=0X7D00434E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00435E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00436A);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D004370,	"jumptable 7D004306 case 3",	1);
	create_insn	(x=0X7D004370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004386);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00438C);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D004392,	"jumptable 7D004306 default case",	1);
	create_insn	(x=0X7D004392);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00439A,	"level",	0);
	set_cmt	(0X7D00439C,	"line",	0);
	set_cmt	(0X7D0043A0,	"level_ok",	0);
	create_insn	(x=0X7D0043A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0043AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0043B0);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D0043B4,	"mm",	0);
	create_insn	(x=0X7D0043B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0043B8);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D0043BE);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D0043C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0043CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0043CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0043D0);
	make_array	(0X7D0043DA,	0X2);
	create_dword	(x=0X7D0043DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0043F0,	"mm");
	create_dword	(x=0X7D0043F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0043FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00440C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D00441C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00441C,	"core_mmu_is_shm_cached");
	create_insn	(x=0X7D00441E);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	create_insn	(x=0X7D004424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D004430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004434);
	set_name	(0X7D004434,	"core_pbuf_is");
	set_cmt	(0X7D00443E,	"switch 9 cases ",	0);
	set_cmt	(0X7D004442,	"switch jump",	0);
	set_cmt	(0X7D004446,	"jump table for switch statement",	0);
	create_byte	(0X7D004446);
	set_name	(0X7D004446,	"jpt_7D004442");
	create_byte	(0X7D004447);
	create_byte	(0X7D004448);
	create_byte	(0X7D004449);
	create_byte	(0X7D00444A);
	create_byte	(0X7D00444B);
	create_byte	(0X7D00444C);
	create_byte	(0X7D00444D);
	create_byte	(0X7D00444E);
	set_cmt	(0X7D004450,	"jumptable 7D004442 case 0",	1);
	create_insn	(x=0X7D004450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004454,	"jumptable 7D004442 case 1",	1);
	create_insn	(x=0X7D004454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004458,	"jumptable 7D004442 case 2",	1);
	create_insn	(x=0X7D004458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00445A);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D004460,	"jumptable 7D004442 case 3",	1);
	create_insn	(x=0X7D004460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004462);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D004466,	"b",	0);
	set_cmt	(0X7D004468,	"bl",	0);
	set_cmt	(0X7D00446A,	"a",	0);
	create_insn	(x=0X7D00446A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004470,	"al",	0);
	create_insn	(x=0X7D004470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004476,	"jumptable 7D004442 case 4",	1);
	create_insn	(x=0X7D004476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004478);
	op_plain_offset	(x,	1,	0X7D04D0C8);
	op_plain_offset	(x,	129,	0X7D04D0C8);
	set_cmt	(0X7D00447E,	"jumptable 7D004442 case 5",	1);
	create_insn	(x=0X7D00447E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004486);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004492,	"jumptable 7D004442 case 6",	1);
	create_insn	(x=0X7D004492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0044A0,	"jumptable 7D004442 case 8",	1);
	create_insn	(0X7D0044A0);
	set_cmt	(0X7D0044AA,	"b",	0);
	set_cmt	(0X7D0044AC,	"bl",	0);
	set_cmt	(0X7D0044AE,	"a",	0);
	set_cmt	(0X7D0044B0,	"al",	0);
	create_insn	(0X7D0044C4);
	set_cmt	(0X7D0044C8,	"jumptable 7D004442 default case",	1);
	create_insn	(0X7D0044C8);
	set_name	(0X7D0044C8,	"def_7D004442");
	create_dword	(x=0X7D0044CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0044D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0044D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0044D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0044DC);
	set_name	(0X7D0044DC,	"core_mmu_get_mem_by_type");
	create_insn	(x=0X7D0044DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004500);
	create_dword	(x=0X7D004508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00450C);
	set_name	(0X7D00450C,	"core_tlb_maintenance");
	set_cmt	(0X7D004512,	"switch 4 cases ",	0);
	set_cmt	(0X7D004516,	"switch jump",	0);
	set_cmt	(0X7D00451A,	"jump table for switch statement",	0);
	create_byte	(0X7D00451A);
	set_name	(0X7D00451A,	"jpt_7D004516");
	create_byte	(0X7D00451B);
	create_byte	(0X7D00451C);
	create_byte	(0X7D00451D);
	set_cmt	(0X7D00451E,	"jumptable 7D004516 case 0",	1);
	create_insn	(0X7D00451E);
	set_cmt	(0X7D004524,	"jumptable 7D004516 case 1",	1);
	create_insn	(0X7D004524);
	set_cmt	(0X7D00452C,	"jumptable 7D004516 case 2",	1);
	create_insn	(0X7D00452C);
	set_cmt	(0X7D004534,	"jumptable 7D004516 case 3",	1);
	create_insn	(x=0X7D004534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004536,	"level",	0);
	set_cmt	(0X7D004538,	"fmt",	0);
	create_insn	(x=0X7D004538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00453A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00453C,	"line",	0);
	set_cmt	(0X7D004540,	"level_ok",	0);
	set_cmt	(0X7D004548,	"jumptable 7D004516 default case",	1);
	create_insn	(0X7D004548);
	set_name	(0X7D004548,	"def_7D004516");
	create_insn	(x=0X7D00454C);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D004550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D004558,	"switch 9 cases ",	0);
	create_insn	(0X7D004558);
	set_name	(0X7D004558,	"cache_maintenance_l1");
	set_cmt	(0X7D004560,	"switch jump",	0);
	set_cmt	(0X7D004564,	"jump table for switch statement",	0);
	create_byte	(0X7D004564);
	set_name	(0X7D004564,	"jpt_7D004560");
	create_byte	(0X7D004565);
	create_byte	(0X7D004566);
	create_byte	(0X7D004567);
	create_byte	(0X7D004568);
	create_byte	(0X7D004569);
	create_byte	(0X7D00456A);
	create_byte	(0X7D00456B);
	create_byte	(0X7D00456C);
	set_cmt	(0X7D00456E,	"jumptable 7D004560 case 7",	1);
	create_insn	(0X7D00456E);
	set_cmt	(0X7D004574,	"jumptable 7D004560 case 1",	1);
	create_insn	(0X7D004574);
	set_cmt	(0X7D00457A,	"jumptable 7D004560 case 2",	1);
	create_insn	(0X7D00457A);
	set_cmt	(0X7D00457C,	"s",	0);
	set_cmt	(0X7D004580,	"e",	0);
	set_cmt	(0X7D004588,	"jumptable 7D004560 case 3",	1);
	create_insn	(0X7D004588);
	set_cmt	(0X7D00458E,	"jumptable 7D004560 case 4",	1);
	create_insn	(0X7D00458E);
	set_cmt	(0X7D004590,	"s",	0);
	set_cmt	(0X7D004594,	"e",	0);
	set_cmt	(0X7D00459C,	"jumptable 7D004560 case 5",	1);
	create_insn	(0X7D00459C);
	set_cmt	(0X7D0045A2,	"jumptable 7D004560 case 6",	1);
	create_insn	(0X7D0045A2);
	set_cmt	(0X7D0045A4,	"start",	0);
	set_cmt	(0X7D0045A8,	"end",	0);
	set_cmt	(0X7D0045B0,	"jumptable 7D004560 case 8",	1);
	create_insn	(0X7D0045B0);
	set_cmt	(0X7D0045B6,	"jumptable 7D004560 case 9",	1);
	create_insn	(0X7D0045B6);
	set_cmt	(0X7D0045B8,	"s",	0);
	set_cmt	(0X7D0045BC,	"e",	0);
	set_cmt	(0X7D0045C6,	"jumptable 7D004560 default case",	1);
	create_insn	(0X7D0045C6);
	set_name	(0X7D0045C6,	"def_7D004560");
	make_array	(0X7D0045CA,	0X2);
	create_dword	(x=0X7D0045CC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0045D0);
	set_name	(0X7D0045D0,	"check_pgt_avail");
	create_insn	(x=0X7D0045EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0045EE,	"level",	0);
	set_cmt	(0X7D0045F0,	"fmt",	0);
	create_insn	(x=0X7D0045F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0045F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0045F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0045F6,	"line",	0);
	set_cmt	(0X7D0045FA,	"level_ok",	0);
	create_insn	(0X7D004604);
	create_insn	(x=0X7D004608);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00460C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D004614);
	create_insn	(0X7D004618);
	set_name	(0X7D004618,	"tee_mmu_user_va2pa_attr");
	create_insn	(0X7D004632);
	set_cmt	(0X7D004638,	"b",	0);
	set_cmt	(0X7D00463C,	"bl",	0);
	set_cmt	(0X7D00463E,	"a",	0);
	set_cmt	(0X7D004640,	"al",	0);
	create_insn	(0X7D004658);
	make_array	(0X7D004676,	0X2);
	create_dword	(0X7D004678);
	create_insn	(0X7D00467C);
	set_name	(0X7D00467C,	"tee_mmu_init");
	create_insn	(x=0X7D004688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0046A0);
	create_insn	(0X7D0046A4);
	set_cmt	(0X7D0046AA,	"nmemb",	0);
	set_cmt	(0X7D0046AC,	"size",	0);
	set_cmt	(0X7D0046BC,	"nmemb",	0);
	create_insn	(0X7D0046BC);
	set_cmt	(0X7D0046BE,	"size",	0);
	make_array	(0X7D0046DA,	0X2);
	create_dword	(x=0X7D0046DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0046E0);
	create_dword	(0X7D0046E4);
	create_insn	(0X7D0046E8);
	set_name	(0X7D0046E8,	"tee_mmu_map_add_segment");
	create_insn	(x=0X7D0046F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00470C);
	op_hex		(x,	1);
	create_insn	(x=0X7D004710);
	op_hex		(x,	1);
	create_insn	(0X7D004718);
	create_insn	(x=0X7D004724);
	op_hex		(x,	1);
	create_insn	(x=0X7D00472E);
	op_hex		(x,	1);
	create_insn	(x=0X7D004734);
	op_hex		(x,	1);
	create_insn	(x=0X7D00473A);
	op_hex		(x,	1);
	set_cmt	(0X7D00473E,	"end",	0);
	create_insn	(0X7D00475E);
	create_insn	(x=0X7D004792);
	op_hex		(x,	1);
	set_cmt	(0X7D00479A,	"base",	0);
	create_insn	(x=0X7D00479E);
	op_hex		(x,	1);
	create_insn	(0X7D0047B8);
	make_array	(0X7D0047BE,	0X2);
	create_dword	(0X7D0047C0);
	create_insn	(0X7D0047C4);
	set_name	(0X7D0047C4,	"tee_mmu_final");
	create_insn	(x=0X7D0047CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0047EA,	"ptr",	0);
	set_cmt	(0X7D0047F0,	"ptr",	0);
	create_dword	(x=0X7D0047FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004800);
	set_name	(0X7D004800,	"tee_mmu_user_va2pa_helper");
	create_insn	(0X7D004818);
	create_insn	(0X7D004828);
	set_cmt	(0X7D00482E,	"b",	0);
	set_cmt	(0X7D004832,	"bl",	0);
	set_cmt	(0X7D004834,	"a",	0);
	set_cmt	(0X7D004836,	"al",	0);
	create_dword	(0X7D004858);
	create_insn	(0X7D00485C);
	set_name	(0X7D00485C,	"tee_mmu_map_param");
	create_insn	(x=0X7D00487E);
	op_hex		(x,	1);
	set_cmt	(0X7D004888,	"len",	0);
	set_cmt	(0X7D00488C,	"attr",	0);
	set_cmt	(0X7D00488E,	"pbuf",	0);
	create_insn	(x=0X7D0048B6);
	op_hex		(x,	1);
	set_cmt	(0X7D0048BA,	"mattr",	0);
	create_insn	(0X7D0048E0);
	create_insn	(0X7D004900);
	create_insn	(0X7D004904);
	create_insn	(x=0X7D004908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00490E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004922);
	op_hex		(x,	1);
	create_insn	(x=0X7D004926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004928);
	op_hex		(x,	1);
	create_insn	(x=0X7D00498C);
	op_hex		(x,	1);
	set_cmt	(0X7D0049AE,	"attr",	0);
	create_insn	(0X7D0049AE);
	set_cmt	(0X7D0049B4,	"utc",	0);
	set_cmt	(0X7D0049B6,	"pa",	0);
	set_cmt	(0X7D0049B8,	"ua",	0);
	create_insn	(0X7D0049C4);
	set_cmt	(0X7D0049DA,	"end",	0);
	create_insn	(0X7D0049E4);
	create_insn	(x=0X7D0049E6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0049EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0049FA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0049FE);
	op_hex		(x,	1);
	create_insn	(0X7D004A24);
	create_insn	(x=0X7D004A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004A36);
	op_stkvar	(x,	1);
	create_insn	(0X7D004A44);
	set_cmt	(0X7D004A4C,	"b",	0);
	set_cmt	(0X7D004A50,	"bl",	0);
	set_cmt	(0X7D004A54,	"a",	0);
	set_cmt	(0X7D004A58,	"al",	0);
	create_insn	(0X7D004A62);
	set_cmt	(0X7D004A96,	"al",	0);
	create_insn	(0X7D004A96);
	create_insn	(x=0X7D004AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004AAC);
	op_stkvar	(x,	1);
	create_insn	(0X7D004AB0);
	create_insn	(0X7D004AB4);
	create_insn	(0X7D004AB8);
	create_dword	(x=0X7D004AC0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D004AC4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D004AC8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D004ACC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D004AD0);
	set_name	(0X7D004AD0,	"tee_mmu_check_access_rights");
	set_cmt	(0X7D004AE2,	"mmu",	0);
	set_cmt	(0X7D004AE4,	"attr",	0);
	create_insn	(x=0X7D004AE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D004AE6,	"ua",	0);
	set_cmt	(0X7D004AE8,	"pa",	0);
	create_insn	(x=0X7D004AFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004B12);
	op_stkvar	(x,	1);
	create_insn	(0X7D004B1E);
	create_insn	(0X7D004B22);
	create_dword	(x=0X7D004B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D004B2C);
	create_insn	(0X7D004B30);
	set_name	(0X7D004B30,	"tee_mmu_get_load_addr");
	create_insn	(x=0X7D004B3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004B46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004B4C);
	make_array	(0X7D004B52,	0X2);
	create_dword	(x=0X7D004B54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004B5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004B60);
	set_name	(0X7D004B60,	"teecore_init_ta_ram");
	set_cmt	(0X7D004B62,	"s",	0);
	create_insn	(x=0X7D004B62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D004B64,	"type",	0);
	set_cmt	(0X7D004B66,	"e",	0);
	create_insn	(x=0X7D004B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004B8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004B94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004B96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D004B9A,	"attr",	0);
	create_insn	(0X7D004B9A);
	set_cmt	(0X7D004B9C,	"pbuf",	0);
	set_cmt	(0X7D004B9E,	"len",	0);
	create_insn	(x=0X7D004BA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004BCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D004BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004BE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004BEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004BF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004BF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004BF8);
	set_name	(0X7D004BF8,	"teecore_init_pub_ram");
	set_cmt	(0X7D004BFA,	"type",	0);
	set_cmt	(0X7D004BFC,	"s",	0);
	set_cmt	(0X7D004BFE,	"e",	0);
	create_insn	(x=0X7D004C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004C24);
	create_insn	(x=0X7D004C2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004C42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004C4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C52);
	op_stkvar	(x,	1);
	make_array	(0X7D004C56,	0X2);
	create_dword	(x=0X7D004C58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004C70);
	set_name	(0X7D004C70,	"tee_mmu_user_get_cache_attr");
	set_cmt	(0X7D004C72,	"mmu",	0);
	set_cmt	(0X7D004C74,	"pa",	0);
	set_cmt	(0X7D004C76,	"attr",	0);
	create_insn	(x=0X7D004C76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004C94);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D004C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004CA4);
	set_name	(0X7D004CA4,	"mattr_to_desc");
	create_insn	(x=0X7D004CB8);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CC6);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CCC);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CD2);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CD6);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CDC);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CE4);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CEC);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CFA);
	op_hex		(x,	1);
	create_insn	(x=0X7D004CFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D02);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D06);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D0A);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D12);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D30);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D36);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D3C);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D42);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D4E);
	op_hex		(x,	1);
	create_insn	(0X7D004D58);
	create_insn	(x=0X7D004D6E);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D74);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D7A);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D80);
	op_hex		(x,	1);
	create_insn	(x=0X7D004D8A);
	op_hex		(x,	1);
	create_insn	(0X7D004D98);
	create_insn	(0X7D004D9E);
	create_insn	(0X7D004DA4);
	make_array	(0X7D004DAA,	0X2);
	create_dword	(0X7D004DAC);
	create_dword	(0X7D004DB0);
	create_insn	(0X7D004DB4);
	set_name	(0X7D004DB4,	"core_mmu_create_user_map");
	create_insn	(x=0X7D004DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004DFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004DFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004E04);
	create_insn	(x=0X7D004E08);
	op_hex		(x,	1);
	create_dword	(x=0X7D004E14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004E18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004E1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004E24);
	set_name	(0X7D004E24,	"core_init_mmu_tables");
	create_insn	(x=0X7D004E2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004E5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004E62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004E66);
	create_insn	(x=0X7D004E7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004E82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004E84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D004E8E);
	set_cmt	(0X7D004E90,	"level",	0);
	create_insn	(x=0X7D004E92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D004E94,	"attr",	0);
	create_insn	(x=0X7D004E94);
	op_hex		(x,	1);
	create_insn	(x=0X7D004E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004EA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D004EAA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D004EB6,	"attr",	0);
	set_cmt	(0X7D004EBC,	"level",	0);
	create_insn	(x=0X7D004EC4);
	op_stkvar	(x,	1);
	create_insn	(0X7D004EDE);
	create_insn	(0X7D004EFC);
	create_insn	(0X7D004F1A);
	create_insn	(x=0X7D004F1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D004F26,	"level",	0);
	create_insn	(0X7D004F26);
	set_cmt	(0X7D004F28,	"attr",	0);
	create_insn	(0X7D004F6A);
	create_insn	(0X7D004F6E);
	create_insn	(0X7D004F78);
	create_insn	(x=0X7D004F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004F82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004F84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D004F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004F8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004F94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004F9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D004FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004FAC);
	set_name	(0X7D004FAC,	"core_init_mmu_regs");
	create_insn	(x=0X7D004FB0);
	op_hex		(x,	1);
	create_insn	(x=0X7D004FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D004FD4);
	op_hex		(x,	1);
	make_array	(0X7D004FE2,	0X2);
	create_dword	(0X7D004FE4);
	create_dword	(x=0X7D004FE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D004FEC);
	set_name	(0X7D004FEC,	"tee_mm_alloc");
	set_cmt	(0X7D004FFE,	"size",	0);
	create_insn	(0X7D005024);
	create_insn	(x=0X7D005028);
	op_hex		(x,	1);
	create_insn	(0X7D005052);
	create_insn	(0X7D00508E);
	create_insn	(x=0X7D005098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00509C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00509E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0050A4);
	create_insn	(0X7D0050D2);
	create_insn	(0X7D0050EA);
	set_cmt	(0X7D0050F2,	"ptr",	0);
	make_array	(0X7D0050FE,	0X2);
	create_dword	(x=0X7D005100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00510C);
	set_name	(0X7D00510C,	"tee_mm_free");
	create_insn	(x=0X7D00512E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005136);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00513C);
	set_cmt	(0X7D005146,	"ptr",	0);
	create_insn	(0X7D005150);
	make_array	(0X7D005152,	0X2);
	create_dword	(x=0X7D005154);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00515C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D005160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005160,	"pgt_free_unlocked");
	create_insn	(0X7D005176);
	make_array	(0X7D00517A,	0X2);
	create_dword	(x=0X7D00517C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D005180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005180,	"pgt_init");
	create_insn	(x=0X7D00518A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00518C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0051A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D0051AA,	0X2);
	create_dword	(x=0X7D0051AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0051B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0051B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0051B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0051BC);
	set_name	(0X7D0051BC,	"pgt_alloc");
	set_cmt	(0X7D0051CA,	"m",	0);
	create_insn	(x=0X7D0051CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0051CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0051D4,	"pgt_cache",	0);
	create_insn	(0X7D005210);
	set_cmt	(0X7D005220,	"m",	0);
	create_insn	(x=0X7D005220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00522A,	"pgt_cache",	0);
	create_insn	(0X7D00522A);
	create_insn	(x=0X7D005230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005236,	"cv",	0);
	create_insn	(x=0X7D005236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005238,	"m",	0);
	create_insn	(x=0X7D005238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005240);
	create_dword	(x=0X7D005244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D005244,	"m");
	create_dword	(x=0X7D005248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D005248,	"cv");
	create_dword	(x=0X7D00524C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005250);
	set_name	(0X7D005250,	"pgt_free");
	set_cmt	(0X7D005258,	"m",	0);
	create_insn	(x=0X7D005258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00525E,	"pgt_cache",	0);
	create_insn	(x=0X7D005264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00526A,	"m",	0);
	create_insn	(x=0X7D00526A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005274);
	make_array	(0X7D005276,	0X2);
	create_dword	(x=0X7D005278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00527C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005280);
	set_name	(0X7D005280,	"tee_svc_do_call");
	create_insn	(x=0X7D0052A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0052B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0052D8);
	set_name	(0X7D0052D8,	"syscall_sys_return");
	create_insn	(0X7D0052E8);
	set_name	(0X7D0052E8,	"syscall_panic");
	create_dword	(x=0X7D0052FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D005300);
	create_insn	(0X7D005304);
	set_name	(0X7D005304,	"syscall_cache_operation");
	create_insn	(x=0X7D005308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00531A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D005324,	"flags",	0);
	set_cmt	(0X7D005326,	"utc",	0);
	set_cmt	(0X7D00532A,	"uaddr",	0);
	set_cmt	(0X7D00532C,	"len",	0);
	create_insn	(0X7D005338);
	set_cmt	(0X7D005350,	"op",	0);
	create_insn	(0X7D005350);
	set_cmt	(0X7D005352,	"va",	0);
	set_cmt	(0X7D005354,	"len",	0);
	set_cmt	(0X7D005360,	"op",	0);
	create_insn	(0X7D005360);
	set_cmt	(0X7D005362,	"va",	0);
	set_cmt	(0X7D005364,	"len",	0);
	create_insn	(x=0X7D00536C);
	op_enum		(x,	1,	GetEnum("TEE_Result"),0);
	make_array	(0X7D005372,	0X2);
	create_dword	(x=0X7D005374);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D005378);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00537C);
	set_name	(0X7D00537C,	"tee_svc_handler");
	create_insn	(0X7D005396);
	set_cmt	(0X7D005398,	"regs",	0);
	create_insn	(x=0X7D00539C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00539E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0053A0,	"func",	0);
	create_dword	(x=0X7D0053AC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0053B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0053B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D0053B8,	"fmt",	0);
	create_insn	(0X7D0053B8);
	set_name	(0X7D0053B8,	"tee_svc_sys_return_helper");
	set_cmt	(0X7D0053C6,	"cpu_mode",	0);
	set_cmt	(0X7D0053CE,	"cpu_mode",	0);
	create_insn	(x=0X7D0053D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0053D6,	"level",	0);
	create_insn	(x=0X7D0053DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0053DE,	"line",	0);
	create_insn	(x=0X7D0053E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0053E2,	"level_ok",	0);
	create_insn	(x=0X7D0053E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D0053FE,	0X2);
	create_dword	(x=0X7D005400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00540C);
	set_name	(0X7D00540C,	"tee_entry_std");
	set_cmt	(0X7D005414,	"fmt",	0);
	create_insn	(x=0X7D00541C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00541E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005420,	"fmt",	0);
	create_insn	(x=0X7D005420);
	op_stkvar	(x,	1);
	set_cmt	(0X7D005428,	"level",	0);
	set_cmt	(0X7D00542A,	"line",	0);
	set_cmt	(0X7D00542E,	"level_ok",	0);
	create_insn	(0X7D005436);
	set_cmt	(0X7D005438,	"len",	0);
	set_cmt	(0X7D00543A,	"attr",	0);
	set_cmt	(0X7D00543C,	"pbuf",	0);
	create_insn	(x=0X7D005444);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005446);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005452);
	set_cmt	(0X7D005456,	"pa",	0);
	set_cmt	(0X7D005458,	"m",	0);
	set_cmt	(0X7D005468,	"pbuf",	0);
	set_cmt	(0X7D00546A,	"attr",	0);
	create_insn	(x=0X7D005478);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00547A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00547C,	"line",	0);
	set_cmt	(0X7D005484,	"level",	0);
	set_cmt	(0X7D005486,	"level_ok",	0);
	set_cmt	(0X7D005490,	"enable",	0);
	create_insn	(0X7D005490);
	set_cmt	(0X7D005498,	"switch 4 cases ",	0);
	set_cmt	(0X7D00549E,	"switch jump",	0);
	set_cmt	(0X7D0054A2,	"jump table for switch statement",	0);
	create_byte	(0X7D0054A2);
	set_name	(0X7D0054A2,	"jpt_7D00549E");
	create_byte	(0X7D0054A3);
	create_byte	(0X7D0054A4);
	create_byte	(0X7D0054A5);
	set_cmt	(0X7D0054A6,	"jumptable 7D00549E case 0",	1);
	create_insn	(0X7D0054A6);
	set_cmt	(0X7D0054CA,	"num",	0);
	set_cmt	(0X7D0054CC,	"source",	0);
	set_cmt	(0X7D0054D2,	"destination",	0);
	create_insn	(x=0X7D0054D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0054D8,	"num",	0);
	set_cmt	(0X7D0054DA,	"destination",	0);
	create_insn	(x=0X7D0054DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0054DC,	"source",	0);
	create_insn	(x=0X7D0054F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0054F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0054FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0054FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0054FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005502);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00550C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00550E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005516);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005520);
	op_stkvar	(x,	1);
	set_cmt	(0X7D005526,	"jumptable 7D00549E case 2",	1);
	create_insn	(0X7D005526);
	create_insn	(x=0X7D00552E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00553C,	"jumptable 7D00549E case 1",	1);
	create_insn	(0X7D00553C);
	create_insn	(x=0X7D005544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00554A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00554C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005556);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005562);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00556E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00557A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00557E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D005586,	"jumptable 7D00549E case 3",	1);
	create_insn	(0X7D005586);
	create_insn	(x=0X7D00558E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D005590,	"out",	0);
	create_insn	(x=0X7D005590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00559A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00559E);
	op_stkvar	(x,	1);
	create_insn	(0X7D0055A2);
	set_cmt	(0X7D0055AE,	"jumptable 7D00549E default case",	1);
	create_insn	(x=0X7D0055AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0055AE,	"def_7D00549E");
	create_insn	(x=0X7D0055B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0055B6,	"level",	0);
	set_cmt	(0X7D0055B8,	"line",	0);
	set_cmt	(0X7D0055BC,	"level_ok",	0);
	create_dword	(0X7D0055CC);
	create_dword	(x=0X7D0055D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0055D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0055D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0055DC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0055E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0055E4);
	set_name	(0X7D0055E4,	"tee_entry_get_api_uuid");
	create_dword	(0X7D0055F4);
	create_dword	(0X7D0055F8);
	create_dword	(0X7D0055FC);
	create_dword	(0X7D005600);
	create_insn	(0X7D005604);
	set_name	(0X7D005604,	"tee_entry_get_os_uuid");
	create_dword	(0X7D005614);
	create_dword	(0X7D005618);
	create_dword	(0X7D00561C);
	create_dword	(0X7D005620);
	create_insn	(0X7D005624);
	set_name	(0X7D005624,	"tee_entry_fast");
	create_insn	(x=0X7D005626);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(x=0X7D00563A);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(x=0X7D005646);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(x=0X7D005654);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(x=0X7D00565C);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(x=0X7D00566A);
	op_enum		(x,	1,	GetEnum("tee_smc_defines"),0);
	create_insn	(0X7D00567C);
	create_insn	(0X7D005682);
	create_insn	(0X7D005688);
	create_insn	(0X7D00568E);
	create_insn	(x=0X7D005692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0056A6);
	create_insn	(0X7D0056B2);
	create_insn	(0X7D0056B8);
	create_insn	(0X7D0056C4);
	create_insn	(0X7D0056DA);
	create_insn	(0X7D0056E4);
	create_insn	(0X7D0056EE);
	create_insn	(0X7D0056F2);
	create_dword	(x=0X7D0056FC);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_dword	(x=0X7D005700);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_dword	(x=0X7D005704);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_dword	(x=0X7D005708);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_dword	(x=0X7D00570C);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_dword	(x=0X7D005710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D005718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005718,	"init_teecore");
	create_insn	(x=0X7D005724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005736);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005746,	"level",	0);
	set_cmt	(0X7D005748,	"fmt",	0);
	create_insn	(x=0X7D005748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00574A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00574C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00574E,	"line",	0);
	set_cmt	(0X7D005750,	"level_ok",	0);
	create_insn	(0X7D00575A);
	create_dword	(x=0X7D005764);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00576C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00577C);
	set_name	(0X7D00577C,	"test_entry_params");
	set_cmt	(0X7D00578C,	"nParamTypes",	0);
	set_cmt	(0X7D00578E,	"pParams",	0);
	create_insn	(x=0X7D00579A);
	op_hex		(x,	1);
	create_insn	(x=0X7D0057A2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0057B0);
	op_hex		(x,	1);
	create_insn	(0X7D0057C2);
	create_insn	(x=0X7D0057C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0057D6);
	op_hex		(x,	1);
	create_insn	(0X7D0057E6);
	create_insn	(x=0X7D0057E8);
	op_hex		(x,	1);
	create_insn	(0X7D005800);
	create_insn	(x=0X7D005802);
	op_hex		(x,	1);
	create_insn	(0X7D00581E);
	create_insn	(0X7D00585A);
	create_insn	(0X7D005894);
	create_insn	(x=0X7D00589C);
	op_hex		(x,	1);
	create_insn	(x=0X7D0058C6);
	op_hex		(x,	1);
	create_insn	(0X7D0058F0);
	create_insn	(x=0X7D0058F4);
	op_hex		(x,	1);
	create_insn	(x=0X7D005900);
	op_hex		(x,	1);
	create_insn	(0X7D00591A);
	create_insn	(0X7D00591E);
	create_insn	(x=0X7D005924);
	op_hex		(x,	1);
	create_insn	(x=0X7D005934);
	op_hex		(x,	1);
	create_insn	(0X7D005950);
	create_insn	(x=0X7D005952);
	op_hex		(x,	1);
	create_insn	(0X7D005976);
	create_insn	(0X7D00597A);
	create_insn	(x=0X7D00597C);
	op_hex		(x,	1);
	create_insn	(0X7D0059A0);
	create_insn	(x=0X7D0059A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0059A8,	"level",	0);
	set_cmt	(0X7D0059AA,	"fmt",	0);
	create_insn	(x=0X7D0059AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0059AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0059AE,	"line",	0);
	set_cmt	(0X7D0059B0,	"level_ok",	0);
	create_dword	(x=0X7D0059BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0059C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0059C4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0059C8);
	set_name	(0X7D0059C8,	"core_self_tests");
	create_insn	(x=0X7D0059D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0059D2,	"level",	0);
	set_cmt	(0X7D0059D4,	"fmt",	0);
	create_insn	(x=0X7D0059D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0059D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0059D8,	"line",	0);
	set_cmt	(0X7D0059DA,	"level_ok",	0);
	set_cmt	(0X7D0059E4,	"size",	0);
	create_insn	(0X7D0059E4);
	set_cmt	(0X7D0059EE,	"size",	0);
	create_insn	(0X7D0059FE);
	set_cmt	(0X7D005A02,	"buf",	0);
	set_cmt	(0X7D005A04,	"len",	0);
	set_cmt	(0X7D005A10,	"len",	0);
	set_cmt	(0X7D005A14,	"buf",	0);
	set_cmt	(0X7D005A20,	"len",	0);
	set_cmt	(0X7D005A28,	"buf",	0);
	set_cmt	(0X7D005A32,	"buf",	0);
	set_cmt	(0X7D005A34,	"len",	0);
	set_cmt	(0X7D005A3E,	"size",	0);
	set_cmt	(0X7D005A42,	"ptr",	0);
	set_cmt	(0X7D005A4A,	"ptr",	0);
	set_cmt	(0X7D005A50,	"size",	0);
	create_insn	(0X7D005A64);
	create_insn	(x=0X7D005A6A);
	op_hex		(x,	1);
	create_insn	(0X7D005A7A);
	set_cmt	(0X7D005A7E,	"ptr",	0);
	set_cmt	(0X7D005A84,	"ptr",	0);
	set_cmt	(0X7D005A8A,	"size",	0);
	set_cmt	(0X7D005A8E,	"nmemb",	0);
	set_cmt	(0X7D005A96,	"size",	0);
	set_cmt	(0X7D005A9A,	"nmemb",	0);
	create_insn	(0X7D005AB0);
	set_cmt	(0X7D005AB2,	"ptr",	0);
	create_insn	(x=0X7D005AB4);
	op_hex		(x,	1);
	set_cmt	(0X7D005AC2,	"ptr",	0);
	set_cmt	(0X7D005AC8,	"size",	0);
	set_cmt	(0X7D005ACC,	"alignment",	0);
	set_cmt	(0X7D005AD6,	"size",	0);
	set_cmt	(0X7D005AE0,	"size",	0);
	set_cmt	(0X7D005AE4,	"alignment",	0);
	create_insn	(x=0X7D005AFA);
	op_hex		(x,	1);
	create_insn	(0X7D005B06);
	create_insn	(0X7D005B0A);
	create_insn	(0X7D005B0E);
	create_insn	(0X7D005B12);
	set_cmt	(0X7D005B14,	"ptr",	0);
	create_insn	(x=0X7D005B16);
	op_hex		(x,	1);
	set_cmt	(0X7D005B24,	"ptr",	0);
	set_cmt	(0X7D005B2A,	"ptr",	0);
	set_cmt	(0X7D005B30,	"size",	0);
	set_cmt	(0X7D005B34,	"alignment",	0);
	set_cmt	(0X7D005B3C,	"size",	0);
	set_cmt	(0X7D005B40,	"alignment",	0);
	create_insn	(0X7D005B54);
	set_cmt	(0X7D005B56,	"ptr",	0);
	set_cmt	(0X7D005B64,	"ptr",	0);
	make_array	(0X7D005B76,	0X2);
	create_dword	(x=0X7D005B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005B7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005B80);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D005B84);
	set_name	(0X7D005B84,	"physical_address_acceptable_for_smc");
	create_insn	(x=0X7D005B86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005BA4);
	create_dword	(x=0X7D005BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005BAC);
	set_name	(0X7D005BAC,	"main_fiq");
	create_insn	(x=0X7D005BAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005BB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D005BBA,	0X2);
	create_dword	(x=0X7D005BBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005BC4);
	set_name	(0X7D005BC4,	"platform_tee_entry_fast");
	set_cmt	(0X7D005BEA,	"pa",	0);
	set_cmt	(0X7D005BEC,	"m",	0);
	create_insn	(0X7D005BFC);
	create_insn	(0X7D005C00);
	set_cmt	(0X7D005C12,	"pa",	0);
	set_cmt	(0X7D005C14,	"m",	0);
	set_cmt	(0X7D005C24,	"args",	0);
	create_insn	(0X7D005C24);
	create_insn	(0X7D005C2E);
	make_array	(0X7D005C36,	0X2);
	create_dword	(x=0X7D005C38);
	op_enum		(x,	0,	GetEnum("tee_smc_defines"),0);
	create_insn	(0X7D005C3C);
	create_insn	(x=0X7D005C3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005C44,	"pa",	0);
	create_insn	(x=0X7D005C44);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D005C46,	"m",	0);
	make_array	(0X7D005C52,	0X2);
	create_dword	(x=0X7D005C54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005C58);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	set_name	(0X7D005C58,	"pa");
	create_insn	(x=0X7D005C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005C5C,	"generic_boot_get_handlers");
	create_dword	(x=0X7D005C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005C64);
	set_name	(0X7D005C64,	"main_init_gic");
	set_cmt	(0X7D005C66,	"m",	0);
	set_cmt	(0X7D005C68,	"pa",	0);
	set_cmt	(0X7D005C70,	"m",	0);
	set_cmt	(0X7D005C72,	"pa",	0);
	set_cmt	(0X7D005C78,	"gicd_base",	0);
	create_insn	(x=0X7D005C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005C82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005C8C,	"gicc_base",	0);
	set_cmt	(0X7D005C8E,	"gd",	0);
	set_cmt	(0X7D005C94,	"chip",	0);
	create_insn	(x=0X7D005CA6);
	op_plain_offset	(x,	1,	0X7D052558);
	op_plain_offset	(x,	129,	0X7D052558);
	make_array	(0X7D005CB2,	0X2);
	create_dword	(x=0X7D005CB4);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D005CB8);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D005CBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005CC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D005CC4,	"gd");
	create_insn	(0X7D005CC8);
	create_insn	(x=0X7D005CCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005CD6);
	op_plain_offset	(x,	1,	0X7D052558);
	op_plain_offset	(x,	129,	0X7D052558);
	make_array	(0X7D005CE2,	0X2);
	create_dword	(x=0X7D005CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005CE8);
	create_insn	(0X7D005CFA);
	create_insn	(0X7D005D14);
	make_array	(0X7D005D16,	0X2);
	create_dword	(x=0X7D005D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005D1C);
	set_name	(0X7D005D1C,	"init_unkn5D1C");
	set_cmt	(0X7D005D1E,	"m",	0);
	set_cmt	(0X7D005D20,	"pa",	0);
	create_insn	(x=0X7D005D20);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	create_insn	(x=0X7D005D22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005D32,	"a1",	0);
	create_insn	(0X7D005D44);
	make_array	(0X7D005D46,	0X2);
	create_dword	(x=0X7D005D48);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D005D4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005D50);
	create_insn	(0X7D005D5E);
	create_dword	(0X7D005D68);
	create_insn	(0X7D005D6C);
	set_name	(0X7D005D6C,	"TEE_CryptoCell_GetLCS");
	set_cmt	(0X7D005D6E,	"m",	0);
	set_cmt	(0X7D005D72,	"pa",	0);
	create_insn	(x=0X7D005D72);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	make_array	(0X7D005D82,	0X2);
	create_dword	(x=0X7D005D84);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_insn	(0X7D005D88);
	create_insn	(x=0X7D005D8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005D90,	"pa",	0);
	create_insn	(x=0X7D005D90);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D005D92,	"m",	0);
	make_array	(0X7D005D9E,	0X2);
	create_dword	(x=0X7D005DA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005DA4);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_insn	(0X7D005DA8);
	create_insn	(x=0X7D005DB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D005DBA,	0X2);
	create_dword	(x=0X7D005DBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D005DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005DC0,	"pm_system_reset");
	set_cmt	(0X7D005DC4,	"level",	0);
	set_cmt	(0X7D005DC6,	"fmt",	0);
	create_insn	(x=0X7D005DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D005DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005DCA,	"level_ok",	0);
	set_cmt	(0X7D005DCC,	"line",	0);
	set_cmt	(0X7D005DD4,	"m",	0);
	set_cmt	(0X7D005DD6,	"pa",	0);
	create_insn	(x=0X7D005DD6);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	create_insn	(x=0X7D005DE4);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D005DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005DEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005DF0);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(0X7D005DF4);
	create_insn	(0X7D005DF8);
	set_name	(0X7D005DF8,	"psci_smc_handler");
	set_cmt	(0X7D005DFA,	"fmt",	0);
	set_cmt	(0X7D005E04,	"switch 15 cases ",	0);
	set_cmt	(0X7D005E08,	"switch jump",	0);
	set_cmt	(0X7D005E0C,	"jump table for switch statement",	0);
	create_byte	(0X7D005E0C);
	set_name	(0X7D005E0C,	"jpt_7D005E08");
	create_byte	(0X7D005E0D);
	create_byte	(0X7D005E0E);
	create_byte	(0X7D005E0F);
	create_byte	(0X7D005E10);
	create_byte	(0X7D005E11);
	create_byte	(0X7D005E12);
	create_byte	(0X7D005E13);
	create_byte	(0X7D005E14);
	create_byte	(0X7D005E15);
	create_byte	(0X7D005E16);
	create_byte	(0X7D005E17);
	create_byte	(0X7D005E18);
	create_byte	(0X7D005E19);
	create_byte	(0X7D005E1A);
	set_cmt	(0X7D005E1C,	"jumptable 7D005E08 case 0",	1);
	create_insn	(0X7D005E1C);
	set_cmt	(0X7D005E22,	"jumptable 7D005E08 case 2",	1);
	create_insn	(0X7D005E22);
	set_cmt	(0X7D005E30,	"jumptable 7D005E08 case 3",	1);
	create_insn	(0X7D005E30);
	create_insn	(0X7D005E44);
	create_insn	(x=0X7D005E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005E54,	"op",	0);
	set_cmt	(0X7D005E5A,	"len",	0);
	set_cmt	(0X7D005E5C,	"va",	0);
	create_insn	(0X7D005E78);
	create_insn	(0X7D005EB0);
	set_cmt	(0X7D005EB4,	"jumptable 7D005E08 case 4",	1);
	create_insn	(0X7D005EB4);
	create_insn	(x=0X7D005EBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005EC8,	"jumptable 7D005E08 case 14",	1);
	create_insn	(0X7D005EC8);
	create_insn	(x=0X7D005ECE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005EE4);
	set_cmt	(0X7D005EEA,	"jumptable 7D005E08 cases 8,9",	1);
	create_insn	(0X7D005EEA);
	set_cmt	(0X7D005EEE,	"a0",	0);
	set_cmt	(0X7D005EF0,	"a1",	0);
	set_cmt	(0X7D005EF6,	"jumptable 7D005E08 default case",	1);
	create_insn	(x=0X7D005EF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D005EF6,	"def_7D005E08");
	create_insn	(x=0X7D005EF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D005EFE,	"level",	0);
	set_cmt	(0X7D005F00,	"line",	0);
	set_cmt	(0X7D005F04,	"level_ok",	0);
	set_cmt	(0X7D005F0A,	"jumptable 7D005E08 case 6",	1);
	set_cmt	(0X7D005F16,	"jumptable 7D005E08 case 1",	1);
	create_insn	(0X7D005F16);
	set_cmt	(0X7D005F1C,	"jumptable 7D005E08 case 10",	1);
	create_dword	(x=0X7D005F20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005F24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005F2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005F34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005F38);
	set_name	(0X7D005F38,	"plat_cpu_reset_early");
	create_insn	(x=0X7D005F44);
	op_hex		(x,	1);
	create_insn	(x=0X7D005F54);
	op_hex		(x,	1);
	create_insn	(0X7D005F5C);
	set_name	(0X7D005F5C,	"plat_cpu_reset_late");
	create_dword	(0X7D005F60);
	create_insn	(0X7D005F64);
	set_name	(0X7D005F64,	"sm_get_nsec_ctx");
	create_insn	(x=0X7D005F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D005F72,	0X2);
	create_dword	(x=0X7D005F74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005F78);
	set_name	(0X7D005F78,	"sm_get_sec_ctx");
	create_insn	(x=0X7D005F7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D005F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005F8C);
	set_name	(0X7D005F8C,	"sm_set_sec_smc_entry");
	create_insn	(x=0X7D005F94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D005FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D005FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D005FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005FB4);
	set_name	(0X7D005FB4,	"sm_set_nsec_ret_vals");
	create_insn	(x=0X7D005FC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D005FDC);
	create_dword	(0X7D005FEC);
	create_dword	(x=0X7D005FF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D005FF4);
	create_insn	(x=0X7D005FFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00600C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D006014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D006014,	"sm_set_entry_vector");
	make_array	(0X7D00601A,	0X2);
	create_dword	(x=0X7D00601C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006020);
	set_name	(0X7D006020,	"tee_dispatch_open_session");
	create_insn	(x=0X7D006026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00602A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00603E);
	op_hex		(x,	1);
	create_insn	(x=0X7D00604A);
	op_stkvar	(x,	1);
	create_insn	(0X7D006052);
	create_insn	(x=0X7D006056);
	op_stkvar	(x,	1);
	create_insn	(0X7D006060);
	create_insn	(0X7D006064);
	create_insn	(x=0X7D006066);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006068,	"num",	0);
	set_cmt	(0X7D006072,	"destination",	0);
	set_cmt	(0X7D006074,	"source",	0);
	set_cmt	(0X7D00607A,	"num",	0);
	set_cmt	(0X7D00607C,	"source",	0);
	set_cmt	(0X7D006080,	"destination",	0);
	set_cmt	(0X7D006088,	"param",	0);
	create_insn	(x=0X7D006088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00608A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00608C,	"clnt_id",	0);
	create_insn	(x=0X7D00608C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00608E,	"err",	0);
	create_insn	(x=0X7D00608E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006094,	"sess",	0);
	create_insn	(x=0X7D006094);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006096,	"cancel_req_to",	0);
	create_insn	(x=0X7D006096);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006098,	"open_sessions",	0);
	create_insn	(x=0X7D006098);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00609A,	"uuid",	0);
	create_insn	(x=0X7D0060A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0060A6,	"source",	0);
	set_cmt	(0X7D0060AE,	"destination",	0);
	set_cmt	(0X7D0060B0,	"num",	0);
	create_insn	(x=0X7D0060C4);
	op_stkvar	(x,	1);
	create_dword	(0X7D0060D0);
	create_dword	(x=0X7D0060D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0060D8);
	set_name	(0X7D0060D8,	"tee_dispatch_close_session");
	set_cmt	(0X7D0060E0,	"open_sessions",	0);
	create_insn	(x=0X7D0060E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0060E2,	"csess",	0);
	set_cmt	(0X7D0060E4,	"clnt_id",	0);
	make_array	(0X7D0060EE,	0X2);
	create_dword	(x=0X7D0060F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D0060F0,	"open_sessions");
	create_insn	(0X7D0060F4);
	set_name	(0X7D0060F4,	"tee_dispatch_invoke_command");
	set_cmt	(0X7D006100,	"id",	0);
	set_cmt	(0X7D006102,	"exclusive",	0);
	set_cmt	(0X7D006104,	"open_sessions",	0);
	create_insn	(x=0X7D006104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006106);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006112);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006114,	"num",	0);
	set_cmt	(0X7D00611E,	"destination",	0);
	set_cmt	(0X7D006120,	"source",	0);
	set_cmt	(0X7D006126,	"num",	0);
	set_cmt	(0X7D006128,	"source",	0);
	set_cmt	(0X7D00612C,	"destination",	0);
	create_insn	(x=0X7D006136);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006150,	"source",	0);
	set_cmt	(0X7D006156,	"destination",	0);
	set_cmt	(0X7D006158,	"num",	0);
	create_insn	(0X7D00616A);
	create_insn	(x=0X7D00616C);
	op_stkvar	(x,	1);
	make_array	(0X7D00617A,	0X2);
	create_dword	(x=0X7D00617C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D006180);
	create_insn	(0X7D006184);
	set_name	(0X7D006184,	"tee_dispatch_cancel_command");
	set_cmt	(0X7D00618A,	"id",	0);
	set_cmt	(0X7D00618C,	"exclusive",	0);
	set_cmt	(0X7D00618E,	"open_sessions",	0);
	create_insn	(x=0X7D00618E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006190);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00619A,	"sess",	0);
	set_cmt	(0X7D00619C,	"err",	0);
	create_insn	(x=0X7D00619C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00619E,	"clnt_id",	0);
	create_insn	(0X7D0061AE);
	create_insn	(x=0X7D0061B0);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D0061BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0061C0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0061C4);
	set_name	(0X7D0061C4,	"check_client");
	set_cmt	(0X7D0061D8,	"n",	0);
	create_insn	(0X7D0061D8);
	set_cmt	(0X7D0061DA,	"m1",	0);
	create_insn	(0X7D0061E6);
	make_array	(0X7D0061EA,	0X2);
	create_dword	(0X7D0061EC);
	create_insn	(x=0X7D0061F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0061FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006208);
	make_array	(0X7D00620A,	0X2);
	create_dword	(x=0X7D00620C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006218);
	set_name	(0X7D006218,	"tee_ta_clear_busy");
	set_cmt	(0X7D00621C,	"m",	0);
	create_insn	(x=0X7D00621C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00623A,	"m",	0);
	create_insn	(x=0X7D00623A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D006244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006248);
	set_name	(0X7D006248,	"tee_ta_try_set_busy");
	set_cmt	(0X7D00624C,	"m",	0);
	create_insn	(x=0X7D00624C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00624E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006256);
	op_hex		(x,	1);
	set_cmt	(0X7D00626C,	"cv",	0);
	create_insn	(x=0X7D00626C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00626E,	"m",	0);
	create_insn	(x=0X7D00626E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006276);
	create_insn	(x=0X7D00627A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00627E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006296);
	create_insn	(0X7D0062A0);
	create_insn	(x=0X7D0062A2);
	op_hex		(x,	1);
	create_insn	(0X7D0062AE);
	create_insn	(0X7D0062B0);
	set_cmt	(0X7D0062B8,	"cv",	0);
	set_cmt	(0X7D0062BA,	"m",	0);
	create_insn	(x=0X7D0062BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0062C2);
	set_cmt	(0X7D0062C8,	"m",	0);
	create_insn	(x=0X7D0062C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D0062D2,	0X2);
	create_dword	(x=0X7D0062D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0062D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0062DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0062E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0062E4);
	set_name	(0X7D0062E4,	"panic__tee_ta_set_busy");
	create_insn	(x=0X7D0062E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0062EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D0062F2,	0X2);
	create_dword	(x=0X7D0062F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0062F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0062FC);
	set_name	(0X7D0062FC,	"update_current_ctx");
	create_insn	(0X7D006312);
	create_insn	(0X7D006338);
	create_insn	(x=0X7D006342);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00634A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006350);
	make_array	(0X7D006352,	0X2);
	create_dword	(x=0X7D006354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00635C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006360);
	set_name	(0X7D006360,	"tee_ta_put_session");
	set_cmt	(0X7D006364,	"m",	0);
	create_insn	(x=0X7D006364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006394,	"m",	0);
	create_insn	(x=0X7D006394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00639E,	0X2);
	create_dword	(x=0X7D0063A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0063A4);
	set_name	(0X7D0063A4,	"tee_ta_get_session");
	set_cmt	(0X7D0063A8,	"m",	0);
	create_insn	(x=0X7D0063A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0063EE);
	set_cmt	(0X7D0063F2,	"cv",	0);
	set_cmt	(0X7D0063F4,	"m",	0);
	create_insn	(x=0X7D0063F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0063FC);
	set_cmt	(0X7D006402,	"m",	0);
	create_insn	(x=0X7D006402);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00640C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D006410,	"fmt",	0);
	create_insn	(0X7D006410);
	set_name	(0X7D006410,	"tee_ta_close_session");
	set_cmt	(0X7D00641C,	"exclusive",	0);
	set_cmt	(0X7D00641E,	"open_sessions",	0);
	create_insn	(x=0X7D006428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00642A,	"level",	0);
	create_insn	(x=0X7D006430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006432,	"line",	0);
	set_cmt	(0X7D006436,	"level_ok",	0);
	set_cmt	(0X7D00643E,	"id",	0);
	create_insn	(0X7D00643E);
	create_insn	(0X7D006450);
	set_cmt	(0X7D006452,	"ctx",	0);
	create_insn	(0X7D00645E);
	set_cmt	(0X7D006472,	"m",	0);
	create_insn	(x=0X7D006472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006490,	"cv",	0);
	set_cmt	(0X7D006492,	"m",	0);
	create_insn	(x=0X7D006492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00649A);
	create_insn	(0X7D0064A4);
	set_cmt	(0X7D0064A6,	"lineno",	0);
	set_cmt	(0X7D0064A8,	"m",	0);
	create_insn	(x=0X7D0064A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0064B0,	"ptr",	0);
	set_cmt	(0X7D0064B6,	"ctx",	0);
	set_cmt	(0X7D0064BC,	"m",	0);
	create_insn	(x=0X7D0064BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0064C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0064CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0064D2);
	set_cmt	(0X7D0064E8,	"fname",	0);
	create_insn	(x=0X7D0064E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0064EA);
	op_plain_offset	(x,	1,	0X7D04F0AC);
	op_plain_offset	(x,	129,	0X7D04F0AC);
	set_cmt	(0X7D0064EC,	"lineno",	0);
	set_cmt	(0X7D0064EE,	"m",	0);
	create_insn	(x=0X7D0064EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0064F6,	"cv",	0);
	set_cmt	(0X7D006508,	"m",	0);
	create_insn	(x=0X7D006508);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006512);
	create_dword	(x=0X7D006518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00651C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D006520);
	create_dword	(x=0X7D006524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00652C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00652C,	"fname");
	create_dword	(0X7D006530);
	set_cmt	(0X7D006534,	"fmt",	0);
	create_insn	(0X7D006534);
	set_name	(0X7D006534,	"tee_ta_open_session");
	set_cmt	(0X7D00653C,	"nmemb",	0);
	set_cmt	(0X7D00653E,	"size",	0);
	create_insn	(x=0X7D006544);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006574,	"m",	0);
	create_insn	(x=0X7D006574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006586);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006590,	"m1",	0);
	set_cmt	(0X7D006592,	"m2",	0);
	set_cmt	(0X7D006594,	"n",	0);
	create_insn	(0X7D0065A0);
	set_cmt	(0X7D0065A8,	"uuid",	0);
	set_cmt	(0X7D0065AA,	"s",	0);
	set_cmt	(0X7D0065B8,	"uuid",	0);
	set_cmt	(0X7D0065BA,	"s",	0);
	create_insn	(0X7D0065CE);
	set_cmt	(0X7D0065D4,	"ptr",	0);
	set_cmt	(0X7D0065DE,	"m",	0);
	create_insn	(x=0X7D0065DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0065F2,	"csess",	0);
	set_cmt	(0X7D0065F4,	"open_sessions",	0);
	set_cmt	(0X7D0065F6,	"clnt_id",	0);
	create_insn	(x=0X7D0065F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006606);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00661A,	"sess",	0);
	set_cmt	(0X7D00661E,	"param",	0);
	set_cmt	(0X7D006628,	"ctx",	0);
	create_insn	(x=0X7D006632);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006648,	"ctx",	0);
	create_insn	(0X7D006650);
	set_cmt	(0X7D006674,	"csess",	0);
	create_insn	(0X7D006674);
	set_cmt	(0X7D006676,	"open_sessions",	0);
	set_cmt	(0X7D006678,	"clnt_id",	0);
	create_insn	(x=0X7D006678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00668A);
	create_insn	(x=0X7D006690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006692,	"level",	0);
	create_insn	(x=0X7D006698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00669A,	"line",	0);
	set_cmt	(0X7D00669E,	"level_ok",	0);
	create_insn	(0X7D0066A6);
	create_insn	(0X7D0066AA);
	create_insn	(0X7D0066AE);
	create_insn	(0X7D0066B2);
	create_insn	(0X7D0066CA);
	create_insn	(0X7D0066CE);
	create_dword	(x=0X7D0066D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0066D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0066DC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0066E0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0066E4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D0066E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0066EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0066F0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D0066F4);
	set_name	(0X7D0066F4,	"tee_ta_invoke_command");
	set_cmt	(0X7D0066FC,	"s",	0);
	set_cmt	(0X7D0066FE,	"id",	0);
	create_insn	(x=0X7D006702);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00670C,	"ctx",	0);
	create_insn	(0X7D00671C);
	set_cmt	(0X7D006726,	"sess",	0);
	create_insn	(0X7D006726);
	set_cmt	(0X7D006728,	"param",	0);
	create_insn	(0X7D006738);
	create_insn	(x=0X7D006746);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00675E,	"ctx",	0);
	create_insn	(0X7D00676A);
	create_dword	(x=0X7D006770);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D006774);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D006778);
	set_name	(0X7D006778,	"tee_ta_cancel_command");
	set_cmt	(0X7D006780,	"s",	0);
	set_cmt	(0X7D006782,	"id",	0);
	create_insn	(0X7D006792);
	make_array	(0X7D006796,	0X2);
	create_dword	(x=0X7D006798);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00679C);
	set_name	(0X7D00679C,	"tee_ta_get_current_session");
	create_insn	(0X7D0067AE);
	make_array	(0X7D0067B2,	0X2);
	create_dword	(0X7D0067B4);
	create_insn	(0X7D0067B8);
	set_name	(0X7D0067B8,	"tee_ta_dump_current");
	set_cmt	(0X7D0067BA,	"fmt",	0);
	create_insn	(x=0X7D0067BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0067CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0067CE,	"level",	0);
	set_cmt	(0X7D0067D0,	"fmt",	0);
	create_insn	(x=0X7D0067D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0067D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0067D4,	"line",	0);
	set_cmt	(0X7D0067D8,	"level_ok",	0);
	create_insn	(x=0X7D0067E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0067E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0067F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0067FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0067FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D006802);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D006804,	"function",	0);
	create_insn	(x=0X7D00680C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00680E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006814,	"level",	0);
	set_cmt	(0X7D006816,	"line",	0);
	set_cmt	(0X7D006818,	"level_ok",	0);
	create_insn	(x=0X7D00681A);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00682C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006834);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D006838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00683C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006840);
	set_name	(0X7D006840,	"panic");
	create_insn	(x=0X7D006858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00685A,	"level",	0);
	set_cmt	(0X7D00685C,	"fmt",	0);
	create_insn	(x=0X7D00685C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00685E,	"function",	0);
	set_cmt	(0X7D006860,	"line",	0);
	set_cmt	(0X7D006862,	"level_ok",	0);
	create_insn	(0X7D00686A);
	create_insn	(x=0X7D00686C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006876);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00687C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00687E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D006886);
	create_insn	(x=0X7D00688C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00688E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00689C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00689E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0068A0,	"function",	0);
	set_cmt	(0X7D0068A2,	"level",	0);
	create_insn	(x=0X7D0068A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0068A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0068A8,	"fmt",	0);
	create_insn	(x=0X7D0068A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0068AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0068AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0068B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0068B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0068B4,	"line",	0);
	set_cmt	(0X7D0068B6,	"level_ok",	0);
	make_array	(0X7D0068C2,	0X2);
	create_dword	(x=0X7D0068C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0068E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D0068E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0068E4,	"itr_init");
	make_array	(0X7D0068EA,	0X2);
	create_dword	(x=0X7D0068EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0068F0);
	create_insn	(x=0X7D0068F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0068F4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_dword	(x=0X7D0068FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006900);
	set_name	(0X7D006900,	"tee_hash_get_digest_size");
	create_insn	(0X7D00691C);
	create_insn	(0X7D00692E);
	create_insn	(0X7D006940);
	create_insn	(0X7D00695A);
	create_insn	(0X7D00695E);
	create_insn	(0X7D006962);
	create_insn	(0X7D00696A);
	create_insn	(0X7D00696E);
	make_array	(0X7D006972,	0X2);
	create_dword	(0X7D006974);
	create_dword	(0X7D006978);
	create_dword	(0X7D00697C);
	create_dword	(0X7D006980);
	create_dword	(0X7D006984);
	create_dword	(0X7D006988);
	create_dword	(0X7D00698C);
	create_insn	(0X7D006990);
	create_insn	(x=0X7D006994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006998);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0069A2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0069AC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0069B0);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D0069BA,	"size",	0);
	create_insn	(x=0X7D0069BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0069C0,	"size",	0);
	create_insn	(x=0X7D0069C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0069CA,	"algo",	0);
	set_cmt	(0X7D0069D2,	"ctx",	0);
	set_cmt	(0X7D0069D4,	"algo",	0);
	set_cmt	(0X7D0069D6,	"digest",	0);
	set_cmt	(0X7D0069D8,	"len",	0);
	create_insn	(x=0X7D0069D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0069E2,	"ctx",	0);
	create_insn	(0X7D0069E2);
	set_cmt	(0X7D0069E4,	"algo",	0);
	set_cmt	(0X7D0069E6,	"data",	0);
	set_cmt	(0X7D0069E8,	"len",	0);
	create_insn	(0X7D0069F0);
	create_insn	(0X7D0069F4);
	set_cmt	(0X7D0069F6,	"ptr",	0);
	create_insn	(0X7D006A00);
	create_insn	(0X7D006A04);
	create_dword	(x=0X7D006A0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D006A10);
	create_dword	(0X7D006A14);
	create_dword	(0X7D006A18);
	create_dword	(0X7D006A1C);
	create_insn	(0X7D006A20);
	create_insn	(0X7D006A48);
	create_insn	(0X7D006A50);
	create_insn	(0X7D006A5C);
	create_insn	(0X7D006A6C);
	create_insn	(0X7D006A74);
	create_dword	(0X7D006A78);
	create_dword	(0X7D006A7C);
	create_dword	(0X7D006A80);
	create_dword	(0X7D006A84);
	create_dword	(0X7D006A88);
	create_insn	(0X7D006A8C);
	create_insn	(0X7D006AAE);
	create_insn	(0X7D006ABA);
	create_insn	(0X7D006ABE);
	create_insn	(0X7D006AD4);
	create_insn	(0X7D006ADE);
	create_insn	(0X7D006AEE);
	create_insn	(0X7D006B00);
	create_insn	(0X7D006B08);
	create_dword	(0X7D006B0C);
	create_dword	(0X7D006B10);
	create_dword	(0X7D006B14);
	create_dword	(0X7D006B18);
	create_dword	(0X7D006B1C);
	create_dword	(0X7D006B20);
	create_dword	(0X7D006B24);
	create_dword	(0X7D006B28);
	create_dword	(0X7D006B2C);
	create_insn	(0X7D006B30);
	set_cmt	(0X7D006B34,	"data",	0);
	create_insn	(x=0X7D006B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006B46);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006B58);
	op_stkvar	(x,	1);
	create_insn	(0X7D006B84);
	create_insn	(0X7D006B94);
	create_insn	(x=0X7D006BA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006BA4,	"ctx",	0);
	create_insn	(x=0X7D006BAA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006BAC,	"algo",	0);
	set_cmt	(0X7D006BAE,	"dst",	0);
	create_insn	(x=0X7D006BAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006BB0,	"mode",	0);
	set_cmt	(0X7D006BB2,	"last_block",	0);
	create_insn	(0X7D006BB8);
	create_insn	(0X7D006BBC);
	create_insn	(0X7D006BC0);
	create_dword	(x=0X7D006BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D006BCC);
	create_dword	(0X7D006BD0);
	create_dword	(0X7D006BD4);
	create_dword	(0X7D006BD8);
	create_dword	(0X7D006BDC);
	create_dword	(0X7D006BE0);
	create_insn	(0X7D006BE4);
	set_name	(0X7D006BE4,	"tee_aes_cbc_cts_update");
	create_insn	(x=0X7D006BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006BFE);
	op_stkvar	(x,	1);
	create_insn	(0X7D006C04);
	create_insn	(x=0X7D006C14);
	op_hex		(x,	1);
	set_cmt	(0X7D006C20,	"num",	0);
	create_insn	(x=0X7D006C26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006C2E,	"source",	0);
	set_cmt	(0X7D006C32,	"destination",	0);
	create_insn	(x=0X7D006C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006C50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006C60,	"num",	0);
	set_cmt	(0X7D006C68,	"source",	0);
	set_cmt	(0X7D006C6A,	"destination",	0);
	create_insn	(x=0X7D006C72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006C80);
	op_stkvar	(x,	1);
	create_insn	(0X7D006C8A);
	create_insn	(x=0X7D006C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006CBE,	"source",	0);
	set_cmt	(0X7D006CC0,	"num",	0);
	set_cmt	(0X7D006CC2,	"destination",	0);
	set_cmt	(0X7D006CC8,	"destination",	0);
	create_insn	(x=0X7D006CCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006CCC,	"source",	0);
	create_insn	(x=0X7D006CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006CEC);
	op_stkvar	(x,	1);
	create_insn	(0X7D006D00);
	create_insn	(x=0X7D006D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006D2E,	"source",	0);
	set_cmt	(0X7D006D30,	"destination",	0);
	set_cmt	(0X7D006D32,	"num",	0);
	create_insn	(0X7D006D3A);
	create_insn	(0X7D006D3E);
	create_insn	(0X7D006D42);
	make_array	(0X7D006D4A,	0X2);
	create_dword	(0X7D006D4C);
	create_dword	(0X7D006D50);
	create_dword	(0X7D006D54);
	create_insn	(0X7D006D58);
	create_insn	(x=0X7D006D5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006D5C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D006D66);
	make_array	(0X7D006D6A,	0X2);
	create_dword	(x=0X7D006D6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D006D70);
	create_insn	(x=0X7D006D78);
	op_hex		(x,	1);
	create_insn	(x=0X7D006D7E);
	op_hex		(x,	1);
	create_insn	(x=0X7D006D82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006D88);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D94);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006D9C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006DC4,	"size",	0);
	create_insn	(x=0X7D006DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006DF4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E02);
	op_stkvar	(x,	1);
	create_insn	(0X7D006E0C);
	create_insn	(x=0X7D006E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E18);
	op_stkvar	(x,	1);
	create_insn	(0X7D006E1E);
	create_insn	(0X7D006E24);
	set_cmt	(0X7D006E26,	"ptr",	0);
	create_insn	(x=0X7D006E32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006E3C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006E3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E44);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006E4E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006E88,	"size",	0);
	create_insn	(x=0X7D006E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006F12,	"source",	0);
	create_insn	(x=0X7D006F12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006F1C,	"destination",	0);
	create_insn	(x=0X7D006F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F2C);
	op_stkvar	(x,	1);
	create_insn	(0X7D006F34);
	create_insn	(0X7D006F38);
	create_insn	(0X7D006F3E);
	create_insn	(0X7D006F42);
	create_insn	(0X7D006F46);
	set_cmt	(0X7D006F48,	"ptr",	0);
	create_insn	(0X7D006F52);
	make_array	(0X7D006F5A,	0X2);
	create_dword	(x=0X7D006F5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D006F60);
	create_dword	(0X7D006F64);
	create_dword	(0X7D006F68);
	create_dword	(0X7D006F6C);
	create_dword	(0X7D006F70);
	create_insn	(0X7D006F74);
	create_insn	(x=0X7D006F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D006F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F80);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006F82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F88);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F90);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006F92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006F98);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D006F9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FA0);
	op_hex		(x,	1);
	set_cmt	(0X7D006FA4,	"size",	0);
	create_insn	(x=0X7D006FA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D006FA6,	"algo",	0);
	set_cmt	(0X7D006FB0,	"size",	0);
	create_insn	(x=0X7D006FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D006FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007006);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007016);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00701C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007032);
	op_stkvar	(x,	1);
	create_insn	(0X7D00703C);
	create_insn	(x=0X7D007040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007042);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00704C,	"destination",	0);
	create_insn	(x=0X7D00704C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00704E,	"source",	0);
	create_insn	(x=0X7D00704E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007050,	"num",	0);
	create_insn	(x=0X7D00705A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00705E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007062);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00706A);
	op_stkvar	(x,	1);
	create_insn	(0X7D007070);
	create_insn	(0X7D007074);
	create_insn	(0X7D007078);
	set_cmt	(0X7D00707A,	"ptr",	0);
	create_dword	(x=0X7D007088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00708C);
	create_dword	(0X7D007090);
	create_insn	(0X7D007094);
	create_insn	(x=0X7D00709A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00709C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070BE);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0070D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0070E4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D0070EE);
	create_insn	(x=0X7D0070F4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007102);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007110);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007124);
	op_stkvar	(x,	1);
	create_insn	(0X7D007134);
	create_insn	(0X7D00713A);
	make_array	(0X7D007142,	0X2);
	create_dword	(x=0X7D007144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007148);
	create_insn	(x=0X7D00714E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007152);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00715E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007166);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00716C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007172);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007178);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00717E);
	op_hex		(x,	1);
	create_insn	(x=0X7D007182);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00718E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007190);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00719A,	"size",	0);
	create_insn	(x=0X7D00719A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071DE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0071E6);
	create_insn	(x=0X7D0071EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0071F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0071FC,	"ptr",	0);
	create_insn	(x=0X7D0071FC);
	op_stkvar	(x,	1);
	create_insn	(0X7D007204);
	create_insn	(0X7D007208);
	create_insn	(0X7D00720C);
	create_dword	(x=0X7D007214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007218);
	create_dword	(0X7D00721C);
	create_insn	(0X7D007220);
	set_name	(0X7D007220,	"syscall_not_supported");
	create_dword	(0X7D007224);
	create_insn	(0X7D007228);
	set_name	(0X7D007228,	"syscall_close_ta_session");
	create_insn	(x=0X7D00722C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00723A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00723C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00723E,	"num",	0);
	set_cmt	(0X7D00724A,	"destination",	0);
	set_cmt	(0X7D00724C,	"source",	0);
	set_cmt	(0X7D007252,	"csess",	0);
	set_cmt	(0X7D007254,	"open_sessions",	0);
	set_cmt	(0X7D007258,	"clnt_id",	0);
	make_array	(0X7D007262,	0X2);
	create_dword	(x=0X7D007264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D007268,	"fmt",	0);
	create_insn	(0X7D007268);
	set_name	(0X7D007268,	"syscall_log");
	set_cmt	(0X7D007270,	"size",	0);
	set_cmt	(0X7D007286,	"line",	0);
	create_insn	(x=0X7D00728A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00728C,	"level",	0);
	set_cmt	(0X7D007292,	"level_ok",	0);
	set_cmt	(0X7D007298,	"ptr",	0);
	create_insn	(0X7D0072A4);
	create_dword	(x=0X7D0072A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0072AC);
	set_name	(0X7D0072AC,	"tee_svc_copy_param");
	set_cmt	(0X7D0072CA,	"utc",	0);
	create_insn	(0X7D0072CA);
	set_cmt	(0X7D0072CC,	"flags",	0);
	set_cmt	(0X7D0072CE,	"len",	0);
	create_insn	(x=0X7D0072EC);
	op_hex		(x,	1);
	set_cmt	(0X7D0072FA,	"switch 7 cases ",	0);
	set_cmt	(0X7D007300,	"switch jump",	0);
	set_cmt	(0X7D007304,	"jump table for switch statement",	0);
	create_byte	(0X7D007304);
	set_name	(0X7D007304,	"jpt_7D007300");
	create_byte	(0X7D007305);
	create_byte	(0X7D007306);
	create_byte	(0X7D007307);
	create_byte	(0X7D007308);
	create_byte	(0X7D007309);
	create_byte	(0X7D00730A);
	set_cmt	(0X7D00730C,	"jumptable 7D007300 cases 4-6",	1);
	create_insn	(0X7D00730C);
	set_cmt	(0X7D007322,	"jumptable 7D007300 cases 0,2",	1);
	create_insn	(0X7D007322);
	set_cmt	(0X7D00732C,	"jumptable 7D007300 default case",	1);
	create_insn	(0X7D00732C);
	set_name	(0X7D00732C,	"def_7D007300");
	create_insn	(x=0X7D007340);
	op_stkvar	(x,	1);
	create_insn	(0X7D00734A);
	create_insn	(0X7D007356);
	create_insn	(x=0X7D007380);
	op_hex		(x,	1);
	create_insn	(0X7D00738C);
	create_insn	(0X7D0073AC);
	create_insn	(x=0X7D0073B2);
	op_hex		(x,	1);
	create_insn	(0X7D0073C2);
	set_cmt	(0X7D0073D0,	"va",	0);
	set_cmt	(0X7D0073D4,	"utc",	0);
	create_insn	(x=0X7D0073D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0073E0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0073EA);
	set_cmt	(0X7D0073EE,	"m",	0);
	create_insn	(x=0X7D0073EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0073F4,	"size",	0);
	set_cmt	(0X7D0073F6,	"pool",	0);
	create_insn	(x=0X7D0073F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0073FC,	"lineno",	0);
	create_insn	(x=0X7D0073FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007400,	"m",	0);
	create_insn	(x=0X7D007400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007406);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007408,	"mm",	0);
	set_cmt	(0X7D007414,	"m",	0);
	create_insn	(x=0X7D007438);
	op_hex		(x,	1);
	create_insn	(x=0X7D007442);
	op_hex		(x,	1);
	create_insn	(x=0X7D007456);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007462);
	op_stkvar	(x,	1);
	create_insn	(0X7D00746A);
	create_insn	(x=0X7D007472);
	op_stkvar	(x,	1);
	create_insn	(0X7D00748E);
	make_array	(0X7D007496,	0X2);
	create_dword	(0X7D007498);
	create_dword	(x=0X7D00749C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0074A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0074A4);
	create_insn	(0X7D0074A8);
	set_name	(0X7D0074A8,	"get_prop_client_id");
	create_insn	(0X7D0074C6);
	make_array	(0X7D0074CA,	0X2);
	create_dword	(0X7D0074CC);
	create_insn	(0X7D0074D0);
	set_name	(0X7D0074D0,	"get_prop_ta_app_id");
	create_insn	(0X7D0074EE);
	make_array	(0X7D0074F2,	0X2);
	create_dword	(0X7D0074F4);
	create_insn	(0X7D0074F8);
	set_name	(0X7D0074F8,	"get_prop_tee_sys_time_prot_level");
	create_insn	(0X7D00750C);
	create_insn	(x=0X7D007512);
	op_stkvar	(x,	1);
	make_array	(0X7D007522,	0X2);
	create_dword	(0X7D007524);
	create_insn	(0X7D007528);
	set_name	(0X7D007528,	"get_prop_tee_dev_id");
	create_insn	(x=0X7D00752E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00753C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007542);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00754E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007552);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007566);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D007568,	"destination",	0);
	create_insn	(x=0X7D007568);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00756A,	"num",	0);
	create_insn	(x=0X7D007572);
	op_hex		(x,	1);
	create_insn	(x=0X7D007576);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00757A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00758C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00758E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00759C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0075AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0075BE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0075C8);
	make_array	(0X7D0075CE,	0X2);
	create_dword	(0X7D0075D0);
	create_dword	(x=0X7D0075D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0075D8);
	create_dword	(0X7D0075DC);
	create_insn	(0X7D0075E0);
	set_name	(0X7D0075E0,	"syscall_get_property");
	set_cmt	(0X7D0075EC,	"inlined get_prop_set()",	1);
	create_insn	(x=0X7D0075EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0075FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007602);
	op_plain_offset	(x,	1,	0X7D0528C8);
	op_plain_offset	(x,	129,	0X7D0528C8);
	create_insn	(0X7D007606);
	create_insn	(x=0X7D00760A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007612);
	op_plain_offset	(x,	1,	0X7D0528D4);
	op_plain_offset	(x,	129,	0X7D0528D4);
	create_insn	(0X7D007616);
	create_insn	(x=0X7D00761A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007622);
	op_plain_offset	(x,	1,	0X7D0528E0);
	op_plain_offset	(x,	129,	0X7D0528E0);
	create_insn	(0X7D007630);
	create_insn	(0X7D00765E);
	create_insn	(0X7D00766E);
	create_insn	(0X7D00767E);
	create_insn	(x=0X7D007680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00768E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007692);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00769E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0076A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0076A4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0076AA);
	create_insn	(0X7D0076BC);
	create_insn	(0X7D0076D4);
	create_insn	(x=0X7D0076D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0076EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0076EE);
	op_stkvar	(x,	1);
	create_insn	(0X7D007700);
	create_insn	(x=0X7D007704);
	op_stkvar	(x,	1);
	create_insn	(0X7D007714);
	create_insn	(0X7D007718);
	create_dword	(x=0X7D007720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00772C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007738);
	create_dword	(0X7D00773C);
	create_insn	(0X7D007740);
	set_name	(0X7D007740,	"syscall_get_property_name_to_index");
	create_insn	(x=0X7D007750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007758);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00775E);
	create_insn	(x=0X7D007762);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00776A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D007770);
	create_insn	(x=0X7D007774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00777C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D007782);
	create_insn	(x=0X7D007786);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00779C,	"size",	0);
	create_insn	(x=0X7D0077C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0077C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0077DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0077DE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0077E8);
	create_insn	(x=0X7D0077EA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0077F6);
	create_insn	(x=0X7D00780A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00780C);
	op_stkvar	(x,	1);
	create_insn	(0X7D007816);
	create_insn	(0X7D00781C);
	set_cmt	(0X7D00781E,	"ptr",	0);
	create_insn	(x=0X7D007820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007826);
	op_stkvar	(x,	1);
	create_insn	(0X7D00782C);
	create_dword	(x=0X7D007834);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00783C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007840);
	create_dword	(0X7D007844);
	create_dword	(0X7D007848);
	create_dword	(x=0X7D00784C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007854);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007858);
	set_name	(0X7D007858,	"syscall_invoke_ta_command");
	create_insn	(x=0X7D007860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00787A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D007886,	"exclusive",	0);
	create_insn	(x=0X7D00788A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00788C,	"id",	0);
	set_cmt	(0X7D007890,	"open_sessions",	0);
	create_insn	(x=0X7D00789E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0078A0,	"destination",	0);
	create_insn	(x=0X7D0078A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0078AA,	"source",	0);
	set_cmt	(0X7D0078AC,	"num",	0);
	create_insn	(x=0X7D0078AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0078B4,	"tmp_buf_va",	0);
	create_insn	(x=0X7D0078B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0078BA,	"mm",	0);
	create_insn	(x=0X7D0078BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0078BC,	"called_sess",	0);
	set_cmt	(0X7D0078BE,	"sess",	0);
	set_cmt	(0X7D0078C0,	"callee_params",	0);
	set_cmt	(0X7D0078C2,	"param",	0);
	create_insn	(x=0X7D0078CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0078FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007902,	"m",	0);
	create_insn	(x=0X7D007902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D007908,	"p",	0);
	create_insn	(x=0X7D007908);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00790E,	"m",	0);
	create_insn	(x=0X7D00790E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00791A);
	op_stkvar	(x,	1);
	create_insn	(0X7D007924);
	create_insn	(0X7D007928);
	create_dword	(x=0X7D007930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D007934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007938);
	create_insn	(x=0X7D00793C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00793C,	"tee_svc_copy_kaddr_to_uref");
	create_insn	(x=0X7D007946);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007952);
	op_stkvar	(x,	1);
	make_array	(0X7D007956,	0X2);
	create_dword	(x=0X7D007958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00795C);
	set_name	(0X7D00795C,	"syscall_open_ta_session");
	set_cmt	(0X7D00796A,	"size",	0);
	create_insn	(x=0X7D007972);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007978);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007982,	"size",	0);
	set_cmt	(0X7D00798A,	"size",	0);
	create_insn	(x=0X7D0079A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0079D4,	"source",	0);
	set_cmt	(0X7D0079DA,	"num",	0);
	create_insn	(x=0X7D0079DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0079E4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0079E6,	"mm",	0);
	create_insn	(x=0X7D0079E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0079E8,	"tmp_buf_va",	0);
	create_insn	(x=0X7D0079E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0079EA,	"called_sess",	0);
	set_cmt	(0X7D0079EC,	"sess",	0);
	set_cmt	(0X7D0079EE,	"callee_params",	0);
	set_cmt	(0X7D0079F0,	"param",	0);
	create_insn	(x=0X7D0079FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0079FC,	"err",	0);
	create_insn	(x=0X7D0079FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A02,	"param",	0);
	create_insn	(x=0X7D007A02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A04,	"open_sessions",	0);
	set_cmt	(0X7D007A08,	"uuid",	0);
	set_cmt	(0X7D007A0A,	"sess",	0);
	create_insn	(x=0X7D007A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A2E,	"m",	0);
	create_insn	(x=0X7D007A2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D007A34,	"p",	0);
	create_insn	(x=0X7D007A34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A3A,	"m",	0);
	create_insn	(x=0X7D007A3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D007A46,	"uref",	0);
	set_cmt	(0X7D007A48,	"kaddr",	0);
	create_insn	(x=0X7D007A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007A50);
	op_stkvar	(x,	1);
	create_insn	(0X7D007A5A);
	set_cmt	(0X7D007A5E,	"ptr",	0);
	set_cmt	(0X7D007A64,	"ptr",	0);
	set_cmt	(0X7D007A6A,	"ptr",	0);
	create_dword	(x=0X7D007A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007A7C);
	create_insn	(0X7D007A80);
	set_name	(0X7D007A80,	"syscall_wait");
	create_insn	(x=0X7D007A86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A8E,	"time",	0);
	create_insn	(x=0X7D007A8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007A9A,	"time",	0);
	create_insn	(x=0X7D007A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007AB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007AC0,	"milliseconds_delay",	0);
	create_insn	(0X7D007AC8);
	make_array	(0X7D007ACE,	0X2);
	create_dword	(0X7D007AD0);
	create_insn	(0X7D007AD4);
	set_name	(0X7D007AD4,	"syscall_get_time");
	create_insn	(x=0X7D007AD8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007AF2,	"time",	0);
	create_insn	(x=0X7D007AF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007AFA,	"time",	0);
	create_insn	(x=0X7D007AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007B02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007B18);
	op_stkvar	(x,	1);
	create_insn	(0X7D007B28);
	make_array	(0X7D007B2E,	0X2);
	create_dword	(0X7D007B30);
	create_dword	(0X7D007B34);
	create_insn	(x=0X7D007B38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D007B38,	"op_attr_bignum_from_user");
	create_insn	(x=0X7D007B3C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D007B4E);
	make_array	(0X7D007B52,	0X2);
	create_dword	(x=0X7D007B54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007B58);
	create_insn	(0X7D007B5C);
	set_name	(0X7D007B5C,	"op_attr_bignum_from_obj");
	create_insn	(x=0X7D007B5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007B62);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	make_array	(0X7D007B6E,	0X2);
	create_dword	(x=0X7D007B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007B74);
	set_name	(0X7D007B74,	"op_attr_bignum_clear");
	create_insn	(x=0X7D007B76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007B7A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	make_array	(0X7D007B82,	0X2);
	create_dword	(x=0X7D007B84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D007B88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D007B88,	"op_attr_bignum_free");
	create_insn	(x=0X7D007B8C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_dword	(x=0X7D007B9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007BA0);
	set_name	(0X7D007BA0,	"tee_svc_find_type_props");
	create_insn	(x=0X7D007BA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007BAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D007BB4);
	make_array	(0X7D007BBE,	0X2);
	create_dword	(x=0X7D007BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007BC4);
	set_name	(0X7D007BC4,	"tee_svc_cryp_check_attr");
	create_insn	(x=0X7D007BCE);
	op_stkvar	(x,	1);
	create_insn	(0X7D007BDA);
	create_insn	(x=0X7D007BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007BF2);
	op_stkvar	(x,	1);
	create_insn	(0X7D007C12);
	create_insn	(0X7D007C20);
	create_insn	(x=0X7D007C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007C42);
	op_stkvar	(x,	1);
	create_insn	(0X7D007C5C);
	create_insn	(0X7D007C6A);
	create_dword	(0X7D007C7C);
	create_insn	(0X7D007C80);
	set_name	(0X7D007C80,	"tee_svc_cryp_obj_populate_type");
	create_insn	(x=0X7D007CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007CAE);
	op_hex		(x,	1);
	create_insn	(x=0X7D007CCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D007D08);
	create_insn	(x=0X7D007D0E);
	op_hex		(x,	1);
	create_insn	(0X7D007D20);
	create_dword	(x=0X7D007D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007D2C);
	create_dword	(0X7D007D30);
	create_insn	(0X7D007D34);
	set_name	(0X7D007D34,	"op_attr_value_from_user");
	set_cmt	(0X7D007D3A,	"num",	0);
	create_insn	(0X7D007D44);
	create_dword	(0X7D007D48);
	create_insn	(0X7D007D4C);
	set_name	(0X7D007D4C,	"op_attr_secret_value_from_obj");
	set_cmt	(0X7D007D4E,	"num",	0);
	set_cmt	(0X7D007D5A,	"source",	0);
	set_cmt	(0X7D007D5C,	"destination",	0);
	create_insn	(0X7D007D6A);
	make_array	(0X7D007D6E,	0X2);
	create_dword	(0X7D007D70);
	create_insn	(0X7D007D74);
	set_name	(0X7D007D74,	"op_attr_bignum_from_binary");
	set_cmt	(0X7D007D7A,	"v",	0);
	create_insn	(x=0X7D007D7A);
	op_stkvar	(x,	1);
	create_insn	(0X7D007D8E);
	create_insn	(x=0X7D007D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007D9E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007DAA);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D007DB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007DBC);
	set_name	(0X7D007DBC,	"op_attr_bignum_to_binary");
	create_insn	(x=0X7D007DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007DCC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007DEA);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_dword	(x=0X7D007E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D007E04);
	set_name	(0X7D007E04,	"op_attr_value_to_user");
	create_insn	(x=0X7D007E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007E2A);
	op_stkvar	(x,	1);
	create_insn	(0X7D007E34);
	make_array	(0X7D007E3A,	0X2);
	create_dword	(0X7D007E3C);
	create_insn	(0X7D007E40);
	set_name	(0X7D007E40,	"op_attr_secret_value_to_user");
	create_insn	(x=0X7D007E5C);
	op_stkvar	(x,	1);
	create_insn	(0X7D007E8E);
	make_array	(0X7D007E96,	0X2);
	create_dword	(0X7D007E98);
	create_insn	(0X7D007E9C);
	set_name	(0X7D007E9C,	"op_attr_bignum_to_user");
	create_insn	(x=0X7D007EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007EB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007EBC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D007EC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007EF2,	"len",	0);
	set_cmt	(0X7D007EF4,	"flags",	0);
	set_cmt	(0X7D007EF6,	"utc",	0);
	set_cmt	(0X7D007EFA,	"uaddr",	0);
	create_insn	(x=0X7D007F04);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D007F10);
	create_insn	(0X7D007F14);
	create_dword	(x=0X7D007F1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D007F20);
	create_insn	(0X7D007F24);
	set_name	(0X7D007F24,	"tee_svc_cryp_get_state");
	create_insn	(0X7D007F36);
	create_insn	(0X7D007F3A);
	make_array	(0X7D007F3E,	0X2);
	create_dword	(0X7D007F40);
	create_insn	(0X7D007F44);
	set_name	(0X7D007F44,	"tee_svc_cipher_update_helper");
	create_insn	(x=0X7D007F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007F56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007F60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D007F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007F66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007F74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007F76,	"flags",	0);
	set_cmt	(0X7D007F7A,	"uaddr",	0);
	set_cmt	(0X7D007F7C,	"len",	0);
	set_cmt	(0X7D007F7E,	"utc",	0);
	create_insn	(0X7D007F98);
	create_insn	(x=0X7D007F9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007FA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007FA8,	"flags",	0);
	set_cmt	(0X7D007FAC,	"uaddr",	0);
	set_cmt	(0X7D007FAE,	"len",	0);
	create_insn	(x=0X7D007FAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D007FB0,	"utc",	0);
	set_cmt	(0X7D007FBC,	"pa",	0);
	set_cmt	(0X7D007FBE,	"m",	0);
	create_insn	(x=0X7D007FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D007FEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00800C);
	op_stkvar	(x,	1);
	create_insn	(0X7D008020);
	create_insn	(x=0X7D008028);
	op_stkvar	(x,	1);
	create_insn	(0X7D00803C);
	create_insn	(0X7D008040);
	create_dword	(x=0X7D008048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00804C);
	create_dword	(0X7D008050);
	create_insn	(0X7D008054);
	set_name	(0X7D008054,	"tee_svc_cryp_check_key_type");
	create_insn	(0X7D008072);
	create_insn	(0X7D008086);
	create_insn	(0X7D00809A);
	create_insn	(0X7D0080AA);
	create_insn	(0X7D0080B8);
	create_insn	(0X7D0080BE);
	create_insn	(0X7D0080C4);
	create_insn	(0X7D0080CA);
	create_insn	(0X7D0080D0);
	create_insn	(0X7D0080D6);
	create_insn	(0X7D0080DC);
	create_insn	(0X7D0080EA);
	create_insn	(0X7D0080F8);
	create_insn	(0X7D0080FE);
	create_insn	(0X7D00810E);
	create_insn	(0X7D008114);
	create_insn	(0X7D00811A);
	create_insn	(0X7D008120);
	create_insn	(0X7D008126);
	create_insn	(0X7D00813A);
	create_insn	(0X7D00813E);
	make_array	(0X7D008142,	0X2);
	create_dword	(0X7D008144);
	create_dword	(0X7D008148);
	create_dword	(0X7D00814C);
	create_dword	(0X7D008150);
	create_dword	(0X7D008154);
	create_dword	(0X7D008158);
	create_dword	(0X7D00815C);
	create_dword	(0X7D008160);
	create_dword	(0X7D008164);
	create_dword	(0X7D008168);
	create_dword	(0X7D00816C);
	create_dword	(0X7D008170);
	create_dword	(0X7D008174);
	create_dword	(0X7D008178);
	create_dword	(0X7D00817C);
	create_dword	(0X7D008180);
	create_dword	(0X7D008184);
	create_dword	(0X7D008188);
	create_dword	(0X7D00818C);
	create_dword	(0X7D008190);
	create_insn	(0X7D008194);
	set_name	(0X7D008194,	"op_attr_secret_value_from_user");
	set_cmt	(0X7D0081A0,	"destination",	0);
	create_insn	(0X7D0081AC);
	create_dword	(0X7D0081B0);
	create_insn	(0X7D0081B4);
	set_name	(0X7D0081B4,	"syscall_cryp_obj_get_info");
	create_insn	(x=0X7D0081C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0081C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0081C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0081D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0081E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0081EE);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D0081FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008200);
	set_name	(0X7D008200,	"syscall_cryp_obj_restrict_usage");
	create_insn	(x=0X7D008210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008212);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00823A);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00824C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008250);
	set_name	(0X7D008250,	"syscall_cryp_obj_get_attr");
	create_insn	(x=0X7D008266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00826C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00827E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0082B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0082C6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0082D4);
	create_insn	(0X7D0082D8);
	create_insn	(0X7D0082DC);
	create_dword	(x=0X7D0082E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0082E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0082EC);
	create_dword	(0X7D0082F0);
	create_dword	(0X7D0082F4);
	create_insn	(0X7D0082F8);
	set_name	(0X7D0082F8,	"tee_obj_attr_free");
	create_insn	(x=0X7D008312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D008338);
	create_dword	(x=0X7D00833C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008340);
	set_name	(0X7D008340,	"tee_obj_attr_clear");
	create_insn	(x=0X7D00835A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D008380);
	create_dword	(x=0X7D008384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008388);
	set_name	(0X7D008388,	"tee_obj_attr_to_binary");
	create_insn	(x=0X7D008392);
	op_stkvar	(x,	1);
	create_insn	(0X7D00839C);
	create_insn	(0X7D0083AE);
	create_insn	(x=0X7D0083C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0083EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0083F6);
	op_stkvar	(x,	1);
	create_insn	(0X7D008406);
	create_insn	(0X7D00840A);
	make_array	(0X7D008412,	0X2);
	create_dword	(0X7D008414);
	create_dword	(0X7D008418);
	create_dword	(0X7D00841C);
	create_dword	(x=0X7D008420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008424);
	set_name	(0X7D008424,	"tee_obj_attr_from_binary");
	create_insn	(x=0X7D008436);
	op_stkvar	(x,	1);
	create_insn	(0X7D00843E);
	create_insn	(x=0X7D00844E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008470);
	op_stkvar	(x,	1);
	create_insn	(0X7D00847E);
	create_insn	(0X7D008482);
	make_array	(0X7D00848A,	0X2);
	create_dword	(0X7D00848C);
	create_dword	(0X7D008490);
	create_dword	(0X7D008494);
	create_dword	(x=0X7D008498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00849C);
	set_name	(0X7D00849C,	"tee_obj_attr_copy_from");
	create_insn	(0X7D0084B4);
	create_insn	(x=0X7D0084D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D008500);
	create_insn	(x=0X7D00854A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00857E);
	create_insn	(0X7D008592);
	make_array	(0X7D00859A,	0X2);
	create_dword	(0X7D00859C);
	create_dword	(0X7D0085A0);
	create_dword	(0X7D0085A4);
	create_dword	(0X7D0085A8);
	create_dword	(0X7D0085AC);
	create_dword	(0X7D0085B0);
	create_dword	(x=0X7D0085B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0085B8);
	create_insn	(0X7D0085BC);
	set_name	(0X7D0085BC,	"tee_obj_set_type");
	create_insn	(0X7D0085D6);
	set_cmt	(0X7D0085FC,	"nmemb",	0);
	set_cmt	(0X7D0085FE,	"size",	0);
	create_insn	(x=0X7D008622);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008624);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008628);
	create_insn	(x=0X7D008632);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008634);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008638);
	create_insn	(x=0X7D00864A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00864C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008652);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00865C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00865E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008662);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008664);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00866A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008686);
	create_insn	(0X7D00868A);
	create_insn	(0X7D00868E);
	create_insn	(0X7D008692);
	create_insn	(0X7D008696);
	create_insn	(0X7D0086A0);
	make_array	(0X7D0086A2,	0X2);
	create_dword	(0X7D0086A4);
	create_dword	(0X7D0086A8);
	create_dword	(0X7D0086AC);
	create_dword	(x=0X7D0086B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0086B4);
	create_dword	(0X7D0086B8);
	create_dword	(0X7D0086BC);
	create_dword	(0X7D0086C0);
	create_dword	(0X7D0086C4);
	create_insn	(0X7D0086C8);
	set_name	(0X7D0086C8,	"syscall_cryp_obj_alloc");
	create_insn	(x=0X7D0086D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0086FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008708,	"uref",	0);
	set_cmt	(0X7D00870A,	"kaddr",	0);
	create_insn	(x=0X7D008714);
	op_stkvar	(x,	1);
	create_insn	(0X7D008724);
	create_insn	(0X7D008728);
	create_insn	(0X7D00872C);
	make_array	(0X7D008732,	0X2);
	create_dword	(0X7D008734);
	create_dword	(0X7D008738);
	create_dword	(0X7D00873C);
	create_insn	(0X7D008740);
	set_name	(0X7D008740,	"syscall_cryp_obj_close");
	create_insn	(x=0X7D00874C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00874E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008762);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00876A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00877A);
	create_dword	(x=0X7D008780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008784);
	create_insn	(0X7D008788);
	set_name	(0X7D008788,	"syscall_cryp_obj_reset");
	create_insn	(x=0X7D008794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008796);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00879A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0087AA,	"o",	0);
	create_insn	(x=0X7D0087AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0087AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0087B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0087C6);
	op_hex		(x,	1);
	create_insn	(0X7D0087CE);
	create_dword	(x=0X7D0087D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0087D8);
	create_insn	(0X7D0087DC);
	set_name	(0X7D0087DC,	"syscall_cryp_obj_populate");
	create_insn	(x=0X7D0087EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0087F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0087F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008806);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00880A);
	op_hex		(x,	1);
	create_insn	(x=0X7D008828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00884C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00885C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008860);
	op_hex		(x,	1);
	set_cmt	(0X7D008866,	"ptr",	0);
	create_insn	(0X7D008870);
	create_insn	(0X7D008874);
	create_insn	(0X7D008878);
	make_array	(0X7D00887E,	0X2);
	create_dword	(x=0X7D008880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008884);
	create_dword	(0X7D008888);
	create_dword	(0X7D00888C);
	create_insn	(0X7D008890);
	set_name	(0X7D008890,	"syscall_cryp_obj_copy");
	create_insn	(x=0X7D008894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0088B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088D6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0088E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0088E6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0088EC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0088F8);
	make_array	(0X7D0088FE,	0X2);
	create_dword	(x=0X7D008900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008904);
	create_insn	(0X7D008908);
	set_name	(0X7D008908,	"syscall_obj_generate_key");
	create_insn	(x=0X7D008910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008928);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00893C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008940);
	op_hex		(x,	1);
	create_insn	(x=0X7D008988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0089B6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0089DC);
	create_insn	(0X7D0089F2);
	create_insn	(0X7D008A00);
	create_insn	(x=0X7D008A02);
	op_hex		(x,	1);
	create_insn	(x=0X7D008A26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008A2E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008A46);
	op_stkvar	(x,	1);
	create_insn	(0X7D008A4E);
	create_insn	(x=0X7D008A52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008A5A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008A66);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008AAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008AB0);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008AD6);
	create_insn	(x=0X7D008B16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008B20);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008B6C);
	create_insn	(x=0X7D008B7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D008B80,	"a1",	0);
	create_insn	(x=0X7D008B82);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D008BE6);
	create_insn	(0X7D008BEC);
	make_array	(0X7D008BF2,	0X2);
	create_dword	(x=0X7D008BF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008BF8);
	create_dword	(0X7D008BFC);
	create_dword	(0X7D008C00);
	create_dword	(x=0X7D008C04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008C08);
	create_dword	(0X7D008C0C);
	create_dword	(0X7D008C10);
	create_dword	(0X7D008C14);
	create_dword	(0X7D008C18);
	create_dword	(0X7D008C1C);
	create_dword	(0X7D008C20);
	create_dword	(0X7D008C24);
	create_dword	(0X7D008C28);
	create_dword	(0X7D008C2C);
	create_dword	(0X7D008C30);
	create_insn	(0X7D008C34);
	set_cmt	(0X7D008C38,	"ptr",	0);
	create_insn	(x=0X7D008C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008C4A);
	op_hex		(x,	1);
	create_insn	(0X7D008C52);
	create_insn	(0X7D008C56);
	create_insn	(0X7D008C5A);
	create_insn	(0X7D008C5E);
	make_array	(0X7D008C66,	0X2);
	create_dword	(0X7D008C68);
	create_dword	(0X7D008C6C);
	create_dword	(0X7D008C70);
	create_dword	(0X7D008C74);
	create_insn	(0X7D008C78);
	set_name	(0X7D008C78,	"syscall_cryp_state_alloc");
	create_insn	(x=0X7D008C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008CA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008CBA);
	op_stkvar	(x,	1);
	create_insn	(0X7D008CC6);
	create_insn	(x=0X7D008CD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008CE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008D00,	"nmemb",	0);
	set_cmt	(0X7D008D02,	"size",	0);
	set_cmt	(0X7D008D20,	"switch 8 cases ",	0);
	set_cmt	(0X7D008D2C,	"switch jump",	0);
	set_cmt	(0X7D008D30,	"jump table for switch statement",	0);
	create_byte	(0X7D008D30);
	set_name	(0X7D008D30,	"jpt_7D008D2C");
	create_byte	(0X7D008D31);
	create_byte	(0X7D008D32);
	create_byte	(0X7D008D33);
	create_byte	(0X7D008D34);
	create_byte	(0X7D008D35);
	create_byte	(0X7D008D36);
	create_byte	(0X7D008D37);
	set_cmt	(0X7D008D38,	"jumptable 7D008D2C case 1",	1);
	create_insn	(x=0X7D008D38);
	op_enum		(x,	1,	GetEnum("TEE_ALG"),0);
	create_insn	(0X7D008D44);
	create_insn	(x=0X7D008D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008D4A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008D4E,	"jumptable 7D008D2C case 4",	1);
	create_insn	(0X7D008D4E);
	create_insn	(x=0X7D008D52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008D54);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008D58,	"jumptable 7D008D2C case 3",	1);
	create_insn	(0X7D008D58);
	create_insn	(x=0X7D008D5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008D5E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008D62,	"jumptable 7D008D2C case 5",	1);
	create_insn	(0X7D008D62);
	create_insn	(x=0X7D008D66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008D68);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008D78,	"nmemb",	0);
	set_cmt	(0X7D008D7A,	"size",	0);
	set_cmt	(0X7D008D88,	"jumptable 7D008D2C cases 6-8",	1);
	create_insn	(0X7D008D88);
	create_insn	(0X7D008D8E);
	set_cmt	(0X7D008D92,	"jumptable 7D008D2C default case",	1);
	create_insn	(0X7D008D92);
	set_name	(0X7D008D92,	"def_7D008D2C");
	create_insn	(0X7D008D96);
	create_insn	(0X7D008D9A);
	set_cmt	(0X7D008D9E,	"uref",	0);
	create_insn	(x=0X7D008D9E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008DA0,	"kaddr",	0);
	create_insn	(x=0X7D008DAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008DB6);
	op_stkvar	(x,	1);
	create_insn	(0X7D008DC6);
	make_array	(0X7D008DD6,	0X2);
	create_dword	(x=0X7D008DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008DDC);
	create_dword	(x=0X7D008DE0);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D008DE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008DE8);
	create_dword	(0X7D008DEC);
	create_dword	(0X7D008DF0);
	create_insn	(0X7D008DF4);
	set_name	(0X7D008DF4,	"syscall_cryp_state_copy");
	create_insn	(x=0X7D008DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008E3A,	"num",	0);
	set_cmt	(0X7D008E42,	"destination",	0);
	set_cmt	(0X7D008E44,	"source",	0);
	create_insn	(0X7D008E4E);
	create_insn	(0X7D008E52);
	create_dword	(x=0X7D008E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008E5C);
	create_dword	(0X7D008E60);
	create_insn	(0X7D008E64);
	set_name	(0X7D008E64,	"syscall_cryp_state_free");
	create_insn	(x=0X7D008E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008E86);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D008E98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D008E9C);
	set_name	(0X7D008E9C,	"syscall_hash_init");
	create_insn	(x=0X7D008EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008EBE,	"algo",	0);
	create_insn	(x=0X7D008ECA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008ECC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008ED0,	"ctx",	0);
	create_insn	(x=0X7D008ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008EF4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008EF8);
	op_stkvar	(x,	1);
	create_insn	(0X7D008F08);
	create_insn	(0X7D008F0C);
	make_array	(0X7D008F12,	0X2);
	create_dword	(x=0X7D008F14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D008F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008F1C);
	create_dword	(0X7D008F20);
	create_insn	(0X7D008F24);
	set_name	(0X7D008F24,	"syscall_hash_update");
	create_insn	(0X7D008F38);
	create_insn	(x=0X7D008F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008F42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008F44,	"flags",	0);
	set_cmt	(0X7D008F48,	"uaddr",	0);
	set_cmt	(0X7D008F4A,	"len",	0);
	set_cmt	(0X7D008F4C,	"utc",	0);
	create_insn	(x=0X7D008F56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008F68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008F6A,	"algo",	0);
	create_insn	(x=0X7D008F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008F78);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D008F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D008F7E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D008F82,	"ctx",	0);
	set_cmt	(0X7D008F84,	"data",	0);
	set_cmt	(0X7D008F86,	"len",	0);
	create_insn	(0X7D008F8C);
	create_insn	(0X7D008F90);
	create_insn	(0X7D008F94);
	make_array	(0X7D008F9A,	0X2);
	create_dword	(0X7D008F9C);
	create_dword	(x=0X7D008FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D008FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D008FA8);
	create_insn	(0X7D008FAC);
	set_name	(0X7D008FAC,	"syscall_hash_final");
	create_insn	(x=0X7D008FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008FCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008FCE,	"flags",	0);
	set_cmt	(0X7D008FD2,	"uaddr",	0);
	set_cmt	(0X7D008FD4,	"len",	0);
	set_cmt	(0X7D008FD6,	"utc",	0);
	create_insn	(x=0X7D008FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D008FF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008FF2,	"flags",	0);
	set_cmt	(0X7D008FF6,	"uaddr",	0);
	set_cmt	(0X7D008FF8,	"len",	0);
	create_insn	(x=0X7D008FF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D008FFA,	"utc",	0);
	create_insn	(x=0X7D009006);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00900C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00901C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00902A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00902C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009036);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00904A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00905E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009060);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00906A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009074);
	op_stkvar	(x,	1);
	create_insn	(0X7D00907C);
	create_insn	(x=0X7D00907E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009080,	"digest",	0);
	set_cmt	(0X7D009082,	"ctx",	0);
	set_cmt	(0X7D009084,	"algo",	0);
	set_cmt	(0X7D009086,	"len",	0);
	create_insn	(x=0X7D009086);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00908E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009090,	"data",	0);
	set_cmt	(0X7D009092,	"ctx",	0);
	set_cmt	(0X7D009094,	"algo",	0);
	set_cmt	(0X7D009096,	"len",	0);
	create_insn	(x=0X7D0090A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0090A2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0090BA);
	create_insn	(0X7D0090BE);
	make_array	(0X7D0090C6,	0X2);
	create_dword	(x=0X7D0090C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0090CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0090D0);
	create_dword	(0X7D0090D4);
	create_dword	(0X7D0090D8);
	create_insn	(0X7D0090DC);
	set_name	(0X7D0090DC,	"syscall_cipher_init");
	set_cmt	(0X7D0090E0,	"key1_len",	0);
	create_insn	(x=0X7D0090E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0090F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0090F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0090F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009108,	"flags",	0);
	set_cmt	(0X7D00910E,	"utc",	0);
	set_cmt	(0X7D009110,	"uaddr",	0);
	set_cmt	(0X7D009112,	"len",	0);
	create_insn	(x=0X7D00911C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00911E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00912E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00913A);
	create_insn	(x=0X7D00913C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00913E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009146);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009148);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009162);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X7D009168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00916C);
	op_stkvar	(x,	1);
	create_insn	(0X7D009170);
	create_insn	(x=0X7D009172);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009178,	"key2_len",	0);
	create_insn	(x=0X7D009178);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00917A,	"iv",	0);
	create_insn	(x=0X7D00917A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00917E,	"iv_len",	0);
	create_insn	(x=0X7D00917E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009180,	"ctx",	0);
	set_cmt	(0X7D009182,	"algo",	0);
	set_cmt	(0X7D009184,	"mode",	0);
	set_cmt	(0X7D009186,	"key1",	0);
	create_insn	(x=0X7D00918E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009192);
	op_stkvar	(x,	1);
	create_insn	(0X7D009198);
	create_dword	(x=0X7D0091A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0091A4);
	create_dword	(x=0X7D0091A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0091AC);
	create_insn	(0X7D0091B0);
	set_name	(0X7D0091B0,	"syscall_cryp_derive_key");
	create_insn	(x=0X7D0091B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0091CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0091CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0091CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00920C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00920E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009222);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009254);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00925E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009262);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00926C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009278);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00927C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009284);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009290);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0092C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0092CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0092DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0092E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0092EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0092FA);
	op_hex		(x,	1);
	create_insn	(0X7D009316);
	create_insn	(x=0X7D00931A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009320);
	op_stkvar	(x,	1);
	create_insn	(0X7D009326);
	create_insn	(x=0X7D00932C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00932E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00933A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009342);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00934A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D009392);
	create_insn	(0X7D0093A8);
	create_insn	(0X7D0093AC);
	create_insn	(0X7D0093B2);
	create_insn	(x=0X7D0093B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0093F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009402);
	op_hex		(x,	1);
	create_insn	(x=0X7D009418);
	op_stkvar	(x,	1);
	create_insn	(0X7D00941E);
	create_insn	(x=0X7D009422);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009432);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00945C);
	op_hex		(x,	1);
	create_insn	(x=0X7D009460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009464);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D009468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00946C);
	create_dword	(x=0X7D009470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009474);
	create_dword	(0X7D009478);
	create_dword	(0X7D00947C);
	create_dword	(0X7D009480);
	create_dword	(0X7D009484);
	create_dword	(0X7D009488);
	create_dword	(0X7D00948C);
	create_insn	(0X7D009490);
	create_insn	(x=0X7D009496);
	op_hex		(x,	1);
	create_insn	(0X7D00949C);
	create_insn	(x=0X7D0094A2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0094AA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0094B2);
	create_insn	(x=0X7D0094C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0094D8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0094E6);
	create_insn	(x=0X7D0094EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009514);
	op_hex		(x,	1);
	create_insn	(x=0X7D00951E);
	op_hex		(x,	1);
	create_insn	(x=0X7D00952C);
	op_hex		(x,	1);
	create_insn	(x=0X7D009534);
	op_hex		(x,	1);
	create_insn	(0X7D009540);
	create_insn	(x=0X7D00954A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009552);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009558);
	op_stkvar	(x,	1);
	create_insn	(0X7D009566);
	create_insn	(x=0X7D00956A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00957A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0095A2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0095AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0095B0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0095B4);
	create_insn	(x=0X7D0095BA);
	op_hex		(x,	1);
	create_insn	(0X7D0095C2);
	create_insn	(x=0X7D0095CA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0095D8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0095E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0095EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0095FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0095FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00960C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009616);
	op_hex		(x,	1);
	create_insn	(0X7D00962E);
	create_insn	(0X7D009632);
	create_insn	(0X7D009636);
	set_cmt	(0X7D009638,	"ptr",	0);
	create_insn	(0X7D009642);
	make_array	(0X7D00964A,	0X2);
	create_dword	(0X7D00964C);
	create_dword	(0X7D009650);
	create_dword	(0X7D009654);
	create_dword	(0X7D009658);
	create_dword	(0X7D00965C);
	create_dword	(0X7D009660);
	create_dword	(0X7D009664);
	create_dword	(0X7D009668);
	create_dword	(0X7D00966C);
	create_insn	(0X7D009670);
	set_name	(0X7D009670,	"syscall_cryp_random_number_generate");
	create_insn	(x=0X7D009674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00967E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009680,	"flags",	0);
	set_cmt	(0X7D009684,	"uaddr",	0);
	set_cmt	(0X7D009686,	"len",	0);
	set_cmt	(0X7D009688,	"utc",	0);
	create_insn	(x=0X7D009692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009698);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	make_array	(0X7D0096A2,	0X2);
	create_dword	(x=0X7D0096A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0096A8);
	set_name	(0X7D0096A8,	"syscall_authenc_init");
	create_insn	(x=0X7D0096B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0096C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0096F2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D0096F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0096FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009706);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00970A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00970C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00970E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00971A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00971C);
	op_stkvar	(x,	1);
	create_insn	(0X7D009722);
	create_insn	(0X7D009726);
	make_array	(0X7D00972E,	0X2);
	create_dword	(x=0X7D009730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009734);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009738);
	create_dword	(0X7D00973C);
	create_insn	(0X7D009740);
	set_name	(0X7D009740,	"syscall_authenc_update_aad");
	create_insn	(x=0X7D009746);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009752);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009754,	"flags",	0);
	set_cmt	(0X7D009758,	"uaddr",	0);
	set_cmt	(0X7D00975A,	"len",	0);
	set_cmt	(0X7D00975C,	"utc",	0);
	create_insn	(x=0X7D009766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00976C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00977A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00977E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009780);
	op_stkvar	(x,	1);
	create_insn	(0X7D00978E);
	create_dword	(x=0X7D009794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00979C);
	create_insn	(0X7D0097A0);
	set_name	(0X7D0097A0,	"syscall_authenc_update_payload");
	create_insn	(x=0X7D0097A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0097B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0097BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0097BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0097C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0097D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0097D2,	"flags",	0);
	set_cmt	(0X7D0097D6,	"uaddr",	0);
	set_cmt	(0X7D0097D8,	"len",	0);
	set_cmt	(0X7D0097DA,	"utc",	0);
	create_insn	(x=0X7D0097E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0097F4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0097F6,	"flags",	0);
	set_cmt	(0X7D0097FA,	"uaddr",	0);
	set_cmt	(0X7D0097FC,	"len",	0);
	create_insn	(x=0X7D0097FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0097FE,	"utc",	0);
	create_insn	(x=0X7D00981A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00981C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009822);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00982A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009836);
	op_stkvar	(x,	1);
	create_insn	(0X7D00984E);
	create_insn	(x=0X7D009852);
	op_stkvar	(x,	1);
	create_insn	(0X7D009862);
	make_array	(0X7D00986A,	0X2);
	create_dword	(x=0X7D00986C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009874);
	create_dword	(0X7D009878);
	create_insn	(0X7D00987C);
	set_name	(0X7D00987C,	"syscall_authenc_enc_final");
	create_insn	(x=0X7D009884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00988C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00988E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00989C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00989E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0098A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0098B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0098B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0098BA,	"flags",	0);
	set_cmt	(0X7D0098BE,	"uaddr",	0);
	set_cmt	(0X7D0098C0,	"len",	0);
	set_cmt	(0X7D0098C2,	"utc",	0);
	create_insn	(0X7D0098DA);
	create_insn	(x=0X7D0098DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0098E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0098EA,	"flags",	0);
	set_cmt	(0X7D0098EE,	"uaddr",	0);
	set_cmt	(0X7D0098F0,	"len",	0);
	create_insn	(x=0X7D0098F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0098F2,	"utc",	0);
	create_insn	(x=0X7D009910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00991C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00991E,	"flags",	0);
	set_cmt	(0X7D009922,	"uaddr",	0);
	set_cmt	(0X7D009924,	"len",	0);
	create_insn	(x=0X7D009924);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009926,	"utc",	0);
	create_insn	(x=0X7D009932);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009934);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00993A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00993C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00993E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009942);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009946);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00994A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00994C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00995C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009964);
	op_stkvar	(x,	1);
	create_insn	(0X7D00997C);
	create_insn	(x=0X7D009982);
	op_stkvar	(x,	1);
	create_insn	(0X7D009992);
	create_insn	(x=0X7D009994);
	op_stkvar	(x,	1);
	create_insn	(0X7D0099A2);
	create_insn	(0X7D0099A6);
	make_array	(0X7D0099AE,	0X2);
	create_dword	(x=0X7D0099B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0099B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0099B8);
	create_dword	(0X7D0099BC);
	create_dword	(0X7D0099C0);
	create_insn	(0X7D0099C4);
	set_name	(0X7D0099C4,	"syscall_authenc_dec_final");
	create_insn	(x=0X7D0099CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0099E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0099F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009A02,	"flags",	0);
	set_cmt	(0X7D009A06,	"uaddr",	0);
	set_cmt	(0X7D009A08,	"len",	0);
	set_cmt	(0X7D009A0A,	"utc",	0);
	create_insn	(0X7D009A22);
	create_insn	(x=0X7D009A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009A32,	"flags",	0);
	set_cmt	(0X7D009A36,	"uaddr",	0);
	set_cmt	(0X7D009A38,	"len",	0);
	create_insn	(x=0X7D009A38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009A3A,	"utc",	0);
	create_insn	(x=0X7D009A56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009A58,	"flags",	0);
	set_cmt	(0X7D009A5C,	"uaddr",	0);
	set_cmt	(0X7D009A5E,	"len",	0);
	set_cmt	(0X7D009A60,	"utc",	0);
	create_insn	(x=0X7D009A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009A6E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009A72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009A90);
	op_stkvar	(x,	1);
	create_insn	(0X7D009AA4);
	create_insn	(x=0X7D009AAA);
	op_stkvar	(x,	1);
	create_insn	(0X7D009ABA);
	create_insn	(0X7D009ABE);
	create_insn	(0X7D009AC2);
	make_array	(0X7D009ACA,	0X2);
	create_dword	(x=0X7D009ACC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009AD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009AD4);
	create_dword	(0X7D009AD8);
	create_dword	(0X7D009ADC);
	create_insn	(0X7D009AE0);
	set_name	(0X7D009AE0,	"syscall_asymm_operate");
	create_insn	(x=0X7D009AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009B1A,	"flags",	0);
	set_cmt	(0X7D009B20,	"utc",	0);
	set_cmt	(0X7D009B22,	"uaddr",	0);
	set_cmt	(0X7D009B24,	"len",	0);
	create_insn	(x=0X7D009B32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009B40,	"len",	0);
	create_insn	(x=0X7D009B40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009B42,	"utc",	0);
	set_cmt	(0X7D009B44,	"flags",	0);
	set_cmt	(0X7D009B46,	"uaddr",	0);
	create_insn	(x=0X7D009B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009B98);
	op_stkvar	(x,	1);
	create_insn	(0X7D009BC4);
	create_insn	(0X7D009BD4);
	create_insn	(0X7D009BE6);
	create_insn	(0X7D009BFE);
	create_insn	(0X7D009C1E);
	create_insn	(0X7D009C34);
	create_insn	(0X7D009C46);
	create_insn	(0X7D009C5A);
	create_insn	(0X7D009C64);
	create_insn	(x=0X7D009C68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009C6A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D009C70);
	create_insn	(x=0X7D009C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009C76);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009C82);
	op_stkvar	(x,	1);
	create_insn	(0X7D009C8E);
	create_insn	(0X7D009CA8);
	create_insn	(x=0X7D009CB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009CB2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009CBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009CC2);
	op_stkvar	(x,	1);
	create_insn	(0X7D009CCC);
	create_insn	(x=0X7D009CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009CD2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D009CD8);
	create_insn	(0X7D009CFE);
	create_insn	(0X7D009D02);
	create_insn	(x=0X7D009D04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009D06);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009D1E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009D26);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009D30);
	op_stkvar	(x,	1);
	create_insn	(0X7D009D3C);
	create_insn	(0X7D009D40);
	create_insn	(0X7D009D44);
	set_cmt	(0X7D009D46,	"ptr",	0);
	create_insn	(x=0X7D009D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009D56);
	op_stkvar	(x,	1);
	create_insn	(0X7D009D6E);
	create_insn	(0X7D009D72);
	make_array	(0X7D009D7A,	0X2);
	create_dword	(x=0X7D009D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009D80);
	create_dword	(0X7D009D84);
	create_dword	(0X7D009D88);
	create_dword	(0X7D009D8C);
	create_dword	(0X7D009D90);
	create_dword	(0X7D009D94);
	create_dword	(0X7D009D98);
	create_dword	(0X7D009D9C);
	create_dword	(0X7D009DA0);
	create_dword	(0X7D009DA4);
	create_dword	(0X7D009DA8);
	create_dword	(0X7D009DAC);
	create_dword	(0X7D009DB0);
	create_dword	(0X7D009DB4);
	create_dword	(0X7D009DB8);
	create_dword	(0X7D009DBC);
	create_dword	(0X7D009DC0);
	create_dword	(0X7D009DC4);
	create_dword	(0X7D009DC8);
	create_dword	(0X7D009DCC);
	create_dword	(0X7D009DD0);
	create_dword	(x=0X7D009DD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009DD8);
	create_dword	(0X7D009DDC);
	create_dword	(0X7D009DE0);
	create_dword	(0X7D009DE4);
	create_dword	(0X7D009DE8);
	create_dword	(0X7D009DEC);
	create_dword	(0X7D009DF0);
	create_dword	(0X7D009DF4);
	create_insn	(0X7D009DF8);
	set_name	(0X7D009DF8,	"syscall_asymm_verify");
	create_insn	(x=0X7D009E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009E34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D009E3E,	"flags",	0);
	set_cmt	(0X7D009E44,	"utc",	0);
	set_cmt	(0X7D009E46,	"uaddr",	0);
	set_cmt	(0X7D009E48,	"len",	0);
	set_cmt	(0X7D009E54,	"utc",	0);
	set_cmt	(0X7D009E56,	"flags",	0);
	set_cmt	(0X7D009E58,	"uaddr",	0);
	set_cmt	(0X7D009E5A,	"len",	0);
	create_insn	(x=0X7D009E86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009EA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009EB6);
	op_hex		(x,	1);
	create_insn	(x=0X7D009EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009ED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009ED6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D009EDC);
	create_insn	(0X7D009F04);
	create_insn	(0X7D009F08);
	create_insn	(x=0X7D009F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009F0C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009F12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009F24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D009F26);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D009F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009F32);
	op_stkvar	(x,	1);
	create_insn	(0X7D009F42);
	create_insn	(0X7D009F46);
	set_cmt	(0X7D009F48,	"ptr",	0);
	create_insn	(0X7D009F52);
	create_insn	(0X7D009F56);
	make_array	(0X7D009F5E,	0X2);
	create_dword	(x=0X7D009F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009F64);
	create_dword	(0X7D009F68);
	create_dword	(x=0X7D009F6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D009F70);
	create_dword	(0X7D009F74);
	create_dword	(0X7D009F78);
	create_dword	(0X7D009F7C);
	create_dword	(0X7D009F80);
	create_insn	(0X7D009F84);
	set_name	(0X7D009F84,	"syscall_cryptocell_getlcs");
	set_cmt	(0X7D009F86,	"fmt",	0);
	create_insn	(x=0X7D009F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009F94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009F96,	"level",	0);
	create_insn	(x=0X7D009F9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009F9E,	"line",	0);
	set_cmt	(0X7D009FA2,	"level_ok",	0);
	create_insn	(0X7D009FAA);
	make_array	(0X7D009FB6,	0X2);
	create_dword	(x=0X7D009FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009FBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D009FC0);
	set_name	(0X7D009FC0,	"syscall_rpmb_key_inject");
	set_cmt	(0X7D009FC2,	"fmt",	0);
	create_insn	(x=0X7D009FC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D009FD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009FD2,	"level",	0);
	create_insn	(x=0X7D009FD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D009FDA,	"line",	0);
	set_cmt	(0X7D009FDE,	"level_ok",	0);
	create_insn	(0X7D009FE8);
	make_array	(0X7D009FF2,	0X2);
	create_dword	(x=0X7D009FF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D009FF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D009FFC,	"fmt",	0);
	create_insn	(0X7D009FFC);
	set_name	(0X7D009FFC,	"syscall_unrd_open");
	create_insn	(x=0X7D009FFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A00A,	"level",	0);
	create_insn	(x=0X7D00A010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A012,	"line",	0);
	set_cmt	(0X7D00A016,	"level_ok",	0);
	create_insn	(0X7D00A020);
	create_dword	(x=0X7D00A028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A02C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00A030,	"fmt",	0);
	create_insn	(0X7D00A030);
	set_name	(0X7D00A030,	"syscall_unrd_close");
	create_insn	(x=0X7D00A032);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A03C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A03E,	"level",	0);
	create_insn	(x=0X7D00A044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A046,	"line",	0);
	set_cmt	(0X7D00A04A,	"level_ok",	0);
	create_insn	(0X7D00A054);
	create_dword	(x=0X7D00A05C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00A064);
	set_name	(0X7D00A064,	"syscall_unrd_alloc_handle");
	set_cmt	(0X7D00A066,	"fmt",	0);
	create_insn	(x=0X7D00A06A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A07A,	"level",	0);
	create_insn	(x=0X7D00A080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A082,	"line",	0);
	set_cmt	(0X7D00A086,	"level_ok",	0);
	create_insn	(0X7D00A090);
	make_array	(0X7D00A09E,	0X2);
	create_dword	(x=0X7D00A0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A0A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00A0A8,	"fmt",	0);
	create_insn	(0X7D00A0A8);
	set_name	(0X7D00A0A8,	"syscall_unrd_release_handle");
	create_insn	(x=0X7D00A0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A0B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A0BA,	"level",	0);
	create_insn	(x=0X7D00A0C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A0C2,	"line",	0);
	set_cmt	(0X7D00A0C6,	"level_ok",	0);
	create_insn	(0X7D00A0D0);
	create_dword	(x=0X7D00A0DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00A0E4,	"fmt",	0);
	create_insn	(0X7D00A0E4);
	set_name	(0X7D00A0E4,	"syscall_unrd_set_binary");
	create_insn	(x=0X7D00A0EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A0FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A0FC,	"level",	0);
	create_insn	(x=0X7D00A102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A104,	"line",	0);
	set_cmt	(0X7D00A108,	"level_ok",	0);
	create_insn	(x=0X7D00A112);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A116);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00A128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A12C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00A130,	"fmt",	0);
	create_insn	(0X7D00A130);
	set_name	(0X7D00A130,	"syscall_unrd_get_binary");
	create_insn	(x=0X7D00A136);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A146);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A148,	"level",	0);
	create_insn	(x=0X7D00A14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A150,	"line",	0);
	set_cmt	(0X7D00A154,	"level_ok",	0);
	create_insn	(x=0X7D00A15E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A162);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00A174);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00A17C,	"fmt",	0);
	create_insn	(0X7D00A17C);
	set_name	(0X7D00A17C,	"syscall_unrd_flush");
	create_insn	(x=0X7D00A180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A18C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A18E,	"level",	0);
	create_insn	(x=0X7D00A194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A196,	"line",	0);
	set_cmt	(0X7D00A19A,	"level_ok",	0);
	create_insn	(0X7D00A1A4);
	create_dword	(x=0X7D00A1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A1B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00A1B8);
	set_name	(0X7D00A1B8,	"syscall_rpmb_read");
	set_cmt	(0X7D00A1BA,	"fmt",	0);
	create_insn	(x=0X7D00A1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A1CE,	"level",	0);
	create_insn	(x=0X7D00A1D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A1D6,	"line",	0);
	set_cmt	(0X7D00A1DA,	"level_ok",	0);
	create_insn	(0X7D00A1E4);
	create_dword	(x=0X7D00A1F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00A1FC);
	set_name	(0X7D00A1FC,	"syscall_rpmb_write");
	set_cmt	(0X7D00A1FE,	"fmt",	0);
	create_insn	(x=0X7D00A202);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A212,	"level",	0);
	create_insn	(x=0X7D00A218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A21A,	"line",	0);
	set_cmt	(0X7D00A21E,	"level_ok",	0);
	create_insn	(0X7D00A228);
	create_dword	(x=0X7D00A238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A23C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00A240);
	set_name	(0X7D00A240,	"tee_svc_storage_set_enum");
	set_cmt	(0X7D00A264,	"size",	0);
	create_insn	(0X7D00A288);
	make_array	(0X7D00A28E,	0X2);
	create_dword	(0X7D00A290);
	create_insn	(0X7D00A294);
	set_name	(0X7D00A294,	"tee_svc_close_enum");
	create_insn	(0X7D00A2A2);
	create_insn	(0X7D00A2B0);
	set_cmt	(0X7D00A2BE,	"ptr",	0);
	create_dword	(0X7D00A2CC);
	create_insn	(0X7D00A2D0);
	set_name	(0X7D00A2D0,	"tee_svc_storage_read_head");
	set_cmt	(0X7D00A2E6,	"object_id",	0);
	set_cmt	(0X7D00A2E8,	"object_id_len",	0);
	set_cmt	(0X7D00A2EA,	"transient",	0);
	create_insn	(x=0X7D00A2FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A304,	"ptr",	0);
	create_insn	(x=0X7D00A30E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A312);
	create_insn	(x=0X7D00A316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A31A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A32E,	"level",	0);
	set_cmt	(0X7D00A330,	"fmt",	0);
	create_insn	(x=0X7D00A330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A334,	"line",	0);
	set_cmt	(0X7D00A338,	"level_ok",	0);
	create_insn	(0X7D00A340);
	create_insn	(x=0X7D00A346);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A354);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A358,	"size",	0);
	create_insn	(x=0X7D00A364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A370);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A378);
	set_cmt	(0X7D00A37A,	"o",	0);
	set_cmt	(0X7D00A37C,	"data",	0);
	set_cmt	(0X7D00A37E,	"data_len",	0);
	create_insn	(x=0X7D00A37E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A398);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A39E);
	create_insn	(0X7D00A3A4);
	create_insn	(0X7D00A3AA);
	create_insn	(0X7D00A3AE);
	create_insn	(0X7D00A3B2);
	set_cmt	(0X7D00A3B4,	"ptr",	0);
	create_insn	(0X7D00A3C8);
	create_insn	(0X7D00A3CC);
	create_dword	(0X7D00A3D4);
	create_dword	(x=0X7D00A3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A3DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00A3E0);
	create_dword	(0X7D00A3E4);
	create_dword	(0X7D00A3E8);
	create_insn	(0X7D00A3EC);
	set_name	(0X7D00A3EC,	"tee_svc_storage_remove_corrupt_obj");
	set_cmt	(0X7D00A3F4,	"object_id",	0);
	set_cmt	(0X7D00A3F6,	"object_id_len",	0);
	set_cmt	(0X7D00A3F8,	"transient",	0);
	set_cmt	(0X7D00A416,	"ptr",	0);
	set_cmt	(0X7D00A426,	"m",	0);
	create_insn	(x=0X7D00A426);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A432,	"m",	0);
	create_insn	(x=0X7D00A432);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A438,	"ptr",	0);
	create_insn	(0X7D00A442);
	make_array	(0X7D00A446,	0X2);
	create_dword	(x=0X7D00A448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00A44C);
	create_insn	(0X7D00A450);
	set_name	(0X7D00A450,	"syscall_storage_obj_open");
	create_insn	(x=0X7D00A462);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A482);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A484,	"flags",	0);
	set_cmt	(0X7D00A488,	"uaddr",	0);
	set_cmt	(0X7D00A48E,	"utc",	0);
	set_cmt	(0X7D00A490,	"len",	0);
	create_insn	(x=0X7D00A49E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00A4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A4A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A4A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A4BE);
	op_hex		(x,	1);
	create_insn	(x=0X7D00A4C2);
	op_hex		(x,	1);
	create_insn	(0X7D00A4D2);
	create_insn	(x=0X7D00A4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A50C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A50E,	"level",	0);
	set_cmt	(0X7D00A510,	"fmt",	0);
	create_insn	(x=0X7D00A510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A512);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A514,	"line",	0);
	set_cmt	(0X7D00A518,	"level_ok",	0);
	create_insn	(x=0X7D00A522);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A532,	"object_id",	0);
	create_insn	(0X7D00A532);
	set_cmt	(0X7D00A534,	"sess",	0);
	create_insn	(x=0X7D00A534);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A536,	"object_id_len",	0);
	set_cmt	(0X7D00A538,	"transient",	0);
	create_insn	(x=0X7D00A544);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(x=0X7D00A54A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A554,	"file",	0);
	create_insn	(x=0X7D00A554);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A556,	"flags",	0);
	create_insn	(x=0X7D00A562);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A566);
	set_cmt	(0X7D00A572,	"uref",	0);
	create_insn	(x=0X7D00A572);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A574,	"kaddr",	0);
	set_cmt	(0X7D00A57E,	"data",	0);
	set_cmt	(0X7D00A580,	"data_len",	0);
	create_insn	(x=0X7D00A580);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A582,	"o",	0);
	create_insn	(x=0X7D00A58C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A58E,	"errno",	0);
	create_insn	(x=0X7D00A58E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A596,	"whence",	0);
	create_insn	(x=0X7D00A596);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A598);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	set_cmt	(0X7D00A59A,	"fd",	0);
	set_cmt	(0X7D00A59C,	"offset",	0);
	set_cmt	(0X7D00A59E,	"offset",	0);
	create_insn	(0X7D00A5AE);
	create_insn	(0X7D00A5C0);
	create_insn	(x=0X7D00A5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A5DC,	"filename",	0);
	create_insn	(x=0X7D00A5DE);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(x=0X7D00A5EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A5EC,	"fd",	0);
	create_insn	(x=0X7D00A5EE);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(x=0X7D00A5F2);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A5FC);
	create_insn	(0X7D00A602);
	create_insn	(0X7D00A60A);
	create_insn	(0X7D00A612);
	set_cmt	(0X7D00A61A,	"ptr",	0);
	create_insn	(0X7D00A61A);
	create_dword	(0X7D00A628);
	create_dword	(x=0X7D00A62C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00A630);
	create_dword	(x=0X7D00A634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00A63C);
	create_dword	(0X7D00A640);
	create_dword	(0X7D00A644);
	create_dword	(0X7D00A648);
	create_dword	(0X7D00A64C);
	create_dword	(0X7D00A650);
	create_insn	(0X7D00A654);
	set_name	(0X7D00A654,	"syscall_storage_obj_create");
	create_insn	(x=0X7D00A65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A662);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A666);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A66A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A67E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A68C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A68E,	"flags",	0);
	set_cmt	(0X7D00A692,	"uaddr",	0);
	create_insn	(x=0X7D00A692);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A698,	"utc",	0);
	set_cmt	(0X7D00A69A,	"len",	0);
	create_insn	(x=0X7D00A6A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00A6AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A6D4,	"len",	0);
	create_insn	(x=0X7D00A6D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A6DA,	"utc",	0);
	set_cmt	(0X7D00A6DC,	"flags",	0);
	set_cmt	(0X7D00A6DE,	"uaddr",	0);
	create_insn	(x=0X7D00A6DE);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A6EC);
	create_insn	(x=0X7D00A6F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A6FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A706);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A70C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00A70E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A722);
	set_cmt	(0X7D00A724,	"object_id",	0);
	set_cmt	(0X7D00A726,	"object_id_len",	0);
	set_cmt	(0X7D00A728,	"sess",	0);
	set_cmt	(0X7D00A72A,	"transient",	0);
	create_insn	(x=0X7D00A730);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A742,	"m",	0);
	create_insn	(x=0X7D00A742);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00A754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A756);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A75E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A762);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A766);
	create_insn	(x=0X7D00A778);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A77A,	"m",	0);
	create_insn	(x=0X7D00A77A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00A782);
	create_insn	(x=0X7D00A788);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A78A,	"ptr",	0);
	create_insn	(x=0X7D00A7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A7B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A7BC,	"data_len",	0);
	create_insn	(x=0X7D00A7BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A7BE,	"o",	0);
	set_cmt	(0X7D00A7C6,	"data",	0);
	set_cmt	(0X7D00A7DA,	"size",	0);
	create_insn	(x=0X7D00A7DA);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A7E2);
	set_cmt	(0X7D00A7EC,	"o",	0);
	set_cmt	(0X7D00A7EE,	"data_len",	0);
	create_insn	(x=0X7D00A7EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A7F0,	"data",	0);
	create_insn	(0X7D00A7FC);
	create_insn	(0X7D00A80A);
	create_insn	(x=0X7D00A80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A80E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A81A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A822);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A82A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A836);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A83E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A84E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A856);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A862);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A86E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A876);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A882);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A886);
	create_insn	(x=0X7D00A88A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A88C);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A890);
	create_insn	(0X7D00A896);
	create_insn	(0X7D00A89C);
	create_insn	(0X7D00A8A2);
	make_array	(0X7D00A8A6,	0X2);
	create_dword	(0X7D00A8A8);
	create_dword	(x=0X7D00A8AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00A8B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00A8B8);
	create_dword	(0X7D00A8BC);
	create_dword	(0X7D00A8C0);
	create_dword	(0X7D00A8C4);
	create_insn	(0X7D00A8C8);
	set_cmt	(0X7D00A8CA,	"ptr",	0);
	set_cmt	(0X7D00A8D0,	"ptr",	0);
	create_insn	(x=0X7D00A8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A8D6);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A8E4);
	create_insn	(0X7D00A8E8);
	set_cmt	(0X7D00A8EC,	"sess",	0);
	create_insn	(x=0X7D00A8EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A8EE,	"object_id",	0);
	create_insn	(x=0X7D00A8EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A8F0,	"object_id_len",	0);
	set_cmt	(0X7D00A8F2,	"transient",	0);
	set_cmt	(0X7D00A900,	"object_id_len",	0);
	set_cmt	(0X7D00A902,	"sess",	0);
	create_insn	(x=0X7D00A902);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A904,	"object_id",	0);
	create_insn	(x=0X7D00A904);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A906,	"transient",	0);
	create_insn	(x=0X7D00A914);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00A918);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(x=0X7D00A920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A926);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	set_cmt	(0X7D00A928,	"filename",	0);
	create_insn	(x=0X7D00A92C);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	set_cmt	(0X7D00A92E,	"old_name",	0);
	set_cmt	(0X7D00A930,	"new_name",	0);
	create_insn	(x=0X7D00A938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00A93A);
	op_hex		(x,	1);
	create_insn	(x=0X7D00A93E);
	op_hex		(x,	1);
	create_insn	(0X7D00A94E);
	set_cmt	(0X7D00A958,	"file",	0);
	create_insn	(x=0X7D00A958);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A95A,	"flags",	0);
	create_insn	(x=0X7D00A962);
	op_stkvar	(x,	1);
	create_insn	(0X7D00A966);
	set_cmt	(0X7D00A972,	"uref",	0);
	create_insn	(x=0X7D00A972);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A974,	"kaddr",	0);
	set_cmt	(0X7D00A97E,	"data",	0);
	set_cmt	(0X7D00A980,	"data_len",	0);
	create_insn	(x=0X7D00A980);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A982,	"o",	0);
	create_insn	(x=0X7D00A98C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A98E,	"errno",	0);
	create_insn	(x=0X7D00A98E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A990,	"fd",	0);
	create_insn	(x=0X7D00A992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A99A,	"whence",	0);
	create_insn	(x=0X7D00A99A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00A99C,	"offset",	0);
	set_cmt	(0X7D00A99E,	"offset",	0);
	create_insn	(x=0X7D00A9A0);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(0X7D00A9B8);
	create_insn	(0X7D00A9BC);
	create_insn	(x=0X7D00A9BE);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	set_cmt	(0X7D00A9C0,	"filename",	0);
	create_insn	(0X7D00A9C6);
	create_insn	(0X7D00A9CE);
	create_insn	(x=0X7D00A9EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00A9EE,	"filename",	0);
	create_insn	(x=0X7D00A9F0);
	op_plain_offset	(x,	1,	0X7D03FECC);
	op_plain_offset	(x,	129,	0X7D03FECC);
	create_insn	(x=0X7D00A9F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AA04,	"ptr",	0);
	set_cmt	(0X7D00AA0A,	"ptr",	0);
	set_cmt	(0X7D00AA10,	"ptr",	0);
	create_insn	(0X7D00AA1A);
	create_insn	(0X7D00AA1E);
	create_insn	(0X7D00AA22);
	create_insn	(0X7D00AA28);
	create_insn	(0X7D00AA2E);
	create_dword	(0X7D00AA34);
	create_dword	(x=0X7D00AA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AA3C);
	create_dword	(0X7D00AA40);
	create_dword	(0X7D00AA44);
	create_dword	(0X7D00AA48);
	create_dword	(0X7D00AA4C);
	create_dword	(0X7D00AA50);
	create_dword	(0X7D00AA54);
	create_insn	(0X7D00AA58);
	set_name	(0X7D00AA58,	"syscall_storage_obj_del");
	create_insn	(x=0X7D00AA66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AA6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AA7C,	"transient",	0);
	create_insn	(x=0X7D00AA82);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AA90,	"object_id",	0);
	set_cmt	(0X7D00AA96,	"sess",	0);
	create_insn	(x=0X7D00AA96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AA98,	"object_id_len",	0);
	create_insn	(x=0X7D00AAA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AAC4,	"ptr",	0);
	create_insn	(x=0X7D00AACC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AAD8,	"m",	0);
	create_insn	(x=0X7D00AAD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AAE4,	"m",	0);
	create_insn	(x=0X7D00AAE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AAEA,	"ptr",	0);
	create_insn	(0X7D00AAF4);
	create_insn	(0X7D00AAF8);
	create_insn	(0X7D00AAFC);
	create_insn	(0X7D00AB00);
	make_array	(0X7D00AB06,	0X2);
	create_dword	(x=0X7D00AB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AB0C);
	create_dword	(x=0X7D00AB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AB14);
	create_dword	(0X7D00AB18);
	create_dword	(0X7D00AB1C);
	create_dword	(0X7D00AB20);
	create_insn	(0X7D00AB24);
	set_name	(0X7D00AB24,	"syscall_storage_obj_rename");
	create_insn	(x=0X7D00AB36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00AB62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB66);
	op_hex		(x,	1);
	create_insn	(x=0X7D00AB6E);
	op_hex		(x,	1);
	set_cmt	(0X7D00AB80,	"utc",	0);
	set_cmt	(0X7D00AB82,	"flags",	0);
	set_cmt	(0X7D00AB84,	"uaddr",	0);
	set_cmt	(0X7D00AB86,	"len",	0);
	create_insn	(x=0X7D00AB92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AB94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ABA0,	"sess",	0);
	create_insn	(x=0X7D00ABA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ABA2,	"object_id",	0);
	set_cmt	(0X7D00ABA4,	"object_id_len",	0);
	set_cmt	(0X7D00ABA6,	"transient",	0);
	create_insn	(x=0X7D00ABB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ABB4,	"sess",	0);
	create_insn	(x=0X7D00ABB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ABB8,	"object_id",	0);
	set_cmt	(0X7D00ABBA,	"object_id_len",	0);
	set_cmt	(0X7D00ABBC,	"transient",	0);
	create_insn	(x=0X7D00ABC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ABD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ABD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ABD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ABDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AC02);
	op_stkvar	(x,	1);
	create_insn	(0X7D00AC12);
	create_insn	(0X7D00AC18);
	create_insn	(0X7D00AC1C);
	create_insn	(0X7D00AC22);
	create_insn	(0X7D00AC26);
	create_insn	(x=0X7D00AC28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AC2E,	"ptr",	0);
	set_cmt	(0X7D00AC34,	"ptr",	0);
	create_insn	(0X7D00AC3E);
	make_array	(0X7D00AC46,	0X2);
	create_dword	(x=0X7D00AC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AC4C);
	create_dword	(0X7D00AC50);
	create_dword	(0X7D00AC54);
	create_dword	(0X7D00AC58);
	create_dword	(0X7D00AC5C);
	create_insn	(0X7D00AC60);
	set_name	(0X7D00AC60,	"syscall_storage_alloc_enum");
	create_insn	(x=0X7D00AC66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AC70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AC72,	"size",	0);
	set_cmt	(0X7D00AC7A,	"kaddr",	0);
	set_cmt	(0X7D00AC90,	"uref",	0);
	create_insn	(0X7D00AC98);
	create_insn	(0X7D00AC9C);
	make_array	(0X7D00ACA2,	0X2);
	create_dword	(0X7D00ACA4);
	create_dword	(0X7D00ACA8);
	create_insn	(0X7D00ACAC);
	set_name	(0X7D00ACAC,	"syscall_storage_free_enum");
	create_insn	(x=0X7D00ACB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ACB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ACBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00ACD2);
	create_insn	(0X7D00ACD6);
	make_array	(0X7D00ACDE,	0X2);
	create_dword	(x=0X7D00ACE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00ACE4);
	create_insn	(0X7D00ACE8);
	set_name	(0X7D00ACE8,	"syscall_storage_reset_enum");
	create_insn	(x=0X7D00ACEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ACF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00ACF8);
	op_stkvar	(x,	1);
	create_insn	(0X7D00AD0E);
	create_insn	(0X7D00AD12);
	make_array	(0X7D00AD2E,	0X2);
	create_dword	(x=0X7D00AD30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AD34);
	create_insn	(0X7D00AD38);
	set_name	(0X7D00AD38,	"syscall_storage_start_enum");
	create_insn	(x=0X7D00AD48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00AD4C);
	create_insn	(x=0X7D00AD4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00AD5A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00AD72);
	create_insn	(0X7D00AD76);
	create_insn	(0X7D00AD84);
	set_cmt	(0X7D00AD8C,	"ptr",	0);
	create_insn	(0X7D00AD9A);
	set_cmt	(0X7D00ADA4,	"nmemb",	0);
	set_cmt	(0X7D00ADA6,	"size",	0);
	create_insn	(0X7D00ADB4);
	create_insn	(x=0X7D00ADC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ADD2,	"ptr",	0);
	set_cmt	(0X7D00ADEA,	"dir",	0);
	create_insn	(x=0X7D00ADF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AE06,	"ptr",	0);
	create_insn	(0X7D00AE0E);
	set_cmt	(0X7D00AE14,	"ptr",	0);
	set_cmt	(0X7D00AE1A,	"ptr",	0);
	make_array	(0X7D00AE2E,	0X2);
	create_dword	(0X7D00AE30);
	create_dword	(x=0X7D00AE34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00AE38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AE3C);
	create_dword	(0X7D00AE40);
	create_dword	(0X7D00AE44);
	create_dword	(0X7D00AE48);
	create_insn	(0X7D00AE4C);
	set_name	(0X7D00AE4C,	"syscall_storage_next_enum");
	create_insn	(x=0X7D00AE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AE66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AE6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00AE80);
	set_cmt	(0X7D00AE84,	"utc",	0);
	create_insn	(0X7D00AE84);
	set_cmt	(0X7D00AE86,	"flags",	0);
	set_cmt	(0X7D00AE88,	"uaddr",	0);
	set_cmt	(0X7D00AE8A,	"len",	0);
	set_cmt	(0X7D00AE96,	"utc",	0);
	set_cmt	(0X7D00AE98,	"flags",	0);
	set_cmt	(0X7D00AE9A,	"uaddr",	0);
	set_cmt	(0X7D00AE9C,	"len",	0);
	create_insn	(0X7D00AEB0);
	set_cmt	(0X7D00AEC6,	"nmemb",	0);
	set_cmt	(0X7D00AEC8,	"size",	0);
	create_insn	(x=0X7D00AEE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AEEE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AEFA,	"num",	0);
	set_cmt	(0X7D00AEFC,	"source",	0);
	set_cmt	(0X7D00AF00,	"destination",	0);
	set_cmt	(0X7D00AF0A,	"destination",	0);
	set_cmt	(0X7D00AF0C,	"source",	0);
	set_cmt	(0X7D00AF0E,	"num",	0);
	create_insn	(x=0X7D00AF16);
	op_stkvar	(x,	1);
	create_insn	(0X7D00AF2A);
	create_insn	(0X7D00AF2E);
	set_cmt	(0X7D00AF34,	"ptr",	0);
	set_cmt	(0X7D00AF3A,	"ptr",	0);
	make_array	(0X7D00AF4E,	0X2);
	create_dword	(x=0X7D00AF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00AF54);
	create_dword	(0X7D00AF58);
	create_dword	(0X7D00AF5C);
	create_insn	(0X7D00AF60);
	set_name	(0X7D00AF60,	"syscall_storage_obj_read");
	set_cmt	(0X7D00AF64,	"fmt",	0);
	create_insn	(x=0X7D00AF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AF7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AF80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00AF96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00AFA4,	"utc",	0);
	set_cmt	(0X7D00AFA6,	"flags",	0);
	set_cmt	(0X7D00AFA8,	"uaddr",	0);
	set_cmt	(0X7D00AFAA,	"len",	0);
	create_insn	(x=0X7D00AFB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AFCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AFD0,	"level",	0);
	create_insn	(x=0X7D00AFD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AFD8,	"level_ok",	0);
	set_cmt	(0X7D00AFDA,	"line",	0);
	create_insn	(x=0X7D00AFE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AFEA,	"level",	0);
	set_cmt	(0X7D00AFEC,	"fmt",	0);
	create_insn	(x=0X7D00AFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AFEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00AFF0,	"line",	0);
	set_cmt	(0X7D00AFF4,	"level_ok",	0);
	create_insn	(x=0X7D00AFFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00AFFC);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B004);
	create_insn	(x=0X7D00B008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B01A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B026);
	create_insn	(0X7D00B02A);
	create_dword	(x=0X7D00B034);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B03C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B040);
	create_dword	(x=0X7D00B044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B048);
	create_dword	(0X7D00B04C);
	create_insn	(0X7D00B050);
	set_name	(0X7D00B050,	"syscall_storage_obj_write");
	create_insn	(x=0X7D00B056);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B06C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B082);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B090,	"utc",	0);
	set_cmt	(0X7D00B092,	"flags",	0);
	set_cmt	(0X7D00B094,	"uaddr",	0);
	set_cmt	(0X7D00B096,	"len",	0);
	create_insn	(x=0X7D00B0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B0A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B0B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B0BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B0CE);
	create_insn	(0X7D00B0D2);
	create_dword	(x=0X7D00B0DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B0E0);
	create_dword	(0X7D00B0E4);
	create_insn	(0X7D00B0E8);
	set_name	(0X7D00B0E8,	"syscall_storage_obj_trunc");
	create_insn	(x=0X7D00B0EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B0FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B116);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B124);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B130,	"data",	0);
	set_cmt	(0X7D00B132,	"data_len",	0);
	create_insn	(x=0X7D00B132);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B134,	"o",	0);
	create_insn	(x=0X7D00B134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B13E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B142);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B15E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B16A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B16C,	"level",	0);
	set_cmt	(0X7D00B16E,	"fmt",	0);
	create_insn	(x=0X7D00B16E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B172,	"line",	0);
	set_cmt	(0X7D00B176,	"level_ok",	0);
	create_insn	(x=0X7D00B17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B17E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B18C);
	create_insn	(0X7D00B190);
	create_dword	(x=0X7D00B198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B19C);
	create_dword	(0X7D00B1A0);
	create_dword	(x=0X7D00B1A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B1AC);
	create_dword	(0X7D00B1B0);
	create_insn	(0X7D00B1B4);
	set_name	(0X7D00B1B4,	"syscall_storage_obj_seek");
	create_insn	(x=0X7D00B1BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B1CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B1D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B1EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B1F8,	"data",	0);
	set_cmt	(0X7D00B1FA,	"data_len",	0);
	create_insn	(x=0X7D00B1FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B1FC,	"o",	0);
	create_insn	(x=0X7D00B1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B20A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B210);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B216);
	create_insn	(x=0X7D00B21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B226);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B24C);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B256);
	create_insn	(0X7D00B25A);
	make_array	(0X7D00B262,	0X2);
	create_dword	(x=0X7D00B264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B26C);
	create_dword	(0X7D00B270);
	create_insn	(0X7D00B274);
	set_name	(0X7D00B274,	"tee_rpmb_alloc");
	set_cmt	(0X7D00B28A,	"payload",	0);
	create_insn	(x=0X7D00B28E);
	op_hex		(x,	1);
	set_cmt	(0X7D00B292,	"cookie",	0);
	set_cmt	(0X7D00B29C,	"payload",	0);
	create_insn	(x=0X7D00B2A0);
	op_hex		(x,	1);
	set_cmt	(0X7D00B2A4,	"cookie",	0);
	set_cmt	(0X7D00B2AC,	"pa",	0);
	set_cmt	(0X7D00B2B4,	"m",	0);
	set_cmt	(0X7D00B2BC,	"m",	0);
	set_cmt	(0X7D00B2BE,	"pa",	0);
	create_insn	(x=0X7D00B2C4);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B2D6);
	create_insn	(0X7D00B2DA);
	create_insn	(0X7D00B2DE);
	make_array	(0X7D00B2EA,	0X2);
	create_dword	(0X7D00B2EC);
	create_dword	(0X7D00B2F0);
	create_dword	(0X7D00B2F4);
	create_insn	(0X7D00B2F8);
	set_name	(0X7D00B2F8,	"rpmb_fs_close");
	set_cmt	(0X7D00B2FC,	"m",	0);
	create_insn	(x=0X7D00B2FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B30C,	"m",	0);
	create_insn	(x=0X7D00B30C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B314,	"ptr",	0);
	create_insn	(0X7D00B31E);
	create_dword	(x=0X7D00B324);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00B32C);
	set_name	(0X7D00B32C,	"tee_rpmb_mac_calc");
	create_insn	(x=0X7D00B332);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B33A,	"size",	0);
	create_insn	(x=0X7D00B346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B34A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B360);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B37C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00B38C,	"ptr",	0);
	create_insn	(0X7D00B398);
	make_array	(0X7D00B39E,	0X2);
	create_dword	(x=0X7D00B3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B3A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B3A8);
	create_dword	(0X7D00B3AC);
	create_insn	(0X7D00B3B0);
	set_name	(0X7D00B3B0,	"decrypt");
	create_insn	(x=0X7D00B3BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B3CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B3D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B3D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00B3DA);
	set_cmt	(0X7D00B3DE,	"source",	0);
	create_insn	(0X7D00B3E6);
	create_insn	(0X7D00B3F6);
	set_cmt	(0X7D00B3FA,	"size",	0);
	set_cmt	(0X7D00B408,	"in",	0);
	set_cmt	(0X7D00B40C,	"mode",	0);
	create_insn	(x=0X7D00B40C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B40E,	"a3",	0);
	set_cmt	(0X7D00B412,	"blk_idx",	0);
	set_cmt	(0X7D00B414,	"fek",	0);
	create_insn	(x=0X7D00B414);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B41A,	"destination",	0);
	set_cmt	(0X7D00B41C,	"source",	0);
	set_cmt	(0X7D00B420,	"num",	0);
	set_cmt	(0X7D00B426,	"ptr",	0);
	create_insn	(0X7D00B430);
	create_insn	(0X7D00B434);
	set_cmt	(0X7D00B436,	"in",	0);
	set_cmt	(0X7D00B43A,	"mode",	0);
	create_insn	(x=0X7D00B43A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B43C,	"fek",	0);
	create_insn	(x=0X7D00B43C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B43E,	"out",	0);
	set_cmt	(0X7D00B440,	"a3",	0);
	set_cmt	(0X7D00B444,	"blk_idx",	0);
	create_insn	(0X7D00B44C);
	make_array	(0X7D00B452,	0X2);
	create_dword	(x=0X7D00B454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B45C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B460);
	create_dword	(0X7D00B464);
	set_cmt	(0X7D00B468,	"datafrms",	0);
	create_insn	(0X7D00B468);
	set_name	(0X7D00B468,	"tee_rpmb_req_pack");
	set_cmt	(0X7D00B47C,	"nmemb",	0);
	set_cmt	(0X7D00B47E,	"size",	0);
	create_insn	(x=0X7D00B496);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B4F2,	"source",	0);
	set_cmt	(0X7D00B4F6,	"num",	0);
	set_cmt	(0X7D00B4F8,	"destination",	0);
	set_cmt	(0X7D00B504,	"destination",	0);
	set_cmt	(0X7D00B514,	"in",	0);
	set_cmt	(0X7D00B518,	"a3",	0);
	set_cmt	(0X7D00B522,	"mode",	0);
	create_insn	(x=0X7D00B522);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B528,	"fek",	0);
	create_insn	(x=0X7D00B528);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B532,	"source",	0);
	create_insn	(0X7D00B532);
	set_cmt	(0X7D00B534,	"num",	0);
	set_cmt	(0X7D00B546,	"mac",	0);
	create_insn	(0X7D00B546);
	set_cmt	(0X7D00B554,	"source",	0);
	set_cmt	(0X7D00B556,	"destination",	0);
	set_cmt	(0X7D00B55A,	"num",	0);
	create_insn	(x=0X7D00B562);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B564,	"macsize",	0);
	set_cmt	(0X7D00B568,	"key",	0);
	set_cmt	(0X7D00B56A,	"keysize",	0);
	set_cmt	(0X7D00B578,	"source",	0);
	create_insn	(0X7D00B578);
	set_cmt	(0X7D00B57A,	"destination",	0);
	create_insn	(0X7D00B588);
	create_insn	(0X7D00B58C);
	set_cmt	(0X7D00B58E,	"ptr",	0);
	create_insn	(0X7D00B598);
	create_dword	(x=0X7D00B5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B5A4);
	create_dword	(0X7D00B5A8);
	create_dword	(0X7D00B5AC);
	create_insn	(0X7D00B5B0);
	set_name	(0X7D00B5B0,	"tee_rpmb_resp_unpack_verify");
	set_cmt	(0X7D00B5B4,	"datafrms",	0);
	set_cmt	(0X7D00B5C6,	"destination",	0);
	create_insn	(x=0X7D00B5C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B5C8,	"source",	0);
	set_cmt	(0X7D00B5CC,	"num",	0);
	create_insn	(x=0X7D00B5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B5D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B5DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B62E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B63A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B65A,	"s1",	0);
	set_cmt	(0X7D00B65E,	"mac",	0);
	set_cmt	(0X7D00B664,	"n",	0);
	create_insn	(0X7D00B664);
	set_cmt	(0X7D00B666,	"s2",	0);
	create_insn	(x=0X7D00B666);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B672);
	create_insn	(x=0X7D00B6A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B6A4,	"macsize",	0);
	set_cmt	(0X7D00B6AC,	"keysize",	0);
	set_cmt	(0X7D00B6AE,	"key",	0);
	create_insn	(x=0X7D00B6AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B6BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B6BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B6C2,	"offset",	0);
	set_cmt	(0X7D00B6CA,	"frm",	0);
	create_insn	(x=0X7D00B6CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B6CC,	"out",	0);
	set_cmt	(0X7D00B6D4,	"size",	0);
	create_insn	(x=0X7D00B6DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B6E2,	"size",	0);
	create_insn	(x=0X7D00B6F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B6F6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B6FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B70A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B71A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B71E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B720);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B726,	"source",	0);
	set_cmt	(0X7D00B72A,	"destination",	0);
	create_insn	(x=0X7D00B72A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B72C,	"num",	0);
	create_insn	(x=0X7D00B734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B736);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B73C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00B744,	"offset",	0);
	create_insn	(0X7D00B75A);
	create_insn	(x=0X7D00B75E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B760,	"frm",	0);
	create_insn	(x=0X7D00B760);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B762,	"out",	0);
	set_cmt	(0X7D00B76C,	"size",	0);
	create_insn	(0X7D00B780);
	set_cmt	(0X7D00B782,	"frm",	0);
	create_insn	(x=0X7D00B782);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B788);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B78C,	"out",	0);
	create_insn	(x=0X7D00B792);
	op_hex		(x,	1);
	set_cmt	(0X7D00B796,	"offset",	0);
	set_cmt	(0X7D00B7A2,	"size",	0);
	create_insn	(x=0X7D00B7AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B7B6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B7C4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(0X7D00B7D2);
	set_cmt	(0X7D00B7D4,	"ptr",	0);
	create_insn	(x=0X7D00B7D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B7E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B7E4,	"s1",	0);
	set_cmt	(0X7D00B7E6,	"n",	0);
	set_cmt	(0X7D00B7E8,	"s2",	0);
	create_insn	(0X7D00B7F8);
	create_insn	(x=0X7D00B7FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B800,	"macsize",	0);
	set_cmt	(0X7D00B804,	"keysize",	0);
	set_cmt	(0X7D00B806,	"key",	0);
	create_insn	(x=0X7D00B806);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B80E);
	create_dword	(0X7D00B818);
	create_dword	(0X7D00B81C);
	create_dword	(0X7D00B820);
	create_dword	(x=0X7D00B824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B828);
	create_dword	(x=0X7D00B82C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B830);
	create_dword	(0X7D00B834);
	create_insn	(x=0X7D00B838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00B838,	"tee_rpmb_verify_key_sync_counter");
	create_insn	(x=0X7D00B846);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B84C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B852,	"req_size",	0);
	create_insn	(x=0X7D00B856);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B858,	"fek",	0);
	create_insn	(x=0X7D00B858);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B85A,	"mem",	0);
	create_insn	(x=0X7D00B85A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B85C,	"resp_size",	0);
	set_cmt	(0X7D00B860,	"req",	0);
	create_insn	(x=0X7D00B860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B86A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B872);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B880);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B888,	"req",	0);
	create_insn	(x=0X7D00B888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B890);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B894,	"dev_id",	0);
	set_cmt	(0X7D00B896,	"rawdata",	0);
	create_insn	(x=0X7D00B896);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B898,	"nbr_frms",	0);
	create_insn	(x=0X7D00B8A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B8C2,	"datafrm",	0);
	create_insn	(x=0X7D00B8C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B8CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B8D0,	"fek",	0);
	set_cmt	(0X7D00B8D2,	"rawdata",	0);
	create_insn	(x=0X7D00B8D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B8D4,	"nbr_frms",	0);
	create_insn	(0X7D00B8DE);
	create_insn	(x=0X7D00B8E0);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B8EA);
	create_insn	(0X7D00B8EE);
	create_dword	(x=0X7D00B900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00B904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00B908);
	create_insn	(0X7D00B90C);
	set_name	(0X7D00B90C,	"tee_rpmb_init");
	set_cmt	(0X7D00B910,	"fmt",	0);
	create_insn	(x=0X7D00B912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00B914);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B918);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B91C);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B920);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00B938,	"nmemb",	0);
	set_cmt	(0X7D00B93A,	"size",	0);
	create_insn	(0X7D00B946);
	set_cmt	(0X7D00B960,	"req_size",	0);
	create_insn	(x=0X7D00B962);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B964,	"resp",	0);
	create_insn	(x=0X7D00B964);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B966,	"mem",	0);
	create_insn	(x=0X7D00B966);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B968,	"resp_size",	0);
	set_cmt	(0X7D00B96A,	"req",	0);
	create_insn	(x=0X7D00B96A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B96E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B97A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00B982);
	op_stkvar	(x,	1);
	create_insn	(0X7D00B98E);
	create_insn	(x=0X7D00B998);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B99A,	"destination",	0);
	create_insn	(x=0X7D00B99A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B99C,	"num",	0);
	set_cmt	(0X7D00B99E,	"source",	0);
	create_insn	(0X7D00B9A8);
	create_insn	(x=0X7D00B9AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B9C2,	"source",	0);
	create_insn	(x=0X7D00B9C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00B9C6,	"num",	0);
	set_cmt	(0X7D00B9CE,	"destination",	0);
	create_insn	(x=0X7D00B9DC);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00B9E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00B9F4);
	set_cmt	(0X7D00BA06,	"outbuf",	0);
	create_insn	(x=0X7D00BA06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BA12,	"level",	0);
	create_insn	(x=0X7D00BA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BA1A,	"line",	0);
	set_cmt	(0X7D00BA1E,	"level_ok",	0);
	set_cmt	(0X7D00BA26,	"num",	0);
	create_insn	(0X7D00BA26);
	set_cmt	(0X7D00BA28,	"source",	0);
	create_insn	(x=0X7D00BA28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BA2A,	"destination",	0);
	create_insn	(0X7D00BA4A);
	create_insn	(x=0X7D00BA60);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BA68,	"req_size",	0);
	create_insn	(x=0X7D00BA6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BA6E,	"fek",	0);
	create_insn	(x=0X7D00BA6E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BA70,	"mem",	0);
	create_insn	(x=0X7D00BA70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BA72,	"resp_size",	0);
	set_cmt	(0X7D00BA76,	"req",	0);
	create_insn	(x=0X7D00BA76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BA94,	"req",	0);
	create_insn	(x=0X7D00BA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BA9C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BAA0,	"dev_id",	0);
	set_cmt	(0X7D00BAA2,	"rawdata",	0);
	create_insn	(x=0X7D00BAA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BAA4,	"nbr_frms",	0);
	create_insn	(x=0X7D00BAAE);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BAB4);
	create_insn	(x=0X7D00BABA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BAC2,	"datafrm",	0);
	create_insn	(x=0X7D00BAC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BAC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BACE,	"fek",	0);
	set_cmt	(0X7D00BAD0,	"rawdata",	0);
	create_insn	(x=0X7D00BAD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BAD2,	"nbr_frms",	0);
	create_insn	(0X7D00BADC);
	create_insn	(x=0X7D00BADE);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BAEE);
	create_insn	(0X7D00BAF4);
	create_insn	(0X7D00BAF8);
	create_dword	(x=0X7D00BB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00BB04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00BB08);
	create_dword	(0X7D00BB0C);
	create_dword	(x=0X7D00BB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00BB14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00BB18);
	create_dword	(0X7D00BB1C);
	create_dword	(0X7D00BB20);
	create_insn	(0X7D00BB24);
	set_name	(0X7D00BB24,	"tee_rpmb_write_blk");
	create_insn	(x=0X7D00BB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BB32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BB36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BB4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BB50,	"resp_size",	0);
	set_cmt	(0X7D00BB58,	"mem",	0);
	create_insn	(x=0X7D00BB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BB68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BB6A,	"fek",	0);
	create_insn	(x=0X7D00BB6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BB6C,	"req",	0);
	create_insn	(x=0X7D00BB6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BB6E,	"req_size",	0);
	create_insn	(x=0X7D00BB98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BBFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC06,	"req",	0);
	create_insn	(x=0X7D00BC06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC12,	"nbr_frms",	0);
	create_insn	(x=0X7D00BC12);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC22,	"dev_id",	0);
	create_insn	(x=0X7D00BC22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC24,	"rawdata",	0);
	create_insn	(x=0X7D00BC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC32);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BC38);
	create_insn	(x=0X7D00BC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00BC4A);
	create_insn	(x=0X7D00BC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC5A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC5E,	"datafrm",	0);
	create_insn	(x=0X7D00BC5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC6E,	"fek",	0);
	create_insn	(x=0X7D00BC6E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BC72,	"nbr_frms",	0);
	set_cmt	(0X7D00BC74,	"rawdata",	0);
	create_insn	(x=0X7D00BC74);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BC7E);
	create_insn	(x=0X7D00BC80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00BC8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BC96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BCA0);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BCA6);
	create_insn	(x=0X7D00BCA8);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BCB0);
	create_insn	(0X7D00BCB4);
	create_insn	(0X7D00BCB8);
	create_insn	(0X7D00BCBC);
	create_insn	(0X7D00BCC0);
	make_array	(0X7D00BCC6,	0X2);
	create_dword	(x=0X7D00BCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00BCCC);
	create_dword	(0X7D00BCD0);
	create_insn	(0X7D00BCD4);
	set_name	(0X7D00BCD4,	"tee_rpmb_read");
	create_insn	(x=0X7D00BCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BCEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD1E,	"fek",	0);
	create_insn	(x=0X7D00BD1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD20,	"mem",	0);
	create_insn	(x=0X7D00BD20);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD22,	"req_size",	0);
	set_cmt	(0X7D00BD26,	"req",	0);
	create_insn	(x=0X7D00BD26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00BD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD3A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00BD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD52,	"req",	0);
	create_insn	(x=0X7D00BD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD62,	"dev_id",	0);
	set_cmt	(0X7D00BD64,	"rawdata",	0);
	create_insn	(x=0X7D00BD64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD66,	"nbr_frms",	0);
	create_insn	(x=0X7D00BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD76);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BD7E);
	create_insn	(x=0X7D00BD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BD98,	"datafrm",	0);
	create_insn	(x=0X7D00BD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BD9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BDA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00BDAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BDB0,	"nbr_frms",	0);
	create_insn	(x=0X7D00BDB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00BDB8,	"fek",	0);
	set_cmt	(0X7D00BDBA,	"rawdata",	0);
	create_insn	(x=0X7D00BDBA);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BDC4);
	create_insn	(x=0X7D00BDC6);
	op_stkvar	(x,	1);
	create_insn	(0X7D00BDD0);
	create_dword	(x=0X7D00BDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00BDDC);
	set_cmt	(0X7D00BDE0,	"fek",	0);
	create_insn	(0X7D00BDE0);
	set_name	(0X7D00BDE0,	"tee_rpmb_write");
	create_insn	(x=0X7D00BE02);
	op_hex		(x,	1);
	set_cmt	(0X7D00BE0E,	"nmemb",	0);
	create_insn	(0X7D00BE0E);
	set_cmt	(0X7D00BE10,	"size",	0);
	set_cmt	(0X7D00BE1C,	"addr",	0);
	set_cmt	(0X7D00BE20,	"data",	0);
	set_cmt	(0X7D00BE2E,	"source",	0);
	set_cmt	(0X7D00BE30,	"num",	0);
	set_cmt	(0X7D00BE32,	"destination",	0);
	set_cmt	(0X7D00BE3A,	"blk_idx",	0);
	set_cmt	(0X7D00BE3C,	"data_blks",	0);
	set_cmt	(0X7D00BE3E,	"blkcnt",	0);
	set_cmt	(0X7D00BE40,	"dev_id",	0);
	create_insn	(0X7D00BE4A);
	set_cmt	(0X7D00BE4C,	"ptr",	0);
	create_dword	(x=0X7D00BE58);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00BE5C);
	set_name	(0X7D00BE5C,	"dump_fat");
	create_insn	(x=0X7D00BE5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BE64,	"size",	0);
	set_cmt	(0X7D00BE72,	"addr",	0);
	set_cmt	(0X7D00BE74,	"data",	0);
	set_cmt	(0X7D00BE76,	"len",	0);
	create_insn	(0X7D00BE9E);
	set_cmt	(0X7D00BEA0,	"ptr",	0);
	make_array	(0X7D00BEAA,	0X2);
	create_dword	(x=0X7D00BEAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00BEB0);
	set_name	(0X7D00BEB0,	"tee_rpmb_get_write_counter");
	set_cmt	(0X7D00BEB6,	"len",	0);
	create_insn	(x=0X7D00BEB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BEC6,	"dev_id",	0);
	create_insn	(0X7D00BECE);
	create_insn	(0X7D00BED8);
	create_dword	(x=0X7D00BEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00BEDC,	"len");
	create_dword	(0X7D00BEE0);
	create_insn	(0X7D00BEE4);
	set_name	(0X7D00BEE4,	"write_fat_entry");
	create_insn	(x=0X7D00BEF0);
	op_hex		(x,	1);
	set_cmt	(0X7D00BF10,	"counter",	0);
	create_insn	(0X7D00BF10);
	create_insn	(0X7D00BF1E);
	create_insn	(0X7D00BF22);
	create_dword	(0X7D00BF28);
	create_dword	(0X7D00BF2C);
	create_insn	(0X7D00BF30);
	set_name	(0X7D00BF30,	"rpmb_fs_setup");
	create_insn	(x=0X7D00BF34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BF3C,	"len",	0);
	create_insn	(x=0X7D00BF3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00BF4C,	"nmemb",	0);
	set_cmt	(0X7D00BF4E,	"size",	0);
	create_insn	(0X7D00BF5E);
	set_cmt	(0X7D00BF6E,	"addr",	0);
	create_insn	(0X7D00BF6E);
	set_cmt	(0X7D00BF70,	"data",	0);
	set_cmt	(0X7D00BF72,	"len",	0);
	create_insn	(0X7D00BF94);
	set_cmt	(0X7D00BFB0,	"update_write_counter",	0);
	set_cmt	(0X7D00BFBA,	"counter",	0);
	set_cmt	(0X7D00BFD2,	"nmemb",	0);
	set_cmt	(0X7D00BFD4,	"size",	0);
	create_insn	(0X7D00BFF2);
	create_insn	(0X7D00BFFA);
	create_insn	(0X7D00BFFE);
	create_insn	(0X7D00C002);
	set_cmt	(0X7D00C004,	"ptr",	0);
	set_cmt	(0X7D00C00A,	"ptr",	0);
	make_array	(0X7D00C016,	0X2);
	create_dword	(x=0X7D00C018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C01C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C020);
	create_dword	(0X7D00C024);
	create_dword	(0X7D00C028);
	create_insn	(0X7D00C02C);
	set_name	(0X7D00C02C,	"read_fat");
	create_insn	(x=0X7D00C044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C04E,	"size",	0);
	create_insn	(x=0X7D00C06A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C072);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C080,	"addr",	0);
	set_cmt	(0X7D00C082,	"data",	0);
	set_cmt	(0X7D00C084,	"len",	0);
	create_insn	(x=0X7D00C098);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C09A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C0A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C0CA,	"destination",	0);
	set_cmt	(0X7D00C0CC,	"source",	0);
	set_cmt	(0X7D00C0CE,	"num",	0);
	create_insn	(0X7D00C0DE);
	create_insn	(0X7D00C0F2);
	create_insn	(0X7D00C10A);
	set_cmt	(0X7D00C114,	"destination",	0);
	set_cmt	(0X7D00C116,	"source",	0);
	set_cmt	(0X7D00C118,	"num",	0);
	create_insn	(x=0X7D00C134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C138);
	op_stkvar	(x,	1);
	create_insn	(0X7D00C146);
	create_insn	(0X7D00C14C);
	create_insn	(x=0X7D00C14E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00C154);
	create_insn	(0X7D00C16E);
	create_insn	(x=0X7D00C172);
	op_stkvar	(x,	1);
	create_insn	(0X7D00C17C);
	create_insn	(x=0X7D00C18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C194);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C1A0,	"fh",	0);
	create_insn	(x=0X7D00C1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C1A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C1A8,	"update_write_counter",	0);
	create_insn	(x=0X7D00C1AA);
	op_stkvar	(x,	1);
	create_insn	(0X7D00C1B6);
	create_insn	(0X7D00C1BA);
	create_insn	(0X7D00C1C0);
	create_insn	(0X7D00C1C4);
	set_cmt	(0X7D00C1C6,	"ptr",	0);
	make_array	(0X7D00C1D6,	0X2);
	create_dword	(x=0X7D00C1D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C1DC);
	create_dword	(0X7D00C1E0);
	create_dword	(0X7D00C1E4);
	create_insn	(0X7D00C1E8);
	set_name	(0X7D00C1E8,	"rpmb_fs_access");
	set_cmt	(0X7D00C1EC,	"m",	0);
	create_insn	(x=0X7D00C1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C1F4,	"filename",	0);
	set_cmt	(0X7D00C1FE,	"p",	0);
	create_insn	(0X7D00C208);
	create_insn	(0X7D00C20E);
	set_cmt	(0X7D00C210,	"m",	0);
	create_insn	(x=0X7D00C210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C216,	"ptr",	0);
	make_array	(0X7D00C226,	0X2);
	create_dword	(x=0X7D00C228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C22C);
	create_dword	(0X7D00C230);
	create_insn	(0X7D00C234);
	set_name	(0X7D00C234,	"rpmb_fs_unlink");
	set_cmt	(0X7D00C238,	"m",	0);
	create_insn	(x=0X7D00C238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C24A,	"filename",	0);
	set_cmt	(0X7D00C254,	"p",	0);
	set_cmt	(0X7D00C26A,	"update_write_counter",	0);
	set_cmt	(0X7D00C26C,	"fh",	0);
	create_insn	(0X7D00C276);
	create_insn	(0X7D00C27C);
	set_cmt	(0X7D00C27E,	"m",	0);
	create_insn	(x=0X7D00C27E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C284,	"ptr",	0);
	create_dword	(x=0X7D00C294);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C298);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00C29C);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00C2A0);
	set_name	(0X7D00C2A0,	"rpmb_fs_rename");
	set_cmt	(0X7D00C2A6,	"m",	0);
	create_insn	(x=0X7D00C2A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C2D0,	"filename",	0);
	set_cmt	(0X7D00C2DA,	"filename",	0);
	set_cmt	(0X7D00C2E4,	"fh",	0);
	set_cmt	(0X7D00C2E6,	"p",	0);
	set_cmt	(0X7D00C2F0,	"fh",	0);
	set_cmt	(0X7D00C2F2,	"p",	0);
	set_cmt	(0X7D00C308,	"source",	0);
	set_cmt	(0X7D00C30A,	"num",	0);
	set_cmt	(0X7D00C30C,	"destination",	0);
	set_cmt	(0X7D00C312,	"update_write_counter",	0);
	set_cmt	(0X7D00C314,	"fh",	0);
	create_insn	(0X7D00C31E);
	create_insn	(0X7D00C322);
	create_insn	(0X7D00C328);
	create_insn	(0X7D00C32E);
	set_cmt	(0X7D00C330,	"m",	0);
	create_insn	(x=0X7D00C330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C336,	"ptr",	0);
	set_cmt	(0X7D00C33C,	"ptr",	0);
	make_array	(0X7D00C34E,	0X2);
	create_dword	(x=0X7D00C350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C354);
	create_dword	(0X7D00C358);
	create_insn	(0X7D00C35C);
	set_name	(0X7D00C35C,	"rpmb_fs_lseek");
	set_cmt	(0X7D00C364,	"m",	0);
	create_insn	(x=0X7D00C364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C36A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C37C,	"p",	0);
	create_insn	(0X7D00C388);
	create_insn	(0X7D00C396);
	create_insn	(0X7D00C39C);
	create_insn	(x=0X7D00C3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C3B8,	"level",	0);
	set_cmt	(0X7D00C3BA,	"fmt",	0);
	create_insn	(x=0X7D00C3BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C3BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C3BE,	"line",	0);
	set_cmt	(0X7D00C3C2,	"level_ok",	0);
	create_insn	(0X7D00C3CE);
	create_insn	(0X7D00C3D8);
	set_cmt	(0X7D00C3E0,	"m",	0);
	create_insn	(x=0X7D00C3E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00C3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C3F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C3FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C400);
	create_insn	(0X7D00C404);
	set_name	(0X7D00C404,	"rpmb_fs_read");
	set_cmt	(0X7D00C414,	"m",	0);
	create_insn	(x=0X7D00C414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C420);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C432,	"p",	0);
	create_insn	(0X7D00C432);
	set_cmt	(0X7D00C43A,	"lineno",	0);
	set_cmt	(0X7D00C450,	"data",	0);
	set_cmt	(0X7D00C456,	"addr",	0);
	set_cmt	(0X7D00C458,	"len",	0);
	create_insn	(0X7D00C468);
	create_insn	(0X7D00C474);
	set_cmt	(0X7D00C476,	"m",	0);
	create_insn	(x=0X7D00C476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00C482);
	create_dword	(x=0X7D00C488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C490);
	create_insn	(0X7D00C494);
	set_name	(0X7D00C494,	"rpmb_fs_ftruncate");
	create_insn	(x=0X7D00C49C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C4A0,	"m",	0);
	create_insn	(x=0X7D00C4A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C4B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C4C4,	"p",	0);
	create_insn	(x=0X7D00C4D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C4E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C4F4,	"fh",	0);
	set_cmt	(0X7D00C4F6,	"p",	0);
	create_insn	(x=0X7D00C4F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C502,	"size",	0);
	set_cmt	(0X7D00C504,	"pool",	0);
	create_insn	(x=0X7D00C504);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C50C,	"size",	0);
	set_cmt	(0X7D00C50E,	"nmemb",	0);
	set_cmt	(0X7D00C520,	"len",	0);
	set_cmt	(0X7D00C528,	"mm",	0);
	set_cmt	(0X7D00C540,	"addr",	0);
	create_insn	(0X7D00C540);
	set_cmt	(0X7D00C542,	"data",	0);
	create_insn	(0X7D00C550);
	set_cmt	(0X7D00C55E,	"fh",	0);
	set_cmt	(0X7D00C560,	"update_write_counter",	0);
	create_insn	(0X7D00C56A);
	create_insn	(0X7D00C572);
	create_insn	(0X7D00C578);
	create_insn	(0X7D00C57E);
	set_cmt	(0X7D00C580,	"m",	0);
	create_insn	(x=0X7D00C580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C58C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C598,	"ptr",	0);
	create_insn	(x=0X7D00C5A2);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00C5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C5B4);
	create_dword	(x=0X7D00C5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C5BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C5C0);
	create_insn	(0X7D00C5C4);
	set_name	(0X7D00C5C4,	"rpmb_fs_write");
	create_insn	(x=0X7D00C5CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C5D8,	"m",	0);
	create_insn	(x=0X7D00C5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C5EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C606);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C60A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C61C,	"fh",	0);
	set_cmt	(0X7D00C61E,	"p",	0);
	create_insn	(x=0X7D00C61E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00C63E);
	create_insn	(x=0X7D00C64E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00C67A);
	set_cmt	(0X7D00C680,	"pool",	0);
	create_insn	(x=0X7D00C680);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C682,	"size",	0);
	create_insn	(x=0X7D00C688);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C68A,	"size",	0);
	set_cmt	(0X7D00C68C,	"nmemb",	0);
	create_insn	(x=0X7D00C692);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C69E,	"len",	0);
	set_cmt	(0X7D00C6AA,	"source",	0);
	set_cmt	(0X7D00C6AC,	"num",	0);
	set_cmt	(0X7D00C6AE,	"destination",	0);
	set_cmt	(0X7D00C6B4,	"mm",	0);
	create_insn	(x=0X7D00C6B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C6CA,	"addr",	0);
	create_insn	(0X7D00C6CA);
	set_cmt	(0X7D00C6CC,	"data",	0);
	create_insn	(0X7D00C6D8);
	set_cmt	(0X7D00C6E0,	"fh",	0);
	set_cmt	(0X7D00C6E2,	"update_write_counter",	0);
	create_insn	(0X7D00C6F6);
	create_insn	(0X7D00C6FE);
	create_insn	(0X7D00C702);
	create_insn	(0X7D00C70A);
	create_insn	(0X7D00C70E);
	set_cmt	(0X7D00C710,	"m",	0);
	create_insn	(x=0X7D00C710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C718);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C724,	"ptr",	0);
	create_insn	(x=0X7D00C72C);
	op_stkvar	(x,	1);
	create_insn	(0X7D00C736);
	make_array	(0X7D00C73E,	0X2);
	create_dword	(x=0X7D00C740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C744);
	create_dword	(x=0X7D00C748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C74C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C75C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00C760);
	create_dword	(0X7D00C764);
	create_insn	(0X7D00C768);
	set_name	(0X7D00C768,	"rpmb_fs_open_internal");
	set_cmt	(0X7D00C772,	"m",	0);
	create_insn	(x=0X7D00C772);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C774);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C790,	"filename",	0);
	create_insn	(x=0X7D00C7A6);
	op_hex		(x,	1);
	create_insn	(x=0X7D00C7AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C7AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C7B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C7C2,	"fh",	0);
	set_cmt	(0X7D00C7C4,	"p",	0);
	create_insn	(x=0X7D00C7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C7D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C7E6,	"fh",	0);
	create_insn	(0X7D00C7E6);
	set_cmt	(0X7D00C7E8,	"p",	0);
	create_insn	(0X7D00C7F2);
	create_insn	(x=0X7D00C7FA);
	op_hex		(x,	1);
	set_cmt	(0X7D00C810,	"num",	0);
	set_cmt	(0X7D00C812,	"destination",	0);
	set_cmt	(0X7D00C816,	"source",	0);
	set_cmt	(0X7D00C824,	"buf",	0);
	set_cmt	(0X7D00C826,	"buf_size",	0);
	set_cmt	(0X7D00C83C,	"fh",	0);
	create_insn	(0X7D00C83C);
	set_cmt	(0X7D00C83E,	"update_write_counter",	0);
	create_insn	(x=0X7D00C84C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C854,	"ptr",	0);
	set_cmt	(0X7D00C85E,	"m",	0);
	create_insn	(x=0X7D00C85E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00C870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C874);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00C878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00C87C);
	set_name	(0X7D00C87C,	"rpmb_fs_open");
	create_insn	(x=0X7D00C88E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C8A2,	"file",	0);
	create_insn	(0X7D00C8A2);
	create_insn	(x=0X7D00C8A4);
	op_hex		(x,	1);
	set_cmt	(0X7D00C8BA,	"file",	0);
	create_insn	(0X7D00C8BA);
	set_cmt	(0X7D00C8BC,	"flags",	0);
	create_insn	(x=0X7D00C8C6);
	op_hex		(x,	1);
	create_dword	(x=0X7D00C8E0);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00C8E4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00C8E8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00C8EC);
	set_name	(0X7D00C8EC,	"rpmb_fs_opendir_internal");
	create_insn	(x=0X7D00C8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C906);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C912,	"destination",	0);
	set_cmt	(0X7D00C914,	"source",	0);
	set_cmt	(0X7D00C916,	"num",	0);
	create_insn	(x=0X7D00C91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C928);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C932,	"nmemb",	0);
	set_cmt	(0X7D00C934,	"size",	0);
	set_cmt	(0X7D00C94C,	"m",	0);
	create_insn	(x=0X7D00C94C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00C95C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00C964,	"size",	0);
	set_cmt	(0X7D00C980,	"addr",	0);
	set_cmt	(0X7D00C982,	"data",	0);
	set_cmt	(0X7D00C984,	"len",	0);
	create_insn	(x=0X7D00C99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00C9B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C9D4,	"size",	0);
	set_cmt	(0X7D00C9E6,	"source",	0);
	create_insn	(x=0X7D00C9E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00C9E8,	"destination",	0);
	create_insn	(x=0X7D00CA0A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CA1A);
	create_insn	(0X7D00CA28);
	create_insn	(0X7D00CA2E);
	set_cmt	(0X7D00CA32,	"m",	0);
	create_insn	(x=0X7D00CA32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CA46,	"ptr",	0);
	set_cmt	(0X7D00CA52,	"ptr",	0);
	create_insn	(x=0X7D00CA5A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CA60);
	create_insn	(0X7D00CA66);
	make_array	(0X7D00CA72,	0X2);
	create_dword	(x=0X7D00CA74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00CA7C);
	create_dword	(0X7D00CA80);
	create_dword	(0X7D00CA84);
	create_insn	(0X7D00CA88);
	set_name	(0X7D00CA88,	"rpmb_fs_rmdir");
	create_insn	(x=0X7D00CA8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CA90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CA98,	"dir",	0);
	create_insn	(x=0X7D00CA98);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CAA4);
	create_insn	(x=0X7D00CAB2);
	op_stkvar	(x,	1);
	make_array	(0X7D00CAB6,	0X2);
	create_dword	(0X7D00CAB8);
	create_dword	(0X7D00CABC);
	create_insn	(0X7D00CAC0);
	set_cmt	(0X7D00CACA,	"m",	0);
	create_insn	(x=0X7D00CACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CAD0,	"len",	0);
	set_cmt	(0X7D00CAD2,	"addr",	0);
	set_cmt	(0X7D00CAD4,	"data",	0);
	set_cmt	(0X7D00CAE4,	"m",	0);
	create_insn	(x=0X7D00CAE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00CAEE,	0X2);
	create_dword	(x=0X7D00CAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CAF4);
	set_cmt	(0X7D00CAFC,	"m",	0);
	create_insn	(x=0X7D00CAFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CB10,	"m",	0);
	create_insn	(x=0X7D00CB10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00CB22,	0X2);
	create_dword	(x=0X7D00CB24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CB28);
	create_insn	(x=0X7D00CB2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CB32,	"m",	0);
	set_cmt	(0X7D00CB46,	"m",	0);
	create_dword	(x=0X7D00CB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CB54);
	create_insn	(x=0X7D00CB56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CB5E,	"m",	0);
	set_cmt	(0X7D00CB64,	"data",	0);
	set_cmt	(0X7D00CB66,	"len",	0);
	set_cmt	(0X7D00CB6A,	"addr",	0);
	set_cmt	(0X7D00CB72,	"m",	0);
	create_dword	(x=0X7D00CB7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D00CB80,	"fmt",	0);
	create_insn	(0X7D00CB80);
	set_name	(0X7D00CB80,	"rpmb_key_inject");
	set_cmt	(0X7D00CB82,	"m",	0);
	create_insn	(x=0X7D00CB82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00CB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CB92,	"level",	0);
	create_insn	(x=0X7D00CB98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CB9A,	"line",	0);
	set_cmt	(0X7D00CB9E,	"level_ok",	0);
	set_cmt	(0X7D00CBA4,	"m",	0);
	create_insn	(x=0X7D00CBA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00CBB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CBB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CBB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CBBC);
	set_name	(0X7D00CBBC,	"do_hmac");
	create_insn	(x=0X7D00CBCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CBDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00CBDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CBE2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CBE8,	"size",	0);
	create_insn	(x=0X7D00CBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CBF2);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CBF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CC04);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CC14);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CC22,	"ptr",	0);
	create_insn	(0X7D00CC2C);
	create_insn	(0X7D00CC30);
	create_dword	(x=0X7D00CC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00CC3C);
	create_dword	(0X7D00CC40);
	create_dword	(0X7D00CC44);
	create_insn	(0X7D00CC48);
	set_name	(0X7D00CC48,	"fek_crypt");
	create_insn	(x=0X7D00CC5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CC68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CC6A,	"out_key",	0);
	create_insn	(x=0X7D00CC6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CC6E,	"in_key",	0);
	set_cmt	(0X7D00CC70,	"message_size",	0);
	create_insn	(x=0X7D00CC70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CC72,	"key_size",	0);
	set_cmt	(0X7D00CC74,	"message",	0);
	create_insn	(x=0X7D00CC7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00CC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CC84);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CC8E,	"size",	0);
	create_insn	(x=0X7D00CC8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCA0,	"key2_len",	0);
	create_insn	(x=0X7D00CCA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCA2,	"key1",	0);
	create_insn	(x=0X7D00CCA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCA4,	"iv",	0);
	create_insn	(x=0X7D00CCA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCA6,	"iv_len",	0);
	create_insn	(x=0X7D00CCA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCA8,	"algo",	0);
	create_insn	(x=0X7D00CCAA);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CCAC,	"mode",	0);
	create_insn	(x=0X7D00CCB4);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CCB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCBA,	"data",	0);
	create_insn	(x=0X7D00CCBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCBE,	"len",	0);
	create_insn	(x=0X7D00CCBE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCC0,	"dst",	0);
	create_insn	(x=0X7D00CCC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CCC4,	"ctx",	0);
	set_cmt	(0X7D00CCC6,	"algo",	0);
	set_cmt	(0X7D00CCC8,	"mode",	0);
	set_cmt	(0X7D00CCCA,	"last_block",	0);
	set_cmt	(0X7D00CCD2,	"ctx",	0);
	set_cmt	(0X7D00CCD4,	"algo",	0);
	create_insn	(x=0X7D00CCD6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CCDA,	"destination",	0);
	set_cmt	(0X7D00CCDC,	"source",	0);
	set_cmt	(0X7D00CCDE,	"num",	0);
	set_cmt	(0X7D00CCE4,	"ptr",	0);
	create_insn	(0X7D00CCEE);
	create_insn	(0X7D00CCF2);
	create_insn	(0X7D00CCF6);
	make_array	(0X7D00CCFE,	0X2);
	create_dword	(x=0X7D00CD00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CD04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00CD08);
	set_name	(0X7D00CD08,	"algo");
	create_dword	(0X7D00CD0C);
	create_dword	(0X7D00CD10);
	create_dword	(0X7D00CD14);
	create_insn	(0X7D00CD18);
	set_name	(0X7D00CD18,	"tee_fs_init_key_manager");
	create_insn	(x=0X7D00CD1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CD26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CD28,	"destination",	0);
	create_insn	(x=0X7D00CD28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CD2A,	"num",	0);
	create_insn	(x=0X7D00CD32);
	op_hex		(x,	1);
	create_insn	(x=0X7D00CD36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CD3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CD4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CD56,	"destination",	0);
	create_insn	(x=0X7D00CD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CD5A,	"num",	0);
	set_cmt	(0X7D00CD64,	"in_key",	0);
	create_insn	(x=0X7D00CD64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CD66,	"message_size",	0);
	create_insn	(x=0X7D00CD66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CD68,	"out_key",	0);
	set_cmt	(0X7D00CD6A,	"key_size",	0);
	set_cmt	(0X7D00CD6C,	"message",	0);
	create_insn	(x=0X7D00CD6C);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00CD7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CD80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CD84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CD88);
	set_name	(0X7D00CD88,	"tee_fs_generate_fek");
	create_insn	(x=0X7D00CD90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00CD92);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CD9C,	"key",	0);
	create_insn	(0X7D00CDA6);
	create_dword	(x=0X7D00CDAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00CDB0);
	create_insn	(0X7D00CDB4);
	set_name	(0X7D00CDB4,	"decrypt_block");
	set_cmt	(0X7D00CDB8,	"data",	0);
	create_insn	(x=0X7D00CDBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CDBE,	"destination",	0);
	create_insn	(x=0X7D00CDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CDC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CDC2,	"source",	0);
	create_insn	(x=0X7D00CDC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CDC4,	"num",	0);
	set_cmt	(0X7D00CDCC,	"mode",	0);
	set_cmt	(0X7D00CDCE,	"key",	0);
	create_insn	(x=0X7D00CDCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CDDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00CDDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CDEA);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CDEC,	"size",	0);
	create_insn	(x=0X7D00CDEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CDEE,	"algo",	0);
	set_cmt	(0X7D00CDF4,	"size",	0);
	create_insn	(x=0X7D00CDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CE00);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CE02,	"algo",	0);
	create_insn	(x=0X7D00CE0A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CE0C,	"data",	0);
	create_insn	(x=0X7D00CE0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE0E,	"ctx",	0);
	set_cmt	(0X7D00CE10,	"algo",	0);
	set_cmt	(0X7D00CE12,	"len",	0);
	create_insn	(x=0X7D00CE1A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CE1C,	"digest",	0);
	create_insn	(x=0X7D00CE1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE1E,	"ctx",	0);
	set_cmt	(0X7D00CE20,	"algo",	0);
	set_cmt	(0X7D00CE22,	"len",	0);
	set_cmt	(0X7D00CE28,	"ptr",	0);
	create_insn	(0X7D00CE32);
	create_insn	(x=0X7D00CE3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CE3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CE42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CE46);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CE4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CE50,	"size",	0);
	create_insn	(x=0X7D00CE50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE5E,	"key1",	0);
	create_insn	(x=0X7D00CE5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE64,	"key2_len",	0);
	create_insn	(x=0X7D00CE64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE68,	"iv",	0);
	create_insn	(x=0X7D00CE68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE6C,	"iv_len",	0);
	create_insn	(x=0X7D00CE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CE70);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CE72,	"algo",	0);
	set_cmt	(0X7D00CE74,	"mode",	0);
	create_insn	(x=0X7D00CE7A);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CE7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE7E,	"dst",	0);
	create_insn	(x=0X7D00CE7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CE84,	"ctx",	0);
	set_cmt	(0X7D00CE86,	"algo",	0);
	set_cmt	(0X7D00CE88,	"mode",	0);
	set_cmt	(0X7D00CE8A,	"last_block",	0);
	create_insn	(x=0X7D00CE90);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CE92,	"ctx",	0);
	set_cmt	(0X7D00CE94,	"algo",	0);
	set_cmt	(0X7D00CE98,	"ptr",	0);
	create_insn	(x=0X7D00CE9E);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D00CEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CEA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CEAE,	"size",	0);
	create_insn	(x=0X7D00CEAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CEBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEC0,	"key2_len",	0);
	create_insn	(x=0X7D00CEC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEC2,	"iv",	0);
	create_insn	(x=0X7D00CEC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEC4,	"iv_len",	0);
	create_insn	(x=0X7D00CEC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEC6,	"key1",	0);
	create_insn	(x=0X7D00CEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CEC8);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CECA,	"algo",	0);
	set_cmt	(0X7D00CECC,	"mode",	0);
	create_insn	(x=0X7D00CECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CED6);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CED8,	"len",	0);
	create_insn	(x=0X7D00CED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CEDA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEDC,	"data",	0);
	create_insn	(x=0X7D00CEDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEE0,	"dst",	0);
	create_insn	(x=0X7D00CEE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEE2,	"ctx",	0);
	set_cmt	(0X7D00CEE4,	"algo",	0);
	set_cmt	(0X7D00CEE6,	"mode",	0);
	create_insn	(x=0X7D00CEE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CEE8,	"last_block",	0);
	create_insn	(x=0X7D00CEF0);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	set_cmt	(0X7D00CEF2,	"ctx",	0);
	set_cmt	(0X7D00CEF4,	"algo",	0);
	set_cmt	(0X7D00CEF8,	"ptr",	0);
	create_insn	(0X7D00CF02);
	make_array	(0X7D00CF0A,	0X2);
	create_dword	(x=0X7D00CF0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00CF10);
	create_dword	(0X7D00CF14);
	create_dword	(0X7D00CF18);
	create_dword	(0X7D00CF1C);
	create_insn	(0X7D00CF20);
	set_name	(0X7D00CF20,	"tee_obj_get");
	create_insn	(0X7D00CF2E);
	create_insn	(0X7D00CF32);
	make_array	(0X7D00CF36,	0X2);
	create_dword	(0X7D00CF38);
	create_insn	(0X7D00CF3C);
	set_name	(0X7D00CF3C,	"tee_obj_verify");
	set_cmt	(0X7D00CF4E,	"object_id",	0);
	set_cmt	(0X7D00CF50,	"object_id_len",	0);
	set_cmt	(0X7D00CF52,	"transient",	0);
	create_insn	(x=0X7D00CF5E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CF62);
	create_insn	(x=0X7D00CF72);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CF76);
	create_insn	(x=0X7D00CF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CF8E,	"level",	0);
	set_cmt	(0X7D00CF90,	"fmt",	0);
	create_insn	(x=0X7D00CF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00CF92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00CF94,	"level_ok",	0);
	set_cmt	(0X7D00CF96,	"line",	0);
	set_cmt	(0X7D00CFBC,	"ptr",	0);
	create_insn	(x=0X7D00CFC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00CFC8,	"ptr",	0);
	create_insn	(x=0X7D00CFD8);
	op_stkvar	(x,	1);
	create_insn	(0X7D00CFDC);
	create_dword	(0X7D00CFE4);
	create_dword	(0X7D00CFE8);
	create_dword	(0X7D00CFEC);
	create_dword	(x=0X7D00CFF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00CFF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00CFF8);
	set_name	(0X7D00CFF8,	"tee_pobj_get");
	create_insn	(x=0X7D00CFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D020,	"m1",	0);
	set_cmt	(0X7D00D022,	"m2",	0);
	set_cmt	(0X7D00D026,	"n",	0);
	set_cmt	(0X7D00D02E,	"m1",	0);
	set_cmt	(0X7D00D030,	"m2",	0);
	set_cmt	(0X7D00D034,	"n",	0);
	create_insn	(x=0X7D00D040);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D050);
	create_insn	(x=0X7D00D07E);
	op_hex		(x,	1);
	set_cmt	(0X7D00D086,	"nmemb",	0);
	create_insn	(0X7D00D086);
	set_cmt	(0X7D00D088,	"size",	0);
	set_cmt	(0X7D00D094,	"destination",	0);
	set_cmt	(0X7D00D09A,	"source",	0);
	set_cmt	(0X7D00D09C,	"num",	0);
	create_insn	(x=0X7D00D0A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D0A8,	"size",	0);
	set_cmt	(0X7D00D0B2,	"ptr",	0);
	set_cmt	(0X7D00D0BA,	"num",	0);
	create_insn	(0X7D00D0BA);
	set_cmt	(0X7D00D0BC,	"source",	0);
	create_insn	(x=0X7D00D0C2);
	op_plain_offset	(x,	1,	0X7D04F100);
	op_plain_offset	(x,	129,	0X7D04F100);
	create_insn	(x=0X7D00D0D2);
	op_plain_offset	(x,	1,	0X7D04F100);
	op_plain_offset	(x,	129,	0X7D04F100);
	create_insn	(0X7D00D0DC);
	create_insn	(0X7D00D0E2);
	create_insn	(0X7D00D0EC);
	make_array	(0X7D00D0F6,	0X2);
	create_dword	(x=0X7D00D0F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00D0FC);
	create_dword	(0X7D00D100);
	create_insn	(0X7D00D104);
	set_name	(0X7D00D104,	"tee_pobj_release");
	create_insn	(x=0X7D00D11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D11E);
	op_plain_offset	(x,	1,	0X7D04F100);
	op_plain_offset	(x,	129,	0X7D04F100);
	set_cmt	(0X7D00D124,	"ptr",	0);
	set_cmt	(0X7D00D12A,	"ptr",	0);
	create_insn	(0X7D00D132);
	create_insn	(0X7D00D136);
	make_array	(0X7D00D13A,	0X2);
	create_dword	(x=0X7D00D13C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00D140);
	create_insn	(0X7D00D144);
	set_name	(0X7D00D144,	"tee_pobj_rename");
	set_cmt	(0X7D00D156,	"size",	0);
	set_cmt	(0X7D00D160,	"source",	0);
	set_cmt	(0X7D00D162,	"num",	0);
	set_cmt	(0X7D00D168,	"ptr",	0);
	create_insn	(0X7D00D176);
	create_insn	(0X7D00D17A);
	create_insn	(0X7D00D17E);
	make_array	(0X7D00D182,	0X2);
	create_dword	(0X7D00D184);
	create_dword	(0X7D00D188);
	create_dword	(0X7D00D18C);
	create_insn	(0X7D00D190);
	set_name	(0X7D00D190,	"tee_time_ta_set_offs");
	create_insn	(x=0X7D00D196);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D19E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D1AE,	"m2",	0);
	set_cmt	(0X7D00D1B0,	"m1",	0);
	set_cmt	(0X7D00D1B2,	"n",	0);
	create_insn	(x=0X7D00D1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D1BE);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D1D4);
	set_cmt	(0X7D00D1D8,	"ptr",	0);
	create_insn	(0X7D00D1D8);
	set_cmt	(0X7D00D1E0,	"size",	0);
	create_insn	(x=0X7D00D204);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D210);
	create_dword	(x=0X7D00D218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D21C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00D220);
	create_insn	(x=0X7D00D224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00D224,	"tee_time_get_ta_time");
	create_insn	(x=0X7D00D22E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D23C,	"m2",	0);
	set_cmt	(0X7D00D23E,	"m1",	0);
	set_cmt	(0X7D00D240,	"n",	0);
	set_cmt	(0X7D00D24C,	"time",	0);
	create_insn	(0X7D00D258);
	create_insn	(0X7D00D25C);
	create_insn	(x=0X7D00D260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D264);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D288);
	create_insn	(0X7D00D290);
	create_insn	(0X7D00D2B6);
	create_dword	(x=0X7D00D2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D2D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00D2D8);
	create_dword	(0X7D00D2DC);
	create_insn	(0X7D00D2E0);
	set_name	(0X7D00D2E0,	"tee_time_set_ta_time");
	set_cmt	(0X7D00D2EE,	"time",	0);
	create_insn	(x=0X7D00D2EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D300);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D30E);
	create_insn	(x=0X7D00D31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D32A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D32E);
	create_insn	(x=0X7D00D330);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D33A);
	create_insn	(x=0X7D00D340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D34A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D34E,	"uuid",	0);
	set_cmt	(0X7D00D350,	"offs",	0);
	set_cmt	(0X7D00D352,	"positive",	0);
	create_insn	(x=0X7D00D354);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D35C);
	make_array	(0X7D00D362,	0X2);
	create_dword	(0X7D00D364);
	create_insn	(0X7D00D368);
	set_name	(0X7D00D368,	"gic_op_disable");
	create_insn	(x=0X7D00D372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D380);
	create_insn	(x=0X7D00D382);
	op_hex		(x,	1);
	make_array	(0X7D00D396,	0X2);
	create_dword	(x=0X7D00D398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D39C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00D3A0);
	set_name	(0X7D00D3A0,	"gic_op_enable");
	create_insn	(x=0X7D00D3AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D3B8);
	create_insn	(x=0X7D00D3BA);
	op_hex		(x,	1);
	make_array	(0X7D00D3CE,	0X2);
	create_dword	(x=0X7D00D3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D3D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00D3D8);
	set_name	(0X7D00D3D8,	"gic_op_add");
	create_insn	(x=0X7D00D3E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D3E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D3F0);
	create_insn	(x=0X7D00D3F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D41C);
	op_hex		(x,	1);
	make_array	(0X7D00D44A,	0X2);
	create_dword	(x=0X7D00D44C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00D454);
	set_name	(0X7D00D454,	"gic_init_base_addr");
	create_insn	(x=0X7D00D47C);
	op_hex		(x,	1);
	create_insn	(0X7D00D488);
	create_insn	(x=0X7D00D49C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00D4A2,	0X2);
	create_dword	(x=0X7D00D4A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D00D4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00D4DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00D4E0);
	set_name	(0X7D00D4E0,	"flush_dcache_area");
	set_cmt	(0X7D00D4EC,	"op",	0);
	set_cmt	(0X7D00D4EE,	"va",	0);
	set_cmt	(0X7D00D4F0,	"len",	0);
	set_cmt	(0X7D00D4F8,	"va",	0);
	set_cmt	(0X7D00D4FA,	"len",	0);
	set_cmt	(0X7D00D4FC,	"op",	0);
	create_insn	(0X7D00D506);
	make_array	(0X7D00D50A,	0X2);
	create_dword	(0X7D00D50C);
	create_insn	(0X7D00D510);
	set_name	(0X7D00D510,	"dsp_chunk_load");
	set_cmt	(0X7D00D514,	"fmt",	0);
	create_insn	(x=0X7D00D518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D528);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D52A,	"flags",	0);
	set_cmt	(0X7D00D52E,	"uaddr",	0);
	set_cmt	(0X7D00D530,	"len",	0);
	set_cmt	(0X7D00D532,	"utc",	0);
	create_insn	(x=0X7D00D53E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D540,	"level",	0);
	create_insn	(x=0X7D00D546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D548,	"line",	0);
	set_cmt	(0X7D00D54C,	"level_ok",	0);
	create_insn	(x=0X7D00D556);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D558,	"flags",	0);
	set_cmt	(0X7D00D55C,	"uaddr",	0);
	set_cmt	(0X7D00D55E,	"len",	0);
	set_cmt	(0X7D00D560,	"utc",	0);
	set_cmt	(0X7D00D56A,	"source",	0);
	set_cmt	(0X7D00D56C,	"num",	0);
	set_cmt	(0X7D00D56E,	"destination",	0);
	create_insn	(x=0X7D00D580);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D582,	"level",	0);
	create_insn	(x=0X7D00D588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D58A,	"line",	0);
	set_cmt	(0X7D00D58E,	"level_ok",	0);
	create_insn	(0X7D00D596);
	create_insn	(x=0X7D00D5A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D5BA);
	create_insn	(0X7D00D5BE);
	set_cmt	(0X7D00D5CA,	"pa",	0);
	set_cmt	(0X7D00D5CC,	"m",	0);
	create_insn	(x=0X7D00D5D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D5DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D5EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D5EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D5F8);
	set_cmt	(0X7D00D5FC,	"m",	0);
	set_cmt	(0X7D00D606,	"pa",	0);
	set_cmt	(0X7D00D614,	"milliseconds_delay",	0);
	create_insn	(x=0X7D00D61A);
	op_hex		(x,	1);
	create_insn	(0X7D00D626);
	set_cmt	(0X7D00D632,	"pa",	0);
	set_cmt	(0X7D00D634,	"m",	0);
	create_insn	(x=0X7D00D63C);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D648);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D65A,	"line",	0);
	set_cmt	(0X7D00D660,	"level",	0);
	set_cmt	(0X7D00D662,	"level_ok",	0);
	create_insn	(0X7D00D66C);
	create_insn	(x=0X7D00D670);
	op_hex		(x,	1);
	set_cmt	(0X7D00D67C,	"pa",	0);
	set_cmt	(0X7D00D67E,	"m",	0);
	create_insn	(x=0X7D00D680);
	op_hex		(x,	1);
	set_cmt	(0X7D00D696,	"milliseconds_delay",	0);
	create_insn	(x=0X7D00D69C);
	op_hex		(x,	1);
	create_insn	(0X7D00D6AA);
	set_cmt	(0X7D00D6AE,	"pa",	0);
	create_insn	(0X7D00D6AE);
	set_cmt	(0X7D00D6B0,	"m",	0);
	set_cmt	(0X7D00D6BA,	"source",	0);
	set_cmt	(0X7D00D6BC,	"num",	0);
	create_insn	(x=0X7D00D6CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D6D0,	"level",	0);
	create_insn	(x=0X7D00D6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D6D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D6DA,	"line",	0);
	set_cmt	(0X7D00D6DE,	"level_ok",	0);
	create_insn	(0X7D00D6E8);
	create_dword	(x=0X7D00D6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D6F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D6FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D700);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00D704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D70C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D710);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00D714);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00D718);
	create_insn	(x=0X7D00D720);
	op_dec		(x,	1);
	set_cmt	(0X7D00D72A,	"milliseconds_delay",	0);
	make_array	(0X7D00D742,	0X2);
	create_dword	(x=0X7D00D744);
	op_dec		(x,	0);
	create_insn	(0X7D00D748);
	set_cmt	(0X7D00D750,	"pa",	0);
	create_insn	(x=0X7D00D750);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D00D752,	"m",	0);
	set_cmt	(0X7D00D75A,	"m",	0);
	set_cmt	(0X7D00D75C,	"pa",	0);
	create_insn	(x=0X7D00D75C);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D00D764,	"m",	0);
	set_cmt	(0X7D00D766,	"pa",	0);
	create_insn	(x=0X7D00D766);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	create_insn	(x=0X7D00D770);
	op_hex		(x,	1);
	create_dword	(x=0X7D00D78C);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D00D790);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D00D794);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_insn	(0X7D00D798);
	set_cmt	(0X7D00D7A0,	"pa",	0);
	create_insn	(x=0X7D00D7A0);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D00D7A2,	"m",	0);
	set_cmt	(0X7D00D7AA,	"m",	0);
	set_cmt	(0X7D00D7AC,	"pa",	0);
	create_insn	(x=0X7D00D7AC);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D00D7B4,	"m",	0);
	set_cmt	(0X7D00D7B6,	"pa",	0);
	create_insn	(x=0X7D00D7B6);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	set_cmt	(0X7D00D7BE,	"m",	0);
	set_cmt	(0X7D00D7C0,	"pa",	0);
	create_insn	(x=0X7D00D7C0);
	op_enum		(x,	1,	GetEnum("eagle_memory_map"),0);
	create_insn	(x=0X7D00D7CA);
	op_hex		(x,	1);
	create_dword	(x=0X7D00D7F0);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D00D7F4);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D00D7F8);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_dword	(x=0X7D00D7FC);
	op_enum		(x,	0,	GetEnum("eagle_memory_map"),0);
	create_insn	(0X7D00D800);
	set_name	(0X7D00D800,	"unrd_set_binary");
	set_cmt	(0X7D00D808,	"m",	0);
	create_insn	(x=0X7D00D808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D826);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D828);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D830);
	create_insn	(x=0X7D00D83E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D842,	"line",	0);
	set_cmt	(0X7D00D846,	"fmt",	0);
	create_insn	(x=0X7D00D846);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D848,	"level",	0);
	set_cmt	(0X7D00D84A,	"level_ok",	0);
	set_cmt	(0X7D00D850,	"m",	0);
	create_insn	(x=0X7D00D850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D85C);
	create_insn	(x=0X7D00D868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D86A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D86C);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D874);
	create_insn	(x=0X7D00D87A);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D886);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D88A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D88E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D896);
	set_cmt	(0X7D00D8B6,	"num",	0);
	set_cmt	(0X7D00D8B8,	"destination",	0);
	set_cmt	(0X7D00D8BC,	"source",	0);
	set_cmt	(0X7D00D8C2,	"source",	0);
	set_cmt	(0X7D00D8C4,	"destination",	0);
	set_cmt	(0X7D00D8C8,	"num",	0);
	create_insn	(x=0X7D00D8DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D8DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D8E0,	"fmt",	0);
	create_insn	(x=0X7D00D8E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D8E2,	"line",	0);
	set_cmt	(0X7D00D8E6,	"level",	0);
	set_cmt	(0X7D00D8E8,	"level_ok",	0);
	set_cmt	(0X7D00D8EE,	"m",	0);
	create_insn	(x=0X7D00D8EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00D8FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D90C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D914);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00D918);
	set_name	(0X7D00D918,	"unrd_get_binary");
	set_cmt	(0X7D00D91E,	"m",	0);
	create_insn	(x=0X7D00D91E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00D936);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D93A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D942);
	create_insn	(x=0X7D00D950);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D952);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D954,	"line",	0);
	set_cmt	(0X7D00D958,	"fmt",	0);
	create_insn	(x=0X7D00D958);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D95A,	"level",	0);
	set_cmt	(0X7D00D95C,	"level_ok",	0);
	set_cmt	(0X7D00D962,	"m",	0);
	create_insn	(x=0X7D00D962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00D96E);
	create_insn	(x=0X7D00D97A);
	op_hex		(x,	1);
	create_insn	(x=0X7D00D980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D982);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D984);
	op_stkvar	(x,	1);
	create_insn	(0X7D00D98C);
	set_cmt	(0X7D00D9B0,	"num",	0);
	set_cmt	(0X7D00D9B2,	"destination",	0);
	set_cmt	(0X7D00D9B6,	"source",	0);
	create_insn	(x=0X7D00D9CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00D9CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00D9CE,	"fmt",	0);
	create_insn	(x=0X7D00D9CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00D9D0,	"line",	0);
	set_cmt	(0X7D00D9D4,	"level",	0);
	set_cmt	(0X7D00D9D6,	"level_ok",	0);
	set_cmt	(0X7D00D9DE,	"destination",	0);
	create_insn	(0X7D00D9DE);
	set_cmt	(0X7D00D9E0,	"source",	0);
	set_cmt	(0X7D00D9E4,	"num",	0);
	set_cmt	(0X7D00D9EA,	"m",	0);
	create_insn	(x=0X7D00D9EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00D9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00D9FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DA10);
	set_name	(0X7D00DA10,	"unrd_flush");
	set_cmt	(0X7D00DA14,	"m",	0);
	create_insn	(x=0X7D00DA14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DA1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DA20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DA22);
	op_stkvar	(x,	1);
	create_insn	(0X7D00DA2A);
	set_cmt	(0X7D00DA3A,	"m",	0);
	create_insn	(x=0X7D00DA3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DA44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DA46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DA48,	"line",	0);
	set_cmt	(0X7D00DA4C,	"fmt",	0);
	create_insn	(x=0X7D00DA4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DA4E,	"level",	0);
	set_cmt	(0X7D00DA50,	"level_ok",	0);
	set_cmt	(0X7D00DA56,	"m",	0);
	create_insn	(x=0X7D00DA56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00DA64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DA74);
	create_insn	(x=0X7D00DA76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DA78,	"m",	0);
	create_insn	(x=0X7D00DA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DA82,	"m",	0);
	create_insn	(x=0X7D00DA82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00DA90);
	set_cmt	(0X7D00DA92,	"size",	0);
	create_insn	(x=0X7D00DA9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DAA0,	"size",	0);
	create_insn	(x=0X7D00DAA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DAAC,	"m",	0);
	create_insn	(x=0X7D00DAAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00DAB6,	0X2);
	create_dword	(x=0X7D00DAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DAC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DAC8);
	set_cmt	(0X7D00DACA,	"m",	0);
	create_insn	(x=0X7D00DACA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DAD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DADE,	"ptr",	0);
	set_cmt	(0X7D00DAE4,	"ptr",	0);
	set_cmt	(0X7D00DAEE,	"m",	0);
	create_insn	(x=0X7D00DAEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00DAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DAFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DB04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DB08);
	set_name	(0X7D00DB08,	"unrd_alloc_handle");
	create_insn	(x=0X7D00DB0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB10,	"m",	0);
	create_insn	(x=0X7D00DB10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB26,	"m",	0);
	create_insn	(x=0X7D00DB26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00DB3E);
	create_insn	(x=0X7D00DB4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB4E,	"level",	0);
	set_cmt	(0X7D00DB50,	"fmt",	0);
	create_insn	(x=0X7D00DB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DB52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB54,	"line",	0);
	set_cmt	(0X7D00DB58,	"level_ok",	0);
	set_cmt	(0X7D00DB5E,	"m",	0);
	create_insn	(x=0X7D00DB5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB6A,	"size",	0);
	create_insn	(0X7D00DB6A);
	create_insn	(x=0X7D00DB6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DB86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DB88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DB8A,	"fmt",	0);
	create_insn	(x=0X7D00DB8A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DB8C,	"line",	0);
	set_cmt	(0X7D00DB90,	"level",	0);
	set_cmt	(0X7D00DB92,	"level_ok",	0);
	set_cmt	(0X7D00DBA2,	"ptr",	0);
	set_cmt	(0X7D00DBB0,	"m",	0);
	create_insn	(x=0X7D00DBB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D00DBBE,	0X2);
	create_dword	(x=0X7D00DBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DBC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DBCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DBD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DBD8);
	set_name	(0X7D00DBD8,	"unrd_release_handle");
	set_cmt	(0X7D00DBDC,	"m",	0);
	create_insn	(x=0X7D00DBDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DBE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DBE6,	"level",	0);
	set_cmt	(0X7D00DBE8,	"fmt",	0);
	create_insn	(x=0X7D00DBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DBEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DBEC,	"line",	0);
	set_cmt	(0X7D00DBF0,	"level_ok",	0);
	set_cmt	(0X7D00DBF6,	"m",	0);
	create_insn	(x=0X7D00DBF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DC02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DC0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC0E,	"ptr",	0);
	set_cmt	(0X7D00DC18,	"m",	0);
	create_insn	(x=0X7D00DC18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00DC24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DC2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DC34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DC38);
	set_name	(0X7D00DC38,	"is_context_head_valid");
	create_insn	(x=0X7D00DC3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC40,	"level",	0);
	set_cmt	(0X7D00DC42,	"fmt",	0);
	create_insn	(x=0X7D00DC42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DC44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC46,	"line",	0);
	set_cmt	(0X7D00DC48,	"level_ok",	0);
	set_cmt	(0X7D00DC4E,	"m1",	0);
	create_insn	(0X7D00DC52);
	create_insn	(x=0X7D00DC56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC5A,	"n",	0);
	create_insn	(x=0X7D00DC64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC66,	"level",	0);
	set_cmt	(0X7D00DC68,	"fmt",	0);
	create_insn	(x=0X7D00DC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DC6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC6C,	"line",	0);
	set_cmt	(0X7D00DC6E,	"level_ok",	0);
	create_insn	(0X7D00DC78);
	create_insn	(x=0X7D00DC7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DC80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DC82);
	op_stkvar	(x,	1);
	create_insn	(0X7D00DC88);
	create_insn	(x=0X7D00DC92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DC94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DC96,	"line",	0);
	set_cmt	(0X7D00DC98,	"fmt",	0);
	create_insn	(x=0X7D00DC98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DC9A,	"level",	0);
	set_cmt	(0X7D00DC9C,	"level_ok",	0);
	create_insn	(0X7D00DCA6);
	create_insn	(x=0X7D00DCAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DCB0,	"level",	0);
	set_cmt	(0X7D00DCB2,	"fmt",	0);
	create_insn	(x=0X7D00DCB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DCB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DCB6,	"level_ok",	0);
	set_cmt	(0X7D00DCB8,	"line",	0);
	create_insn	(x=0X7D00DCBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DCC0,	"level",	0);
	set_cmt	(0X7D00DCC2,	"fmt",	0);
	create_insn	(x=0X7D00DCC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DCC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DCC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DCCA,	"line",	0);
	set_cmt	(0X7D00DCCC,	"level_ok",	0);
	create_insn	(0X7D00DCD4);
	create_dword	(x=0X7D00DCDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DCE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DCE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00DCE4,	"m2");
	create_dword	(x=0X7D00DCE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DCEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DCF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00DCF4);
	create_dword	(x=0X7D00DCF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DCFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DD00);
	set_name	(0X7D00DD00,	"item_size");
	create_insn	(x=0X7D00DD04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DD06,	"level",	0);
	set_cmt	(0X7D00DD08,	"fmt",	0);
	create_insn	(x=0X7D00DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DD0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DD0C,	"line",	0);
	set_cmt	(0X7D00DD0E,	"level_ok",	0);
	create_insn	(0X7D00DD1A);
	create_insn	(x=0X7D00DD1E);
	op_hex		(x,	1);
	create_insn	(x=0X7D00DD24);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D00DD28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DD2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DD30);
	set_name	(0X7D00DD30,	"hsearch_item");
	create_insn	(x=0X7D00DD40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_insn	(x=0X7D00DD42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DD44,	"line",	0);
	set_cmt	(0X7D00DD48,	"fmt",	0);
	create_insn	(x=0X7D00DD48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DD4A,	"level",	0);
	set_cmt	(0X7D00DD4C,	"level_ok",	0);
	create_insn	(0X7D00DD56);
	create_insn	(x=0X7D00DD60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DD6A,	"level",	0);
	set_cmt	(0X7D00DD6C,	"fmt",	0);
	create_insn	(x=0X7D00DD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DD70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DD72,	"line",	0);
	set_cmt	(0X7D00DD76,	"level_ok",	0);
	create_insn	(0X7D00DD7E);
	set_cmt	(0X7D00DD80,	"n",	0);
	set_cmt	(0X7D00DD86,	"m2",	0);
	set_cmt	(0X7D00DD88,	"m1",	0);
	create_insn	(x=0X7D00DD96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DD98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DD9A);
	op_stkvar	(x,	1);
	create_insn	(0X7D00DDA2);
	create_insn	(0X7D00DDB2);
	create_dword	(x=0X7D00DDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DDBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DDC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DDCC);
	set_name	(0X7D00DDCC,	"items_complete");
	create_insn	(x=0X7D00DDD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DDD2,	"level",	0);
	set_cmt	(0X7D00DDD4,	"fmt",	0);
	create_insn	(x=0X7D00DDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DDD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DDD8,	"line",	0);
	set_cmt	(0X7D00DDDC,	"level_ok",	0);
	create_insn	(0X7D00DDE8);
	make_array	(0X7D00DE06,	0X2);
	create_dword	(x=0X7D00DE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DE0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D00DE10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D00DE10,	"unrd_get_head_offset");
	set_cmt	(0X7D00DE14,	"level",	0);
	set_cmt	(0X7D00DE16,	"fmt",	0);
	create_insn	(x=0X7D00DE16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DE18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DE1A,	"line",	0);
	set_cmt	(0X7D00DE1C,	"level_ok",	0);
	create_insn	(x=0X7D00DE26);
	op_stkvar	(x,	1);
	make_array	(0X7D00DE2A,	0X2);
	create_dword	(x=0X7D00DE2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00DE30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00DE34);
	set_name	(0X7D00DE34,	"read_context");
	create_insn	(x=0X7D00DE3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DE40,	"level",	0);
	set_cmt	(0X7D00DE42,	"fmt",	0);
	create_insn	(x=0X7D00DE42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DE44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DE46,	"line",	0);
	set_cmt	(0X7D00DE4A,	"level_ok",	0);
	create_insn	(x=0X7D00DE56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DE7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DE7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DE86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DE88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00DE8E);
	create_insn	(x=0X7D00DE90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DE98,	"num",	0);
	set_cmt	(0X7D00DE9A,	"destination",	0);
	create_insn	(x=0X7D00DE9A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DE9C,	"source",	0);
	create_insn	(x=0X7D00DEA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DEAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DEAE,	"level",	0);
	set_cmt	(0X7D00DEB0,	"fmt",	0);
	create_insn	(x=0X7D00DEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DEB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DEB4,	"line",	0);
	set_cmt	(0X7D00DEB6,	"level_ok",	0);
	create_insn	(0X7D00DEBE);
	create_insn	(x=0X7D00DEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DEE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DEE8,	"line",	0);
	set_cmt	(0X7D00DEEA,	"fmt",	0);
	create_insn	(x=0X7D00DEEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DEF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DEF4,	"level",	0);
	set_cmt	(0X7D00DEF6,	"level_ok",	0);
	create_insn	(0X7D00DEFE);
	create_insn	(x=0X7D00DF00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DF08,	"source",	0);
	set_cmt	(0X7D00DF0A,	"destination",	0);
	create_insn	(x=0X7D00DF0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DF0C,	"num",	0);
	create_insn	(x=0X7D00DF12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF1C,	"level",	0);
	set_cmt	(0X7D00DF1E,	"fmt",	0);
	create_insn	(x=0X7D00DF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF22,	"line",	0);
	set_cmt	(0X7D00DF24,	"level_ok",	0);
	create_insn	(0X7D00DF2E);
	create_insn	(x=0X7D00DF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF56,	"level",	0);
	set_cmt	(0X7D00DF58,	"fmt",	0);
	create_insn	(x=0X7D00DF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF5C,	"level_ok",	0);
	set_cmt	(0X7D00DF5E,	"line",	0);
	create_insn	(x=0X7D00DF6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF70,	"level",	0);
	set_cmt	(0X7D00DF72,	"fmt",	0);
	create_insn	(x=0X7D00DF72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DF76,	"level_ok",	0);
	set_cmt	(0X7D00DF78,	"line",	0);
	create_insn	(0X7D00DF86);
	create_insn	(x=0X7D00DF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DF9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFC4);
	op_stkvar	(x,	1);
	create_insn	(0X7D00DFC8);
	create_insn	(x=0X7D00DFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00DFE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DFE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DFE8);
	op_stkvar	(x,	1);
	create_insn	(0X7D00DFF0);
	create_insn	(x=0X7D00DFF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00DFF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00DFF8,	"line",	0);
	set_cmt	(0X7D00DFFC,	"fmt",	0);
	create_insn	(x=0X7D00DFFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00DFFE,	"level",	0);
	set_cmt	(0X7D00E000,	"level_ok",	0);
	create_insn	(0X7D00E00C);
	create_insn	(x=0X7D00E01A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E01C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00E028);
	create_insn	(x=0X7D00E030);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E034);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E046);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E048,	"level",	0);
	create_insn	(x=0X7D00E050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E052);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E054,	"line",	0);
	set_cmt	(0X7D00E058,	"level_ok",	0);
	create_insn	(0X7D00E060);
	create_insn	(x=0X7D00E072);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E074,	"level",	0);
	set_cmt	(0X7D00E076,	"fmt",	0);
	create_insn	(x=0X7D00E076);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E07A,	"line",	0);
	set_cmt	(0X7D00E07C,	"level_ok",	0);
	create_insn	(x=0X7D00E082);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E086,	"fmt",	0);
	create_insn	(x=0X7D00E086);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E088,	"line",	0);
	create_insn	(x=0X7D00E08E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E090,	"level",	0);
	set_cmt	(0X7D00E092,	"level_ok",	0);
	create_insn	(0X7D00E09A);
	create_insn	(x=0X7D00E09C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E09E,	"level",	0);
	set_cmt	(0X7D00E0A0,	"fmt",	0);
	create_insn	(x=0X7D00E0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E0A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E0A4,	"line",	0);
	set_cmt	(0X7D00E0A8,	"level_ok",	0);
	create_insn	(0X7D00E0B0);
	create_insn	(0X7D00E0BC);
	create_insn	(0X7D00E0CC);
	create_dword	(x=0X7D00E0D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E0FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00E100);
	create_dword	(x=0X7D00E104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E10C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E114);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E11C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E124);
	set_name	(0X7D00E124,	"hdelete_item");
	create_insn	(x=0X7D00E12C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E12E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E130);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E138);
	create_insn	(x=0X7D00E148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E14A,	"level",	0);
	set_cmt	(0X7D00E14C,	"fmt",	0);
	create_insn	(x=0X7D00E14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E150,	"line",	0);
	set_cmt	(0X7D00E154,	"level_ok",	0);
	create_insn	(0X7D00E15E);
	set_cmt	(0X7D00E162,	"source",	0);
	set_cmt	(0X7D00E166,	"num",	0);
	set_cmt	(0X7D00E168,	"destination",	0);
	create_insn	(x=0X7D00E184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E188,	"line",	0);
	set_cmt	(0X7D00E18C,	"fmt",	0);
	create_insn	(x=0X7D00E18C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E18E,	"level",	0);
	set_cmt	(0X7D00E190,	"level_ok",	0);
	make_array	(0X7D00E19E,	0X2);
	create_dword	(x=0X7D00E1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E1B0);
	set_name	(0X7D00E1B0,	"unrd_select_item_addr");
	create_insn	(x=0X7D00E1BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E1C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E1CE,	"line",	0);
	set_cmt	(0X7D00E1D0,	"fmt",	0);
	create_insn	(x=0X7D00E1D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E1D2,	"level",	0);
	set_cmt	(0X7D00E1D4,	"level_ok",	0);
	create_dword	(x=0X7D00E1E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E1EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E1F0);
	set_name	(0X7D00E1F0,	"unrd_get_item");
	create_insn	(x=0X7D00E1FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E1FE);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E206);
	create_insn	(x=0X7D00E20E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E212,	"line",	0);
	set_cmt	(0X7D00E216,	"fmt",	0);
	create_insn	(x=0X7D00E216);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E218,	"level",	0);
	set_cmt	(0X7D00E21A,	"level_ok",	0);
	create_insn	(0X7D00E226);
	create_insn	(x=0X7D00E232);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E236,	"level",	0);
	set_cmt	(0X7D00E238,	"fmt",	0);
	create_insn	(x=0X7D00E238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E23A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E23C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E23E,	"line",	0);
	set_cmt	(0X7D00E242,	"level_ok",	0);
	create_insn	(0X7D00E24A);
	set_cmt	(0X7D00E24E,	"num",	0);
	create_insn	(x=0X7D00E252);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E256);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E25E,	"destination",	0);
	create_insn	(0X7D00E25E);
	set_cmt	(0X7D00E260,	"source",	0);
	create_dword	(x=0X7D00E26C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E270);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E274);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E27C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E280);
	set_name	(0X7D00E280,	"unrd_set_item");
	create_insn	(x=0X7D00E28A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E28E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E296);
	create_insn	(x=0X7D00E29E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E2A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E2A2);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E2AA);
	create_insn	(x=0X7D00E2BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E2BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E2C0);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E2C8);
	create_insn	(x=0X7D00E2D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E2D6,	"line",	0);
	set_cmt	(0X7D00E2DA,	"fmt",	0);
	create_insn	(x=0X7D00E2DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E2DC,	"level",	0);
	set_cmt	(0X7D00E2DE,	"level_ok",	0);
	create_insn	(0X7D00E2EA);
	set_cmt	(0X7D00E2EC,	"num",	0);
	set_cmt	(0X7D00E2EE,	"destination",	0);
	set_cmt	(0X7D00E2F0,	"source",	0);
	make_array	(0X7D00E30E,	0X2);
	create_dword	(x=0X7D00E310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E31C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E324);
	set_name	(0X7D00E324,	"unrd_flush_context");
	create_insn	(x=0X7D00E32A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E32C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E32E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00E336);
	create_insn	(x=0X7D00E34A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E34C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E34E,	"line",	0);
	set_cmt	(0X7D00E352,	"fmt",	0);
	create_insn	(x=0X7D00E352);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E354,	"level",	0);
	set_cmt	(0X7D00E356,	"level_ok",	0);
	create_insn	(0X7D00E35E);
	create_insn	(x=0X7D00E386);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E38A);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E39C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E39E,	"level",	0);
	set_cmt	(0X7D00E3A0,	"fmt",	0);
	create_insn	(x=0X7D00E3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E3A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E3A4,	"line",	0);
	create_insn	(x=0X7D00E3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E3AA,	"level_ok",	0);
	create_dword	(x=0X7D00E3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E3BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E3C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E3C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E3C8);
	create_insn	(x=0X7D00E3D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E45E);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E462);
	op_hex		(x,	1);
	create_insn	(x=0X7D00E46C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00E486);
	make_array	(0X7D00E48A,	0X2);
	create_dword	(x=0X7D00E48C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E490);
	set_name	(0X7D00E490,	"tee_algo_to_sasi_hashindex");
	create_insn	(x=0X7D00E4A0);
	op_dec		(x,	1);
	create_insn	(0X7D00E4B2);
	create_insn	(0X7D00E4CA);
	create_insn	(0X7D00E4DA);
	create_insn	(0X7D00E4FC);
	create_insn	(0X7D00E510);
	create_insn	(0X7D00E528);
	create_insn	(0X7D00E53C);
	create_insn	(0X7D00E540);
	create_insn	(0X7D00E544);
	create_insn	(0X7D00E548);
	create_insn	(0X7D00E54C);
	create_insn	(0X7D00E550);
	create_insn	(0X7D00E554);
	create_insn	(0X7D00E558);
	create_insn	(0X7D00E55C);
	create_insn	(0X7D00E560);
	create_insn	(0X7D00E56E);
	create_insn	(0X7D00E576);
	make_array	(0X7D00E57A,	0X2);
	create_dword	(0X7D00E57C);
	create_dword	(0X7D00E580);
	create_dword	(0X7D00E584);
	create_dword	(0X7D00E588);
	create_dword	(0X7D00E58C);
	create_dword	(0X7D00E590);
	create_dword	(0X7D00E594);
	create_dword	(0X7D00E598);
	create_dword	(0X7D00E59C);
	create_dword	(0X7D00E5A0);
	create_dword	(0X7D00E5A4);
	create_dword	(0X7D00E5A8);
	create_dword	(0X7D00E5AC);
	create_dword	(0X7D00E5B0);
	create_dword	(0X7D00E5B4);
	create_dword	(0X7D00E5B8);
	create_insn	(0X7D00E5BC);
	set_name	(0X7D00E5BC,	"sasi_hash_get_ctx_size");
	create_insn	(0X7D00E5D0);
	create_dword	(0X7D00E5D4);
	create_insn	(0X7D00E5D8);
	set_name	(0X7D00E5D8,	"sasi_alloc_dsa_keypair");
	create_insn	(x=0X7D00E5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E5DC);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00E5E2,	0X2);
	create_dword	(x=0X7D00E5E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E5E8);
	set_name	(0X7D00E5E8,	"sasi_alloc_dsa_public_key");
	create_insn	(x=0X7D00E5EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E5EC);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00E5F2,	0X2);
	create_dword	(x=0X7D00E5F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E5F8);
	set_name	(0X7D00E5F8,	"sasi_gen_dsa_key");
	create_insn	(x=0X7D00E5FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E5FC);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_dword	(x=0X7D00E604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E608);
	set_name	(0X7D00E608,	"sasi_dsa_sign");
	create_insn	(x=0X7D00E60A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E60E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E614);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00E61E,	0X2);
	create_dword	(x=0X7D00E620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E624);
	set_name	(0X7D00E624,	"sasi_dsa_verify");
	create_insn	(x=0X7D00E626);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E62A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E62E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E630);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00E63A,	0X2);
	create_dword	(x=0X7D00E63C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00E640);
	set_name	(0X7D00E640,	"ECC_Get_CRYS_DomainId");
	set_cmt	(0X7D00E642,	"switch 5 cases ",	0);
	set_cmt	(0X7D00E648,	"switch jump",	0);
	set_cmt	(0X7D00E64C,	"jump table for switch statement",	0);
	create_byte	(0X7D00E64C);
	set_name	(0X7D00E64C,	"jpt_7D00E648");
	create_byte	(0X7D00E64D);
	create_byte	(0X7D00E64E);
	create_byte	(0X7D00E64F);
	create_byte	(0X7D00E650);
	set_cmt	(0X7D00E652,	"jumptable 7D00E648 case 1",	1);
	create_insn	(0X7D00E652);
	set_cmt	(0X7D00E656,	"jumptable 7D00E648 case 2",	1);
	create_insn	(0X7D00E656);
	set_cmt	(0X7D00E65A,	"jumptable 7D00E648 case 3",	1);
	create_insn	(0X7D00E65A);
	set_cmt	(0X7D00E65E,	"jumptable 7D00E648 case 4",	1);
	create_insn	(0X7D00E65E);
	set_cmt	(0X7D00E662,	"jumptable 7D00E648 case 5",	1);
	create_insn	(0X7D00E662);
	create_insn	(0X7D00E66A);
	set_cmt	(0X7D00E66E,	"jumptable 7D00E648 default case",	1);
	create_insn	(0X7D00E66E);
	set_name	(0X7D00E66E,	"def_7D00E648");
	make_array	(0X7D00E672,	0X2);
	create_dword	(0X7D00E674);
	create_dword	(0X7D00E678);
	create_insn	(0X7D00E67C);
	set_name	(0X7D00E67C,	"SASI_Get_Hash_Index_From_Payload_Size");
	create_insn	(0X7D00E68E);
	create_insn	(0X7D00E69A);
	create_insn	(0X7D00E69E);
	create_insn	(0X7D00E6A6);
	create_insn	(0X7D00E6AA);
	create_dword	(0X7D00E6B4);
	create_insn	(0X7D00E6B8);
	set_name	(0X7D00E6B8,	"sasi_prng_read");
	set_cmt	(0X7D00E6BC,	"out_ptr",	0);
	set_cmt	(0X7D00E6BE,	"rndState_ptr",	0);
	create_insn	(x=0X7D00E6BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D00E6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00E6D0,	"rndState_ptr");
	create_dword	(0X7D00E6D4);
	create_insn	(0X7D00E6D8);
	set_name	(0X7D00E6D8,	"sasi_bignum_bin2bn");
	set_cmt	(0X7D00E6DE,	"dest",	0);
	set_cmt	(0X7D00E6E4,	"buffer",	0);
	set_cmt	(0X7D00E6E6,	"buffer_len",	0);
	set_cmt	(0X7D00E6E8,	"negative",	0);
	create_insn	(0X7D00E6F2);
	make_array	(0X7D00E6F6,	0X2);
	create_dword	(0X7D00E6F8);
	create_insn	(0X7D00E6FC);
	set_name	(0X7D00E6FC,	"sasi_alloc_ecc_keypair");
	set_cmt	(0X7D00E708,	"s",	0);
	set_cmt	(0X7D00E710,	"ptr",	0);
	set_cmt	(0X7D00E716,	"ptr",	0);
	set_cmt	(0X7D00E71C,	"ptr",	0);
	set_cmt	(0X7D00E726,	"s",	0);
	create_insn	(0X7D00E726);
	set_cmt	(0X7D00E730,	"s",	0);
	create_dword	(0X7D00E740);
	create_insn	(0X7D00E744);
	set_name	(0X7D00E744,	"sasi_alloc_ecc_public_key");
	set_cmt	(0X7D00E750,	"s",	0);
	set_cmt	(0X7D00E758,	"ptr",	0);
	set_cmt	(0X7D00E75E,	"ptr",	0);
	set_cmt	(0X7D00E768,	"s",	0);
	create_insn	(0X7D00E768);
	make_array	(0X7D00E776,	0X2);
	create_dword	(0X7D00E778);
	create_insn	(0X7D00E77C);
	set_cmt	(0X7D00E788,	"nmemb",	0);
	set_cmt	(0X7D00E78A,	"size",	0);
	create_insn	(x=0X7D00E78C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E78E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E798,	"size",	0);
	set_cmt	(0X7D00E79A,	"nmemb",	0);
	set_cmt	(0X7D00E7A4,	"buffer",	0);
	set_cmt	(0X7D00E7A6,	"buffer_len",	0);
	create_insn	(x=0X7D00E7A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E7A8,	"n",	0);
	set_cmt	(0X7D00E7B0,	"buffer",	0);
	set_cmt	(0X7D00E7B2,	"buffer_len",	0);
	create_insn	(x=0X7D00E7B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E7B4,	"n",	0);
	create_insn	(x=0X7D00E7BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E7C0,	"ExponentSize",	0);
	create_insn	(x=0X7D00E7C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E7C4,	"ModulusSize",	0);
	create_insn	(x=0X7D00E7C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E7C6,	"UserPubKey_ptr",	0);
	set_cmt	(0X7D00E7C8,	"Exponent_ptr",	0);
	set_cmt	(0X7D00E7CA,	"Modulus_ptr",	0);
	create_insn	(0X7D00E7DA);
	create_insn	(0X7D00E7DE);
	create_insn	(0X7D00E7E2);
	set_cmt	(0X7D00E7E4,	"ptr",	0);
	set_cmt	(0X7D00E7EC,	"ptr",	0);
	create_dword	(0X7D00E7F8);
	create_dword	(0X7D00E7FC);
	create_insn	(0X7D00E800);
	set_name	(0X7D00E800,	"sasi_do_dh_shared_secret");
	set_cmt	(0X7D00E80E,	"nmemb",	0);
	set_cmt	(0X7D00E810,	"size",	0);
	create_insn	(x=0X7D00E812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E81A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E826);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E828,	"level",	0);
	set_cmt	(0X7D00E82A,	"fmt",	0);
	create_insn	(x=0X7D00E82A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E82C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E82E,	"line",	0);
	set_cmt	(0X7D00E832,	"level_ok",	0);
	set_cmt	(0X7D00E83C,	"nmemb",	0);
	create_insn	(0X7D00E83C);
	set_cmt	(0X7D00E83E,	"size",	0);
	create_insn	(x=0X7D00E84A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E84C,	"level",	0);
	set_cmt	(0X7D00E84E,	"fmt",	0);
	create_insn	(x=0X7D00E84E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E852,	"line",	0);
	set_cmt	(0X7D00E856,	"level_ok",	0);
	set_cmt	(0X7D00E86A,	"nmemb",	0);
	create_insn	(0X7D00E86A);
	set_cmt	(0X7D00E86C,	"size",	0);
	create_insn	(x=0X7D00E878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E87A,	"level",	0);
	set_cmt	(0X7D00E87C,	"fmt",	0);
	create_insn	(x=0X7D00E87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E87E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E880,	"line",	0);
	set_cmt	(0X7D00E884,	"level_ok",	0);
	set_cmt	(0X7D00E896,	"nmemb",	0);
	create_insn	(0X7D00E896);
	set_cmt	(0X7D00E898,	"size",	0);
	create_insn	(x=0X7D00E8A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8A4,	"level",	0);
	set_cmt	(0X7D00E8A6,	"fmt",	0);
	create_insn	(x=0X7D00E8A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E8A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8AA,	"line",	0);
	set_cmt	(0X7D00E8AE,	"level_ok",	0);
	set_cmt	(0X7D00E8BE,	"nmemb",	0);
	create_insn	(0X7D00E8BE);
	set_cmt	(0X7D00E8C0,	"size",	0);
	create_insn	(x=0X7D00E8CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8CC,	"level",	0);
	set_cmt	(0X7D00E8CE,	"fmt",	0);
	create_insn	(x=0X7D00E8CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E8D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8D2,	"line",	0);
	set_cmt	(0X7D00E8D6,	"level_ok",	0);
	set_cmt	(0X7D00E8E4,	"size",	0);
	create_insn	(0X7D00E8E4);
	set_cmt	(0X7D00E8E6,	"nmemb",	0);
	create_insn	(x=0X7D00E8F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8F2,	"level",	0);
	set_cmt	(0X7D00E8F4,	"fmt",	0);
	create_insn	(x=0X7D00E8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E8F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E8F8,	"line",	0);
	set_cmt	(0X7D00E8FC,	"level_ok",	0);
	set_cmt	(0X7D00E908,	"buffer",	0);
	create_insn	(0X7D00E908);
	set_cmt	(0X7D00E90A,	"buffer_len",	0);
	create_insn	(x=0X7D00E90A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E90C,	"n",	0);
	create_insn	(x=0X7D00E916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E918);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E91A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E922,	"buffer",	0);
	create_insn	(0X7D00E922);
	set_cmt	(0X7D00E924,	"buffer_len",	0);
	create_insn	(x=0X7D00E924);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E926,	"n",	0);
	create_insn	(x=0X7D00E930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E932);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E934);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E93C,	"buffer",	0);
	create_insn	(0X7D00E93C);
	set_cmt	(0X7D00E93E,	"buffer_len",	0);
	create_insn	(x=0X7D00E93E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E940,	"n",	0);
	create_insn	(x=0X7D00E948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E94A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E954);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E958,	"ClientPrvKeySize",	0);
	create_insn	(x=0X7D00E958);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E95C,	"PrimeSize",	0);
	create_insn	(x=0X7D00E95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E95E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E962,	"SecretKeySize_ptr",	0);
	create_insn	(x=0X7D00E962);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E964,	"ServerPubKeySize",	0);
	create_insn	(x=0X7D00E964);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E968,	"Prime_ptr",	0);
	create_insn	(x=0X7D00E968);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E96C,	"tmpPubKey_ptr",	0);
	create_insn	(x=0X7D00E96C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E970,	"tmpPrimeData_ptr",	0);
	create_insn	(x=0X7D00E970);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E972,	"SecretKey_ptr",	0);
	create_insn	(x=0X7D00E972);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E974,	"ClientPrvKey_ptr",	0);
	set_cmt	(0X7D00E976,	"ServerPubKey_ptr",	0);
	create_insn	(x=0X7D00E97E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E980,	"level",	0);
	set_cmt	(0X7D00E982,	"fmt",	0);
	create_insn	(x=0X7D00E982);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00E984);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E986,	"line",	0);
	create_insn	(x=0X7D00E98A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E98C,	"level_ok",	0);
	set_cmt	(0X7D00E994,	"dest",	0);
	create_insn	(x=0X7D00E994);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E996,	"buffer",	0);
	set_cmt	(0X7D00E998,	"buffer_len",	0);
	create_insn	(x=0X7D00E998);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E99C,	"negative",	0);
	create_insn	(x=0X7D00E9A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00E9A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00E9A8,	"line",	0);
	set_cmt	(0X7D00E9AC,	"fmt",	0);
	create_insn	(x=0X7D00E9AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00E9AE,	"level",	0);
	set_cmt	(0X7D00E9B0,	"level_ok",	0);
	create_insn	(0X7D00E9BC);
	set_cmt	(0X7D00E9BE,	"ptr",	0);
	set_cmt	(0X7D00E9CA,	"ptr",	0);
	set_cmt	(0X7D00E9D2,	"ptr",	0);
	set_cmt	(0X7D00E9DA,	"ptr",	0);
	set_cmt	(0X7D00E9E2,	"ptr",	0);
	set_cmt	(0X7D00E9EA,	"ptr",	0);
	create_dword	(x=0X7D00E9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00E9FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00EA00);
	create_dword	(x=0X7D00EA04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00EA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00EA2C);
	create_insn	(0X7D00EA30);
	set_name	(0X7D00EA30,	"sasi_gen_rsa_key");
	create_insn	(x=0X7D00EA42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EA62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00EA64);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D00EA6A,	"nmemb",	0);
	create_insn	(0X7D00EA6A);
	set_cmt	(0X7D00EA6C,	"size",	0);
	create_insn	(x=0X7D00EA74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EA7C,	"nmemb",	0);
	set_cmt	(0X7D00EA7E,	"size",	0);
	create_insn	(x=0X7D00EA86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EA8E,	"nmemb",	0);
	set_cmt	(0X7D00EA90,	"size",	0);
	create_insn	(x=0X7D00EA98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EAA0,	"nmemb",	0);
	set_cmt	(0X7D00EAA2,	"size",	0);
	set_cmt	(0X7D00EAB0,	"nmemb",	0);
	set_cmt	(0X7D00EAB2,	"size",	0);
	set_cmt	(0X7D00EAC0,	"nmemb",	0);
	set_cmt	(0X7D00EAC2,	"size",	0);
	set_cmt	(0X7D00EAD0,	"nmemb",	0);
	set_cmt	(0X7D00EAD2,	"size",	0);
	set_cmt	(0X7D00EAE0,	"nmemb",	0);
	set_cmt	(0X7D00EAE2,	"size",	0);
	set_cmt	(0X7D00EAF0,	"size",	0);
	set_cmt	(0X7D00EAF2,	"nmemb",	0);
	set_cmt	(0X7D00EB00,	"nmemb",	0);
	set_cmt	(0X7D00EB02,	"size",	0);
	create_insn	(x=0X7D00EB0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB12,	"src",	0);
	create_insn	(0X7D00EB1E);
	create_insn	(x=0X7D00EB2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB3E,	"pubExp_ptr",	0);
	create_insn	(x=0X7D00EB3E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB40,	"rndContext_ptr",	0);
	create_insn	(x=0X7D00EB40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00EB44,	"userPrivKey_ptr",	0);
	create_insn	(x=0X7D00EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB48,	"userPubKey_ptr",	0);
	create_insn	(x=0X7D00EB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB4C,	"keyGenData_ptr",	0);
	create_insn	(x=0X7D00EB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB50,	"pFipsCtx",	0);
	create_insn	(x=0X7D00EB50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB52,	"keySize",	0);
	create_insn	(x=0X7D00EB52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB5C,	"UserPubKey_ptr",	0);
	create_insn	(x=0X7D00EB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB62,	"ModulusSize_ptr",	0);
	create_insn	(x=0X7D00EB62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB64,	"ExponentSize_ptr",	0);
	create_insn	(x=0X7D00EB64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EB66,	"Exponent_ptr",	0);
	set_cmt	(0X7D00EB68,	"Modulus_ptr",	0);
	create_insn	(x=0X7D00EB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EB94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBA2,	"dest",	0);
	set_cmt	(0X7D00EBA6,	"buffer",	0);
	set_cmt	(0X7D00EBA8,	"buffer_len",	0);
	create_insn	(x=0X7D00EBA8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBAC,	"negative",	0);
	set_cmt	(0X7D00EBB6,	"dest",	0);
	set_cmt	(0X7D00EBBA,	"buffer",	0);
	create_insn	(x=0X7D00EBBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBBC,	"buffer_len",	0);
	create_insn	(x=0X7D00EBBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBC0,	"negative",	0);
	set_cmt	(0X7D00EBC8,	"dest",	0);
	set_cmt	(0X7D00EBCC,	"buffer",	0);
	set_cmt	(0X7D00EBCE,	"buffer_len",	0);
	create_insn	(x=0X7D00EBCE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBD2,	"negative",	0);
	set_cmt	(0X7D00EBDA,	"dest",	0);
	set_cmt	(0X7D00EBDE,	"buffer",	0);
	set_cmt	(0X7D00EBE0,	"buffer_len",	0);
	create_insn	(x=0X7D00EBE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBE4,	"negative",	0);
	set_cmt	(0X7D00EBEC,	"dest",	0);
	set_cmt	(0X7D00EBF0,	"buffer",	0);
	set_cmt	(0X7D00EBF2,	"buffer_len",	0);
	create_insn	(x=0X7D00EBF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EBF6,	"negative",	0);
	set_cmt	(0X7D00EBFE,	"dest",	0);
	set_cmt	(0X7D00EC02,	"buffer",	0);
	set_cmt	(0X7D00EC04,	"buffer_len",	0);
	create_insn	(x=0X7D00EC04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EC08,	"negative",	0);
	set_cmt	(0X7D00EC10,	"dest",	0);
	set_cmt	(0X7D00EC14,	"buffer",	0);
	set_cmt	(0X7D00EC16,	"buffer_len",	0);
	create_insn	(x=0X7D00EC16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EC1A,	"negative",	0);
	create_insn	(0X7D00EC26);
	create_insn	(0X7D00EC2A);
	set_cmt	(0X7D00EC2E,	"ptr",	0);
	create_insn	(x=0X7D00EC2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EC34,	"ptr",	0);
	create_insn	(x=0X7D00EC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EC3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EC3E,	"ptr",	0);
	create_insn	(x=0X7D00EC44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EC48,	"ptr",	0);
	set_cmt	(0X7D00EC50,	"ptr",	0);
	set_cmt	(0X7D00EC58,	"ptr",	0);
	set_cmt	(0X7D00EC60,	"ptr",	0);
	set_cmt	(0X7D00EC6C,	"ptr",	0);
	set_cmt	(0X7D00EC78,	"ptr",	0);
	set_cmt	(0X7D00EC80,	"ptr",	0);
	create_insn	(0X7D00EC8A);
	create_insn	(x=0X7D00EC96);
	op_stkvar	(x,	1);
	create_insn	(0X7D00EC9A);
	create_insn	(0X7D00ECA6);
	create_insn	(0X7D00ECB0);
	create_insn	(0X7D00ECB8);
	create_insn	(0X7D00ECBE);
	create_insn	(0X7D00ECC6);
	make_array	(0X7D00ECCE,	0X2);
	create_dword	(x=0X7D00ECD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00ECD4);
	create_dword	(x=0X7D00ECD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00ECDC);
	create_dword	(0X7D00ECE0);
	create_insn	(0X7D00ECE4);
	set_name	(0X7D00ECE4,	"sasi_mac_final");
	create_insn	(x=0X7D00ECEA);
	op_stkvar	(x,	1);
	create_insn	(0X7D00ED12);
	create_insn	(0X7D00ED1A);
	create_insn	(0X7D00ED30);
	set_cmt	(0X7D00ED38,	"a3",	0);
	create_insn	(0X7D00ED38);
	set_cmt	(0X7D00ED3E,	"a2",	0);
	set_cmt	(0X7D00ED4E,	"ContextID_ptr",	0);
	set_cmt	(0X7D00ED50,	"a2",	0);
	create_insn	(x=0X7D00ED50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ED5E,	"destination",	0);
	create_insn	(0X7D00ED5E);
	set_cmt	(0X7D00ED60,	"source",	0);
	create_insn	(x=0X7D00ED60);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ED62,	"num",	0);
	create_insn	(x=0X7D00ED62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ED6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00ED70);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D00ED78,	"dataSize",	0);
	create_insn	(0X7D00ED78);
	set_cmt	(0X7D00ED84,	"pContext",	0);
	set_cmt	(0X7D00ED8A,	"pDataOut",	0);
	create_insn	(x=0X7D00ED8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00ED8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ED8E,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D00ED8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00ED90,	"pDataIn",	0);
	set_cmt	(0X7D00ED94,	"dataInBuffSize",	0);
	create_insn	(x=0X7D00EDB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EDB2,	"source",	0);
	set_cmt	(0X7D00EDB6,	"destination",	0);
	set_cmt	(0X7D00EDBC,	"num",	0);
	create_insn	(0X7D00EDC6);
	create_insn	(0X7D00EDCA);
	create_dword	(0X7D00EDD0);
	create_dword	(0X7D00EDD4);
	create_dword	(0X7D00EDD8);
	create_dword	(0X7D00EDDC);
	create_dword	(0X7D00EDE0);
	create_dword	(x=0X7D00EDE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00EDE8);
	create_dword	(0X7D00EDEC);
	create_insn	(0X7D00EDF0);
	set_name	(0X7D00EDF0,	"sasi_cipher_update");
	create_insn	(x=0X7D00EDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EDFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EE02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EE14,	"dst",	0);
	create_insn	(x=0X7D00EE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EE16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00EE18,	"data",	0);
	create_insn	(x=0X7D00EE18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EE1A,	"len",	0);
	create_insn	(x=0X7D00EE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EE1C);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00EE22);
	create_insn	(0X7D00EE3C);
	create_insn	(0X7D00EE40);
	create_insn	(0X7D00EE58);
	set_cmt	(0X7D00EE6E,	"pDataOut",	0);
	create_insn	(x=0X7D00EE6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EE70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EE72,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D00EE72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EE74,	"pContext",	0);
	set_cmt	(0X7D00EE76,	"dataSize",	0);
	set_cmt	(0X7D00EE78,	"pDataIn",	0);
	set_cmt	(0X7D00EE7A,	"dataInBuffSize",	0);
	set_cmt	(0X7D00EE82,	"pContext",	0);
	create_insn	(0X7D00EE82);
	set_cmt	(0X7D00EE84,	"pDataIn",	0);
	set_cmt	(0X7D00EE86,	"dataInSize",	0);
	set_cmt	(0X7D00EE88,	"pDataOut",	0);
	create_insn	(x=0X7D00EE8E);
	op_stkvar	(x,	1);
	create_insn	(0X7D00EE98);
	set_cmt	(0X7D00EEA2,	"pContext",	0);
	set_cmt	(0X7D00EEA4,	"pDataIn",	0);
	set_cmt	(0X7D00EEA6,	"dataInSize",	0);
	set_cmt	(0X7D00EEA8,	"pDataOut",	0);
	create_insn	(0X7D00EEB0);
	create_insn	(x=0X7D00EEC0);
	op_hex		(x,	1);
	set_cmt	(0X7D00EECA,	"num",	0);
	set_cmt	(0X7D00EED0,	"destination",	0);
	create_insn	(x=0X7D00EED0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EED6,	"source",	0);
	create_insn	(x=0X7D00EEE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EEEC,	"pContext",	0);
	set_cmt	(0X7D00EEEE,	"pDataIn",	0);
	set_cmt	(0X7D00EEF0,	"dataInSize",	0);
	set_cmt	(0X7D00EEF2,	"pDataOut",	0);
	set_cmt	(0X7D00EEFC,	"num",	0);
	set_cmt	(0X7D00EF04,	"source",	0);
	set_cmt	(0X7D00EF06,	"destination",	0);
	set_cmt	(0X7D00EF0E,	"pContext",	0);
	set_cmt	(0X7D00EF10,	"pDataIn",	0);
	create_insn	(x=0X7D00EF10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF12,	"dataInSize",	0);
	set_cmt	(0X7D00EF14,	"pDataOut",	0);
	set_cmt	(0X7D00EF20,	"dataInSize",	0);
	create_insn	(0X7D00EF20);
	set_cmt	(0X7D00EF26,	"pDataOut",	0);
	create_insn	(x=0X7D00EF26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF30,	"pDataIn",	0);
	set_cmt	(0X7D00EF3A,	"num",	0);
	set_cmt	(0X7D00EF40,	"source",	0);
	set_cmt	(0X7D00EF44,	"destination",	0);
	create_insn	(x=0X7D00EF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00EF4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF50,	"destination",	0);
	create_insn	(x=0X7D00EF52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF54,	"source",	0);
	set_cmt	(0X7D00EF60,	"pContext",	0);
	set_cmt	(0X7D00EF62,	"pDataIn",	0);
	create_insn	(x=0X7D00EF62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF64,	"dataInSize",	0);
	set_cmt	(0X7D00EF66,	"pDataOut",	0);
	set_cmt	(0X7D00EF72,	"pContext",	0);
	create_insn	(0X7D00EF72);
	set_cmt	(0X7D00EF74,	"pDataIn",	0);
	set_cmt	(0X7D00EF76,	"dataInSize",	0);
	set_cmt	(0X7D00EF78,	"pDataOut",	0);
	set_cmt	(0X7D00EF82,	"pContext",	0);
	create_insn	(0X7D00EF82);
	set_cmt	(0X7D00EF84,	"pDataOut",	0);
	create_insn	(x=0X7D00EF84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF86,	"pDataIn",	0);
	set_cmt	(0X7D00EF88,	"dataInSize",	0);
	set_cmt	(0X7D00EF92,	"destination",	0);
	set_cmt	(0X7D00EF96,	"source",	0);
	create_insn	(x=0X7D00EF96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00EF98,	"num",	0);
	set_cmt	(0X7D00EFA2,	"ContextID_ptr",	0);
	create_insn	(0X7D00EFA2);
	set_cmt	(0X7D00EFA4,	"a2",	0);
	set_cmt	(0X7D00EFA6,	"a3",	0);
	set_cmt	(0X7D00EFA8,	"a4",	0);
	create_insn	(0X7D00EFBA);
	create_insn	(0X7D00EFBE);
	create_insn	(0X7D00EFC2);
	make_array	(0X7D00EFCA,	0X2);
	create_dword	(x=0X7D00EFCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00EFD0);
	create_dword	(0X7D00EFD4);
	create_dword	(0X7D00EFD8);
	create_dword	(0X7D00EFDC);
	create_dword	(0X7D00EFE0);
	create_dword	(0X7D00EFE4);
	create_dword	(0X7D00EFE8);
	create_dword	(0X7D00EFEC);
	create_insn	(0X7D00EFF0);
	set_name	(0X7D00EFF0,	"sasi_cipher_get_block_size");
	create_insn	(x=0X7D00EFFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00EFFC);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00F002);
	create_insn	(x=0X7D00F004);
	op_hex		(x,	1);
	make_array	(0X7D00F016,	0X2);
	create_dword	(0X7D00F018);
	create_dword	(x=0X7D00F01C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F020);
	create_insn	(0X7D00F024);
	set_name	(0X7D00F024,	"sasi_cipher_init");
	create_insn	(x=0X7D00F02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F03E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F042);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F046);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F052);
	create_insn	(x=0X7D00F058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F05A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F05E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F066);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F06E);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00F07A);
	create_insn	(0X7D00F098);
	create_insn	(0X7D00F0A6);
	create_insn	(0X7D00F0C0);
	create_insn	(0X7D00F0D2);
	create_insn	(0X7D00F0D6);
	create_insn	(0X7D00F0DA);
	create_insn	(0X7D00F0DE);
	create_insn	(0X7D00F0EE);
	create_insn	(0X7D00F0F2);
	set_cmt	(0X7D00F10C,	"source",	0);
	set_cmt	(0X7D00F10E,	"destination",	0);
	create_insn	(x=0X7D00F10E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F110,	"num",	0);
	create_insn	(0X7D00F12C);
	create_insn	(0X7D00F13C);
	set_cmt	(0X7D00F14A,	"source",	0);
	create_insn	(x=0X7D00F14C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F14E,	"destination",	0);
	set_cmt	(0X7D00F150,	"num",	0);
	create_insn	(x=0X7D00F156);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F158);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F15C,	"source",	0);
	create_insn	(0X7D00F15C);
	create_insn	(x=0X7D00F15E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F160,	"destination",	0);
	set_cmt	(0X7D00F162,	"num",	0);
	create_insn	(x=0X7D00F168);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F16A,	"size",	0);
	create_insn	(x=0X7D00F16A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F16C,	"algo",	0);
	create_insn	(x=0X7D00F16E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F174);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F17C,	"encryptDecryptFlag",	0);
	set_cmt	(0X7D00F17E,	"pContext",	0);
	set_cmt	(0X7D00F180,	"operationMode",	0);
	set_cmt	(0X7D00F182,	"paddingType",	0);
	set_cmt	(0X7D00F188,	"a2",	0);
	create_insn	(0X7D00F190);
	create_insn	(x=0X7D00F192);
	op_hex		(x,	1);
	create_insn	(0X7D00F1A4);
	set_cmt	(0X7D00F1A6,	"source",	0);
	set_cmt	(0X7D00F1A8,	"destination",	0);
	create_insn	(x=0X7D00F1A8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1AA,	"num",	0);
	set_cmt	(0X7D00F1B0,	"a5",	0);
	create_insn	(x=0X7D00F1B0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1B4,	"a2",	0);
	create_insn	(x=0X7D00F1B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1B6,	"a6",	0);
	create_insn	(x=0X7D00F1B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1B8,	"a3",	0);
	create_insn	(x=0X7D00F1B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1BA,	"a1",	0);
	set_cmt	(0X7D00F1BC,	"a4",	0);
	create_insn	(x=0X7D00F1C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1C6,	"key1_len",	0);
	create_insn	(x=0X7D00F1C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1C8,	"key2",	0);
	create_insn	(x=0X7D00F1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F1CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1CC,	"iv",	0);
	create_insn	(x=0X7D00F1CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1D0,	"key2_len",	0);
	create_insn	(x=0X7D00F1D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1D2,	"iv_len",	0);
	create_insn	(x=0X7D00F1D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1D6,	"ctx",	0);
	set_cmt	(0X7D00F1D8,	"algo",	0);
	set_cmt	(0X7D00F1DA,	"mode",	0);
	set_cmt	(0X7D00F1DC,	"key1",	0);
	create_insn	(x=0X7D00F1E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1E8,	"ctx",	0);
	set_cmt	(0X7D00F1EC,	"key1_len",	0);
	create_insn	(x=0X7D00F1EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1EE,	"key2",	0);
	create_insn	(x=0X7D00F1EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F1F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1F2,	"iv",	0);
	create_insn	(x=0X7D00F1F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1F6,	"key2_len",	0);
	create_insn	(x=0X7D00F1F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1F8,	"iv_len",	0);
	create_insn	(x=0X7D00F1F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F1FC,	"algo",	0);
	set_cmt	(0X7D00F1FE,	"mode",	0);
	set_cmt	(0X7D00F200,	"key1",	0);
	create_insn	(0X7D00F208);
	set_cmt	(0X7D00F21C,	"a1",	0);
	create_insn	(0X7D00F21C);
	set_cmt	(0X7D00F21E,	"a3",	0);
	create_insn	(x=0X7D00F21E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F220,	"a4",	0);
	create_insn	(x=0X7D00F228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F232);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F236);
	create_insn	(0X7D00F240);
	set_cmt	(0X7D00F24A,	"a1",	0);
	set_cmt	(0X7D00F24C,	"a2",	0);
	create_insn	(x=0X7D00F24C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F256);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F258,	"line",	0);
	set_cmt	(0X7D00F25C,	"fmt",	0);
	create_insn	(x=0X7D00F25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F25E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F260);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F262,	"level",	0);
	create_insn	(x=0X7D00F264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F26A,	"level_ok",	0);
	create_dword	(0X7D00F278);
	create_dword	(0X7D00F27C);
	create_dword	(x=0X7D00F280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F284);
	create_dword	(0X7D00F288);
	create_dword	(0X7D00F28C);
	create_dword	(0X7D00F290);
	create_dword	(0X7D00F294);
	create_dword	(0X7D00F298);
	create_dword	(0X7D00F29C);
	create_dword	(0X7D00F2A0);
	create_dword	(0X7D00F2A4);
	create_dword	(0X7D00F2A8);
	create_dword	(0X7D00F2AC);
	create_dword	(0X7D00F2B0);
	create_dword	(x=0X7D00F2B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F2B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F2BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F2C4);
	create_insn	(0X7D00F2C8);
	set_name	(0X7D00F2C8,	"sasi_mac_init");
	set_cmt	(0X7D00F2CC,	"fmt",	0);
	create_insn	(x=0X7D00F2D0);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F2EA);
	create_insn	(0X7D00F306);
	create_insn	(0X7D00F30E);
	create_insn	(0X7D00F324);
	create_insn	(0X7D00F32C);
	set_cmt	(0X7D00F338,	"algo",	0);
	set_cmt	(0X7D00F33A,	"sasi_hashindex",	0);
	create_insn	(x=0X7D00F33A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F344);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F346,	"size",	0);
	set_cmt	(0X7D00F360,	"source",	0);
	set_cmt	(0X7D00F362,	"num",	0);
	set_cmt	(0X7D00F368,	"ContextID_ptr",	0);
	set_cmt	(0X7D00F36C,	"OperationMode",	0);
	create_insn	(x=0X7D00F36C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F36E,	"key_ptr",	0);
	set_cmt	(0X7D00F378,	"ptr",	0);
	create_insn	(x=0X7D00F382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F384,	"level",	0);
	create_insn	(x=0X7D00F38A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F38C,	"line",	0);
	set_cmt	(0X7D00F390,	"level_ok",	0);
	set_cmt	(0X7D00F396,	"ptr",	0);
	create_insn	(x=0X7D00F3A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F3A4);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D00F3B2,	"mode",	0);
	create_insn	(0X7D00F3B2);
	set_cmt	(0X7D00F3B6,	"iv_len",	0);
	create_insn	(x=0X7D00F3B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F3B8,	"key1_len",	0);
	create_insn	(x=0X7D00F3B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F3BA,	"key2",	0);
	create_insn	(x=0X7D00F3BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F3BC,	"key2_len",	0);
	create_insn	(x=0X7D00F3BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F3BE,	"iv",	0);
	create_insn	(x=0X7D00F3BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F3C2,	"ctx",	0);
	set_cmt	(0X7D00F3C4,	"algo",	0);
	set_cmt	(0X7D00F3C6,	"key1",	0);
	set_cmt	(0X7D00F3CE,	"algo",	0);
	set_cmt	(0X7D00F3D0,	"size",	0);
	create_insn	(0X7D00F3EC);
	create_dword	(0X7D00F3F4);
	create_dword	(0X7D00F3F8);
	create_dword	(0X7D00F3FC);
	create_dword	(0X7D00F400);
	create_dword	(0X7D00F404);
	create_dword	(x=0X7D00F408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F40C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F410);
	create_dword	(x=0X7D00F414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F418);
	create_insn	(0X7D00F41C);
	set_name	(0X7D00F41C,	"sasi_cipher_get_ctx_size");
	create_insn	(0X7D00F440);
	create_insn	(0X7D00F45E);
	create_insn	(x=0X7D00F472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F474);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00F47A);
	create_insn	(0X7D00F484);
	create_dword	(0X7D00F488);
	create_dword	(0X7D00F48C);
	create_dword	(0X7D00F490);
	create_dword	(0X7D00F494);
	create_dword	(x=0X7D00F498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F49C);
	create_insn	(0X7D00F4A0);
	set_name	(0X7D00F4A0,	"sasi_cipher_final");
	create_insn	(x=0X7D00F4AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F4AC);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00F4B2,	0X2);
	create_dword	(0X7D00F4B4);
	create_dword	(x=0X7D00F4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00F4BC);
	set_name	(0X7D00F4BC,	"sasi_mac_alloc_ctx");
	create_insn	(0X7D00F4DE);
	create_insn	(0X7D00F4E6);
	create_insn	(0X7D00F4FC);
	create_insn	(x=0X7D00F504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F506);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00F50C);
	create_insn	(0X7D00F516);
	make_array	(0X7D00F51A,	0X2);
	create_dword	(0X7D00F51C);
	create_dword	(0X7D00F520);
	create_dword	(0X7D00F524);
	create_dword	(0X7D00F528);
	create_dword	(x=0X7D00F52C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F530);
	create_insn	(0X7D00F534);
	set_name	(0X7D00F534,	"sasi_authenc_get_ctx_size");
	create_insn	(x=0X7D00F542);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F544);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D00F54A);
	create_insn	(0X7D00F554);
	create_dword	(0X7D00F558);
	create_dword	(0X7D00F55C);
	create_dword	(x=0X7D00F560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F564);
	create_insn	(0X7D00F568);
	set_name	(0X7D00F568,	"sasi_prng_add_entropy");
	set_cmt	(0X7D00F56C,	"num",	0);
	create_insn	(x=0X7D00F572);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F574,	"destination",	0);
	set_cmt	(0X7D00F578,	"source",	0);
	create_insn	(0X7D00F582);
	make_array	(0X7D00F586,	0X2);
	create_dword	(x=0X7D00F588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F58C);
	set_name	(0X7D00F58C,	"destination");
	create_dword	(0X7D00F590);
	create_insn	(0X7D00F594);
	set_name	(0X7D00F594,	"sasi_authenc_final");
	set_cmt	(0X7D00F5A4,	"ctx",	0);
	create_insn	(0X7D00F5A4);
	create_insn	(x=0X7D00F5B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F5B4);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	make_array	(0X7D00F5BA,	0X2);
	create_dword	(0X7D00F5BC);
	create_dword	(0X7D00F5C0);
	create_dword	(x=0X7D00F5C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D00F5C8);
	set_name	(0X7D00F5C8,	"bignum__num_bytes");
	set_cmt	(0X7D00F5D2,	"op2",	0);
	set_cmt	(0X7D00F5D6,	"op1",	0);
	create_insn	(x=0X7D00F5DE);
	op_hex		(x,	1);
	create_insn	(0X7D00F5EC);
	create_dword	(0X7D00F5F0);
	create_insn	(0X7D00F5F4);
	set_name	(0X7D00F5F4,	"Import_CRYSECCUserPrivkey_From_ECCKeypair");
	create_insn	(x=0X7D00F604);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F610);
	create_insn	(0X7D00F618);
	set_cmt	(0X7D00F620,	"n",	0);
	set_cmt	(0X7D00F622,	"buffer",	0);
	create_insn	(x=0X7D00F622);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F624,	"buffer_len",	0);
	create_insn	(x=0X7D00F624);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F62E,	"domainId",	0);
	create_insn	(x=0X7D00F62E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F634,	"PrivKeySizeInBytes",	0);
	create_insn	(x=0X7D00F634);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F636,	"pPrivKeyIn",	0);
	create_insn	(x=0X7D00F636);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F638,	"pUserPrivKey",	0);
	make_array	(0X7D00F646,	0X2);
	create_dword	(x=0X7D00F648);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D00F64C);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00F650);
	set_name	(0X7D00F650,	"sasi_ecc_sign");
	create_insn	(x=0X7D00F65E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F676);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F67C,	"a2",	0);
	set_cmt	(0X7D00F67E,	"pSignerPrivKey",	0);
	create_insn	(x=0X7D00F67E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F68A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F68C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00F694);
	create_insn	(x=0X7D00F696);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F69E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F6A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D00F6AC);
	set_cmt	(0X7D00F6C6,	"pMessageDataIn",	0);
	create_insn	(x=0X7D00F6C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F6C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6CC,	"messageSizeInBytes",	0);
	create_insn	(x=0X7D00F6CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6D2,	"pSignerPrivKey",	0);
	create_insn	(x=0X7D00F6D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6D4,	"pSignatureOutSize",	0);
	create_insn	(x=0X7D00F6D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6D6,	"pSignUserContext",	0);
	create_insn	(x=0X7D00F6D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6D8,	"pSignatureOut",	0);
	create_insn	(x=0X7D00F6D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6DA,	"pRndContext",	0);
	create_insn	(x=0X7D00F6DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F6DC,	"hashMode",	0);
	set_cmt	(0X7D00F6EA,	"line",	0);
	create_insn	(x=0X7D00F6EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F6F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F6F4,	"fmt",	0);
	create_insn	(x=0X7D00F6F4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F6F6,	"level",	0);
	set_cmt	(0X7D00F6F8,	"level_ok",	0);
	make_array	(0X7D00F70A,	0X2);
	create_dword	(x=0X7D00F70C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F718);
	create_dword	(0X7D00F71C);
	create_dword	(x=0X7D00F720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D00F720,	"pRndContext");
	create_dword	(x=0X7D00F724);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00F728);
	create_insn	(0X7D00F72C);
	set_name	(0X7D00F72C,	"Import_CRYSECCUserPubkey_From_ECCPublickey");
	create_insn	(x=0X7D00F736);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F74C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F74E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F750,	"fmt",	0);
	create_insn	(x=0X7D00F750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F754,	"line",	0);
	create_insn	(x=0X7D00F75A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F762);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F76E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F78E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F794,	"n",	0);
	set_cmt	(0X7D00F79A,	"n",	0);
	create_insn	(x=0X7D00F79A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F79C,	"buffer",	0);
	set_cmt	(0X7D00F79E,	"buffer_len",	0);
	create_insn	(x=0X7D00F79E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F7A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7AA);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F7B2);
	create_insn	(x=0X7D00F7B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F7C4);
	create_insn	(x=0X7D00F7D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F7E0,	"n",	0);
	set_cmt	(0X7D00F7E6,	"n",	0);
	create_insn	(x=0X7D00F7E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F7E8,	"buffer",	0);
	set_cmt	(0X7D00F7EA,	"buffer_len",	0);
	create_insn	(x=0X7D00F7EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F7F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F7F6);
	op_stkvar	(x,	1);
	create_insn	(0X7D00F7FE);
	create_insn	(x=0X7D00F804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F806,	"level",	0);
	set_cmt	(0X7D00F808,	"fmt",	0);
	create_insn	(x=0X7D00F808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F80A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F80C,	"line",	0);
	create_insn	(x=0X7D00F810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F816,	"level_ok",	0);
	set_cmt	(0X7D00F81C,	"domainId",	0);
	create_insn	(x=0X7D00F81C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F822,	"pUserPublKey",	0);
	create_insn	(x=0X7D00F822);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F824);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F826,	"pTempBuff",	0);
	create_insn	(x=0X7D00F826);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F828,	"PublKeyIn_ptr",	0);
	create_insn	(x=0X7D00F828);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F82A,	"PublKeySizeInBytes",	0);
	set_cmt	(0X7D00F82C,	"CheckMode",	0);
	create_insn	(x=0X7D00F834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F836);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F83A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F842);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00F844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F846,	"line",	0);
	set_cmt	(0X7D00F84A,	"fmt",	0);
	create_insn	(x=0X7D00F84A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F84C,	"level",	0);
	set_cmt	(0X7D00F84E,	"level_ok",	0);
	set_cmt	(0X7D00F856,	"level",	0);
	create_insn	(0X7D00F856);
	set_cmt	(0X7D00F858,	"level_ok",	0);
	make_array	(0X7D00F866,	0X2);
	create_dword	(x=0X7D00F868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F86C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F874);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F87C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F884);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F88C);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00F890);
	set_name	(0X7D00F890,	"sasi_ecc_verify");
	set_cmt	(0X7D00F898,	"SignatureSizeBytes",	0);
	create_insn	(x=0X7D00F89E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F8AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F8B2,	"a2",	0);
	set_cmt	(0X7D00F8B4,	"PartnerPublKey_ptr",	0);
	create_insn	(x=0X7D00F8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F8BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F8BE,	"level",	0);
	set_cmt	(0X7D00F8C0,	"fmt",	0);
	create_insn	(x=0X7D00F8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F8C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F8C4,	"line",	0);
	create_insn	(x=0X7D00F8C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00F8CA,	"level_ok",	0);
	create_insn	(0X7D00F8D2);
	create_insn	(x=0X7D00F8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F8F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F8FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F904,	"pVerifyUserContext",	0);
	create_insn	(x=0X7D00F904);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F906,	"messageSizeInBytes",	0);
	create_insn	(x=0X7D00F906);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F908,	"pUserPublKey",	0);
	create_insn	(x=0X7D00F908);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F90E,	"hashMode",	0);
	create_insn	(x=0X7D00F90E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F910,	"pSignatureIn",	0);
	make_array	(0X7D00F922,	0X2);
	create_dword	(x=0X7D00F924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00F92C);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D00F930);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D00F934);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D00F938);
	set_cmt	(0X7D00F946,	"nmemb",	0);
	set_cmt	(0X7D00F948,	"size",	0);
	create_insn	(x=0X7D00F94A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F952);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F956);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F958);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F966,	"nmemb",	0);
	set_cmt	(0X7D00F968,	"size",	0);
	set_cmt	(0X7D00F974,	"nmemb",	0);
	set_cmt	(0X7D00F976,	"size",	0);
	set_cmt	(0X7D00F982,	"nmemb",	0);
	set_cmt	(0X7D00F984,	"size",	0);
	set_cmt	(0X7D00F990,	"nmemb",	0);
	set_cmt	(0X7D00F992,	"size",	0);
	set_cmt	(0X7D00F9AC,	"buffer",	0);
	set_cmt	(0X7D00F9AE,	"buffer_len",	0);
	create_insn	(x=0X7D00F9AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F9B0,	"n",	0);
	set_cmt	(0X7D00F9BA,	"buffer",	0);
	set_cmt	(0X7D00F9BC,	"buffer_len",	0);
	create_insn	(x=0X7D00F9BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F9BE,	"n",	0);
	set_cmt	(0X7D00F9C8,	"buffer",	0);
	set_cmt	(0X7D00F9CA,	"buffer_len",	0);
	create_insn	(x=0X7D00F9CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F9CC,	"n",	0);
	set_cmt	(0X7D00F9D6,	"buffer",	0);
	set_cmt	(0X7D00F9D8,	"buffer_len",	0);
	create_insn	(x=0X7D00F9D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F9DA,	"n",	0);
	set_cmt	(0X7D00F9E4,	"buffer",	0);
	set_cmt	(0X7D00F9E6,	"buffer_len",	0);
	create_insn	(x=0X7D00F9E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00F9E8,	"n",	0);
	create_insn	(x=0X7D00F9F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F9F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00F9FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FA24,	"buffer",	0);
	create_insn	(0X7D00FA24);
	set_cmt	(0X7D00FA26,	"buffer_len",	0);
	create_insn	(x=0X7D00FA26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FA28,	"n",	0);
	set_cmt	(0X7D00FA32,	"buffer",	0);
	set_cmt	(0X7D00FA34,	"buffer_len",	0);
	create_insn	(x=0X7D00FA34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FA36,	"n",	0);
	set_cmt	(0X7D00FA3E,	"buffer",	0);
	set_cmt	(0X7D00FA40,	"buffer_len",	0);
	create_insn	(x=0X7D00FA40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FA42,	"n",	0);
	create_insn	(x=0X7D00FA4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FA5C);
	op_stkvar	(x,	1);
	create_insn	(0X7D00FA70);
	create_insn	(0X7D00FA74);
	create_insn	(0X7D00FA7E);
	create_insn	(0X7D00FA86);
	create_insn	(0X7D00FA8C);
	create_insn	(0X7D00FA90);
	set_cmt	(0X7D00FA92,	"ptr",	0);
	set_cmt	(0X7D00FA9A,	"ptr",	0);
	set_cmt	(0X7D00FAA2,	"ptr",	0);
	set_cmt	(0X7D00FAAE,	"ptr",	0);
	set_cmt	(0X7D00FABA,	"ptr",	0);
	create_dword	(0X7D00FAC8);
	create_dword	(0X7D00FACC);
	create_insn	(0X7D00FAD0);
	set_name	(0X7D00FAD0,	"sasi_gen_ecc_key");
	set_cmt	(0X7D00FAE0,	"size",	0);
	create_insn	(x=0X7D00FAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FAE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FAEE,	"size",	0);
	set_cmt	(0X7D00FAF8,	"size",	0);
	create_insn	(x=0X7D00FB02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB18,	"n",	0);
	set_cmt	(0X7D00FB1A,	"buffer",	0);
	create_insn	(x=0X7D00FB1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB1C,	"buffer_len",	0);
	create_insn	(x=0X7D00FB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FB26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FB28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB30,	"domainId",	0);
	create_insn	(x=0X7D00FB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB3A,	"pFipsCtx",	0);
	create_insn	(x=0X7D00FB3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB3C,	"pTempData",	0);
	create_insn	(x=0X7D00FB3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB3E,	"pRndContext",	0);
	create_insn	(x=0X7D00FB3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FB40,	"pDomain",	0);
	set_cmt	(0X7D00FB42,	"pUserPrivKey",	0);
	set_cmt	(0X7D00FB44,	"pUserPublKey",	0);
	set_cmt	(0X7D00FB4E,	"pUserPublKey",	0);
	set_cmt	(0X7D00FB50,	"pExternPublKey",	0);
	create_insn	(x=0X7D00FB50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB52,	"compression",	0);
	set_cmt	(0X7D00FB54,	"pPublKeySizeBytes",	0);
	create_insn	(x=0X7D00FB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB60,	"pPrivKeyIn",	0);
	create_insn	(x=0X7D00FB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FB74,	"pDomain",	0);
	set_cmt	(0X7D00FB76,	"pUserPrivKey",	0);
	create_insn	(x=0X7D00FB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FB82,	"level",	0);
	set_cmt	(0X7D00FB84,	"fmt",	0);
	create_insn	(x=0X7D00FB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FB86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB88,	"line",	0);
	create_insn	(x=0X7D00FB8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FB8E,	"level_ok",	0);
	create_insn	(x=0X7D00FB96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FB98,	"buffer",	0);
	create_insn	(x=0X7D00FB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FBA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FBAE,	"buffer_len",	0);
	set_cmt	(0X7D00FBB0,	"negative",	0);
	set_cmt	(0X7D00FBB2,	"dest",	0);
	set_cmt	(0X7D00FBB8,	"negative",	0);
	create_insn	(x=0X7D00FBBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FBBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FBC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FBC8,	"dest",	0);
	create_insn	(0X7D00FBC8);
	create_insn	(x=0X7D00FBCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FBCE,	"buffer_len",	0);
	set_cmt	(0X7D00FBD4,	"buffer",	0);
	set_cmt	(0X7D00FBDA,	"negative",	0);
	create_insn	(x=0X7D00FBDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FBE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FBE2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FBEA,	"dest",	0);
	create_insn	(0X7D00FBEA);
	set_cmt	(0X7D00FBEC,	"buffer",	0);
	create_insn	(x=0X7D00FBEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FBEE,	"buffer_len",	0);
	create_insn	(x=0X7D00FBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FBF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FBF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FBFA,	"line",	0);
	set_cmt	(0X7D00FBFE,	"fmt",	0);
	create_insn	(x=0X7D00FBFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FC00,	"level",	0);
	set_cmt	(0X7D00FC02,	"level_ok",	0);
	create_insn	(0X7D00FC0C);
	set_cmt	(0X7D00FC0E,	"ptr",	0);
	set_cmt	(0X7D00FC16,	"ptr",	0);
	set_cmt	(0X7D00FC1C,	"ptr",	0);
	create_dword	(x=0X7D00FC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FC4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00FC50);
	create_insn	(0X7D00FC54);
	set_name	(0X7D00FC54,	"sasi_gen_dh_key");
	create_insn	(x=0X7D00FC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FC7C);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D00FC84,	"nmemb",	0);
	create_insn	(0X7D00FC84);
	set_cmt	(0X7D00FC86,	"size",	0);
	create_insn	(x=0X7D00FC90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FC92,	"level",	0);
	set_cmt	(0X7D00FC94,	"fmt",	0);
	create_insn	(x=0X7D00FC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FC96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FC98,	"line",	0);
	set_cmt	(0X7D00FC9C,	"level_ok",	0);
	set_cmt	(0X7D00FCA6,	"nmemb",	0);
	create_insn	(0X7D00FCA6);
	set_cmt	(0X7D00FCA8,	"size",	0);
	create_insn	(x=0X7D00FCB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FCB4,	"level",	0);
	set_cmt	(0X7D00FCB6,	"fmt",	0);
	create_insn	(x=0X7D00FCB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FCB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FCBA,	"line",	0);
	set_cmt	(0X7D00FCBE,	"level_ok",	0);
	set_cmt	(0X7D00FCD4,	"nmemb",	0);
	create_insn	(0X7D00FCD4);
	set_cmt	(0X7D00FCD6,	"size",	0);
	create_insn	(x=0X7D00FCE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FCE2,	"level",	0);
	set_cmt	(0X7D00FCE4,	"fmt",	0);
	create_insn	(x=0X7D00FCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FCE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FCE8,	"line",	0);
	set_cmt	(0X7D00FCEC,	"level_ok",	0);
	set_cmt	(0X7D00FD00,	"nmemb",	0);
	create_insn	(0X7D00FD00);
	set_cmt	(0X7D00FD02,	"size",	0);
	create_insn	(x=0X7D00FD0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD10,	"level",	0);
	set_cmt	(0X7D00FD12,	"fmt",	0);
	create_insn	(x=0X7D00FD12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FD14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD16,	"line",	0);
	set_cmt	(0X7D00FD1A,	"level_ok",	0);
	set_cmt	(0X7D00FD2C,	"nmemb",	0);
	create_insn	(0X7D00FD2C);
	set_cmt	(0X7D00FD2E,	"size",	0);
	create_insn	(x=0X7D00FD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD3C,	"level",	0);
	set_cmt	(0X7D00FD3E,	"fmt",	0);
	create_insn	(x=0X7D00FD3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FD40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD42,	"line",	0);
	set_cmt	(0X7D00FD46,	"level_ok",	0);
	set_cmt	(0X7D00FD56,	"nmemb",	0);
	create_insn	(0X7D00FD56);
	set_cmt	(0X7D00FD58,	"size",	0);
	create_insn	(x=0X7D00FD62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD64,	"level",	0);
	set_cmt	(0X7D00FD66,	"fmt",	0);
	create_insn	(x=0X7D00FD66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FD68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD6A,	"line",	0);
	set_cmt	(0X7D00FD6E,	"level_ok",	0);
	set_cmt	(0X7D00FD7C,	"size",	0);
	create_insn	(0X7D00FD7C);
	set_cmt	(0X7D00FD7E,	"nmemb",	0);
	create_insn	(x=0X7D00FD88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD8A,	"level",	0);
	set_cmt	(0X7D00FD8C,	"fmt",	0);
	create_insn	(x=0X7D00FD8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FD8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FD90,	"line",	0);
	set_cmt	(0X7D00FD94,	"level_ok",	0);
	set_cmt	(0X7D00FDA0,	"n",	0);
	create_insn	(x=0X7D00FDA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDA2,	"buffer_len",	0);
	create_insn	(x=0X7D00FDA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDA4,	"buffer",	0);
	set_cmt	(0X7D00FDA6,	"n",	0);
	create_insn	(x=0X7D00FDAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDBA,	"n",	0);
	create_insn	(x=0X7D00FDBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDBC,	"buffer_len",	0);
	create_insn	(x=0X7D00FDBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDBE,	"buffer",	0);
	set_cmt	(0X7D00FDC0,	"n",	0);
	create_insn	(x=0X7D00FDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDCC);
	op_stkvar	(x,	1);
	create_insn	(0X7D00FDD4);
	set_cmt	(0X7D00FDE2,	"n",	0);
	create_insn	(x=0X7D00FDE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FDE8,	"buffer",	0);
	set_cmt	(0X7D00FDEE,	"n",	0);
	create_insn	(x=0X7D00FDF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FDFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE2E,	"GeneratorSize",	0);
	create_insn	(x=0X7D00FE2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE32,	"L",	0);
	create_insn	(x=0X7D00FE32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE34,	"PrimeSize",	0);
	create_insn	(x=0X7D00FE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE38,	"DH_mode",	0);
	create_insn	(x=0X7D00FE38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE3A,	"QSize",	0);
	create_insn	(x=0X7D00FE3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE3E,	"ClientPrvKeySize_ptr",	0);
	create_insn	(x=0X7D00FE3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE44,	"ClientPubSize_ptr",	0);
	create_insn	(x=0X7D00FE44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE46,	"Q_ptr",	0);
	create_insn	(x=0X7D00FE46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE48,	"Prime_ptr",	0);
	set_cmt	(0X7D00FE4A,	"tmpPubKey_ptr",	0);
	create_insn	(x=0X7D00FE4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE4E,	"tmpPrimeData_ptr",	0);
	create_insn	(x=0X7D00FE4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE52,	"ClientPrvKey_ptr",	0);
	create_insn	(x=0X7D00FE52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE54,	"ClientPub1_ptr",	0);
	create_insn	(x=0X7D00FE54);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE56,	"rndContext_ptr",	0);
	create_insn	(x=0X7D00FE56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FE58,	"Generator_ptr",	0);
	set_cmt	(0X7D00FE5E,	"negative",	0);
	create_insn	(x=0X7D00FE62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FE64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FE6A,	"level",	0);
	set_cmt	(0X7D00FE6C,	"line",	0);
	set_cmt	(0X7D00FE70,	"level_ok",	0);
	create_insn	(x=0X7D00FE78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE7A,	"buffer",	0);
	set_cmt	(0X7D00FE7C,	"dest",	0);
	set_cmt	(0X7D00FE7E,	"buffer_len",	0);
	create_insn	(x=0X7D00FE7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE86,	"negative",	0);
	create_insn	(x=0X7D00FE8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FE8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FE8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FE96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FE98,	"buffer",	0);
	set_cmt	(0X7D00FE9A,	"dest",	0);
	set_cmt	(0X7D00FE9C,	"buffer_len",	0);
	create_insn	(x=0X7D00FE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D00FEA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D00FEA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D00FEAA,	"line",	0);
	set_cmt	(0X7D00FEAE,	"fmt",	0);
	create_insn	(x=0X7D00FEAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D00FEB0,	"level",	0);
	set_cmt	(0X7D00FEB2,	"level_ok",	0);
	make_array	(0X7D00FEBE,	0X2);
	create_dword	(x=0X7D00FEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00FECC);
	create_dword	(x=0X7D00FED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FEFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D00FF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D00FF04);
	create_insn	(0X7D00FF08);
	set_cmt	(0X7D00FF0A,	"ptr",	0);
	set_cmt	(0X7D00FF12,	"ptr",	0);
	set_cmt	(0X7D00FF1A,	"ptr",	0);
	set_cmt	(0X7D00FF26,	"ptr",	0);
	set_cmt	(0X7D00FF32,	"ptr",	0);
	set_cmt	(0X7D00FF3A,	"ptr",	0);
	set_cmt	(0X7D00FF42,	"ptr",	0);
	create_insn	(0X7D00FF50);
	set_name	(0X7D00FF50,	"sasi_alloc_dh_keypair");
	set_cmt	(0X7D00FF5C,	"s",	0);
	set_cmt	(0X7D00FF64,	"s",	0);
	set_cmt	(0X7D00FF6C,	"ptr",	0);
	set_cmt	(0X7D00FF72,	"ptr",	0);
	set_cmt	(0X7D00FF78,	"ptr",	0);
	set_cmt	(0X7D00FF7E,	"ptr",	0);
	set_cmt	(0X7D00FF86,	"s",	0);
	create_insn	(0X7D00FF86);
	set_cmt	(0X7D00FF92,	"s",	0);
	set_cmt	(0X7D00FF9E,	"s",	0);
	create_insn	(0X7D00FFAE);
	make_array	(0X7D00FFB2,	0X2);
	create_dword	(0X7D00FFB4);
	create_insn	(0X7D00FFB8);
	set_name	(0X7D00FFB8,	"sasi_alloc_rsa_public_key");
	set_cmt	(0X7D00FFC4,	"s",	0);
	set_cmt	(0X7D00FFCC,	"s",	0);
	set_cmt	(0X7D00FFD4,	"ptr",	0);
	create_insn	(0X7D00FFDC);
	create_insn	(0X7D00FFE0);
	create_dword	(0X7D00FFE4);
	create_insn	(0X7D00FFE8);
	set_name	(0X7D00FFE8,	"sasi_alloc_rsa_keypair");
	set_cmt	(0X7D00FFF4,	"s",	0);
	set_cmt	(0X7D00FFFE,	"s",	0);
	set_cmt	(0X7D010006,	"ptr",	0);
	set_cmt	(0X7D01000C,	"ptr",	0);
	set_cmt	(0X7D010012,	"ptr",	0);
	set_cmt	(0X7D010018,	"ptr",	0);
	set_cmt	(0X7D01001E,	"ptr",	0);
	set_cmt	(0X7D010024,	"ptr",	0);
	set_cmt	(0X7D01002A,	"ptr",	0);
	set_cmt	(0X7D010032,	"s",	0);
	create_insn	(0X7D010032);
	set_cmt	(0X7D01003E,	"s",	0);
	set_cmt	(0X7D01004A,	"s",	0);
	set_cmt	(0X7D010056,	"s",	0);
	set_cmt	(0X7D010062,	"s",	0);
	set_cmt	(0X7D01006E,	"s",	0);
	create_insn	(0X7D01007E);
	make_array	(0X7D010082,	0X2);
	create_dword	(0X7D010084);
	create_insn	(0X7D010088);
	set_cmt	(0X7D010090,	"pSignerPrivKey",	0);
	create_insn	(x=0X7D010090);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010098,	"a2",	0);
	create_insn	(x=0X7D01009C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100A8,	"key",	0);
	create_insn	(0X7D0100A8);
	set_cmt	(0X7D0100AA,	"PartnerPublKey_ptr",	0);
	create_insn	(x=0X7D0100AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100B6,	"SharedSecretValue_ptr",	0);
	create_insn	(x=0X7D0100B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100BA,	"TempBuff_ptr",	0);
	create_insn	(x=0X7D0100BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100BC,	"PartnerPublKey_ptr",	0);
	create_insn	(x=0X7D0100BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100C0,	"UserPrivKey_ptr",	0);
	create_insn	(x=0X7D0100C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0100C2,	"SharedSecrValSize_ptr",	0);
	create_insn	(x=0X7D0100C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0100CC);
	op_stkvar	(x,	1);
	make_array	(0X7D0100D6,	0X2);
	create_dword	(0X7D0100D8);
	create_insn	(0X7D0100DC);
	set_name	(0X7D0100DC,	"sasi_do_ecc_shared_secret");
	create_insn	(0X7D0100F6);
	make_array	(0X7D0100FA,	0X2);
	create_dword	(0X7D0100FC);
	create_insn	(0X7D010100);
	set_name	(0X7D010100,	"sasi_rsassa_verify");
	set_cmt	(0X7D010104,	"fmt",	0);
	create_insn	(x=0X7D010110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010118);
	op_hex		(x,	1);
	create_insn	(x=0X7D01011E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010122);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01012A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01012E);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D01013A);
	create_insn	(x=0X7D010144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D010146,	"level",	0);
	create_insn	(x=0X7D01014C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01014E,	"line",	0);
	set_cmt	(0X7D010152,	"level_ok",	0);
	set_cmt	(0X7D01015C,	"nmemb",	0);
	create_insn	(0X7D01015C);
	set_cmt	(0X7D01015E,	"size",	0);
	set_cmt	(0X7D01016C,	"nmemb",	0);
	set_cmt	(0X7D01016E,	"size",	0);
	set_cmt	(0X7D010186,	"UserPubKey_ptr",	0);
	set_cmt	(0X7D010188,	"a2",	0);
	set_cmt	(0X7D01019C,	"algo",	0);
	set_cmt	(0X7D01019E,	"sasi_hashindex",	0);
	create_insn	(x=0X7D01019E);
	op_stkvar	(x,	1);
	create_insn	(0X7D0101CE);
	create_insn	(0X7D0101E0);
	create_insn	(x=0X7D0101EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0101F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0101F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0101FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0101FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010202);
	op_stkvar	(x,	1);
	create_insn	(0X7D010208);
	create_insn	(x=0X7D010212);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010216);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01021A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01021C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010220);
	op_stkvar	(x,	1);
	create_insn	(0X7D010232);
	create_insn	(0X7D010236);
	create_insn	(0X7D01023A);
	create_insn	(0X7D01023E);
	set_cmt	(0X7D010240,	"ptr",	0);
	set_cmt	(0X7D010248,	"ptr",	0);
	make_array	(0X7D010256,	0X2);
	create_dword	(x=0X7D010258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01025C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010264);
	create_dword	(0X7D010268);
	create_dword	(0X7D01026C);
	create_dword	(0X7D010270);
	create_dword	(0X7D010274);
	create_dword	(0X7D010278);
	create_dword	(0X7D01027C);
	create_dword	(0X7D010280);
	create_dword	(0X7D010284);
	create_dword	(0X7D010288);
	create_insn	(0X7D01028C);
	set_name	(0X7D01028C,	"sasi_rsassa_sign");
	create_insn	(x=0X7D01029C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0102AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0102B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0102BA);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D0102C6,	"nmemb",	0);
	create_insn	(0X7D0102C6);
	set_cmt	(0X7D0102C8,	"size",	0);
	set_cmt	(0X7D0102D6,	"nmemb",	0);
	set_cmt	(0X7D0102D8,	"size",	0);
	set_cmt	(0X7D0102FC,	"algo",	0);
	set_cmt	(0X7D0102FE,	"sasi_hashindex",	0);
	create_insn	(x=0X7D0102FE);
	op_stkvar	(x,	1);
	create_insn	(0X7D01031A);
	create_insn	(x=0X7D01031C);
	op_stkvar	(x,	1);
	create_insn	(0X7D010344);
	create_insn	(0X7D010356);
	create_insn	(x=0X7D010364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01036A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01036C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01036E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010376);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010378);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01037C);
	op_stkvar	(x,	1);
	create_insn	(0X7D010380);
	create_insn	(x=0X7D010382);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01038A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01038C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010392);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010396);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01039A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01039E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0103A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0103A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0103AC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0103B8);
	create_insn	(0X7D0103BE);
	create_insn	(0X7D0103C2);
	set_cmt	(0X7D0103C4,	"ptr",	0);
	set_cmt	(0X7D0103CC,	"ptr",	0);
	create_insn	(0X7D0103D4);
	create_insn	(0X7D0103D8);
	create_dword	(x=0X7D0103E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0103E4);
	create_dword	(0X7D0103E8);
	create_dword	(0X7D0103EC);
	create_dword	(0X7D0103F0);
	create_dword	(0X7D0103F4);
	create_dword	(0X7D0103F8);
	create_dword	(0X7D0103FC);
	create_dword	(0X7D010400);
	create_dword	(x=0X7D010404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010408);
	create_dword	(0X7D01040C);
	create_insn	(0X7D010410);
	set_name	(0X7D010410,	"sasi_rsaes_encrypt");
	create_insn	(x=0X7D010420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01042C);
	op_hex		(x,	1);
	create_insn	(x=0X7D010432);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010436);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01043A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01043C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010444);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D010452,	"nmemb",	0);
	create_insn	(0X7D010452);
	set_cmt	(0X7D010454,	"size",	0);
	set_cmt	(0X7D010462,	"nmemb",	0);
	set_cmt	(0X7D010464,	"size",	0);
	set_cmt	(0X7D010472,	"a1",	0);
	set_cmt	(0X7D010474,	"a2",	0);
	set_cmt	(0X7D010490,	"algo",	0);
	create_insn	(0X7D010490);
	set_cmt	(0X7D010492,	"sasi_hashindex",	0);
	create_insn	(x=0X7D010492);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01049E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0104C4,	"DataInSize",	0);
	create_insn	(x=0X7D0104C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104CA,	"Llen",	0);
	create_insn	(x=0X7D0104CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0104CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104D0,	"MGF",	0);
	create_insn	(x=0X7D0104D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104D2,	"Output_ptr",	0);
	create_insn	(x=0X7D0104D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104D4,	"PKCS1_ver",	0);
	create_insn	(x=0X7D0104D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104D6,	"rndContext_ptr",	0);
	create_insn	(x=0X7D0104D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0104D8,	"UserPubKey_ptr",	0);
	set_cmt	(0X7D0104DA,	"PrimeData_ptr",	0);
	set_cmt	(0X7D0104DC,	"hashFunc",	0);
	create_insn	(x=0X7D0104DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104DE,	"L",	0);
	create_insn	(x=0X7D0104DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0104E2,	"DataIn_ptr",	0);
	create_insn	(x=0X7D0104E2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0104F4);
	create_insn	(0X7D0104F8);
	set_cmt	(0X7D0104FA,	"ptr",	0);
	set_cmt	(0X7D010502,	"ptr",	0);
	create_insn	(0X7D01050A);
	create_insn	(0X7D01050E);
	make_array	(0X7D010516,	0X2);
	create_dword	(x=0X7D010518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01051C);
	create_dword	(0X7D010520);
	create_dword	(x=0X7D010524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010528);
	create_dword	(0X7D01052C);
	create_insn	(0X7D010530);
	set_name	(0X7D010530,	"sasi_rsaes_decrypt");
	set_cmt	(0X7D010534,	"Llen",	0);
	create_insn	(x=0X7D010540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010542);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01054A);
	op_hex		(x,	1);
	create_insn	(x=0X7D010550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010552);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01055C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010560);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D01056E,	"nmemb",	0);
	create_insn	(0X7D01056E);
	set_cmt	(0X7D010570,	"size",	0);
	set_cmt	(0X7D01057E,	"nmemb",	0);
	set_cmt	(0X7D010580,	"size",	0);
	set_cmt	(0X7D01059A,	"algo",	0);
	set_cmt	(0X7D01059C,	"sasi_hashindex",	0);
	create_insn	(x=0X7D01059C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105C4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0105CE);
	create_insn	(x=0X7D0105D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0105E6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0105F0);
	set_cmt	(0X7D0105F6,	"UserPrivKey_ptr",	0);
	create_insn	(x=0X7D010600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010604);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010606,	"DataIn_ptr",	0);
	create_insn	(x=0X7D010606);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010608);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01060C,	"OutputSize_ptr",	0);
	create_insn	(x=0X7D01060C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010610,	"Output_ptr",	0);
	create_insn	(x=0X7D010610);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010612,	"PKCS1_ver",	0);
	create_insn	(x=0X7D010612);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010614,	"PrimeData_ptr",	0);
	set_cmt	(0X7D010616,	"hashFunc",	0);
	create_insn	(x=0X7D010616);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010618,	"L",	0);
	set_cmt	(0X7D01061A,	"DataInSize",	0);
	create_insn	(x=0X7D01061A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01062A);
	op_stkvar	(x,	1);
	create_insn	(0X7D010634);
	set_cmt	(0X7D010636,	"ptr",	0);
	set_cmt	(0X7D01063E,	"ptr",	0);
	create_insn	(0X7D010646);
	create_insn	(0X7D01064A);
	make_array	(0X7D010652,	0X2);
	create_dword	(x=0X7D010654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010658);
	create_dword	(0X7D01065C);
	create_dword	(0X7D010660);
	create_dword	(0X7D010664);
	create_insn	(0X7D010668);
	set_name	(0X7D010668,	"sasi_rsanopad_encrypt");
	create_insn	(x=0X7D010676);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01067E);
	op_hex		(x,	1);
	create_insn	(x=0X7D010684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010686);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01068A);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D010698,	"nmemb",	0);
	create_insn	(0X7D010698);
	set_cmt	(0X7D01069A,	"size",	0);
	set_cmt	(0X7D0106A8,	"nmemb",	0);
	set_cmt	(0X7D0106AA,	"size",	0);
	set_cmt	(0X7D0106B8,	"a1",	0);
	set_cmt	(0X7D0106BA,	"a2",	0);
	create_insn	(0X7D0106C6);
	create_insn	(x=0X7D0106D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0106F6,	"source",	0);
	set_cmt	(0X7D0106FA,	"num",	0);
	set_cmt	(0X7D0106FC,	"destination",	0);
	create_insn	(0X7D01070C);
	create_insn	(0X7D010718);
	create_insn	(0X7D01071C);
	set_cmt	(0X7D01071E,	"ptr",	0);
	set_cmt	(0X7D010726,	"ptr",	0);
	create_insn	(0X7D01072E);
	create_insn	(0X7D010732);
	make_array	(0X7D01073A,	0X2);
	create_dword	(x=0X7D01073C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010740);
	create_dword	(0X7D010744);
	create_dword	(0X7D010748);
	create_insn	(0X7D01074C);
	set_name	(0X7D01074C,	"sasi_rsanopad_decrypt");
	create_insn	(x=0X7D01075A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010762);
	op_hex		(x,	1);
	create_insn	(x=0X7D010768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01076A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01076E);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	set_cmt	(0X7D01077C,	"nmemb",	0);
	create_insn	(0X7D01077C);
	set_cmt	(0X7D01077E,	"size",	0);
	set_cmt	(0X7D01078C,	"nmemb",	0);
	set_cmt	(0X7D01078E,	"size",	0);
	create_insn	(0X7D0107AA);
	create_insn	(x=0X7D0107BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0107DA,	"source",	0);
	set_cmt	(0X7D0107DE,	"num",	0);
	set_cmt	(0X7D0107E0,	"destination",	0);
	create_insn	(0X7D0107F0);
	create_insn	(0X7D0107FC);
	create_insn	(0X7D010800);
	set_cmt	(0X7D010802,	"ptr",	0);
	set_cmt	(0X7D01080A,	"ptr",	0);
	create_insn	(0X7D010812);
	create_insn	(0X7D010816);
	make_array	(0X7D01081E,	0X2);
	create_dword	(x=0X7D010820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010824);
	create_dword	(0X7D010828);
	create_dword	(0X7D01082C);
	create_insn	(0X7D010830);
	set_name	(0X7D010830,	"sasi_authenc_dec_final");
	create_insn	(x=0X7D010838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01083C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01083E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010840);
	op_stkvar	(x,	1);
	create_insn	(0X7D010850);
	create_insn	(x=0X7D01085E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010862);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01086A);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D010870);
	create_insn	(x=0X7D010874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010876);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01087C);
	op_stkvar	(x,	1);
	create_insn	(0X7D0108A0);
	create_insn	(0X7D0108A4);
	create_insn	(0X7D0108A8);
	create_dword	(0X7D0108B0);
	create_dword	(0X7D0108B4);
	create_dword	(x=0X7D0108B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0108BC);
	create_dword	(0X7D0108C0);
	create_dword	(0X7D0108C4);
	create_dword	(0X7D0108C8);
	create_insn	(0X7D0108CC);
	set_name	(0X7D0108CC,	"sasi_authenc_enc_final");
	create_insn	(x=0X7D0108DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0108F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0108F8);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D0108FE);
	create_insn	(x=0X7D010902);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01090E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010918,	"source",	0);
	set_cmt	(0X7D01091A,	"num",	0);
	set_cmt	(0X7D01091C,	"destination",	0);
	create_insn	(0X7D010936);
	create_insn	(0X7D01093A);
	create_insn	(0X7D01093E);
	make_array	(0X7D010946,	0X2);
	create_dword	(x=0X7D010948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01094C);
	create_dword	(0X7D010950);
	create_dword	(0X7D010954);
	create_dword	(0X7D010958);
	create_dword	(0X7D01095C);
	create_insn	(0X7D010960);
	set_name	(0X7D010960,	"sasi_authenc_update_payload");
	create_insn	(x=0X7D01096A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01096E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010982);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010984);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D01098A);
	create_insn	(0X7D010994);
	create_insn	(0X7D0109A6);
	create_insn	(0X7D0109AA);
	make_array	(0X7D0109B2,	0X2);
	create_dword	(x=0X7D0109B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0109B8);
	create_dword	(0X7D0109BC);
	create_dword	(0X7D0109C0);
	create_dword	(0X7D0109C4);
	create_dword	(0X7D0109C8);
	create_insn	(0X7D0109CC);
	set_name	(0X7D0109CC,	"sasi_authenc_update_aad");
	create_insn	(x=0X7D0109D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0109E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0109E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0109E6);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D0109EC);
	set_cmt	(0X7D0109EE,	"ptr",	0);
	set_cmt	(0X7D010A02,	"destination",	0);
	set_cmt	(0X7D010A04,	"source",	0);
	set_cmt	(0X7D010A06,	"num",	0);
	create_insn	(0X7D010A22);
	create_insn	(0X7D010A30);
	set_cmt	(0X7D010A3C,	"ptr",	0);
	create_insn	(0X7D010A52);
	create_insn	(0X7D010A56);
	create_dword	(0X7D010A5C);
	create_dword	(x=0X7D010A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010A64);
	create_dword	(0X7D010A68);
	create_dword	(0X7D010A6C);
	create_dword	(0X7D010A70);
	create_dword	(0X7D010A74);
	create_insn	(0X7D010A78);
	set_name	(0X7D010A78,	"sasi_authenc_init");
	create_insn	(x=0X7D010A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010A8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010A8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010A92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AB0);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D010AB6);
	create_insn	(x=0X7D010AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010AD0);
	op_hex		(x,	1);
	set_cmt	(0X7D010AE2,	"size",	0);
	set_cmt	(0X7D010AF0,	"source",	0);
	set_cmt	(0X7D010AF2,	"destination",	0);
	create_insn	(x=0X7D010AF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010AF4,	"num",	0);
	set_cmt	(0X7D010AFA,	"source",	0);
	create_insn	(x=0X7D010AFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010B00,	"destination",	0);
	set_cmt	(0X7D010B02,	"num",	0);
	create_insn	(0X7D010B1A);
	create_insn	(0X7D010B1E);
	create_insn	(x=0X7D010B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010B36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010B42,	"ptr",	0);
	create_insn	(0X7D010B54);
	create_insn	(0X7D010B58);
	create_insn	(0X7D010B5C);
	create_insn	(0X7D010B60);
	create_dword	(0X7D010B68);
	create_dword	(x=0X7D010B6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010B70);
	create_dword	(0X7D010B74);
	create_dword	(0X7D010B78);
	create_dword	(0X7D010B7C);
	create_dword	(0X7D010B80);
	create_dword	(0X7D010B84);
	create_insn	(0X7D010B88);
	set_name	(0X7D010B88,	"sasi_mac_update");
	create_insn	(0X7D010BBA);
	create_insn	(0X7D010BC2);
	create_insn	(0X7D010BDA);
	create_insn	(0X7D010BE2);
	set_cmt	(0X7D010BFA,	"a3",	0);
	set_cmt	(0X7D010C04,	"ContextID_ptr",	0);
	set_cmt	(0X7D010C06,	"a2",	0);
	create_insn	(0X7D010C1A);
	set_cmt	(0X7D010C24,	"source",	0);
	set_cmt	(0X7D010C26,	"destination",	0);
	set_cmt	(0X7D010C2A,	"num",	0);
	set_cmt	(0X7D010C3A,	"a3",	0);
	set_cmt	(0X7D010C48,	"ContextID_ptr",	0);
	set_cmt	(0X7D010C4A,	"a2",	0);
	create_insn	(x=0X7D010C5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010C62);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_insn	(0X7D010C6E);
	set_cmt	(0X7D010C86,	"source",	0);
	set_cmt	(0X7D010C88,	"destination",	0);
	set_cmt	(0X7D010C8C,	"num",	0);
	set_cmt	(0X7D010CA8,	"pContext",	0);
	set_cmt	(0X7D010CAA,	"pDataIn",	0);
	set_cmt	(0X7D010CAE,	"dataInSize",	0);
	set_cmt	(0X7D010CB2,	"pDataOut",	0);
	set_cmt	(0X7D010CCE,	"pContext",	0);
	set_cmt	(0X7D010CD8,	"pDataIn",	0);
	set_cmt	(0X7D010CDA,	"pDataOut",	0);
	set_cmt	(0X7D010CDE,	"dataInSize",	0);
	set_cmt	(0X7D010CF2,	"source",	0);
	set_cmt	(0X7D010CF4,	"destination",	0);
	set_cmt	(0X7D010CF8,	"num",	0);
	create_insn	(0X7D010D08);
	create_insn	(0X7D010D0E);
	create_dword	(x=0X7D010D14);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D010D18);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D010D1C);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D010D20);
	op_enum		(x,	0,	GetEnum("TEE_ALG"),0);
	create_dword	(x=0X7D010D24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010D28);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D010D2C);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D010D30);
	set_name	(0X7D010D30,	"sasi_hash_update");
	set_cmt	(0X7D010D6C,	"ContextID_ptr",	0);
	set_cmt	(0X7D010D6E,	"DataIn_ptr",	0);
	set_cmt	(0X7D010D70,	"DataInSize",	0);
	create_insn	(0X7D010D7E);
	set_cmt	(0X7D010D88,	"source",	0);
	set_cmt	(0X7D010D8A,	"destination",	0);
	set_cmt	(0X7D010D8E,	"num",	0);
	set_cmt	(0X7D010D9E,	"DataInSize",	0);
	set_cmt	(0X7D010DAC,	"ContextID_ptr",	0);
	set_cmt	(0X7D010DAE,	"DataIn_ptr",	0);
	create_insn	(0X7D010DBC);
	create_insn	(0X7D010DC2);
	create_insn	(0X7D010DC8);
	make_array	(0X7D010DCE,	0X2);
	create_dword	(0X7D010DD0);
	create_dword	(0X7D010DD4);
	create_dword	(0X7D010DD8);
	create_insn	(0X7D010DDC);
	set_name	(0X7D010DDC,	"sasi_hash_final");
	set_cmt	(0X7D010DEE,	"DataInSize",	0);
	set_cmt	(0X7D010DF4,	"DataIn_ptr",	0);
	create_insn	(x=0X7D010E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010E0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010E16,	"ContextID_ptr",	0);
	create_insn	(0X7D010E16);
	set_cmt	(0X7D010E18,	"HashResultBuff",	0);
	create_insn	(x=0X7D010E18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010E24,	"destination",	0);
	set_cmt	(0X7D010E26,	"source",	0);
	create_insn	(x=0X7D010E26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010E2E,	"num",	0);
	create_insn	(0X7D010E38);
	create_dword	(x=0X7D010E40);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D010E44);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D010E48);
	set_name	(0X7D010E48,	"sasi_hash_init");
	set_cmt	(0X7D010E5A,	"algo",	0);
	set_cmt	(0X7D010E5C,	"sasi_hashindex",	0);
	create_insn	(x=0X7D010E5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010E64,	"OperationMode",	0);
	create_insn	(x=0X7D010E64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010E66,	"ContextID_ptr",	0);
	create_insn	(0X7D010E86);
	create_insn	(0X7D010E8A);
	create_dword	(0X7D010E90);
	create_dword	(0X7D010E94);
	create_dword	(0X7D010E98);
	create_insn	(0X7D010E9C);
	set_name	(0X7D010E9C,	"tee_sasi_init");
	set_cmt	(0X7D010EA6,	"rndContext_ptr",	0);
	create_insn	(x=0X7D010EA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D010EA8,	"rndWorkBuff_ptr",	0);
	create_insn	(x=0X7D010EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010EBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010EBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D010EC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010ED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010ED2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D010ED4,	"line",	0);
	set_cmt	(0X7D010ED8,	"fmt",	0);
	create_insn	(x=0X7D010ED8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D010EDA,	"level",	0);
	set_cmt	(0X7D010EDC,	"level_ok",	0);
	create_insn	(x=0X7D010EE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010EE8);
	op_plain_offset	(x,	1,	0X7D040400);
	op_plain_offset	(x,	129,	0X7D040400);
	create_dword	(x=0X7D010EF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D010EF8,	"rndContext_ptr");
	create_dword	(x=0X7D010EFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010F00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010F04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D010F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D010F0C);
	set_name	(0X7D010F0C,	"tom_hash_get_ctx_size");
	create_insn	(0X7D010F1E);
	make_array	(0X7D010F22,	0X2);
	create_dword	(0X7D010F24);
	create_insn	(0X7D010F28);
	set_name	(0X7D010F28,	"tom_bignum_num_bytes");
	create_insn	(x=0X7D010F2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F2C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D010F32,	0X2);
	create_dword	(x=0X7D010F34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D010F38);
	set_name	(0X7D010F38,	"tom_num_bits");
	create_insn	(x=0X7D010F3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F3C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D010F42,	0X2);
	create_dword	(x=0X7D010F44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D010F48);
	set_name	(0X7D010F48,	"tom_bn_compare");
	create_insn	(x=0X7D010F4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F4C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D010F52,	0X2);
	create_dword	(x=0X7D010F54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D010F58);
	set_name	(0X7D010F58,	"tom_bignum_bn2bin");
	create_insn	(x=0X7D010F5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F5C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D010F62,	0X2);
	create_dword	(x=0X7D010F64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D010F68);
	set_name	(0X7D010F68,	"tom_bignum_bin2bn");
	create_insn	(x=0X7D010F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F70);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D010F86,	0X2);
	create_dword	(x=0X7D010F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D010F8C);
	create_insn	(0X7D010F90);
	set_name	(0X7D010F90,	"tom_copy");
	create_insn	(x=0X7D010F92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D010F96);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_dword	(x=0X7D010FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D010FA4,	"switch 5 cases ",	0);
	create_insn	(0X7D010FA4);
	set_name	(0X7D010FA4,	"ecc_get_keysize");
	set_cmt	(0X7D010FAC,	"switch jump",	0);
	set_cmt	(0X7D010FB0,	"jump table for switch statement",	0);
	create_byte	(0X7D010FB0);
	set_name	(0X7D010FB0,	"jpt_7D010FAC");
	create_byte	(0X7D010FB1);
	create_byte	(0X7D010FB2);
	create_byte	(0X7D010FB3);
	create_byte	(0X7D010FB4);
	set_cmt	(0X7D010FB6,	"jumptable 7D010FAC case 1",	1);
	create_insn	(0X7D010FB6);
	set_cmt	(0X7D010FD2,	"jumptable 7D010FAC case 2",	1);
	create_insn	(0X7D010FD2);
	set_cmt	(0X7D010FE6,	"jumptable 7D010FAC case 3",	1);
	create_insn	(0X7D010FE6);
	set_cmt	(0X7D010FFC,	"jumptable 7D010FAC case 4",	1);
	create_insn	(0X7D010FFC);
	set_cmt	(0X7D011012,	"jumptable 7D010FAC case 5",	1);
	create_insn	(0X7D011012);
	set_cmt	(0X7D011028,	"jumptable 7D010FAC default case",	1);
	create_insn	(0X7D011028);
	set_name	(0X7D011028,	"def_7D010FAC");
	create_insn	(0X7D011032);
	make_array	(0X7D011036,	0X2);
	create_dword	(0X7D011038);
	create_dword	(0X7D01103C);
	create_dword	(0X7D011040);
	create_dword	(0X7D011044);
	create_dword	(0X7D011048);
	create_dword	(0X7D01104C);
	create_dword	(0X7D011050);
	create_dword	(0X7D011054);
	create_dword	(0X7D011058);
	create_dword	(0X7D01105C);
	create_dword	(0X7D011060);
	create_dword	(0X7D011064);
	create_insn	(0X7D011068);
	set_name	(0X7D011068,	"tom_cipher_get_ctx_size");
	create_insn	(0X7D011082);
	create_insn	(0X7D01108C);
	create_insn	(0X7D01109C);
	create_insn	(0X7D0110B0);
	create_insn	(0X7D0110B6);
	create_insn	(0X7D0110BC);
	create_insn	(0X7D0110C2);
	create_insn	(0X7D0110CC);
	create_dword	(0X7D0110D0);
	create_dword	(0X7D0110D4);
	create_dword	(0X7D0110D8);
	create_dword	(0X7D0110DC);
	create_dword	(0X7D0110E0);
	create_insn	(0X7D0110E4);
	set_name	(0X7D0110E4,	"tom_mac_alloc_ctx");
	create_insn	(0X7D011106);
	create_insn	(0X7D01111C);
	create_insn	(0X7D011128);
	create_insn	(0X7D01112E);
	create_insn	(0X7D011138);
	create_dword	(0X7D01113C);
	create_dword	(0X7D011140);
	create_dword	(0X7D011144);
	create_dword	(0X7D011148);
	create_insn	(0X7D01114C);
	set_name	(0X7D01114C,	"tom_authenc_get_ctx_size");
	create_insn	(0X7D011160);
	create_insn	(0X7D01116A);
	make_array	(0X7D01116E,	0X2);
	create_dword	(0X7D011170);
	create_dword	(0X7D011174);
	create_insn	(0X7D011178);
	set_name	(0X7D011178,	"tom_alloc_ecc_keypair");
	set_cmt	(0X7D011184,	"s",	0);
	set_cmt	(0X7D01118C,	"ptr",	0);
	set_cmt	(0X7D011192,	"ptr",	0);
	set_cmt	(0X7D011198,	"ptr",	0);
	set_cmt	(0X7D0111A2,	"s",	0);
	create_insn	(0X7D0111A2);
	set_cmt	(0X7D0111AC,	"s",	0);
	create_dword	(0X7D0111BC);
	create_insn	(0X7D0111C0);
	set_name	(0X7D0111C0,	"tom_alloc_ecc_public_key");
	set_cmt	(0X7D0111CC,	"s",	0);
	set_cmt	(0X7D0111D4,	"ptr",	0);
	set_cmt	(0X7D0111DA,	"ptr",	0);
	set_cmt	(0X7D0111E4,	"s",	0);
	create_insn	(0X7D0111E4);
	make_array	(0X7D0111F2,	0X2);
	create_dword	(0X7D0111F4);
	create_insn	(0X7D0111F8);
	set_name	(0X7D0111F8,	"tom_dsa_verify");
	create_insn	(x=0X7D011200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011202);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011212);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011218);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011222);
	op_hex		(x,	1);
	create_insn	(x=0X7D011226);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01122C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011252);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01125A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01125E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011266);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01126A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01126E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01127A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011282);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011290);
	op_stkvar	(x,	1);
	create_insn	(0X7D01129A);
	create_insn	(0X7D01129E);
	make_array	(0X7D0112A6,	0X2);
	create_dword	(0X7D0112A8);
	create_dword	(0X7D0112AC);
	create_dword	(0X7D0112B0);
	create_dword	(0X7D0112B4);
	create_dword	(x=0X7D0112B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0112BC);
	set_name	(0X7D0112BC,	"tom_dsa_sign");
	create_insn	(x=0X7D0112C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0112CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112D2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0112D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0112E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0112F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01130A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01130C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01131A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01131E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011322);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01132A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01132C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01133C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011342);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01134C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01134E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01135A);
	create_insn	(x=0X7D01135C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01135E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011372);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011376);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011378);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01137A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01137C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01137E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011388);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01138A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01139A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0113A6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0113A8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0113BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0113BE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0113C2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D0113D4);
	create_insn	(x=0X7D0113D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0113D8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0113E2);
	create_insn	(0X7D0113E6);
	create_insn	(0X7D0113EA);
	create_dword	(0X7D0113F4);
	create_dword	(x=0X7D0113F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0113FC);
	create_dword	(x=0X7D011400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011404);
	create_dword	(0X7D011408);
	create_dword	(0X7D01140C);
	create_dword	(0X7D011410);
	create_insn	(0X7D011414);
	set_name	(0X7D011414,	"tee_algo_to_ltc_hashindex");
	create_insn	(0X7D01143C);
	create_insn	(0X7D01144C);
	create_insn	(0X7D01145E);
	create_insn	(0X7D01147C);
	create_insn	(0X7D0114A2);
	create_insn	(0X7D0114B8);
	create_insn	(0X7D0114D8);
	create_insn	(0X7D0114E8);
	create_insn	(x=0X7D0114F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0114FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0114FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01150A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01151C);
	create_dword	(0X7D011520);
	create_dword	(0X7D011524);
	create_dword	(0X7D011528);
	create_dword	(0X7D01152C);
	create_dword	(0X7D011530);
	create_dword	(0X7D011534);
	create_dword	(0X7D011538);
	create_dword	(0X7D01153C);
	create_dword	(0X7D011540);
	create_dword	(0X7D011544);
	create_dword	(0X7D011548);
	create_dword	(0X7D01154C);
	create_dword	(0X7D011550);
	create_dword	(0X7D011554);
	create_dword	(0X7D011558);
	create_dword	(0X7D01155C);
	create_dword	(0X7D011560);
	create_dword	(0X7D011564);
	create_dword	(0X7D011568);
	create_dword	(0X7D01156C);
	create_dword	(x=0X7D011570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011574);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01157C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011584);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011588);
	create_dword	(0X7D01158C);
	create_insn	(0X7D011590);
	set_name	(0X7D011590,	"tom_rsassa_verify");
	create_insn	(x=0X7D011598);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0115C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0115D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0115D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0115E2,	"algo",	0);
	create_insn	(0X7D0115E2);
	set_cmt	(0X7D0115E4,	"ltc_hashindex",	0);
	create_insn	(x=0X7D0115E4);
	op_stkvar	(x,	1);
	create_insn	(0X7D011616);
	create_insn	(0X7D011628);
	create_insn	(0X7D011636);
	create_insn	(0X7D01163A);
	create_insn	(x=0X7D01163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01163E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011646);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01164A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01164E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01165E);
	op_stkvar	(x,	1);
	create_insn	(0X7D011666);
	create_dword	(x=0X7D011670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011674);
	create_dword	(0X7D011678);
	create_dword	(0X7D01167C);
	create_dword	(0X7D011680);
	create_dword	(0X7D011684);
	create_dword	(0X7D011688);
	create_dword	(0X7D01168C);
	create_dword	(0X7D011690);
	create_dword	(0X7D011694);
	create_insn	(0X7D011698);
	set_name	(0X7D011698,	"tom_hash_update");
	set_cmt	(0X7D01169C,	"algo",	0);
	set_cmt	(0X7D01169E,	"ltc_hashindex",	0);
	create_insn	(x=0X7D01169E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0116AA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0116C8);
	make_array	(0X7D0116CE,	0X2);
	create_dword	(0X7D0116D0);
	create_dword	(0X7D0116D4);
	create_dword	(0X7D0116D8);
	create_insn	(0X7D0116DC);
	set_name	(0X7D0116DC,	"tom_hash_init");
	set_cmt	(0X7D0116E0,	"algo",	0);
	set_cmt	(0X7D0116E2,	"ltc_hashindex",	0);
	create_insn	(x=0X7D0116E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0116EA);
	op_stkvar	(x,	1);
	create_insn	(0X7D011704);
	make_array	(0X7D01170A,	0X2);
	create_dword	(0X7D01170C);
	create_dword	(0X7D011710);
	create_dword	(0X7D011714);
	create_insn	(0X7D011718);
	set_name	(0X7D011718,	"tom_rsassa_sign");
	create_insn	(x=0X7D011720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011732);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01173A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01175C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011764);
	op_stkvar	(x,	1);
	create_insn	(0X7D01178C);
	create_insn	(0X7D01179E);
	create_insn	(0X7D0117AC);
	create_insn	(0X7D0117B0);
	set_cmt	(0X7D0117B2,	"algo",	0);
	set_cmt	(0X7D0117B4,	"ltc_hashindex",	0);
	create_insn	(x=0X7D0117B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0117D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0117D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117DA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0117EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0117EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0117FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011806);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01180E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011814);
	op_stkvar	(x,	1);
	create_dword	(0X7D011824);
	create_dword	(0X7D011828);
	create_dword	(0X7D01182C);
	create_dword	(0X7D011830);
	create_dword	(0X7D011834);
	create_dword	(0X7D011838);
	create_dword	(0X7D01183C);
	create_dword	(x=0X7D011840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011844);
	create_dword	(x=0X7D011848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01184C);
	create_insn	(0X7D011850);
	set_name	(0X7D011850,	"tom_rsaes_encrypt");
	create_insn	(x=0X7D011858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011872);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011876);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D011886,	"algo",	0);
	create_insn	(0X7D011886);
	set_cmt	(0X7D011888,	"ltc_hashindex",	0);
	create_insn	(x=0X7D011888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011896);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011898);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0118A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118BA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0118CE);
	create_insn	(x=0X7D0118DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0118DC,	"level",	0);
	set_cmt	(0X7D0118DE,	"fmt",	0);
	create_insn	(x=0X7D0118DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0118E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0118E2,	"line",	0);
	create_insn	(x=0X7D0118E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0118E8,	"level_ok",	0);
	create_dword	(x=0X7D0118F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0118FC);
	create_dword	(0X7D011900);
	create_dword	(x=0X7D011904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011908);
	create_dword	(x=0X7D01190C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011914);
	create_insn	(0X7D011918);
	set_name	(0X7D011918,	"tom_rsaes_decrypt");
	set_cmt	(0X7D01191C,	"lparam",	0);
	create_insn	(x=0X7D011920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011932);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01193A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01195C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011964);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011966,	"algo",	0);
	set_cmt	(0X7D011968,	"ltc_hashindex",	0);
	create_insn	(x=0X7D011968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011972);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011974,	"level",	0);
	create_insn	(x=0X7D01197A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01197C,	"line",	0);
	set_cmt	(0X7D011980,	"level_ok",	0);
	create_insn	(0X7D011988);
	create_insn	(x=0X7D01198E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011992);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01199C);
	op_stkvar	(x,	1);
	create_insn	(0X7D0119A0);
	create_insn	(x=0X7D0119A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119A6,	"size",	0);
	create_insn	(x=0X7D0119A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0119C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119C2,	"padding",	0);
	create_insn	(x=0X7D0119C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119C6,	"hash_idx",	0);
	create_insn	(x=0X7D0119C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0119C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119CA,	"stat",	0);
	create_insn	(x=0X7D0119CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119CC,	"outlen",	0);
	create_insn	(x=0X7D0119CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119CE,	"key",	0);
	create_insn	(x=0X7D0119CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119D2,	"in",	0);
	create_insn	(x=0X7D0119D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119D4,	"inlen",	0);
	set_cmt	(0X7D0119D6,	"out",	0);
	create_insn	(0X7D0119E6);
	create_insn	(x=0X7D0119EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0119F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119F2,	"fmt",	0);
	create_insn	(x=0X7D0119F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0119F4,	"level",	0);
	create_insn	(x=0X7D0119F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0119F8,	"line",	0);
	set_cmt	(0X7D0119FC,	"level_ok",	0);
	create_insn	(x=0X7D011A06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011A08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A0A,	"fmt",	0);
	create_insn	(x=0X7D011A0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A0C,	"level",	0);
	create_insn	(x=0X7D011A0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011A10,	"line",	0);
	set_cmt	(0X7D011A14,	"level_ok",	0);
	create_insn	(x=0X7D011A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011A24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A26,	"level",	0);
	set_cmt	(0X7D011A28,	"fmt",	0);
	create_insn	(x=0X7D011A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011A2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A2C,	"line",	0);
	create_insn	(x=0X7D011A30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011A32,	"level_ok",	0);
	set_cmt	(0X7D011A3C,	"num",	0);
	create_insn	(x=0X7D011A3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A4A,	"destination",	0);
	create_insn	(x=0X7D011A4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011A4C,	"source",	0);
	set_cmt	(0X7D011A52,	"ptr",	0);
	create_insn	(0X7D011A5A);
	create_dword	(x=0X7D011A64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011A6C);
	create_dword	(x=0X7D011A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011A74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011A78);
	create_dword	(x=0X7D011A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011A80);
	create_dword	(0X7D011A84);
	create_dword	(0X7D011A88);
	create_insn	(0X7D011A8C);
	set_name	(0X7D011A8C,	"tom_hash_final");
	set_cmt	(0X7D011A94,	"algo",	0);
	set_cmt	(0X7D011A96,	"ltc_hashindex",	0);
	create_insn	(x=0X7D011A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011AA4);
	op_stkvar	(x,	1);
	create_insn	(0X7D011ABA);
	create_insn	(x=0X7D011ABE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011AD2,	"destination",	0);
	set_cmt	(0X7D011AD4,	"source",	0);
	set_cmt	(0X7D011AD6,	"num",	0);
	create_insn	(0X7D011ADE);
	create_insn	(0X7D011AE2);
	create_insn	(0X7D011AE6);
	make_array	(0X7D011AEE,	0X2);
	create_dword	(x=0X7D011AF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011AF4);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D011AF8);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_dword	(x=0X7D011AFC);
	op_enum		(x,	0,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D011B00);
	set_name	(0X7D011B00,	"rsadorep");
	set_cmt	(0X7D011B08,	"size",	0);
	create_insn	(x=0X7D011B12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011B2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011B36,	"level",	0);
	create_insn	(x=0X7D011B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011B4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011B4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011B50,	"fmt",	0);
	create_insn	(x=0X7D011B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011B52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011B54,	"line",	0);
	set_cmt	(0X7D011B58,	"level_ok",	0);
	create_insn	(x=0X7D011B62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011B64,	"level",	0);
	set_cmt	(0X7D011B66,	"fmt",	0);
	create_insn	(x=0X7D011B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011B68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011B6A,	"line",	0);
	create_insn	(x=0X7D011B6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011B70,	"level_ok",	0);
	create_insn	(0X7D011B7A);
	set_cmt	(0X7D011B86,	"num",	0);
	create_insn	(0X7D011B92);
	set_cmt	(0X7D011B94,	"destination",	0);
	set_cmt	(0X7D011B96,	"source",	0);
	create_insn	(0X7D011BA0);
	set_cmt	(0X7D011BA4,	"ptr",	0);
	create_insn	(0X7D011BA4);
	make_array	(0X7D011BB2,	0X2);
	create_dword	(0X7D011BB4);
	create_dword	(x=0X7D011BB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011BBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011BC0);
	create_dword	(0X7D011BC4);
	create_dword	(0X7D011BC8);
	create_dword	(0X7D011BCC);
	create_insn	(0X7D011BD0);
	set_name	(0X7D011BD0,	"tom_do_dh_shared_secret");
	create_insn	(x=0X7D011BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011BF8);
	op_stkvar	(x,	1);
	create_dword	(0X7D011BFC);
	create_insn	(0X7D011C00);
	set_name	(0X7D011C00,	"tom_gen_ecc_key");
	set_cmt	(0X7D011C04,	"algo",	0);
	set_cmt	(0X7D011C06,	"key_size_bytes",	0);
	create_insn	(x=0X7D011C06);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011C0A,	"key_size_bits",	0);
	create_insn	(x=0X7D011C0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011C0C,	"curve",	0);
	create_insn	(x=0X7D011C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011C1E);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	create_insn	(x=0X7D011C26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011C32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C34);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C42);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C4E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C5A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C64);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C6C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011C74);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011C76);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011C7C,	"key",	0);
	create_insn	(x=0X7D011C7C);
	op_stkvar	(x,	1);
	create_insn	(0X7D011C86);
	create_dword	(x=0X7D011C8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011C94);
	create_insn	(0X7D011C98);
	set_name	(0X7D011C98,	"tom_gen_dh_key");
	create_insn	(x=0X7D011C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011CA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011CC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011CC4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011CC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011CCA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011CCE);
	op_stkvar	(x,	1);
	create_insn	(0X7D011CDC);
	make_array	(0X7D011CE2,	0X2);
	create_dword	(x=0X7D011CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011CEC);
	create_insn	(0X7D011CF0);
	set_name	(0X7D011CF0,	"tom_gen_dsa_key");
	create_insn	(0X7D011D12);
	create_insn	(0X7D011D16);
	create_insn	(x=0X7D011D18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011D1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D30);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D011D38,	"key",	0);
	create_insn	(x=0X7D011D40);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D48);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D50);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D58);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D60);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011D68,	"key",	0);
	create_insn	(0X7D011D72);
	make_array	(0X7D011D7A,	0X2);
	create_dword	(x=0X7D011D7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011D84);
	create_insn	(0X7D011D88);
	set_name	(0X7D011D88,	"tom_gen_rsa_key");
	create_insn	(x=0X7D011D8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011D94);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011D9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D011D9E,	"e",	0);
	set_cmt	(0X7D011DA0,	"key",	0);
	create_insn	(x=0X7D011DA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011DA2,	"prng",	0);
	set_cmt	(0X7D011DA6,	"wprng",	0);
	set_cmt	(0X7D011DA8,	"size",	0);
	create_insn	(x=0X7D011DB6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011DC0,	"key",	0);
	create_insn	(x=0X7D011DC8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DD0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DD8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DE0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DE8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DF0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011DF8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011E00);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D011E04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011E08,	"key",	0);
	create_insn	(0X7D011E12);
	make_array	(0X7D011E1A,	0X2);
	create_dword	(x=0X7D011E1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011E24);
	create_insn	(0X7D011E28);
	set_name	(0X7D011E28,	"tom_authenc_final");
	create_insn	(0X7D011E38);
	create_insn	(0X7D011E3C);
	create_dword	(0X7D011E40);
	create_insn	(0X7D011E44);
	set_name	(0X7D011E44,	"tee_algo_to_ltc_cipherindex");
	create_insn	(0X7D011E6A);
	create_insn	(0X7D011E7A);
	create_insn	(0X7D011E7E);
	create_insn	(0X7D011E94);
	create_insn	(0X7D011E9E);
	create_insn	(0X7D011EAE);
	create_insn	(x=0X7D011EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011EC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D011EC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D011ED6);
	make_array	(0X7D011EDA,	0X2);
	create_dword	(0X7D011EDC);
	create_dword	(0X7D011EE0);
	create_dword	(0X7D011EE4);
	create_dword	(0X7D011EE8);
	create_dword	(0X7D011EEC);
	create_dword	(0X7D011EF0);
	create_dword	(0X7D011EF4);
	create_dword	(0X7D011EF8);
	create_dword	(x=0X7D011EFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011F00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D011F04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D011F08);
	create_dword	(0X7D011F0C);
	create_insn	(0X7D011F10);
	set_name	(0X7D011F10,	"tom_authenc_init");
	set_cmt	(0X7D011F1A,	"algo",	0);
	set_cmt	(0X7D011F1C,	"ltc_cipherindex",	0);
	create_insn	(x=0X7D011F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F28);
	op_stkvar	(x,	1);
	create_insn	(0X7D011F44);
	create_insn	(x=0X7D011F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011F76);
	op_stkvar	(x,	1);
	create_insn	(0X7D011F86);
	create_insn	(0X7D011F92);
	create_insn	(x=0X7D011FA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D011FB0,	"gcm",	0);
	set_cmt	(0X7D011FB2,	"IV",	0);
	set_cmt	(0X7D011FB4,	"IVlen",	0);
	create_insn	(0X7D011FC2);
	create_insn	(0X7D011FC6);
	make_array	(0X7D011FCE,	0X2);
	create_dword	(0X7D011FD0);
	create_dword	(0X7D011FD4);
	create_dword	(0X7D011FD8);
	create_dword	(0X7D011FDC);
	create_insn	(0X7D011FE0);
	set_name	(0X7D011FE0,	"tom_cipher_get_block_size");
	set_cmt	(0X7D011FE4,	"ltc_cipherindex",	0);
	create_insn	(x=0X7D011FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D011FEC);
	op_stkvar	(x,	1);
	create_insn	(0X7D011FFA);
	create_dword	(0X7D012000);
	create_dword	(0X7D012004);
	create_insn	(0X7D012008);
	set_name	(0X7D012008,	"tom_cipher_update");
	set_cmt	(0X7D012014,	"ct",	0);
	create_insn	(x=0X7D012014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012016);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012018);
	op_stkvar	(x,	1);
	create_insn	(0X7D012038);
	create_insn	(0X7D01204A);
	create_insn	(0X7D01205A);
	create_insn	(0X7D012068);
	create_insn	(0X7D01206E);
	create_insn	(0X7D01207C);
	set_cmt	(0X7D012082,	"pt",	0);
	create_insn	(0X7D012082);
	set_cmt	(0X7D012084,	"len",	0);
	set_cmt	(0X7D012086,	"ctr",	0);
	create_insn	(0X7D012090);
	create_insn	(x=0X7D012096);
	op_stkvar	(x,	1);
	create_insn	(0X7D0120A8);
	create_insn	(x=0X7D0120AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0120B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0120B6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0120C4);
	create_insn	(0X7D0120D0);
	make_array	(0X7D0120D6,	0X2);
	create_dword	(0X7D0120D8);
	create_dword	(0X7D0120DC);
	create_dword	(0X7D0120E0);
	create_dword	(0X7D0120E4);
	create_dword	(0X7D0120E8);
	create_dword	(0X7D0120EC);
	create_dword	(0X7D0120F0);
	create_dword	(0X7D0120F4);
	create_insn	(0X7D0120F8);
	set_name	(0X7D0120F8,	"pool_postactions");
	create_insn	(x=0X7D012116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012118);
	op_plain_offset	(x,	1,	0X7D052A64);
	op_plain_offset	(x,	129,	0X7D052A64);
	create_insn	(x=0X7D01211C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012122);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01212A,	"m",	0);
	create_insn	(0X7D01212A);
	create_dword	(x=0X7D012134);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01213C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D012144);
	set_name	(0X7D012144,	"tom_prng_read");
	create_insn	(x=0X7D012146);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012158);
	op_plain_offset	(x,	1,	0X7D04D2A8);
	op_plain_offset	(x,	129,	0X7D04D2A8);
	create_insn	(0X7D012174);
	create_dword	(x=0X7D012178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01217C);
	create_dword	(0X7D012180);
	create_insn	(0X7D012184);
	set_name	(0X7D012184,	"tom_prng_add_entropy");
	create_insn	(x=0X7D012186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012198);
	op_plain_offset	(x,	1,	0X7D04D2A8);
	op_plain_offset	(x,	129,	0X7D04D2A8);
	create_insn	(0X7D0121B4);
	create_dword	(x=0X7D0121B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0121BC);
	create_dword	(0X7D0121C0);
	create_insn	(0X7D0121C4);
	set_name	(0X7D0121C4,	"ecc_populate_ltc_public_key");
	create_insn	(x=0X7D0121C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0121DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0121E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0121EC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0121FC,	"curve",	0);
	set_cmt	(0X7D0121FE,	"key_size_bits",	0);
	create_insn	(x=0X7D0121FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012200,	"algo",	0);
	set_cmt	(0X7D012202,	"key_size_bytes",	0);
	create_insn	(x=0X7D01220E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D012220);
	create_insn	(x=0X7D01222C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01223A);
	make_array	(0X7D012242,	0X2);
	create_dword	(x=0X7D012244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01224C);
	create_insn	(0X7D012250);
	set_name	(0X7D012250,	"tom_alloc_dh_keypair");
	set_cmt	(0X7D01225C,	"s",	0);
	set_cmt	(0X7D012264,	"s",	0);
	set_cmt	(0X7D01226C,	"ptr",	0);
	set_cmt	(0X7D012272,	"ptr",	0);
	set_cmt	(0X7D012278,	"ptr",	0);
	set_cmt	(0X7D01227E,	"ptr",	0);
	set_cmt	(0X7D012286,	"s",	0);
	create_insn	(0X7D012286);
	set_cmt	(0X7D012292,	"s",	0);
	set_cmt	(0X7D01229E,	"s",	0);
	create_insn	(0X7D0122AE);
	make_array	(0X7D0122B2,	0X2);
	create_dword	(0X7D0122B4);
	create_insn	(0X7D0122B8);
	set_name	(0X7D0122B8,	"tom_alloc_dsa_public_key");
	set_cmt	(0X7D0122C4,	"s",	0);
	set_cmt	(0X7D0122CC,	"s",	0);
	set_cmt	(0X7D0122D4,	"ptr",	0);
	set_cmt	(0X7D0122DA,	"ptr",	0);
	set_cmt	(0X7D0122E0,	"ptr",	0);
	set_cmt	(0X7D0122E8,	"s",	0);
	create_insn	(0X7D0122E8);
	set_cmt	(0X7D0122F4,	"s",	0);
	create_insn	(0X7D012304);
	create_dword	(0X7D012308);
	create_insn	(0X7D01230C);
	set_name	(0X7D01230C,	"tom_alloc_dsa_keypair");
	set_cmt	(0X7D012318,	"s",	0);
	set_cmt	(0X7D012320,	"s",	0);
	set_cmt	(0X7D012328,	"ptr",	0);
	set_cmt	(0X7D01232E,	"ptr",	0);
	set_cmt	(0X7D012334,	"ptr",	0);
	set_cmt	(0X7D01233A,	"ptr",	0);
	set_cmt	(0X7D012342,	"s",	0);
	create_insn	(0X7D012342);
	set_cmt	(0X7D01234E,	"s",	0);
	set_cmt	(0X7D01235A,	"s",	0);
	create_insn	(0X7D01236A);
	make_array	(0X7D01236E,	0X2);
	create_dword	(0X7D012370);
	create_insn	(0X7D012374);
	set_name	(0X7D012374,	"tom_alloc_rsa_public_key");
	set_cmt	(0X7D012380,	"s",	0);
	set_cmt	(0X7D012388,	"s",	0);
	set_cmt	(0X7D012390,	"ptr",	0);
	create_insn	(0X7D012398);
	create_insn	(0X7D01239C);
	create_dword	(0X7D0123A0);
	create_insn	(0X7D0123A4);
	set_name	(0X7D0123A4,	"tom_alloc_rsa_keypair");
	set_cmt	(0X7D0123B0,	"s",	0);
	set_cmt	(0X7D0123BA,	"s",	0);
	set_cmt	(0X7D0123C2,	"ptr",	0);
	set_cmt	(0X7D0123C8,	"ptr",	0);
	set_cmt	(0X7D0123CE,	"ptr",	0);
	set_cmt	(0X7D0123D4,	"ptr",	0);
	set_cmt	(0X7D0123DA,	"ptr",	0);
	set_cmt	(0X7D0123E0,	"ptr",	0);
	set_cmt	(0X7D0123E6,	"ptr",	0);
	set_cmt	(0X7D0123EE,	"s",	0);
	create_insn	(0X7D0123EE);
	set_cmt	(0X7D0123FA,	"s",	0);
	set_cmt	(0X7D012406,	"s",	0);
	set_cmt	(0X7D012412,	"s",	0);
	set_cmt	(0X7D01241E,	"s",	0);
	set_cmt	(0X7D01242A,	"s",	0);
	create_insn	(0X7D01243A);
	make_array	(0X7D01243E,	0X2);
	create_dword	(0X7D012440);
	create_insn	(0X7D012444);
	set_name	(0X7D012444,	"tom_ecc_verify");
	create_insn	(x=0X7D012450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01245A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01245C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01245E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012468,	"key",	0);
	create_insn	(x=0X7D01246A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01246C,	"key_size_bytes",	0);
	create_insn	(x=0X7D01246C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01246E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012470,	"algo",	0);
	set_cmt	(0X7D012472,	"ltc_key",	0);
	set_cmt	(0X7D012474,	"key_z",	0);
	create_insn	(x=0X7D012474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01247E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01248E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D012492);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01249A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01249C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124B6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0124C0);
	create_insn	(x=0X7D0124C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0124C6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0124D2);
	create_insn	(0X7D0124D6);
	make_array	(0X7D0124DE,	0X2);
	create_dword	(x=0X7D0124E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0124E4);
	create_dword	(0X7D0124E8);
	create_dword	(0X7D0124EC);
	create_insn	(0X7D0124F0);
	set_name	(0X7D0124F0,	"tom_mac_init");
	create_insn	(0X7D01251E);
	create_insn	(0X7D012534);
	set_cmt	(0X7D01253C,	"algo",	0);
	create_insn	(0X7D01253C);
	set_cmt	(0X7D01253E,	"ltc_hashindex",	0);
	create_insn	(x=0X7D01253E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01254A);
	op_stkvar	(x,	1);
	create_insn	(0X7D01255A);
	set_cmt	(0X7D01255E,	"algo",	0);
	create_insn	(0X7D01255E);
	set_cmt	(0X7D012560,	"ltc_cipherindex",	0);
	create_insn	(x=0X7D012560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01256E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01257E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012580);
	op_hex		(x,	1);
	set_cmt	(0X7D01258E,	"key",	0);
	create_insn	(x=0X7D012590);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012592,	"real_key_len",	0);
	create_insn	(x=0X7D012592);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012594,	"key_intermediate",	0);
	create_insn	(x=0X7D012594);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012596,	"key_len",	0);
	set_cmt	(0X7D012598,	"real_key",	0);
	create_insn	(x=0X7D012598);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01259E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0125A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0125A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0125AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0125C2,	"algo",	0);
	create_insn	(0X7D0125C2);
	set_cmt	(0X7D0125C4,	"ltc_cipherindex",	0);
	create_insn	(x=0X7D0125C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0125CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0125DA);
	create_insn	(0X7D0125DE);
	create_dword	(0X7D0125E4);
	create_dword	(0X7D0125E8);
	create_dword	(0X7D0125EC);
	create_dword	(0X7D0125F0);
	create_dword	(0X7D0125F4);
	create_dword	(0X7D0125F8);
	create_dword	(0X7D0125FC);
	create_insn	(0X7D012600);
	set_name	(0X7D012600,	"tom_cipher_init");
	set_cmt	(0X7D01260A,	"algo",	0);
	set_cmt	(0X7D01260C,	"ltc_cipherindex",	0);
	create_insn	(x=0X7D01260C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012612);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012618);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01264C,	"key",	0);
	create_insn	(x=0X7D01264E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012650,	"real_key_len",	0);
	create_insn	(x=0X7D012650);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012652,	"key_intermediate",	0);
	create_insn	(x=0X7D012652);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012654,	"key_len",	0);
	set_cmt	(0X7D012656,	"real_key",	0);
	create_insn	(x=0X7D012656);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01265C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01265E);
	op_stkvar	(x,	1);
	create_insn	(0X7D012664);
	create_insn	(0X7D012674);
	create_insn	(x=0X7D012684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01268A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0126B4,	"key",	0);
	create_insn	(0X7D0126B4);
	create_insn	(x=0X7D0126B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0126B8,	"real_key_len",	0);
	create_insn	(x=0X7D0126B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0126BA,	"key_intermediate",	0);
	create_insn	(x=0X7D0126BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0126BC,	"key_len",	0);
	set_cmt	(0X7D0126BE,	"real_key",	0);
	create_insn	(x=0X7D0126BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0126FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01270A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01270C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01270E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012712);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012716);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012718);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01272C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012732);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012736);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012738);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01273E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01274E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012760,	"source",	0);
	set_cmt	(0X7D012762,	"destination",	0);
	set_cmt	(0X7D012766,	"num",	0);
	create_insn	(0X7D01276E);
	create_insn	(x=0X7D012780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012784);
	op_stkvar	(x,	1);
	create_insn	(0X7D012798);
	create_dword	(0X7D0127A0);
	create_dword	(0X7D0127A4);
	create_dword	(0X7D0127A8);
	create_dword	(0X7D0127AC);
	create_dword	(0X7D0127B0);
	create_dword	(0X7D0127B4);
	create_dword	(0X7D0127B8);
	create_dword	(0X7D0127BC);
	create_dword	(0X7D0127C0);
	create_insn	(0X7D0127C4);
	set_name	(0X7D0127C4,	"tom_authenc_update_aad");
	set_cmt	(0X7D0127C8,	"adata",	0);
	set_cmt	(0X7D0127CC,	"adatalen",	0);
	create_insn	(x=0X7D0127CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0127E0);
	create_insn	(0X7D0127F0);
	create_dword	(0X7D0127F4);
	create_dword	(0X7D0127F8);
	create_dword	(0X7D0127FC);
	create_insn	(0X7D012800);
	set_name	(0X7D012800,	"tom_authenc_update_payload");
	create_insn	(x=0X7D012804);
	op_stkvar	(x,	1);
	create_insn	(0X7D012826);
	create_insn	(x=0X7D01282C);
	op_stkvar	(x,	1);
	create_insn	(0X7D012840);
	create_insn	(x=0X7D01284C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01285C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01286C);
	create_insn	(0X7D012872);
	make_array	(0X7D01287A,	0X2);
	create_dword	(0X7D01287C);
	create_dword	(0X7D012880);
	create_dword	(0X7D012884);
	create_insn	(0X7D012888);
	set_name	(0X7D012888,	"tom_authenc_dec_final");
	create_insn	(x=0X7D01288E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0128D0);
	create_insn	(x=0X7D0128D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0128D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0128DE,	"s2",	0);
	create_insn	(x=0X7D0128DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0128E0,	"s1",	0);
	create_insn	(x=0X7D0128E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0128E2,	"n",	0);
	create_insn	(0X7D0128F4);
	create_insn	(0X7D0128F8);
	make_array	(0X7D0128FE,	0X2);
	create_dword	(0X7D012900);
	create_dword	(0X7D012904);
	create_dword	(0X7D012908);
	create_dword	(0X7D01290C);
	create_dword	(0X7D012910);
	create_insn	(0X7D012914);
	set_name	(0X7D012914,	"tom_authenc_enc_final");
	create_insn	(x=0X7D012920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012936);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01293A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01293C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012940);
	op_stkvar	(x,	1);
	create_insn	(0X7D01295C);
	create_insn	(0X7D012978);
	create_insn	(0X7D01297C);
	create_insn	(0X7D01298C);
	create_insn	(0X7D012998);
	create_dword	(0X7D0129A0);
	create_dword	(0X7D0129A4);
	create_dword	(0X7D0129A8);
	create_dword	(0X7D0129AC);
	create_insn	(0X7D0129B0);
	set_name	(0X7D0129B0,	"tom_mac_update");
	create_insn	(0X7D0129E4);
	create_insn	(0X7D0129FA);
	create_insn	(0X7D012A0A);
	create_insn	(0X7D012A16);
	set_cmt	(0X7D012A2C,	"source",	0);
	set_cmt	(0X7D012A2E,	"num",	0);
	set_cmt	(0X7D012A30,	"destination",	0);
	create_insn	(0X7D012A50);
	create_insn	(0X7D012A84);
	set_cmt	(0X7D012A86,	"source",	0);
	set_cmt	(0X7D012A88,	"destination",	0);
	set_cmt	(0X7D012A8C,	"num",	0);
	create_insn	(0X7D012A9C);
	make_array	(0X7D012AA2,	0X2);
	create_dword	(0X7D012AA4);
	create_dword	(0X7D012AA8);
	create_dword	(0X7D012AAC);
	create_dword	(0X7D012AB0);
	create_dword	(0X7D012AB4);
	create_insn	(0X7D012AB8);
	set_name	(0X7D012AB8,	"tom_cipher_final");
	create_insn	(0X7D012ADE);
	create_insn	(0X7D012AEE);
	set_cmt	(0X7D012AF4,	"num_rounds",	0);
	set_cmt	(0X7D012AFE,	"cipher",	0);
	create_insn	(0X7D012AFE);
	create_insn	(0X7D012B08);
	create_insn	(0X7D012B10);
	create_insn	(0X7D012B18);
	create_insn	(0X7D012B2A);
	create_dword	(0X7D012B2C);
	create_dword	(0X7D012B30);
	create_dword	(0X7D012B34);
	create_insn	(0X7D012B38);
	set_name	(0X7D012B38,	"tom_mac_final");
	create_insn	(x=0X7D012B3A);
	op_stkvar	(x,	1);
	create_insn	(0X7D012B64);
	create_insn	(0X7D012B7A);
	create_insn	(x=0X7D012B82);
	op_stkvar	(x,	1);
	create_insn	(0X7D012B8A);
	create_insn	(x=0X7D012B8C);
	op_stkvar	(x,	1);
	create_insn	(0X7D012B98);
	set_cmt	(0X7D012BB8,	"source",	0);
	create_insn	(x=0X7D012BBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012BBE,	"destination",	0);
	set_cmt	(0X7D012BC4,	"num",	0);
	create_insn	(0X7D012BD6);
	create_insn	(x=0X7D012BDC);
	op_hex		(x,	1);
	create_insn	(0X7D012C14);
	make_array	(0X7D012C1A,	0X2);
	create_dword	(0X7D012C1C);
	create_dword	(0X7D012C20);
	create_dword	(0X7D012C24);
	create_dword	(0X7D012C28);
	create_dword	(0X7D012C2C);
	create_insn	(0X7D012C30);
	set_name	(0X7D012C30,	"tee_tom_init");
	create_insn	(x=0X7D012C32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D012C3C,	"size",	0);
	set_cmt	(0X7D012C40,	"put",	0);
	create_insn	(x=0X7D012C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012C42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D012C44,	"bn_bits",	0);
	set_cmt	(0X7D012C48,	"sync",	0);
	create_insn	(x=0X7D012C48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012C4A,	"pool",	0);
	create_insn	(x=0X7D012C4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D012C4C,	"get",	0);
	create_insn	(x=0X7D012C4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D012C54,	"callback",	0);
	create_insn	(x=0X7D012C54);
	op_plain_offset	(x,	1,	0X7D040318);
	op_plain_offset	(x,	129,	0X7D040318);
	create_insn	(x=0X7D012C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012C98);
	op_plain_offset	(x,	1,	0X7D04D2A8);
	op_plain_offset	(x,	129,	0X7D04D2A8);
	create_insn	(x=0X7D012CA8);
	op_plain_offset	(x,	1,	0X7D04F008);
	op_plain_offset	(x,	129,	0X7D04F008);
	create_insn	(0X7D012CC0);
	create_insn	(x=0X7D012CD2);
	op_plain_offset	(x,	1,	0X7D04F008);
	op_plain_offset	(x,	129,	0X7D04F008);
	create_insn	(0X7D012CDA);
	create_dword	(x=0X7D012CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D012CE8,	"put");
	create_dword	(x=0X7D012CEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D012CEC,	"sync");
	create_dword	(x=0X7D012CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D012CF0,	"get");
	create_dword	(x=0X7D012CF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012CF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012CFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012D1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D012D20);
	create_dword	(0X7D012D24);
	create_dword	(0X7D012D28);
	create_insn	(0X7D012D2C);
	set_name	(0X7D012D2C,	"ecc_populate_ltc_private_key");
	set_cmt	(0X7D012D44,	"curve",	0);
	set_cmt	(0X7D012D48,	"key_size_bits",	0);
	create_insn	(x=0X7D012D48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012D4A,	"algo",	0);
	set_cmt	(0X7D012D4C,	"key_size_bytes",	0);
	create_insn	(x=0X7D012D58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D012D6A);
	create_insn	(x=0X7D012D76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D012D84);
	make_array	(0X7D012D8A,	0X2);
	create_dword	(x=0X7D012D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D012D90);
	create_insn	(0X7D012D94);
	set_name	(0X7D012D94,	"tom_do_ecc_shared_secret");
	create_insn	(x=0X7D012DAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012DB2,	"algo",	0);
	set_cmt	(0X7D012DB6,	"key",	0);
	create_insn	(x=0X7D012DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012DBA,	"key_size_bytes",	0);
	set_cmt	(0X7D012DBC,	"ltc_key",	0);
	create_insn	(x=0X7D012DBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012DC6,	"algo",	0);
	set_cmt	(0X7D012DC8,	"ltc_key",	0);
	create_insn	(x=0X7D012DC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012DCA,	"key_size_bytes",	0);
	create_insn	(x=0X7D012DCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012DCC,	"key",	0);
	set_cmt	(0X7D012DCE,	"key_z",	0);
	create_insn	(x=0X7D012DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012DEC);
	op_stkvar	(x,	1);
	create_insn	(0X7D012DF8);
	create_insn	(0X7D012DFC);
	create_dword	(0X7D012E04);
	create_dword	(0X7D012E08);
	create_insn	(0X7D012E0C);
	set_name	(0X7D012E0C,	"tom_ecc_sign");
	create_insn	(x=0X7D012E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012E1A,	"algo",	0);
	create_insn	(x=0X7D012E20);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012E22,	"key_size_bytes",	0);
	create_insn	(x=0X7D012E22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D012E24,	"ltc_key",	0);
	create_insn	(x=0X7D012E30);
	op_stkvar	(x,	1);
	create_insn	(0X7D012E40);
	create_insn	(x=0X7D012E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E86);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D012E88);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D012E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012E9E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D012EA2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D012EB4);
	create_insn	(x=0X7D012EB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D012EB8);
	op_stkvar	(x,	1);
	create_insn	(0X7D012EC2);
	create_insn	(0X7D012EC6);
	create_dword	(0X7D012ED0);
	create_dword	(x=0X7D012ED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D012EDC);
	create_dword	(0X7D012EE0);
	create_dword	(0X7D012EE4);
	create_insn	(0X7D012EE8);
	create_insn	(x=0X7D012EEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012EF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012EFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D012F0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D012F14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012F1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D012F20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D012F24);
	set_name	(0X7D012F24,	"rijndael_setup");
	create_insn	(x=0X7D012F38);
	op_hex		(x,	1);
	create_insn	(x=0X7D012FDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01301A);
	create_insn	(x=0X7D013030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D013098);
	create_insn	(x=0X7D0130B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01315E);
	create_insn	(x=0X7D013164);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01317C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D013260);
	create_insn	(0X7D01327E);
	create_insn	(0X7D013284);
	create_insn	(0X7D01328A);
	create_insn	(0X7D013290);
	make_array	(0X7D013296,	0X2);
	create_dword	(x=0X7D013298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01329C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0132A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0132A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0132A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0132AC);
	create_insn	(x=0X7D0132E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0132EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0132F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0132FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013306);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01330E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013346);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01334A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01334E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013366);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013386);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0133FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01344A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01347E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0134DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0134E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0134E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01360C);
	op_stkvar	(x,	1);
	create_insn	(0X7D013610);
	create_dword	(x=0X7D013618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01361C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01362C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D013638);
	create_insn	(x=0X7D01368E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0136A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0136CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013894);
	op_hex		(x,	1);
	create_insn	(x=0X7D0138AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0138BC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0138DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0138F0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0138FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D013920);
	op_hex		(x,	1);
	create_insn	(x=0X7D01393A);
	op_hex		(x,	1);
	create_insn	(x=0X7D013942);
	op_hex		(x,	1);
	create_insn	(x=0X7D013958);
	op_hex		(x,	1);
	create_insn	(x=0X7D01395C);
	op_hex		(x,	1);
	create_insn	(x=0X7D013980);
	op_hex		(x,	1);
	create_insn	(0X7D01399A);
	make_array	(0X7D0139A2,	0X2);
	create_dword	(x=0X7D0139A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0139A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0139AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0139B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0139B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0139B8);
	create_insn	(x=0X7D0139CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A7C);
	op_hex		(x,	1);
	create_insn	(x=0X7D013A80);
	op_hex		(x,	1);
	create_insn	(x=0X7D013A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013A98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013AAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013AC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013B04);
	op_hex		(x,	1);
	create_insn	(x=0X7D013B10);
	op_hex		(x,	1);
	create_insn	(x=0X7D013B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013B4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013B5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013B6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013B76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7D013C12,	0X2);
	create_dword	(x=0X7D013C14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D013C3C);
	create_insn	(x=0X7D013C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013C4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013C4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D013C6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013C70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D013CC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013D02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D013D2A,	"source",	0);
	create_insn	(x=0X7D013D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013D30);
	op_hex		(x,	1);
	create_insn	(x=0X7D013D34);
	op_hex		(x,	1);
	create_insn	(x=0X7D013D40);
	op_hex		(x,	1);
	create_insn	(x=0X7D013D4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D013D54);
	op_hex		(x,	1);
	set_cmt	(0X7D013D5A,	"num",	0);
	create_insn	(x=0X7D013D62);
	op_hex		(x,	1);
	create_insn	(x=0X7D013D68);
	op_hex		(x,	1);
	set_cmt	(0X7D013D76,	"destination",	0);
	make_array	(0X7D013D82,	0X2);
	create_dword	(x=0X7D013D84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013D8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D013D94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D013D98);
	create_insn	(x=0X7D013D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D013DA4);
	op_stkvar	(x,	1);
	create_insn	(0X7D013DB0);
	set_cmt	(0X7D013DC2,	"idx",	0);
	create_insn	(x=0X7D013DD8);
	op_hex		(x,	1);
	create_insn	(0X7D013E12);
	create_insn	(x=0X7D013E1C);
	op_stkvar	(x,	1);
	create_insn	(0X7D013E28);
	create_insn	(0X7D013E2C);
	make_array	(0X7D013E32,	0X2);
	create_dword	(0X7D013E34);
	create_insn	(0X7D013E38);
	create_insn	(0X7D013EA8);
	create_insn	(0X7D013EBC);
	create_insn	(0X7D013EC8);
	create_insn	(0X7D013EE2);
	create_insn	(0X7D013EF4);
	create_insn	(0X7D013F3E);
	create_insn	(x=0X7D013F40);
	op_hex		(x,	1);
	create_insn	(0X7D013FA0);
	create_insn	(0X7D013FB4);
	create_insn	(0X7D013FBC);
	create_dword	(0X7D013FC0);
	create_insn	(0X7D013FC4);
	create_insn	(0X7D014016);
	create_insn	(0X7D014036);
	create_insn	(0X7D014052);
	create_insn	(0X7D01406E);
	create_insn	(0X7D014074);
	make_array	(0X7D01407A,	0X2);
	create_dword	(0X7D01407C);
	create_insn	(0X7D014080);
	create_insn	(0X7D014094);
	create_insn	(0X7D0140BA);
	create_insn	(0X7D014112);
	create_insn	(0X7D014118);
	create_insn	(x=0X7D01411C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01413C);
	create_insn	(0X7D014190);
	make_array	(0X7D014196,	0X2);
	create_dword	(0X7D014198);
	create_insn	(0X7D01419C);
	create_insn	(0X7D0141D2);
	create_insn	(0X7D0141F0);
	create_insn	(0X7D0141FE);
	create_insn	(0X7D01424E);
	create_insn	(0X7D014254);
	create_insn	(0X7D01425A);
	make_array	(0X7D01425E,	0X2);
	create_dword	(0X7D014260);
	create_insn	(0X7D014264);
	create_insn	(0X7D014276);
	set_cmt	(0X7D014286,	"idx",	0);
	make_array	(0X7D01439A,	0X2);
	create_dword	(0X7D01439C);
	create_insn	(0X7D0143A0);
	set_cmt	(0X7D0143B6,	"idx",	0);
	set_cmt	(0X7D0143E0,	"out",	0);
	set_cmt	(0X7D0143E2,	"outlen",	0);
	set_cmt	(0X7D0143FC,	"outlen",	0);
	set_cmt	(0X7D0143FE,	"out",	0);
	set_cmt	(0X7D014406,	"outlen",	0);
	set_cmt	(0X7D014408,	"out",	0);
	create_insn	(0X7D014436);
	create_insn	(0X7D01443A);
	make_array	(0X7D014442,	0X2);
	create_dword	(0X7D014444);
	create_insn	(0X7D014448);
	create_insn	(0X7D01445C);
	set_cmt	(0X7D01446E,	"idx",	0);
	create_insn	(x=0X7D01454C);
	op_stkvar	(x,	1);
	create_insn	(0X7D014566);
	create_insn	(0X7D014592);
	create_dword	(0X7D014598);
	create_insn	(0X7D01459C);
	create_insn	(x=0X7D0145CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0145E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0145FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01462A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01465E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0146AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0146C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0146E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0146FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01471A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014736);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01478C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0147A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0147C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0147E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0147FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014832);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01484E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0148A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0148BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0148D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01492E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014952);
	op_stkvar	(x,	1);
	create_dword	(0X7D014974);
	create_dword	(0X7D014978);
	create_dword	(0X7D01497C);
	create_dword	(0X7D014980);
	create_dword	(0X7D014984);
	create_dword	(0X7D014988);
	create_dword	(0X7D01498C);
	create_dword	(0X7D014990);
	create_dword	(0X7D014994);
	create_dword	(0X7D014998);
	create_dword	(0X7D01499C);
	create_dword	(0X7D0149A0);
	create_dword	(0X7D0149A4);
	create_dword	(0X7D0149A8);
	create_dword	(0X7D0149AC);
	create_dword	(0X7D0149B0);
	create_dword	(0X7D0149B4);
	create_dword	(0X7D0149B8);
	create_dword	(0X7D0149BC);
	create_dword	(0X7D0149C0);
	create_dword	(0X7D0149C4);
	create_dword	(0X7D0149C8);
	create_dword	(0X7D0149CC);
	create_dword	(0X7D0149D0);
	create_dword	(0X7D0149D4);
	create_dword	(0X7D0149D8);
	create_dword	(0X7D0149DC);
	create_dword	(0X7D0149E0);
	create_dword	(0X7D0149E4);
	create_dword	(0X7D0149E8);
	create_dword	(0X7D0149EC);
	create_dword	(0X7D0149F0);
	create_dword	(0X7D0149F4);
	create_dword	(0X7D0149F8);
	create_insn	(0X7D0149FC);
	create_insn	(x=0X7D014A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014AB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014B4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014B8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014BA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014C26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014C52);
	op_stkvar	(x,	1);
	make_array	(0X7D014C86,	0X2);
	create_dword	(0X7D014C88);
	create_dword	(0X7D014C8C);
	create_dword	(0X7D014C90);
	create_dword	(0X7D014C94);
	create_dword	(0X7D014C98);
	create_dword	(0X7D014C9C);
	create_dword	(0X7D014CA0);
	create_dword	(0X7D014CA4);
	create_dword	(0X7D014CA8);
	create_dword	(0X7D014CAC);
	create_dword	(0X7D014CB0);
	create_dword	(0X7D014CB4);
	create_dword	(0X7D014CB8);
	create_dword	(0X7D014CBC);
	create_dword	(0X7D014CC0);
	create_dword	(0X7D014CC4);
	create_dword	(0X7D014CC8);
	create_dword	(0X7D014CCC);
	create_dword	(0X7D014CD0);
	create_dword	(0X7D014CD4);
	create_dword	(0X7D014CD8);
	create_dword	(0X7D014CDC);
	create_dword	(0X7D014CE0);
	create_dword	(0X7D014CE4);
	create_dword	(0X7D014CE8);
	create_dword	(0X7D014CEC);
	create_dword	(0X7D014CF0);
	create_insn	(0X7D014CF4);
	set_name	(0X7D014CF4,	"md5_init");
	create_insn	(0X7D014D1A);
	make_array	(0X7D014D1E,	0X2);
	create_dword	(0X7D014D20);
	create_dword	(0X7D014D24);
	create_insn	(0X7D014D28);
	create_insn	(x=0X7D014D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014E4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014F96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D014FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015032);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015034);
	op_stkvar	(x,	1);
	make_array	(0X7D015052,	0X2);
	create_dword	(0X7D015054);
	create_dword	(0X7D015058);
	create_dword	(0X7D01505C);
	create_dword	(0X7D015060);
	create_insn	(0X7D015064);
	set_name	(0X7D015064,	"sha1_init");
	create_insn	(0X7D01508E);
	make_array	(0X7D015092,	0X2);
	create_dword	(0X7D015094);
	create_dword	(0X7D015098);
	create_dword	(0X7D01509C);
	create_insn	(0X7D0150A0);
	set_name	(0X7D0150A0,	"sha224_init");
	create_insn	(0X7D0150D2);
	make_array	(0X7D0150D6,	0X2);
	create_dword	(0X7D0150D8);
	create_dword	(0X7D0150DC);
	create_dword	(0X7D0150E0);
	create_dword	(0X7D0150E4);
	create_dword	(0X7D0150E8);
	create_dword	(0X7D0150EC);
	create_dword	(0X7D0150F0);
	create_dword	(0X7D0150F4);
	create_insn	(0X7D0150F8);
	create_insn	(x=0X7D015114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015172);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015176);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01517A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0151A0);
	op_stkvar	(x,	1);
	create_dword	(0X7D015554);
	create_dword	(0X7D015558);
	create_dword	(0X7D01555C);
	create_dword	(0X7D015560);
	create_dword	(0X7D015564);
	create_dword	(0X7D015568);
	create_dword	(0X7D01556C);
	create_dword	(0X7D015570);
	create_dword	(0X7D015574);
	create_dword	(0X7D015578);
	create_dword	(0X7D01557C);
	create_dword	(0X7D015580);
	create_dword	(0X7D015584);
	create_dword	(0X7D015588);
	create_insn	(0X7D01558C);
	create_insn	(x=0X7D015B6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015CC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D015F42);
	op_stkvar	(x,	1);
	make_array	(0X7D015F46,	0X2);
	create_dword	(0X7D015F48);
	create_dword	(0X7D015F4C);
	create_dword	(0X7D015F50);
	create_dword	(0X7D015F54);
	create_dword	(0X7D015F58);
	create_dword	(0X7D015F5C);
	create_dword	(0X7D015F60);
	create_dword	(0X7D015F64);
	create_dword	(0X7D015F68);
	create_dword	(0X7D015F6C);
	create_dword	(0X7D015F70);
	create_dword	(0X7D015F74);
	create_dword	(0X7D015F78);
	create_dword	(0X7D015F7C);
	create_dword	(0X7D015F80);
	create_dword	(0X7D015F84);
	create_dword	(0X7D015F88);
	create_dword	(0X7D015F8C);
	create_dword	(0X7D015F90);
	create_dword	(0X7D015F94);
	create_dword	(0X7D015F98);
	create_dword	(0X7D015F9C);
	create_dword	(0X7D015FA0);
	create_dword	(0X7D015FA4);
	create_dword	(0X7D015FA8);
	create_dword	(0X7D015FAC);
	create_dword	(0X7D015FB0);
	create_dword	(0X7D015FB4);
	create_dword	(0X7D015FB8);
	create_dword	(0X7D015FBC);
	create_dword	(0X7D015FC0);
	create_dword	(0X7D015FC4);
	create_dword	(0X7D015FC8);
	create_dword	(0X7D015FCC);
	create_dword	(0X7D015FD0);
	create_insn	(0X7D015FD4);
	create_insn	(x=0X7D016018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01605E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0160A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0160EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016132);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0161BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016206);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01624C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016292);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0162D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01631C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0163F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016400);
	op_stkvar	(x,	1);
	make_array	(0X7D01641E,	0X2);
	create_dword	(0X7D016420);
	create_dword	(0X7D016424);
	create_dword	(0X7D016428);
	create_dword	(0X7D01642C);
	create_dword	(0X7D016430);
	create_dword	(0X7D016434);
	create_dword	(0X7D016438);
	create_dword	(0X7D01643C);
	create_dword	(0X7D016440);
	create_dword	(0X7D016444);
	create_dword	(0X7D016448);
	create_dword	(0X7D01644C);
	create_dword	(0X7D016450);
	create_dword	(0X7D016454);
	create_dword	(0X7D016458);
	create_insn	(0X7D01645C);
	set_name	(0X7D01645C,	"sha256_init");
	create_insn	(0X7D01648E);
	make_array	(0X7D016492,	0X2);
	create_dword	(0X7D016494);
	create_dword	(0X7D016498);
	create_dword	(0X7D01649C);
	create_dword	(0X7D0164A0);
	create_dword	(0X7D0164A4);
	create_dword	(0X7D0164A8);
	create_dword	(0X7D0164AC);
	create_dword	(0X7D0164B0);
	create_insn	(0X7D0164B4);
	create_insn	(x=0X7D0164BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0164C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0164C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0164D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0164EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0164F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01650E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016522);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016526);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016532);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01653A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016546);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01654E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01657A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01659A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0165FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016602);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01660A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D016644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016646);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01665A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01665C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01666A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01666C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01666E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01668A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01668C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016698);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01669E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0166E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01674A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01675E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01678A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0167B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0167EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0167F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0167FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01680A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01682A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016832);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01687A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0168A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0168AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0168BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0168C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0168DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016952);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01695A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016962);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0169EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016CFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016EA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D016FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01700A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D017024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01703E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017042);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01704C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01705A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01705C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017068);
	op_stkvar	(x,	1);
	make_array	(0X7D01708A,	0X2);
	create_dword	(x=0X7D01708C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D017090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D017094);
	set_cmt	(0X7D0170C0,	"size",	0);
	create_insn	(x=0X7D0170C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0170CA,	"size",	0);
	create_insn	(x=0X7D0170D2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0170DC);
	create_insn	(0X7D0170E6);
	create_insn	(x=0X7D017106);
	op_hex		(x,	1);
	create_insn	(0X7D017110);
	create_insn	(0X7D017160);
	set_cmt	(0X7D017172,	"ptr",	0);
	create_insn	(0X7D017172);
	create_insn	(x=0X7D017174);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01717A,	"ptr",	0);
	create_insn	(x=0X7D017180);
	op_stkvar	(x,	1);
	create_insn	(0X7D017186);
	create_insn	(0X7D01718A);
	make_array	(0X7D017192,	0X2);
	create_dword	(0X7D017194);
	create_insn	(0X7D017198);
	set_cmt	(0X7D0171CE,	"size",	0);
	create_insn	(x=0X7D0171E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0171F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017200,	"destination",	0);
	create_insn	(0X7D017200);
	set_cmt	(0X7D017202,	"source",	0);
	set_cmt	(0X7D017204,	"num",	0);
	set_cmt	(0X7D01721E,	"out",	0);
	create_insn	(x=0X7D017236);
	op_hex		(x,	1);
	create_insn	(0X7D017242);
	create_insn	(0X7D01725E);
	set_cmt	(0X7D017260,	"ptr",	0);
	create_insn	(0X7D01726A);
	create_insn	(0X7D01726E);
	create_insn	(0X7D017272);
	make_array	(0X7D01727A,	0X2);
	create_dword	(0X7D01727C);
	create_insn	(0X7D017280);
	create_insn	(0X7D0172AC);
	create_dword	(0X7D0172B0);
	create_insn	(0X7D0172B4);
	create_insn	(0X7D0172C6);
	set_cmt	(0X7D0172CE,	"idx",	0);
	create_insn	(0X7D017304);
	create_insn	(0X7D017332);
	create_insn	(0X7D01736C);
	create_insn	(0X7D01737C);
	create_dword	(0X7D017380);
	create_insn	(0X7D017384);
	set_cmt	(0X7D017398,	"idx",	0);
	create_insn	(0X7D0173BA);
	set_cmt	(0X7D0173DC,	"out",	0);
	set_cmt	(0X7D0173DE,	"outlen",	0);
	create_insn	(0X7D017426);
	set_cmt	(0X7D017442,	"source",	0);
	set_cmt	(0X7D017444,	"destination",	0);
	set_cmt	(0X7D017448,	"num",	0);
	set_cmt	(0X7D01745C,	"out",	0);
	set_cmt	(0X7D017466,	"outlen",	0);
	set_cmt	(0X7D01746C,	"outlen",	0);
	set_cmt	(0X7D01746E,	"out",	0);
	create_insn	(0X7D01747C);
	make_array	(0X7D017482,	0X2);
	create_dword	(0X7D017484);
	create_insn	(0X7D017488);
	create_insn	(0X7D01749A);
	set_cmt	(0X7D01749E,	"idx",	0);
	create_insn	(0X7D0174E4);
	set_cmt	(0X7D017500,	"source",	0);
	set_cmt	(0X7D01750C,	"num",	0);
	set_cmt	(0X7D01750E,	"destination",	0);
	create_insn	(0X7D017520);
	make_array	(0X7D017526,	0X2);
	create_dword	(0X7D017528);
	create_insn	(0X7D01752C);
	set_name	(0X7D01752C,	"mp_init_multi");
	create_insn	(x=0X7D017532);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01753A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01753C,	"a",	0);
	create_insn	(x=0X7D01753E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017542);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D017544);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01754C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017554);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01755A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017560);
	op_stkvar	(x,	1);
	create_insn	(0X7D017564);
	create_insn	(x=0X7D017568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017570);
	op_stkvar	(x,	1);
	create_insn	(0X7D017574);
	make_array	(0X7D01757E,	0X2);
	create_dword	(x=0X7D017580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D017584);
	create_insn	(x=0X7D01758A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017594,	"a",	0);
	create_insn	(x=0X7D017596);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01759A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01759E,	"size_bits",	0);
	create_insn	(x=0X7D0175A0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0175A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0175AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175B4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0175BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175C0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0175C4);
	create_insn	(x=0X7D0175C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175D0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0175D4);
	create_dword	(x=0X7D0175E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0175E4);
	set_name	(0X7D0175E4,	"mp_clear_multi");
	create_insn	(x=0X7D0175E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0175F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0175F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0175FE);
	op_stkvar	(x,	1);
	create_insn	(0X7D017602);
	create_dword	(x=0X7D01760C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D017610);
	set_name	(0X7D017610,	"cipher_is_valid");
	set_cmt	(0X7D017614,	"m",	0);
	create_insn	(x=0X7D017614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01761C,	"m",	0);
	create_insn	(x=0X7D01761C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D017630);
	create_dword	(x=0X7D017638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D01763C);
	create_insn	(0X7D017640);
	set_name	(0X7D017640,	"find_cipher");
	set_cmt	(0X7D017646,	"m",	0);
	create_insn	(x=0X7D017646);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D017660,	"m",	0);
	create_insn	(x=0X7D017660);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01766A);
	set_cmt	(0X7D017670,	"m",	0);
	create_insn	(x=0X7D017670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01767C);
	create_dword	(x=0X7D017680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017684);
	create_insn	(0X7D017688);
	set_cmt	(0X7D01768E,	"m",	0);
	create_insn	(x=0X7D01768E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0176A8,	"m",	0);
	create_insn	(x=0X7D0176A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0176B2);
	set_cmt	(0X7D0176B8,	"m",	0);
	create_insn	(x=0X7D0176B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0176C4);
	create_dword	(x=0X7D0176C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0176CC);
	create_insn	(0X7D0176D0);
	set_cmt	(0X7D0176D6,	"m",	0);
	create_insn	(x=0X7D0176D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0176F0,	"m",	0);
	create_insn	(x=0X7D0176F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0176FA);
	set_cmt	(0X7D017700,	"m",	0);
	create_insn	(x=0X7D017700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01770C);
	create_dword	(x=0X7D017710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017714);
	create_insn	(0X7D017718);
	set_name	(0X7D017718,	"hash_is_valid");
	set_cmt	(0X7D01771C,	"m",	0);
	create_insn	(x=0X7D01771C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D017724,	"m",	0);
	create_insn	(x=0X7D017724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D017738);
	create_dword	(x=0X7D017740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017744);
	create_insn	(0X7D017748);
	set_name	(0X7D017748,	"prng_is_valid");
	set_cmt	(0X7D01774C,	"m",	0);
	create_insn	(x=0X7D01774C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D017754,	"m",	0);
	create_insn	(x=0X7D017754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D017768);
	create_dword	(x=0X7D017770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017774);
	create_insn	(0X7D017778);
	set_cmt	(0X7D01777E,	"m",	0);
	create_insn	(x=0X7D01777E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D017786,	"fname",	0);
	set_cmt	(0X7D01778C,	"lineno",	0);
	set_cmt	(0X7D0177AC,	"m",	0);
	create_insn	(x=0X7D0177AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0177B6);
	set_cmt	(0X7D0177BC,	"m",	0);
	create_insn	(x=0X7D0177BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0177C8);
	create_dword	(x=0X7D0177CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0177D0);
	set_name	(0X7D0177D0,	"lineno");
	create_insn	(0X7D0177D4);
	set_cmt	(0X7D0177DA,	"m",	0);
	create_insn	(x=0X7D0177DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0177E2,	"fname",	0);
	set_cmt	(0X7D0177E8,	"lineno",	0);
	set_cmt	(0X7D017802,	"m",	0);
	create_insn	(x=0X7D017802);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01780C);
	set_cmt	(0X7D017812,	"m",	0);
	create_insn	(x=0X7D017812);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01781E);
	make_array	(0X7D017822,	0X2);
	create_dword	(x=0X7D017824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017828);
	create_insn	(0X7D01782C);
	set_cmt	(0X7D017832,	"m",	0);
	create_insn	(x=0X7D017832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01783A,	"fname",	0);
	set_cmt	(0X7D017840,	"lineno",	0);
	set_cmt	(0X7D01785A,	"m",	0);
	create_insn	(x=0X7D01785A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D017864);
	set_cmt	(0X7D01786A,	"m",	0);
	create_insn	(x=0X7D01786A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D017876);
	make_array	(0X7D01787A,	0X2);
	create_dword	(x=0X7D01787C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D017880);
	create_insn	(0X7D017884);
	set_name	(0X7D017884,	"cbc_encrypt");
	create_insn	(0X7D017898);
	set_cmt	(0X7D0178A0,	"idx",	0);
	create_insn	(x=0X7D0178D2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0178DC);
	create_insn	(x=0X7D0178E2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0178EE);
	create_insn	(0X7D017924);
	create_dword	(0X7D01792C);
	create_insn	(0X7D017930);
	set_cmt	(0X7D017936,	"idx",	0);
	create_insn	(0X7D017952);
	create_insn	(0X7D017956);
	make_array	(0X7D01795A,	0X2);
	create_dword	(0X7D01795C);
	create_insn	(0X7D017960);
	set_name	(0X7D017960,	"cbc_decrypt");
	create_insn	(0X7D017972);
	set_cmt	(0X7D01797A,	"idx",	0);
	create_insn	(0X7D0179B6);
	create_insn	(x=0X7D0179BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0179C8);
	create_insn	(0X7D0179EA);
	create_insn	(0X7D017A0E);
	make_array	(0X7D017A16,	0X2);
	create_dword	(0X7D017A18);
	create_insn	(0X7D017A1C);
	create_insn	(x=0X7D017A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017A48);
	op_stkvar	(x,	1);
	create_insn	(0X7D017A66);
	create_insn	(0X7D017A6C);
	make_array	(0X7D017A72,	0X2);
	create_dword	(0X7D017A74);
	create_insn	(0X7D017A78);
	set_cmt	(0X7D017A7E,	"idx",	0);
	create_insn	(0X7D017A9A);
	create_insn	(0X7D017A9E);
	make_array	(0X7D017AA2,	0X2);
	create_dword	(0X7D017AA4);
	create_insn	(0X7D017AA8);
	set_name	(0X7D017AA8,	"ctr_encrypt");
	create_insn	(0X7D017ABA);
	set_cmt	(0X7D017AC2,	"idx",	0);
	create_insn	(x=0X7D017AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017AF8);
	op_stkvar	(x,	1);
	create_insn	(0X7D017B62);
	create_insn	(0X7D017B78);
	create_insn	(0X7D017B90);
	create_dword	(x=0X7D017B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D017B9C);
	create_insn	(x=0X7D017BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017BA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017BAC,	"idx",	0);
	create_insn	(0X7D017BB0);
	create_insn	(x=0X7D017BBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017BC8);
	op_hex		(x,	1);
	create_insn	(x=0X7D017BE6);
	op_hex		(x,	1);
	create_insn	(x=0X7D017BFC);
	op_stkvar	(x,	1);
	create_insn	(0X7D017C26);
	create_insn	(0X7D017C3E);
	create_insn	(0X7D017C5E);
	create_insn	(0X7D017C74);
	make_array	(0X7D017C7A,	0X2);
	create_dword	(0X7D017C7C);
	create_insn	(0X7D017C80);
	set_name	(0X7D017C80,	"ecb_encrypt");
	create_insn	(0X7D017C94);
	set_cmt	(0X7D017C9C,	"idx",	0);
	create_insn	(0X7D017CD0);
	create_insn	(0X7D017CDE);
	create_dword	(0X7D017D08);
	create_insn	(0X7D017D0C);
	set_cmt	(0X7D017D12,	"idx",	0);
	create_insn	(0X7D017D2E);
	create_insn	(0X7D017D32);
	make_array	(0X7D017D36,	0X2);
	create_dword	(0X7D017D38);
	create_insn	(0X7D017D3C);
	set_name	(0X7D017D3C,	"ecb_decrypt");
	create_insn	(0X7D017D50);
	set_cmt	(0X7D017D58,	"idx",	0);
	create_insn	(0X7D017D8C);
	create_insn	(0X7D017D9A);
	create_dword	(0X7D017DC4);
	create_insn	(0X7D017DC8);
	create_insn	(x=0X7D017DCC);
	op_stkvar	(x,	1);
	create_insn	(0X7D017DFE);
	create_dword	(0X7D017E04);
	create_insn	(0X7D017E08);
	set_name	(0X7D017E08,	"tweak_crypt");
	set_cmt	(0X7D017E44,	"I",	0);
	make_array	(0X7D017E4E,	0X2);
	create_dword	(0X7D017E50);
	create_insn	(0X7D017E54);
	set_name	(0X7D017E54,	"xts_encrypt");
	create_insn	(x=0X7D017E60);
	op_stkvar	(x,	1);
	create_insn	(0X7D017E6A);
	set_cmt	(0X7D017E76,	"idx",	0);
	create_insn	(x=0X7D017E8C);
	op_hex		(x,	1);
	create_insn	(x=0X7D017EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017EAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017EB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017EC2,	"destination",	0);
	create_insn	(x=0X7D017EC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017EC4,	"source",	0);
	set_cmt	(0X7D017EC6,	"num",	0);
	create_insn	(0X7D017ED2);
	create_insn	(x=0X7D017ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017F02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017F14);
	op_stkvar	(x,	1);
	create_insn	(0X7D017F1A);
	create_insn	(x=0X7D017F1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D017F24,	"I",	0);
	create_insn	(x=0X7D017F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017F36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D017F3E);
	op_stkvar	(x,	1);
	create_insn	(0X7D017F7C);
	create_dword	(0X7D017F84);
	create_insn	(0X7D017F88);
	make_array	(0X7D017FAE,	0X2);
	create_dword	(x=0X7D017FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D017FB4);
	set_name	(0X7D017FB4,	"tweak_uncrypt");
	set_cmt	(0X7D017FF0,	"I",	0);
	make_array	(0X7D017FFA,	0X2);
	create_dword	(0X7D017FFC);
	create_insn	(0X7D018000);
	set_name	(0X7D018000,	"xts_decrypt");
	create_insn	(x=0X7D01800C);
	op_stkvar	(x,	1);
	create_insn	(0X7D018016);
	set_cmt	(0X7D018022,	"idx",	0);
	create_insn	(x=0X7D018036);
	op_hex		(x,	1);
	set_cmt	(0X7D018072,	"destination",	0);
	create_insn	(x=0X7D018072);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018074,	"source",	0);
	set_cmt	(0X7D018076,	"num",	0);
	create_insn	(0X7D018082);
	create_insn	(x=0X7D018084);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018096,	"C",	0);
	set_cmt	(0X7D018098,	"T",	0);
	create_insn	(x=0X7D018098);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01809A,	"P",	0);
	set_cmt	(0X7D01809C,	"xts",	0);
	create_insn	(0X7D0180B0);
	create_insn	(x=0X7D0180B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0180C8,	"C",	0);
	create_insn	(0X7D0180C8);
	create_insn	(x=0X7D0180CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0180CE,	"P",	0);
	set_cmt	(0X7D0180D0,	"T",	0);
	create_insn	(x=0X7D0180D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0180D2,	"xts",	0);
	set_cmt	(0X7D0180DC,	"C",	0);
	create_insn	(x=0X7D0180DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018106,	"P",	0);
	set_cmt	(0X7D018108,	"T",	0);
	create_insn	(x=0X7D018108);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01810A,	"xts",	0);
	create_insn	(0X7D018116);
	make_array	(0X7D01811E,	0X2);
	create_dword	(0X7D018120);
	create_insn	(0X7D018124);
	create_insn	(x=0X7D018128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018130);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018136,	"idx",	0);
	create_insn	(0X7D01813C);
	make_array	(0X7D018186,	0X2);
	create_dword	(0X7D018188);
	create_insn	(0X7D01818C);
	create_insn	(x=0X7D018194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018196);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018198);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0181AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0181B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0181D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0181D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0181F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018208);
	op_stkvar	(x,	1);
	create_insn	(0X7D01820C);
	create_insn	(x=0X7D018210);
	op_stkvar	(x,	1);
	create_insn	(0X7D018216);
	create_insn	(x=0X7D018218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01821A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018220);
	op_stkvar	(x,	1);
	create_insn	(0X7D018224);
	create_insn	(x=0X7D01822A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018232);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018234);
	op_stkvar	(x,	1);
	create_insn	(0X7D018238);
	create_insn	(x=0X7D018240);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01824A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01824C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01825A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01826A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01827A,	"size",	0);
	create_insn	(x=0X7D01827C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018282);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01828A,	"size",	0);
	create_insn	(x=0X7D018290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018298);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01829C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01829E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0182D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182D4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0182E0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0182E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0182F2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0182F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018302);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01830A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018312);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01831E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018322);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01832E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018342);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01834A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01834C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01834E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01835E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018362);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018372);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018376);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018384);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018386);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018396);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0183A0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_dword	(x=0X7D0183AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0183B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D0183B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0183B8);
	create_dword	(x=0X7D0183BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0183C0);
	create_insn	(x=0X7D0183C4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0183D0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0183D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0183D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0183E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0183EA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0183EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0183EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0183FC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018402);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018412);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018426);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01842A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01842C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01843C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01843E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018442);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018450);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018452);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018458);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01845E,	"out",	0);
	create_insn	(x=0X7D01845E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018460,	"outlen",	0);
	create_insn	(x=0X7D018466);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01846C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01846E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01847C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01847E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018486);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01848A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01848C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01849E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0184B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184C8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0184CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184DA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0184DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184EE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0184F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0184F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018500);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018502);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018506);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018512);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018520);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018522);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01852C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018532);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01853E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01854A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018552);
	op_stkvar	(x,	1);
	create_insn	(0X7D018558);
	create_insn	(x=0X7D018560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018562);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018564);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018572);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01857A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018584);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018586);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01858E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018590,	"N",	0);
	create_insn	(x=0X7D018590);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018592,	"bits",	0);
	create_insn	(x=0X7D018592);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018594,	"prng",	0);
	create_insn	(x=0X7D018594);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018596,	"wprng",	0);
	create_insn	(x=0X7D018596);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185A2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0185A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185AE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0185B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185C0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0185CE,	"a",	0);
	create_insn	(x=0X7D0185CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0185D0,	"b",	0);
	create_insn	(x=0X7D0185D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0185D2,	"c",	0);
	create_insn	(x=0X7D0185D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0185D4,	"d",	0);
	create_insn	(x=0X7D0185D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0185E0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0185E4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0185F0);
	create_insn	(0X7D0185F6);
	create_insn	(x=0X7D0185FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0185FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018602);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018606);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01860A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01860C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01860E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018612);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018616);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01861A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018622,	"ptr",	0);
	create_insn	(x=0X7D018622);
	op_stkvar	(x,	1);
	create_insn	(0X7D01862A);
	set_cmt	(0X7D01862E,	"ptr",	0);
	create_insn	(x=0X7D01862E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01863A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01863E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D018648);
	create_insn	(0X7D01864E);
	create_insn	(x=0X7D018654);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018662,	"N",	0);
	set_cmt	(0X7D018664,	"bits",	0);
	set_cmt	(0X7D018666,	"prng",	0);
	create_insn	(x=0X7D018666);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018668,	"wprng",	0);
	create_insn	(x=0X7D018668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018676);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D018686,	"a",	0);
	create_insn	(x=0X7D018688);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01868C,	"b",	0);
	set_cmt	(0X7D01868E,	"c",	0);
	set_cmt	(0X7D018690,	"d",	0);
	create_insn	(0X7D01869E);
	create_insn	(x=0X7D0186A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0186A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0186B4);
	create_dword	(x=0X7D0186BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0186C0);
	create_insn	(x=0X7D0186C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0186CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0186CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0186D6);
	create_insn	(x=0X7D0186E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018700,	"size",	0);
	create_insn	(x=0X7D018708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018712);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018716);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018722);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018726);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01872C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01872E,	"N",	0);
	create_insn	(x=0X7D01872E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018730,	"bits",	0);
	create_insn	(x=0X7D018730);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018732,	"prng",	0);
	create_insn	(x=0X7D018732);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018734,	"wprng",	0);
	create_insn	(x=0X7D018734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018740);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018756);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018760);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018772);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018776);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018780);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018784,	"a",	0);
	create_insn	(x=0X7D018784);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018786,	"b",	0);
	set_cmt	(0X7D018788,	"c",	0);
	create_insn	(x=0X7D018788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018792);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018796,	"a",	0);
	set_cmt	(0X7D018798,	"b",	0);
	create_insn	(x=0X7D018798);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01879A,	"c",	0);
	set_cmt	(0X7D01879C,	"d",	0);
	create_insn	(x=0X7D0187A6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0187B8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0187C6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0187CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0187CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0187CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0187D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0187E4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0187E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0187F2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0187F6,	"a",	0);
	set_cmt	(0X7D0187F8,	"b",	0);
	create_insn	(x=0X7D0187F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0187FA,	"c",	0);
	set_cmt	(0X7D0187FC,	"d",	0);
	create_insn	(x=0X7D018804);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018812);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01881A,	"ptr",	0);
	create_insn	(x=0X7D01881A);
	op_stkvar	(x,	1);
	create_insn	(0X7D018824);
	create_insn	(0X7D018828);
	create_dword	(x=0X7D018830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018834);
	create_insn	(x=0X7D018840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01886A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018872);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018876);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018888);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018896);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0188A4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0188B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0188C0,	"a",	0);
	create_insn	(x=0X7D0188C2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0188C6,	"b",	0);
	set_cmt	(0X7D0188C8,	"c",	0);
	create_insn	(x=0X7D0188C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0188CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0188D4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0188D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0188E4,	"a",	0);
	create_insn	(x=0X7D0188E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0188E6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0188EA,	"b",	0);
	create_insn	(x=0X7D0188EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0188EC,	"c",	0);
	set_cmt	(0X7D0188EE,	"d",	0);
	create_insn	(x=0X7D0188F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0188FC,	"a",	0);
	set_cmt	(0X7D0188FE,	"b",	0);
	create_insn	(x=0X7D0188FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018900,	"c",	0);
	set_cmt	(0X7D018902,	"d",	0);
	create_insn	(x=0X7D018902);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01890C,	"b",	0);
	create_insn	(x=0X7D01890C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01890E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018912,	"a",	0);
	set_cmt	(0X7D018914,	"c",	0);
	set_cmt	(0X7D018916,	"d",	0);
	set_cmt	(0X7D01891E,	"b",	0);
	create_insn	(x=0X7D01891E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018920);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018924,	"a",	0);
	set_cmt	(0X7D018926,	"c",	0);
	set_cmt	(0X7D018928,	"d",	0);
	create_insn	(x=0X7D018930);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018934,	"a",	0);
	create_insn	(x=0X7D018934);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018936,	"b",	0);
	create_insn	(x=0X7D018936);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018938,	"c",	0);
	set_cmt	(0X7D01893A,	"d",	0);
	create_insn	(x=0X7D01893A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018942);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018944);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018952);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018956);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018966);
	op_stkvar	(x,	1);
	create_insn	(0X7D018972);
	make_array	(0X7D01897A,	0X2);
	create_dword	(x=0X7D01897C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018980);
	set_name	(0X7D018980,	"rsa_decrypt_key_ex");
	create_insn	(x=0X7D01898C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01899C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0189A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0189B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0189B6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0189BC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0189C6,	"size",	0);
	create_insn	(x=0X7D0189CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0189D8);
	create_insn	(x=0X7D0189E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0189F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0189FE,	"ptr",	0);
	create_insn	(x=0X7D018A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018A0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018A10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A12,	"hash_idx",	0);
	create_insn	(x=0X7D018A12);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A14,	"res",	0);
	create_insn	(x=0X7D018A14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A16,	"modulus_bitlen",	0);
	create_insn	(x=0X7D018A16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A1A,	"out",	0);
	create_insn	(x=0X7D018A1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A1C,	"outlen",	0);
	create_insn	(x=0X7D018A1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A1E,	"msg",	0);
	set_cmt	(0X7D018A20,	"msglen",	0);
	create_insn	(x=0X7D018A20);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A22,	"lparam",	0);
	create_insn	(x=0X7D018A22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A24,	"lparamlen",	0);
	create_insn	(x=0X7D018A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018A2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A2E,	"out",	0);
	create_insn	(x=0X7D018A2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A30,	"is_valid",	0);
	create_insn	(x=0X7D018A30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A32,	"outlen",	0);
	create_insn	(x=0X7D018A32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A34,	"msg",	0);
	set_cmt	(0X7D018A36,	"msglen",	0);
	create_insn	(x=0X7D018A36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018A38,	"block_type",	0);
	set_cmt	(0X7D018A3A,	"modulus_bitlen",	0);
	set_cmt	(0X7D018A42,	"ptr",	0);
	create_insn	(0X7D018A4C);
	create_insn	(0X7D018A50);
	create_insn	(0X7D018A54);
	create_dword	(x=0X7D018A5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018A60);
	set_name	(0X7D018A60,	"rsa_encrypt_key_ex");
	set_cmt	(0X7D018A64,	"prng",	0);
	create_insn	(x=0X7D018A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018AA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018AAA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018AB2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018AB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018ABE,	"modulus_bitlen",	0);
	create_insn	(x=0X7D018ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018ACA);
	op_stkvar	(x,	1);
	create_insn	(0X7D018AD6);
	create_insn	(x=0X7D018ADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018AE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AE2,	"modulus_bitlen",	0);
	create_insn	(x=0X7D018AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018AE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AE6,	"prng",	0);
	create_insn	(x=0X7D018AE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AE8,	"hash_idx",	0);
	create_insn	(x=0X7D018AE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AEA,	"outlen",	0);
	create_insn	(x=0X7D018AEA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AEC,	"prng_idx",	0);
	create_insn	(x=0X7D018AEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AF0,	"out",	0);
	create_insn	(x=0X7D018AF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AF2,	"msg",	0);
	set_cmt	(0X7D018AF4,	"msglen",	0);
	set_cmt	(0X7D018AF6,	"lparam",	0);
	create_insn	(x=0X7D018AF6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018AF8,	"lparamlen",	0);
	create_insn	(x=0X7D018AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B08);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018B18,	"outlen",	0);
	create_insn	(x=0X7D018B18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018B1E,	"out",	0);
	create_insn	(x=0X7D018B1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018B20,	"msg",	0);
	set_cmt	(0X7D018B22,	"msglen",	0);
	set_cmt	(0X7D018B24,	"block_type",	0);
	create_insn	(0X7D018B2C);
	create_dword	(x=0X7D018B34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018B38);
	set_name	(0X7D018B38,	"rsa_exptmod");
	create_insn	(x=0X7D018B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B46);
	op_stkvar	(x,	1);
	create_insn	(0X7D018B50);
	create_insn	(0X7D018B6A);
	create_insn	(x=0X7D018B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018B88);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018B8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018B96);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018BC4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018BC8,	"a",	0);
	create_insn	(x=0X7D018BC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018BCA,	"b",	0);
	set_cmt	(0X7D018BCC,	"c",	0);
	set_cmt	(0X7D018BCE,	"d",	0);
	create_insn	(x=0X7D018BD8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018BDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018BEE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018BF8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C02);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C0A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018C14,	"outlen",	0);
	set_cmt	(0X7D018C18,	"out",	0);
	create_insn	(x=0X7D018C1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C20);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018C24);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D018C34);
	create_insn	(0X7D018C38);
	create_insn	(x=0X7D018C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C3E);
	op_stkvar	(x,	1);
	create_insn	(0X7D018C4A);
	create_insn	(x=0X7D018C4E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018C52,	"a",	0);
	create_insn	(x=0X7D018C52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018C54,	"b",	0);
	set_cmt	(0X7D018C56,	"c",	0);
	set_cmt	(0X7D018C58,	"d",	0);
	create_insn	(x=0X7D018C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C62);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018C66,	"a",	0);
	create_insn	(x=0X7D018C66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018C68,	"b",	0);
	set_cmt	(0X7D018C6A,	"c",	0);
	set_cmt	(0X7D018C6C,	"d",	0);
	create_insn	(x=0X7D018C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C76);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018C86,	"a",	0);
	create_insn	(x=0X7D018C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C88);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018C8C,	"b",	0);
	set_cmt	(0X7D018C8E,	"c",	0);
	set_cmt	(0X7D018C90,	"d",	0);
	create_insn	(x=0X7D018C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018C9C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018CAC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018CAE);
	op_stkvar	(x,	1);
	create_insn	(0X7D018CB6);
	create_dword	(x=0X7D018CBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018CC0);
	set_name	(0X7D018CC0,	"rsa_make_key");
	create_insn	(x=0X7D018CC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018CD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018CF4);
	op_hex		(x,	1);
	create_insn	(x=0X7D018D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D20);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018D22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018D36,	"N",	0);
	create_insn	(x=0X7D018D36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018D38,	"len",	0);
	set_cmt	(0X7D018D3A,	"prng",	0);
	create_insn	(x=0X7D018D3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018D3C,	"wprng",	0);
	create_insn	(x=0X7D018D4A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D5C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D70);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018D72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D018D80,	"N",	0);
	create_insn	(x=0X7D018D80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018D82,	"len",	0);
	set_cmt	(0X7D018D84,	"prng",	0);
	create_insn	(x=0X7D018D84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018D86,	"wprng",	0);
	create_insn	(x=0X7D018D94);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018D9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018DA8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DBC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DCA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DDE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018DE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018DFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E20);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E2E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018E32,	"a",	0);
	set_cmt	(0X7D018E34,	"b",	0);
	create_insn	(x=0X7D018E34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018E36,	"c",	0);
	create_insn	(x=0X7D018E40);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E50);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E60);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E70);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E80);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018E86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018E90);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D018E94,	"a",	0);
	create_insn	(x=0X7D018E94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018E96,	"b",	0);
	create_insn	(x=0X7D018E96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018E98,	"c",	0);
	create_insn	(x=0X7D018EA0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018EA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EAC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018EAE);
	op_stkvar	(x,	1);
	create_insn	(0X7D018EBE);
	create_insn	(x=0X7D018EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018EEC);
	op_stkvar	(x,	1);
	create_insn	(0X7D018EF6);
	create_insn	(0X7D018EFA);
	make_array	(0X7D018F02,	0X2);
	create_dword	(x=0X7D018F04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D018F08);
	set_cmt	(0X7D018F0C,	"prng_idx",	0);
	create_insn	(x=0X7D018F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D018F42);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D018F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F54);
	op_stkvar	(x,	1);
	create_insn	(0X7D018F60);
	create_insn	(x=0X7D018F66);
	op_stkvar	(x,	1);
	create_insn	(0X7D018F7C);
	create_insn	(x=0X7D018F82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018F84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018F86,	"msghash",	0);
	set_cmt	(0X7D018F90,	"outlen",	0);
	create_insn	(x=0X7D018F90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018F92,	"out",	0);
	create_insn	(x=0X7D018F92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018F94,	"msghashlen",	0);
	set_cmt	(0X7D018F96,	"saltlen",	0);
	create_insn	(x=0X7D018F96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018F98,	"prng",	0);
	create_insn	(x=0X7D018F98);
	op_stkvar	(x,	1);
	create_insn	(0X7D018FA4);
	create_insn	(x=0X7D018FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D018FF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018FFA,	"type_of",	0);
	create_insn	(x=0X7D018FFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D018FFE,	"list",	0);
	create_insn	(x=0X7D018FFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019000,	"inlen",	0);
	set_cmt	(0X7D019002,	"outlen",	0);
	create_insn	(x=0X7D019002);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019004,	"out",	0);
	create_insn	(0X7D019012);
	create_insn	(x=0X7D019014);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019016,	"msglen",	0);
	create_insn	(x=0X7D019016);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01901C,	"prng",	0);
	create_insn	(x=0X7D01901C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01901E,	"prng_idx",	0);
	create_insn	(x=0X7D01901E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019020,	"outlen",	0);
	create_insn	(x=0X7D019020);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019022,	"out",	0);
	create_insn	(x=0X7D019022);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019024,	"msg",	0);
	set_cmt	(0X7D019026,	"block_type",	0);
	set_cmt	(0X7D019028,	"modulus_bitlen",	0);
	set_cmt	(0X7D019030,	"ptr",	0);
	create_insn	(0X7D01903E);
	create_insn	(0X7D019044);
	create_insn	(0X7D019048);
	create_insn	(x=0X7D01904E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019052);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019056);
	op_stkvar	(x,	1);
	create_insn	(0X7D019060);
	create_insn	(0X7D019064);
	create_dword	(x=0X7D01906C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D019070);
	create_insn	(0X7D019074);
	create_insn	(x=0X7D019080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019098);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0190B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0190B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190BC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0190CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0190E0);
	create_insn	(x=0X7D0190EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0190F8,	"saltlen",	0);
	create_insn	(x=0X7D0190F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0190FA,	"hash_idx",	0);
	create_insn	(x=0X7D0190FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0190FE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01910A,	"ptr",	0);
	create_insn	(x=0X7D019114);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01911A,	"ptr",	0);
	create_insn	(x=0X7D019122);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01912A);
	op_hex		(x,	1);
	create_insn	(x=0X7D019130);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019136,	"res",	0);
	create_insn	(x=0X7D019136);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01913C,	"modulus_bitlen",	0);
	create_insn	(x=0X7D01913C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019144,	"msghash",	0);
	set_cmt	(0X7D019146,	"msghashlen",	0);
	set_cmt	(0X7D01914A,	"sig",	0);
	set_cmt	(0X7D01914C,	"siglen",	0);
	create_insn	(0X7D019156);
	create_insn	(x=0X7D019162);
	op_hex		(x,	1);
	set_cmt	(0X7D019170,	"size",	0);
	create_insn	(x=0X7D019172);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01917E,	"out",	0);
	create_insn	(x=0X7D01917E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019180);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019182,	"outlen",	0);
	create_insn	(x=0X7D019182);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019184);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019186,	"is_valid",	0);
	create_insn	(x=0X7D019186);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019188,	"msg",	0);
	set_cmt	(0X7D01918A,	"msglen",	0);
	set_cmt	(0X7D01918C,	"block_type",	0);
	set_cmt	(0X7D01918E,	"modulus_bitlen",	0);
	create_insn	(x=0X7D01919C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01919E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191C4,	"list",	0);
	create_insn	(x=0X7D0191C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191C8,	"ordered",	0);
	create_insn	(x=0X7D0191C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191CA,	"in",	0);
	set_cmt	(0X7D0191CC,	"inlen",	0);
	create_insn	(x=0X7D0191CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191CE,	"outlen",	0);
	create_insn	(x=0X7D0191D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191DE,	"inlen",	0);
	set_cmt	(0X7D0191E0,	"list",	0);
	create_insn	(x=0X7D0191E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0191E2,	"outlen",	0);
	create_insn	(x=0X7D0191E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0191F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019202,	"s1",	0);
	create_insn	(x=0X7D019202);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019204,	"s2",	0);
	create_insn	(x=0X7D01920E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019214,	"s1",	0);
	create_insn	(x=0X7D019214);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019216,	"s2",	0);
	set_cmt	(0X7D019218,	"n",	0);
	create_insn	(x=0X7D019220);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019226,	"ptr",	0);
	create_insn	(0X7D01922E);
	create_insn	(0X7D019234);
	set_cmt	(0X7D019238,	"ptr",	0);
	create_insn	(0X7D019242);
	create_insn	(0X7D019246);
	create_insn	(0X7D01924A);
	create_insn	(0X7D01924E);
	make_array	(0X7D019256,	0X2);
	create_dword	(0X7D019258);
	create_dword	(x=0X7D01925C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019260);
	create_insn	(x=0X7D019268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01926A);
	op_stkvar	(x,	1);
	create_insn	(0X7D019276);
	create_insn	(0X7D01929C);
	create_insn	(x=0X7D01929E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0192A4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0192B4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D0192C8);
	set_cmt	(0X7D0192F0,	"size",	0);
	create_insn	(x=0X7D0192FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019312);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019324);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019336);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019348);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01935A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01936A);
	create_insn	(x=0X7D01936C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019370);
	op_stkvar	(x,	1);
	create_insn	(0X7D01937A);
	set_cmt	(0X7D01937E,	"d",	0);
	create_insn	(x=0X7D019380);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019384,	"a",	0);
	set_cmt	(0X7D019386,	"b",	0);
	set_cmt	(0X7D019388,	"c",	0);
	set_cmt	(0X7D019390,	"ptr",	0);
	create_insn	(x=0X7D019392);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019398);
	op_stkvar	(x,	1);
	create_insn	(0X7D01939C);
	create_insn	(0X7D0193A0);
	create_insn	(x=0X7D0193A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0193AE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0193B8);
	create_insn	(0X7D0193BE);
	create_insn	(0X7D0193C6);
	create_dword	(0X7D0193CC);
	create_dword	(x=0X7D0193D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0193D4);
	create_insn	(x=0X7D0193DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0193DE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0193EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D0193EC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D0193F6,	0X2);
	create_dword	(x=0X7D0193F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0193FC);
	set_cmt	(0X7D0193FE,	"d",	0);
	create_insn	(x=0X7D01940E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D019410,	"a",	0);
	create_insn	(x=0X7D019412);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019416,	"b",	0);
	set_cmt	(0X7D019418,	"c",	0);
	create_insn	(0X7D01941E);
	create_insn	(0X7D019422);
	make_array	(0X7D019426,	0X2);
	create_dword	(x=0X7D019428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01942C);
	create_insn	(x=0X7D019440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D019466,	"size",	0);
	create_insn	(x=0X7D01948C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01948E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019498);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01949A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0194BE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0194C0,	"b",	0);
	set_cmt	(0X7D0194C2,	"a",	0);
	create_insn	(x=0X7D0194C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0194C4,	"radix",	0);
	create_insn	(x=0X7D0194D0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0194D2,	"b",	0);
	set_cmt	(0X7D0194D4,	"a",	0);
	create_insn	(x=0X7D0194D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0194D6,	"radix",	0);
	create_insn	(x=0X7D0194E2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0194E4,	"b",	0);
	set_cmt	(0X7D0194E6,	"a",	0);
	set_cmt	(0X7D0194E8,	"radix",	0);
	create_insn	(x=0X7D0194F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0194F6,	"b",	0);
	set_cmt	(0X7D0194F8,	"a",	0);
	set_cmt	(0X7D0194FA,	"radix",	0);
	create_insn	(x=0X7D019504);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019510);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01951E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019522);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01952E,	"map",	0);
	create_insn	(x=0X7D01952E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019532,	"G",	0);
	create_insn	(x=0X7D019534);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019538,	"k",	0);
	set_cmt	(0X7D01953A,	"R",	0);
	set_cmt	(0X7D01953C,	"modulus",	0);
	create_insn	(x=0X7D01953C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01954A);
	create_insn	(x=0X7D01954C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019550);
	op_stkvar	(x,	1);
	create_insn	(0X7D01955C);
	create_insn	(x=0X7D019566);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01956E,	"p",	0);
	create_insn	(x=0X7D019574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019576);
	op_stkvar	(x,	1);
	create_insn	(0X7D019580);
	set_cmt	(0X7D019584,	"ptr",	0);
	create_insn	(0X7D01958E);
	create_insn	(0X7D019592);
	make_array	(0X7D01959A,	0X2);
	create_dword	(x=0X7D01959C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D0195A0);
	create_insn	(0X7D0195A4);
	create_insn	(x=0X7D0195AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D0195C2);
	create_insn	(0X7D0195D2);
	make_array	(0X7D0195D6,	0X2);
	create_dword	(x=0X7D0195D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0195DC);
	create_insn	(0X7D0195F0);
	create_insn	(x=0X7D019638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01963C,	"a",	0);
	create_insn	(x=0X7D01963C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01963E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01964C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019650,	"b",	0);
	set_cmt	(0X7D019652,	"a",	0);
	create_insn	(x=0X7D019652);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019654,	"radix",	0);
	create_insn	(x=0X7D019656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D019662,	"G",	0);
	set_cmt	(0X7D019666,	"map",	0);
	create_insn	(x=0X7D019666);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019668);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01966C,	"k",	0);
	set_cmt	(0X7D01966E,	"R",	0);
	set_cmt	(0X7D019670,	"modulus",	0);
	create_insn	(x=0X7D019670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019678);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01967C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01968E,	"outlen",	0);
	create_insn	(0X7D01968E);
	set_cmt	(0X7D019690,	"out",	0);
	create_insn	(x=0X7D019698);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01969E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0196B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0196B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0196BA,	"p",	0);
	create_insn	(0X7D0196C4);
	create_insn	(0X7D0196C8);
	create_dword	(x=0X7D0196D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0196D4);
	create_insn	(x=0X7D0196E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0196E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019726);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D019738,	"b",	0);
	create_insn	(x=0X7D01973A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01973E,	"a",	0);
	create_insn	(x=0X7D01973E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019740,	"radix",	0);
	create_insn	(x=0X7D01974A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01974E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01975E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019770);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019776);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019782);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01978C,	"key",	0);
	create_insn	(x=0X7D01978C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019794,	"a",	0);
	create_insn	(x=0X7D019794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019796);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01979A,	"b",	0);
	create_insn	(x=0X7D01979A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01979C,	"c",	0);
	create_insn	(x=0X7D0197A6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0197AA,	"a",	0);
	set_cmt	(0X7D0197AC,	"b",	0);
	set_cmt	(0X7D0197AE,	"c",	0);
	create_insn	(x=0X7D0197AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0197B0,	"d",	0);
	create_insn	(x=0X7D0197B8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0197BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0197C6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0197CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0197D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0197DA,	"a",	0);
	set_cmt	(0X7D0197DC,	"b",	0);
	create_insn	(x=0X7D0197DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0197DE,	"c",	0);
	create_insn	(x=0X7D0197DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0197E0,	"d",	0);
	set_cmt	(0X7D0197E8,	"key",	0);
	create_insn	(x=0X7D0197E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0197EE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0197FC,	"key",	0);
	create_insn	(x=0X7D0197FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019804);
	op_stkvar	(x,	1);
	create_insn	(0X7D019810);
	create_dword	(x=0X7D019818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01981C);
	create_insn	(x=0X7D019826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01982A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01982E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01986A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01986C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01986E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019872);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019876);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01987A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01987C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0198A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D0198A8,	"b",	0);
	create_insn	(x=0X7D0198AA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0198AE,	"a",	0);
	create_insn	(x=0X7D0198AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0198B0,	"radix",	0);
	create_insn	(x=0X7D0198C0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0198C4,	"b",	0);
	set_cmt	(0X7D0198C6,	"a",	0);
	create_insn	(x=0X7D0198C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0198C8,	"radix",	0);
	create_insn	(x=0X7D0198D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0198E6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0198F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0198FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019902);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019910);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019916);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019918);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019924);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019928,	"a",	0);
	set_cmt	(0X7D01992A,	"b",	0);
	create_insn	(x=0X7D01992A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01992C,	"c",	0);
	create_insn	(x=0X7D01992C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019938);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01993C,	"a",	0);
	create_insn	(x=0X7D01993C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01993E,	"b",	0);
	create_insn	(x=0X7D01993E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019940,	"c",	0);
	create_insn	(x=0X7D019940);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019942,	"d",	0);
	create_insn	(x=0X7D019942);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01994E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019952,	"a",	0);
	set_cmt	(0X7D019954,	"b",	0);
	create_insn	(x=0X7D019954);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019956,	"c",	0);
	create_insn	(x=0X7D019956);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019958,	"d",	0);
	create_insn	(x=0X7D019958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019968);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01996C,	"a",	0);
	set_cmt	(0X7D01996E,	"b",	0);
	set_cmt	(0X7D019970,	"radix",	0);
	create_insn	(x=0X7D01997E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019982,	"b",	0);
	set_cmt	(0X7D019984,	"a",	0);
	set_cmt	(0X7D019986,	"radix",	0);
	create_insn	(x=0X7D019988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019992);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0199A0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0199B0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0199C0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D0199D0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0199DA,	"map",	0);
	create_insn	(x=0X7D0199DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0199DC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0199E0,	"k",	0);
	create_insn	(x=0X7D0199E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0199E2,	"G",	0);
	set_cmt	(0X7D0199E4,	"R",	0);
	set_cmt	(0X7D0199E6,	"modulus",	0);
	create_insn	(x=0X7D0199E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0199F0,	"map",	0);
	create_insn	(x=0X7D0199F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0199F2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D0199F6,	"k",	0);
	create_insn	(x=0X7D0199F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0199F8,	"G",	0);
	set_cmt	(0X7D0199FA,	"R",	0);
	set_cmt	(0X7D0199FC,	"modulus",	0);
	create_insn	(x=0X7D0199FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A06);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019A0A,	"b",	0);
	create_insn	(x=0X7D019A0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A0C,	"a",	0);
	create_insn	(x=0X7D019A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A18,	"P",	0);
	set_cmt	(0X7D019A1A,	"mp",	0);
	create_insn	(x=0X7D019A1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A1C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019A20,	"Q",	0);
	set_cmt	(0X7D019A22,	"R",	0);
	set_cmt	(0X7D019A24,	"modulus",	0);
	create_insn	(x=0X7D019A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A2C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D019A30,	"P",	0);
	set_cmt	(0X7D019A32,	"modulus",	0);
	create_insn	(x=0X7D019A32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A34,	"mp",	0);
	create_insn	(x=0X7D019A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A3C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A50,	"C",	0);
	create_insn	(x=0X7D019A50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A52,	"modulus",	0);
	create_insn	(x=0X7D019A52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A54,	"A",	0);
	set_cmt	(0X7D019A56,	"kA",	0);
	create_insn	(x=0X7D019A56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A58,	"B",	0);
	set_cmt	(0X7D019A5A,	"kB",	0);
	create_insn	(x=0X7D019A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019A62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A64);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D019A6C);
	op_stkvar	(x,	1);
	create_insn	(0X7D019A74);
	set_cmt	(0X7D019A76,	"p",	0);
	set_cmt	(0X7D019A7C,	"p",	0);
	create_insn	(x=0X7D019A82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019A9A,	"a",	0);
	create_insn	(x=0X7D019A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019A9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019AA0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D019AA8);
	create_insn	(0X7D019AAC);
	create_insn	(0X7D019AB0);
	create_dword	(x=0X7D019AB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019ABC);
	create_insn	(x=0X7D019AC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D019AD0);
	create_dword	(x=0X7D019AE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019AE4);
	set_name	(0X7D019AE4,	"deinit");
	create_insn	(x=0X7D019AE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019AEC,	"var",	0);
	create_insn	(x=0X7D019AEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019AEE,	"pool",	0);
	create_insn	(x=0X7D019AF6);
	op_stkvar	(x,	1);
	make_array	(0X7D019AFA,	0X2);
	create_dword	(x=0X7D019AFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019B00);
	set_cmt	(0X7D019B0A,	"conf_level",	0);
	set_cmt	(0X7D019B0C,	"pool",	0);
	create_insn	(0X7D019B1E);
	make_array	(0X7D019B22,	0X2);
	create_dword	(x=0X7D019B24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019B28);
	set_name	(0X7D019B28,	"mp_montgomery_normalization");
	set_cmt	(0X7D019B42,	"dest",	0);
	set_cmt	(0X7D019B44,	"op",	0);
	set_cmt	(0X7D019B46,	"n",	0);
	set_cmt	(0X7D019B48,	"pool",	0);
	create_insn	(0X7D019B52);
	make_array	(0X7D019B56,	0X2);
	create_dword	(x=0X7D019B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019B5C);
	set_name	(0X7D019B5C,	"mp_mod");
	set_cmt	(0X7D019B62,	"op",	0);
	set_cmt	(0X7D019B6C,	"dest",	0);
	set_cmt	(0X7D019B6E,	"pool",	0);
	set_cmt	(0X7D019B70,	"n",	0);
	set_cmt	(0X7D019B76,	"op1",	0);
	set_cmt	(0X7D019B78,	"op2",	0);
	set_cmt	(0X7D019B82,	"dest",	0);
	set_cmt	(0X7D019B84,	"op1",	0);
	set_cmt	(0X7D019B86,	"op2",	0);
	set_cmt	(0X7D019B88,	"pool",	0);
	create_insn	(0X7D019B90);
	create_insn	(0X7D019B94);
	create_dword	(x=0X7D019B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019B9C);
	set_name	(0X7D019B9C,	"mp_invmod");
	set_cmt	(0X7D019BB2,	"dest",	0);
	set_cmt	(0X7D019BB4,	"op",	0);
	set_cmt	(0X7D019BB6,	"n",	0);
	set_cmt	(0X7D019BB8,	"pool",	0);
	create_insn	(0X7D019BC6);
	make_array	(0X7D019BCA,	0X2);
	create_dword	(x=0X7D019BCC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019BD0);
	set_name	(0X7D019BD0,	"mp_mulmod");
	create_insn	(x=0X7D019BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019BFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019C04,	"dest",	0);
	set_cmt	(0X7D019C08,	"op1",	0);
	create_insn	(x=0X7D019C08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019C0A,	"pool",	0);
	create_insn	(x=0X7D019C0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019C0C,	"op2",	0);
	create_insn	(x=0X7D019C0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019C0E,	"n",	0);
	create_insn	(x=0X7D019C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019C16);
	op_stkvar	(x,	1);
	create_insn	(0X7D019C22);
	create_dword	(x=0X7D019C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019C2C);
	set_name	(0X7D019C2C,	"mp_add");
	set_cmt	(0X7D019C30,	"op1",	0);
	set_cmt	(0X7D019C38,	"dest",	0);
	set_cmt	(0X7D019C3A,	"op2",	0);
	set_cmt	(0X7D019C3E,	"pool",	0);
	create_insn	(0X7D019C48);
	create_dword	(x=0X7D019C4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019C50);
	set_name	(0X7D019C50,	"mp_gcd");
	set_cmt	(0X7D019C54,	"src1",	0);
	set_cmt	(0X7D019C5C,	"dest",	0);
	set_cmt	(0X7D019C5E,	"src2",	0);
	set_cmt	(0X7D019C62,	"pool",	0);
	create_insn	(0X7D019C6C);
	create_dword	(x=0X7D019C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019C74);
	set_name	(0X7D019C74,	"mp_divide");
	set_cmt	(0X7D019C7A,	"op1",	0);
	set_cmt	(0X7D019C82,	"q",	0);
	set_cmt	(0X7D019C86,	"r",	0);
	set_cmt	(0X7D019C88,	"pool",	0);
	create_insn	(x=0X7D019C88);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019C8A,	"op2",	0);
	create_insn	(0X7D019C94);
	make_array	(0X7D019C9A,	0X2);
	create_dword	(x=0X7D019C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019CA0);
	set_name	(0X7D019CA0,	"mp_sqr");
	set_cmt	(0X7D019CA8,	"dest",	0);
	set_cmt	(0X7D019CAA,	"op2",	0);
	set_cmt	(0X7D019CAC,	"op1",	0);
	set_cmt	(0X7D019CB0,	"pool",	0);
	create_insn	(0X7D019CBA);
	make_array	(0X7D019CBE,	0X2);
	create_dword	(x=0X7D019CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019CC4);
	set_name	(0X7D019CC4,	"mp_mul");
	set_cmt	(0X7D019CC8,	"op1",	0);
	set_cmt	(0X7D019CD0,	"dest",	0);
	set_cmt	(0X7D019CD2,	"op2",	0);
	set_cmt	(0X7D019CD6,	"pool",	0);
	create_insn	(0X7D019CE0);
	create_dword	(x=0X7D019CE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019CE8);
	set_name	(0X7D019CE8,	"mp_muli");
	set_cmt	(0X7D019CEC,	"op1",	0);
	set_cmt	(0X7D019CF4,	"dest",	0);
	set_cmt	(0X7D019CF6,	"pool",	0);
	set_cmt	(0X7D019CF8,	"op2",	0);
	create_insn	(0X7D019D02);
	make_array	(0X7D019D06,	0X2);
	create_dword	(x=0X7D019D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019D0C);
	set_name	(0X7D019D0C,	"mp_subi");
	set_cmt	(0X7D019D10,	"op1",	0);
	set_cmt	(0X7D019D18,	"dest",	0);
	set_cmt	(0X7D019D1A,	"pool",	0);
	set_cmt	(0X7D019D1C,	"op2",	0);
	create_insn	(0X7D019D26);
	make_array	(0X7D019D2A,	0X2);
	create_dword	(x=0X7D019D2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019D30);
	set_name	(0X7D019D30,	"mp_sub");
	set_cmt	(0X7D019D34,	"op1",	0);
	set_cmt	(0X7D019D3C,	"dest",	0);
	set_cmt	(0X7D019D3E,	"op2",	0);
	set_cmt	(0X7D019D42,	"pool",	0);
	create_insn	(0X7D019D4C);
	create_dword	(x=0X7D019D50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019D54);
	set_name	(0X7D019D54,	"mp_addi");
	set_cmt	(0X7D019D58,	"op1",	0);
	set_cmt	(0X7D019D60,	"dest",	0);
	set_cmt	(0X7D019D62,	"pool",	0);
	set_cmt	(0X7D019D64,	"op2",	0);
	create_insn	(0X7D019D6E);
	make_array	(0X7D019D72,	0X2);
	create_dword	(x=0X7D019D74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019D78);
	set_name	(0X7D019D78,	"mp_montgomery_setup");
	set_cmt	(0X7D019D9E,	"len",	0);
	set_cmt	(0X7D019DA6,	"modulus",	0);
	set_cmt	(0X7D019DAE,	"pool",	0);
	create_insn	(x=0X7D019DAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019DB0,	"n_inv",	0);
	create_insn	(0X7D019DBC);
	create_insn	(0X7D019DC0);
	make_array	(0X7D019DC6,	0X2);
	create_dword	(x=0X7D019DC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019DCC);
	set_name	(0X7D019DCC,	"init_size");
	set_cmt	(0X7D019DDC,	"dest",	0);
	set_cmt	(0X7D019DDE,	"short_val",	0);
	create_insn	(0X7D019DE8);
	create_insn	(0X7D019DEC);
	create_dword	(x=0X7D019DF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019DF4);
	set_name	(0X7D019DF4,	"init");
	set_cmt	(0X7D019DFC,	"pool",	0);
	set_cmt	(0X7D019E04,	"dest",	0);
	set_cmt	(0X7D019E06,	"short_val",	0);
	create_insn	(0X7D019E10);
	create_insn	(0X7D019E14);
	create_dword	(x=0X7D019E18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019E1C);
	set_name	(0X7D019E1C,	"mp_exptmod");
	set_cmt	(0X7D019E32,	"a",	0);
	set_cmt	(0X7D019E34,	"b",	0);
	create_insn	(x=0X7D019E34);
	op_stkvar	(x,	1);
	create_insn	(0X7D019E42);
	create_insn	(0X7D019E4C);
	set_cmt	(0X7D019E50,	"a",	0);
	create_insn	(x=0X7D019E50);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	create_insn	(x=0X7D019E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019E88,	"ptr",	0);
	create_insn	(x=0X7D019E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019E9C);
	op_stkvar	(x,	1);
	create_insn	(0X7D019EA2);
	make_array	(0X7D019EAA,	0X2);
	create_dword	(x=0X7D019EAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019EB0);
	set_name	(0X7D019EB0,	"mp_montgomery_reduce");
	set_cmt	(0X7D019EC2,	"a",	0);
	create_insn	(x=0X7D019EC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019EDA,	"dest",	0);
	set_cmt	(0X7D019EDC,	"op",	0);
	set_cmt	(0X7D019EDE,	"n",	0);
	set_cmt	(0X7D019EE0,	"pool",	0);
	create_insn	(x=0X7D019EE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019EF2,	"op2",	0);
	set_cmt	(0X7D019EF4,	"n_inv",	0);
	create_insn	(x=0X7D019EF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019EF8,	"dest",	0);
	set_cmt	(0X7D019EFA,	"pool",	0);
	create_insn	(x=0X7D019EFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019EFC,	"op1",	0);
	set_cmt	(0X7D019EFE,	"n",	0);
	set_cmt	(0X7D019F04,	"dest",	0);
	set_cmt	(0X7D019F06,	"src",	0);
	create_insn	(x=0X7D019F06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019F0C);
	op_stkvar	(x,	1);
	create_insn	(0X7D019F14);
	create_insn	(0X7D019F18);
	make_array	(0X7D019F22,	0X2);
	create_dword	(x=0X7D019F24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019F28);
	make_array	(0X7D019F2E,	0X2);
	create_dword	(x=0X7D019F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019F34);
	create_insn	(x=0X7D019F3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019F3E,	"out",	0);
	set_cmt	(0X7D019F42,	"outlen",	0);
	set_cmt	(0X7D019F4A,	"source",	0);
	set_cmt	(0X7D019F4C,	"destination",	0);
	set_cmt	(0X7D019F4E,	"num",	0);
	create_insn	(x=0X7D019F56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D019F60);
	op_hex		(x,	1);
	create_insn	(x=0X7D019F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019F76);
	op_hex		(x,	1);
	create_insn	(0X7D019F7C);
	create_insn	(0X7D019F92);
	create_insn	(x=0X7D019FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D019FBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D019FC2,	"destination",	0);
	set_cmt	(0X7D019FC4,	"source",	0);
	set_cmt	(0X7D019FC6,	"num",	0);
	make_array	(0X7D019FD2,	0X2);
	create_dword	(x=0X7D019FD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D019FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D019FDC);
	create_insn	(x=0X7D019FE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A014,	"size",	0);
	create_insn	(0X7D01A014);
	set_cmt	(0X7D01A04E,	"ptr",	0);
	create_insn	(0X7D01A05A);
	create_insn	(0X7D01A060);
	make_array	(0X7D01A066,	0X2);
	create_dword	(0X7D01A068);
	create_insn	(0X7D01A06C);
	set_name	(0X7D01A06C,	"rand_prime");
	create_insn	(x=0X7D01A074);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A0A0,	"nmemb",	0);
	set_cmt	(0X7D01A0A2,	"size",	0);
	create_insn	(x=0X7D01A0C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A0CA,	"ptr",	0);
	create_insn	(0X7D01A0D4);
	create_insn	(x=0X7D01A0DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A0F6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01A102,	"ptr",	0);
	create_insn	(x=0X7D01A104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A110);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01A114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A120);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A126,	"ptr",	0);
	create_insn	(0X7D01A130);
	create_insn	(0X7D01A134);
	create_insn	(0X7D01A138);
	create_dword	(0X7D01A140);
	create_dword	(x=0X7D01A144);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A148);
	set_name	(0X7D01A148,	"rand_bn_bits");
	set_cmt	(0X7D01A164,	"nmemb",	0);
	set_cmt	(0X7D01A16A,	"size",	0);
	create_insn	(x=0X7D01A18A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01A1A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A1A4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01A1AC);
	set_cmt	(0X7D01A1AE,	"ptr",	0);
	create_insn	(0X7D01A1BA);
	create_insn	(0X7D01A1C0);
	make_array	(0X7D01A1C6,	0X2);
	create_dword	(0X7D01A1C8);
	create_dword	(x=0X7D01A1CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A1D0);
	create_insn	(x=0X7D01A1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A1E6);
	op_plain_offset	(x,	1,	0X7D04CE55);
	op_plain_offset	(x,	129,	0X7D04CE55);
	create_insn	(x=0X7D01A1EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01A1FA);
	make_array	(0X7D01A1FE,	0X2);
	create_dword	(x=0X7D01A200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A204);
	set_cmt	(0X7D01A20C,	"nmemb",	0);
	set_cmt	(0X7D01A20E,	"size",	0);
	set_cmt	(0X7D01A244,	"base",	0);
	create_insn	(0X7D01A244);
	set_cmt	(0X7D01A246,	"nmemb",	0);
	set_cmt	(0X7D01A248,	"size",	0);
	set_cmt	(0X7D01A24A,	"compar",	0);
	create_insn	(x=0X7D01A24A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01A252,	"type_of",	0);
	create_insn	(x=0X7D01A252);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A254,	"inlen",	0);
	set_cmt	(0X7D01A256,	"out",	0);
	set_cmt	(0X7D01A258,	"outlen",	0);
	set_cmt	(0X7D01A25A,	"list",	0);
	set_cmt	(0X7D01A262,	"ptr",	0);
	create_insn	(0X7D01A26C);
	create_dword	(x=0X7D01A274);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D01A274,	"compar");
	create_insn	(0X7D01A278);
	set_name	(0X7D01A278,	"der_encode_setof");
	set_cmt	(0X7D01A29C,	"nmemb",	0);
	create_insn	(0X7D01A29C);
	set_cmt	(0X7D01A29E,	"size",	0);
	set_cmt	(0X7D01A2AE,	"type_of",	0);
	create_insn	(x=0X7D01A2AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A2B0,	"list",	0);
	set_cmt	(0X7D01A2B2,	"inlen",	0);
	set_cmt	(0X7D01A2B4,	"out",	0);
	set_cmt	(0X7D01A2B6,	"outlen",	0);
	set_cmt	(0X7D01A2C0,	"ptr",	0);
	set_cmt	(0X7D01A2CA,	"nmemb",	0);
	create_insn	(0X7D01A2CA);
	set_cmt	(0X7D01A2CC,	"size",	0);
	set_cmt	(0X7D01A2D6,	"ptr",	0);
	create_insn	(0X7D01A2DE);
	create_insn	(x=0X7D01A2EA);
	op_hex		(x,	1);
	create_insn	(x=0X7D01A2F2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A310);
	create_insn	(x=0X7D01A312);
	op_hex		(x,	1);
	create_insn	(0X7D01A332);
	set_cmt	(0X7D01A340,	"base",	0);
	create_insn	(0X7D01A340);
	set_cmt	(0X7D01A342,	"nmemb",	0);
	set_cmt	(0X7D01A344,	"size",	0);
	set_cmt	(0X7D01A346,	"compar",	0);
	create_insn	(x=0X7D01A346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A34E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A350,	"destination",	0);
	set_cmt	(0X7D01A352,	"source",	0);
	set_cmt	(0X7D01A354,	"num",	0);
	set_cmt	(0X7D01A366,	"destination",	0);
	set_cmt	(0X7D01A37E,	"ptr",	0);
	create_insn	(0X7D01A37E);
	set_cmt	(0X7D01A384,	"ptr",	0);
	create_insn	(0X7D01A38E);
	create_insn	(0X7D01A392);
	make_array	(0X7D01A39A,	0X2);
	create_dword	(x=0X7D01A39C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A3A0);
	set_name	(0X7D01A3A0,	"char_to_int");
	create_insn	(x=0X7D01A3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01A3AE);
	make_array	(0X7D01A3B2,	0X2);
	create_dword	(x=0X7D01A3B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A3B8);
	set_name	(0X7D01A3B8,	"der_encode_utctime");
	set_cmt	(0X7D01A3D4,	"outlen",	0);
	create_insn	(x=0X7D01A3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A3E0);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A3F2);
	create_insn	(x=0X7D01A402);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01A408,	"c",	0);
	set_cmt	(0X7D01A41A,	"c",	0);
	set_cmt	(0X7D01A430,	"c",	0);
	set_cmt	(0X7D01A442,	"c",	0);
	set_cmt	(0X7D01A458,	"c",	0);
	set_cmt	(0X7D01A46A,	"c",	0);
	set_cmt	(0X7D01A480,	"c",	0);
	set_cmt	(0X7D01A492,	"c",	0);
	set_cmt	(0X7D01A4A8,	"c",	0);
	set_cmt	(0X7D01A4BA,	"c",	0);
	set_cmt	(0X7D01A4D0,	"c",	0);
	set_cmt	(0X7D01A4E2,	"c",	0);
	set_cmt	(0X7D01A4FC,	"c",	0);
	set_cmt	(0X7D01A512,	"c",	0);
	set_cmt	(0X7D01A524,	"c",	0);
	set_cmt	(0X7D01A53A,	"c",	0);
	set_cmt	(0X7D01A54C,	"c",	0);
	set_cmt	(0X7D01A558,	"c",	0);
	create_insn	(0X7D01A558);
	create_insn	(0X7D01A56E);
	make_array	(0X7D01A576,	0X2);
	create_dword	(x=0X7D01A578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A57C);
	set_name	(0X7D01A57C,	"der_encode_utf8_string");
	create_insn	(0X7D01A590);
	set_cmt	(0X7D01A5A4,	"c",	0);
	create_insn	(0X7D01A5B8);
	create_insn	(0X7D01A5C0);
	create_insn	(0X7D01A5C8);
	create_insn	(0X7D01A5D2);
	create_insn	(0X7D01A5E8);
	create_insn	(0X7D01A5FC);
	create_insn	(0X7D01A60A);
	create_insn	(0X7D01A61E);
	set_cmt	(0X7D01A636,	"jumptable 7D01A656 case 0",	1);
	create_insn	(0X7D01A636);
	set_cmt	(0X7D01A63E,	"jumptable 7D01A656 default case",	1);
	set_cmt	(0X7D01A646,	"c",	0);
	set_cmt	(0X7D01A650,	"switch 4 cases ",	0);
	create_insn	(x=0X7D01A654);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01A656,	"switch jump",	0);
	make_array	(0X7D01A65A,	0X2);
	set_cmt	(0X7D01A65C,	"jump table for switch statement",	0);
	create_dword	(x=0X7D01A65C);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D01A66C,	"jumptable 7D01A656 case 1",	1);
	create_insn	(0X7D01A66C);
	create_insn	(x=0X7D01A682);
	op_hex		(x,	1);
	set_cmt	(0X7D01A68E,	"jumptable 7D01A656 case 2",	1);
	create_insn	(0X7D01A68E);
	create_insn	(x=0X7D01A6B4);
	op_hex		(x,	1);
	set_cmt	(0X7D01A6C0,	"jumptable 7D01A656 case 3",	1);
	create_insn	(0X7D01A6C0);
	create_insn	(x=0X7D01A6F4);
	op_hex		(x,	1);
	create_insn	(0X7D01A700);
	create_dword	(0X7D01A708);
	create_insn	(0X7D01A70C);
	set_name	(0X7D01A70C,	"der_length_utf8_string");
	set_cmt	(0X7D01A726,	"c",	0);
	create_insn	(0X7D01A738);
	create_insn	(0X7D01A740);
	create_insn	(0X7D01A748);
	create_insn	(0X7D01A752);
	create_insn	(0X7D01A762);
	create_dword	(0X7D01A768);
	create_insn	(0X7D01A76C);
	set_name	(0X7D01A76C,	"der_teletex_char_encode");
	create_insn	(x=0X7D01A76E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A77C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01A784);
	create_dword	(x=0X7D01A790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A794);
	set_name	(0X7D01A794,	"der_teletex_value_decode");
	create_insn	(x=0X7D01A796);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01A7A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01A7AA);
	make_array	(0X7D01A7B6,	0X2);
	create_dword	(x=0X7D01A7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01A7BC);
	set_name	(0X7D01A7BC,	"pkcs_1_oaep_decode");
	create_insn	(x=0X7D01A7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A7FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A80A);
	op_hex		(x,	1);
	set_cmt	(0X7D01A826,	"size",	0);
	set_cmt	(0X7D01A82E,	"size",	0);
	set_cmt	(0X7D01A836,	"size",	0);
	set_cmt	(0X7D01A844,	"ptr",	0);
	set_cmt	(0X7D01A84C,	"ptr",	0);
	set_cmt	(0X7D01A858,	"ptr",	0);
	create_insn	(0X7D01A860);
	set_cmt	(0X7D01A862,	"num",	0);
	set_cmt	(0X7D01A864,	"source",	0);
	create_insn	(x=0X7D01A870);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A87C,	"source",	0);
	create_insn	(x=0X7D01A882);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A884,	"destination",	0);
	set_cmt	(0X7D01A886,	"num",	0);
	set_cmt	(0X7D01A88C,	"masklen",	0);
	create_insn	(x=0X7D01A88C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A88E,	"hash_idx",	0);
	set_cmt	(0X7D01A890,	"seed",	0);
	set_cmt	(0X7D01A892,	"seedlen",	0);
	set_cmt	(0X7D01A894,	"mask",	0);
	create_insn	(x=0X7D01A896);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A8BC,	"masklen",	0);
	create_insn	(x=0X7D01A8BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A8C0,	"hash_idx",	0);
	set_cmt	(0X7D01A8C2,	"seed",	0);
	set_cmt	(0X7D01A8C4,	"seedlen",	0);
	set_cmt	(0X7D01A8C6,	"mask",	0);
	create_insn	(x=0X7D01A8EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A8F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A8FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A908,	"s1",	0);
	set_cmt	(0X7D01A90A,	"s2",	0);
	set_cmt	(0X7D01A90C,	"n",	0);
	create_insn	(x=0X7D01A912);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A920);
	create_insn	(x=0X7D01A924);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A928);
	create_insn	(0X7D01A94A);
	create_insn	(x=0X7D01A94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A952);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01A958,	"num",	0);
	set_cmt	(0X7D01A966,	"source",	0);
	set_cmt	(0X7D01A968,	"destination",	0);
	create_insn	(x=0X7D01A968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A96E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A976);
	set_cmt	(0X7D01A97A,	"ptr",	0);
	set_cmt	(0X7D01A980,	"ptr",	0);
	set_cmt	(0X7D01A986,	"ptr",	0);
	create_insn	(0X7D01A990);
	create_insn	(x=0X7D01A994);
	op_stkvar	(x,	1);
	create_insn	(0X7D01A998);
	create_insn	(0X7D01A99C);
	create_dword	(0X7D01A9A4);
	create_insn	(0X7D01A9A8);
	set_name	(0X7D01A9A8,	"pkcs_1_oaep_encode");
	create_insn	(x=0X7D01A9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01A9E8);
	op_hex		(x,	1);
	create_insn	(x=0X7D01A9EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AA1C,	"size",	0);
	set_cmt	(0X7D01AA24,	"size",	0);
	set_cmt	(0X7D01AA2C,	"size",	0);
	set_cmt	(0X7D01AA3A,	"ptr",	0);
	set_cmt	(0X7D01AA42,	"ptr",	0);
	set_cmt	(0X7D01AA4E,	"ptr",	0);
	create_insn	(x=0X7D01AA56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AA5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AA68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AA94,	"destination",	0);
	set_cmt	(0X7D01AA98,	"source",	0);
	create_insn	(x=0X7D01AA98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AA9A,	"num",	0);
	create_insn	(x=0X7D01AAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AAB4);
	op_stkvar	(x,	1);
	create_insn	(0X7D01AAC0);
	create_insn	(0X7D01AAC6);
	set_cmt	(0X7D01AACA,	"mask",	0);
	set_cmt	(0X7D01AAD0,	"masklen",	0);
	create_insn	(x=0X7D01AAD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AAD4,	"hash_idx",	0);
	create_insn	(x=0X7D01AAD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AAD6,	"seed",	0);
	set_cmt	(0X7D01AAD8,	"seedlen",	0);
	set_cmt	(0X7D01AAF4,	"mask",	0);
	create_insn	(0X7D01AAF4);
	set_cmt	(0X7D01AAF6,	"masklen",	0);
	create_insn	(x=0X7D01AAF6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AAFA,	"hash_idx",	0);
	create_insn	(x=0X7D01AAFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AAFC,	"seed",	0);
	set_cmt	(0X7D01AAFE,	"seedlen",	0);
	create_insn	(x=0X7D01AB22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AB30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AB38,	"source",	0);
	set_cmt	(0X7D01AB3A,	"num",	0);
	create_insn	(x=0X7D01AB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AB46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AB48,	"source",	0);
	set_cmt	(0X7D01AB4A,	"destination",	0);
	set_cmt	(0X7D01AB4C,	"num",	0);
	create_insn	(x=0X7D01AB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AB5A);
	op_stkvar	(x,	1);
	create_insn	(0X7D01AB60);
	set_cmt	(0X7D01AB62,	"ptr",	0);
	create_insn	(x=0X7D01AB64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AB6A,	"ptr",	0);
	set_cmt	(0X7D01AB70,	"ptr",	0);
	create_insn	(x=0X7D01AB76);
	op_stkvar	(x,	1);
	create_insn	(0X7D01AB7C);
	create_insn	(0X7D01AB80);
	create_insn	(0X7D01AB84);
	create_dword	(0X7D01AB8C);
	create_dword	(0X7D01AB90);
	create_insn	(0X7D01AB94);
	set_name	(0X7D01AB94,	"pkcs_1_pss_decode");
	create_insn	(x=0X7D01AB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ABD2);
	op_hex		(x,	1);
	create_insn	(x=0X7D01ABE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01ABF2,	"size",	0);
	create_insn	(x=0X7D01ABF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01ABFC,	"size",	0);
	set_cmt	(0X7D01AC04,	"size",	0);
	create_insn	(x=0X7D01AC0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC0C,	"size",	0);
	create_insn	(x=0X7D01AC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AC1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC20,	"ptr",	0);
	set_cmt	(0X7D01AC28,	"ptr",	0);
	create_insn	(x=0X7D01AC2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC32,	"ptr",	0);
	set_cmt	(0X7D01AC40,	"ptr",	0);
	create_insn	(0X7D01AC48);
	create_insn	(0X7D01AC5A);
	set_cmt	(0X7D01AC60,	"source",	0);
	set_cmt	(0X7D01AC62,	"num",	0);
	set_cmt	(0X7D01AC64,	"destination",	0);
	create_insn	(x=0X7D01AC66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC6C,	"destination",	0);
	set_cmt	(0X7D01AC6E,	"source",	0);
	set_cmt	(0X7D01AC72,	"num",	0);
	create_insn	(x=0X7D01AC78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC94,	"masklen",	0);
	create_insn	(x=0X7D01AC94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AC98,	"hash_idx",	0);
	set_cmt	(0X7D01AC9A,	"seed",	0);
	set_cmt	(0X7D01AC9C,	"seedlen",	0);
	set_cmt	(0X7D01AC9E,	"mask",	0);
	create_insn	(x=0X7D01ACA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ACAA);
	op_stkvar	(x,	1);
	create_insn	(0X7D01ACCA);
	create_insn	(x=0X7D01ACCC);
	op_stkvar	(x,	1);
	create_insn	(0X7D01ACF8);
	create_insn	(x=0X7D01ACFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AD10,	"out",	0);
	set_cmt	(0X7D01AD12,	"outlen",	0);
	create_insn	(x=0X7D01AD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AD62,	"s1",	0);
	set_cmt	(0X7D01AD64,	"s2",	0);
	set_cmt	(0X7D01AD66,	"n",	0);
	create_insn	(x=0X7D01AD6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AD70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AD74,	"ptr",	0);
	set_cmt	(0X7D01AD7A,	"ptr",	0);
	create_insn	(x=0X7D01AD7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AD80,	"ptr",	0);
	set_cmt	(0X7D01AD86,	"ptr",	0);
	create_insn	(0X7D01AD90);
	create_insn	(0X7D01AD94);
	create_insn	(0X7D01AD98);
	create_dword	(0X7D01ADA0);
	create_insn	(0X7D01ADA4);
	set_name	(0X7D01ADA4,	"pkcs_1_pss_encode");
	create_insn	(x=0X7D01ADAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ADF6);
	op_hex		(x,	1);
	create_insn	(x=0X7D01AE08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AE14,	"size",	0);
	set_cmt	(0X7D01AE1C,	"size",	0);
	create_insn	(x=0X7D01AE22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AE24,	"size",	0);
	set_cmt	(0X7D01AE2C,	"size",	0);
	create_insn	(x=0X7D01AE36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AE42,	"ptr",	0);
	create_insn	(x=0X7D01AE48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AE4C,	"ptr",	0);
	set_cmt	(0X7D01AE58,	"ptr",	0);
	set_cmt	(0X7D01AE66,	"ptr",	0);
	create_insn	(0X7D01AE6E);
	create_insn	(x=0X7D01AE78);
	op_stkvar	(x,	1);
	create_insn	(0X7D01AE8C);
	set_cmt	(0X7D01AEA4,	"out",	0);
	create_insn	(0X7D01AEA4);
	set_cmt	(0X7D01AEA6,	"outlen",	0);
	create_insn	(x=0X7D01AEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AEFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF24,	"source",	0);
	set_cmt	(0X7D01AF26,	"num",	0);
	set_cmt	(0X7D01AF28,	"destination",	0);
	set_cmt	(0X7D01AF2E,	"seedlen",	0);
	create_insn	(x=0X7D01AF2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF30,	"hash_idx",	0);
	set_cmt	(0X7D01AF38,	"masklen",	0);
	create_insn	(x=0X7D01AF38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF3C,	"seed",	0);
	set_cmt	(0X7D01AF3E,	"mask",	0);
	create_insn	(x=0X7D01AF3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF6C,	"source",	0);
	create_insn	(0X7D01AF6C);
	set_cmt	(0X7D01AF6E,	"num",	0);
	set_cmt	(0X7D01AF70,	"destination",	0);
	create_insn	(x=0X7D01AF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF76);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF78,	"source",	0);
	set_cmt	(0X7D01AF7A,	"num",	0);
	create_insn	(x=0X7D01AF7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AF7C,	"destination",	0);
	create_insn	(x=0X7D01AF82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AF9E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AFA4,	"ptr",	0);
	set_cmt	(0X7D01AFAA,	"ptr",	0);
	set_cmt	(0X7D01AFB0,	"ptr",	0);
	create_insn	(x=0X7D01AFB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01AFB6,	"ptr",	0);
	create_insn	(0X7D01AFC0);
	create_insn	(0X7D01AFC4);
	create_insn	(0X7D01AFC8);
	create_dword	(0X7D01AFD0);
	create_dword	(0X7D01AFD4);
	create_insn	(0X7D01AFD8);
	set_name	(0X7D01AFD8,	"pkcs_1_v1_5_encode");
	create_insn	(x=0X7D01AFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AFEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AFEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01AFFA);
	op_hex		(x,	1);
	create_insn	(0X7D01B010);
	create_insn	(0X7D01B01C);
	create_insn	(0X7D01B02C);
	create_insn	(x=0X7D01B048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B04A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B058);
	op_stkvar	(x,	1);
	create_insn	(0X7D01B05C);
	create_insn	(x=0X7D01B05E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B072);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B082);
	op_stkvar	(x,	1);
	create_insn	(0X7D01B08A);
	set_cmt	(0X7D01B092,	"destination",	0);
	set_cmt	(0X7D01B09C,	"source",	0);
	create_insn	(x=0X7D01B09C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B0A2,	"num",	0);
	create_insn	(0X7D01B0B0);
	create_insn	(0X7D01B0B4);
	create_dword	(x=0X7D01B0BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B0C0);
	set_name	(0X7D01B0C0,	"ltc_ecc_map");
	create_insn	(x=0X7D01B0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B0E6,	"a",	0);
	create_insn	(x=0X7D01B0E8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B0EC,	"b",	0);
	set_cmt	(0X7D01B0EE,	"c",	0);
	create_insn	(x=0X7D01B0F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B0FC,	"a",	0);
	set_cmt	(0X7D01B0FE,	"b",	0);
	set_cmt	(0X7D01B100,	"c",	0);
	create_insn	(x=0X7D01B100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B10A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B11A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B12E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B13A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B13C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B14C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B14E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B158);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B15C,	"a",	0);
	set_cmt	(0X7D01B15E,	"b",	0);
	set_cmt	(0X7D01B160,	"c",	0);
	create_insn	(x=0X7D01B16A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B176);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B17A,	"a",	0);
	set_cmt	(0X7D01B17C,	"b",	0);
	set_cmt	(0X7D01B17E,	"c",	0);
	create_insn	(x=0X7D01B186);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01B19E);
	create_insn	(0X7D01B1A2);
	make_array	(0X7D01B1AA,	0X2);
	create_dword	(x=0X7D01B1AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B1B0);
	set_name	(0X7D01B1B0,	"ltc_ecc_mulmod");
	create_insn	(x=0X7D01B1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B1D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B1D8,	"b",	0);
	create_insn	(x=0X7D01B1D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B1DA,	"a",	0);
	create_insn	(x=0X7D01B1DC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B1EA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B1EC,	"a",	0);
	create_insn	(x=0X7D01B1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B1F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B1F8,	"a",	0);
	create_insn	(x=0X7D01B1F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B1FA,	"b",	0);
	create_insn	(x=0X7D01B202);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B204);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B208,	"a",	0);
	create_insn	(x=0X7D01B208);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B20A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B214);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B226,	"p",	0);
	create_insn	(x=0X7D01B232);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B236);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B23A,	"a",	0);
	create_insn	(x=0X7D01B23A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B23C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01B246);
	set_cmt	(0X7D01B258,	"d",	0);
	create_insn	(x=0X7D01B25A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B25E,	"a",	0);
	set_cmt	(0X7D01B262,	"b",	0);
	create_insn	(x=0X7D01B262);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B264,	"c",	0);
	create_insn	(x=0X7D01B266);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B272,	"d",	0);
	create_insn	(x=0X7D01B274);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B278,	"a",	0);
	set_cmt	(0X7D01B27C,	"b",	0);
	create_insn	(x=0X7D01B27C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B27E,	"c",	0);
	set_cmt	(0X7D01B28A,	"d",	0);
	create_insn	(x=0X7D01B28C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B290,	"a",	0);
	set_cmt	(0X7D01B294,	"b",	0);
	create_insn	(x=0X7D01B294);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B296,	"c",	0);
	create_insn	(x=0X7D01B2A2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B2C0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B2D0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B2E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B2E4,	"mp",	0);
	create_insn	(x=0X7D01B2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B2E6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B2EA,	"P",	0);
	set_cmt	(0X7D01B2EC,	"R",	0);
	set_cmt	(0X7D01B2EE,	"modulus",	0);
	create_insn	(x=0X7D01B2FA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B2FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B30A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B30E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B312);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B31A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B31C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B326);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B32A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B32E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B336);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B33A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B33C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B346);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B34C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01B358);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B35A,	"mp",	0);
	create_insn	(x=0X7D01B35A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B35C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B35E,	"P",	0);
	set_cmt	(0X7D01B360,	"Q",	0);
	set_cmt	(0X7D01B368,	"R",	0);
	set_cmt	(0X7D01B36A,	"modulus",	0);
	create_insn	(x=0X7D01B36C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B37E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B380);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B386,	"modulus",	0);
	create_insn	(0X7D01B386);
	set_cmt	(0X7D01B388,	"R",	0);
	create_insn	(x=0X7D01B388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B38A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B396,	"mp",	0);
	create_insn	(x=0X7D01B396);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B398,	"P",	0);
	set_cmt	(0X7D01B39A,	"R",	0);
	create_insn	(x=0X7D01B39A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B39C,	"modulus",	0);
	create_insn	(x=0X7D01B39E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B3AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B3B0,	"mp",	0);
	create_insn	(x=0X7D01B3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B3B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D01B3B6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B3BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B3C0,	"modulus",	0);
	set_cmt	(0X7D01B3C2,	"R",	0);
	set_cmt	(0X7D01B3C6,	"P",	0);
	create_insn	(x=0X7D01B3C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B3CC,	"Q",	0);
	create_insn	(x=0X7D01B3D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B3DA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B3DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B3E4,	"modulus",	0);
	set_cmt	(0X7D01B3E6,	"P",	0);
	set_cmt	(0X7D01B3EA,	"mp",	0);
	create_insn	(x=0X7D01B3EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B3EC,	"R",	0);
	create_insn	(x=0X7D01B3F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B406);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B414);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B422);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B426,	"P",	0);
	set_cmt	(0X7D01B428,	"modulus",	0);
	set_cmt	(0X7D01B42A,	"mp",	0);
	create_insn	(x=0X7D01B42A);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D01B434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B438);
	create_insn	(x=0X7D01B43A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B43C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B440);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B442);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B446);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B448);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B44C,	"a",	0);
	create_insn	(x=0X7D01B44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B44E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B452,	"p",	0);
	set_cmt	(0X7D01B458,	"p",	0);
	create_insn	(x=0X7D01B458);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B45E,	"p",	0);
	create_insn	(x=0X7D01B45E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B464,	"p",	0);
	create_insn	(x=0X7D01B464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B46A);
	op_stkvar	(x,	1);
	create_insn	(0X7D01B470);
	create_dword	(x=0X7D01B478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B47C);
	set_name	(0X7D01B47C,	"ltc_ecc_mul2add");
	create_insn	(x=0X7D01B488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B48C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B4B6,	"nmemb",	0);
	set_cmt	(0X7D01B4B8,	"size",	0);
	set_cmt	(0X7D01B4C8,	"nmemb",	0);
	set_cmt	(0X7D01B4CA,	"size",	0);
	create_insn	(x=0X7D01B4D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B4D6,	"ptr",	0);
	create_insn	(x=0X7D01B4DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B4E2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B4E8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B50E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B512);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B516);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B51E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B522);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B52A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B53E,	"p",	0);
	create_insn	(0X7D01B54A);
	create_insn	(0X7D01B54E);
	create_insn	(x=0X7D01B554);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B558,	"b",	0);
	create_insn	(x=0X7D01B558);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B55A,	"a",	0);
	create_insn	(x=0X7D01B55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B568);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B56A,	"a",	0);
	create_insn	(x=0X7D01B56A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B576);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B57A,	"a",	0);
	create_insn	(x=0X7D01B57A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B57C,	"b",	0);
	create_insn	(x=0X7D01B588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B58A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B58E,	"d",	0);
	set_cmt	(0X7D01B590,	"a",	0);
	set_cmt	(0X7D01B594,	"b",	0);
	create_insn	(x=0X7D01B594);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B596,	"c",	0);
	set_cmt	(0X7D01B5A2,	"d",	0);
	create_insn	(x=0X7D01B5A4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B5A8,	"a",	0);
	set_cmt	(0X7D01B5AC,	"b",	0);
	create_insn	(x=0X7D01B5AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B5AE,	"c",	0);
	set_cmt	(0X7D01B5BA,	"d",	0);
	create_insn	(x=0X7D01B5BC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B5C0,	"a",	0);
	set_cmt	(0X7D01B5C4,	"b",	0);
	create_insn	(x=0X7D01B5C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B5C6,	"c",	0);
	create_insn	(x=0X7D01B5D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B5D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B5DA,	"d",	0);
	set_cmt	(0X7D01B5DE,	"a",	0);
	set_cmt	(0X7D01B5E2,	"b",	0);
	create_insn	(x=0X7D01B5E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B5E4,	"c",	0);
	set_cmt	(0X7D01B5F0,	"d",	0);
	create_insn	(x=0X7D01B5F4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B5F8,	"a",	0);
	set_cmt	(0X7D01B5FC,	"b",	0);
	create_insn	(x=0X7D01B5FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B5FE,	"c",	0);
	create_insn	(x=0X7D01B60A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B60C,	"d",	0);
	create_insn	(x=0X7D01B610);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B614,	"a",	0);
	set_cmt	(0X7D01B618,	"b",	0);
	create_insn	(x=0X7D01B618);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B61A,	"c",	0);
	create_insn	(x=0X7D01B626);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B62A,	"mp",	0);
	create_insn	(x=0X7D01B62A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B62C,	"P",	0);
	set_cmt	(0X7D01B62E,	"R",	0);
	set_cmt	(0X7D01B630,	"modulus",	0);
	create_insn	(x=0X7D01B632);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B640);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B642,	"P",	0);
	set_cmt	(0X7D01B644,	"mp",	0);
	create_insn	(x=0X7D01B644);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B646,	"Q",	0);
	set_cmt	(0X7D01B648,	"modulus",	0);
	set_cmt	(0X7D01B64A,	"R",	0);
	create_insn	(x=0X7D01B64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B64C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B65A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B65C,	"mp",	0);
	create_insn	(x=0X7D01B65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B65E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B662,	"P",	0);
	set_cmt	(0X7D01B664,	"R",	0);
	set_cmt	(0X7D01B666,	"modulus",	0);
	create_insn	(x=0X7D01B672);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B674,	"P",	0);
	set_cmt	(0X7D01B676,	"mp",	0);
	create_insn	(x=0X7D01B676);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B678);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B67C,	"modulus",	0);
	set_cmt	(0X7D01B67E,	"Q",	0);
	set_cmt	(0X7D01B680,	"R",	0);
	create_insn	(x=0X7D01B680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B696);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B698);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B69E,	"mp",	0);
	create_insn	(x=0X7D01B69E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6A0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B6A6,	"P",	0);
	create_insn	(x=0X7D01B6AE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B6B2,	"Q",	0);
	set_cmt	(0X7D01B6B6,	"R",	0);
	set_cmt	(0X7D01B6BA,	"modulus",	0);
	create_insn	(x=0X7D01B6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B70E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B732);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B738);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B744,	"mp",	0);
	create_insn	(x=0X7D01B744);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B746,	"P",	0);
	set_cmt	(0X7D01B748,	"R",	0);
	set_cmt	(0X7D01B74A,	"modulus",	0);
	create_insn	(x=0X7D01B74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B750);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B75C,	"mp",	0);
	create_insn	(x=0X7D01B75C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B75E,	"P",	0);
	set_cmt	(0X7D01B760,	"R",	0);
	set_cmt	(0X7D01B762,	"modulus",	0);
	create_insn	(x=0X7D01B764);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B76C);
	op_stkvar	(x,	1);
	make_array	(0X7D01B776,	0X2);
	create_dword	(x=0X7D01B778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B77C);
	create_insn	(x=0X7D01B782);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B78E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B79C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B7A6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B7B4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B7C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B7C6,	"P",	0);
	create_insn	(0X7D01B7C6);
	create_insn	(x=0X7D01B7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B7CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B7D0,	"mp",	0);
	create_insn	(x=0X7D01B7D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B7D2,	"modulus",	0);
	set_cmt	(0X7D01B7D4,	"Q",	0);
	create_insn	(x=0X7D01B7D8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B7DC,	"R",	0);
	set_cmt	(0X7D01B7E8,	"P",	0);
	create_insn	(0X7D01B7E8);
	set_cmt	(0X7D01B7EA,	"modulus",	0);
	set_cmt	(0X7D01B7EC,	"mp",	0);
	create_insn	(x=0X7D01B7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B7F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B7F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B7FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B7FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B802,	"a",	0);
	create_insn	(x=0X7D01B802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B804);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B810);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B812,	"p",	0);
	create_insn	(x=0X7D01B816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B81E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01B824);
	set_cmt	(0X7D01B826,	"ptr",	0);
	create_insn	(x=0X7D01B828);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B82E,	"ptr",	0);
	create_insn	(x=0X7D01B82E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B834);
	op_stkvar	(x,	1);
	create_insn	(0X7D01B83A);
	create_insn	(0X7D01B83E);
	make_array	(0X7D01B846,	0X2);
	create_dword	(x=0X7D01B848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01B84C);
	set_name	(0X7D01B84C,	"ltc_ecc_projective_add_point");
	create_insn	(x=0X7D01B858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B87A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B886);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B894);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B898);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B89E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B8AA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B8BE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B8C8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B8D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B8DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B8DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B8E6,	"P",	0);
	set_cmt	(0X7D01B8E8,	"R",	0);
	set_cmt	(0X7D01B8EA,	"modulus",	0);
	set_cmt	(0X7D01B8EC,	"mp",	0);
	create_insn	(x=0X7D01B8F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B8FA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B904);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B90A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B90C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B918);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B91E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B92A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B942);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B946);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01B956);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B964);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B968,	"a",	0);
	create_insn	(x=0X7D01B968);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B96A,	"b",	0);
	set_cmt	(0X7D01B96C,	"c",	0);
	create_insn	(x=0X7D01B978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B97A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B98A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B98E,	"a",	0);
	create_insn	(x=0X7D01B98E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B990,	"b",	0);
	set_cmt	(0X7D01B992,	"c",	0);
	create_insn	(x=0X7D01B99E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B9A0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B9B2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B9B6,	"a",	0);
	create_insn	(x=0X7D01B9B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B9B8,	"b",	0);
	set_cmt	(0X7D01B9BA,	"c",	0);
	create_insn	(x=0X7D01B9C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B9C8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01B9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B9D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01B9DA,	"a",	0);
	create_insn	(x=0X7D01B9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01B9DC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B9E0,	"b",	0);
	set_cmt	(0X7D01B9E2,	"c",	0);
	create_insn	(x=0X7D01B9F0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01B9F4,	"a",	0);
	create_insn	(x=0X7D01B9F4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01B9F6,	"b",	0);
	set_cmt	(0X7D01B9F8,	"c",	0);
	create_insn	(x=0X7D01BA04);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BA0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA18);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BA1C,	"a",	0);
	create_insn	(x=0X7D01BA1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BA1E,	"b",	0);
	set_cmt	(0X7D01BA20,	"c",	0);
	create_insn	(x=0X7D01BA2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA2E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA3E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BA42,	"a",	0);
	create_insn	(x=0X7D01BA42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BA44,	"b",	0);
	set_cmt	(0X7D01BA46,	"c",	0);
	create_insn	(x=0X7D01BA52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA54);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BA66);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BA6A,	"a",	0);
	create_insn	(x=0X7D01BA6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BA6C,	"b",	0);
	set_cmt	(0X7D01BA6E,	"c",	0);
	create_insn	(x=0X7D01BA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA7C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BA7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA8C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BA8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BA9A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BAAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BAB0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAC2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BAD0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BAD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X7D01BAE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D01BAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BAEA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAFC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BAFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB0A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BB1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB20);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB32);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB40);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB56);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB68);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB76);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BB8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BB8C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BB9E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBB4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BBC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBC8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BBD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01BBD8,	"a",	0);
	create_insn	(x=0X7D01BBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBDA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BBDE,	"b",	0);
	set_cmt	(0X7D01BBE0,	"c",	0);
	create_insn	(x=0X7D01BBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBEE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BBF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BC00);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BC04,	"a",	0);
	create_insn	(x=0X7D01BC04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BC06,	"b",	0);
	set_cmt	(0X7D01BC08,	"c",	0);
	create_insn	(x=0X7D01BC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC16);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC26);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BC2A,	"a",	0);
	create_insn	(x=0X7D01BC2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BC2C,	"b",	0);
	set_cmt	(0X7D01BC2E,	"c",	0);
	create_insn	(x=0X7D01BC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC3C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BC4A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BC4E,	"a",	0);
	create_insn	(x=0X7D01BC4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BC50,	"b",	0);
	set_cmt	(0X7D01BC52,	"c",	0);
	create_insn	(x=0X7D01BC5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC60);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BC62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC70);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BC74,	"a",	0);
	create_insn	(x=0X7D01BC74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BC76,	"b",	0);
	set_cmt	(0X7D01BC78,	"c",	0);
	create_insn	(x=0X7D01BC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC86);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BC96);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BC9A,	"a",	0);
	create_insn	(x=0X7D01BC9A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BC9C,	"b",	0);
	set_cmt	(0X7D01BC9E,	"c",	0);
	create_insn	(x=0X7D01BCAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCAE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCBC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BCC0,	"a",	0);
	create_insn	(x=0X7D01BCC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BCC2,	"b",	0);
	set_cmt	(0X7D01BCC4,	"c",	0);
	create_insn	(x=0X7D01BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCD2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCE2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCF0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BCF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BCF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD06);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD18);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD26);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD3A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D01BD4A,	0X2);
	create_dword	(x=0X7D01BD4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D01BD50);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD5E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD72);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD82);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BD86,	"a",	0);
	create_insn	(x=0X7D01BD86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BD88,	"b",	0);
	set_cmt	(0X7D01BD8A,	"c",	0);
	create_insn	(x=0X7D01BD94);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BD96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BD9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDA4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDB0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDC0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDD0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDDE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BDEE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDFC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BDFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE0A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE18);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE2C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01BE38);
	create_dword	(x=0X7D01BE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01BE44);
	set_name	(0X7D01BE44,	"ltc_ecc_projective_dbl_point");
	create_insn	(x=0X7D01BE6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BE7E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BE82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BE84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BE94);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BEA6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BEB8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BECC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BED0,	"a",	0);
	create_insn	(x=0X7D01BED0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BED2,	"b",	0);
	set_cmt	(0X7D01BED4,	"c",	0);
	create_insn	(x=0X7D01BEE2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BEF4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BEF8,	"a",	0);
	set_cmt	(0X7D01BEFA,	"b",	0);
	set_cmt	(0X7D01BEFC,	"c",	0);
	create_insn	(x=0X7D01BF0A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF1C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF2A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BF32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01BF42);
	create_insn	(x=0X7D01BF44);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF58);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BF66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BF68);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BF7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BF80);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF94);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFA4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BFA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01BFBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFBC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BFD0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01BFD4,	"a",	0);
	create_insn	(x=0X7D01BFD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01BFD6,	"b",	0);
	set_cmt	(0X7D01BFD8,	"c",	0);
	create_insn	(x=0X7D01BFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFE6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01BFF8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01BFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C006);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C008);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C00A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C00E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C01E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C020);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C034);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C044);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C04A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C05A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C05C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C070);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C080);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C094);
	create_insn	(x=0X7D01C096);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	make_array	(0X7D01C0AA,	0X2);
	create_dword	(x=0X7D01C0AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D01C0B0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C0B4,	"a",	0);
	set_cmt	(0X7D01C0B6,	"b",	0);
	set_cmt	(0X7D01C0B8,	"c",	0);
	create_insn	(x=0X7D01C0C4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C0D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C0DA,	"a",	0);
	create_insn	(x=0X7D01C0DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C0DC,	"b",	0);
	set_cmt	(0X7D01C0DE,	"c",	0);
	create_insn	(x=0X7D01C0EA);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C0EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C0F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C0FC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C110);
	create_insn	(x=0X7D01C112);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C116);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C11E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C120);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C134);
	create_insn	(x=0X7D01C136);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C148);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C14C,	"a",	0);
	set_cmt	(0X7D01C14E,	"b",	0);
	set_cmt	(0X7D01C150,	"c",	0);
	create_insn	(x=0X7D01C15C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C16E);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C172,	"a",	0);
	set_cmt	(0X7D01C174,	"b",	0);
	set_cmt	(0X7D01C176,	"c",	0);
	create_insn	(x=0X7D01C182);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C192);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C1A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C1A6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C1B4);
	create_insn	(x=0X7D01C1B6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C1C8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C1D6);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C1EA);
	create_insn	(x=0X7D01C1EC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C1FC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C20C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C20E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C212);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C220);
	create_insn	(x=0X7D01C222);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C232);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C236,	"a",	0);
	set_cmt	(0X7D01C238,	"b",	0);
	set_cmt	(0X7D01C23A,	"c",	0);
	create_insn	(x=0X7D01C244);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C252);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C266);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C272);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C27E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01C284);
	create_dword	(x=0X7D01C28C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C290);
	set_name	(0X7D01C290,	"der_ia5_char_encode");
	create_insn	(x=0X7D01C292);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C2A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C2A8);
	create_dword	(x=0X7D01C2B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C2B8);
	set_name	(0X7D01C2B8,	"der_ia5_value_decode");
	create_insn	(x=0X7D01C2BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C2C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C2CE);
	make_array	(0X7D01C2DA,	0X2);
	create_dword	(x=0X7D01C2DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C2E0);
	set_name	(0X7D01C2E0,	"der_decode_integer");
	create_insn	(x=0X7D01C2F6);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C30A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C310);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C314);
	op_hex		(x,	1);
	create_insn	(0X7D01C33A);
	create_insn	(x=0X7D01C340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C344);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C354);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01C356,	"a",	0);
	create_insn	(x=0X7D01C356);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C358);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C364);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C368);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C374);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C376);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C37C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C38C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C38E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01C394);
	create_insn	(0X7D01C398);
	create_insn	(0X7D01C39C);
	create_insn	(0X7D01C3A0);
	create_insn	(0X7D01C3A4);
	make_array	(0X7D01C3AE,	0X2);
	create_dword	(x=0X7D01C3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C3B4);
	set_name	(0X7D01C3B4,	"der_encode_integer");
	set_cmt	(0X7D01C3C0,	"num",	0);
	create_insn	(x=0X7D01C3C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C3C4);
	set_cmt	(0X7D01C3CC,	"outlen",	0);
	create_insn	(x=0X7D01C3DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C3EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C3F0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C3F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C404);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C418);
	create_insn	(x=0X7D01C41C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C428);
	create_insn	(x=0X7D01C42A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C42C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C43A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C44C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C452);
	op_hex		(x,	1);
	create_insn	(0X7D01C45E);
	create_insn	(0X7D01C472);
	create_insn	(0X7D01C482);
	create_insn	(0X7D01C498);
	create_insn	(x=0X7D01C4C0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C4C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C4CE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C4DC);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C4E8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	set_cmt	(0X7D01C4EA,	"a",	0);
	create_insn	(x=0X7D01C4EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C4F2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C4F8);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C4FA);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C508);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C516);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C51C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C524);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C526);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C52A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C530);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C532);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C53A);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C546);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C550);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C552);
	op_stkvar	(x,	1);
	create_insn	(0X7D01C55C);
	create_insn	(0X7D01C560);
	create_insn	(x=0X7D01C564);
	op_stkvar	(x,	1);
	make_array	(0X7D01C572,	0X2);
	create_dword	(x=0X7D01C574);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C578);
	set_name	(0X7D01C578,	"der_length_integer");
	create_insn	(x=0X7D01C588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C58C);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C596);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C5A0);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C5B2);
	create_insn	(x=0X7D01C5B4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C5BE);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C5C4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C5C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C5D4);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(x=0X7D01C5E2);
	op_plain_offset	(x,	1,	0X7D04F190);
	op_plain_offset	(x,	129,	0X7D04F190);
	create_insn	(0X7D01C60C);
	make_array	(0X7D01C612,	0X2);
	create_dword	(x=0X7D01C614);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C618);
	set_name	(0X7D01C618,	"der_printable_char_encode");
	create_insn	(x=0X7D01C61A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C630);
	create_dword	(x=0X7D01C63C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C640);
	set_name	(0X7D01C640,	"der_printable_value_decode");
	create_insn	(x=0X7D01C642);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C64E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01C656);
	make_array	(0X7D01C662,	0X2);
	create_dword	(x=0X7D01C664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C668);
	set_name	(0X7D01C668,	"pkcs_1_mgf1");
	create_insn	(x=0X7D01C66E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C68A,	"size",	0);
	create_insn	(x=0X7D01C692);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C69A,	"size",	0);
	create_insn	(x=0X7D01C69A);
	op_stkvar	(x,	1);
	create_insn	(0X7D01C6AA);
	create_insn	(0X7D01C6AE);
	create_insn	(0X7D01C6B8);
	create_insn	(x=0X7D01C6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C716);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C71E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01C72E);
	create_insn	(0X7D01C732);
	set_cmt	(0X7D01C734,	"ptr",	0);
	set_cmt	(0X7D01C73A,	"ptr",	0);
	create_insn	(0X7D01C742);
	create_insn	(0X7D01C746);
	create_insn	(0X7D01C74A);
	make_array	(0X7D01C752,	0X2);
	create_dword	(x=0X7D01C754);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X7D01C758);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D01C758,	"mpa_constant_one");
	create_dword	(x=0X7D01C75C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C760);
	set_name	(0X7D01C760,	"mpa_compute_fmm_context");
	create_insn	(x=0X7D01C774);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C778,	"dest",	0);
	set_cmt	(0X7D01C77A,	"src",	0);
	set_cmt	(0X7D01C782,	"dest",	0);
	set_cmt	(0X7D01C784,	"src",	0);
	set_cmt	(0X7D01C786,	"steps",	0);
	set_cmt	(0X7D01C78E,	"dest",	0);
	set_cmt	(0X7D01C790,	"op",	0);
	set_cmt	(0X7D01C792,	"n",	0);
	set_cmt	(0X7D01C794,	"pool",	0);
	set_cmt	(0X7D01C79A,	"op2",	0);
	set_cmt	(0X7D01C79C,	"op1",	0);
	set_cmt	(0X7D01C79E,	"n",	0);
	set_cmt	(0X7D01C7A0,	"dest",	0);
	set_cmt	(0X7D01C7A2,	"pool",	0);
	create_insn	(x=0X7D01C7A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7AC,	"var",	0);
	create_insn	(x=0X7D01C7AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7AE,	"pool",	0);
	create_insn	(x=0X7D01C7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C7B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C7B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7BC,	"pool",	0);
	set_cmt	(0X7D01C7BE,	"var",	0);
	create_insn	(x=0X7D01C7BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7C4,	"gcd",	0);
	create_insn	(x=0X7D01C7C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7C6,	"src1",	0);
	create_insn	(x=0X7D01C7C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7C8,	"dest1",	0);
	create_insn	(x=0X7D01C7C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7CA,	"dest2",	0);
	set_cmt	(0X7D01C7CC,	"src2",	0);
	create_insn	(x=0X7D01C7CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7CE,	"pool",	0);
	create_insn	(x=0X7D01C7CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7D4,	"op2",	0);
	set_cmt	(0X7D01C7D6,	"op1",	0);
	create_insn	(x=0X7D01C7D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7E0,	"dest",	0);
	create_insn	(x=0X7D01C7E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7E8,	"op1",	0);
	set_cmt	(0X7D01C7EA,	"op2",	0);
	set_cmt	(0X7D01C7EC,	"pool",	0);
	create_insn	(x=0X7D01C7F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C7F8,	"pool",	0);
	set_cmt	(0X7D01C7FA,	"var",	0);
	create_insn	(x=0X7D01C7FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C800,	"pool",	0);
	set_cmt	(0X7D01C802,	"var",	0);
	create_insn	(x=0X7D01C802);
	op_stkvar	(x,	1);
	make_array	(0X7D01C816,	0X2);
	create_dword	(x=0X7D01C818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01C81C);
	set_name	(0X7D01C81C,	"primality_test_miller_rabin");
	create_insn	(0X7D01C848);
	create_insn	(x=0X7D01C84E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01C85E);
	op_hex		(x,	1);
	set_cmt	(0X7D01C866,	"op1",	0);
	set_cmt	(0X7D01C868,	"op2",	0);
	set_cmt	(0X7D01C874,	"pool",	0);
	set_cmt	(0X7D01C876,	"var",	0);
	create_insn	(x=0X7D01C876);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C87C,	"dest",	0);
	create_insn	(x=0X7D01C87C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C87E,	"src1",	0);
	set_cmt	(0X7D01C880,	"src2",	0);
	create_insn	(x=0X7D01C880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01C882,	"pool",	0);
	set_cmt	(0X7D01C888,	"op2",	0);
	set_cmt	(0X7D01C88A,	"op1",	0);
	create_insn	(x=0X7D01C88A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C892,	"var",	0);
	create_insn	(x=0X7D01C892);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C894,	"pool",	0);
	create_insn	(x=0X7D01C8A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01C8B2);
	op_hex		(x,	1);
	set_cmt	(0X7D01C8B8,	"pool",	0);
	create_insn	(0X7D01C8B8);
	set_cmt	(0X7D01C8BA,	"var",	0);
	create_insn	(x=0X7D01C8BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8C0,	"pool",	0);
	set_cmt	(0X7D01C8C2,	"var",	0);
	create_insn	(x=0X7D01C8C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8C8,	"pool",	0);
	create_insn	(x=0X7D01C8C8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8CA,	"n_inv",	0);
	create_insn	(x=0X7D01C8CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8CC,	"modulus",	0);
	set_cmt	(0X7D01C8CE,	"r_modn",	0);
	create_insn	(x=0X7D01C8CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8D0,	"r2_modn",	0);
	create_insn	(x=0X7D01C8D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8DC,	"pool",	0);
	set_cmt	(0X7D01C8DE,	"var",	0);
	create_insn	(x=0X7D01C8DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8E8,	"pool",	0);
	set_cmt	(0X7D01C8EA,	"var",	0);
	create_insn	(x=0X7D01C8EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8F0,	"pool",	0);
	set_cmt	(0X7D01C8F2,	"var",	0);
	create_insn	(x=0X7D01C8F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C8F8,	"pool",	0);
	set_cmt	(0X7D01C8FA,	"var",	0);
	create_insn	(x=0X7D01C8FA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C900,	"op2",	0);
	create_insn	(x=0X7D01C900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01C902,	"op1",	0);
	set_cmt	(0X7D01C918,	"dest",	0);
	create_insn	(x=0X7D01C918);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C91A,	"op1",	0);
	set_cmt	(0X7D01C91C,	"op2",	0);
	set_cmt	(0X7D01C920,	"pool",	0);
	set_cmt	(0X7D01C92C,	"dest",	0);
	create_insn	(x=0X7D01C92C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C92E,	"src",	0);
	create_insn	(x=0X7D01C92E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C934,	"src",	0);
	create_insn	(x=0X7D01C934);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C93C,	"dest",	0);
	create_insn	(x=0X7D01C93C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C942,	"steps",	0);
	set_cmt	(0X7D01C944,	"src",	0);
	create_insn	(0X7D01C94C);
	create_insn	(x=0X7D01C962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01C964,	"dest",	0);
	create_insn	(x=0X7D01C964);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C966,	"short_val",	0);
	set_cmt	(0X7D01C96E,	"op1",	0);
	set_cmt	(0X7D01C970,	"op2",	0);
	create_insn	(x=0X7D01C970);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C97C,	"dest",	0);
	create_insn	(x=0X7D01C97C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C97E,	"op2",	0);
	set_cmt	(0X7D01C980,	"op1",	0);
	set_cmt	(0X7D01C982,	"pool",	0);
	create_insn	(x=0X7D01C988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C98A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C990,	"dest",	0);
	create_insn	(x=0X7D01C990);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C992,	"op2",	0);
	set_cmt	(0X7D01C994,	"op1",	0);
	set_cmt	(0X7D01C996,	"pool",	0);
	set_cmt	(0X7D01C99C,	"dest",	0);
	create_insn	(x=0X7D01C99C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C99E,	"op2",	0);
	set_cmt	(0X7D01C9A0,	"op1",	0);
	set_cmt	(0X7D01C9A2,	"pool",	0);
	create_insn	(x=0X7D01C9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C9C4,	"op1",	0);
	create_insn	(x=0X7D01C9C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C9C6,	"op2",	0);
	set_cmt	(0X7D01C9D6,	"op1",	0);
	create_insn	(x=0X7D01C9D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01C9D8,	"op2",	0);
	create_insn	(x=0X7D01C9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01C9FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CA00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01CA0A);
	create_insn	(0X7D01CA12);
	set_cmt	(0X7D01CA22,	"pool",	0);
	set_cmt	(0X7D01CA24,	"var",	0);
	create_insn	(x=0X7D01CA24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CA2A,	"pool",	0);
	set_cmt	(0X7D01CA2C,	"var",	0);
	create_insn	(x=0X7D01CA2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CA32,	"pool",	0);
	set_cmt	(0X7D01CA34,	"var",	0);
	create_insn	(x=0X7D01CA34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CA3A,	"pool",	0);
	set_cmt	(0X7D01CA3C,	"var",	0);
	create_insn	(x=0X7D01CA3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CA42,	"pool",	0);
	set_cmt	(0X7D01CA44,	"var",	0);
	create_insn	(x=0X7D01CA44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CA4A,	"pool",	0);
	set_cmt	(0X7D01CA4C,	"var",	0);
	create_insn	(x=0X7D01CA4C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01CA54);
	create_insn	(0X7D01CA58);
	make_array	(0X7D01CA62,	0X2);
	create_dword	(x=0X7D01CA64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D01CA64,	"src2");
	create_dword	(x=0X7D01CA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01CA6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D01CA6C,	"op2");
	create_dword	(x=0X7D01CA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01CA74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CA78);
	set_name	(0X7D01CA78,	"mpa_set_random_generator");
	make_array	(0X7D01CA7E,	0X2);
	create_dword	(x=0X7D01CA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CA84);
	set_name	(0X7D01CA84,	"mpa_get_random");
	create_insn	(x=0X7D01CAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CAC6);
	op_stkvar	(x,	1);
	create_insn	(0X7D01CADC);
	set_cmt	(0X7D01CAE8,	"src",	0);
	create_insn	(x=0X7D01CAEE);
	op_hex		(x,	1);
	set_cmt	(0X7D01CB0E,	"op1",	0);
	set_cmt	(0X7D01CB10,	"op2",	0);
	create_dword	(x=0X7D01CB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CB24);
	set_name	(0X7D01CB24,	"mpa_exp_mod");
	create_insn	(x=0X7D01CB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CB2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB32,	"var",	0);
	create_insn	(x=0X7D01CB32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB34,	"pool",	0);
	create_insn	(x=0X7D01CB3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB42,	"pool",	0);
	set_cmt	(0X7D01CB44,	"var",	0);
	create_insn	(x=0X7D01CB44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB4A,	"pool",	0);
	set_cmt	(0X7D01CB4C,	"var",	0);
	create_insn	(x=0X7D01CB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CB52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CB5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CB5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB64,	"src",	0);
	create_insn	(x=0X7D01CB64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB66,	"dest",	0);
	create_insn	(x=0X7D01CB66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB6C,	"n",	0);
	create_insn	(x=0X7D01CB6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB72,	"n",	0);
	create_insn	(x=0X7D01CB72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB78,	"src",	0);
	create_insn	(x=0X7D01CB8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CB96,	"src",	0);
	set_cmt	(0X7D01CB98,	"idx",	0);
	create_insn	(x=0X7D01CBA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CBAC);
	op_stkvar	(x,	1);
	create_insn	(0X7D01CBC4);
	create_insn	(x=0X7D01CBC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01CBCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01CBD4,	"dest",	0);
	set_cmt	(0X7D01CBD6,	"src",	0);
	set_cmt	(0X7D01CBDC,	"pool",	0);
	set_cmt	(0X7D01CBDE,	"var",	0);
	create_insn	(x=0X7D01CBDE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CBE4,	"pool",	0);
	set_cmt	(0X7D01CBE6,	"var",	0);
	create_insn	(x=0X7D01CBE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01CBEC,	"pool",	0);
	set_cmt	(0X7D01CBEE,	"var",	0);
	create_insn	(x=0X7D01CBEE);
	op_stkvar	(x,	1);
	make_array	(0X7D01CBFA,	0X2);
	create_dword	(x=0X7D01CBFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D01CC00,	"fmt",	0);
	create_insn	(0X7D01CC00);
	set_name	(0X7D01CC00,	"mpa_set_str");
	set_cmt	(0X7D01CC16,	"c",	0);
	create_insn	(0X7D01CC24);
	set_cmt	(0X7D01CC38,	"dest",	0);
	set_cmt	(0X7D01CC3A,	"src",	0);
	create_insn	(0X7D01CC42);
	create_insn	(x=0X7D01CC48);
	op_hex		(x,	1);
	set_cmt	(0X7D01CC58,	"c",	0);
	create_insn	(0X7D01CC58);
	create_insn	(0X7D01CC6A);
	create_insn	(x=0X7D01CC8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CC8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01CC9A);
	set_cmt	(0X7D01CCB6,	"c",	0);
	create_insn	(0X7D01CCC4);
	create_insn	(0X7D01CCD2);
	create_insn	(x=0X7D01CCE0);
	op_hex		(x,	1);
	create_insn	(x=0X7D01CCF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CCF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01CCFE,	"line",	0);
	set_cmt	(0X7D01CD02,	"level",	0);
	set_cmt	(0X7D01CD04,	"level_ok",	0);
	set_cmt	(0X7D01CD10,	"dest",	0);
	create_insn	(0X7D01CD10);
	set_cmt	(0X7D01CD16,	"src",	0);
	create_insn	(0X7D01CD62);
	create_insn	(x=0X7D01CD68);
	op_plain_offset	(x,	1,	0X7D05FFDC);
	op_plain_offset	(x,	129,	0X7D05FFDC);
	create_insn	(0X7D01CD86);
	create_insn	(0X7D01CD8A);
	make_array	(0X7D01CD92,	0X2);
	create_dword	(x=0X7D01CD94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01CD98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01CD9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01CDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D01CDA4,	"m",	0);
	create_insn	(x=0X7D01CDA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D01CDA4,	"malloc_lock");
	make_array	(0X7D01CDAA,	0X2);
	create_dword	(x=0X7D01CDAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D01CDB0,	"m",	0);
	create_insn	(x=0X7D01CDB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D01CDB0,	"malloc_unlock");
	make_array	(0X7D01CDB6,	0X2);
	create_dword	(x=0X7D01CDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CDBC);
	set_name	(0X7D01CDBC,	"bget");
	create_insn	(x=0X7D01CDC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CDC6);
	op_hex		(x,	1);
	create_insn	(x=0X7D01CDCA);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(0X7D01CDF0);
	create_insn	(0X7D01CE08);
	create_insn	(0X7D01CE0C);
	create_dword	(x=0X7D01CE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CE14);
	set_name	(0X7D01CE14,	"brel");
	create_insn	(x=0X7D01CE2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CE32);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(x=0X7D01CE38);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	make_array	(0X7D01CE62,	0X2);
	create_dword	(x=0X7D01CE64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CE68);
	set_name	(0X7D01CE68,	"bpool");
	create_insn	(x=0X7D01CE6A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01CE72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CE74);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(x=0X7D01CE7A);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	make_array	(0X7D01CE8E,	0X2);
	create_dword	(x=0X7D01CE90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CE94);
	set_name	(0X7D01CE94,	"memalign");
	set_cmt	(0X7D01CEB6,	"requested_size",	0);
	create_insn	(0X7D01CEC0);
	set_cmt	(0X7D01CEC4,	"requested_size",	0);
	create_insn	(0X7D01CF04);
	create_insn	(x=0X7D01CF14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CF16);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(x=0X7D01CF1C);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(x=0X7D01CF30);
	op_hex		(x,	1);
	create_insn	(0X7D01CF72);
	create_insn	(x=0X7D01CF78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01CF7A);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(x=0X7D01CF80);
	op_plain_offset	(x,	1,	0X7D04F25C);
	op_plain_offset	(x,	129,	0X7D04F25C);
	create_insn	(0X7D01CF8A);
	create_insn	(0X7D01CF8E);
	create_dword	(x=0X7D01CF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01CF9C);
	set_name	(0X7D01CF9C,	"malloc_add_pool");
	create_insn	(x=0X7D01CFA4);
	op_hex		(x,	1);
	create_insn	(x=0X7D01CFA8);
	op_hex		(x,	1);
	set_cmt	(0X7D01CFB8,	"buf",	0);
	set_cmt	(0X7D01CFBA,	"len",	0);
	set_cmt	(0X7D01CFC6,	"ptr",	0);
	set_cmt	(0X7D01CFD4,	"size",	0);
	create_insn	(0X7D01CFF6);
	make_array	(0X7D01CFFA,	0X2);
	create_dword	(x=0X7D01CFFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01D004);
	set_name	(0X7D01D004,	"malloc_buffer_is_within_alloced");
	create_insn	(0X7D01D03C);
	create_insn	(0X7D01D040);
	create_insn	(0X7D01D04C);
	create_dword	(x=0X7D01D068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D06C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01D070);
	set_name	(0X7D01D070,	"malloc_buffer_overlaps_heap");
	create_insn	(0X7D01D0A8);
	create_insn	(0X7D01D0AC);
	make_array	(0X7D01D0B6,	0X2);
	create_dword	(x=0X7D01D0B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D0BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01D0C0);
	set_name	(0X7D01D0C0,	"int64_unk1");
	create_insn	(0X7D01D0D8);
	set_name	(0X7D01D0D8,	"uint64_div");
	create_insn	(0X7D01D0F0);
	set_name	(0X7D01D0F0,	"trace_printf");
	create_insn	(x=0X7D01D100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D11E,	"size",	0);
	create_insn	(x=0X7D01D122);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D124,	"bf",	0);
	create_insn	(x=0X7D01D126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01D13E);
	set_cmt	(0X7D01D14C,	"bf",	0);
	create_insn	(x=0X7D01D14E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D160,	"bf",	0);
	create_insn	(x=0X7D01D166);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D174,	"bf",	0);
	create_insn	(x=0X7D01D17A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D17C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D194,	"ext",	0);
	create_insn	(x=0X7D01D194);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D198,	"bf",	0);
	create_insn	(x=0X7D01D19E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D1AC,	"bf",	0);
	set_cmt	(0X7D01D1B2,	"fmt",	0);
	create_insn	(x=0X7D01D1B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D1BE,	"ap",	0);
	create_insn	(x=0X7D01D1BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D1C0,	"bf",	0);
	set_cmt	(0X7D01D1C6,	"fmt",	0);
	create_insn	(x=0X7D01D1C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D1C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D1EA);
	create_dword	(x=0X7D01D1FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D20C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D21C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01D224);
	set_name	(0X7D01D224,	"kprintf");
	create_insn	(x=0X7D01D22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D23E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D242);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D260);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D274);
	create_insn	(x=0X7D01D282);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D2B8);
	op_hex		(x,	1);
	create_insn	(0X7D01D2C0);
	create_insn	(0X7D01D2D8);
	create_insn	(x=0X7D01D2EC);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D2F0);
	create_insn	(x=0X7D01D308);
	op_hex		(x,	1);
	create_insn	(0X7D01D30E);
	create_insn	(x=0X7D01D332);
	op_hex		(x,	1);
	create_insn	(0X7D01D338);
	create_insn	(x=0X7D01D34E);
	op_hex		(x,	1);
	create_insn	(0X7D01D354);
	create_insn	(0X7D01D370);
	create_insn	(0X7D01D388);
	create_insn	(0X7D01D394);
	create_insn	(x=0X7D01D39A);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D3A2);
	create_insn	(x=0X7D01D3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D3A8);
	op_hex		(x,	1);
	create_insn	(0X7D01D3AE);
	create_insn	(0X7D01D3C0);
	create_insn	(0X7D01D3CC);
	create_insn	(0X7D01D3E0);
	create_insn	(x=0X7D01D3E8);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D3EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D400);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D40E);
	create_insn	(x=0X7D01D41C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D422);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D428);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D42E);
	op_hex		(x,	1);
	create_insn	(0X7D01D434);
	create_insn	(x=0X7D01D436);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D44A);
	op_hex		(x,	1);
	create_insn	(0X7D01D462);
	create_insn	(x=0X7D01D468);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D476);
	op_hex		(x,	1);
	create_insn	(0X7D01D484);
	create_insn	(x=0X7D01D486);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D4AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D4BE);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D4C4);
	create_insn	(x=0X7D01D4C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D4D8);
	create_insn	(x=0X7D01D4E2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D4E8);
	create_insn	(x=0X7D01D4EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D4F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D4FA);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D50A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D518);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D526);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D52E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D53C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D546);
	op_hex		(x,	1);
	create_insn	(0X7D01D554);
	create_insn	(x=0X7D01D55E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D576,	"bf",	0);
	create_insn	(x=0X7D01D576);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D578,	"size",	0);
	create_insn	(x=0X7D01D584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D598);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D5BE);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D5C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D5D6);
	create_insn	(x=0X7D01D5DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01D5E6,	"src",	0);
	set_cmt	(0X7D01D5EA,	"length",	0);
	set_cmt	(0X7D01D5EC,	"c",	0);
	create_insn	(x=0X7D01D5EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D5FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D60E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D61A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D61E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D622);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D62A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D63A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D648);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D656);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D65E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D66C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D676);
	op_hex		(x,	1);
	create_insn	(0X7D01D688);
	create_insn	(x=0X7D01D694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D696);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D69A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01D69C);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D6B2);
	create_insn	(x=0X7D01D6B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D6C6);
	op_hex		(x,	1);
	create_insn	(0X7D01D6D8);
	create_insn	(x=0X7D01D6DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D6EA);
	op_hex		(x,	1);
	create_insn	(0X7D01D6F0);
	create_insn	(0X7D01D6F4);
	create_insn	(0X7D01D6F8);
	create_insn	(x=0X7D01D704);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D722);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D724);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D728);
	create_insn	(x=0X7D01D72A);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D73A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D746);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D750);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D760);
	set_cmt	(0X7D01D768,	"a1",	0);
	set_cmt	(0X7D01D76A,	"a2",	0);
	set_cmt	(0X7D01D76C,	"a3",	0);
	set_cmt	(0X7D01D76E,	"a4",	0);
	create_insn	(x=0X7D01D770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D778);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D77C,	"a2",	0);
	set_cmt	(0X7D01D782,	"a4",	0);
	create_insn	(x=0X7D01D784);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01D786,	"a3",	0);
	set_cmt	(0X7D01D788,	"a1",	0);
	create_insn	(x=0X7D01D792);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D798);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D7AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D01D7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D7CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D7D6);
	create_insn	(x=0X7D01D7E2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D7FE);
	create_insn	(x=0X7D01D804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D806);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D826);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D83C);
	create_insn	(x=0X7D01D84E);
	op_stkvar	(x,	1);
	make_array	(0X7D01D85E,	0X2);
	create_dword	(x=0X7D01D860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D01D868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D01D868,	"src");
	create_dword	(x=0X7D01D86C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D01D870);
	create_insn	(x=0X7D01D87A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D8B0);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D8C2);
	create_insn	(x=0X7D01D8D2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D8E4);
	create_insn	(x=0X7D01D8F0);
	op_stkvar	(x,	1);
	create_insn	(0X7D01D904);
	create_insn	(x=0X7D01D90A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D92E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D932);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D936);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D93E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D94A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01D94E);
	op_stkvar	(x,	1);
	make_array	(0X7D01D956,	0X2);
	create_insn	(0X7D01D958);
	set_name	(0X7D01D958,	"SaSi_LibInit");
	create_insn	(0X7D01D982);
	create_insn	(0X7D01D9C0);
	create_insn	(0X7D01D9C4);
	create_insn	(0X7D01D9EC);
	create_insn	(0X7D01D9F6);
	create_insn	(x=0X7D01DA0E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01DA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01DA32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01DA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01DA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01DA64);
	op_stkvar	(x,	1);
	create_insn	(0X7D01DA7A);
	set_cmt	(0X7D01DA7C,	"aTimeOut",	0);
	set_cmt	(0X7D01DA84,	"pMutexId",	0);
	set_cmt	(0X7D01DA98,	"pMutexId",	0);
	set_cmt	(0X7D01DAB0,	"rndWorkBuff_ptr",	0);
	set_cmt	(0X7D01DAB2,	"rndContext_ptr",	0);
	set_cmt	(0X7D01DADA,	"rndState_ptr",	0);
	create_insn	(0X7D01DADA);
	set_cmt	(0X7D01DADC,	"out_ptr",	0);
	set_cmt	(0X7D01DADE,	"outSizeBytes",	0);
	create_insn	(0X7D01DAEA);
	create_dword	(x=0X7D01DB00);
	op_plain_offset	(x,	0,	0X7D01D96E);
	op_plain_offset	(x,	128,	0X7D01D96E);
	create_dword	(0X7D01DB04);
	create_dword	(0X7D01DB08);
	create_dword	(0X7D01DB0C);
	create_insn	(0X7D01DB10);
	set_name	(0X7D01DB10,	"SaSi_LibFini");
	make_array	(0X7D01DB2A,	0X2);
	create_insn	(0X7D01DB2C);
	set_name	(0X7D01DB2C,	"SaSi_HalInit");
	create_insn	(x=0X7D01DB34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01DB36,	"mapSize",	0);
	create_insn	(x=0X7D01DB4E);
	op_stkvar	(x,	1);
	make_array	(0X7D01DB5A,	0X2);
	create_dword	(x=0X7D01DB5C);
	op_plain_offset	(x,	0,	0X7D01DB50);
	op_plain_offset	(x,	128,	0X7D01DB50);
	create_dword	(0X7D01DB60);
	create_insn	(0X7D01DB64);
	set_name	(0X7D01DB64,	"SaSi_HalTerminate");
	set_cmt	(0X7D01DB66,	"mapSize",	0);
	set_cmt	(0X7D01DB72,	"pVirtBuffAddr",	0);
	make_array	(0X7D01DB7E,	0X2);
	create_dword	(x=0X7D01DB80);
	op_plain_offset	(x,	0,	0X7D01DB72);
	op_plain_offset	(x,	128,	0X7D01DB72);
	create_dword	(0X7D01DB84);
	create_insn	(0X7D01DB88);
	set_name	(0X7D01DB88,	"SaSi_HalWaitInterrupt");
	set_cmt	(0X7D01DB8E,	"R3 = gCcRegBase",	1);
	create_dword	(x=0X7D01DBA4);
	op_plain_offset	(x,	0,	0X7D01DB90);
	op_plain_offset	(x,	128,	0X7D01DB90);
	create_dword	(0X7D01DBA8);
	create_insn	(0X7D01DBAC);
	create_dword	(x=0X7D01DBC0);
	op_plain_offset	(x,	0,	0X7D01DBB8);
	op_plain_offset	(x,	128,	0X7D01DBB8);
	create_dword	(0X7D01DBC4);
	create_insn	(0X7D01DBC8);
	create_insn	(x=0X7D01DBDC);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DBE0);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DBE4);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DBE6);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DBE8);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_dword	(x=0X7D01DBFC);
	op_plain_offset	(x,	0,	0X7D01DBD8);
	op_plain_offset	(x,	128,	0X7D01DBD8);
	create_dword	(x=0X7D01DC00);
	op_plain_offset	(x,	0,	0X7D01DBE6);
	op_plain_offset	(x,	128,	0X7D01DBE6);
	create_dword	(0X7D01DC04);
	create_insn	(0X7D01DC08);
	create_insn	(x=0X7D01DC0E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01DC16);
	op_hex		(x,	1);
	create_insn	(x=0X7D01DC26);
	op_hex		(x,	1);
	create_dword	(x=0X7D01DC38);
	op_plain_offset	(x,	0,	0X7D01DC1E);
	op_plain_offset	(x,	128,	0X7D01DC1E);
	create_insn	(0X7D01DC3C);
	create_insn	(x=0X7D01DC4C);
	op_hex		(x,	1);
	create_insn	(x=0X7D01DC56);
	op_hex		(x,	1);
	create_dword	(x=0X7D01DC6C);
	op_plain_offset	(x,	0,	0X7D01DC44);
	op_plain_offset	(x,	128,	0X7D01DC44);
	create_insn	(0X7D01DC70);
	create_insn	(x=0X7D01DC96);
	op_hex		(x,	1);
	create_insn	(x=0X7D01DCA2);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCAA);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCAE);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCC4);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCC6);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCCC);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCD2);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCD4);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCDA);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCDE);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DCE0);
	op_hex		(x,	1);
	create_insn	(0X7D01DCEC);
	create_insn	(0X7D01DCF0);
	make_array	(0X7D01DD0A,	0X2);
	create_dword	(x=0X7D01DD0C);
	op_plain_offset	(x,	0,	0X7D01DC7E);
	op_plain_offset	(x,	128,	0X7D01DC7E);
	create_dword	(0X7D01DD10);
	create_dword	(x=0X7D01DD14);
	op_plain_offset	(x,	0,	0X7D01DC88);
	op_plain_offset	(x,	128,	0X7D01DC88);
	create_dword	(x=0X7D01DD18);
	op_plain_offset	(x,	0,	0X7D01DC8A);
	op_plain_offset	(x,	128,	0X7D01DC8A);
	create_insn	(0X7D01DD1C);
	create_insn	(x=0X7D01DD2C);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_insn	(x=0X7D01DD30);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	set_cmt	(0X7D01DD84,	"data",	0);
	create_dword	(x=0X7D01DD94);
	op_plain_offset	(x,	0,	0X7D01DD2A);
	op_plain_offset	(x,	128,	0X7D01DD2A);
	create_dword	(0X7D01DD98);
	create_dword	(x=0X7D01DD9C);
	op_plain_offset	(x,	0,	0X7D01DD2E);
	op_plain_offset	(x,	128,	0X7D01DD2E);
	create_dword	(0X7D01DDA0);
	create_insn	(0X7D01DDA4);
	set_cmt	(0X7D01DDA6,	"aSize",	0);
	create_insn	(x=0X7D01DDB8);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	make_array	(0X7D01DDC6,	0X2);
	create_dword	(x=0X7D01DDC8);
	op_plain_offset	(x,	0,	0X7D01DDAE);
	op_plain_offset	(x,	128,	0X7D01DDAE);
	create_insn	(0X7D01DDCC);
	set_cmt	(0X7D01DDCE,	"ptr",	0);
	create_insn	(x=0X7D01DDCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01DDD2);
	op_plain_offset	(x,	1,	0X7D04FEA0);
	op_plain_offset	(x,	129,	0X7D04FEA0);
	create_dword	(x=0X7D01DDD8);
	op_plain_offset	(x,	0,	0X7D01DDD4);
	op_plain_offset	(x,	128,	0X7D01DDD4);
	create_insn	(0X7D01DDDC);
	make_array	(0X7D01DDE6,	0X2);
	set_cmt	(0X7D01DDE8,	"data",	0);
	create_insn	(0X7D01DDE8);
	make_array	(0X7D01DDEE,	0X2);
	create_insn	(0X7D01DDF0);
	set_name	(0X7D01DDF0,	"SaSi_PalInit");
	set_cmt	(0X7D01DDF8,	"pMutexId",	0);
	set_cmt	(0X7D01DE00,	"pMutexId",	0);
	set_cmt	(0X7D01DE0A,	"pMutexId",	0);
	set_cmt	(0X7D01DE18,	"pMutexId",	0);
	make_array	(0X7D01DE22,	0X2);
	create_dword	(x=0X7D01DE24);
	op_plain_offset	(x,	0,	0X7D01DDFA);
	op_plain_offset	(x,	128,	0X7D01DDFA);
	create_dword	(0X7D01DE28);
	create_dword	(0X7D01DE2C);
	create_dword	(0X7D01DE30);
	create_dword	(0X7D01DE34);
	create_dword	(0X7D01DE38);
	create_insn	(0X7D01DE3C);
	set_name	(0X7D01DE3C,	"SaSi_PalTerminate");
	set_cmt	(0X7D01DE40,	"len",	0);
	create_insn	(0X7D01DE40);
	set_name	(0X7D01DE40,	"cache_area_clean");
	set_cmt	(0X7D01DE42,	"va",	0);
	set_cmt	(0X7D01DE44,	"op",	0);
	make_array	(0X7D01DE4A,	0X2);
	set_cmt	(0X7D01DE4C,	"len",	0);
	create_insn	(0X7D01DE4C);
	set_name	(0X7D01DE4C,	"cache_area_invalidate");
	set_cmt	(0X7D01DE4E,	"va",	0);
	set_cmt	(0X7D01DE50,	"op",	0);
	make_array	(0X7D01DE56,	0X2);
	create_insn	(0X7D01DE58);
	set_name	(0X7D01DE58,	"SaSi_PalDmaInit");
	create_insn	(0X7D01DE5C);
	set_name	(0X7D01DE5C,	"SaSi_PalDmaTerminate");
	make_array	(0X7D01DE5E,	0X2);
	create_insn	(0X7D01DE60);
	create_insn	(x=0X7D01DE62);
	op_stkvar	(x,	1);
	make_array	(0X7D01DE92,	0X2);
	create_insn	(0X7D01DE94);
	set_name	(0X7D01DE94,	"mem_area_invalidate");
	make_array	(0X7D01DE9E,	0X2);
	create_insn	(0X7D01DEA0);
	set_name	(0X7D01DEA0,	"SaSi_PalMemMalloc");
	make_array	(0X7D01DEAE,	0X2);
	create_insn	(0X7D01DEB0);
	set_name	(0X7D01DEB0,	"SaSi_PalMemFree");
	set_cmt	(0X7D01DEB2,	"ptr",	0);
	create_insn	(0X7D01DEBE);
	make_array	(0X7D01DEC2,	0X2);
	create_insn	(0X7D01DEC4);
	set_name	(0X7D01DEC4,	"SaSi_UnknRet1");
	create_insn	(0X7D01DEC8);
	set_name	(0X7D01DEC8,	"SaSi_UnknRet0");
	create_insn	(0X7D01DECC);
	set_name	(0X7D01DECC,	"SaSi_PalMemMap");
	set_cmt	(0X7D01DECE,	"m",	0);
	create_insn	(0X7D01DEDC);
	set_name	(0X7D01DEDC,	"SaSi_PalMemUnMap");
	create_insn	(0X7D01DEE0);
	set_name	(0X7D01DEE0,	"SaSi_PalMutexCreate");
	make_array	(0X7D01DEEA,	0X2);
	create_insn	(0X7D01DEEC);
	set_name	(0X7D01DEEC,	"SaSi_PalMutexDestroy");
	make_array	(0X7D01DEF6,	0X2);
	create_insn	(0X7D01DEF8);
	set_name	(0X7D01DEF8,	"SaSi_PalMutexLock");
	make_array	(0X7D01DF02,	0X2);
	create_insn	(0X7D01DF04);
	set_name	(0X7D01DF04,	"SaSi_PalMutexUnlock");
	make_array	(0X7D01DF0E,	0X2);
	create_insn	(0X7D01DF10);
	set_name	(0X7D01DF10,	"SaSi_nullsub_5");
	make_array	(0X7D01DF12,	0X2);
	create_insn	(0X7D01DF14);
	set_name	(0X7D01DF14,	"SaSi_nullsub_6");
	make_array	(0X7D01DF16,	0X2);
	create_insn	(0X7D01DF18);
	set_name	(0X7D01DF18,	"SaSi_AesInit");
	create_insn	(0X7D01DF26);
	create_insn	(0X7D01DF32);
	create_insn	(0X7D01DF38);
	create_insn	(0X7D01DF44);
	create_insn	(x=0X7D01DF4E);
	op_hex		(x,	1);
	create_insn	(0X7D01DF5E);
	set_cmt	(0X7D01DF70,	"userContext_buff",	0);
	create_insn	(x=0X7D01DF70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01DF7A);
	set_cmt	(0X7D01DF7E,	"a3",	0);
	set_cmt	(0X7D01DF82,	"a2",	0);
	create_insn	(0X7D01DFB8);
	create_dword	(x=0X7D01DFC0);
	op_plain_offset	(x,	0,	0X7D01DFAA);
	op_plain_offset	(x,	128,	0X7D01DFAA);
	create_insn	(0X7D01DFC4);
	set_name	(0X7D01DFC4,	"SaSi_AesSetKey");
	create_insn	(x=0X7D01E000);
	op_hex		(x,	1);
	create_insn	(0X7D01E012);
	create_insn	(0X7D01E022);
	create_insn	(0X7D01E02A);
	create_insn	(0X7D01E042);
	create_insn	(0X7D01E058);
	create_insn	(x=0X7D01E060);
	op_hex		(x,	1);
	set_cmt	(0X7D01E06E,	"ptr2",	0);
	set_cmt	(0X7D01E078,	"ptr1",	0);
	set_cmt	(0X7D01E07C,	"len",	0);
	set_cmt	(0X7D01E088,	"len",	0);
	set_cmt	(0X7D01E08A,	"ptr1",	0);
	set_cmt	(0X7D01E08E,	"ptr2",	0);
	create_insn	(0X7D01E0B0);
	create_insn	(0X7D01E0B4);
	create_insn	(x=0X7D01E0C2);
	op_hex		(x,	1);
	create_insn	(0X7D01E0D8);
	create_insn	(0X7D01E0E2);
	create_insn	(0X7D01E0EA);
	set_cmt	(0X7D01E0F2,	"ptr2",	0);
	set_cmt	(0X7D01E0FE,	"ptr1",	0);
	set_cmt	(0X7D01E106,	"len",	0);
	set_cmt	(0X7D01E110,	"m1",	0);
	create_insn	(0X7D01E110);
	set_cmt	(0X7D01E114,	"n",	0);
	set_cmt	(0X7D01E116,	"m2",	0);
	set_cmt	(0X7D01E12A,	"m1",	0);
	create_insn	(0X7D01E12A);
	set_cmt	(0X7D01E12E,	"n",	0);
	set_cmt	(0X7D01E130,	"m2",	0);
	create_insn	(0X7D01E13C);
	make_array	(0X7D01E146,	0X2);
	create_dword	(x=0X7D01E148);
	op_plain_offset	(x,	0,	0X7D01DFCE);
	op_plain_offset	(x,	128,	0X7D01DFCE);
	create_dword	(x=0X7D01E14C);
	op_plain_offset	(x,	0,	0X7D01DFE4);
	op_plain_offset	(x,	128,	0X7D01DFE4);
	create_dword	(0X7D01E150);
	create_dword	(x=0X7D01E154);
	op_plain_offset	(x,	0,	0X7D01E0A8);
	op_plain_offset	(x,	128,	0X7D01E0A8);
	create_insn	(0X7D01E158);
	set_name	(0X7D01E158,	"SaSi_AesSetIv");
	create_insn	(x=0X7D01E17A);
	op_hex		(x,	1);
	create_insn	(0X7D01E188);
	set_cmt	(0X7D01E18A,	"ptr2",	0);
	set_cmt	(0X7D01E18C,	"len",	0);
	set_cmt	(0X7D01E18E,	"ptr1",	0);
	create_insn	(0X7D01E198);
	create_insn	(0X7D01E19E);
	make_array	(0X7D01E1A6,	0X2);
	create_insn	(0X7D01E1A8);
	set_name	(0X7D01E1A8,	"SaSi_AesGetIv");
	create_insn	(x=0X7D01E1CA);
	op_hex		(x,	1);
	create_insn	(0X7D01E1D8);
	set_cmt	(0X7D01E1DA,	"ptr2",	0);
	set_cmt	(0X7D01E1DE,	"len",	0);
	set_cmt	(0X7D01E1E0,	"ptr1",	0);
	create_insn	(0X7D01E1EA);
	create_insn	(0X7D01E1F0);
	create_insn	(0X7D01E1F8);
	set_name	(0X7D01E1F8,	"SaSi_AesBlock");
	create_insn	(0X7D01E212);
	create_insn	(0X7D01E218);
	create_insn	(0X7D01E220);
	create_insn	(x=0X7D01E230);
	op_hex		(x,	1);
	set_cmt	(0X7D01E23E,	"DataInSize",	0);
	set_cmt	(0X7D01E240,	"a3",	0);
	set_cmt	(0X7D01E242,	"DataIn_ptr1",	0);
	create_insn	(0X7D01E25C);
	create_insn	(0X7D01E260);
	create_insn	(0X7D01E262);
	create_insn	(x=0X7D01E276);
	op_hex		(x,	1);
	create_insn	(x=0X7D01E27A);
	op_hex		(x,	1);
	create_insn	(0X7D01E282);
	create_insn	(0X7D01E288);
	create_insn	(0X7D01E290);
	create_dword	(x=0X7D01E294);
	op_plain_offset	(x,	0,	0X7D01E256);
	op_plain_offset	(x,	128,	0X7D01E256);
	create_insn	(0X7D01E298);
	set_name	(0X7D01E298,	"SaSi_AesFinish");
	create_insn	(x=0X7D01E2AC);
	op_hex		(x,	1);
	create_insn	(0X7D01E2C2);
	set_cmt	(0X7D01E2D2,	"userContext_buff",	0);
	create_insn	(x=0X7D01E2D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01E2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E2DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E2E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E2E8);
	op_hex		(x,	1);
	create_insn	(x=0X7D01E2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E2FC);
	op_hex		(x,	1);
	create_insn	(0X7D01E30A);
	create_insn	(0X7D01E312);
	create_insn	(x=0X7D01E316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E326);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E32E);
	op_hex		(x,	1);
	create_insn	(x=0X7D01E354);
	op_hex		(x,	1);
	create_insn	(0X7D01E364);
	set_cmt	(0X7D01E37C,	"kinbuf",	0);
	set_cmt	(0X7D01E37E,	"kinbuf_len",	0);
	set_cmt	(0X7D01E380,	"outbuf",	0);
	create_insn	(x=0X7D01E380);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E382,	"ctx2",	0);
	create_insn	(0X7D01E3A2);
	create_insn	(0X7D01E3B4);
	create_insn	(x=0X7D01E3C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D01E3CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E3F2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01E416);
	set_cmt	(0X7D01E418,	"kinbuf",	0);
	set_cmt	(0X7D01E41E,	"ctx2",	0);
	set_cmt	(0X7D01E420,	"kinbuf_len",	0);
	set_cmt	(0X7D01E422,	"outbuf",	0);
	create_insn	(x=0X7D01E422);
	op_stkvar	(x,	1);
	create_insn	(0X7D01E42E);
	create_insn	(x=0X7D01E436);
	op_stkvar	(x,	1);
	create_insn	(0X7D01E450);
	create_insn	(0X7D01E458);
	create_insn	(0X7D01E46C);
	create_dword	(x=0X7D01E474);
	op_plain_offset	(x,	0,	0X7D01E39C);
	op_plain_offset	(x,	128,	0X7D01E39C);
	create_insn	(0X7D01E478);
	create_insn	(0X7D01E48E);
	create_insn	(0X7D01E494);
	set_name	(0X7D01E494,	"CRYS_HASH_Init");
	set_cmt	(0X7D01E4A4,	"userContext_buff",	0);
	create_insn	(x=0X7D01E4A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01E4AE);
	set_cmt	(0X7D01E4B0,	"a3",	0);
	set_cmt	(0X7D01E4B6,	"a2",	0);
	set_cmt	(0X7D01E4C4,	"switch 5 cases ",	0);
	set_cmt	(0X7D01E4D0,	"switch jump",	0);
	set_cmt	(0X7D01E4D4,	"jump table for switch statement",	0);
	create_byte	(0X7D01E4D4);
	set_name	(0X7D01E4D4,	"jpt_7D01E4D0");
	create_byte	(0X7D01E4D5);
	create_byte	(0X7D01E4D6);
	create_byte	(0X7D01E4D7);
	create_byte	(0X7D01E4D8);
	set_cmt	(0X7D01E4DA,	"jumptable 7D01E4D0 case 4",	1);
	create_insn	(0X7D01E4DA);
	set_cmt	(0X7D01E4F4,	"jumptable 7D01E4D0 case 3",	1);
	create_insn	(0X7D01E4F4);
	set_cmt	(0X7D01E4FA,	"jumptable 7D01E4D0 case 2",	1);
	create_insn	(0X7D01E4FA);
	set_cmt	(0X7D01E500,	"jumptable 7D01E4D0 case 1",	1);
	create_insn	(0X7D01E500);
	set_cmt	(0X7D01E506,	"jumptable 7D01E4D0 default case",	1);
	create_insn	(0X7D01E506);
	set_name	(0X7D01E506,	"def_7D01E4D0");
	create_insn	(0X7D01E50C);
	create_insn	(0X7D01E512);
	set_cmt	(0X7D01E51C,	"jumptable 7D01E4D0 case 5",	1);
	create_insn	(0X7D01E51C);
	make_array	(0X7D01E522,	0X2);
	create_dword	(x=0X7D01E524);
	op_plain_offset	(x,	0,	0X7D01E4F0);
	op_plain_offset	(x,	128,	0X7D01E4F0);
	create_insn	(0X7D01E528);
	set_name	(0X7D01E528,	"CRYS_HASH_Update");
	create_insn	(0X7D01E54A);
	create_insn	(0X7D01E54E);
	create_insn	(0X7D01E558);
	set_cmt	(0X7D01E560,	"a1",	0);
	create_insn	(0X7D01E562);
	set_cmt	(0X7D01E564,	"a1",	0);
	set_cmt	(0X7D01E570,	"a2",	0);
	set_cmt	(0X7D01E578,	"a3",	0);
	set_cmt	(0X7D01E57A,	"DataInSize",	0);
	set_cmt	(0X7D01E57C,	"DataIn_ptr1",	0);
	set_cmt	(0X7D01E57E,	"a1",	0);
	create_insn	(0X7D01E596);
	set_cmt	(0X7D01E598,	"kinbuf_len",	0);
	set_cmt	(0X7D01E59E,	"outbuf",	0);
	set_cmt	(0X7D01E5A0,	"kinbuf",	0);
	set_cmt	(0X7D01E5A2,	"ctx2",	0);
	create_insn	(0X7D01E5BA);
	create_insn	(0X7D01E5BE);
	create_dword	(x=0X7D01E5C4);
	op_plain_offset	(x,	0,	0X7D01E592);
	op_plain_offset	(x,	128,	0X7D01E592);
	create_dword	(x=0X7D01E5C8);
	op_plain_offset	(x,	0,	0X7D01E5B6);
	op_plain_offset	(x,	128,	0X7D01E5B6);
	create_insn	(0X7D01E5CC);
	set_name	(0X7D01E5CC,	"CRYS_HASH_Finish");
	set_cmt	(0X7D01E5DA,	"kinbuf_len",	0);
	set_cmt	(0X7D01E5E0,	"outbuf",	0);
	set_cmt	(0X7D01E5E2,	"kinbuf",	0);
	create_insn	(0X7D01E5F6);
	set_cmt	(0X7D01E600,	"ptr2",	0);
	create_insn	(0X7D01E600);
	set_cmt	(0X7D01E604,	"ptr1",	0);
	set_cmt	(0X7D01E606,	"len",	0);
	create_insn	(0X7D01E610);
	create_insn	(0X7D01E61A);
	create_dword	(x=0X7D01E624);
	op_plain_offset	(x,	0,	0X7D01E620);
	op_plain_offset	(x,	128,	0X7D01E620);
	create_insn	(0X7D01E628);
	set_name	(0X7D01E628,	"CRYS_HASH_Free");
	create_insn	(0X7D01E63A);
	create_insn	(0X7D01E644);
	set_name	(0X7D01E644,	"CRYS_HASH");
	create_insn	(x=0X7D01E64C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E650,	"OperationMode",	0);
	set_cmt	(0X7D01E652,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E660,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E670,	"DataInSize",	0);
	create_insn	(0X7D01E670);
	set_cmt	(0X7D01E672,	"DataIn_ptr",	0);
	set_cmt	(0X7D01E674,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E680,	"HashResultBuff",	0);
	set_cmt	(0X7D01E682,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E68A,	"ContextID_ptr",	0);
	make_array	(0X7D01E69A,	0X2);
	create_insn	(0X7D01E69C);
	create_insn	(0X7D01E6AA);
	create_dword	(x=0X7D01E6B0);
	op_plain_offset	(x,	0,	0X7D01E6A6);
	op_plain_offset	(x,	128,	0X7D01E6A6);
	create_insn	(0X7D01E6B4);
	set_name	(0X7D01E6B4,	"CRYS_HMAC_Init");
	set_cmt	(0X7D01E6BC,	"switch 6 cases ",	0);
	set_cmt	(0X7D01E6C0,	"switch jump",	0);
	set_cmt	(0X7D01E6C4,	"jump table for switch statement",	0);
	create_byte	(0X7D01E6C4);
	set_name	(0X7D01E6C4,	"jpt_7D01E6C0");
	create_byte	(0X7D01E6C5);
	create_byte	(0X7D01E6C6);
	create_byte	(0X7D01E6C7);
	create_byte	(0X7D01E6C8);
	create_byte	(0X7D01E6C9);
	set_cmt	(0X7D01E6CA,	"jumptable 7D01E6C0 cases 0-2,5",	1);
	create_insn	(0X7D01E6CA);
	create_insn	(0X7D01E6DA);
	set_cmt	(0X7D01E6E4,	"jumptable 7D01E6C0 cases 3,4",	1);
	create_insn	(0X7D01E6E4);
	set_cmt	(0X7D01E6E8,	"userContext_buff",	0);
	create_insn	(x=0X7D01E6E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01E6F2);
	set_cmt	(0X7D01E6F6,	"a3",	0);
	set_cmt	(0X7D01E6FA,	"a2",	0);
	set_cmt	(0X7D01E732,	"DataSize",	0);
	set_cmt	(0X7D01E734,	"DataIn_ptr",	0);
	set_cmt	(0X7D01E736,	"HashResultBuff",	0);
	set_cmt	(0X7D01E73A,	"OperationMode",	0);
	set_cmt	(0X7D01E742,	"switch 6 cases ",	0);
	set_cmt	(0X7D01E746,	"switch jump",	0);
	set_cmt	(0X7D01E74A,	"jump table for switch statement",	0);
	create_byte	(0X7D01E74A);
	set_name	(0X7D01E74A,	"jpt_7D01E746");
	create_byte	(0X7D01E74B);
	create_byte	(0X7D01E74C);
	create_byte	(0X7D01E74D);
	create_byte	(0X7D01E74E);
	create_byte	(0X7D01E74F);
	create_insn	(0X7D01E750);
	set_cmt	(0X7D01E75C,	"jumptable 7D01E746 case 0",	1);
	create_insn	(0X7D01E75C);
	set_cmt	(0X7D01E780,	"jumptable 7D01E746 case 1",	1);
	create_insn	(0X7D01E780);
	set_cmt	(0X7D01E786,	"jumptable 7D01E746 case 5",	1);
	create_insn	(0X7D01E786);
	set_cmt	(0X7D01E78C,	"jumptable 7D01E746 case 4",	1);
	create_insn	(0X7D01E78C);
	set_cmt	(0X7D01E792,	"jumptable 7D01E746 case 3",	1);
	create_insn	(0X7D01E792);
	set_cmt	(0X7D01E798,	"jumptable 7D01E746 case 2",	1);
	create_insn	(0X7D01E798);
	create_insn	(0X7D01E79E);
	set_cmt	(0X7D01E7A4,	"ptr2",	0);
	create_insn	(0X7D01E7A4);
	set_cmt	(0X7D01E7A6,	"len",	0);
	set_cmt	(0X7D01E7A8,	"ptr1",	0);
	create_insn	(0X7D01E7B2);
	set_cmt	(0X7D01E7BA,	"jumptable 7D01E6C0 default case",	1);
	create_insn	(0X7D01E7BA);
	set_name	(0X7D01E7BA,	"def_7D01E746");
	make_array	(0X7D01E7C6,	0X2);
	create_dword	(x=0X7D01E7C8);
	op_plain_offset	(x,	0,	0X7D01E71E);
	op_plain_offset	(x,	128,	0X7D01E71E);
	create_dword	(x=0X7D01E7CC);
	op_plain_offset	(x,	0,	0X7D01E778);
	op_plain_offset	(x,	128,	0X7D01E778);
	create_insn	(0X7D01E7D0);
	create_insn	(0X7D01E7EC);
	set_cmt	(0X7D01E7F2,	"userContext_buff",	0);
	create_insn	(x=0X7D01E7F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01E7FC,	"a1",	0);
	create_insn	(0X7D01E7FC);
	create_insn	(0X7D01E818);
	set_cmt	(0X7D01E828,	"a2",	0);
	set_cmt	(0X7D01E82A,	"a1",	0);
	set_cmt	(0X7D01E832,	"a3",	0);
	set_cmt	(0X7D01E834,	"DataInSize",	0);
	set_cmt	(0X7D01E836,	"DataIn_ptr1",	0);
	set_cmt	(0X7D01E838,	"a1",	0);
	create_insn	(0X7D01E852);
	set_cmt	(0X7D01E854,	"kinbuf_len",	0);
	set_cmt	(0X7D01E85A,	"kinbuf",	0);
	set_cmt	(0X7D01E85C,	"ctx2",	0);
	set_cmt	(0X7D01E85E,	"outbuf",	0);
	create_insn	(0X7D01E878);
	create_insn	(0X7D01E87C);
	make_array	(0X7D01E882,	0X2);
	create_dword	(x=0X7D01E884);
	op_plain_offset	(x,	0,	0X7D01E84C);
	op_plain_offset	(x,	128,	0X7D01E84C);
	create_dword	(x=0X7D01E888);
	op_plain_offset	(x,	0,	0X7D01E872);
	op_plain_offset	(x,	128,	0X7D01E872);
	create_insn	(0X7D01E88C);
	set_cmt	(0X7D01E898,	"kinbuf_len",	0);
	set_cmt	(0X7D01E8A0,	"switch 6 cases ",	0);
	set_cmt	(0X7D01E8A4,	"switch jump",	0);
	set_cmt	(0X7D01E8A8,	"jump table for switch statement",	0);
	create_byte	(0X7D01E8A8);
	set_name	(0X7D01E8A8,	"jpt_7D01E8A4");
	create_byte	(0X7D01E8A9);
	create_byte	(0X7D01E8AA);
	create_byte	(0X7D01E8AB);
	create_byte	(0X7D01E8AC);
	create_byte	(0X7D01E8AD);
	create_insn	(0X7D01E8AE);
	set_cmt	(0X7D01E8B8,	"outbuf",	0);
	create_insn	(0X7D01E8B8);
	set_cmt	(0X7D01E8BA,	"kinbuf",	0);
	set_cmt	(0X7D01E8D0,	"jumptable 7D01E8A4 case 0",	1);
	create_insn	(0X7D01E8D0);
	set_cmt	(0X7D01E8D2,	"ptr2",	0);
	set_cmt	(0X7D01E8D6,	"ptr1",	0);
	set_cmt	(0X7D01E8E0,	"jumptable 7D01E8A4 case 4",	1);
	create_insn	(0X7D01E8E0);
	set_cmt	(0X7D01E8E4,	"jumptable 7D01E8A4 case 3",	1);
	create_insn	(0X7D01E8E4);
	set_cmt	(0X7D01E8E8,	"jumptable 7D01E8A4 case 5",	1);
	create_insn	(0X7D01E8E8);
	set_cmt	(0X7D01E8EC,	"jumptable 7D01E8A4 case 2",	1);
	create_insn	(0X7D01E8EC);
	set_cmt	(0X7D01E8F0,	"jumptable 7D01E8A4 case 1",	1);
	create_insn	(0X7D01E8F0);
	create_insn	(0X7D01E8F4);
	set_cmt	(0X7D01E900,	"jumptable 7D01E8A4 default case",	1);
	create_insn	(0X7D01E900);
	set_name	(0X7D01E900,	"def_7D01E8A4");
	make_array	(0X7D01E90A,	0X2);
	create_dword	(x=0X7D01E90C);
	op_plain_offset	(x,	0,	0X7D01E8FA);
	op_plain_offset	(x,	128,	0X7D01E8FA);
	create_insn	(0X7D01E910);
	create_insn	(0X7D01E922);
	create_insn	(0X7D01E92C);
	create_insn	(x=0X7D01E932);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E936,	"keySize",	0);
	set_cmt	(0X7D01E938,	"key_ptr",	0);
	set_cmt	(0X7D01E93A,	"OperationMode",	0);
	set_cmt	(0X7D01E93C,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E94A,	"a2",	0);
	create_insn	(0X7D01E94A);
	set_cmt	(0X7D01E94C,	"a3",	0);
	create_insn	(x=0X7D01E94C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E94E,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E958,	"ContextID_ptr",	0);
	set_cmt	(0X7D01E95A,	"a2",	0);
	create_insn	(x=0X7D01E95A);
	op_stkvar	(x,	1);
	make_array	(0X7D01E966,	0X2);
	create_insn	(0X7D01E968);
	set_name	(0X7D01E968,	"crys_unknfuncE968");
	create_insn	(x=0X7D01E970);
	op_stkvar	(x,	1);
	create_insn	(0X7D01E986);
	create_insn	(0X7D01E990);
	create_insn	(x=0X7D01E996);
	op_hex		(x,	1);
	create_insn	(0X7D01E9A8);
	create_insn	(x=0X7D01E9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E9D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E9D8,	"userContext_buff",	0);
	set_cmt	(0X7D01E9DA,	"a3",	0);
	set_cmt	(0X7D01E9DE,	"a2",	0);
	create_insn	(x=0X7D01E9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01E9F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01E9FA,	"ptr2",	0);
	set_cmt	(0X7D01E9FE,	"ptr1",	0);
	create_insn	(x=0X7D01EA04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EA0C,	"ptr2",	0);
	create_insn	(x=0X7D01EA0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EA0E,	"len",	0);
	set_cmt	(0X7D01EA10,	"ptr1",	0);
	create_insn	(0X7D01EA36);
	create_insn	(0X7D01EA40);
	set_cmt	(0X7D01EA44,	"m1",	0);
	set_cmt	(0X7D01EA46,	"n",	0);
	set_cmt	(0X7D01EA48,	"m2",	0);
	create_insn	(0X7D01EA5A);
	create_insn	(0X7D01EA64);
	set_cmt	(0X7D01EA68,	"n",	0);
	set_cmt	(0X7D01EA6A,	"m2",	0);
	set_cmt	(0X7D01EA6C,	"m1",	0);
	set_cmt	(0X7D01EA80,	"n",	0);
	create_insn	(0X7D01EA80);
	set_cmt	(0X7D01EA82,	"m2",	0);
	set_cmt	(0X7D01EA84,	"m1",	0);
	set_cmt	(0X7D01EA8E,	"m1",	0);
	set_cmt	(0X7D01EA90,	"n",	0);
	set_cmt	(0X7D01EA92,	"m2",	0);
	set_cmt	(0X7D01EAA6,	"n",	0);
	set_cmt	(0X7D01EAA8,	"m1",	0);
	set_cmt	(0X7D01EAAA,	"m2",	0);
	create_insn	(x=0X7D01EABA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EAC2,	"ptr1",	0);
	set_cmt	(0X7D01EAC8,	"ptr2",	0);
	create_insn	(0X7D01EAD2);
	create_dword	(x=0X7D01EAD8);
	op_plain_offset	(x,	0,	0X7D01EA2E);
	op_plain_offset	(x,	128,	0X7D01EA2E);
	create_dword	(x=0X7D01EADC);
	op_plain_offset	(x,	0,	0X7D01EA80);
	op_plain_offset	(x,	128,	0X7D01EA80);
	create_insn	(0X7D01EAE0);
	create_insn	(x=0X7D01EAE8);
	op_hex		(x,	1);
	create_insn	(x=0X7D01EAFA);
	op_hex		(x,	1);
	create_insn	(0X7D01EB0A);
	create_insn	(0X7D01EB14);
	set_cmt	(0X7D01EB1E,	"userContext_buff",	0);
	create_insn	(x=0X7D01EB1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01EB28);
	set_cmt	(0X7D01EB32,	"DataInSize",	0);
	set_cmt	(0X7D01EB34,	"a3",	0);
	set_cmt	(0X7D01EB36,	"DataIn_ptr1",	0);
	create_insn	(0X7D01EB52);
	create_dword	(x=0X7D01EB58);
	op_plain_offset	(x,	0,	0X7D01EB4A);
	op_plain_offset	(x,	128,	0X7D01EB4A);
	create_insn	(0X7D01EB5C);
	create_insn	(0X7D01EB6E);
	create_insn	(0X7D01EB78);
	create_insn	(x=0X7D01EB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EB80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EB92,	"a5",	0);
	create_insn	(x=0X7D01EB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EB96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EB9C,	"a4",	0);
	set_cmt	(0X7D01EB9E,	"a3",	0);
	set_cmt	(0X7D01EBA0,	"a2",	0);
	set_cmt	(0X7D01EBA2,	"a1",	0);
	set_cmt	(0X7D01EBAE,	"a3",	0);
	set_cmt	(0X7D01EBB0,	"a4",	0);
	create_insn	(x=0X7D01EBB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EBB2,	"a2",	0);
	create_insn	(x=0X7D01EBB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EBB4,	"ContextID_ptr",	0);
	make_array	(0X7D01EBCA,	0X2);
	create_insn	(0X7D01EBCC);
	create_insn	(x=0X7D01EBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EBDA);
	op_stkvar	(x,	1);
	create_insn	(0X7D01EBFA);
	set_cmt	(0X7D01EC06,	"userContext_buff",	0);
	create_insn	(x=0X7D01EC06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01EC12);
	create_insn	(x=0X7D01EC1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EC40);
	op_hex		(x,	1);
	set_cmt	(0X7D01EC6A,	"a3",	0);
	set_cmt	(0X7D01EC6E,	"a2",	0);
	set_cmt	(0X7D01EC84,	"len",	0);
	set_cmt	(0X7D01EC86,	"ptr2",	0);
	set_cmt	(0X7D01EC8E,	"ptr1",	0);
	create_insn	(x=0X7D01EC9E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01ECA0,	"len",	0);
	set_cmt	(0X7D01ECA4,	"ptr1",	0);
	set_cmt	(0X7D01ECA8,	"ptr2",	0);
	create_insn	(x=0X7D01ECA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ECB0);
	op_stkvar	(x,	1);
	create_insn	(0X7D01ECD0);
	create_insn	(0X7D01ECD8);
	create_insn	(0X7D01ECE4);
	create_insn	(0X7D01ECE8);
	create_dword	(x=0X7D01ECEC);
	op_plain_offset	(x,	0,	0X7D01ECCA);
	op_plain_offset	(x,	128,	0X7D01ECCA);
	create_insn	(0X7D01ECF0);
	create_insn	(x=0X7D01ECF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ECFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ECFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ECFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01ED1A,	"userContext_buff",	0);
	create_insn	(x=0X7D01ED1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01ED28);
	create_insn	(x=0X7D01ED4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ED50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ED5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ED62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ED66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01ED6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01ED78,	"destination",	0);
	set_cmt	(0X7D01ED7C,	"num",	0);
	set_cmt	(0X7D01ED7E,	"source",	0);
	set_cmt	(0X7D01ED88,	"DataInSize",	0);
	set_cmt	(0X7D01ED8A,	"DataIn_ptr1",	0);
	set_cmt	(0X7D01ED8C,	"a3",	0);
	set_cmt	(0X7D01ED8E,	"a1",	0);
	create_insn	(0X7D01EDA6);
	create_insn	(0X7D01EDB4);
	create_insn	(x=0X7D01EDB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EDBE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EDC6,	"DataIn_ptr1",	0);
	create_insn	(0X7D01EDC6);
	set_cmt	(0X7D01EDC8,	"DataInSize",	0);
	set_cmt	(0X7D01EDCA,	"a3",	0);
	set_cmt	(0X7D01EDCC,	"a1",	0);
	create_insn	(0X7D01EDE4);
	create_insn	(0X7D01EDEE);
	set_cmt	(0X7D01EDF4,	"a3",	0);
	create_insn	(0X7D01EDF4);
	set_cmt	(0X7D01EDFA,	"DataIn_ptr1",	0);
	set_cmt	(0X7D01EDFE,	"a1",	0);
	create_dword	(x=0X7D01EE18);
	op_plain_offset	(x,	0,	0X7D01EDA2);
	op_plain_offset	(x,	128,	0X7D01EDA2);
	create_dword	(x=0X7D01EE1C);
	op_plain_offset	(x,	0,	0X7D01EDE0);
	op_plain_offset	(x,	128,	0X7D01EDE0);
	create_dword	(x=0X7D01EE20);
	op_plain_offset	(x,	0,	0X7D01EE14);
	op_plain_offset	(x,	128,	0X7D01EE14);
	create_insn	(0X7D01EE24);
	set_cmt	(0X7D01EE34,	"userContext_buff",	0);
	create_insn	(x=0X7D01EE34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01EE3E);
	set_cmt	(0X7D01EE4C,	"DataInSize",	0);
	set_cmt	(0X7D01EE4E,	"a3",	0);
	set_cmt	(0X7D01EE50,	"DataIn_ptr1",	0);
	create_insn	(0X7D01EE68);
	create_insn	(0X7D01EE6E);
	create_insn	(0X7D01EE78);
	make_array	(0X7D01EE82,	0X2);
	create_dword	(x=0X7D01EE84);
	op_plain_offset	(x,	0,	0X7D01EE64);
	op_plain_offset	(x,	128,	0X7D01EE64);
	create_insn	(0X7D01EE88);
	create_insn	(x=0X7D01EE98);
	op_hex		(x,	1);
	create_insn	(0X7D01EEA8);
	create_insn	(x=0X7D01EEAE);
	op_hex		(x,	1);
	set_cmt	(0X7D01EEBE,	"userContext_buff",	0);
	create_insn	(x=0X7D01EEBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7D01EEC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EED6,	"kinbuf_len",	0);
	set_cmt	(0X7D01EED8,	"outbuf",	0);
	set_cmt	(0X7D01EEDA,	"kinbuf",	0);
	create_insn	(0X7D01EEF4);
	create_insn	(0X7D01EEFE);
	set_cmt	(0X7D01EF00,	"m2",	0);
	create_insn	(x=0X7D01EF04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EF06,	"m1",	0);
	create_insn	(x=0X7D01EF06);
	op_stkvar	(x,	1);
	create_insn	(0X7D01EF22);
	create_insn	(0X7D01EF2A);
	create_dword	(x=0X7D01EF30);
	op_plain_offset	(x,	0,	0X7D01EEF0);
	op_plain_offset	(x,	128,	0X7D01EEF0);
	create_insn	(0X7D01EF34);
	create_insn	(0X7D01EF98);
	create_insn	(0X7D01EFAC);
	make_array	(0X7D01EFBA,	0X2);
	create_insn	(0X7D01EFBC);
	set_cmt	(0X7D01EFC6,	"ptr",	0);
	create_insn	(x=0X7D01EFC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01EFD4,	"ptr",	0);
	create_insn	(x=0X7D01EFD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D01EFE2);
	create_insn	(0X7D01EFE4);
	create_insn	(x=0X7D01EFEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01EFF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01EFFE,	"va",	0);
	set_cmt	(0X7D01F000,	"len",	0);
	create_insn	(x=0X7D01F002);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F004,	"a3",	0);
	set_cmt	(0X7D01F006,	"outbuf",	0);
	create_insn	(x=0X7D01F006);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F01A);
	create_insn	(x=0X7D01F026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F02E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F032);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F036);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F03E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F05A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F05C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F062,	"a3",	0);
	create_insn	(x=0X7D01F062);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F064,	"a2",	0);
	create_insn	(x=0X7D01F064);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F066,	"a1",	0);
	create_insn	(x=0X7D01F072);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F074,	"len",	0);
	create_insn	(x=0X7D01F076);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F078,	"va",	0);
	create_insn	(x=0X7D01F07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F07E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F08C);
	create_insn	(x=0X7D01F08E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F096);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F09A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F0A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F0AC);
	create_insn	(x=0X7D01F0B0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F0B2,	"len",	0);
	create_insn	(x=0X7D01F0B4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F0B6,	"va",	0);
	create_insn	(x=0X7D01F0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F0BC);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D01F0C4);
	op_plain_offset	(x,	0,	0X7D01F012);
	op_plain_offset	(x,	128,	0X7D01F012);
	create_dword	(0X7D01F0C8);
	create_insn	(0X7D01F0CC);
	set_name	(0X7D01F0CC,	"crys_unknfuncF0CC");
	create_insn	(x=0X7D01F0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F0D6);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F0F0);
	create_insn	(0X7D01F114);
	create_insn	(x=0X7D01F12C);
	op_hex		(x,	1);
	set_cmt	(0X7D01F144,	"va",	0);
	set_cmt	(0X7D01F146,	"a4",	0);
	create_insn	(x=0X7D01F148);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F14A,	"len",	0);
	set_cmt	(0X7D01F14C,	"outbuf",	0);
	create_insn	(x=0X7D01F14C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F150,	"a3",	0);
	create_insn	(x=0X7D01F16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F174);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F17E);
	create_insn	(x=0X7D01F192);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F194,	"a3",	0);
	create_insn	(x=0X7D01F196);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F198,	"va",	0);
	set_cmt	(0X7D01F19A,	"outbuf",	0);
	create_insn	(x=0X7D01F19A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F19C,	"a4",	0);
	set_cmt	(0X7D01F19E,	"len",	0);
	create_insn	(x=0X7D01F1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F1E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F1F0);
	create_insn	(x=0X7D01F202);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F206);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F212);
	create_insn	(0X7D01F21A);
	set_cmt	(0X7D01F226,	"a4",	0);
	create_insn	(x=0X7D01F228);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F22A,	"a3",	0);
	set_cmt	(0X7D01F22C,	"outbuf",	0);
	create_insn	(x=0X7D01F22C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F22E,	"len",	0);
	set_cmt	(0X7D01F230,	"va",	0);
	create_insn	(x=0X7D01F246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F250);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F25A,	"len",	0);
	create_insn	(0X7D01F25A);
	set_cmt	(0X7D01F25C,	"ptr2",	0);
	set_cmt	(0X7D01F260,	"ptr1",	0);
	set_cmt	(0X7D01F268,	"ptr2",	0);
	create_insn	(0X7D01F268);
	set_cmt	(0X7D01F26A,	"len",	0);
	set_cmt	(0X7D01F26C,	"ptr1",	0);
	create_insn	(0X7D01F274);
	create_insn	(x=0X7D01F278);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F27E,	"va",	0);
	set_cmt	(0X7D01F286,	"outbuf",	0);
	create_insn	(x=0X7D01F286);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F28C,	"len",	0);
	set_cmt	(0X7D01F28E,	"a4",	0);
	create_insn	(x=0X7D01F290);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F292,	"a3",	0);
	create_insn	(x=0X7D01F294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F2A2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F2B0);
	create_insn	(0X7D01F2C2);
	create_insn	(0X7D01F2D6);
	create_insn	(0X7D01F2DE);
	create_insn	(x=0X7D01F2EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F314,	"outbuf",	0);
	create_insn	(x=0X7D01F314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F316);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F31C,	"a4",	0);
	set_cmt	(0X7D01F31E,	"len",	0);
	set_cmt	(0X7D01F322,	"a3",	0);
	set_cmt	(0X7D01F324,	"va",	0);
	create_insn	(x=0X7D01F326);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F338);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F342);
	make_array	(0X7D01F356,	0X2);
	create_insn	(0X7D01F358);
	set_name	(0X7D01F358,	"crys_unknfuncF358");
	create_insn	(0X7D01F378);
	create_insn	(x=0X7D01F398);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F3E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F3E6);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F400);
	create_insn	(0X7D01F404);
	create_insn	(x=0X7D01F412);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F416);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F426,	"len",	0);
	set_cmt	(0X7D01F428,	"ptr2",	0);
	set_cmt	(0X7D01F42A,	"ptr1",	0);
	create_insn	(0X7D01F432);
	create_insn	(x=0X7D01F440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F444);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F44E,	"ptr1",	0);
	create_insn	(0X7D01F44E);
	set_cmt	(0X7D01F452,	"len",	0);
	set_cmt	(0X7D01F454,	"ptr2",	0);
	create_insn	(0X7D01F45C);
	create_insn	(x=0X7D01F464);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F46A,	"aSize",	0);
	create_insn	(x=0X7D01F480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F482);
	op_hex		(x,	1);
	set_cmt	(0X7D01F492,	"aSize",	0);
	set_cmt	(0X7D01F49A,	"a1",	0);
	create_insn	(0X7D01F4A4);
	create_insn	(0X7D01F4DC);
	set_cmt	(0X7D01F4E2,	"a1",	0);
	create_insn	(0X7D01F4EE);
	set_cmt	(0X7D01F4F2,	"a1",	0);
	set_cmt	(0X7D01F4FA,	"a1",	0);
	create_insn	(0X7D01F504);
	set_cmt	(0X7D01F50C,	"a1",	0);
	set_cmt	(0X7D01F512,	"a1",	0);
	create_dword	(x=0X7D01F51C);
	op_plain_offset	(x,	0,	0X7D01F4E4);
	op_plain_offset	(x,	128,	0X7D01F4E4);
	create_insn	(0X7D01F520);
	set_cmt	(0X7D01F526,	"a1",	0);
	set_cmt	(0X7D01F52C,	"a1",	0);
	create_dword	(x=0X7D01F53C);
	op_plain_offset	(x,	0,	0X7D01F528);
	op_plain_offset	(x,	128,	0X7D01F528);
	create_insn	(0X7D01F540);
	set_name	(0X7D01F540,	"crys_unknfuncF540");
	set_cmt	(0X7D01F548,	"switch 7 cases ",	0);
	set_cmt	(0X7D01F54C,	"switch jump",	0);
	set_cmt	(0X7D01F550,	"jump table for switch statement",	0);
	create_byte	(0X7D01F550);
	set_name	(0X7D01F550,	"jpt_7D01F54C");
	create_byte	(0X7D01F551);
	create_byte	(0X7D01F552);
	create_byte	(0X7D01F553);
	create_byte	(0X7D01F554);
	create_byte	(0X7D01F555);
	create_byte	(0X7D01F556);
	create_insn	(0X7D01F558);
	create_insn	(0X7D01F55C);
	set_cmt	(0X7D01F55E,	"switch 7 cases ",	0);
	set_cmt	(0X7D01F562,	"switch jump",	0);
	set_cmt	(0X7D01F566,	"jump table for switch statement",	0);
	create_byte	(0X7D01F566);
	set_name	(0X7D01F566,	"jpt_7D01F562");
	create_byte	(0X7D01F567);
	create_byte	(0X7D01F568);
	create_byte	(0X7D01F569);
	create_byte	(0X7D01F56A);
	create_byte	(0X7D01F56B);
	create_byte	(0X7D01F56C);
	set_cmt	(0X7D01F56E,	"jumptable 7D01F562 cases 0-2,4,5",	1);
	create_insn	(0X7D01F56E);
	set_cmt	(0X7D01F576,	"jumptable 7D01F54C cases 0-2,4,5",	1);
	create_insn	(0X7D01F576);
	set_cmt	(0X7D01F57E,	"jumptable 7D01F54C case 6",	1);
	create_insn	(0X7D01F57E);
	set_cmt	(0X7D01F584,	"jumptable 7D01F562 case 6",	1);
	create_insn	(0X7D01F584);
	set_cmt	(0X7D01F58A,	"jumptable 7D01F562 default case",	1);
	create_insn	(0X7D01F58A);
	set_name	(0X7D01F58A,	"def_7D01F562");
	set_cmt	(0X7D01F590,	"jumptable 7D01F54C default case",	1);
	create_insn	(0X7D01F590);
	set_name	(0X7D01F590,	"def_7D01F54C");
	make_array	(0X7D01F596,	0X2);
	create_insn	(0X7D01F598);
	set_name	(0X7D01F598,	"crys_hash_do_init");
	set_cmt	(0X7D01F5A0,	"aTimeOut",	0);
	set_cmt	(0X7D01F5AA,	"pMutexId",	0);
	set_cmt	(0X7D01F5C0,	"pMutexId",	0);
	create_insn	(0X7D01F5CA);
	create_insn	(0X7D01F5CE);
	create_dword	(x=0X7D01F5F0);
	op_plain_offset	(x,	0,	0X7D01F59E);
	op_plain_offset	(x,	128,	0X7D01F59E);
	create_dword	(0X7D01F5F4);
	create_insn	(0X7D01F5F8);
	set_name	(0X7D01F5F8,	"crys_unknfuncF5F8");
	create_insn	(0X7D01F61A);
	create_insn	(x=0X7D01F622);
	op_hex		(x,	1);
	set_cmt	(0X7D01F630,	"aTimeOut",	0);
	set_cmt	(0X7D01F638,	"pMutexId",	0);
	create_insn	(x=0X7D01F646);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F64A,	"a4",	0);
	set_cmt	(0X7D01F64C,	"a3",	0);
	set_cmt	(0X7D01F64E,	"a2",	0);
	set_cmt	(0X7D01F650,	"a1",	0);
	set_cmt	(0X7D01F654,	"stru4",	0);
	create_insn	(x=0X7D01F654);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F660,	"pMutexId",	0);
	create_insn	(0X7D01F66E);
	create_insn	(x=0X7D01F672);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F674,	"a4",	0);
	create_insn	(x=0X7D01F674);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F676,	"stru4",	0);
	create_insn	(x=0X7D01F676);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F678,	"a2",	0);
	set_cmt	(0X7D01F67A,	"a3",	0);
	set_cmt	(0X7D01F67C,	"a1",	0);
	create_insn	(x=0X7D01F67E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F68A,	"a4",	0);
	set_cmt	(0X7D01F68C,	"va",	0);
	set_cmt	(0X7D01F68E,	"a3",	0);
	set_cmt	(0X7D01F690,	"len",	0);
	create_insn	(x=0X7D01F696);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F6A8,	"len",	0);
	set_cmt	(0X7D01F6AA,	"va",	0);
	set_cmt	(0X7D01F6AC,	"a3",	0);
	set_cmt	(0X7D01F6B0,	"a4",	0);
	create_insn	(0X7D01F6C0);
	set_cmt	(0X7D01F6C2,	"aTimeOut",	0);
	set_cmt	(0X7D01F6CC,	"pMutexId",	0);
	create_insn	(0X7D01F6D4);
	create_insn	(x=0X7D01F6D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F6DC,	"a4",	0);
	set_cmt	(0X7D01F6DE,	"a3",	0);
	set_cmt	(0X7D01F6E0,	"a2",	0);
	set_cmt	(0X7D01F6E2,	"a1",	0);
	set_cmt	(0X7D01F6E6,	"stru4",	0);
	create_insn	(x=0X7D01F6E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F70A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F70E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F712);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F71C,	"a4",	0);
	set_cmt	(0X7D01F71E,	"a3",	0);
	set_cmt	(0X7D01F720,	"len",	0);
	set_cmt	(0X7D01F722,	"va",	0);
	set_cmt	(0X7D01F73C,	"va",	0);
	set_cmt	(0X7D01F73E,	"a3",	0);
	set_cmt	(0X7D01F740,	"len",	0);
	set_cmt	(0X7D01F742,	"a4",	0);
	create_insn	(0X7D01F750);
	set_cmt	(0X7D01F75E,	"a4",	0);
	set_cmt	(0X7D01F760,	"va",	0);
	set_cmt	(0X7D01F762,	"a3",	0);
	set_cmt	(0X7D01F764,	"len",	0);
	set_cmt	(0X7D01F772,	"a3",	0);
	create_insn	(x=0X7D01F772);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F774,	"a2",	0);
	set_cmt	(0X7D01F776,	"a1",	0);
	create_insn	(x=0X7D01F786);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F788,	"a2",	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_6(void) {
        auto x;
#define id x

	set_cmt	(0X7D01F78A,	"a3",	0);
	create_insn	(x=0X7D01F78A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F78C,	"a1",	0);
	create_insn	(x=0X7D01F794);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F79C,	"a4",	0);
	set_cmt	(0X7D01F79E,	"a3",	0);
	set_cmt	(0X7D01F7A0,	"len",	0);
	set_cmt	(0X7D01F7A2,	"va",	0);
	create_insn	(0X7D01F7B8);
	create_insn	(0X7D01F7CE);
	set_cmt	(0X7D01F7E2,	"a4",	0);
	set_cmt	(0X7D01F7E6,	"a3",	0);
	set_cmt	(0X7D01F7E8,	"len",	0);
	set_cmt	(0X7D01F7EA,	"va",	0);
	make_array	(0X7D01F7FA,	0X2);
	create_dword	(x=0X7D01F7FC);
	op_plain_offset	(x,	0,	0X7D01F614);
	op_plain_offset	(x,	128,	0X7D01F614);
	create_dword	(0X7D01F800);
	create_dword	(x=0X7D01F804);
	op_plain_offset	(x,	0,	0X7D01F656);
	op_plain_offset	(x,	128,	0X7D01F656);
	create_dword	(x=0X7D01F808);
	op_plain_offset	(x,	0,	0X7D01F6B2);
	op_plain_offset	(x,	128,	0X7D01F6B2);
	create_dword	(x=0X7D01F80C);
	op_plain_offset	(x,	0,	0X7D01F6E8);
	op_plain_offset	(x,	128,	0X7D01F6E8);
	create_dword	(x=0X7D01F810);
	op_plain_offset	(x,	0,	0X7D01F746);
	op_plain_offset	(x,	128,	0X7D01F746);
	create_insn	(0X7D01F814);
	set_name	(0X7D01F814,	"crys_hash_do_finish");
	create_insn	(x=0X7D01F832);
	op_hex		(x,	1);
	set_cmt	(0X7D01F840,	"aTimeOut",	0);
	set_cmt	(0X7D01F848,	"pMutexId",	0);
	set_cmt	(0X7D01F858,	"a4",	0);
	create_insn	(x=0X7D01F858);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F85A,	"a3",	0);
	set_cmt	(0X7D01F85C,	"a2",	0);
	set_cmt	(0X7D01F85E,	"a1",	0);
	create_insn	(x=0X7D01F860);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F864,	"stru4",	0);
	create_insn	(x=0X7D01F864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F882);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F886);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F88E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F89C,	"a4",	0);
	set_cmt	(0X7D01F89E,	"a3",	0);
	set_cmt	(0X7D01F8A0,	"len",	0);
	set_cmt	(0X7D01F8A2,	"va",	0);
	create_insn	(x=0X7D01F8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F8AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F8C4,	"len",	0);
	set_cmt	(0X7D01F8C6,	"va",	0);
	create_insn	(x=0X7D01F8C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F8C8,	"a3",	0);
	set_cmt	(0X7D01F8CC,	"a4",	0);
	create_insn	(x=0X7D01F8DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F8F4,	"pMutexId",	0);
	create_insn	(0X7D01F902);
	set_cmt	(0X7D01F904,	"aTimeOut",	0);
	create_insn	(x=0X7D01F908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F90C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F912,	"pMutexId",	0);
	create_insn	(x=0X7D01F91C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F920,	"a4",	0);
	set_cmt	(0X7D01F922,	"a3",	0);
	set_cmt	(0X7D01F924,	"a2",	0);
	set_cmt	(0X7D01F926,	"a1",	0);
	set_cmt	(0X7D01F92A,	"stru4",	0);
	create_insn	(x=0X7D01F92A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F93C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F93E,	"a4",	0);
	create_insn	(x=0X7D01F93E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F940,	"stru4",	0);
	create_insn	(x=0X7D01F940);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F942,	"a2",	0);
	set_cmt	(0X7D01F944,	"a3",	0);
	set_cmt	(0X7D01F946,	"a1",	0);
	create_insn	(x=0X7D01F946);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F948);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F952,	"a4",	0);
	set_cmt	(0X7D01F954,	"va",	0);
	set_cmt	(0X7D01F956,	"a3",	0);
	set_cmt	(0X7D01F958,	"len",	0);
	create_insn	(x=0X7D01F95E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F96C);
	create_insn	(0X7D01F974);
	create_insn	(x=0X7D01F976);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F97E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F98A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F996,	"a4",	0);
	set_cmt	(0X7D01F998,	"a3",	0);
	set_cmt	(0X7D01F99A,	"len",	0);
	set_cmt	(0X7D01F99C,	"va",	0);
	create_insn	(x=0X7D01F99E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F9A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F9AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01F9AC);
	op_stkvar	(x,	1);
	create_insn	(0X7D01F9B8);
	set_cmt	(0X7D01F9C6,	"a4",	0);
	set_cmt	(0X7D01F9C8,	"va",	0);
	set_cmt	(0X7D01F9CA,	"a3",	0);
	set_cmt	(0X7D01F9CC,	"len",	0);
	create_insn	(0X7D01F9E0);
	create_insn	(x=0X7D01F9E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01F9F6,	"va",	0);
	set_cmt	(0X7D01F9F8,	"a3",	0);
	set_cmt	(0X7D01F9FA,	"len",	0);
	set_cmt	(0X7D01F9FC,	"a4",	0);
	create_insn	(0X7D01FA0C);
	create_insn	(x=0X7D01FA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FA1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FA1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FA24,	"a4",	0);
	set_cmt	(0X7D01FA28,	"a3",	0);
	set_cmt	(0X7D01FA2A,	"len",	0);
	set_cmt	(0X7D01FA2C,	"va",	0);
	create_insn	(x=0X7D01FA32);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FA40);
	set_cmt	(0X7D01FA42,	"ptr2",	0);
	set_cmt	(0X7D01FA46,	"ptr1",	0);
	set_cmt	(0X7D01FA48,	"len",	0);
	create_insn	(0X7D01FA50);
	create_insn	(0X7D01FA54);
	create_dword	(x=0X7D01FA6C);
	op_plain_offset	(x,	0,	0X7D01F820);
	op_plain_offset	(x,	128,	0X7D01F820);
	create_dword	(0X7D01FA70);
	create_dword	(x=0X7D01FA74);
	op_plain_offset	(x,	0,	0X7D01F866);
	op_plain_offset	(x,	128,	0X7D01F866);
	create_dword	(x=0X7D01FA78);
	op_plain_offset	(x,	0,	0X7D01F8CE);
	op_plain_offset	(x,	128,	0X7D01F8CE);
	create_dword	(x=0X7D01FA7C);
	op_plain_offset	(x,	0,	0X7D01F92C);
	op_plain_offset	(x,	128,	0X7D01F92C);
	create_dword	(x=0X7D01FA80);
	op_plain_offset	(x,	0,	0X7D01FA00);
	op_plain_offset	(x,	128,	0X7D01FA00);
	create_insn	(0X7D01FA84);
	make_array	(0X7D01FA8A,	0X2);
	create_insn	(0X7D01FA8C);
	create_insn	(x=0X7D01FAB0);
	op_hex		(x,	1);
	make_array	(0X7D01FAFE,	0X2);
	create_dword	(x=0X7D01FB00);
	op_plain_offset	(x,	0,	0X7D01FA9C);
	op_plain_offset	(x,	128,	0X7D01FA9C);
	create_dword	(0X7D01FB04);
	create_dword	(0X7D01FB08);
	create_insn	(0X7D01FB0C);
	create_insn	(x=0X7D01FB1A);
	op_hex		(x,	1);
	create_dword	(x=0X7D01FB7C);
	op_plain_offset	(x,	0,	0X7D01FB26);
	op_plain_offset	(x,	128,	0X7D01FB26);
	create_dword	(0X7D01FB80);
	create_dword	(0X7D01FB84);
	create_insn	(0X7D01FB88);
	create_insn	(0X7D01FBB0);
	create_insn	(0X7D01FBB4);
	create_insn	(0X7D01FBB8);
	create_insn	(0X7D01FBDC);
	create_dword	(x=0X7D01FBE0);
	op_plain_offset	(x,	0,	0X7D01FBC8);
	op_plain_offset	(x,	128,	0X7D01FBC8);
	create_dword	(0X7D01FBE4);
	create_insn	(0X7D01FBE8);
	create_insn	(0X7D01FC16);
	create_dword	(x=0X7D01FC1C);
	op_plain_offset	(x,	0,	0X7D01FC00);
	op_plain_offset	(x,	128,	0X7D01FC00);
	create_dword	(0X7D01FC20);
	create_insn	(0X7D01FC24);
	set_name	(0X7D01FC24,	"crys_unknfuncFC24");
	create_insn	(0X7D01FC52);
	create_dword	(x=0X7D01FC58);
	op_plain_offset	(x,	0,	0X7D01FC3C);
	op_plain_offset	(x,	128,	0X7D01FC3C);
	create_dword	(0X7D01FC5C);
	create_insn	(0X7D01FC60);
	create_insn	(x=0X7D01FC6E);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FC84);
	set_cmt	(0X7D01FCCC,	"domainId",	0);
	create_insn	(x=0X7D01FCDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FD0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FD0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D01FD12,	"passphrase_len",	0);
	set_cmt	(0X7D01FD14,	"passphrase",	0);
	create_insn	(x=0X7D01FD16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD18,	"out_key_len",	0);
	create_insn	(x=0X7D01FD18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD1C,	"a1",	0);
	set_cmt	(0X7D01FD1E,	"out_key",	0);
	create_insn	(x=0X7D01FD1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD22,	"a2",	0);
	set_cmt	(0X7D01FD24,	"pTempBuff",	0);
	create_insn	(x=0X7D01FD24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD28,	"pUserPublKey",	0);
	create_insn	(x=0X7D01FD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FD32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD34,	"in8_ptr",	0);
	set_cmt	(0X7D01FD36,	"out32_ptr",	0);
	create_insn	(x=0X7D01FD38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD3A,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D01FD3C,	"sizeInBytes",	0);
	create_insn	(x=0X7D01FD44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD4C,	"domainId",	0);
	set_cmt	(0X7D01FD52,	"pUserPrivKey",	0);
	set_cmt	(0X7D01FD54,	"ecX",	0);
	set_cmt	(0X7D01FD56,	"ecY",	0);
	create_insn	(x=0X7D01FD56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD60,	"in32_ptr",	0);
	create_insn	(x=0X7D01FD60);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FD62,	"sizeInBytes",	0);
	set_cmt	(0X7D01FD64,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D01FD66,	"out8_ptr",	0);
	create_insn	(x=0X7D01FD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FD88);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FDB2);
	set_cmt	(0X7D01FDBA,	"sizeInBytes",	0);
	create_insn	(0X7D01FDBA);
	set_cmt	(0X7D01FDBC,	"in32_ptr",	0);
	create_insn	(x=0X7D01FDBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FDBE,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D01FDC0,	"out8_ptr",	0);
	set_cmt	(0X7D01FDCC,	"sizeInBytes",	0);
	set_cmt	(0X7D01FDCE,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D01FDD0,	"out8_ptr",	0);
	set_cmt	(0X7D01FDD2,	"in32_ptr",	0);
	create_insn	(x=0X7D01FDD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FDE6);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FDF0);
	set_name	(0X7D01FDF0,	"DX_Set_session_Key");
	create_insn	(x=0X7D01FDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FE0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE16,	"passphrase_len",	0);
	create_insn	(x=0X7D01FE18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE1E,	"fourcc",	0);
	create_insn	(x=0X7D01FE1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE20,	"a1",	0);
	set_cmt	(0X7D01FE22,	"out_key_len",	0);
	create_insn	(x=0X7D01FE22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE24,	"passphrase",	0);
	set_cmt	(0X7D01FE26,	"out_key",	0);
	create_insn	(x=0X7D01FE26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE28,	"a2",	0);
	set_cmt	(0X7D01FE2A,	"fourcc_len",	0);
	create_insn	(x=0X7D01FE2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FE32,	"aTimeOut",	0);
	set_cmt	(0X7D01FE38,	"pMutexId",	0);
	set_cmt	(0X7D01FE40,	"pMutexId",	0);
	create_insn	(x=0X7D01FE42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FE52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FE58);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FE68);
	create_insn	(0X7D01FE74);
	create_dword	(x=0X7D01FE80);
	op_plain_offset	(x,	0,	0X7D01FE00);
	op_plain_offset	(x,	128,	0X7D01FE00);
	create_dword	(0X7D01FE84);
	create_dword	(0X7D01FE88);
	create_insn	(0X7D01FE8C);
	create_insn	(0X7D01FECC);
	create_insn	(0X7D01FECE);
	make_array	(0X7D01FED2,	0X2);
	create_dword	(x=0X7D01FED4);
	op_plain_offset	(x,	0,	0X7D01FE94);
	op_plain_offset	(x,	128,	0X7D01FE94);
	create_dword	(0X7D01FED8);
	create_insn	(0X7D01FEDC);
	set_name	(0X7D01FEDC,	"TEE_CryptoCell_KeyDerivation");
	create_insn	(x=0X7D01FEE2);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FF0A);
	create_insn	(x=0X7D01FF10);
	op_stkvar	(x,	1);
	create_insn	(0X7D01FF24);
	create_insn	(x=0X7D01FF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FF72,	"source",	0);
	create_insn	(x=0X7D01FF74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FF76,	"num",	0);
	set_cmt	(0X7D01FF78,	"destination",	0);
	create_insn	(x=0X7D01FF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FF92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FF94,	"num",	0);
	create_insn	(x=0X7D01FF94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FF96,	"destination",	0);
	set_cmt	(0X7D01FF9A,	"source",	0);
	create_insn	(x=0X7D01FF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FFA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FFA8,	"num",	0);
	create_insn	(x=0X7D01FFAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FFB0,	"destination",	0);
	create_insn	(x=0X7D01FFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FFD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FFD6,	"outbuf",	0);
	create_insn	(x=0X7D01FFD6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FFD8,	"kinbuf_len",	0);
	set_cmt	(0X7D01FFDA,	"kinbuf",	0);
	set_cmt	(0X7D01FFDC,	"a2",	0);
	set_cmt	(0X7D01FFDE,	"a1",	0);
	create_insn	(x=0X7D01FFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D01FFEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D01FFEE,	"destination",	0);
	set_cmt	(0X7D01FFF4,	"source",	0);
	set_cmt	(0X7D020002,	"num",	0);
	create_insn	(x=0X7D020004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020012);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020014,	"source",	0);
	create_insn	(x=0X7D020016);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020018,	"num",	0);
	set_cmt	(0X7D02001A,	"destination",	0);
	create_insn	(x=0X7D02001A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02002A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020030);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020032,	"num",	0);
	create_insn	(x=0X7D020032);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020034,	"destination",	0);
	set_cmt	(0X7D020038,	"source",	0);
	create_insn	(x=0X7D020038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020042);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020046);
	op_stkvar	(x,	1);
	create_insn	(0X7D020054);
	create_insn	(0X7D0200AC);
	set_cmt	(0X7D0200AE,	"aTimeOut",	0);
	set_cmt	(0X7D0200BC,	"pMutexId",	0);
	set_cmt	(0X7D020154,	"pMutexId",	0);
	set_cmt	(0X7D02015E,	"num",	0);
	create_insn	(0X7D02015E);
	set_cmt	(0X7D020160,	"destination",	0);
	set_cmt	(0X7D020164,	"source",	0);
	set_cmt	(0X7D02016A,	"source",	0);
	set_cmt	(0X7D02016C,	"destination",	0);
	set_cmt	(0X7D020170,	"num",	0);
	set_cmt	(0X7D020176,	"pMutexId",	0);
	set_cmt	(0X7D020180,	"num",	0);
	create_insn	(0X7D020180);
	set_cmt	(0X7D020182,	"source",	0);
	set_cmt	(0X7D020186,	"destination",	0);
	set_cmt	(0X7D02018C,	"num",	0);
	set_cmt	(0X7D02018E,	"source",	0);
	set_cmt	(0X7D020192,	"destination",	0);
	make_array	(0X7D02019A,	0X2);
	create_dword	(x=0X7D02019C);
	op_plain_offset	(x,	0,	0X7D0200BC);
	op_plain_offset	(x,	128,	0X7D0200BC);
	create_dword	(0X7D0201A0);
	create_dword	(0X7D0201A4);
	create_insn	(0X7D0201A8);
	make_array	(0X7D02021A,	0X2);
	create_insn	(0X7D02021C);
	create_insn	(0X7D020272);
	create_insn	(x=0X7D02027E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020280);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02029C);
	op_plain_offset	(x,	0,	0X7D020232);
	op_plain_offset	(x,	128,	0X7D020232);
	create_dword	(0X7D0202A0);
	create_insn	(0X7D0202A4);
	set_name	(0X7D0202A4,	"SaSi_UtilDeriveRPMBKey");
	create_insn	(x=0X7D0202AC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202AE,	"num",	0);
	create_insn	(x=0X7D0202B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202B4,	"destination",	0);
	set_cmt	(0X7D0202BA,	"source",	0);
	set_cmt	(0X7D0202C0,	"source",	0);
	set_cmt	(0X7D0202C4,	"destination",	0);
	set_cmt	(0X7D0202C6,	"num",	0);
	set_cmt	(0X7D0202DA,	"out_key",	0);
	create_insn	(x=0X7D0202DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202DE,	"out_key_len",	0);
	create_insn	(x=0X7D0202DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202E0,	"passphrase",	0);
	set_cmt	(0X7D0202E2,	"fourcc_len",	0);
	create_insn	(x=0X7D0202E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202E4,	"passphrase_len",	0);
	set_cmt	(0X7D0202E6,	"fourcc",	0);
	create_insn	(x=0X7D0202E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0202E8,	"a2",	0);
	set_cmt	(0X7D0202EA,	"a1",	0);
	make_array	(0X7D0202F6,	0X2);
	create_dword	(x=0X7D0202F8);
	op_plain_offset	(x,	0,	0X7D0202BA);
	op_plain_offset	(x,	128,	0X7D0202BA);
	create_insn	(0X7D0202FC);
	create_insn	(0X7D020322);
	create_insn	(x=0X7D020336);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020338,	"outbuf",	0);
	create_insn	(x=0X7D020342);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020346,	"key_ptr",	0);
	set_cmt	(0X7D020348,	"ContextID_ptr",	0);
	set_cmt	(0X7D02034A,	"keySize",	0);
	set_cmt	(0X7D02034C,	"OperationMode",	0);
	create_insn	(x=0X7D02037A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020388,	"source",	0);
	set_cmt	(0X7D02038A,	"destination",	0);
	set_cmt	(0X7D02038C,	"num",	0);
	create_insn	(0X7D020396);
	create_insn	(x=0X7D02039A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0203A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0203A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0203B2,	"source",	0);
	set_cmt	(0X7D0203B4,	"destination",	0);
	set_cmt	(0X7D0203B6,	"num",	0);
	create_insn	(0X7D0203C0);
	create_insn	(0X7D0203D0);
	make_array	(0X7D0203D6,	0X2);
	create_dword	(x=0X7D0203D8);
	op_plain_offset	(x,	0,	0X7D0203CC);
	op_plain_offset	(x,	128,	0X7D0203CC);
	create_insn	(0X7D0203DC);
	create_insn	(0X7D0203E8);
	create_insn	(x=0X7D02041A);
	op_stkvar	(x,	1);
	create_insn	(0X7D020420);
	create_insn	(0X7D020424);
	create_insn	(x=0X7D02042A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02042E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020436);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020438);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02044A,	"outbuf",	0);
	create_insn	(0X7D02044E);
	create_insn	(x=0X7D020456);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02045E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02046E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02047E);
	op_stkvar	(x,	1);
	create_insn	(0X7D020482);
	create_insn	(x=0X7D020488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020498);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0204AA,	"va",	0);
	create_insn	(x=0X7D0204AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0204B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0204BE,	"len",	0);
	set_cmt	(0X7D0204C6,	"a4",	0);
	set_cmt	(0X7D0204C8,	"a3",	0);
	create_insn	(x=0X7D0204D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0204DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0204E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0204FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020502);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020518);
	op_stkvar	(x,	1);
	create_insn	(0X7D020538);
	create_insn	(0X7D02053C);
	create_insn	(0X7D020544);
	create_insn	(x=0X7D020548);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020552,	"va",	0);
	set_cmt	(0X7D020554,	"outbuf",	0);
	create_insn	(x=0X7D020554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02055C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02055E,	"a3",	0);
	create_insn	(x=0X7D020568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02057E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020582);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02058A);
	op_stkvar	(x,	1);
	create_insn	(0X7D020592);
	create_insn	(0X7D020598);
	create_insn	(0X7D02059C);
	create_insn	(x=0X7D0205A4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0205B4);
	create_insn	(x=0X7D0205D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0205EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0205F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0205F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0205FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020616);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02061A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020620);
	op_stkvar	(x,	1);
	create_insn	(0X7D020630);
	create_insn	(0X7D020634);
	create_insn	(0X7D020638);
	set_cmt	(0X7D020648,	"aTimeOut",	0);
	create_insn	(x=0X7D02064E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020658,	"pMutexId",	0);
	set_cmt	(0X7D020660,	"a5",	0);
	create_insn	(x=0X7D020660);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020662,	"a2",	0);
	set_cmt	(0X7D020664,	"a1",	0);
	set_cmt	(0X7D020666,	"a4",	0);
	set_cmt	(0X7D020668,	"a3",	0);
	set_cmt	(0X7D020672,	"pMutexId",	0);
	create_insn	(0X7D020680);
	set_cmt	(0X7D020690,	"a2",	0);
	set_cmt	(0X7D020692,	"a3",	0);
	set_cmt	(0X7D020694,	"a1",	0);
	set_cmt	(0X7D020696,	"a4",	0);
	set_cmt	(0X7D0206A2,	"pMutexId",	0);
	set_cmt	(0X7D0206B0,	"a2",	0);
	create_insn	(0X7D0206B0);
	set_cmt	(0X7D0206B2,	"a3",	0);
	create_insn	(x=0X7D0206B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0206B4,	"a1",	0);
	make_array	(0X7D0206D6,	0X2);
	create_dword	(x=0X7D0206D8);
	op_plain_offset	(x,	0,	0X7D020650);
	op_plain_offset	(x,	128,	0X7D020650);
	create_dword	(0X7D0206DC);
	create_dword	(x=0X7D0206E0);
	op_plain_offset	(x,	0,	0X7D02065E);
	op_plain_offset	(x,	128,	0X7D02065E);
	create_dword	(x=0X7D0206E4);
	op_plain_offset	(x,	0,	0X7D02069A);
	op_plain_offset	(x,	128,	0X7D02069A);
	create_insn	(0X7D0206E8);
	set_cmt	(0X7D0206F8,	"aTimeOut",	0);
	create_insn	(x=0X7D0206FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020706,	"pMutexId",	0);
	set_cmt	(0X7D02070E,	"a5",	0);
	create_insn	(x=0X7D02070E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020710,	"a2",	0);
	set_cmt	(0X7D020712,	"a1",	0);
	set_cmt	(0X7D020714,	"a4",	0);
	set_cmt	(0X7D020716,	"a3",	0);
	set_cmt	(0X7D020720,	"pMutexId",	0);
	create_insn	(0X7D02072E);
	set_cmt	(0X7D02073E,	"a2",	0);
	set_cmt	(0X7D020740,	"a3",	0);
	set_cmt	(0X7D020742,	"a1",	0);
	set_cmt	(0X7D020744,	"a4",	0);
	set_cmt	(0X7D020750,	"pMutexId",	0);
	create_insn	(0X7D02075E);
	create_insn	(x=0X7D020760);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D020784);
	op_plain_offset	(x,	0,	0X7D020700);
	op_plain_offset	(x,	128,	0X7D020700);
	create_dword	(0X7D020788);
	create_dword	(x=0X7D02078C);
	op_plain_offset	(x,	0,	0X7D02070C);
	op_plain_offset	(x,	128,	0X7D02070C);
	create_dword	(x=0X7D020790);
	op_plain_offset	(x,	0,	0X7D020748);
	op_plain_offset	(x,	128,	0X7D020748);
	create_insn	(0X7D020794);
	create_insn	(0X7D0207BC);
	create_insn	(0X7D0207CC);
	set_cmt	(0X7D0207F0,	"ptr2",	0);
	create_insn	(0X7D0207F0);
	set_cmt	(0X7D0207F4,	"ptr1",	0);
	set_cmt	(0X7D0207F6,	"len",	0);
	create_insn	(0X7D020800);
	create_insn	(0X7D02083C);
	create_insn	(0X7D02083E);
	create_insn	(0X7D020840);
	set_cmt	(0X7D02084A,	"ptr",	0);
	create_insn	(x=0X7D02084A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D020858);
	make_array	(0X7D02085A,	0X2);
	create_insn	(0X7D02085C);
	make_array	(0X7D02086A,	0X2);
	create_dword	(x=0X7D02086C);
	op_plain_offset	(x,	0,	0X7D020864);
	op_plain_offset	(x,	128,	0X7D020864);
	create_insn	(0X7D020870);
	create_insn	(x=0X7D020878);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02087E,	"aSize",	0);
	create_insn	(x=0X7D020894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020896);
	op_hex		(x,	1);
	make_array	(0X7D0208AA,	0X2);
	create_insn	(0X7D0208AC);
	create_dword	(x=0X7D0208C0);
	op_plain_offset	(x,	0,	0X7D0208B4);
	op_plain_offset	(x,	128,	0X7D0208B4);
	create_insn	(0X7D0208C4);
	set_name	(0X7D0208C4,	"CRYS_COMMON_ReverseMemcpy");
	create_insn	(0X7D0208D8);
	create_insn	(0X7D0208F6);
	create_insn	(x=0X7D020918);
	op_stkvar	(x,	1);
	create_insn	(0X7D02091E);
	create_insn	(0X7D020924);
	set_name	(0X7D020924,	"CRYS_COMMON_InPlaceConvertBytesWordsAndArrayEndianness");
	create_insn	(0X7D02095E);
	make_array	(0X7D020966,	0X2);
	create_insn	(0X7D020968);
	set_name	(0X7D020968,	"CRYS_COMMON_ConvertMsbLsbBytesToLswMswWords");
	create_insn	(0X7D02097A);
	create_insn	(0X7D020986);
	create_insn	(x=0X7D0209AA);
	op_hex		(x,	1);
	create_insn	(0X7D0209BC);
	create_insn	(0X7D0209D2);
	set_cmt	(0X7D0209EE,	"len",	0);
	set_cmt	(0X7D0209F0,	"ptr1",	0);
	set_cmt	(0X7D0209F2,	"ptr2",	0);
	set_cmt	(0X7D0209F8,	"buf_ptr",	0);
	set_cmt	(0X7D0209FA,	"sizeWords",	0);
	create_insn	(0X7D020A06);
	make_array	(0X7D020A12,	0X2);
	create_insn	(0X7D020A14);
	set_name	(0X7D020A14,	"CRYS_COMMON_ConvertLswMswWordsToMsbLsbBytes");
	create_insn	(0X7D020A26);
	create_insn	(x=0X7D020A32);
	op_hex		(x,	1);
	set_cmt	(0X7D020A38,	"buf_ptr",	0);
	create_insn	(x=0X7D020A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D020A42);
	create_insn	(x=0X7D020A54);
	op_hex		(x,	1);
	set_cmt	(0X7D020A5A,	"sizeWords",	0);
	set_cmt	(0X7D020A64,	"sizeWords",	0);
	create_insn	(0X7D020A64);
	set_cmt	(0X7D020A66,	"buf_ptr",	0);
	create_insn	(0X7D020A84);
	create_insn	(0X7D020A8C);
	set_cmt	(0X7D020A8E,	"len",	0);
	create_insn	(x=0X7D020A90);
	op_hex		(x,	1);
	set_cmt	(0X7D020A94,	"ptr1",	0);
	set_cmt	(0X7D020A96,	"ptr2",	0);
	set_cmt	(0X7D020A9C,	"buf_ptr",	0);
	set_cmt	(0X7D020A9E,	"sizeWords",	0);
	create_insn	(0X7D020AA8);
	set_name	(0X7D020AA8,	"CRYS_COMMON_ConvertLsbMsbBytesToLswMswWords");
	create_insn	(0X7D020AC8);
	create_insn	(0X7D020ACC);
	set_name	(0X7D020ACC,	"CRYS_COMMON_ConvertLswMswWordsToLsbMsbBytes");
	create_insn	(0X7D020AD6);
	create_insn	(0X7D020AD8);
	set_name	(0X7D020AD8,	"CRYS_RSA_Build_PubKey");
	create_insn	(x=0X7D020ADC);
	op_stkvar	(x,	1);
	create_insn	(0X7D020AF8);
	create_insn	(0X7D020B04);
	create_insn	(0X7D020B10);
	create_insn	(0X7D020B1C);
	create_insn	(0X7D020B2E);
	set_cmt	(0X7D020B46,	"sizeInBytes",	0);
	set_cmt	(0X7D020B48,	"in8_ptr",	0);
	set_cmt	(0X7D020B4A,	"out32_ptr",	0);
	set_cmt	(0X7D020B4C,	"sizeOutBuffBytes",	0);
	create_insn	(0X7D020B5A);
	set_cmt	(0X7D020B5E,	"sizeInBytes",	0);
	set_cmt	(0X7D020B60,	"out32_ptr",	0);
	set_cmt	(0X7D020B62,	"in8_ptr",	0);
	set_cmt	(0X7D020B64,	"sizeOutBuffBytes",	0);
	create_insn	(0X7D020B80);
	set_cmt	(0X7D020B84,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D020B94,	"CounterBuff_ptr",	0);
	create_insn	(0X7D020BB8);
	create_insn	(0X7D020BC2);
	set_cmt	(0X7D020BCC,	"Counter2Size",	0);
	create_insn	(0X7D020BCC);
	set_cmt	(0X7D020BCE,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D020BD0,	"Counter1Size",	0);
	set_cmt	(0X7D020BD2,	"CounterBuff1_ptr",	0);
	create_insn	(0X7D020BE6);
	make_array	(0X7D020C16,	0X2);
	create_insn	(0X7D020C18);
	set_name	(0X7D020C18,	"CRYS_RSA_Build_PrivKey");
	create_insn	(x=0X7D020C1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020C2A);
	op_stkvar	(x,	1);
	create_insn	(0X7D020C44);
	create_insn	(0X7D020C52);
	create_insn	(0X7D020C60);
	create_insn	(0X7D020C6E);
	create_insn	(0X7D020C82);
	create_insn	(x=0X7D020C96);
	op_hex		(x,	1);
	set_cmt	(0X7D020CB8,	"sizeInBytes",	0);
	set_cmt	(0X7D020CBA,	"in8_ptr",	0);
	create_insn	(x=0X7D020CBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020CBC,	"out32_ptr",	0);
	set_cmt	(0X7D020CBE,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020CCE,	"in8_ptr",	0);
	set_cmt	(0X7D020CD0,	"out32_ptr",	0);
	create_insn	(x=0X7D020CD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020CD4,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020CD8,	"sizeInBytes",	0);
	create_insn	(x=0X7D020CEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7D020CF6);
	set_cmt	(0X7D020CF8,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020D02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020D06,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020D0E);
	op_stkvar	(x,	1);
	create_insn	(0X7D020D2C);
	create_insn	(0X7D020D36);
	set_cmt	(0X7D020D40,	"Counter1Size",	0);
	create_insn	(0X7D020D40);
	set_cmt	(0X7D020D42,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D020D44,	"Counter2Size",	0);
	set_cmt	(0X7D020D46,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D020D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020D5A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020D72,	"sizeInBytes",	0);
	set_cmt	(0X7D020D74,	"out32_ptr",	0);
	set_cmt	(0X7D020D76,	"in8_ptr",	0);
	set_cmt	(0X7D020D78,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020D8A,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D020DA0,	"Counter2Size",	0);
	set_cmt	(0X7D020DA2,	"Counter1Size",	0);
	set_cmt	(0X7D020DA4,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D020DA6,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D020DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020DC4);
	op_stkvar	(x,	1);
	create_insn	(0X7D020DE4);
	create_insn	(0X7D020DE8);
	set_name	(0X7D020DE8,	"CRYS_RSA_Build_PrivKeyCRT");
	create_insn	(x=0X7D020DEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020DFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020E0C);
	op_stkvar	(x,	1);
	create_insn	(0X7D020E2A);
	create_insn	(0X7D020E38);
	create_insn	(0X7D020E46);
	create_insn	(0X7D020E50);
	create_insn	(0X7D020E5E);
	create_insn	(0X7D020E6C);
	create_insn	(0X7D020E76);
	create_insn	(x=0X7D020E86);
	op_hex		(x,	1);
	create_insn	(x=0X7D020E8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020E96,	"Counter2Size",	0);
	set_cmt	(0X7D020E98,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D020E98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020E9A,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D020E9C,	"Counter1Size",	0);
	set_cmt	(0X7D020EB0,	"Counter2Size",	0);
	set_cmt	(0X7D020EB2,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D020EB4,	"Counter1Size",	0);
	set_cmt	(0X7D020EB6,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D020EB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020ECA,	"Counter2Size",	0);
	create_insn	(x=0X7D020ECA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020ECC,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D020ECE,	"Counter1Size",	0);
	set_cmt	(0X7D020ED0,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D020ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020F00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F0C,	"sizeInBytes",	0);
	create_insn	(x=0X7D020F0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F0E,	"in8_ptr",	0);
	set_cmt	(0X7D020F10,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020F12,	"out32_ptr",	0);
	create_insn	(x=0X7D020F12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020F2A);
	op_stkvar	(x,	1);
	create_insn	(0X7D020F30);
	set_cmt	(0X7D020F34,	"in8_ptr",	0);
	create_insn	(x=0X7D020F36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F38,	"out32_ptr",	0);
	set_cmt	(0X7D020F3A,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020F3C,	"sizeInBytes",	0);
	set_cmt	(0X7D020F4C,	"in8_ptr",	0);
	create_insn	(x=0X7D020F4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F4E,	"out32_ptr",	0);
	create_insn	(x=0X7D020F50);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F52,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020F54,	"sizeInBytes",	0);
	set_cmt	(0X7D020F64,	"in8_ptr",	0);
	create_insn	(x=0X7D020F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020F66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F68,	"out32_ptr",	0);
	set_cmt	(0X7D020F6A,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D020F6C,	"sizeInBytes",	0);
	set_cmt	(0X7D020F7C,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D020F7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F80,	"out32_ptr",	0);
	set_cmt	(0X7D020F82,	"in8_ptr",	0);
	create_insn	(x=0X7D020F82);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F84,	"sizeInBytes",	0);
	set_cmt	(0X7D020F90,	"CounterSizeWords",	0);
	create_insn	(x=0X7D020F90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020F92,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020F92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020FA0,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020FA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020FAE,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020FAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020FBA,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020FBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D020FC8,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D020FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D020FD2);
	op_stkvar	(x,	1);
	create_insn	(0X7D020FFA);
	create_insn	(0X7D021004);
	create_insn	(x=0X7D02100E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021012);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021014);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021026,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D021026);
	op_stkvar	(x,	1);
	create_insn	(0X7D021052);
	create_insn	(0X7D02105C);
	create_insn	(x=0X7D021068);
	op_stkvar	(x,	1);
	make_array	(0X7D02109A,	0X2);
	create_insn	(0X7D02109C);
	set_name	(0X7D02109C,	"CRYS_RSA_Get_PubKey");
	create_insn	(x=0X7D0210AE);
	op_hex		(x,	1);
	create_insn	(0X7D0210C0);
	create_insn	(x=0X7D0210CE);
	op_hex		(x,	1);
	create_insn	(0X7D0210E0);
	create_insn	(0X7D0210EA);
	create_insn	(x=0X7D0210EC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02110A);
	create_insn	(0X7D021116);
	create_insn	(0X7D021122);
	create_insn	(x=0X7D021140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021154);
	op_stkvar	(x,	1);
	create_insn	(0X7D021160);
	create_insn	(0X7D021174);
	set_cmt	(0X7D021180,	"sizeInBytes",	0);
	set_cmt	(0X7D021182,	"in32_ptr",	0);
	create_insn	(x=0X7D021186);
	op_hex		(x,	1);
	set_cmt	(0X7D02118A,	"out8_ptr",	0);
	create_insn	(x=0X7D021196);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021198,	"in32_ptr",	0);
	set_cmt	(0X7D02119C,	"out8_ptr",	0);
	set_cmt	(0X7D0211A0,	"sizeInBytes",	0);
	create_insn	(x=0X7D0211A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0211AE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0211B8);
	create_insn	(0X7D0211D0);
	create_insn	(x=0X7D0211E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0211E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0211EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0211F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0211F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0211FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021200);
	op_stkvar	(x,	1);
	create_insn	(0X7D021220);
	create_insn	(0X7D02122A);
	create_insn	(0X7D021234);
	create_insn	(0X7D021240);
	create_insn	(0X7D02124A);
	create_insn	(0X7D021254);
	create_insn	(0X7D021260);
	create_insn	(0X7D02126C);
	create_insn	(0X7D021278);
	create_insn	(0X7D021284);
	create_insn	(0X7D021290);
	create_insn	(0X7D02129C);
	create_insn	(0X7D0212B0);
	create_insn	(x=0X7D0212DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0212FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021312);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02132A);
	op_stkvar	(x,	1);
	create_insn	(0X7D021342);
	set_cmt	(0X7D021348,	"dst_ptr",	0);
	set_cmt	(0X7D02134A,	"size",	0);
	set_cmt	(0X7D02134C,	"src_ptr",	0);
	set_cmt	(0X7D021354,	"size",	0);
	set_cmt	(0X7D021356,	"src_ptr",	0);
	set_cmt	(0X7D02135A,	"dst_ptr",	0);
	set_cmt	(0X7D021360,	"size",	0);
	set_cmt	(0X7D021362,	"src_ptr",	0);
	set_cmt	(0X7D021366,	"dst_ptr",	0);
	create_insn	(x=0X7D021366);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02136C,	"size",	0);
	set_cmt	(0X7D02136E,	"src_ptr",	0);
	set_cmt	(0X7D021372,	"dst_ptr",	0);
	create_insn	(x=0X7D021372);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021378,	"size",	0);
	set_cmt	(0X7D02137A,	"src_ptr",	0);
	set_cmt	(0X7D02137E,	"dst_ptr",	0);
	create_insn	(x=0X7D02137E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021398);
	op_stkvar	(x,	1);
	create_insn	(0X7D0213A0);
	set_name	(0X7D0213A0,	"SaSi_RsaSchemesEncrypt");
	create_insn	(x=0X7D0213A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0213AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0213B6,	"jumptable 7D021478 default case",	1);
	set_name	(0X7D0213B6,	"def_7D021478");
	create_insn	(0X7D0213C4);
	create_insn	(x=0X7D0213D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0213E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0213F2);
	op_stkvar	(x,	1);
	create_insn	(0X7D02140E);
	create_insn	(x=0X7D02141C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021452);
	op_stkvar	(x,	1);
	create_insn	(0X7D021468);
	set_cmt	(0X7D021472,	"switch 5 cases ",	0);
	create_insn	(0X7D021472);
	set_cmt	(0X7D021478,	"switch jump",	0);
	set_cmt	(0X7D02147C,	"jump table for switch statement",	0);
	create_byte	(0X7D02147C);
	set_name	(0X7D02147C,	"jpt_7D021478");
	create_byte	(0X7D02147D);
	create_byte	(0X7D02147E);
	create_byte	(0X7D02147F);
	create_byte	(0X7D021480);
	create_insn	(0X7D021482);
	set_cmt	(0X7D021494,	"jumptable 7D021478 case 4",	1);
	create_insn	(0X7D021494);
	create_insn	(x=0X7D0214A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0214EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02150A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021512);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021518,	"len",	0);
	set_cmt	(0X7D02151A,	"ptr2",	0);
	create_insn	(x=0X7D02151A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02151C,	"ptr1",	0);
	set_cmt	(0X7D021528,	"jumptable 7D021478 case 3",	1);
	create_insn	(0X7D021528);
	set_cmt	(0X7D02152E,	"jumptable 7D021478 case 2",	1);
	create_insn	(0X7D02152E);
	set_cmt	(0X7D021534,	"jumptable 7D021478 case 1",	1);
	create_insn	(0X7D021534);
	set_cmt	(0X7D02153A,	"jumptable 7D021478 case 5",	1);
	create_insn	(0X7D02153A);
	create_insn	(0X7D021540);
	set_name	(0X7D021540,	"SaSi_RsaSchemesDecrypt");
	create_insn	(x=0X7D021548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02154C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02155A,	"jumptable 7D02162A default case",	1);
	set_name	(0X7D02155A,	"def_7D02162A");
	create_insn	(0X7D02156A);
	create_insn	(0X7D02157A);
	create_insn	(x=0X7D02157C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02159C);
	op_stkvar	(x,	1);
	create_insn	(0X7D0215AC);
	create_insn	(0X7D0215BC);
	create_insn	(x=0X7D0215C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0215CA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0215E6);
	create_insn	(0X7D0215F0);
	create_insn	(0X7D0215FA);
	create_insn	(x=0X7D021610);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021624,	"switch 5 cases ",	0);
	create_insn	(0X7D021624);
	set_cmt	(0X7D02162A,	"switch jump",	0);
	set_cmt	(0X7D02162E,	"jump table for switch statement",	0);
	create_byte	(0X7D02162E);
	set_name	(0X7D02162E,	"jpt_7D02162A");
	create_byte	(0X7D02162F);
	create_byte	(0X7D021630);
	create_byte	(0X7D021631);
	create_byte	(0X7D021632);
	create_insn	(0X7D021634);
	create_insn	(x=0X7D021638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02163E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02166A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02166E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021676);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02168C,	"jumptable 7D02162A case 4",	1);
	create_insn	(0X7D02168C);
	create_insn	(0X7D02169C);
	create_insn	(x=0X7D0216AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0216C2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0216D2);
	create_insn	(x=0X7D0216E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0216F8,	"jumptable 7D02162A case 3",	1);
	create_insn	(0X7D0216F8);
	set_cmt	(0X7D021700,	"jumptable 7D02162A case 1",	1);
	create_insn	(0X7D021700);
	set_cmt	(0X7D021708,	"jumptable 7D02162A case 5",	1);
	create_insn	(0X7D021708);
	set_cmt	(0X7D021710,	"jumptable 7D02162A case 2",	1);
	create_insn	(0X7D021710);
	create_insn	(0X7D021718);
	set_cmt	(0X7D02171E,	"source",	0);
	create_insn	(x=0X7D021722);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021726,	"destination",	0);
	create_insn	(x=0X7D021726);
	op_stkvar	(x,	1);
	create_insn	(0X7D021730);
	create_insn	(0X7D021756);
	create_insn	(0X7D021762);
	create_insn	(0X7D02177E);
	create_insn	(0X7D02178A);
	create_insn	(0X7D021796);
	create_insn	(0X7D0217B4);
	create_insn	(0X7D0217C8);
	make_array	(0X7D02180A,	0X2);
	create_insn	(0X7D02180C);
	set_name	(0X7D02180C,	"RsaGenRndNonZeroVect");
	create_insn	(0X7D021874);
	create_insn	(0X7D021882);
	create_insn	(0X7D02188C);
	set_name	(0X7D02188C,	"SaSi_RsaEmsaPkcs1v15Encode");
	create_insn	(0X7D0218B4);
	create_insn	(0X7D0218BE);
	create_insn	(x=0X7D0218CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0218D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0218E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0218EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0218F6,	"source",	0);
	set_cmt	(0X7D0218F8,	"num",	0);
	set_cmt	(0X7D0218FA,	"destination",	0);
	create_insn	(x=0X7D021900);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021902,	"ptr2",	0);
	set_cmt	(0X7D021908,	"ptr1",	0);
	set_cmt	(0X7D02190C,	"len",	0);
	create_dword	(x=0X7D021918);
	op_plain_offset	(x,	0,	0X7D02189C);
	op_plain_offset	(x,	128,	0X7D02189C);
	create_insn	(0X7D02191C);
	make_array	(0X7D02191E,	0X2);
	create_insn	(0X7D021920);
	set_name	(0X7D021920,	"CRYS_RSA_PRIM_Encrypt");
	create_insn	(0X7D021940);
	create_insn	(0X7D02194A);
	create_insn	(x=0X7D02194E);
	op_stkvar	(x,	1);
	create_insn	(0X7D021964);
	create_insn	(0X7D021970);
	create_insn	(0X7D02197C);
	create_insn	(0X7D021988);
	create_insn	(x=0X7D0219A6);
	op_hex		(x,	1);
	set_cmt	(0X7D0219AE,	"in8_ptr",	0);
	set_cmt	(0X7D0219B0,	"sizeInBytes",	0);
	set_cmt	(0X7D0219B2,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D0219B4,	"out32_ptr",	0);
	create_insn	(x=0X7D0219C2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0219DA);
	set_cmt	(0X7D0219E0,	"Counter1SizeWords",	0);
	set_cmt	(0X7D0219E2,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D0219E4,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D021A06,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D021A08,	"sizeInBytes",	0);
	set_cmt	(0X7D021A0A,	"in32_ptr",	0);
	set_cmt	(0X7D021A0E,	"out8_ptr",	0);
	create_insn	(x=0X7D021A0E);
	op_stkvar	(x,	1);
	create_insn	(0X7D021A1C);
	set_name	(0X7D021A1C,	"CRYS_RSA_PRIM_Decrypt");
	create_insn	(0X7D021A3E);
	create_insn	(0X7D021A48);
	create_insn	(x=0X7D021A4A);
	op_stkvar	(x,	1);
	create_insn	(0X7D021A60);
	create_insn	(0X7D021A6A);
	create_insn	(0X7D021A76);
	create_insn	(0X7D021A82);
	create_insn	(x=0X7D021A9C);
	op_hex		(x,	1);
	set_cmt	(0X7D021AA6,	"in8_ptr",	0);
	set_cmt	(0X7D021AA8,	"sizeInBytes",	0);
	set_cmt	(0X7D021AAA,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D021AAC,	"out32_ptr",	0);
	create_insn	(x=0X7D021ABA);
	op_stkvar	(x,	1);
	create_insn	(0X7D021AD2);
	set_cmt	(0X7D021AD8,	"Counter1SizeWords",	0);
	set_cmt	(0X7D021ADA,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D021ADC,	"CounterBuff1_ptr",	0);
	create_insn	(0X7D021AF0);
	set_cmt	(0X7D021AFE,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D021B00,	"sizeInBytes",	0);
	set_cmt	(0X7D021B02,	"in32_ptr",	0);
	set_cmt	(0X7D021B06,	"out8_ptr",	0);
	create_insn	(x=0X7D021B06);
	op_stkvar	(x,	1);
	create_insn	(0X7D021B14);
	create_insn	(x=0X7D021B1E);
	op_stkvar	(x,	1);
	create_insn	(0X7D021B40);
	create_insn	(0X7D021B4E);
	create_insn	(x=0X7D021B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021B6C);
	op_hex		(x,	1);
	create_insn	(x=0X7D021B76);
	op_hex		(x,	1);
	create_insn	(x=0X7D021BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021BD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021BEA,	"OperationMode",	0);
	set_cmt	(0X7D021C08,	"ContextID_ptr",	0);
	create_insn	(x=0X7D021C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021C16);
	op_stkvar	(x,	1);
	create_insn	(0X7D021C2C);
	create_insn	(0X7D021C3A);
	create_insn	(0X7D021C40);
	create_insn	(x=0X7D021C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021C4C);
	op_stkvar	(x,	1);
	create_insn	(0X7D021C72);
	create_insn	(0X7D021C7C);
	set_cmt	(0X7D021C86,	"len",	0);
	set_cmt	(0X7D021C8A,	"ptr2",	0);
	set_cmt	(0X7D021C8C,	"ptr1",	0);
	make_array	(0X7D021CB2,	0X2);
	create_dword	(x=0X7D021CB4);
	op_plain_offset	(x,	0,	0X7D021B26);
	op_plain_offset	(x,	128,	0X7D021B26);
	create_dword	(0X7D021CB8);
	create_dword	(0X7D021CBC);
	create_insn	(0X7D021CC0);
	create_insn	(0X7D021CF0);
	set_cmt	(0X7D021D28,	"ptr1",	0);
	create_insn	(0X7D021D34);
	create_insn	(0X7D021D3E);
	set_cmt	(0X7D021D48,	"ContextID_ptr",	0);
	create_insn	(0X7D021D48);
	create_insn	(0X7D021D58);
	create_insn	(0X7D021D92);
	create_insn	(0X7D021D9C);
	create_insn	(0X7D021DA6);
	create_insn	(x=0X7D021DBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021DCE,	"CounterSize",	0);
	set_cmt	(0X7D021DD0,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D021DF6,	"HashResultBuff",	0);
	create_insn	(0X7D021DF6);
	set_cmt	(0X7D021DFA,	"ContextID_ptr",	0);
	create_insn	(0X7D021E0A);
	create_insn	(0X7D021E14);
	create_insn	(x=0X7D021E22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021E32,	"n",	0);
	set_cmt	(0X7D021E34,	"m2",	0);
	set_cmt	(0X7D021E36,	"m1",	0);
	create_insn	(0X7D021E4C);
	create_insn	(x=0X7D021E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021E60);
	op_stkvar	(x,	1);
	create_insn	(0X7D021E6C);
	create_insn	(0X7D021E88);
	set_name	(0X7D021E88,	"CRYS_RSA_GenerateVectorInRangeX931");
	create_insn	(x=0X7D021EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021EDA);
	op_hex		(x,	1);
	create_insn	(x=0X7D021EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021EF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D021F06);
	op_hex		(x,	1);
	create_insn	(0X7D021F12);
	create_insn	(0X7D021F30);
	create_insn	(0X7D021F34);
	create_insn	(0X7D021F3E);
	create_insn	(0X7D021F4C);
	create_insn	(x=0X7D021F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021F5E);
	op_stkvar	(x,	1);
	create_insn	(0X7D021F7A);
	create_insn	(0X7D021F84);
	create_insn	(0X7D021F92);
	create_insn	(x=0X7D021FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021FC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021FD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D021FD8,	"in8_ptr",	0);
	set_cmt	(0X7D021FDA,	"out32_ptr",	0);
	set_cmt	(0X7D021FDC,	"sizeInBytes",	0);
	set_cmt	(0X7D021FDE,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D021FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D021FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022002);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022018);
	op_stkvar	(x,	1);
	create_insn	(0X7D022022);
	create_insn	(0X7D022030);
	create_insn	(0X7D02203E);
	set_cmt	(0X7D022040,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D022044,	"CounterSizeWords",	0);
	create_insn	(x=0X7D02204A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022078);
	op_hex		(x,	1);
	create_insn	(x=0X7D022080);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022084,	"ptr2",	0);
	set_cmt	(0X7D022088,	"ptr1",	0);
	create_insn	(x=0X7D022092);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022096);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02209A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0220FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02210C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02213A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02214C);
	create_insn	(x=0X7D022156);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02216A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02219A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0221AE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0221B4);
	set_name	(0X7D0221B4,	"CRYS_RSA_KG_GenerateKeyPairCRT");
	create_insn	(x=0X7D0221BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0221BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0221C2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0221DC);
	create_insn	(0X7D0221E6);
	create_insn	(0X7D0221F2);
	create_insn	(0X7D0221FE);
	create_insn	(0X7D02220A);
	create_insn	(x=0X7D02220C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02221A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02222A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022236);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02223C,	"in8_ptr",	0);
	set_cmt	(0X7D02223E,	"out32_ptr",	0);
	set_cmt	(0X7D022240,	"sizeInBytes",	0);
	set_cmt	(0X7D022242,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D022254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02227C);
	op_stkvar	(x,	1);
	create_insn	(0X7D022288);
	set_cmt	(0X7D02228A,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022292);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0222C2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0222CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0222CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0222E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0222F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022324);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022326,	"CounterSizeWords",	0);
	set_cmt	(0X7D022328,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022330);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022332,	"CounterSizeWords",	0);
	set_cmt	(0X7D022338,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022340);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022342,	"CounterSizeWords",	0);
	set_cmt	(0X7D022348,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022350);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022352,	"CounterSizeWords",	0);
	set_cmt	(0X7D022358,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022360);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022362,	"CounterSizeWords",	0);
	set_cmt	(0X7D022368,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022392);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0223A6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0223AC);
	make_array	(0X7D0223B6,	0X2);
	create_insn	(0X7D0223B8);
	create_insn	(x=0X7D0223C2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0223E4);
	create_insn	(0X7D0223F2);
	create_insn	(x=0X7D022400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02242A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022442);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022450);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02246E,	"OperationMode",	0);
	set_cmt	(0X7D022496,	"ContextID_ptr",	0);
	create_insn	(x=0X7D022498);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02249E);
	op_stkvar	(x,	1);
	create_insn	(0X7D0224B4);
	create_insn	(0X7D0224C2);
	create_insn	(0X7D0224DA);
	create_insn	(x=0X7D0224E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0224F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022508,	"len",	0);
	set_cmt	(0X7D02250C,	"ptr2",	0);
	set_cmt	(0X7D02250E,	"ptr1",	0);
	create_insn	(0X7D022528);
	create_insn	(0X7D022532);
	create_insn	(0X7D02253A);
	create_insn	(0X7D022544);
	create_dword	(x=0X7D02254C);
	op_plain_offset	(x,	0,	0X7D0223CA);
	op_plain_offset	(x,	128,	0X7D0223CA);
	create_dword	(0X7D022550);
	create_dword	(0X7D022554);
	create_insn	(0X7D022558);
	create_insn	(0X7D02258A);
	set_cmt	(0X7D0225CA,	"ptr1",	0);
	create_insn	(0X7D0225D4);
	create_insn	(0X7D0225DE);
	create_insn	(0X7D0225E8);
	set_cmt	(0X7D0225EC,	"ContextID_ptr",	0);
	make_array	(0X7D0225FA,	0X2);
	create_insn	(0X7D0225FC);
	create_insn	(0X7D022640);
	create_insn	(0X7D02264A);
	create_insn	(0X7D022692);
	create_insn	(0X7D02269C);
	create_insn	(0X7D0226A6);
	create_insn	(x=0X7D0226BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0226E0);
	set_cmt	(0X7D0226E8,	"HashResultBuff",	0);
	set_cmt	(0X7D0226EA,	"ContextID_ptr",	0);
	create_insn	(0X7D0226FC);
	create_insn	(x=0X7D022706);
	op_stkvar	(x,	1);
	make_array	(0X7D02271E,	0X2);
	create_insn	(0X7D022720);
	create_insn	(x=0X7D022726);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02272E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02273A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02273E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022744);
	op_stkvar	(x,	1);
	create_insn	(0X7D022754);
	create_insn	(0X7D022774);
	set_name	(0X7D022774,	"_DX_DH_GeneratePubPrv");
	create_insn	(x=0X7D02277C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022790);
	op_stkvar	(x,	1);
	create_insn	(0X7D0227AE);
	create_insn	(0X7D0227BC);
	create_insn	(x=0X7D0227BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0227E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022814);
	op_stkvar	(x,	1);
	create_insn	(0X7D022826);
	create_insn	(0X7D022834);
	create_insn	(x=0X7D02283E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022858);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02285C,	"Counter2Size",	0);
	set_cmt	(0X7D02285E,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D02285E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022862,	"Counter1Size",	0);
	set_cmt	(0X7D022864,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D022866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022870);
	op_stkvar	(x,	1);
	create_insn	(0X7D022880);
	create_insn	(x=0X7D022882);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022888);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02288C,	"Counter2Size",	0);
	set_cmt	(0X7D022892,	"Counter1Size",	0);
	set_cmt	(0X7D022894,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D022898,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D0228A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0228B8);
	set_cmt	(0X7D0228BC,	"size",	0);
	create_insn	(x=0X7D0228BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0228C2,	"src_ptr",	0);
	set_cmt	(0X7D0228C4,	"dst_ptr",	0);
	create_insn	(x=0X7D0228C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0228D0,	"CounterSize",	0);
	set_cmt	(0X7D0228D2,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D0228D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0228FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02290A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02291C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022932);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02293E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022948,	"CounterSize",	0);
	create_insn	(0X7D022948);
	set_cmt	(0X7D02294A,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D02294A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022954,	"dst_ptr",	0);
	create_insn	(x=0X7D022954);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022956,	"size",	0);
	set_cmt	(0X7D022958,	"src_ptr",	0);
	create_insn	(x=0X7D022958);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022962,	"CounterSize",	0);
	set_cmt	(0X7D022964,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022964);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02296C,	"rndContext_ptr",	0);
	set_cmt	(0X7D02296E,	"rndVect_ptr",	0);
	set_cmt	(0X7D022970,	"maxVect_ptr",	0);
	create_insn	(x=0X7D022970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02298C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022994);
	op_stkvar	(x,	1);
	create_insn	(0X7D02299C);
	create_insn	(0X7D0229A6);
	create_insn	(0X7D0229B0);
	create_insn	(x=0X7D0229B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0229BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0229C0,	"rndSizeInBits",	0);
	set_cmt	(0X7D0229C2,	"maxVect_ptr",	0);
	create_insn	(x=0X7D0229C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0229C4,	"rndContext_ptr",	0);
	set_cmt	(0X7D0229CA,	"rndVect_ptr",	0);
	set_cmt	(0X7D0229D6,	"src_ptr",	0);
	set_cmt	(0X7D0229D8,	"size",	0);
	set_cmt	(0X7D0229DA,	"dst_ptr",	0);
	create_insn	(x=0X7D0229DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0229E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0229E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0229E8,	"Exponent_ptr",	0);
	create_insn	(x=0X7D0229E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0229EA,	"UserPubKey_ptr",	0);
	create_insn	(x=0X7D0229EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0229EC,	"ExponentSize",	0);
	set_cmt	(0X7D0229EE,	"Modulus_ptr",	0);
	set_cmt	(0X7D0229F0,	"ModulusSize",	0);
	create_insn	(x=0X7D0229F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0229FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A14);
	op_stkvar	(x,	1);
	create_insn	(0X7D022A1C);
	create_insn	(x=0X7D022A26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022A28,	"src_ptr",	0);
	set_cmt	(0X7D022A2A,	"dst_ptr",	0);
	create_insn	(x=0X7D022A2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022A2C,	"size",	0);
	create_insn	(0X7D022A34);
	create_insn	(x=0X7D022A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A5E);
	op_hex		(x,	1);
	create_insn	(x=0X7D022A66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A72);
	op_hex		(x,	1);
	create_insn	(x=0X7D022A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A8C);
	op_stkvar	(x,	1);
	create_insn	(0X7D022A92);
	create_insn	(x=0X7D022A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022AAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022AB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022ACA,	"rndSizeInBits",	0);
	set_cmt	(0X7D022ACC,	"rndContext_ptr",	0);
	create_insn	(x=0X7D022ACE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022AD2,	"maxVect_ptr",	0);
	set_cmt	(0X7D022AD4,	"rndVect_ptr",	0);
	create_insn	(x=0X7D022AE2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022AE4,	"src_ptr",	0);
	create_insn	(x=0X7D022AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022AE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022AEC,	"dst_ptr",	0);
	create_insn	(x=0X7D022AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022AF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022AFA,	"size",	0);
	make_array	(0X7D022B02,	0X2);
	create_insn	(0X7D022B04);
	set_name	(0X7D022B04,	"CRYS_DH_GetSecretKey");
	create_insn	(x=0X7D022B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022B4E);
	op_hex		(x,	1);
	set_cmt	(0X7D022B5E,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D022B5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D022B68);
	create_insn	(x=0X7D022B76);
	op_hex		(x,	1);
	create_insn	(x=0X7D022B8A);
	op_hex		(x,	1);
	create_insn	(x=0X7D022BA2);
	op_hex		(x,	1);
	set_cmt	(0X7D022BAE,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D022BAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BB0,	"Counter2Size",	0);
	create_insn	(x=0X7D022BBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BBE,	"A_ptr",	0);
	set_cmt	(0X7D022BC0,	"B_ptr",	0);
	create_insn	(x=0X7D022BC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BC2,	"sizeA",	0);
	set_cmt	(0X7D022BC4,	"Res_ptr",	0);
	create_insn	(x=0X7D022BC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BC6,	"sizeB",	0);
	set_cmt	(0X7D022BCC,	"ModulusSize",	0);
	create_insn	(x=0X7D022BCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BCE,	"ExponentSize",	0);
	set_cmt	(0X7D022BD0,	"Modulus_ptr",	0);
	create_insn	(x=0X7D022BD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BD2,	"Exponent_ptr",	0);
	create_insn	(x=0X7D022BD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BD4,	"UserPubKey_ptr",	0);
	create_insn	(x=0X7D022BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022BF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BFA,	"Exponent_ptr",	0);
	create_insn	(0X7D022BFA);
	set_cmt	(0X7D022BFC,	"ModulusSize",	0);
	create_insn	(x=0X7D022BFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022BFE,	"ExponentSize",	0);
	set_cmt	(0X7D022C00,	"Modulus_ptr",	0);
	create_insn	(x=0X7D022C00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C02,	"UserPubKey_ptr",	0);
	create_insn	(x=0X7D022C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C24,	"Counter1Size",	0);
	set_cmt	(0X7D022C26,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D022C26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C28,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D022C28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C2E,	"Counter2Size",	0);
	create_insn	(0X7D022C44);
	set_name	(0X7D022C44,	"CC_DhX942GetSecretData");
	create_insn	(x=0X7D022C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C62);
	op_stkvar	(x,	1);
	create_insn	(0X7D022C74);
	set_cmt	(0X7D022C88,	"KeyingData_ptr",	0);
	create_insn	(x=0X7D022C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C94,	"tmpPrimeData_ptr",	0);
	create_insn	(x=0X7D022C94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C96,	"SecretKey_ptr",	0);
	create_insn	(x=0X7D022C96);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022C9A,	"derivation_mode",	0);
	create_insn	(x=0X7D022C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022C9C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022CA0,	"SecretKeySize_ptr",	0);
	create_insn	(x=0X7D022CA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022CA2,	"KeyingDataSizeBytes",	0);
	create_insn	(x=0X7D022CA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022CAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022CB0,	"ZZSecretSize",	0);
	create_insn	(x=0X7D022CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022CC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022CC4,	"KDFhashMode",	0);
	create_insn	(x=0X7D022CC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022CDC,	"ZZSecret_ptr",	0);
	set_cmt	(0X7D022CDE,	"OtherInfo_ptr",	0);
	create_insn	(x=0X7D022CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022CF6);
	op_stkvar	(x,	1);
	make_array	(0X7D022CFA,	0X2);
	create_dword	(x=0X7D022CFC);
	op_plain_offset	(x,	0,	0X7D022CC6);
	op_plain_offset	(x,	128,	0X7D022CC6);
	create_insn	(0X7D022D00);
	set_name	(0X7D022D00,	"CC_DhX942HybridGetSecretData");
	create_insn	(x=0X7D022D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D30);
	op_stkvar	(x,	1);
	create_insn	(0X7D022D3C);
	create_insn	(x=0X7D022D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D54);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D5E,	"SecretKeySize_ptr",	0);
	create_insn	(x=0X7D022D5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D62,	"tmpPrimeData_ptr",	0);
	create_insn	(x=0X7D022D62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D64,	"Prime_ptr",	0);
	create_insn	(x=0X7D022D64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D66,	"ServerPubKeySize",	0);
	set_cmt	(0X7D022D68,	"PrimeSize",	0);
	create_insn	(x=0X7D022D68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D6A,	"ServerPubKey_ptr",	0);
	create_insn	(x=0X7D022D6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D6C,	"tmpPubKey_ptr",	0);
	create_insn	(x=0X7D022D6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D70,	"SecretKey_ptr",	0);
	create_insn	(x=0X7D022D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D90,	"ServerPubKeySize",	0);
	create_insn	(x=0X7D022D92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D94,	"ClientPrvKeySize",	0);
	set_cmt	(0X7D022D96,	"PrimeSize",	0);
	create_insn	(x=0X7D022D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022D98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022D9E,	"tmpPrimeData_ptr",	0);
	create_insn	(x=0X7D022D9E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DA0,	"Prime_ptr",	0);
	create_insn	(x=0X7D022DA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DA2,	"SecretKey_ptr",	0);
	create_insn	(x=0X7D022DA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DA4,	"tmpPubKey_ptr",	0);
	create_insn	(x=0X7D022DA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DA8,	"ClientPrvKey_ptr",	0);
	create_insn	(x=0X7D022DA8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DAA,	"ServerPubKey_ptr",	0);
	create_insn	(x=0X7D022DAA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DAC,	"SecretKeySize_ptr",	0);
	create_insn	(x=0X7D022DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DD6,	"KDFhashMode",	0);
	create_insn	(x=0X7D022DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022DEE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DF0,	"derivation_mode",	0);
	create_insn	(x=0X7D022DF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DF2,	"KeyingDataSizeBytes",	0);
	create_insn	(x=0X7D022DF2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DF4,	"KeyingData_ptr",	0);
	create_insn	(x=0X7D022DF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022DF6,	"ZZSecret_ptr",	0);
	set_cmt	(0X7D022DF8,	"OtherInfo_ptr",	0);
	create_insn	(x=0X7D022DF8);
	op_stkvar	(x,	1);
	make_array	(0X7D022E02,	0X2);
	create_dword	(x=0X7D022E04);
	op_plain_offset	(x,	0,	0X7D022DD8);
	op_plain_offset	(x,	128,	0X7D022DD8);
	create_insn	(0X7D022E08);
	set_name	(0X7D022E08,	"CRYS_DH_CheckPubKey");
	create_insn	(0X7D022E1A);
	create_insn	(x=0X7D022E1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022E20);
	op_stkvar	(x,	1);
	create_insn	(0X7D022E40);
	create_insn	(0X7D022E52);
	create_insn	(x=0X7D022E62);
	op_stkvar	(x,	1);
	create_insn	(0X7D022E76);
	create_insn	(x=0X7D022E78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022E90,	"sizeInBytes",	0);
	set_cmt	(0X7D022E92,	"in8_ptr",	0);
	set_cmt	(0X7D022E94,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D022E96,	"out32_ptr",	0);
	create_insn	(x=0X7D022EA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022EA2,	"in8_ptr",	0);
	set_cmt	(0X7D022EA4,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D022EAA,	"sizeInBytes",	0);
	set_cmt	(0X7D022EAC,	"out32_ptr",	0);
	create_insn	(x=0X7D022EBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022EC8,	"sizeInBytes",	0);
	create_insn	(x=0X7D022EC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022ECA,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D022ECC,	"in8_ptr",	0);
	create_insn	(x=0X7D022ECC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022ECE,	"out32_ptr",	0);
	create_insn	(x=0X7D022ECE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022EE0,	"CounterSizeWords",	0);
	set_cmt	(0X7D022EE2,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D022EF4,	"CounterSizeWords",	0);
	set_cmt	(0X7D022EF6,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022F00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022F02,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022F02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022F0E,	"CounterSizeWords",	0);
	create_insn	(x=0X7D022F22);
	op_hex		(x,	1);
	create_insn	(0X7D022F42);
	create_insn	(0X7D022F4C);
	set_cmt	(0X7D022F56,	"CounterSizeWords",	0);
	create_insn	(0X7D022F56);
	set_cmt	(0X7D022F58,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022F58);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022F62,	"CounterSizeWords",	0);
	create_insn	(0X7D022F62);
	set_cmt	(0X7D022F64,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D022F6E,	"CounterSizeWords",	0);
	create_insn	(0X7D022F6E);
	set_cmt	(0X7D022F70,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D022F7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022F7C,	"Counter1SizeWords",	0);
	set_cmt	(0X7D022F7E,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D022F80,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D022F86,	"Counter2SizeWords",	0);
	create_insn	(x=0X7D022F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D022FE2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D022FE8,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D022FEE,	"Counter1SizeWords",	0);
	set_cmt	(0X7D022FF0,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D023008,	"a1",	0);
	create_insn	(0X7D023008);
	set_name	(0X7D023008,	"KdfHashUnalignUpdate");
	create_insn	(x=0X7D02300E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023014);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02301A,	"ptr1",	0);
	set_cmt	(0X7D023020,	"len",	0);
	set_cmt	(0X7D023028,	"DataInSize",	0);
	set_cmt	(0X7D02302A,	"DataIn_ptr",	0);
	set_cmt	(0X7D02302C,	"ContextID_ptr",	0);
	set_cmt	(0X7D02303C,	"a2",	0);
	set_cmt	(0X7D023044,	"a1",	0);
	create_insn	(0X7D023058);
	set_cmt	(0X7D023068,	"DataInSize",	0);
	create_insn	(0X7D023068);
	set_cmt	(0X7D02306A,	"DataIn_ptr",	0);
	set_cmt	(0X7D02306C,	"ContextID_ptr",	0);
	create_insn	(0X7D023076);
	set_cmt	(0X7D023078,	"ptr1",	0);
	set_cmt	(0X7D02307A,	"ptr2",	0);
	set_cmt	(0X7D02307C,	"len",	0);
	make_array	(0X7D02308A,	0X2);
	create_insn	(0X7D02308C);
	set_name	(0X7D02308C,	"CRYS_KDF_KeyDerivFunc");
	create_insn	(x=0X7D023096);
	op_stkvar	(x,	1);
	create_insn	(0X7D0230B8);
	create_insn	(x=0X7D0230BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0230F0);
	op_stkvar	(x,	1);
	create_insn	(0X7D02310A);
	create_insn	(x=0X7D02310E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023122,	"switch 5 cases ",	0);
	set_cmt	(0X7D023128,	"switch jump",	0);
	set_cmt	(0X7D02312C,	"jump table for switch statement",	0);
	create_byte	(0X7D02312C);
	set_name	(0X7D02312C,	"jpt_7D023128");
	create_byte	(0X7D02312D);
	create_byte	(0X7D02312E);
	create_byte	(0X7D02312F);
	create_byte	(0X7D023130);
	create_insn	(0X7D023132);
	set_cmt	(0X7D023140,	"jumptable 7D023128 case 4",	1);
	create_insn	(0X7D023140);
	create_insn	(x=0X7D023146);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02314A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02315E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023162);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02316A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02316E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023176);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02317A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02317E,	"OperationMode",	0);
	create_insn	(x=0X7D02317E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023180,	"ContextID_ptr",	0);
	create_insn	(x=0X7D02318E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023192);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023196);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023198);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0231A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0231AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0231BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0231E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0231F2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0231F4,	"DataInSize",	0);
	set_cmt	(0X7D0231F8,	"DataIn_ptr",	0);
	set_cmt	(0X7D0231FA,	"ContextID_ptr",	0);
	set_cmt	(0X7D023204,	"HashResultBuff",	0);
	create_insn	(x=0X7D023204);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023206,	"ContextID_ptr",	0);
	create_insn	(x=0X7D023210);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023212,	"source",	0);
	create_insn	(x=0X7D023212);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02321A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02321C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02322A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02322C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02322E,	"destination",	0);
	set_cmt	(0X7D023232,	"num",	0);
	create_insn	(x=0X7D02323A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023258);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02325E,	"jumptable 7D023128 case 3",	1);
	create_insn	(0X7D02325E);
	create_insn	(x=0X7D023264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023268);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02326C,	"jumptable 7D023128 case 2",	1);
	create_insn	(0X7D02326C);
	create_insn	(x=0X7D023272);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023276);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02327A,	"jumptable 7D023128 case 1",	1);
	create_insn	(0X7D02327A);
	create_insn	(x=0X7D023280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023284);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023288,	"jumptable 7D023128 case 0",	1);
	create_insn	(0X7D023288);
	create_insn	(x=0X7D02328E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023292);
	op_stkvar	(x,	1);
	create_insn	(0X7D023296);
	create_insn	(0X7D0232C0);
	create_insn	(0X7D0232D6);
	create_insn	(x=0X7D0232DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0232DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0232F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0232F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0232F6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0232FA,	"jumptable 7D023128 default case",	1);
	create_insn	(0X7D0232FA);
	set_name	(0X7D0232FA,	"def_7D023128");
	create_insn	(0X7D023304);
	set_name	(0X7D023304,	"_DX_ECPKI_BuildPublKey");
	create_insn	(x=0X7D02330A);
	op_stkvar	(x,	1);
	create_insn	(0X7D023326);
	create_insn	(0X7D023334);
	create_insn	(0X7D023342);
	create_insn	(x=0X7D023350);
	op_stkvar	(x,	1);
	create_insn	(0X7D02336C);
	create_insn	(0X7D023380);
	create_insn	(x=0X7D02339E);
	op_hex		(x,	1);
	create_insn	(x=0X7D0233AE);
	op_hex		(x,	1);
	create_insn	(0X7D0233D0);
	create_insn	(x=0X7D0233E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0233EE,	"sizeInBytes",	0);
	set_cmt	(0X7D0233F0,	"out32_ptr",	0);
	set_cmt	(0X7D0233F2,	"in8_ptr",	0);
	set_cmt	(0X7D0233F4,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D02340A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02341E);
	set_cmt	(0X7D023422,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D023428,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D02342A,	"Counter2SizeWords",	0);
	set_cmt	(0X7D02342C,	"Counter1SizeWords",	0);
	create_insn	(0X7D023440);
	create_insn	(x=0X7D023444);
	op_hex		(x,	1);
	set_cmt	(0X7D02344A,	"ptr2",	0);
	set_cmt	(0X7D02344C,	"len",	0);
	set_cmt	(0X7D023450,	"ptr1",	0);
	set_cmt	(0X7D023458,	"pointCtl",	0);
	set_cmt	(0X7D02345A,	"pPublKey",	0);
	create_insn	(x=0X7D023466);
	op_stkvar	(x,	1);
	create_insn	(0X7D023476);
	set_cmt	(0X7D02347E,	"out32_ptr",	0);
	set_cmt	(0X7D023480,	"in8_ptr",	0);
	set_cmt	(0X7D023482,	"sizeInBytes",	0);
	set_cmt	(0X7D023484,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D023486);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02348E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023498,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D02349A,	"Counter2SizeWords",	0);
	set_cmt	(0X7D02349C,	"Counter1SizeWords",	0);
	set_cmt	(0X7D02349E,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D0234AA,	"PublKeyDbBuff",	0);
	create_insn	(0X7D0234AA);
	set_cmt	(0X7D0234AC,	"pTempBuff",	0);
	create_insn	(x=0X7D0234AC);
	op_stkvar	(x,	1);
	make_array	(0X7D0234BA,	0X2);
	create_insn	(0X7D0234BC);
	set_name	(0X7D0234BC,	"CRYS_ECPKI_ExportPublKey");
	create_insn	(0X7D0234E2);
	create_insn	(0X7D0234EE);
	create_insn	(x=0X7D0234FE);
	op_hex		(x,	1);
	create_insn	(0X7D023510);
	create_insn	(0X7D02351C);
	create_insn	(x=0X7D02352C);
	op_hex		(x,	1);
	create_insn	(0X7D023550);
	create_insn	(0X7D02355C);
	create_insn	(x=0X7D023572);
	op_hex		(x,	1);
	create_insn	(x=0X7D023576);
	op_hex		(x,	1);
	set_cmt	(0X7D02357E,	"in32_ptr",	0);
	set_cmt	(0X7D023586,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D023588,	"sizeInBytes",	0);
	set_cmt	(0X7D02358A,	"out8_ptr",	0);
	create_insn	(0X7D0235A8);
	create_insn	(x=0X7D0235B0);
	op_hex		(x,	1);
	set_cmt	(0X7D0235B8,	"sizeInBytes",	0);
	set_cmt	(0X7D0235BC,	"in32_ptr",	0);
	create_insn	(0X7D0235D2);
	set_cmt	(0X7D0235D6,	"in32_ptr",	0);
	set_cmt	(0X7D0235DA,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D0235DC,	"out8_ptr",	0);
	set_cmt	(0X7D0235DE,	"sizeInBytes",	0);
	create_insn	(0X7D0235EC);
	set_name	(0X7D0235EC,	"CRYS_ECPKI_BuildPrivKey");
	create_insn	(0X7D023610);
	create_insn	(0X7D02361A);
	create_insn	(0X7D023624);
	create_insn	(0X7D02362E);
	create_insn	(x=0X7D023650);
	op_hex		(x,	1);
	set_cmt	(0X7D023658,	"level_ok",	0);
	create_insn	(x=0X7D02365A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02365E,	"level",	0);
	create_insn	(x=0X7D023660);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023662,	"line",	0);
	set_cmt	(0X7D023666,	"fmt",	0);
	create_insn	(x=0X7D023666);
	op_stkvar	(x,	1);
	create_insn	(0X7D02367A);
	set_cmt	(0X7D02367E,	"in8_ptr",	0);
	set_cmt	(0X7D023680,	"out32_ptr",	0);
	set_cmt	(0X7D023682,	"sizeInBytes",	0);
	set_cmt	(0X7D023684,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D023698,	"CounterBuff_ptr",	0);
	create_insn	(0X7D0236B8);
	set_cmt	(0X7D0236BC,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D0236C0,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D0236C2,	"Counter1SizeWords",	0);
	set_cmt	(0X7D0236CE,	"ptr2",	0);
	create_insn	(0X7D0236CE);
	set_cmt	(0X7D0236D0,	"len",	0);
	set_cmt	(0X7D0236D4,	"ptr1",	0);
	create_dword	(x=0X7D0236E8);
	op_plain_offset	(x,	0,	0X7D023668);
	op_plain_offset	(x,	128,	0X7D023668);
	create_dword	(x=0X7D0236EC);
	op_plain_offset	(x,	0,	0X7D02366E);
	op_plain_offset	(x,	128,	0X7D02366E);
	create_insn	(0X7D0236F0);
	set_name	(0X7D0236F0,	"CRYS_ECDSA_VerifyInit");
	create_insn	(0X7D023708);
	create_insn	(0X7D023712);
	create_insn	(0X7D023728);
	create_insn	(0X7D023732);
	set_cmt	(0X7D02375A,	"OperationMode",	0);
	set_cmt	(0X7D023764,	"ContextID_ptr",	0);
	set_cmt	(0X7D023770,	"ptr2",	0);
	set_cmt	(0X7D023772,	"len",	0);
	set_cmt	(0X7D023776,	"ptr1",	0);
	create_insn	(0X7D02378A);
	make_array	(0X7D0237A2,	0X2);
	create_dword	(x=0X7D0237A4);
	op_plain_offset	(x,	0,	0X7D0236F8);
	op_plain_offset	(x,	128,	0X7D0236F8);
	create_dword	(0X7D0237A8);
	create_dword	(0X7D0237AC);
	create_insn	(0X7D0237B0);
	set_name	(0X7D0237B0,	"CRYS_ECDSA_VerifyUpdate");
	create_insn	(0X7D0237D0);
	create_insn	(0X7D0237DA);
	create_insn	(0X7D0237F4);
	create_insn	(0X7D023804);
	set_cmt	(0X7D02383C,	"ContextID_ptr",	0);
	create_insn	(0X7D02383C);
	set_cmt	(0X7D02384E,	"ptr1",	0);
	create_insn	(0X7D02384E);
	create_dword	(x=0X7D023858);
	op_plain_offset	(x,	0,	0X7D0237B8);
	op_plain_offset	(x,	128,	0X7D0237B8);
	create_dword	(0X7D02385C);
	create_insn	(0X7D023860);
	set_name	(0X7D023860,	"CRYS_ECDSA_VerifyFinish");
	create_insn	(0X7D023886);
	create_insn	(0X7D023890);
	create_insn	(x=0X7D0238C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0238CA,	"ContextID_ptr",	0);
	set_cmt	(0X7D0238CE,	"HashResultBuff",	0);
	create_insn	(x=0X7D0238EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02390A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023914,	"src_ptr",	0);
	set_cmt	(0X7D023916,	"dst_ptr",	0);
	set_cmt	(0X7D023928,	"size",	0);
	set_cmt	(0X7D02392A,	"src_ptr",	0);
	create_insn	(x=0X7D02392A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02392C,	"dst_ptr",	0);
	create_insn	(x=0X7D023932);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023934,	"size",	0);
	set_cmt	(0X7D02393A,	"dst_ptr",	0);
	set_cmt	(0X7D02393E,	"src_ptr",	0);
	create_insn	(x=0X7D02394A);
	op_stkvar	(x,	1);
	create_insn	(0X7D023966);
	create_insn	(0X7D023970);
	make_array	(0X7D02397A,	0X2);
	create_insn	(0X7D02397C);
	set_name	(0X7D02397C,	"CRYS_ECDSA_Verify");
	create_insn	(x=0X7D023984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02398A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023996,	"messageSizeInBytes",	0);
	create_insn	(0X7D023996);
	set_cmt	(0X7D023998,	"pMessageDataIn",	0);
	set_cmt	(0X7D02399A,	"pVerifyUserContext",	0);
	set_cmt	(0X7D0239A4,	"SignatureSizeBytes",	0);
	set_cmt	(0X7D0239A6,	"pSignatureIn",	0);
	set_cmt	(0X7D0239A8,	"pVerifyUserContext",	0);
	make_array	(0X7D0239B2,	0X2);
	create_insn	(0X7D0239B4);
	set_name	(0X7D0239B4,	"CRYS_ECDSA_SignInit");
	create_insn	(0X7D0239CC);
	create_insn	(0X7D0239D6);
	create_insn	(0X7D0239EC);
	create_insn	(0X7D0239F6);
	set_cmt	(0X7D023A1E,	"OperationMode",	0);
	set_cmt	(0X7D023A28,	"ContextID_ptr",	0);
	set_cmt	(0X7D023A34,	"ptr2",	0);
	set_cmt	(0X7D023A36,	"len",	0);
	set_cmt	(0X7D023A3A,	"ptr1",	0);
	create_insn	(0X7D023A50);
	create_dword	(x=0X7D023A68);
	op_plain_offset	(x,	0,	0X7D0239BC);
	op_plain_offset	(x,	128,	0X7D0239BC);
	create_dword	(0X7D023A6C);
	create_dword	(0X7D023A70);
	create_insn	(0X7D023A74);
	set_name	(0X7D023A74,	"CRYS_ECDSA_SignUpdate");
	create_insn	(0X7D023AA8);
	create_insn	(0X7D023AB2);
	set_cmt	(0X7D023AE4,	"ptr1",	0);
	create_insn	(0X7D023AF0);
	create_insn	(0X7D023AFA);
	set_cmt	(0X7D023B04,	"ContextID_ptr",	0);
	create_insn	(0X7D023B04);
	create_dword	(x=0X7D023B14);
	op_plain_offset	(x,	0,	0X7D023A7C);
	op_plain_offset	(x,	128,	0X7D023A7C);
	create_dword	(0X7D023B18);
	create_insn	(0X7D023B1C);
	set_name	(0X7D023B1C,	"DX_ECDSA_SignFinish");
	create_insn	(0X7D023B46);
	create_insn	(0X7D023B50);
	create_insn	(x=0X7D023B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023B66);
	op_hex		(x,	1);
	create_insn	(x=0X7D023B70);
	op_hex		(x,	1);
	create_insn	(0X7D023B80);
	create_insn	(0X7D023B8A);
	create_insn	(0X7D023B94);
	create_insn	(0X7D023B9E);
	create_insn	(0X7D023BD4);
	create_insn	(x=0X7D023BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023BDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023BE4,	"ContextID_ptr",	0);
	set_cmt	(0X7D023BE8,	"HashResultBuff",	0);
	create_insn	(0X7D023C0C);
	set_cmt	(0X7D023C2C,	"size",	0);
	set_cmt	(0X7D023C30,	"src_ptr",	0);
	set_cmt	(0X7D023C32,	"dst_ptr",	0);
	create_insn	(x=0X7D023C3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C42,	"pRndContext",	0);
	create_insn	(x=0X7D023C42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C46,	"a6",	0);
	create_insn	(x=0X7D023C46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C4A,	"ptr2",	0);
	create_insn	(x=0X7D023C4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C4C,	"a3",	0);
	set_cmt	(0X7D023C4E,	"a8",	0);
	create_insn	(x=0X7D023C4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C50,	"a2",	0);
	set_cmt	(0X7D023C52,	"a7",	0);
	create_insn	(x=0X7D023C52);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C56,	"a4",	0);
	create_insn	(x=0X7D023C56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023C62,	"in32_ptr",	0);
	set_cmt	(0X7D023C64,	"sizeInBytes",	0);
	set_cmt	(0X7D023C66,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D023C68,	"out8_ptr",	0);
	set_cmt	(0X7D023C74,	"sizeInBytes",	0);
	set_cmt	(0X7D023C76,	"in32_ptr",	0);
	set_cmt	(0X7D023C78,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D023C7A,	"out8_ptr",	0);
	create_insn	(x=0X7D023C86);
	op_stkvar	(x,	1);
	create_insn	(0X7D023C8E);
	create_insn	(0X7D023C98);
	set_name	(0X7D023C98,	"CRYS_ECDSA_Sign");
	set_cmt	(0X7D023CA0,	"pSignerPrivKey",	0);
	set_cmt	(0X7D023CA2,	"pSignUserContext",	0);
	set_cmt	(0X7D023CA4,	"hashMode",	0);
	create_insn	(x=0X7D023CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023CAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023CBA,	"messageSizeInBytes",	0);
	create_insn	(0X7D023CBA);
	set_cmt	(0X7D023CBC,	"pMessageDataIn",	0);
	set_cmt	(0X7D023CBE,	"pSignUserContext",	0);
	set_cmt	(0X7D023CCA,	"a6",	0);
	create_insn	(x=0X7D023CCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023CCC,	"pSignatureOutSize",	0);
	set_cmt	(0X7D023CCE,	"pSignatureOut",	0);
	set_cmt	(0X7D023CD0,	"pRndContext",	0);
	set_cmt	(0X7D023CD2,	"pSignUserContext",	0);
	set_cmt	(0X7D023CD4,	"a5",	0);
	create_insn	(x=0X7D023CD4);
	op_stkvar	(x,	1);
	make_array	(0X7D023CDE,	0X2);
	create_insn	(0X7D023CE0);
	set_name	(0X7D023CE0,	"CRYS_ECPKI_GenKeyPair");
	create_insn	(x=0X7D023CF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023D1E,	"ptr2",	0);
	set_cmt	(0X7D023D22,	"ptr1",	0);
	create_insn	(x=0X7D023D22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023D2A,	"len",	0);
	set_cmt	(0X7D023D3C,	"rndContext_ptr",	0);
	set_cmt	(0X7D023D3E,	"rndSizeInBits",	0);
	set_cmt	(0X7D023D42,	"rndVect_ptr",	0);
	set_cmt	(0X7D023D48,	"maxVect_ptr",	0);
	create_insn	(x=0X7D023D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D023D80);
	op_stkvar	(x,	1);
	create_insn	(0X7D023D8C);
	create_insn	(0X7D023D96);
	create_insn	(0X7D023DA0);
	create_insn	(0X7D023DAC);
	create_insn	(0X7D023DB6);
	set_cmt	(0X7D023DBE,	"pUserPublKey",	0);
	set_cmt	(0X7D023DC0,	"pDomain",	0);
	create_insn	(0X7D023DC0);
	set_cmt	(0X7D023DC2,	"pUserPrivKey",	0);
	create_insn	(x=0X7D023DC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023DC4,	"ecY",	0);
	set_cmt	(0X7D023DC6,	"ecX",	0);
	create_insn	(0X7D023DD4);
	set_name	(0X7D023DD4,	"CRYS_ECDH_SVDP_DH");
	create_insn	(0X7D023DF2);
	create_insn	(0X7D023DFC);
	create_insn	(0X7D023E16);
	create_insn	(0X7D023E22);
	create_insn	(x=0X7D023E26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023E30,	"m2",	0);
	set_cmt	(0X7D023E34,	"n",	0);
	set_cmt	(0X7D023E38,	"m1",	0);
	create_insn	(0X7D023E56);
	create_insn	(0X7D023E62);
	create_insn	(0X7D023E6E);
	create_insn	(0X7D023E7A);
	set_cmt	(0X7D023E9C,	"pPrivKeyDbBuff",	0);
	create_insn	(0X7D023E9C);
	set_cmt	(0X7D023E9E,	"PublKeyDbBuff_ptr",	0);
	set_cmt	(0X7D023EA0,	"TempBuff_ptr",	0);
	create_insn	(x=0X7D023EA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023EA2,	"SharedSecretValue_ptr",	0);
	create_insn	(x=0X7D023EB6);
	op_stkvar	(x,	1);
	create_insn	(0X7D023EC2);
	make_array	(0X7D023ED2,	0X2);
	create_insn	(0X7D023ED4);
	set_name	(0X7D023ED4,	"EcWrstGenKeyPair");
	set_cmt	(0X7D023F02,	"tmpBuff",	0);
	create_insn	(x=0X7D023F02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023F04,	"inPointY",	0);
	create_insn	(x=0X7D023F04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023F0A,	"scalar",	0);
	set_cmt	(0X7D023F0C,	"outPointX",	0);
	create_insn	(x=0X7D023F0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023F10,	"inPointX",	0);
	set_cmt	(0X7D023F14,	"outPointY",	0);
	create_insn	(x=0X7D023F14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023F22,	"len",	0);
	set_cmt	(0X7D023F26,	"ptr2",	0);
	set_cmt	(0X7D023F28,	"ptr1",	0);
	set_cmt	(0X7D023F32,	"ptr2",	0);
	set_cmt	(0X7D023F38,	"len",	0);
	set_cmt	(0X7D023F3E,	"ptr1",	0);
	create_insn	(0X7D023F52);
	create_insn	(0X7D023F5C);
	create_insn	(0X7D023F66);
	create_insn	(0X7D023F88);
	create_insn	(0X7D023F92);
	create_insn	(0X7D023F9C);
	create_insn	(0X7D023FBC);
	set_name	(0X7D023FBC,	"SaSi_RndDf_isra_0");
	create_insn	(x=0X7D023FC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023FD0,	"destination",	0);
	set_cmt	(0X7D023FD4,	"num",	0);
	set_cmt	(0X7D023FD6,	"source",	0);
	create_insn	(x=0X7D023FDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D023FE2,	"source",	0);
	set_cmt	(0X7D023FE6,	"num",	0);
	set_cmt	(0X7D023FE8,	"destination",	0);
	set_cmt	(0X7D023FEE,	"source",	0);
	set_cmt	(0X7D023FF2,	"destination",	0);
	set_cmt	(0X7D023FF4,	"num",	0);
	create_insn	(x=0X7D023FFE);
	op_hex		(x,	1);
	create_insn	(0X7D024016);
	create_insn	(x=0X7D024018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02403A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02405E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02406C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02406E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024072);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024076);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02407A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02407E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024082);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024086);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02408A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024090,	"operationMode",	0);
	create_insn	(x=0X7D024092);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024096,	"pContext",	0);
	create_insn	(x=0X7D02409C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240A2,	"paddingType",	0);
	set_cmt	(0X7D0240A4,	"encryptDecryptFlag",	0);
	create_insn	(x=0X7D0240B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240B4,	"a2",	0);
	set_cmt	(0X7D0240B6,	"a4",	0);
	set_cmt	(0X7D0240B8,	"a3",	0);
	set_cmt	(0X7D0240BA,	"a1",	0);
	create_insn	(x=0X7D0240C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240CE,	"a2",	0);
	set_cmt	(0X7D0240D0,	"a1",	0);
	create_insn	(x=0X7D0240DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240DC,	"pDataOut",	0);
	create_insn	(x=0X7D0240DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240DE,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D0240DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240E4,	"dataInBuffSize",	0);
	set_cmt	(0X7D0240E6,	"pDataIn",	0);
	create_insn	(x=0X7D0240E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0240E8,	"dataSize",	0);
	set_cmt	(0X7D0240EA,	"pContext",	0);
	create_insn	(x=0X7D0240EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0240FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024102);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024106);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024108,	"paddingType",	0);
	set_cmt	(0X7D02410A,	"operationMode",	0);
	set_cmt	(0X7D02410C,	"encryptDecryptFlag",	0);
	set_cmt	(0X7D02410E,	"pContext",	0);
	create_insn	(x=0X7D02410E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024116);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024124,	"a2",	0);
	set_cmt	(0X7D024126,	"a3",	0);
	create_insn	(x=0X7D024126);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024128,	"a4",	0);
	set_cmt	(0X7D02412A,	"a1",	0);
	create_insn	(x=0X7D02412A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024136);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024138,	"a1",	0);
	create_insn	(x=0X7D024138);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02413C,	"a2",	0);
	create_insn	(x=0X7D024148);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024154);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024156,	"pDataOut",	0);
	create_insn	(x=0X7D024156);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02415A,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D02415A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02415C,	"pDataIn",	0);
	set_cmt	(0X7D02415E,	"pContext",	0);
	create_insn	(x=0X7D02415E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024160,	"dataInBuffSize",	0);
	set_cmt	(0X7D024162,	"dataSize",	0);
	create_insn	(x=0X7D02416A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02416C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02416E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024170);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D024174);
	op_plain_offset	(x,	0,	0X7D023FD6);
	op_plain_offset	(x,	128,	0X7D023FD6);
	create_insn	(0X7D024178);
	set_name	(0X7D024178,	"SaSi_RndUpdate_isra_1");
	create_insn	(x=0X7D024182);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024184,	"paddingType",	0);
	set_cmt	(0X7D02418C,	"pContext",	0);
	set_cmt	(0X7D02418E,	"encryptDecryptFlag",	0);
	set_cmt	(0X7D024190,	"operationMode",	0);
	create_insn	(0X7D0241A0);
	create_insn	(x=0X7D0241A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0241A4,	"a2",	0);
	create_insn	(x=0X7D0241A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0241A8,	"a3",	0);
	set_cmt	(0X7D0241AA,	"a4",	0);
	set_cmt	(0X7D0241AC,	"a1",	0);
	create_insn	(x=0X7D0241AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0241B8,	"a2",	0);
	set_cmt	(0X7D0241BA,	"a1",	0);
	set_cmt	(0X7D0241CA,	"pDataOut",	0);
	set_cmt	(0X7D0241CC,	"dataInSize",	0);
	set_cmt	(0X7D0241CE,	"pDataIn",	0);
	set_cmt	(0X7D0241D0,	"pContext",	0);
	create_insn	(x=0X7D0241DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0241DE,	"pDataOut",	0);
	create_insn	(x=0X7D0241DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0241E0,	"pDataIn",	0);
	set_cmt	(0X7D0241E2,	"pContext",	0);
	set_cmt	(0X7D0241E4,	"dataInBuffSize",	0);
	set_cmt	(0X7D0241E6,	"dataSize",	0);
	set_cmt	(0X7D0241E8,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D0241E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0241EA);
	op_stkvar	(x,	1);
	make_array	(0X7D0241F2,	0X2);
	create_insn	(0X7D0241F4);
	set_name	(0X7D0241F4,	"CRYS_RND_Reseeding_do");
	create_insn	(0X7D02422A);
	create_insn	(x=0X7D024230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02424A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024276);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02427A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02427C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024282);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024286);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024294);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02429E,	"ptr2",	0);
	create_insn	(x=0X7D0242A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0242A6);
	op_hex		(x,	1);
	set_cmt	(0X7D0242B0,	"ptr1",	0);
	create_insn	(x=0X7D0242B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0242C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0242C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0242D0);
	op_stkvar	(x,	1);
	create_insn	(0X7D02431C);
	create_insn	(0X7D024326);
	create_insn	(0X7D024330);
	create_insn	(0X7D024346);
	create_insn	(0X7D02436A);
	create_insn	(x=0X7D024370);
	op_stkvar	(x,	1);
	create_insn	(0X7D024374);
	create_insn	(x=0X7D0243A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0243A8);
	op_hex		(x,	1);
	make_array	(0X7D0243B2,	0X2);
	create_insn	(0X7D0243B4);
	set_name	(0X7D0243B4,	"CRYS_RND_SetGenerateVectorFunc");
	create_insn	(x=0X7D0243C0);
	op_enum		(x,	1,	GetEnum("CRYS_RND_Error_e"),0);
	create_insn	(x=0X7D0243CA);
	op_enum		(x,	1,	GetEnum("CRYS_RND_Error_e"),0);
	create_insn	(0X7D0243D4);
	set_name	(0X7D0243D4,	"CRYS_RND_GenerateVector");
	create_insn	(0X7D0243E6);
	set_cmt	(0X7D0243F6,	"aTimeOut",	0);
	set_cmt	(0X7D0243FC,	"pMutexId",	0);
	set_cmt	(0X7D02442C,	"pMutexId",	0);
	create_insn	(0X7D02443C);
	create_insn	(0X7D024446);
	create_insn	(0X7D024458);
	create_insn	(x=0X7D024472);
	op_hex		(x,	1);
	create_insn	(x=0X7D02448C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024496,	"ptr1",	0);
	set_cmt	(0X7D02449A,	"ptr2",	0);
	create_insn	(x=0X7D0244AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0244B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0244D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0244E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0244E6,	"paddingType",	0);
	set_cmt	(0X7D0244E8,	"pContext",	0);
	set_cmt	(0X7D0244EA,	"encryptDecryptFlag",	0);
	set_cmt	(0X7D0244EC,	"operationMode",	0);
	create_insn	(x=0X7D0244F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0244FC,	"a2",	0);
	set_cmt	(0X7D0244FE,	"a3",	0);
	set_cmt	(0X7D024500,	"a4",	0);
	set_cmt	(0X7D024502,	"a1",	0);
	create_insn	(x=0X7D024504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024508);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024516,	"a2",	0);
	create_insn	(x=0X7D024516);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024518,	"a1",	0);
	create_insn	(x=0X7D02453C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02453E);
	op_hex		(x,	1);
	create_insn	(x=0X7D024546);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024560);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024568,	"pDataOut",	0);
	set_cmt	(0X7D02456A,	"dataInSize",	0);
	set_cmt	(0X7D02456C,	"pDataIn",	0);
	set_cmt	(0X7D02456E,	"pContext",	0);
	create_insn	(x=0X7D024574);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024588,	"num",	0);
	set_cmt	(0X7D02458A,	"source",	0);
	set_cmt	(0X7D02458C,	"destination",	0);
	create_insn	(x=0X7D02458C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02458E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0245A0,	"pContext",	0);
	create_insn	(x=0X7D0245A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0245A4,	"dataInBuffSize",	0);
	set_cmt	(0X7D0245A6,	"dataSize",	0);
	set_cmt	(0X7D0245A8,	"pDataOut",	0);
	create_insn	(x=0X7D0245A8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0245AC,	"pDataIn",	0);
	set_cmt	(0X7D0245AE,	"dataOutBuffSize",	0);
	create_insn	(x=0X7D0245AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0245B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0245B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0245C8,	"len",	0);
	set_cmt	(0X7D0245CA,	"ptr1",	0);
	set_cmt	(0X7D0245CC,	"ptr2",	0);
	create_insn	(x=0X7D0245DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0245DC);
	op_stkvar	(x,	1);
	create_insn	(0X7D024604);
	create_insn	(0X7D02460E);
	create_insn	(0X7D024618);
	create_insn	(0X7D024622);
	create_insn	(0X7D02462C);
	create_insn	(0X7D024636);
	create_insn	(0X7D024640);
	create_insn	(x=0X7D024642);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024644);
	op_stkvar	(x,	1);
	create_insn	(0X7D024656);
	set_cmt	(0X7D024662,	"pDataOut",	0);
	set_cmt	(0X7D024664,	"pDataIn",	0);
	set_cmt	(0X7D024666,	"dataInSize",	0);
	set_cmt	(0X7D024668,	"pContext",	0);
	create_insn	(x=0X7D02467A);
	op_hex		(x,	1);
	create_dword	(x=0X7D024684);
	op_plain_offset	(x,	0,	0X7D0243DA);
	op_plain_offset	(x,	128,	0X7D0243DA);
	create_dword	(0X7D024688);
	create_insn	(0X7D02468C);
	set_name	(0X7D02468C,	"CRYS_RND_Instantiation");
	set_cmt	(0X7D02469C,	"aTimeOut",	0);
	set_cmt	(0X7D0246A2,	"pMutexId",	0);
	set_cmt	(0X7D0246B4,	"pMutexId",	0);
	create_insn	(0X7D0246BE);
	create_insn	(0X7D0246C8);
	make_array	(0X7D0246D2,	0X2);
	create_dword	(x=0X7D0246D4);
	op_plain_offset	(x,	0,	0X7D024692);
	op_plain_offset	(x,	128,	0X7D024692);
	create_dword	(0X7D0246D8);
	create_insn	(0X7D0246DC);
	set_name	(0X7D0246DC,	"CRYS_RND_UnInstantiation");
	create_insn	(0X7D0246EC);
	make_array	(0X7D0246F6,	0X2);
	create_insn	(0X7D0246F8);
	set_name	(0X7D0246F8,	"CRYS_RND_Reseeding");
	set_cmt	(0X7D024708,	"aTimeOut",	0);
	set_cmt	(0X7D02470E,	"pMutexId",	0);
	set_cmt	(0X7D024720,	"pMutexId",	0);
	create_insn	(0X7D02472A);
	create_insn	(0X7D024734);
	make_array	(0X7D02473E,	0X2);
	create_dword	(x=0X7D024740);
	op_plain_offset	(x,	0,	0X7D0246FE);
	op_plain_offset	(x,	128,	0X7D0246FE);
	create_dword	(0X7D024744);
	create_insn	(0X7D024748);
	set_name	(0X7D024748,	"CRYS_RND_AddAdditionalInput");
	create_insn	(0X7D02476C);
	create_insn	(0X7D02477C);
	create_insn	(x=0X7D024786);
	op_hex		(x,	1);
	set_cmt	(0X7D024796,	"aTimeOut",	0);
	set_cmt	(0X7D0247A0,	"pMutexId",	0);
	set_cmt	(0X7D0247B6,	"ptr2",	0);
	set_cmt	(0X7D0247B8,	"ptr1",	0);
	set_cmt	(0X7D0247BA,	"len",	0);
	set_cmt	(0X7D0247C2,	"pMutexId",	0);
	create_dword	(x=0X7D0247D4);
	op_plain_offset	(x,	0,	0X7D02474E);
	op_plain_offset	(x,	128,	0X7D02474E);
	create_dword	(0X7D0247D8);
	create_insn	(0X7D0247DC);
	set_name	(0X7D0247DC,	"CRYS_RND_EnterKatMode");
	create_insn	(x=0X7D024812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024824);
	op_hex		(x,	1);
	create_insn	(x=0X7D024838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024858);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02485A,	"aTimeOut",	0);
	create_insn	(x=0X7D02485E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024866,	"pMutexId",	0);
	set_cmt	(0X7D024870,	"len",	0);
	set_cmt	(0X7D024874,	"ptr2",	0);
	set_cmt	(0X7D024876,	"ptr1",	0);
	create_insn	(x=0X7D024878);
	op_hex		(x,	1);
	create_insn	(x=0X7D024884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02488C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024892);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0248A6,	"pMutexId",	0);
	create_insn	(0X7D0248B0);
	create_insn	(0X7D0248BA);
	set_cmt	(0X7D0248C4,	"ptr1",	0);
	create_insn	(0X7D0248C4);
	set_cmt	(0X7D0248C8,	"ptr2",	0);
	set_cmt	(0X7D0248CC,	"len",	0);
	create_insn	(x=0X7D0248CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0248D2);
	op_stkvar	(x,	1);
	make_array	(0X7D0248DA,	0X2);
	create_dword	(x=0X7D0248DC);
	op_plain_offset	(x,	0,	0X7D0247FA);
	op_plain_offset	(x,	128,	0X7D0247FA);
	create_dword	(0X7D0248E0);
	create_insn	(0X7D0248E4);
	set_name	(0X7D0248E4,	"CRYS_RND_DisableKatMode");
	create_insn	(x=0X7D0248E8);
	op_hex		(x,	1);
	make_array	(0X7D0248F2,	0X2);
	create_insn	(0X7D0248F4);
	set_name	(0X7D0248F4,	"CRYS_RND_GenerateVectorInRange");
	create_insn	(0X7D02491E);
	create_insn	(x=0X7D02493C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024944,	"CounterSize",	0);
	create_insn	(x=0X7D024944);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024948,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D02496C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024976);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024982);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024984);
	op_hex		(x,	1);
	create_insn	(x=0X7D024994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0249A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0249AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0249C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0249CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0249CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0249DA);
	set_cmt	(0X7D0249EC,	"Counter2Size",	0);
	set_cmt	(0X7D0249EE,	"CounterBuff2_ptr",	0);
	set_cmt	(0X7D0249F0,	"Counter1Size",	0);
	set_cmt	(0X7D0249F2,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D024A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A22);
	op_stkvar	(x,	1);
	create_insn	(0X7D024A3E);
	create_insn	(0X7D024A48);
	create_insn	(0X7D024A52);
	create_insn	(x=0X7D024A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A66);
	op_stkvar	(x,	1);
	create_insn	(0X7D024A70);
	create_insn	(x=0X7D024A76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024A8A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024A8E,	"Counter2Size",	0);
	create_insn	(0X7D024A8E);
	set_cmt	(0X7D024A90,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D024A90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D024A92,	"Counter1Size",	0);
	set_cmt	(0X7D024A94,	"CounterBuff1_ptr",	0);
	create_insn	(x=0X7D024A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024AA2);
	op_stkvar	(x,	1);
	create_insn	(0X7D024AB0);
	create_insn	(0X7D024ABA);
	create_insn	(0X7D024ABE);
	create_insn	(x=0X7D024AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024AD6);
	op_hex		(x,	1);
	create_insn	(x=0X7D024AE2);
	op_hex		(x,	1);
	create_insn	(0X7D024AEC);
	set_name	(0X7D024AEC,	"SaSi_RndGenerateWordsArrayInRange");
	create_insn	(x=0X7D024AF0);
	op_stkvar	(x,	1);
	create_insn	(0X7D024B02);
	set_cmt	(0X7D024B16,	"ptr2",	0);
	set_cmt	(0X7D024B18,	"ptr1",	0);
	set_cmt	(0X7D024B1A,	"len",	0);
	set_cmt	(0X7D024B26,	"rndVect_ptr",	0);
	set_cmt	(0X7D024B28,	"maxVect_ptr",	0);
	set_cmt	(0X7D024B2A,	"rndSizeInBits",	0);
	set_cmt	(0X7D024B2C,	"rndContext_ptr",	0);
	create_insn	(0X7D024B3A);
	make_array	(0X7D024B46,	0X2);
	create_insn	(0X7D024B48);
	make_array	(0X7D024B86,	0X2);
	create_insn	(0X7D024B88);
	create_insn	(0X7D024BB0);
	create_insn	(x=0X7D024BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024C02);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C16);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C24);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C2C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C40);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C56);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C6A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C78);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C80);
	op_hex		(x,	1);
	create_insn	(x=0X7D024C94);
	op_hex		(x,	1);
	create_insn	(x=0X7D024CA2);
	op_hex		(x,	1);
	create_insn	(x=0X7D024CAA);
	op_hex		(x,	1);
	create_insn	(x=0X7D024CBE);
	op_hex		(x,	1);
	create_insn	(x=0X7D024CCA);
	op_hex		(x,	1);
	create_insn	(x=0X7D024CD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024CF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D06);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D14);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D1C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D30);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D3E);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D46);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D5A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D68);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D70);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D84);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D92);
	op_hex		(x,	1);
	create_insn	(x=0X7D024D9A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DAE);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DBC);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DC4);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DD8);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DE6);
	op_hex		(x,	1);
	create_insn	(x=0X7D024DEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E00);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E0C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E18);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E2C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E3A);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E42);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E56);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E64);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E6C);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E80);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E8E);
	op_hex		(x,	1);
	create_insn	(x=0X7D024E96);
	op_hex		(x,	1);
	create_insn	(x=0X7D024EAA);
	op_hex		(x,	1);
	create_insn	(x=0X7D024EB8);
	op_hex		(x,	1);
	create_insn	(x=0X7D024EC0);
	op_hex		(x,	1);
	create_insn	(x=0X7D024ED4);
	op_hex		(x,	1);
	create_insn	(x=0X7D024EE0);
	op_hex		(x,	1);
	create_insn	(x=0X7D024EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024F02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D024F0A);
	op_stkvar	(x,	1);
	create_insn	(0X7D024F10);
	create_insn	(x=0X7D024FD4);
	op_stkvar	(x,	1);
	create_insn	(0X7D024FFE);
	create_insn	(x=0X7D025000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025006);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02501A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02501C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02501E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02502C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025036);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02503A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025042);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025054);
	op_stkvar	(x,	1);
	create_insn	(0X7D025058);
	set_name	(0X7D025058,	"LLF_RND_WaitRngInterrupt");
	set_cmt	(0X7D02505C,	"data",	0);
	create_dword	(x=0X7D02508C);
	op_plain_offset	(x,	0,	0X7D025072);
	op_plain_offset	(x,	128,	0X7D025072);
	create_dword	(0X7D025090);
	set_cmt	(0X7D025094,	"switch 8 cases ",	0);
	create_insn	(0X7D025094);
	set_name	(0X7D025094,	"LLF_RND_GetRoscSampleCnt");
	set_cmt	(0X7D02509A,	"switch jump",	0);
	set_cmt	(0X7D02509E,	"jump table for switch statement",	0);
	create_byte	(0X7D02509E);
	set_name	(0X7D02509E,	"jpt_7D02509A");
	create_byte	(0X7D02509F);
	create_byte	(0X7D0250A0);
	create_byte	(0X7D0250A1);
	create_byte	(0X7D0250A2);
	create_byte	(0X7D0250A3);
	create_byte	(0X7D0250A4);
	create_byte	(0X7D0250A5);
	set_cmt	(0X7D0250A6,	"jumptable 7D02509A case 8",	1);
	create_insn	(0X7D0250A6);
	set_cmt	(0X7D0250AE,	"jumptable 7D02509A case 4",	1);
	create_insn	(0X7D0250AE);
	set_cmt	(0X7D0250B6,	"jumptable 7D02509A case 2",	1);
	create_insn	(0X7D0250B6);
	set_cmt	(0X7D0250BE,	"jumptable 7D02509A case 1",	1);
	create_insn	(0X7D0250BE);
	set_cmt	(0X7D0250C6,	"jumptable 7D02509A default case",	1);
	create_insn	(0X7D0250C6);
	set_name	(0X7D0250C6,	"def_7D02509A");
	create_insn	(0X7D0250D0);
	set_name	(0X7D0250D0,	"LLF_RND_GetFastestRosc");
	create_insn	(0X7D0250D4);
	create_insn	(0X7D0250E8);
	make_array	(0X7D0250F2,	0X2);
	create_insn	(0X7D0250F4);
	create_insn	(x=0X7D0250FA);
	op_hex		(x,	1);
	create_insn	(0X7D025106);
	make_array	(0X7D02510A,	0X2);
	create_insn	(0X7D02510C);
	make_array	(0X7D025136,	0X2);
	create_insn	(0X7D025138);
	create_insn	(x=0X7D02515E);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D025164);
	op_plain_offset	(x,	0,	0X7D02514C);
	op_plain_offset	(x,	128,	0X7D02514C);
	create_dword	(0X7D025168);
	create_insn	(0X7D02516C);
	set_name	(0X7D02516C,	"LLF_RND_RndCprngt");
	set_cmt	(0X7D025176,	"n",	0);
	create_insn	(0X7D02518A);
	set_cmt	(0X7D02518C,	"m2",	0);
	set_cmt	(0X7D02518E,	"m1",	0);
	set_cmt	(0X7D025192,	"n",	0);
	set_cmt	(0X7D0251A2,	"m1",	0);
	set_cmt	(0X7D0251A6,	"m2",	0);
	set_cmt	(0X7D0251A8,	"n",	0);
	set_cmt	(0X7D0251B8,	"m1",	0);
	set_cmt	(0X7D0251BC,	"m2",	0);
	create_insn	(0X7D0251BC);
	set_cmt	(0X7D0251BE,	"n",	0);
	make_array	(0X7D0251D6,	0X2);
	create_insn	(0X7D0251D8);
	set_name	(0X7D0251D8,	"RNG_PLAT_SetUserRngParameters");
	make_array	(0X7D025202,	0X2);
	create_insn	(0X7D025204);
	create_insn	(x=0X7D025216);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02521A,	"aTimeOut",	0);
	set_cmt	(0X7D025224,	"pMutexId",	0);
	set_cmt	(0X7D02522A,	"aSize",	0);
	create_insn	(x=0X7D02522C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025236,	"pMutexId",	0);
	create_insn	(x=0X7D025244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025248);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025250,	"va",	0);
	create_insn	(x=0X7D025250);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025252,	"a3",	0);
	create_insn	(x=0X7D025254);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025256,	"len",	0);
	set_cmt	(0X7D025258,	"outbuf",	0);
	create_insn	(x=0X7D025258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02526C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02526E);
	op_hex		(x,	1);
	create_insn	(x=0X7D025276);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02527A);
	op_hex		(x,	1);
	create_insn	(x=0X7D025284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02528A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02528C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02528E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02529A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02529E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0252A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0252A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0252A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0252AE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0252B0,	"len",	0);
	set_cmt	(0X7D0252B2,	"ptr1",	0);
	set_cmt	(0X7D0252B4,	"ptr2",	0);
	set_cmt	(0X7D0252BC,	"ptr",	0);
	make_array	(0X7D0252C6,	0X2);
	create_dword	(x=0X7D0252C8);
	op_plain_offset	(x,	0,	0X7D025216);
	op_plain_offset	(x,	128,	0X7D025216);
	create_dword	(0X7D0252CC);
	create_insn	(0X7D0252D0);
	set_name	(0X7D0252D0,	"LLF_RND_TRNG_ReadEhrData");
	create_insn	(x=0X7D0252D4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0252E0,	"isr_ptr",	0);
	create_insn	(x=0X7D0252E6);
	op_stkvar	(x,	1);
	create_insn	(0X7D025322);
	create_insn	(0X7D025342);
	create_insn	(0X7D025348);
	create_dword	(x=0X7D025360);
	op_plain_offset	(x,	0,	0X7D0252F0);
	op_plain_offset	(x,	128,	0X7D0252F0);
	create_dword	(0X7D025364);
	create_insn	(0X7D025368);
	set_name	(0X7D025368,	"LLF_RND_StartTrngHW_part_3");
	create_insn	(x=0X7D02537C);
	op_hex		(x,	1);
	create_insn	(0X7D025398);
	create_insn	(0X7D0253A4);
	create_insn	(0X7D0253AE);
	create_insn	(x=0X7D02545C);
	op_hex		(x,	1);
	create_dword	(x=0X7D025478);
	op_plain_offset	(x,	0,	0X7D025386);
	op_plain_offset	(x,	128,	0X7D025386);
	create_dword	(0X7D02547C);
	create_insn	(0X7D025480);
	set_name	(0X7D025480,	"LLF_RND_GetTrngSource");
	create_insn	(x=0X7D025486);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02548C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025498);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02549C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02549E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0254AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0254C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0254DE);
	create_insn	(x=0X7D02550A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02550C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025522);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025574);
	op_hex		(x,	1);
	create_insn	(x=0X7D02557C);
	op_hex		(x,	1);
	create_insn	(x=0X7D025586);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02558A,	"source",	0);
	create_insn	(x=0X7D02558A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02558C,	"num",	0);
	set_cmt	(0X7D025590,	"destination",	0);
	create_insn	(x=0X7D025598);
	op_stkvar	(x,	1);
	create_insn	(0X7D0255B4);
	create_insn	(x=0X7D0255B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0255BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0255DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0255EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0255EC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0255FC);
	create_insn	(x=0X7D025604);
	op_stkvar	(x,	1);
	create_insn	(0X7D02562A);
	create_insn	(0X7D02564C);
	create_insn	(0X7D025650);
	make_array	(0X7D02565A,	0X2);
	create_dword	(x=0X7D02565C);
	op_plain_offset	(x,	0,	0X7D02549E);
	op_plain_offset	(x,	128,	0X7D02549E);
	create_dword	(0X7D025660);
	create_insn	(0X7D025664);
	set_name	(0X7D025664,	"LLF_RND_RunTrngStartupTest");
	create_insn	(0X7D025668);
	set_name	(0X7D025668,	"PkaModDivideBy2");
	create_insn	(x=0X7D025678);
	op_hex		(x,	1);
	create_insn	(x=0X7D02567E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02568E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025690);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256DA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0256E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256EC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0256F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0256F6);
	op_stkvar	(x,	1);
	create_insn	(0X7D025702);
	create_dword	(x=0X7D025714);
	op_plain_offset	(x,	0,	0X7D025674);
	op_plain_offset	(x,	128,	0X7D025674);
	create_dword	(0X7D025718);
	create_insn	(0X7D02571C);
	set_name	(0X7D02571C,	"PkaGetRegEffectiveSizeInBits");
	create_insn	(x=0X7D025732);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025742);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025762,	"aTimeOut",	0);
	set_cmt	(0X7D025766,	"pMutexId",	0);
	create_insn	(x=0X7D025774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025776);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02577E,	"pMutexId",	0);
	create_insn	(x=0X7D025788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02578A);
	op_stkvar	(x,	1);
	create_insn	(0X7D0257A8);
	create_insn	(0X7D0257B6);
	create_dword	(x=0X7D0257CC);
	op_plain_offset	(x,	0,	0X7D02572A);
	op_plain_offset	(x,	128,	0X7D02572A);
	create_dword	(0X7D0257D0);
	create_dword	(0X7D0257D4);
	create_insn	(0X7D0257D8);
	set_name	(0X7D0257D8,	"PkaGetNextMsBit");
	create_insn	(x=0X7D0257E8);
	op_hex		(x,	1);
	create_insn	(0X7D025804);
	create_insn	(x=0X7D025812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025814);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02581C,	"aTimeOut",	0);
	set_cmt	(0X7D025828,	"pMutexId",	0);
	create_insn	(x=0X7D025836);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025838);
	op_stkvar	(x,	1);
	set_cmt	(0X7D025842,	"pMutexId",	0);
	create_insn	(x=0X7D02584C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02584E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025860);
	op_hex		(x,	1);
	make_array	(0X7D025872,	0X2);
	create_dword	(x=0X7D025874);
	op_plain_offset	(x,	0,	0X7D0257F0);
	op_plain_offset	(x,	128,	0X7D0257F0);
	create_dword	(0X7D025878);
	create_dword	(0X7D02587C);
	create_insn	(0X7D025880);
	create_insn	(x=0X7D025890);
	op_hex		(x,	1);
	create_insn	(x=0X7D0258A4);
	op_hex		(x,	1);
	create_insn	(0X7D0258AE);
	create_insn	(x=0X7D0258BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0258BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0258C6,	"aTimeOut",	0);
	set_cmt	(0X7D0258D2,	"pMutexId",	0);
	create_insn	(x=0X7D0258E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0258E2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0258EC,	"pMutexId",	0);
	create_insn	(x=0X7D0258F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0258F8);
	op_stkvar	(x,	1);
	make_array	(0X7D025906,	0X2);
	create_dword	(x=0X7D025908);
	op_plain_offset	(x,	0,	0X7D025898);
	op_plain_offset	(x,	128,	0X7D025898);
	create_dword	(0X7D02590C);
	create_dword	(0X7D025910);
	create_insn	(0X7D025914);
	create_insn	(x=0X7D025928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02592A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02593A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02593C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025946);
	op_hex		(x,	1);
	create_dword	(x=0X7D025954);
	op_plain_offset	(x,	0,	0X7D025920);
	op_plain_offset	(x,	128,	0X7D025920);
	create_dword	(0X7D025958);
	create_insn	(0X7D02595C);
	set_name	(0X7D02595C,	"PkaInitAndMutexLock");
	set_cmt	(0X7D025964,	"aTimeOut",	0);
	set_cmt	(0X7D02596E,	"pMutexId",	0);
	set_cmt	(0X7D025982,	"pMutexId",	0);
	create_dword	(x=0X7D02598C);
	op_plain_offset	(x,	0,	0X7D02596E);
	op_plain_offset	(x,	128,	0X7D02596E);
	create_dword	(0X7D025990);
	create_insn	(0X7D025994);
	set_name	(0X7D025994,	"PkaFinishAndMutexUnlock");
	set_cmt	(0X7D0259B4,	"pMutexId",	0);
	make_array	(0X7D0259BE,	0X2);
	create_dword	(x=0X7D0259C0);
	op_plain_offset	(x,	0,	0X7D02599C);
	op_plain_offset	(x,	128,	0X7D02599C);
	create_dword	(0X7D0259C4);
	create_insn	(0X7D0259C8);
	set_name	(0X7D0259C8,	"PkiClearAllPka");
	create_insn	(x=0X7D0259CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0259DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0259E6);
	op_stkvar	(x,	1);
	make_array	(0X7D0259EA,	0X2);
	create_insn	(0X7D0259EC);
	set_name	(0X7D0259EC,	"RsaInitPubKeyDb");
	create_insn	(0X7D0259FC);
	make_array	(0X7D025A06,	0X2);
	create_insn	(0X7D025A08);
	set_name	(0X7D025A08,	"RsaExecPubKeyExp");
	create_insn	(x=0X7D025A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025A2E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025A34);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025A38);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(0X7D025A4C);
	create_insn	(x=0X7D025A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025A82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025A9E);
	op_hex		(x,	1);
	create_insn	(x=0X7D025AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025AD6);
	op_stkvar	(x,	1);
	make_array	(0X7D025AE2,	0X2);
	create_dword	(x=0X7D025AE4);
	op_plain_offset	(x,	0,	0X7D025A22);
	op_plain_offset	(x,	128,	0X7D025A22);
	create_dword	(0X7D025AE8);
	create_dword	(0X7D025AEC);
	create_insn	(0X7D025AF0);
	set_name	(0X7D025AF0,	"RsaInitPrivKeyDb");
	create_insn	(0X7D025B0C);
	create_insn	(0X7D025B2A);
	create_insn	(0X7D025B3E);
	make_array	(0X7D025B52,	0X2);
	create_insn	(0X7D025B54);
	set_name	(0X7D025B54,	"RsaExecPrivKeyExp");
	create_insn	(x=0X7D025B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025B7C);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B80);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B84);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025B88);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B8A);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B8E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025B92);
	op_stkvar	(x,	1);
	create_insn	(0X7D025BA4);
	create_insn	(x=0X7D025BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C1C);
	op_hex		(x,	1);
	create_insn	(x=0X7D025C20);
	op_hex		(x,	1);
	create_insn	(x=0X7D025C26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C44);
	op_hex		(x,	1);
	create_insn	(x=0X7D025C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C64);
	op_hex		(x,	1);
	create_insn	(x=0X7D025C6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025CD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025CE2);
	op_hex		(x,	1);
	create_insn	(x=0X7D025CE6);
	op_hex		(x,	1);
	create_insn	(x=0X7D025CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025CF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025CFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D025D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D1A);
	op_hex		(x,	1);
	create_insn	(x=0X7D025D1E);
	op_hex		(x,	1);
	create_insn	(x=0X7D025D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D3C);
	op_hex		(x,	1);
	create_insn	(x=0X7D025D42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D54);
	op_hex		(x,	1);
	create_insn	(x=0X7D025D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DB6);
	op_hex		(x,	1);
	create_insn	(x=0X7D025DBE);
	op_hex		(x,	1);
	create_insn	(x=0X7D025DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025DF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D025E00);
	op_hex		(x,	1);
	create_insn	(x=0X7D025E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E16);
	op_hex		(x,	1);
	create_insn	(x=0X7D025E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E3C);
	op_hex		(x,	1);
	create_insn	(x=0X7D025E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025E86);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025E8A);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025E8C);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D025EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025EEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D025EFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025F06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025F18);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D025F20);
	op_plain_offset	(x,	0,	0X7D025B6A);
	op_plain_offset	(x,	128,	0X7D025B6A);
	create_dword	(0X7D025F24);
	create_dword	(0X7D025F28);
	create_insn	(0X7D025F2C);
	set_name	(0X7D025F2C,	"PkaInitPka_part_0_sub2");
	create_insn	(x=0X7D025F34);
	op_hex		(x,	1);
	create_insn	(x=0X7D025F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D025F6C);
	op_stkvar	(x,	1);
	make_array	(0X7D025F7E,	0X2);
	create_dword	(x=0X7D025F80);
	op_plain_offset	(x,	0,	0X7D025F42);
	op_plain_offset	(x,	128,	0X7D025F42);
	create_dword	(0X7D025F84);
	create_insn	(0X7D025F88);
	set_name	(0X7D025F88,	"PkaInitPka_part_0");
	create_insn	(0X7D025FA6);
	make_array	(0X7D026042,	0X2);
	create_dword	(x=0X7D026044);
	op_plain_offset	(x,	0,	0X7D025F9A);
	op_plain_offset	(x,	128,	0X7D025F9A);
	create_dword	(0X7D026048);
	create_insn	(0X7D02604C);
	set_name	(0X7D02604C,	"PkaCalcNpIntoPkaReg");
	create_insn	(x=0X7D026052);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02605A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026062);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026070);
	op_hex		(x,	1);
	create_insn	(x=0X7D026078);
	op_hex		(x,	1);
	create_insn	(x=0X7D02607C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026086);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026092);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0260AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0260B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260D6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0260DA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0260E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0260FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026102);
	op_hex		(x,	1);
	create_insn	(x=0X7D02610C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02610E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026124);
	op_hex		(x,	1);
	create_insn	(x=0X7D02613E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026140);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02614C,	"aTimeOut",	0);
	set_cmt	(0X7D026156,	"pMutexId",	0);
	create_insn	(x=0X7D02615C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026166);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026168);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026170,	"pMutexId",	0);
	create_insn	(x=0X7D026180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026182);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026184);
	op_hex		(x,	1);
	create_insn	(x=0X7D026188);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026198);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02619A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0261DE);
	create_insn	(x=0X7D0261E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0261E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0261F2,	"aTimeOut",	0);
	set_cmt	(0X7D0261FC,	"pMutexId",	0);
	create_insn	(x=0X7D026202);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02620C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02620E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02621E,	"pMutexId",	0);
	create_insn	(x=0X7D026228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02622E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026252);
	op_hex		(x,	1);
	create_insn	(x=0X7D026256);
	op_hex		(x,	1);
	create_insn	(x=0X7D02625E);
	op_hex		(x,	1);
	create_insn	(x=0X7D026268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02626A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026278);
	op_hex		(x,	1);
	create_insn	(x=0X7D026284);
	op_hex		(x,	1);
	create_insn	(x=0X7D02628C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02628E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0262B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0262C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0262CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262D8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0262E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0262EA);
	op_stkvar	(x,	1);
	make_array	(0X7D0262F6,	0X2);
	create_dword	(x=0X7D0262F8);
	op_plain_offset	(x,	0,	0X7D02606A);
	op_plain_offset	(x,	128,	0X7D02606A);
	create_dword	(0X7D0262FC);
	create_dword	(0X7D026300);
	create_insn	(0X7D026304);
	create_insn	(x=0X7D026314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026326);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02634C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02636C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026372);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026386);
	op_hex		(x,	1);
	create_insn	(x=0X7D026394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026396);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02639E,	"aTimeOut",	0);
	set_cmt	(0X7D0263A2,	"pMutexId",	0);
	create_insn	(x=0X7D0263B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0263B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0263E0,	"pMutexId",	0);
	create_insn	(x=0X7D0263E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0263F8);
	create_insn	(x=0X7D026400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026402);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026408,	"aTimeOut",	0);
	set_cmt	(0X7D02640C,	"pMutexId",	0);
	create_insn	(x=0X7D02641C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02641E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02644C,	"pMutexId",	0);
	create_insn	(x=0X7D02645A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02645C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026462,	"aTimeOut",	0);
	set_cmt	(0X7D026466,	"pMutexId",	0);
	create_insn	(x=0X7D026476);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026478);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0264AE,	"pMutexId",	0);
	create_insn	(0X7D0264BA);
	create_insn	(x=0X7D0264C0);
	op_hex		(x,	1);
	make_array	(0X7D0264CA,	0X2);
	create_dword	(x=0X7D0264CC);
	op_plain_offset	(x,	0,	0X7D026316);
	op_plain_offset	(x,	128,	0X7D026316);
	create_dword	(0X7D0264D0);
	create_dword	(0X7D0264D4);
	create_insn	(0X7D0264D8);
	set_name	(0X7D0264D8,	"PkaCopyDataFromPkaReg");
	create_insn	(x=0X7D0264F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0264F4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0264FC,	"aTimeOut",	0);
	set_cmt	(0X7D026506,	"pMutexId",	0);
	create_insn	(x=0X7D026514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026516);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02652E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026530);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02653A,	"pMutexId",	0);
	make_array	(0X7D026546,	0X2);
	create_dword	(x=0X7D026548);
	op_plain_offset	(x,	0,	0X7D0264EA);
	op_plain_offset	(x,	128,	0X7D0264EA);
	create_dword	(0X7D02654C);
	create_dword	(0X7D026550);
	create_insn	(0X7D026554);
	set_name	(0X7D026554,	"PkaCopyDataIntoPkaReg");
	create_insn	(x=0X7D026576);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026578);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026580,	"aTimeOut",	0);
	set_cmt	(0X7D02658C,	"pMutexId",	0);
	create_insn	(x=0X7D02659A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02659C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0265BE);
	op_hex		(x,	1);
	set_cmt	(0X7D0265D0,	"pMutexId",	0);
	create_insn	(x=0X7D0265DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0265E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0265FA,	"aTimeOut",	0);
	create_insn	(0X7D0265FA);
	set_cmt	(0X7D0265FE,	"pMutexId",	0);
	create_insn	(x=0X7D02660C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02660E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026632);
	op_hex		(x,	1);
	set_cmt	(0X7D026644,	"pMutexId",	0);
	create_insn	(0X7D026650);
	create_dword	(x=0X7D026654);
	op_plain_offset	(x,	0,	0X7D02656A);
	op_plain_offset	(x,	128,	0X7D02656A);
	create_dword	(0X7D026658);
	create_dword	(0X7D02665C);
	create_insn	(0X7D026660);
	set_name	(0X7D026660,	"PkiCalcNp");
	create_insn	(x=0X7D02666A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026680);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D026682);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0266BA);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D0266C8);
	op_plain_offset	(x,	0,	0X7D026670);
	op_plain_offset	(x,	128,	0X7D026670);
	create_dword	(0X7D0266CC);
	create_insn	(0X7D0266D0);
	make_array	(0X7D0266E2,	0X2);
	create_dword	(x=0X7D0266E4);
	op_plain_offset	(x,	0,	0X7D0266DA);
	op_plain_offset	(x,	128,	0X7D0266DA);
	create_dword	(0X7D0266E8);
	create_insn	(0X7D0266EC);
	create_insn	(x=0X7D026702);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026712);
	op_stkvar	(x,	1);
	create_insn	(0X7D02672A);
	set_cmt	(0X7D02672E,	"aTimeOut",	0);
	set_cmt	(0X7D026734,	"pMutexId",	0);
	create_insn	(x=0X7D026742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02676C);
	op_hex		(x,	1);
	set_cmt	(0X7D02677E,	"pMutexId",	0);
	make_array	(0X7D02678A,	0X2);
	create_dword	(x=0X7D02678C);
	op_plain_offset	(x,	0,	0X7D0266FA);
	op_plain_offset	(x,	128,	0X7D0266FA);
	create_dword	(0X7D026790);
	create_dword	(0X7D026794);
	create_insn	(0X7D026798);
	create_insn	(x=0X7D0267A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0267B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0267CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267DC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0267E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0267E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0267FC);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D026810);
	op_plain_offset	(x,	0,	0X7D0267AA);
	op_plain_offset	(x,	128,	0X7D0267AA);
	create_dword	(0X7D026814);
	create_insn	(0X7D026818);
	set_name	(0X7D026818,	"PkiLongNumDiv");
	create_insn	(x=0X7D026820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02684A);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D02684E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D026850);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(0X7D026864);
	create_insn	(x=0X7D026876);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026894);
	op_hex		(x,	1);
	create_insn	(x=0X7D026898);
	op_hex		(x,	1);
	create_insn	(x=0X7D0268A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268C8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0268D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0268F8);
	op_stkvar	(x,	1);
	create_insn	(0X7D026906);
	create_insn	(x=0X7D02690A);
	op_stkvar	(x,	1);
	make_array	(0X7D026916,	0X2);
	create_dword	(x=0X7D026918);
	op_plain_offset	(x,	0,	0X7D026832);
	op_plain_offset	(x,	128,	0X7D026832);
	create_dword	(0X7D02691C);
	create_dword	(0X7D026920);
	create_insn	(0X7D026924);
	set_name	(0X7D026924,	"PkaGetBitFromPkaReg");
	create_insn	(x=0X7D026936);
	op_hex		(x,	1);
	create_insn	(x=0X7D02693C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02694E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026976);
	op_hex		(x,	1);
	create_insn	(x=0X7D02698A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02698E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02699C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02699E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269B4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0269CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0269F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A04);
	op_hex		(x,	1);
	create_insn	(0X7D026A0E);
	create_insn	(0X7D026A20);
	create_dword	(x=0X7D026A28);
	op_plain_offset	(x,	0,	0X7D026932);
	op_plain_offset	(x,	128,	0X7D026932);
	create_dword	(0X7D026A2C);
	create_insn	(0X7D026A30);
	set_name	(0X7D026A30,	"PkaExecFullModInv");
	create_insn	(x=0X7D026A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026A88);
	op_hex		(x,	1);
	create_insn	(x=0X7D026A90);
	op_hex		(x,	1);
	create_insn	(x=0X7D026A94);
	op_hex		(x,	1);
	create_insn	(x=0X7D026A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026AA0);
	op_stkvar	(x,	1);
	create_insn	(0X7D026AB2);
	create_insn	(x=0X7D026AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026AC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026ADE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026AF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D026AF6);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_7(void) {
        auto x;
#define id x

	create_insn	(x=0X7D026AF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D026AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B0C);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B12);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B20);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B28);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B3C);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B42);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B5E);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B62);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B76);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026B96);
	op_hex		(x,	1);
	create_insn	(x=0X7D026B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BB0);
	op_hex		(x,	1);
	create_insn	(x=0X7D026BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BD8);
	op_hex		(x,	1);
	create_insn	(x=0X7D026BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BDE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C1E);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C22);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C26);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C30);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C36);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C3A);
	op_hex		(x,	1);
	create_insn	(x=0X7D026C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C7E);
	op_stkvar	(x,	1);
	create_insn	(0X7D026C8C);
	create_insn	(x=0X7D026C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CAE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CB8);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CBE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CD6);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CEA);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D026CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026CFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D16);
	op_hex		(x,	1);
	create_insn	(x=0X7D026D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D2E);
	op_hex		(x,	1);
	create_insn	(x=0X7D026D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D36);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D026D48);
	op_plain_offset	(x,	0,	0X7D026A3E);
	op_plain_offset	(x,	128,	0X7D026A3E);
	create_dword	(0X7D026D4C);
	create_insn	(0X7D026D50);
	set_name	(0X7D026D50,	"PkiLongNumMul");
	create_insn	(x=0X7D026D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D70);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D026D76);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D026D7E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D026D86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026D88);
	op_stkvar	(x,	1);
	create_insn	(0X7D026D9E);
	create_insn	(x=0X7D026DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026DD2);
	op_hex		(x,	1);
	create_insn	(x=0X7D026DE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026DF6);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D026E04);
	op_plain_offset	(x,	0,	0X7D026D68);
	op_plain_offset	(x,	128,	0X7D026D68);
	create_dword	(0X7D026E08);
	create_dword	(0X7D026E0C);
	create_insn	(0X7D026E10);
	make_array	(0X7D026E2A,	0X2);
	create_insn	(0X7D026E2C);
	set_name	(0X7D026E2C,	"PkaRsaKgX931MillerRabinTest");
	create_insn	(x=0X7D026E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E6C);
	op_hex		(x,	1);
	create_insn	(x=0X7D026E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E72);
	op_hex		(x,	1);
	create_insn	(x=0X7D026E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EB2);
	op_hex		(x,	1);
	create_insn	(x=0X7D026EB6);
	op_hex		(x,	1);
	create_insn	(x=0X7D026EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EDE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EE4);
	op_hex		(x,	1);
	create_insn	(x=0X7D026EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F00);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F08);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F24);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F28);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F3E);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026F92);
	op_hex		(x,	1);
	create_insn	(x=0X7D026F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FAC);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FB2);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FB8);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FBC);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FD4);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FDE);
	op_hex		(x,	1);
	create_insn	(x=0X7D026FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D026FFA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026FFC,	"a3",	0);
	create_insn	(x=0X7D026FFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D026FFE,	"a2",	0);
	create_insn	(x=0X7D026FFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027000,	"ptr1",	0);
	create_insn	(x=0X7D027000);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027002,	"a4",	0);
	set_cmt	(0X7D027004,	"a1",	0);
	create_insn	(x=0X7D027004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02700E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02701A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02702C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027032);
	op_hex		(x,	1);
	create_insn	(x=0X7D027036);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02703C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027046);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027056);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02706C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02706E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02707C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02707E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02708A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02708C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0270FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02710E);
	op_stkvar	(x,	1);
	make_array	(0X7D02711A,	0X2);
	create_dword	(x=0X7D02711C);
	op_plain_offset	(x,	0,	0X7D026E40);
	op_plain_offset	(x,	128,	0X7D026E40);
	create_dword	(0X7D027120);
	create_insn	(0X7D027124);
	set_name	(0X7D027124,	"PkaRsaKgX931FindPrime1_isra_1");
	set_cmt	(0X7D027128,	"a1",	0);
	create_insn	(x=0X7D02712A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02712C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02713A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02713C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02713E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02714E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027152);
	op_hex		(x,	1);
	create_insn	(x=0X7D027158);
	op_hex		(x,	1);
	create_insn	(x=0X7D027160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027166);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027176);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027188);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02718E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027192);
	op_hex		(x,	1);
	create_insn	(x=0X7D027196);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02719A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02719C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271BC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0271C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0271C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0271DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271E6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0271EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0271F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0271FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027202);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02720A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02720E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027216);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02721A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027222);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027224);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02722E,	"aTimeOut",	0);
	set_cmt	(0X7D027232,	"pMutexId",	0);
	create_insn	(x=0X7D027248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02724A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027254,	"pMutexId",	0);
	create_insn	(x=0X7D02726C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02726E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02727C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02727E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027292);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027298);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02729E,	"pMutexId",	0);
	set_cmt	(0X7D0272A4,	"aTimeOut",	0);
	create_insn	(x=0X7D0272B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0272CA,	"pMutexId",	0);
	create_insn	(x=0X7D0272CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0272FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0272FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027306);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02730C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02730E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02731A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02731C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027326);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02732C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02732E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027342);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02734C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027352);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02736A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02737E,	"a1",	0);
	create_insn	(x=0X7D027380);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027384,	"a2",	0);
	set_cmt	(0X7D027396,	"a1",	0);
	set_cmt	(0X7D02739A,	"a2",	0);
	create_insn	(x=0X7D0273AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0273D0,	"pMutexId",	0);
	create_insn	(x=0X7D0273D0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0273D6,	"aTimeOut",	0);
	create_insn	(x=0X7D0273E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0273EC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0273F6,	"pMutexId",	0);
	create_insn	(x=0X7D0273F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02740A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02740C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027412);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027418);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02741E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027422);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027426);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02742C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02742E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02743E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027446);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027448);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02744A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027456);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02745E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027472);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02747A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027482);
	op_stkvar	(x,	1);
	create_insn	(0X7D027486);
	create_insn	(x=0X7D027488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02748A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027490);
	op_stkvar	(x,	1);
	create_insn	(0X7D027498);
	make_array	(0X7D02749E,	0X2);
	create_dword	(x=0X7D0274A0);
	op_plain_offset	(x,	0,	0X7D02713C);
	op_plain_offset	(x,	128,	0X7D02713C);
	create_dword	(0X7D0274A4);
	create_dword	(0X7D0274A8);
	create_dword	(0X7D0274AC);
	create_dword	(0X7D0274B0);
	create_dword	(0X7D0274B4);
	create_insn	(0X7D0274B8);
	set_name	(0X7D0274B8,	"PkaRsaKgX931LucasPrimeTest_isra_0");
	create_insn	(x=0X7D0274C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0274F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0274F8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0274FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027506);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02750C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02750E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02751E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027526);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02752C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027532);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027536);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02753C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027546);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027552);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027554);
	op_hex		(x,	1);
	create_insn	(x=0X7D027558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02755A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027562);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02756E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027572);
	op_hex		(x,	1);
	create_insn	(x=0X7D027576);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027578);
	op_hex		(x,	1);
	create_insn	(x=0X7D02757C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027586);
	op_hex		(x,	1);
	create_insn	(x=0X7D02758A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02758C);
	op_hex		(x,	1);
	create_insn	(x=0X7D027590);
	op_hex		(x,	1);
	create_insn	(x=0X7D027598);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02759C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02759E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275A0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0275A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0275B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0275CE,	"aTimeOut",	0);
	set_cmt	(0X7D0275D2,	"pMutexId",	0);
	create_insn	(x=0X7D0275E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0275F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0275F2,	"pMutexId",	0);
	create_insn	(x=0X7D027600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027616);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02761E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027626);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02762C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027632);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02763A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027646);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02765A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02765C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02765E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027662);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02766C);
	op_hex		(x,	1);
	create_insn	(x=0X7D027670);
	op_hex		(x,	1);
	create_insn	(x=0X7D027676);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02768A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276D0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0276D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0276F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027706);
	op_hex		(x,	1);
	create_insn	(x=0X7D02770C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02770E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027718,	"aTimeOut",	0);
	set_cmt	(0X7D02771C,	"pMutexId",	0);
	create_insn	(x=0X7D027730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027732);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02773C,	"pMutexId",	0);
	create_insn	(x=0X7D027742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027746);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027756);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02775E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027762,	"aTimeOut",	0);
	set_cmt	(0X7D027766,	"pMutexId",	0);
	create_insn	(x=0X7D02777E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027780);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02778A,	"pMutexId",	0);
	create_insn	(x=0X7D027790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027792);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277A0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0277AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0277B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0277C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0277D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0277F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02780E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02781A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02781E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027822);
	op_hex		(x,	1);
	create_insn	(x=0X7D02782C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02782E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02784A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02784E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027852);
	op_hex		(x,	1);
	create_insn	(x=0X7D027856);
	op_stkvar	(x,	1);
	create_insn	(0X7D02785A);
	create_insn	(0X7D027860);
	create_insn	(x=0X7D027866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02786E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02787A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02787E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027884);
	op_hex		(x,	1);
	create_insn	(x=0X7D027888);
	op_hex		(x,	1);
	create_insn	(x=0X7D027890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027892);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0278B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0278BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0278E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0278F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0278FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027904);
	op_hex		(x,	1);
	create_insn	(x=0X7D027908);
	op_hex		(x,	1);
	create_insn	(x=0X7D02790E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02791E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02792A);
	op_hex		(x,	1);
	create_insn	(x=0X7D027932);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027934);
	op_hex		(x,	1);
	create_insn	(x=0X7D027938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02793A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027940);
	op_hex		(x,	1);
	create_insn	(x=0X7D027946);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027948);
	op_hex		(x,	1);
	create_insn	(x=0X7D02794C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027956);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02795A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02796E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02797A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02797C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027982);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02798A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02799E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0279FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A58);
	op_hex		(x,	1);
	create_insn	(x=0X7D027A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027A9E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027AA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027ACA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027ADA);
	op_hex		(x,	1);
	create_insn	(x=0X7D027ADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AE4);
	op_hex		(x,	1);
	create_insn	(x=0X7D027AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027AF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D027AFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B22);
	op_stkvar	(x,	1);
	make_array	(0X7D027B2E,	0X2);
	create_dword	(x=0X7D027B30);
	op_plain_offset	(x,	0,	0X7D0274CC);
	op_plain_offset	(x,	128,	0X7D0274CC);
	create_dword	(0X7D027B34);
	create_dword	(0X7D027B38);
	create_insn	(0X7D027B3C);
	set_name	(0X7D027B3C,	"PkaRsaKgFindPrime_isra_4_constprop_6");
	create_insn	(x=0X7D027B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027B96);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D027B98);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D027B9A);
	op_stkvar	(x,	1);
	create_insn	(0X7D027BA8);
	create_insn	(x=0X7D027BAC);
	op_hex		(x,	1);
	create_insn	(x=0X7D027BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D027BF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027BFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C3E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027C88,	"a1",	0);
	create_insn	(x=0X7D027C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D027C8E,	"a2",	0);
	create_insn	(x=0X7D027C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027C92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CBC);
	op_hex		(x,	1);
	create_insn	(x=0X7D027CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CE8);
	op_hex		(x,	1);
	create_insn	(x=0X7D027CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027CEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D027CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D26);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D3A);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D40);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D5C);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D60);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D7E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D82);
	op_hex		(x,	1);
	create_insn	(x=0X7D027D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027D9C);
	op_hex		(x,	1);
	create_insn	(x=0X7D027DA0);
	op_hex		(x,	1);
	create_insn	(x=0X7D027DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DD2);
	op_hex		(x,	1);
	create_insn	(x=0X7D027DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027DF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D027DFC);
	op_hex		(x,	1);
	create_insn	(x=0X7D027E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E18);
	op_hex		(x,	1);
	create_insn	(x=0X7D027E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E8A);
	op_hex		(x,	1);
	create_insn	(x=0X7D027E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027E9E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027EAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027ECE);
	op_hex		(x,	1);
	create_insn	(x=0X7D027ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F0E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F2A);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F4A);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F6E);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F72);
	op_hex		(x,	1);
	create_insn	(x=0X7D027F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FD8);
	op_hex		(x,	1);
	create_insn	(x=0X7D027FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FF0);
	op_hex		(x,	1);
	create_insn	(x=0X7D027FF6);
	op_hex		(x,	1);
	create_insn	(x=0X7D027FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D027FFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02800A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028016);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02801C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028022);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02802C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028030,	"aTimeOut",	0);
	set_cmt	(0X7D028034,	"pMutexId",	0);
	create_insn	(x=0X7D028044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02804E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028050);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02805A,	"pMutexId",	0);
	create_insn	(x=0X7D028068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028072);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02807A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028082);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02808A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028096);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028098);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02809E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0280A4,	"pMutexId",	0);
	set_cmt	(0X7D0280AA,	"aTimeOut",	0);
	create_insn	(x=0X7D0280B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280C2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0280CC,	"pMutexId",	0);
	create_insn	(x=0X7D0280D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0280FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02810A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02810C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028112);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028118,	"pMutexId",	0);
	set_cmt	(0X7D02811E,	"aTimeOut",	0);
	create_insn	(x=0X7D02812A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028136);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028146,	"pMutexId",	0);
	create_insn	(x=0X7D02814C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02814E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02815C);
	op_stkvar	(x,	1);
	create_insn	(0X7D028164);
	create_insn	(0X7D028172);
	set_cmt	(0X7D02817C,	"a1",	0);
	create_insn	(x=0X7D028180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028182);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028188);
	op_hex		(x,	1);
	create_insn	(x=0X7D028190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028192);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02819C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02819E);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281BE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281EC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0281FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0281FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028202);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028206);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02820A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02820C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028212);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028224);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02822C,	"a1",	0);
	set_cmt	(0X7D02822E,	"a2",	0);
	set_cmt	(0X7D028240,	"a2",	0);
	create_insn	(0X7D028240);
	set_cmt	(0X7D028250,	"a1",	0);
	create_insn	(x=0X7D028256);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028262);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02826A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02826E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028276);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02827C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028286);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02828E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028292);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028298);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02829A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0282FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028302);
	op_stkvar	(x,	1);
	create_insn	(0X7D028308);
	create_insn	(x=0X7D02830A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02830C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028312);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02831A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02831E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028336);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02833E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02834E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02835C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028378);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02837A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02837E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028382);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028392);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D0283A0);
	op_plain_offset	(x,	0,	0X7D027B60);
	op_plain_offset	(x,	128,	0X7D027B60);
	create_dword	(0X7D0283A4);
	create_dword	(0X7D0283A8);
	create_dword	(0X7D0283AC);
	create_dword	(0X7D0283B0);
	create_dword	(0X7D0283B4);
	create_dword	(0X7D0283B8);
	create_insn	(0X7D0283BC);
	create_insn	(x=0X7D0283C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283EE);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0283F0);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0283F4);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0283F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0283FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028406);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028422);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028426);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02843E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028448);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02844A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02845A);
	op_hex		(x,	1);
	create_insn	(x=0X7D028462);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02846A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028482);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028486);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02848C);
	op_hex		(x,	1);
	create_insn	(x=0X7D028490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0284B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0284C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0284CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0284F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028500);
	op_stkvar	(x,	1);
	create_insn	(0X7D02850E);
	create_insn	(x=0X7D028514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028516);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02851C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028526);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02852A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02853A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028542);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02854E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028550);
	op_hex		(x,	1);
	create_insn	(x=0X7D028554);
	op_hex		(x,	1);
	create_insn	(x=0X7D02855E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028572);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02857E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028582);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02858A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028592);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028598);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02859E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0285B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0285C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0285E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0285EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0285F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02860E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028612);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02861C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02861E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02863C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02864E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028656);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02866A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02866C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028672);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286E2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0286E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0286F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028708);
	op_hex		(x,	1);
	create_insn	(x=0X7D028714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028732);
	op_hex		(x,	1);
	create_insn	(x=0X7D028740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028748);
	op_stkvar	(x,	1);
	create_insn	(0X7D028758);
	create_insn	(x=0X7D02875A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02875C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028762);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028772);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02877A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02878A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02878C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02879C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287C8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0287E6);
	create_insn	(x=0X7D0287E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0287F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02880E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02881E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02882A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028842);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028856);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02886A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02886C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028882);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02889A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02889C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0288FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028902);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028912);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02893C);
	op_stkvar	(x,	1);
	create_insn	(0X7D028944);
	create_insn	(x=0X7D02894C);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D028958);
	op_plain_offset	(x,	0,	0X7D0283DA);
	op_plain_offset	(x,	128,	0X7D0283DA);
	create_dword	(0X7D02895C);
	create_dword	(0X7D028960);
	create_insn	(0X7D028964);
	set_name	(0X7D028964,	"RsaPrimeTestCall");
	create_insn	(x=0X7D02897A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028986);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02898C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02898E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028990);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D028992);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D028994);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0289A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289AE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0289B6);
	create_insn	(x=0X7D0289BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0289F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0289FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0289FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A48);
	op_hex		(x,	1);
	create_insn	(x=0X7D028A54);
	op_hex		(x,	1);
	create_insn	(x=0X7D028A58);
	op_hex		(x,	1);
	create_insn	(x=0X7D028A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028A8E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028A94,	"aTimeOut",	0);
	set_cmt	(0X7D028A9C,	"pMutexId",	0);
	create_insn	(x=0X7D028AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028ABA,	"pMutexId",	0);
	create_insn	(x=0X7D028AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B06);
	op_hex		(x,	1);
	create_insn	(x=0X7D028B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028B60);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D028B68);
	op_plain_offset	(x,	0,	0X7D02897C);
	op_plain_offset	(x,	128,	0X7D02897C);
	create_dword	(0X7D028B6C);
	create_dword	(0X7D028B70);
	create_dword	(0X7D028B74);
	create_dword	(0X7D028B78);
	create_insn	(0X7D028B7C);
	set_name	(0X7D028B7C,	"RsaGenerateKeyPair");
	create_insn	(x=0X7D028B9C);
	op_stkvar	(x,	1);
	create_insn	(0X7D028BA6);
	create_insn	(x=0X7D028BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028C68);
	op_stkvar	(x,	1);
	create_insn	(0X7D028C70);
	create_insn	(x=0X7D028C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028CE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028CE8,	"ptr2",	0);
	create_insn	(x=0X7D028CE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028CEC,	"ptr1",	0);
	set_cmt	(0X7D028CF8,	"ptr1",	0);
	set_cmt	(0X7D028CFC,	"ptr2",	0);
	create_insn	(x=0X7D028CFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D028D08,	"ptr2",	0);
	set_cmt	(0X7D028D0A,	"ptr1",	0);
	create_insn	(x=0X7D028D0A);
	op_stkvar	(x,	1);
	create_insn	(0X7D028D16);
	create_insn	(x=0X7D028D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D82);
	op_stkvar	(x,	1);
	create_insn	(0X7D028D88);
	create_insn	(x=0X7D028D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DA4);
	op_stkvar	(x,	1);
	create_insn	(0X7D028DB2);
	create_insn	(x=0X7D028DBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028DFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E72);
	op_hex		(x,	1);
	create_insn	(x=0X7D028E76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E78);
	op_hex		(x,	1);
	create_insn	(x=0X7D028E82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028E9E);
	op_hex		(x,	1);
	create_insn	(x=0X7D028EA2);
	op_hex		(x,	1);
	create_insn	(x=0X7D028EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028EFC);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F02);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F56);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F5E);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F7E);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F82);
	op_hex		(x,	1);
	create_insn	(x=0X7D028F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FA2);
	op_hex		(x,	1);
	create_insn	(x=0X7D028FA6);
	op_hex		(x,	1);
	create_insn	(x=0X7D028FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D028FFE);
	op_stkvar	(x,	1);
	create_insn	(0X7D029004);
	set_cmt	(0X7D029010,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D029024);
	op_stkvar	(x,	1);
	create_insn	(0X7D029032);
	make_array	(0X7D029036,	0X2);
	create_dword	(x=0X7D029038);
	op_plain_offset	(x,	0,	0X7D028B98);
	op_plain_offset	(x,	128,	0X7D028B98);
	create_dword	(0X7D02903C);
	create_dword	(0X7D029040);
	create_insn	(0X7D029044);
	set_name	(0X7D029044,	"EcWrstDsaTruncateMsg");
	create_insn	(x=0X7D029054);
	op_hex		(x,	1);
	make_array	(0X7D029092,	0X2);
	create_insn	(0X7D029094);
	set_name	(0X7D029094,	"EcWrstInitPubKey");
	create_insn	(x=0X7D0290A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0290C0);
	create_insn	(x=0X7D029124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029126);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02913A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02913C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029152);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029166);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02916E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02919A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02919C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0291B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0291B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0291CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0291CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0291DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0291E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0291F2);
	create_insn	(x=0X7D02920E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029210);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029218,	"aTimeOut",	0);
	set_cmt	(0X7D029222,	"pMutexId",	0);
	create_insn	(x=0X7D029232);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029234);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02923E,	"pMutexId",	0);
	create_insn	(x=0X7D029244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029246);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02925E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029260);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D029280);
	op_plain_offset	(x,	0,	0X7D0290AE);
	op_plain_offset	(x,	128,	0X7D0290AE);
	create_dword	(0X7D029284);
	create_dword	(0X7D029288);
	create_insn	(0X7D02928C);
	set_name	(0X7D02928C,	"EcWrstFullCheckPublKey");
	set_cmt	(0X7D02928E,	"inPointX",	0);
	set_cmt	(0X7D0292A0,	"outPointX",	0);
	create_insn	(x=0X7D0292A0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0292A4,	"inPointY",	0);
	create_insn	(x=0X7D0292A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0292AA,	"scalar",	0);
	set_cmt	(0X7D0292B0,	"pDomain",	0);
	set_cmt	(0X7D0292B8,	"outPointY",	0);
	create_insn	(x=0X7D0292B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0292BA,	"tmpBuff",	0);
	create_insn	(x=0X7D0292BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0292C6,	"CounterBuff_ptr",	0);
	create_insn	(0X7D0292C6);
	set_cmt	(0X7D0292C8,	"CounterSizeWords",	0);
	set_cmt	(0X7D0292DC,	"CounterSizeWords",	0);
	create_insn	(0X7D0292DC);
	set_cmt	(0X7D0292DE,	"CounterBuff_ptr",	0);
	make_array	(0X7D0292F6,	0X2);
	create_insn	(0X7D0292F8);
	set_name	(0X7D0292F8,	"EcWrstDhDeriveSharedSecret");
	set_cmt	(0X7D029310,	"outPointX",	0);
	create_insn	(x=0X7D029310);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029314,	"inPointY",	0);
	create_insn	(x=0X7D029314);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02931C,	"inPointX",	0);
	set_cmt	(0X7D029320,	"pDomain",	0);
	set_cmt	(0X7D02932A,	"outPointY",	0);
	create_insn	(x=0X7D02932A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02932E,	"tmpBuff",	0);
	create_insn	(x=0X7D02932E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02934C,	"CounterBuff_ptr",	0);
	create_insn	(0X7D02934C);
	set_cmt	(0X7D02934E,	"CounterSizeWords",	0);
	set_cmt	(0X7D029360,	"CounterSizeWords",	0);
	create_insn	(0X7D029360);
	set_cmt	(0X7D029362,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D029370,	"dst_ptr",	0);
	set_cmt	(0X7D029372,	"src_ptr",	0);
	make_array	(0X7D02937E,	0X2);
	create_insn	(0X7D029380);
	set_name	(0X7D029380,	"EcWrstDsaVerify");
	create_insn	(x=0X7D02938C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0293D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0293DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0293E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0293E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029442);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029498);
	op_stkvar	(x,	1);
	make_array	(0X7D0294A6,	0X2);
	create_dword	(x=0X7D0294A8);
	op_plain_offset	(x,	0,	0X7D0293AE);
	op_plain_offset	(x,	128,	0X7D0293AE);
	create_dword	(0X7D0294AC);
	create_insn	(0X7D0294B0);
	create_insn	(x=0X7D0294B6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0294D0);
	create_insn	(x=0X7D0294D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0294DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0294E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0294E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0294F4);
	op_hex		(x,	1);
	create_insn	(0X7D029504);
	create_insn	(x=0X7D029512);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029528);
	op_hex		(x,	1);
	create_insn	(x=0X7D02952C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029532);
	op_hex		(x,	1);
	create_insn	(0X7D029546);
	create_insn	(x=0X7D029548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02955A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02955C,	"in8_ptr",	0);
	set_cmt	(0X7D02955E,	"out32_ptr",	0);
	set_cmt	(0X7D029564,	"sizeInBytes",	0);
	create_insn	(x=0X7D029564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02957E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029584,	"CounterSizeWords",	0);
	create_insn	(0X7D029584);
	set_cmt	(0X7D029586,	"CounterBuff_ptr",	0);
	set_cmt	(0X7D0295AA,	"sizeInBytes",	0);
	create_insn	(x=0X7D0295AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0295B4,	"in8_ptr",	0);
	set_cmt	(0X7D0295B6,	"out32_ptr",	0);
	set_cmt	(0X7D0295C0,	"sizeOutBuffBytes",	0);
	create_insn	(x=0X7D0295C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0295CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0295D6,	"CounterSizeWords",	0);
	set_cmt	(0X7D0295D8,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D0295E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029600,	"sizeInBytes",	0);
	set_cmt	(0X7D029602,	"in8_ptr",	0);
	set_cmt	(0X7D029604,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D029606,	"out32_ptr",	0);
	set_cmt	(0X7D029614,	"sizeInBytes",	0);
	set_cmt	(0X7D029616,	"in8_ptr",	0);
	create_insn	(x=0X7D029616);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029618,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D02961A,	"out32_ptr",	0);
	set_cmt	(0X7D029628,	"sizeInBytes",	0);
	set_cmt	(0X7D02962A,	"in8_ptr",	0);
	create_insn	(x=0X7D02962A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02962C,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D02962E,	"out32_ptr",	0);
	set_cmt	(0X7D02963C,	"sizeInBytes",	0);
	set_cmt	(0X7D02963E,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D029640,	"in8_ptr",	0);
	create_insn	(x=0X7D029640);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029642,	"out32_ptr",	0);
	create_insn	(0X7D029690);
	set_cmt	(0X7D02969A,	"sizeInBytes",	0);
	create_insn	(x=0X7D02969A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02969C,	"sizeOutBuffBytes",	0);
	set_cmt	(0X7D02969E,	"in8_ptr",	0);
	create_insn	(x=0X7D02969E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0296A0,	"out32_ptr",	0);
	make_array	(0X7D0296B2,	0X2);
	create_insn	(0X7D0296B4);
	set_name	(0X7D0296B4,	"CRYS_ECPKI_GetEcDomain");
	set_cmt	(0X7D0296B6,	"switch 11 cases ",	0);
	set_cmt	(0X7D0296C6,	"switch jump",	0);
	set_cmt	(0X7D0296C8,	"jumptable 7D0296C6 default case",	1);
	create_insn	(0X7D0296C8);
	set_name	(0X7D0296C8,	"def_7D0296C6");
	create_dword	(x=0X7D0296CC);
	op_plain_offset	(x,	0,	0X7D0296BC);
	op_plain_offset	(x,	128,	0X7D0296BC);
	create_dword	(0X7D0296D0);
	create_insn	(0X7D0296D4);
	set_name	(0X7D0296D4,	"EcWrstDsaSign");
	create_insn	(x=0X7D0296F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0296F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0296F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0296FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029706);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02970C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029722);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02972E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029732);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029736);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029738);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02973A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029746,	"len",	0);
	create_insn	(x=0X7D029746);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029748,	"ptr1",	0);
	set_cmt	(0X7D02974A,	"ptr2",	0);
	create_insn	(x=0X7D02974A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029756);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029758,	"inPointY",	0);
	create_insn	(x=0X7D029758);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02975A,	"scalar",	0);
	set_cmt	(0X7D02975C,	"tmpBuff",	0);
	create_insn	(x=0X7D02975C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02975E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029760,	"outPointX",	0);
	create_insn	(x=0X7D029760);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029762,	"pDomain",	0);
	create_insn	(x=0X7D029762);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029764,	"outPointY",	0);
	create_insn	(x=0X7D029764);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029766,	"inPointX",	0);
	set_cmt	(0X7D02976A,	"scalSizeInWords",	0);
	create_insn	(x=0X7D02976A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02977A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02978E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029790);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029796);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D02979A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02979C);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D02979E);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0297A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297A2);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0297A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297A6);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D0297A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297C2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0297CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0297D8,	"ptr2",	0);
	create_insn	(x=0X7D0297D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0297E0,	"ptr1",	0);
	set_cmt	(0X7D0297E2,	"len",	0);
	create_insn	(x=0X7D0297E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0297E8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0297EA,	"rndContext_ptr",	0);
	create_insn	(x=0X7D0297EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0297F2,	"rndVect_ptr",	0);
	set_cmt	(0X7D0297F4,	"rndSizeInBits",	0);
	set_cmt	(0X7D0297F8,	"maxVect_ptr",	0);
	create_insn	(0X7D029808);
	create_insn	(0X7D029818);
	create_insn	(x=0X7D02981C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029822);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02982E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02984C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029856);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02985C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02986A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029886);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02988A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029894);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298B0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298E2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0298E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0298FC);
	op_hex		(x,	1);
	create_insn	(x=0X7D029906);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029914);
	op_hex		(x,	1);
	create_insn	(x=0X7D029918);
	op_hex		(x,	1);
	create_insn	(x=0X7D02991E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02992C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02992E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02993C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029942);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02994A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02994E);
	op_hex		(x,	1);
	create_insn	(x=0X7D029958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02995A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02996C);
	op_hex		(x,	1);
	create_insn	(x=0X7D029972);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02997A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02998C);
	op_hex		(x,	1);
	create_insn	(x=0X7D029992);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299A2);
	op_hex		(x,	1);
	create_insn	(x=0X7D0299A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299B0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0299B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D0299BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0299F4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0299FC);
	create_insn	(x=0X7D029A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A0A);
	op_stkvar	(x,	1);
	make_array	(0X7D029A16,	0X2);
	create_dword	(x=0X7D029A18);
	op_plain_offset	(x,	0,	0X7D029734);
	op_plain_offset	(x,	128,	0X7D029734);
	create_dword	(0X7D029A1C);
	create_dword	(0X7D029A20);
	create_insn	(0X7D029A24);
	set_name	(0X7D029A24,	"PkaScalarMultAff");
	create_insn	(x=0X7D029A42);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029A46);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029A48);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029A52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029A96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029AAC);
	op_hex		(x,	1);
	create_insn	(x=0X7D029AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029AB2);
	op_hex		(x,	1);
	create_insn	(x=0X7D029ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029ACA);
	op_hex		(x,	1);
	create_insn	(x=0X7D029ACE);
	op_hex		(x,	1);
	create_insn	(x=0X7D029AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029ADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029AEA);
	op_hex		(x,	1);
	create_insn	(x=0X7D029AEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D029AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B0A);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B0E);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B1C);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B24);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B3A);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B3E);
	op_hex		(x,	1);
	create_insn	(x=0X7D029B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029BBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029BCA);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D029BD4);
	op_plain_offset	(x,	0,	0X7D029A3C);
	op_plain_offset	(x,	128,	0X7D029A3C);
	create_dword	(0X7D029BD8);
	create_dword	(0X7D029BDC);
	create_insn	(0X7D029BE0);
	create_insn	(0X7D029C16);
	make_array	(0X7D029C26,	0X2);
	create_insn	(0X7D029C28);
	set_name	(0X7D029C28,	"PkaBuildNaf");
	create_insn	(0X7D029C34);
	create_insn	(0X7D029C54);
	create_insn	(x=0X7D029C58);
	op_hex		(x,	1);
	create_insn	(x=0X7D029C74);
	op_stkvar	(x,	1);
	create_insn	(0X7D029C90);
	set_cmt	(0X7D029CA2,	"CounterSize",	0);
	set_cmt	(0X7D029CA8,	"Val",	0);
	set_cmt	(0X7D029CAA,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D029CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029CC2);
	op_stkvar	(x,	1);
	create_insn	(0X7D029D00);
	create_insn	(x=0X7D029D04);
	op_hex		(x,	1);
	create_insn	(x=0X7D029D08);
	op_stkvar	(x,	1);
	create_insn	(0X7D029D1C);
	create_insn	(0X7D029D24);
	set_name	(0X7D029D24,	"ScalarMultAff");
	create_insn	(x=0X7D029D3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029D3C,	"ptr2",	0);
	create_insn	(x=0X7D029D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D52);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	set_cmt	(0X7D029D5C,	"len",	0);
	create_insn	(x=0X7D029D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D68);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	set_cmt	(0X7D029D6A,	"ptr1",	0);
	create_insn	(x=0X7D029D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D78);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029D7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D7C);
	op_plain_offset	(x,	1,	0X7D04720C);
	op_plain_offset	(x,	129,	0X7D04720C);
	create_insn	(x=0X7D029D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E48);
	op_stkvar	(x,	1);
	make_array	(0X7D029E62,	0X2);
	create_dword	(x=0X7D029E64);
	op_plain_offset	(x,	0,	0X7D029D3C);
	op_plain_offset	(x,	128,	0X7D029D3C);
	create_dword	(0X7D029E68);
	create_insn	(0X7D029E6C);
	set_name	(0X7D029E6C,	"PkaEcWrstScalarMult");
	create_insn	(x=0X7D029E74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029E7A,	"CounterSizeWords",	0);
	set_cmt	(0X7D029E7C,	"CounterBuff_ptr",	0);
	create_insn	(x=0X7D029E7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029E82);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029E92,	"Counter1SizeWords",	0);
	set_cmt	(0X7D029E94,	"CounterBuff1_ptr",	0);
	set_cmt	(0X7D029E96,	"CounterBuff2_ptr",	0);
	create_insn	(x=0X7D029EB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029EBA,	"k",	0);
	set_cmt	(0X7D029EBC,	"tmpBuff",	0);
	create_insn	(x=0X7D029EBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029EC0,	"bxr",	0);
	set_cmt	(0X7D029EC2,	"bxp",	0);
	create_insn	(x=0X7D029EC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029EC6,	"domain",	0);
	set_cmt	(0X7D029EC8,	"byp",	0);
	create_insn	(x=0X7D029EC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D029ECA,	"byr",	0);
	set_cmt	(0X7D029ECC,	"kSizeBit",	0);
	create_insn	(x=0X7D029ECC);
	op_stkvar	(x,	1);
	create_insn	(0X7D029ED8);
	set_name	(0X7D029ED8,	"crys_buffer_aligned_len");
	create_insn	(x=0X7D029EE0);
	op_hex		(x,	1);
	create_insn	(x=0X7D029EE4);
	op_hex		(x,	1);
	create_insn	(x=0X7D029EE8);
	op_hex		(x,	1);
	create_insn	(x=0X7D029EEC);
	op_hex		(x,	1);
	create_insn	(0X7D029EFA);
	create_insn	(x=0X7D029EFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D029F0A);
	op_stkvar	(x,	1);
	create_insn	(0X7D029F12);
	create_insn	(x=0X7D029F14);
	op_hex		(x,	1);
	create_insn	(0X7D029F1C);
	set_name	(0X7D029F1C,	"crys_init_user_context");
	create_insn	(x=0X7D029F30);
	op_hex		(x,	1);
	set_cmt	(0X7D029F38,	"userContext_buff",	0);
	create_insn	(0X7D029F4E);
	make_array	(0X7D029F52,	0X2);
	create_insn	(0X7D029F54);
	set_name	(0X7D029F54,	"crys_align_user_context");
	create_insn	(0X7D029F6C);
	set_cmt	(0X7D029F6E,	"a3",	0);
	set_cmt	(0X7D029F70,	"a2",	0);
	set_cmt	(0X7D029F7C,	"len",	0);
	set_cmt	(0X7D029F80,	"ptr2",	0);
	set_cmt	(0X7D029F82,	"ptr1",	0);
	create_insn	(0X7D029F8C);
	create_insn	(x=0X7D029FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FBC);
	op_stkvar	(x,	1);
	make_array	(0X7D029FC6,	0X2);
	create_dword	(x=0X7D029FC8);
	op_plain_offset	(x,	0,	0X7D029F96);
	op_plain_offset	(x,	128,	0X7D029F96);
	create_dword	(0X7D029FCC);
	create_insn	(0X7D029FD0);
	create_insn	(x=0X7D029FEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D029FEC);
	op_stkvar	(x,	1);
	make_array	(0X7D029FF6,	0X2);
	create_dword	(x=0X7D029FF8);
	op_plain_offset	(x,	0,	0X7D029FDA);
	op_plain_offset	(x,	128,	0X7D029FDA);
	create_dword	(0X7D029FFC);
	create_insn	(0X7D02A000);
	create_insn	(x=0X7D02A026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A028);
	op_stkvar	(x,	1);
	make_array	(0X7D02A03A,	0X2);
	create_dword	(x=0X7D02A03C);
	op_plain_offset	(x,	0,	0X7D02A00A);
	op_plain_offset	(x,	128,	0X7D02A00A);
	create_dword	(0X7D02A040);
	create_insn	(0X7D02A044);
	create_insn	(x=0X7D02A066);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A072);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A08A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A092);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02A098);
	op_plain_offset	(x,	0,	0X7D02A052);
	op_plain_offset	(x,	128,	0X7D02A052);
	create_dword	(0X7D02A09C);
	create_insn	(0X7D02A0A0);
	create_insn	(x=0X7D02A0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A0D8);
	op_stkvar	(x,	1);
	make_array	(0X7D02A0DE,	0X2);
	create_dword	(x=0X7D02A0E0);
	op_plain_offset	(x,	0,	0X7D02A0AE);
	op_plain_offset	(x,	128,	0X7D02A0AE);
	create_dword	(0X7D02A0E4);
	create_insn	(0X7D02A0E8);
	create_insn	(x=0X7D02A0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A0F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A0F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A0FC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A106);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A10E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A112);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A116);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A126);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A128);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A136);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A13A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A13E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A148);
	create_insn	(0X7D02A16C);
	create_insn	(x=0X7D02A19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A19E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A1A4);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A1AE);
	create_insn	(x=0X7D02A1C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A1CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A1CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A1DE);
	create_insn	(0X7D02A1FE);
	make_array	(0X7D02A202,	0X2);
	create_insn	(0X7D02A204);
	create_insn	(x=0X7D02A216);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A21E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A222);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02A228,	"switch 7 cases ",	0);
	set_cmt	(0X7D02A22E,	"switch jump",	0);
	set_cmt	(0X7D02A232,	"jump table for switch statement",	0);
	create_byte	(0X7D02A232);
	set_name	(0X7D02A232,	"jpt_7D02A22E");
	create_byte	(0X7D02A233);
	create_byte	(0X7D02A234);
	create_byte	(0X7D02A235);
	create_byte	(0X7D02A236);
	create_byte	(0X7D02A237);
	create_byte	(0X7D02A238);
	create_insn	(x=0X7D02A23A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A240);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A24A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A24E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A252);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A258);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A262);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A270);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A27A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A28A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A28E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A292);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A298);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A29E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A2A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02A2A8,	"jumptable 7D02A22E case 0",	1);
	set_cmt	(0X7D02A2AE,	"jumptable 7D02A22E cases 2,4,6",	1);
	create_insn	(x=0X7D02A2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A2B0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A2B4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A2BC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A2C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A2D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A2E6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A2F8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A30C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A314);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A31E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A326);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A340);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A346);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A34A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A34E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02A352,	"jumptable 7D02A22E default case",	1);
	create_insn	(x=0X7D02A352);
	op_stkvar	(x,	1);
	set_name	(0X7D02A352,	"def_7D02A22E");
	create_insn	(x=0X7D02A354);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A358);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A35E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A362);
	create_insn	(x=0X7D02A36A);
	op_hex		(x,	1);
	make_array	(0X7D02A372,	0X2);
	create_insn	(0X7D02A374);
	create_insn	(0X7D02A38A);
	create_insn	(x=0X7D02A38E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A392);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A396);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A398);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A39E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A3C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A3C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A3E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A3EC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A3FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A402);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A40E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A41C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A422);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A426);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A42A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A436);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A43A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A44A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A452);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A456);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A45A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A468);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A470);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A47A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A47E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A482);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A486);
	create_insn	(x=0X7D02A48A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A492);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A49C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A4A0);
	create_insn	(x=0X7D02A4B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A4FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A506);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A52A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A52E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A53C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A544);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A548);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A556);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A55E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A566);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A568);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A576);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A57E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A58E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A592);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A596);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A59A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A59E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5CA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5CE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5E8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A5FA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A5FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A604);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A608);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A612);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A616);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A61E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A622);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A624);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A62C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A64C);
	create_insn	(x=0X7D02A652);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A654);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A65A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A65C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A660);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A66E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A676);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A690);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A694);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A698);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A69C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6B4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A6B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A6BC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A6C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6C6);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A6D2);
	create_insn	(x=0X7D02A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6E2);
	op_hex		(x,	1);
	create_insn	(0X7D02A6E8);
	create_insn	(x=0X7D02A6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A6FC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A70E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A712);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A716);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A71E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A722);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A726);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A732);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A736);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A742);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A746);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A74E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A752);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A75A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A75E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A76A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A772);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A778);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A77C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A780);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A788);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A78C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A798);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A79A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A79C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A7A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A7AC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A7B0);
	create_insn	(0X7D02A81A);
	create_insn	(0X7D02A82E);
	create_insn	(x=0X7D02A83C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A860);
	create_insn	(x=0X7D02A86C);
	op_hex		(x,	1);
	create_insn	(0X7D02A87C);
	create_insn	(x=0X7D02A88E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A89A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A89C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8A2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8D8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8DC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02A8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A906);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A90A);
	create_dword	(x=0X7D02A914);
	op_plain_offset	(x,	0,	0X7D02A7CC);
	op_plain_offset	(x,	128,	0X7D02A7CC);
	create_dword	(0X7D02A918);
	create_insn	(0X7D02A91C);
	create_insn	(x=0X7D02A93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02A946);
	op_stkvar	(x,	1);
	create_insn	(0X7D02A9E0);
	create_insn	(0X7D02AA20);
	create_insn	(x=0X7D02AA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA68);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AA96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AACA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AACE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAD2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AAD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB0E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB14);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB20);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB2A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB54);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AB72);
	create_insn	(x=0X7D02AB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AB96);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AB9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABB0);
	op_hex		(x,	1);
	create_insn	(0X7D02ABB6);
	create_insn	(x=0X7D02ABC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABCC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02ABD2);
	create_insn	(x=0X7D02ABD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABE6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02ABEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ABF4);
	op_stkvar	(x,	1);
	create_insn	(0X7D02ABF8);
	create_insn	(x=0X7D02AC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC06);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AC0A);
	create_insn	(x=0X7D02AC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC0E);
	op_stkvar	(x,	1);
	make_array	(0X7D02AC12,	0X2);
	create_insn	(0X7D02AC14);
	create_insn	(x=0X7D02AC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AC3A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AC86);
	create_insn	(0X7D02ACAA);
	create_insn	(x=0X7D02ACD4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02ACD8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02ACE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ACEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ACEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ACF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ACF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ACF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD08);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AD20);
	create_insn	(0X7D02AD38);
	create_insn	(x=0X7D02AD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD5C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD62);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AD6C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD78);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD80);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD84);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD88);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AD8C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AD90);
	create_insn	(0X7D02AD9E);
	create_insn	(x=0X7D02ADC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02ADD2);
	op_stkvar	(x,	1);
	create_insn	(0X7D02ADE4);
	create_insn	(0X7D02AE10);
	create_insn	(x=0X7D02AE24);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE34);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE58);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE5C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE60);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE66);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE6C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE72);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE78);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AE7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AE9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEA6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AEAA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AEAE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AEB2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEBA);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AEBE);
	create_insn	(x=0X7D02AECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AEEA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AEF6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AF06);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AF0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02AF10);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AF14);
	op_hex		(x,	1);
	create_insn	(x=0X7D02AF1C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02AF20);
	make_array	(0X7D02AF32,	0X2);
	create_insn	(0X7D02AF34);
	create_insn	(0X7D02AF48);
	create_insn	(x=0X7D02AF50);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02AF5C);
	op_plain_offset	(x,	0,	0X7D02AF3E);
	op_plain_offset	(x,	128,	0X7D02AF3E);
	create_dword	(0X7D02AF60);
	create_insn	(0X7D02AF64);
	create_insn	(0X7D02AF76);
	create_insn	(x=0X7D02AF7E);
	op_stkvar	(x,	1);
	make_array	(0X7D02AF8A,	0X2);
	create_dword	(x=0X7D02AF8C);
	op_plain_offset	(x,	0,	0X7D02AF6E);
	op_plain_offset	(x,	128,	0X7D02AF6E);
	create_dword	(0X7D02AF90);
	create_insn	(0X7D02AF94);
	create_insn	(0X7D02AFA6);
	create_insn	(x=0X7D02AFAE);
	op_stkvar	(x,	1);
	make_array	(0X7D02AFBA,	0X2);
	create_dword	(x=0X7D02AFBC);
	op_plain_offset	(x,	0,	0X7D02AF9E);
	op_plain_offset	(x,	128,	0X7D02AF9E);
	create_dword	(0X7D02AFC0);
	create_insn	(0X7D02AFC4);
	create_insn	(0X7D02AFD0);
	create_insn	(0X7D02AFE8);
	create_insn	(x=0X7D02AFFC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B00A);
	create_insn	(x=0X7D02B010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B026);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B02C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B036);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B038);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B056);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B05A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B05C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B060);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B066);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B06A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B06E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B072);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B07E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B086);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B08A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B08E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B092);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B096);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B098);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B09E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0BE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0C2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B0CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B0FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B102);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B11A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B11E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B120);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B124);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B128);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B12C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B132);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B134);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B13C);
	create_insn	(0X7D02B158);
	create_insn	(x=0X7D02B15E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B16A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B16E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B178);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B182);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B188);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B18A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B18E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B190);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B194);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B198);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B19E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B1B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B1BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B1C0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B1C4);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B1D0);
	set_cmt	(0X7D02B1F0,	"switch 6 cases ",	0);
	set_cmt	(0X7D02B1F4,	"switch jump",	0);
	set_cmt	(0X7D02B1F8,	"jump table for switch statement",	0);
	create_byte	(0X7D02B1F8);
	set_name	(0X7D02B1F8,	"jpt_7D02B1F4");
	create_byte	(0X7D02B1F9);
	create_byte	(0X7D02B1FA);
	create_byte	(0X7D02B1FB);
	create_byte	(0X7D02B1FC);
	create_byte	(0X7D02B1FD);
	set_cmt	(0X7D02B1FE,	"jumptable 7D02B1F4 case 5",	1);
	create_insn	(0X7D02B1FE);
	set_cmt	(0X7D02B228,	"jumptable 7D02B1F4 case 0",	1);
	create_insn	(0X7D02B228);
	set_cmt	(0X7D02B236,	"jumptable 7D02B1F4 case 1",	1);
	create_insn	(0X7D02B236);
	set_cmt	(0X7D02B244,	"jumptable 7D02B1F4 case 2",	1);
	create_insn	(0X7D02B244);
	set_cmt	(0X7D02B252,	"jumptable 7D02B1F4 case 3",	1);
	create_insn	(0X7D02B252);
	set_cmt	(0X7D02B260,	"jumptable 7D02B1F4 case 4",	1);
	create_insn	(0X7D02B260);
	set_cmt	(0X7D02B26E,	"jumptable 7D02B1F4 default case",	1);
	create_insn	(0X7D02B26E);
	set_name	(0X7D02B26E,	"def_7D02B1F4");
	create_dword	(x=0X7D02B274);
	op_plain_offset	(x,	0,	0X7D02B1EE);
	op_plain_offset	(x,	128,	0X7D02B1EE);
	create_dword	(0X7D02B278);
	create_dword	(0X7D02B27C);
	create_dword	(0X7D02B280);
	create_dword	(0X7D02B284);
	create_dword	(0X7D02B288);
	create_dword	(0X7D02B28C);
	create_insn	(0X7D02B290);
	create_insn	(x=0X7D02B2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B2FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B306);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B30A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B310);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B31E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B322);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B328);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B32C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B336);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B33A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B350);
	create_insn	(0X7D02B35A);
	make_array	(0X7D02B366,	0X2);
	create_insn	(0X7D02B368);
	create_insn	(x=0X7D02B37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B37E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B382);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B38A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B398);
	create_insn	(x=0X7D02B39E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B3FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B40A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B40E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B410);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B424);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B42A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B42E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B432);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B436);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B43C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B440);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B446);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B44C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B456);
	create_insn	(0X7D02B466);
	create_insn	(x=0X7D02B47E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B482);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B48E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B498);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4AE);
	op_hex		(x,	1);
	create_insn	(0X7D02B4B4);
	create_insn	(x=0X7D02B4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B4D8);
	op_stkvar	(x,	1);
	make_array	(0X7D02B4E2,	0X2);
	create_insn	(0X7D02B4E4);
	create_insn	(x=0X7D02B508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B514);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02B51A,	"switch 6 cases ",	0);
	set_cmt	(0X7D02B520,	"switch jump",	0);
	set_cmt	(0X7D02B524,	"jump table for switch statement",	0);
	create_byte	(0X7D02B524);
	set_name	(0X7D02B524,	"jpt_7D02B520");
	create_byte	(0X7D02B525);
	create_byte	(0X7D02B526);
	create_byte	(0X7D02B527);
	create_byte	(0X7D02B528);
	create_byte	(0X7D02B529);
	set_cmt	(0X7D02B52A,	"jumptable 7D02B520 case 5",	1);
	create_insn	(0X7D02B52A);
	create_insn	(x=0X7D02B538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B53E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B544);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B54E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B556);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B55A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B55C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B560);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B566);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B56A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B582);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B586);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B58A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B58E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B592);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B596);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B598);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5BE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5F6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B5FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B5FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B606);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B60A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B60C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B610);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B616);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B61E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B622);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B62A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B62E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B632);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B636);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B63A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B63C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B640);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02B64E,	"jumptable 7D02B520 case 0",	1);
	create_insn	(0X7D02B64E);
	set_cmt	(0X7D02B65E,	"jumptable 7D02B520 case 1",	1);
	create_insn	(0X7D02B65E);
	set_cmt	(0X7D02B66E,	"jumptable 7D02B520 case 2",	1);
	create_insn	(0X7D02B66E);
	set_cmt	(0X7D02B67E,	"jumptable 7D02B520 case 3",	1);
	create_insn	(0X7D02B67E);
	set_cmt	(0X7D02B68E,	"jumptable 7D02B520 case 4",	1);
	create_insn	(0X7D02B68E);
	set_cmt	(0X7D02B69E,	"jumptable 7D02B520 default case",	1);
	create_insn	(0X7D02B69E);
	set_name	(0X7D02B69E,	"def_7D02B520");
	make_array	(0X7D02B6A2,	0X2);
	create_dword	(x=0X7D02B6A4);
	op_plain_offset	(x,	0,	0X7D02B4FE);
	op_plain_offset	(x,	128,	0X7D02B4FE);
	create_dword	(0X7D02B6A8);
	create_dword	(0X7D02B6AC);
	create_dword	(0X7D02B6B0);
	create_dword	(0X7D02B6B4);
	create_dword	(0X7D02B6B8);
	create_dword	(0X7D02B6BC);
	create_insn	(0X7D02B6C0);
	create_insn	(x=0X7D02B6D0);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B6E2);
	create_insn	(x=0X7D02B6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B702);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B72A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B742);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B746);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B756);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B75E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B776);
	op_stkvar	(x,	1);
	make_array	(0X7D02B782,	0X2);
	create_insn	(0X7D02B784);
	create_insn	(x=0X7D02B792);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B7A2);
	create_insn	(x=0X7D02B7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7D4);
	op_stkvar	(x,	1);
	make_array	(0X7D02B7E2,	0X2);
	create_insn	(0X7D02B7E4);
	create_insn	(x=0X7D02B7F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B802);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B806);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B816);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B81E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B822);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B82E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B842);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B846);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B84A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B858);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B862);
	create_insn	(x=0X7D02B868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B88E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B89A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B8EE);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B8F6);
	create_insn	(x=0X7D02B912);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B91E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B926);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B938);
	create_insn	(x=0X7D02B93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B94A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B952);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B956);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B95A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B95C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02B964);
	create_insn	(0X7D02B968);
	create_insn	(x=0X7D02B98A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B996);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B998);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9A4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9C4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9CE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9D2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9DA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02B9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02B9FC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA00);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA04);
	op_stkvar	(x,	1);
	create_insn	(0X7D02BA10);
	make_array	(0X7D02BA1E,	0X2);
	create_insn	(0X7D02BA20);
	create_insn	(x=0X7D02BA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA46);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA52);
	op_stkvar	(x,	1);
	create_insn	(0X7D02BA5C);
	create_insn	(x=0X7D02BA6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA88);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA8C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA94);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BA9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BAA6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BAB2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BAB6);
	op_stkvar	(x,	1);
	create_insn	(0X7D02BAC0);
	create_insn	(0X7D02BADC);
	create_insn	(x=0X7D02BBB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BC40);
	op_stkvar	(x,	1);
	create_insn	(0X7D02BC54);
	create_insn	(0X7D02BC5E);
	create_insn	(0X7D02BC62);
	create_insn	(0X7D02BC78);
	create_insn	(0X7D02BC8E);
	create_insn	(x=0X7D02BC90);
	op_stkvar	(x,	1);
	make_array	(0X7D02BC96,	0X2);
	create_insn	(0X7D02BC98);
	create_insn	(x=0X7D02BCB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BCF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD76);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BD7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BD94);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BD9C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDA0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDA4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDC2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDC6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDCA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDCE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BDEC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BDF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE04);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE0C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE16);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE26);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE2A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE2E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE32);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE4C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE50);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BE56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BEF6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BEFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF02);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF30);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF34);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF4A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF4E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF64);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF68);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF86);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BF96);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFA2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFAC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFCC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFD0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02BFFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02BFFC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C002);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C00A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C00C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C01A);
	create_insn	(x=0X7D02C01E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C034);
	create_insn	(x=0X7D02C04E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C052);
	create_insn	(0X7D02C078);
	create_insn	(x=0X7D02C086);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C08A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C09A);
	create_insn	(x=0X7D02C0A2);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C0A6);
	create_insn	(0X7D02C0CE);
	create_insn	(x=0X7D02C0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C100);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C104);
	create_insn	(x=0X7D02C108);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C112);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C116);
	create_insn	(x=0X7D02C128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C142);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C152);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C16A);
	create_insn	(x=0X7D02C172);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C17E);
	op_stkvar	(x,	1);
	make_array	(0X7D02C18E,	0X2);
	create_insn	(0X7D02C190);
	create_insn	(0X7D02C1B0);
	create_insn	(x=0X7D02C1E6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C1EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C1F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C1FA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C1FE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C208);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C216);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C21E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C226);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C232);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C236);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C248);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C24E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C252);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C256);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C262);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C26A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C272);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C27A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C27C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C280);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C284);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C28A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C28C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C296);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C29A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C2A6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C2AA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C2AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C2B0);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C2BE);
	create_insn	(x=0X7D02C2CA);
	op_stkvar	(x,	1);
	make_array	(0X7D02C2D6,	0X2);
	create_insn	(0X7D02C2D8);
	create_insn	(0X7D02C2F4);
	create_insn	(x=0X7D02C2FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C302);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C30A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C30E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C318);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C326);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C334);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C34C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C358);
	set_name	(0X7D02C358,	"TEE_CryptoCell_DeriveBlock");
	set_cmt	(0X7D02C368,	"a2",	0);
	set_cmt	(0X7D02C36C,	"a3",	0);
	set_cmt	(0X7D02C370,	"userContext_buff",	0);
	create_insn	(x=0X7D02C370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C380);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C39A);
	create_insn	(0X7D02C3A8);
	create_insn	(0X7D02C3B6);
	create_insn	(0X7D02C3C4);
	create_insn	(0X7D02C414);
	create_insn	(0X7D02C41A);
	create_insn	(x=0X7D02C422);
	op_hex		(x,	1);
	set_cmt	(0X7D02C430,	"len",	0);
	set_cmt	(0X7D02C436,	"ptr1",	0);
	set_cmt	(0X7D02C43A,	"ptr2",	0);
	create_insn	(0X7D02C444);
	create_insn	(0X7D02C464);
	set_cmt	(0X7D02C466,	"kinbuf_len",	0);
	set_cmt	(0X7D02C468,	"kinbuf",	0);
	set_cmt	(0X7D02C46A,	"ctx2",	0);
	set_cmt	(0X7D02C46C,	"outbuf",	0);
	create_insn	(x=0X7D02C46C);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02C490);
	op_plain_offset	(x,	0,	0X7D02C378);
	op_plain_offset	(x,	128,	0X7D02C378);
	create_dword	(0X7D02C494);
	create_insn	(0X7D02C498);
	set_name	(0X7D02C498,	"CRYS_COMMON_IncMsbUnsignedCounter");
	create_insn	(x=0X7D02C4E0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02C4FA);
	op_hex		(x,	1);
	create_insn	(0X7D02C518);
	make_array	(0X7D02C51A,	0X2);
	create_insn	(0X7D02C51C);
	set_name	(0X7D02C51C,	"CRYS_COMMON_IncLsbUnsignedCounter");
	make_array	(0X7D02C53A,	0X2);
	create_insn	(0X7D02C53C);
	set_name	(0X7D02C53C,	"CRYS_COMMON_DecrLsbUnsignedCounter");
	create_insn	(0X7D02C54E);
	create_insn	(x=0X7D02C560);
	op_stkvar	(x,	1);
	make_array	(0X7D02C566,	0X2);
	create_insn	(0X7D02C568);
	set_name	(0X7D02C568,	"CRYS_COMMON_CmpMsbUnsignedCounters");
	create_insn	(0X7D02C578);
	create_insn	(0X7D02C590);
	create_insn	(0X7D02C5B2);
	create_insn	(0X7D02C5CA);
	create_insn	(0X7D02C5F6);
	create_insn	(0X7D02C5FA);
	create_insn	(0X7D02C5FE);
	make_array	(0X7D02C602,	0X2);
	create_insn	(0X7D02C604);
	set_name	(0X7D02C604,	"CRYS_COMMON_CmpLsbUnsignedCounters");
	create_insn	(0X7D02C62A);
	create_insn	(0X7D02C678);
	create_insn	(0X7D02C6A6);
	create_insn	(0X7D02C6AA);
	make_array	(0X7D02C6AE,	0X2);
	create_insn	(0X7D02C6B0);
	set_name	(0X7D02C6B0,	"CRYS_COMMON_CmpLsWordsUnsignedCounters");
	create_insn	(0X7D02C6C6);
	create_insn	(0X7D02C6E8);
	create_insn	(0X7D02C70E);
	create_insn	(0X7D02C714);
	create_insn	(0X7D02C72E);
	create_insn	(0X7D02C75C);
	create_insn	(0X7D02C760);
	create_insn	(0X7D02C764);
	set_name	(0X7D02C764,	"CRYS_COMMON_GetBytesCounterEffectiveSizeInBits");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_8(void) {
        auto x;
#define id x

	create_insn	(0X7D02C782);
	create_insn	(x=0X7D02C78C);
	op_hex		(x,	1);
	create_insn	(0X7D02C79C);
	create_insn	(0X7D02C7A0);
	set_name	(0X7D02C7A0,	"CRYS_COMMON_GetWordsCounterEffectiveSizeInBits");
	create_insn	(0X7D02C7B8);
	create_insn	(x=0X7D02C7C2);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C7C8);
	create_insn	(0X7D02C7DA);
	create_insn	(x=0X7D02C7E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C7EE);
	create_insn	(0X7D02C7F2);
	make_array	(0X7D02C7F6,	0X2);
	create_insn	(0X7D02C7F8);
	set_name	(0X7D02C7F8,	"CRYS_COMMON_DivideVectorBy2");
	create_insn	(0X7D02C82E);
	make_array	(0X7D02C83E,	0X2);
	create_insn	(0X7D02C840);
	set_name	(0X7D02C840,	"CRYS_COMMON_ShiftLeftBigEndVector");
	create_insn	(0X7D02C87C);
	create_insn	(0X7D02C884);
	set_name	(0X7D02C884,	"CRYS_COMMON_ShiftRightVector");
	create_insn	(0X7D02C8C0);
	create_insn	(0X7D02C8C8);
	set_name	(0X7D02C8C8,	"CRYS_COMMON_Add2vectors");
	create_insn	(x=0X7D02C8FC);
	op_hex		(x,	1);
	create_insn	(0X7D02C912);
	create_insn	(0X7D02C918);
	set_name	(0X7D02C918,	"CRYS_COMMON_SubtractUintArrays");
	create_insn	(0X7D02C950);
	create_insn	(0X7D02C954);
	set_name	(0X7D02C954,	"CRYS_COMMON_SubtractMSBUint8Arrays");
	create_insn	(x=0X7D02C962);
	op_stkvar	(x,	1);
	create_insn	(0X7D02C9A8);
	create_insn	(0X7D02C9AC);
	create_insn	(0X7D02C9BC);
	set_cmt	(0X7D02C9C4,	"ptr1",	0);
	create_insn	(x=0X7D02C9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C9E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02C9EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02C9F4,	"destination",	0);
	create_insn	(0X7D02C9F4);
	set_cmt	(0X7D02C9F6,	"num",	0);
	set_cmt	(0X7D02C9F8,	"source",	0);
	set_cmt	(0X7D02CA08,	"num",	0);
	set_cmt	(0X7D02CA0A,	"source",	0);
	set_cmt	(0X7D02CA0C,	"destination",	0);
	create_insn	(x=0X7D02CA0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA14,	"HashResultBuff",	0);
	set_cmt	(0X7D02CA16,	"DataSize",	0);
	set_cmt	(0X7D02CA18,	"DataIn_ptr",	0);
	create_insn	(x=0X7D02CA18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA1E,	"OperationMode",	0);
	create_insn	(x=0X7D02CA1E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA2E,	"len",	0);
	create_insn	(x=0X7D02CA2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA30,	"ptr2",	0);
	create_insn	(x=0X7D02CA30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA32,	"ptr1",	0);
	create_insn	(x=0X7D02CA32);
	op_stkvar	(x,	1);
	create_insn	(0X7D02CA3C);
	set_name	(0X7D02CA3C,	"CRYS_RSA_PSS_OAEPEncode");
	create_insn	(x=0X7D02CA42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CA46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CA58);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CA5E,	"switch 6 cases ",	0);
	set_cmt	(0X7D02CA64,	"switch jump",	0);
	set_cmt	(0X7D02CA68,	"jump table for switch statement",	0);
	create_word	(0X7D02CA68);
	set_name	(0X7D02CA68,	"jpt_7D02CA64");
	create_word	(0X7D02CA6A);
	create_word	(0X7D02CA6C);
	create_word	(0X7D02CA6E);
	create_word	(0X7D02CA70);
	create_word	(0X7D02CA72);
	create_insn	(0X7D02CA74);
	set_cmt	(0X7D02CA82,	"jumptable 7D02CA64 case 5",	1);
	create_insn	(0X7D02CA82);
	create_insn	(x=0X7D02CA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CAEA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CAEC,	"DataSize",	0);
	create_insn	(x=0X7D02CAEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CAEE,	"DataIn_ptr",	0);
	create_insn	(x=0X7D02CAEE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CAF4,	"OperationMode",	0);
	create_insn	(x=0X7D02CAF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CAF6,	"HashResultBuff",	0);
	set_cmt	(0X7D02CB04,	"ptr2",	0);
	set_cmt	(0X7D02CB06,	"ptr1",	0);
	set_cmt	(0X7D02CB08,	"len",	0);
	create_insn	(x=0X7D02CB0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CB28,	"len",	0);
	set_cmt	(0X7D02CB2A,	"ptr2",	0);
	create_insn	(x=0X7D02CB2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CB2C,	"ptr1",	0);
	create_insn	(x=0X7D02CB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CBE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CC06,	"jumptable 7D02CA64 case 0",	1);
	create_insn	(0X7D02CC06);
	set_cmt	(0X7D02CC0A,	"jumptable 7D02CA64 case 1",	1);
	create_insn	(0X7D02CC0A);
	set_cmt	(0X7D02CC0E,	"jumptable 7D02CA64 case 2",	1);
	create_insn	(0X7D02CC0E);
	set_cmt	(0X7D02CC12,	"jumptable 7D02CA64 case 3",	1);
	create_insn	(0X7D02CC12);
	set_cmt	(0X7D02CC16,	"jumptable 7D02CA64 case 4",	1);
	create_insn	(0X7D02CC16);
	create_insn	(0X7D02CC1A);
	create_insn	(x=0X7D02CC28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CC2A,	"OperationMode",	0);
	create_insn	(x=0X7D02CC2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CC30,	"ContextID_ptr",	0);
	create_insn	(x=0X7D02CC32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CC40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CC42,	"ContextID_ptr",	0);
	set_cmt	(0X7D02CC48,	"HashResultBuff",	0);
	set_cmt	(0X7D02CC56,	"jumptable 7D02CA64 default case",	1);
	create_insn	(0X7D02CC56);
	set_name	(0X7D02CC56,	"def_7D02CA64");
	create_insn	(0X7D02CC60);
	set_name	(0X7D02CC60,	"CRYS_RSA_PSS_OAEPDecode");
	set_cmt	(0X7D02CC66,	"switch 5 cases ",	0);
	set_cmt	(0X7D02CC6C,	"switch jump",	0);
	set_cmt	(0X7D02CC70,	"jump table for switch statement",	0);
	create_byte	(0X7D02CC70);
	set_name	(0X7D02CC70,	"jpt_7D02CC6C");
	create_byte	(0X7D02CC71);
	create_byte	(0X7D02CC72);
	create_byte	(0X7D02CC73);
	create_byte	(0X7D02CC74);
	set_cmt	(0X7D02CC76,	"jumptable 7D02CC6C case 0",	1);
	create_insn	(0X7D02CC76);
	create_insn	(x=0X7D02CC78);
	op_stkvar	(x,	1);
	create_insn	(0X7D02CC90);
	set_cmt	(0X7D02CCB2,	"jumptable 7D02CC6C case 4",	1);
	create_insn	(0X7D02CCB2);
	set_cmt	(0X7D02CCB6,	"jumptable 7D02CC6C case 3",	1);
	create_insn	(0X7D02CCB6);
	set_cmt	(0X7D02CCBA,	"jumptable 7D02CC6C case 1",	1);
	create_insn	(0X7D02CCBA);
	set_cmt	(0X7D02CCBE,	"jumptable 7D02CC6C case 2",	1);
	create_insn	(0X7D02CCBE);
	create_insn	(0X7D02CCC2);
	create_insn	(x=0X7D02CCCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCEA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD36);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CD78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CD7A,	"OperationMode",	0);
	set_cmt	(0X7D02CD7C,	"DataSize",	0);
	create_insn	(x=0X7D02CD7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CD7E,	"DataIn_ptr",	0);
	create_insn	(x=0X7D02CD7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CD84,	"HashResultBuff",	0);
	create_insn	(0X7D02CDAE);
	create_insn	(x=0X7D02CDD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CDD4,	"OperationMode",	0);
	set_cmt	(0X7D02CDDA,	"ContextID_ptr",	0);
	create_insn	(x=0X7D02CDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CDE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CDEA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CDEC,	"ContextID_ptr",	0);
	set_cmt	(0X7D02CDF2,	"HashResultBuff",	0);
	set_cmt	(0X7D02CDFE,	"m2",	0);
	create_insn	(0X7D02CDFE);
	set_cmt	(0X7D02CE00,	"m1",	0);
	create_insn	(x=0X7D02CE00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CE02,	"n",	0);
	create_insn	(x=0X7D02CE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CE0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CE1C);
	op_stkvar	(x,	1);
	create_insn	(0X7D02CE32);
	create_insn	(0X7D02CE3C);
	create_insn	(x=0X7D02CE44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CE4E,	"ptr2",	0);
	set_cmt	(0X7D02CE50,	"ptr1",	0);
	create_insn	(x=0X7D02CE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CE56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CE58,	"len",	0);
	create_insn	(x=0X7D02CE5E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02CE6E);
	set_cmt	(0X7D02CE74,	"jumptable 7D02CC6C default case",	1);
	create_insn	(0X7D02CE74);
	set_name	(0X7D02CE74,	"def_7D02CC6C");
	make_array	(0X7D02CE7E,	0X2);
	create_insn	(0X7D02CE80);
	create_insn	(0X7D02CECA);
	create_insn	(x=0X7D02CED8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02CEE2,	"destination",	0);
	set_cmt	(0X7D02CEE6,	"num",	0);
	set_cmt	(0X7D02CEEC,	"source",	0);
	create_insn	(x=0X7D02CF16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CF22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02CF5E);
	op_hex		(x,	1);
	create_insn	(0X7D02CF84);
	set_cmt	(0X7D02CFAA,	"ptr2",	0);
	set_cmt	(0X7D02CFAC,	"ptr1",	0);
	set_cmt	(0X7D02CFB6,	"len",	0);
	set_cmt	(0X7D02CFC4,	"ptr2",	0);
	set_cmt	(0X7D02CFC6,	"ptr1",	0);
	set_cmt	(0X7D02CFD2,	"DataIn_ptr",	0);
	set_cmt	(0X7D02CFD8,	"HashResultBuff",	0);
	set_cmt	(0X7D02CFDA,	"OperationMode",	0);
	set_cmt	(0X7D02CFE0,	"DataSize",	0);
	set_cmt	(0X7D02CFF2,	"m2",	0);
	set_cmt	(0X7D02CFF4,	"m1",	0);
	create_insn	(0X7D02D004);
	create_insn	(0X7D02D034);
	create_insn	(0X7D02D038);
	create_insn	(x=0X7D02D04E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D06A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D07A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D09A);
	op_hex		(x,	1);
	set_cmt	(0X7D02D0A2,	"ptr2",	0);
	set_cmt	(0X7D02D0A8,	"len",	0);
	set_cmt	(0X7D02D0AE,	"ptr1",	0);
	create_insn	(x=0X7D02D0CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D0DE);
	create_insn	(0X7D02D0EC);
	create_insn	(0X7D02D0F6);
	set_cmt	(0X7D02D0FA,	"len",	0);
	set_cmt	(0X7D02D0FE,	"ptr2",	0);
	create_insn	(x=0X7D02D0FE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D100,	"ptr1",	0);
	set_cmt	(0X7D02D10E,	"OperationMode",	0);
	set_cmt	(0X7D02D110,	"HashResultBuff",	0);
	set_cmt	(0X7D02D112,	"DataIn_ptr",	0);
	set_cmt	(0X7D02D116,	"DataSize",	0);
	create_insn	(x=0X7D02D136);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D13C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D144,	"ptr2",	0);
	create_insn	(x=0X7D02D144);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D146,	"ptr1",	0);
	set_cmt	(0X7D02D14A,	"len",	0);
	create_insn	(x=0X7D02D17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D17E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D18A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D18E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D19A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D1C4,	"len",	0);
	set_cmt	(0X7D02D1C8,	"ptr2",	0);
	set_cmt	(0X7D02D1CA,	"ptr1",	0);
	create_insn	(x=0X7D02D1CE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D1E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D1F8);
	set_name	(0X7D02D1F8,	"nullsub_13");
	make_array	(0X7D02D1FA,	0X2);
	create_insn	(0X7D02D1FC);
	create_insn	(x=0X7D02D214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D216);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D232);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D252);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D266);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2BC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D2C2,	"aTimeOut",	0);
	set_cmt	(0X7D02D2C6,	"pMutexId",	0);
	create_insn	(x=0X7D02D2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D2E4,	"pMutexId",	0);
	create_insn	(x=0X7D02D2EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D306);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D318);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D324);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D32A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D33A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D340,	"aTimeOut",	0);
	set_cmt	(0X7D02D344,	"pMutexId",	0);
	create_insn	(x=0X7D02D356);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D358);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D362,	"pMutexId",	0);
	create_insn	(x=0X7D02D368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D36A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D376);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D37C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D38E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D3F6);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D40E);
	create_insn	(x=0X7D02D424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D426);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D432);
	op_hex		(x,	1);
	make_array	(0X7D02D44A,	0X2);
	create_dword	(x=0X7D02D44C);
	op_plain_offset	(x,	0,	0X7D02D20A);
	op_plain_offset	(x,	128,	0X7D02D20A);
	create_dword	(0X7D02D450);
	create_dword	(0X7D02D454);
	create_insn	(0X7D02D458);
	set_name	(0X7D02D458,	"PkiIsModSquareRootExists");
	create_insn	(x=0X7D02D476);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D492);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D4A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D4B0,	"aTimeOut",	0);
	set_cmt	(0X7D02D4BA,	"pMutexId",	0);
	create_insn	(x=0X7D02D4CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D4CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D4D6,	"pMutexId",	0);
	create_insn	(x=0X7D02D4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D4DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D4E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D4EE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D506);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D51A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D542);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D56E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D576);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D57E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D58A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D58C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D592,	"aTimeOut",	0);
	set_cmt	(0X7D02D596,	"pMutexId",	0);
	create_insn	(x=0X7D02D5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D5AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D5B4,	"pMutexId",	0);
	create_insn	(x=0X7D02D5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D5BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D5D0);
	create_insn	(x=0X7D02D5D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D5D4);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D5EC);
	create_insn	(x=0X7D02D5EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D606);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D61A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D652);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D66A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D682);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D68C);
	op_hex		(x,	1);
	create_insn	(0X7D02D69A);
	create_insn	(x=0X7D02D6A8);
	op_hex		(x,	1);
	create_insn	(0X7D02D6B0);
	create_insn	(x=0X7D02D6B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D6BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D6F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D71A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D72E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D738);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D73A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D756);
	create_insn	(x=0X7D02D760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D762);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D77A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D78E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D812);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D81C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D832);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D83A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D846);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D85A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D882);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D88E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D8A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D8A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D8AA,	"aTimeOut",	0);
	set_cmt	(0X7D02D8AE,	"pMutexId",	0);
	create_insn	(x=0X7D02D8C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D8C4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02D8CC,	"pMutexId",	0);
	create_insn	(x=0X7D02D8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D8E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D8FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D900);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D91A);
	create_insn	(x=0X7D02D91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D91E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D930);
	op_hex		(x,	1);
	create_insn	(x=0X7D02D934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D93C);
	op_hex		(x,	1);
	create_insn	(0X7D02D944);
	create_insn	(x=0X7D02D950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D952);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D96E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D986);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D99E);
	op_stkvar	(x,	1);
	create_insn	(0X7D02D9A8);
	create_insn	(x=0X7D02D9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02D9F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DABA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DABC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02DAD0);
	create_insn	(0X7D02DAD4);
	create_insn	(x=0X7D02DAD6);
	op_stkvar	(x,	1);
	make_array	(0X7D02DADA,	0X2);
	create_dword	(x=0X7D02DADC);
	op_plain_offset	(x,	0,	0X7D02D46A);
	op_plain_offset	(x,	128,	0X7D02D46A);
	create_dword	(0X7D02DAE0);
	create_dword	(0X7D02DAE4);
	create_insn	(0X7D02DAE8);
	set_name	(0X7D02DAE8,	"PkaDoubleMdf2Mdf");
	create_insn	(x=0X7D02DAF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DAFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB0C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB10);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB2C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB30);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB48);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB66);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB6A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DB92);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DB9A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBA8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DBB0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DBB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBC6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DBCA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DBFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC02);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC48);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC4C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC60);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC64);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC96);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DC9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCA4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DCAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCC4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DCCC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DCD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DCFA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DCFE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD06);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD0C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD14);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD2A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD2E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD36);
	op_stkvar	(x,	1);
	make_array	(0X7D02DD46,	0X2);
	create_dword	(x=0X7D02DD48);
	op_plain_offset	(x,	0,	0X7D02DAFA);
	op_plain_offset	(x,	128,	0X7D02DAFA);
	create_dword	(0X7D02DD4C);
	create_insn	(0X7D02DD50);
	set_name	(0X7D02DD50,	"PkaDoubleMdf2Jcb");
	create_insn	(x=0X7D02DD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD6A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD6E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD82);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD88);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD8C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DD96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDA4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DDAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDC0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DDC4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DDCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDDA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDEA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DDF2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DDFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE00);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE08);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE1E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE22);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE46);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE56);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE5A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE62);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DE92);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEA0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DEA4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DEAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEB8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DEBC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DEC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEE6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DEF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF02);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF1E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF22);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF2A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF30);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF38);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF42);
	op_stkvar	(x,	1);
	make_array	(0X7D02DF52,	0X2);
	create_dword	(x=0X7D02DF54);
	op_plain_offset	(x,	0,	0X7D02DD60);
	op_plain_offset	(x,	128,	0X7D02DD60);
	create_dword	(0X7D02DF58);
	create_insn	(0X7D02DF5C);
	set_name	(0X7D02DF5C,	"PkaAddJcbAfn2Mdf");
	create_insn	(x=0X7D02DF68);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF76);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DF9C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DFA0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DFAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFBE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DFC2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFE0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02DFE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFEE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02DFF8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E002);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E00A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E012);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E01A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E02A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E036);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E044);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E048);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E052);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E062);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E076);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E08E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0AC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0CA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0DA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0DE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E0F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E100);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E104);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E10A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E11A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E120);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E128);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E12E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E136);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E13C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E140);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E14E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E15E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E16A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E17E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E184);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E18C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E192);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E194);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02E1A4);
	op_plain_offset	(x,	0,	0X7D02DF74);
	op_plain_offset	(x,	128,	0X7D02DF74);
	create_dword	(0X7D02E1A8);
	create_insn	(0X7D02E1AC);
	set_name	(0X7D02E1AC,	"PkaJcb2Afn");
	create_insn	(x=0X7D02E1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E1C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E1D2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E1DA);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E1E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E1F2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E1F6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E1FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E20A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E224);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E228);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E22E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E23E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E244);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E24E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E256);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E262);
	op_stkvar	(x,	1);
	make_array	(0X7D02E272,	0X2);
	create_dword	(x=0X7D02E274);
	op_plain_offset	(x,	0,	0X7D02E1B8);
	op_plain_offset	(x,	128,	0X7D02E1B8);
	create_dword	(0X7D02E278);
	create_insn	(0X7D02E27C);
	set_name	(0X7D02E27C,	"PkaAddAff");
	create_insn	(x=0X7D02E288);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2B2);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2D0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2E8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2EC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E2F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E302);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E316);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E318);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E32E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E33E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E346);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E352);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E358);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E360);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E366);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E382);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E390);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E394);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3B0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E3B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E3BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3C6);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E3CE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E3D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E3D8);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02E3F4);
	op_plain_offset	(x,	0,	0X7D02E296);
	op_plain_offset	(x,	128,	0X7D02E296);
	create_dword	(0X7D02E3F8);
	create_insn	(0X7D02E3FC);
	set_name	(0X7D02E3FC,	"PkaSum2ScalarMullt");
	create_insn	(x=0X7D02E40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E40E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E410);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E416);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E41A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E426);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E43A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E458);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E45C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E466);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E476);
	op_stkvar	(x,	1);
	create_insn	(0X7D02E494);
	create_insn	(x=0X7D02E49A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E49E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E51A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E520);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E52E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E542);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E546);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E552);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E572);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E586);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E5CA);
	op_stkvar	(x,	1);
	create_insn	(0X7D02E5F0);
	create_insn	(x=0X7D02E5F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E61E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E622);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E626);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E62A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E62E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E632);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E63A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E63E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E642);
	op_stkvar	(x,	1);
	create_insn	(0X7D02E648);
	create_insn	(x=0X7D02E64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E666);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E66C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E672);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E67E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E68E);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E692);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E698);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E69A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6A8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E6AE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6D0);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E6D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E6DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E6E0);
	op_stkvar	(x,	1);
	create_dword	(x=0X7D02E6E8);
	op_plain_offset	(x,	0,	0X7D02E40E);
	op_plain_offset	(x,	128,	0X7D02E40E);
	create_dword	(0X7D02E6EC);
	create_insn	(0X7D02E6F0);
	set_name	(0X7D02E6F0,	"PkaEcdsaVerify");
	create_insn	(x=0X7D02E6FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E70E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E726);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E73E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E752);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E766);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E772);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E77A);
	op_hex		(x,	1);
	create_insn	(0X7D02E790);
	create_insn	(x=0X7D02E792);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7DC);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E7E4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02E7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E7FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E80E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E826);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E83A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E852);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E866);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E87E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E892);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E90A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E922);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E936);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E94E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E96A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E96E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E976);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E982);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E98E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E99E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02E9DE);
	op_hex		(x,	1);
	create_dword	(x=0X7D02E9E8);
	op_plain_offset	(x,	0,	0X7D02E6FC);
	op_plain_offset	(x,	128,	0X7D02E6FC);
	create_dword	(0X7D02E9EC);
	set_cmt	(0X7D02E9F0,	"jumptable 7D0296C6 case 0",	1);
	create_insn	(0X7D02E9F0);
	make_array	(0X7D02E9F6,	0X2);
	create_dword	(x=0X7D02E9F8);
	op_plain_offset	(x,	0,	0X7D02E9F6);
	op_plain_offset	(x,	128,	0X7D02E9F6);
	set_cmt	(0X7D02E9FC,	"jumptable 7D0296C6 case 1",	1);
	create_insn	(0X7D02E9FC);
	make_array	(0X7D02EA02,	0X2);
	create_dword	(x=0X7D02EA04);
	op_plain_offset	(x,	0,	0X7D02EA02);
	op_plain_offset	(x,	128,	0X7D02EA02);
	set_cmt	(0X7D02EA08,	"jumptable 7D0296C6 case 2",	1);
	create_insn	(0X7D02EA08);
	make_array	(0X7D02EA0E,	0X2);
	create_dword	(x=0X7D02EA10);
	op_plain_offset	(x,	0,	0X7D02EA0E);
	op_plain_offset	(x,	128,	0X7D02EA0E);
	set_cmt	(0X7D02EA14,	"jumptable 7D0296C6 case 4",	1);
	create_insn	(0X7D02EA14);
	make_array	(0X7D02EA1A,	0X2);
	create_dword	(x=0X7D02EA1C);
	op_plain_offset	(x,	0,	0X7D02EA1A);
	op_plain_offset	(x,	128,	0X7D02EA1A);
	set_cmt	(0X7D02EA20,	"jumptable 7D0296C6 case 3",	1);
	create_insn	(0X7D02EA20);
	make_array	(0X7D02EA26,	0X2);
	create_dword	(x=0X7D02EA28);
	op_plain_offset	(x,	0,	0X7D02EA26);
	op_plain_offset	(x,	128,	0X7D02EA26);
	set_cmt	(0X7D02EA2C,	"jumptable 7D0296C6 case 6",	1);
	create_insn	(0X7D02EA2C);
	make_array	(0X7D02EA32,	0X2);
	create_dword	(x=0X7D02EA34);
	op_plain_offset	(x,	0,	0X7D02EA32);
	op_plain_offset	(x,	128,	0X7D02EA32);
	set_cmt	(0X7D02EA38,	"jumptable 7D0296C6 case 5",	1);
	create_insn	(0X7D02EA38);
	make_array	(0X7D02EA3E,	0X2);
	create_dword	(x=0X7D02EA40);
	op_plain_offset	(x,	0,	0X7D02EA3E);
	op_plain_offset	(x,	128,	0X7D02EA3E);
	set_cmt	(0X7D02EA44,	"jumptable 7D0296C6 case 8",	1);
	create_insn	(0X7D02EA44);
	make_array	(0X7D02EA4A,	0X2);
	create_dword	(x=0X7D02EA4C);
	op_plain_offset	(x,	0,	0X7D02EA4A);
	op_plain_offset	(x,	128,	0X7D02EA4A);
	set_cmt	(0X7D02EA50,	"jumptable 7D0296C6 case 7",	1);
	create_insn	(0X7D02EA50);
	make_array	(0X7D02EA56,	0X2);
	create_dword	(x=0X7D02EA58);
	op_plain_offset	(x,	0,	0X7D02EA56);
	op_plain_offset	(x,	128,	0X7D02EA56);
	set_cmt	(0X7D02EA5C,	"jumptable 7D0296C6 case 9",	1);
	create_insn	(0X7D02EA5C);
	make_array	(0X7D02EA62,	0X2);
	create_dword	(x=0X7D02EA64);
	op_plain_offset	(x,	0,	0X7D02EA62);
	op_plain_offset	(x,	128,	0X7D02EA62);
	set_cmt	(0X7D02EA68,	"jumptable 7D0296C6 case 10",	1);
	create_insn	(0X7D02EA68);
	make_array	(0X7D02EA6E,	0X2);
	create_dword	(x=0X7D02EA70);
	op_plain_offset	(x,	0,	0X7D02EA6E);
	op_plain_offset	(x,	128,	0X7D02EA6E);
	create_insn	(0X7D02EA74);
	make_array	(0X7D02EAE6,	0X2);
	create_dword	(x=0X7D02EAE8);
	op_plain_offset	(x,	0,	0X7D02EA84);
	op_plain_offset	(x,	128,	0X7D02EA84);
	create_dword	(0X7D02EAEC);
	create_insn	(0X7D02EAF0);
	make_array	(0X7D02EAF6,	0X2);
	create_insn	(0X7D02EAF8);
	create_insn	(0X7D02EAFC);
	set_name	(0X7D02EAFC,	"crys_unknfuncEAFC");
	create_insn	(0X7D02EB7C);
	create_insn	(0X7D02EB88);
	create_insn	(0X7D02EB98);
	create_insn	(0X7D02EBA4);
	set_name	(0X7D02EBA4,	"crys_unknfuncEBA4");
	create_insn	(0X7D02EBC4);
	create_insn	(0X7D02EBC8);
	set_name	(0X7D02EBC8,	"user_ta_ctx_destroy");
	set_cmt	(0X7D02EBD4,	"mm",	0);
	set_cmt	(0X7D02EBDC,	"m",	0);
	set_cmt	(0X7D02EBF8,	"op",	0);
	set_cmt	(0X7D02EBFA,	"va",	0);
	set_cmt	(0X7D02EBFC,	"len",	0);
	set_cmt	(0X7D02EC02,	"mm",	0);
	set_cmt	(0X7D02EC0A,	"m",	0);
	set_cmt	(0X7D02EC26,	"op",	0);
	set_cmt	(0X7D02EC28,	"va",	0);
	set_cmt	(0X7D02EC2A,	"len",	0);
	set_cmt	(0X7D02EC34,	"csess",	0);
	set_cmt	(0X7D02EC38,	"open_sessions",	0);
	set_cmt	(0X7D02EC3A,	"clnt_id",	0);
	create_insn	(x=0X7D02EC3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D02EC44,	"utc",	0);
	create_insn	(0X7D02EC44);
	set_cmt	(0X7D02EC4A,	"p",	0);
	set_cmt	(0X7D02EC50,	"p",	0);
	set_cmt	(0X7D02EC68,	"ptr",	0);
	create_insn	(0X7D02EC72);
	set_name	(0X7D02EC72,	"user_ta_enter_close_session");
	create_insn	(x=0X7D02EC78);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02EC84,	"param",	0);
	create_insn	(x=0X7D02EC84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02EC86,	"err",	0);
	create_insn	(x=0X7D02EC86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02EC88,	"session",	0);
	set_cmt	(0X7D02EC8A,	"func",	0);
	set_cmt	(0X7D02EC8C,	"cmd",	0);
	create_insn	(0X7D02EC96);
	set_name	(0X7D02EC96,	"user_ta_enter_invoke_cmd");
	set_cmt	(0X7D02EC9C,	"param",	0);
	create_insn	(x=0X7D02EC9C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02EC9E,	"err",	0);
	set_cmt	(0X7D02ECA0,	"session",	0);
	set_cmt	(0X7D02ECA2,	"func",	0);
	set_cmt	(0X7D02ECA4,	"cmd",	0);
	create_insn	(0X7D02ECAE);
	set_name	(0X7D02ECAE,	"user_ta_enter_open_session");
	set_cmt	(0X7D02ECB2,	"err",	0);
	set_cmt	(0X7D02ECB4,	"func",	0);
	set_cmt	(0X7D02ECB6,	"param",	0);
	create_insn	(x=0X7D02ECB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02ECB8,	"session",	0);
	set_cmt	(0X7D02ECBA,	"cmd",	0);
	create_insn	(x=0X7D02ECC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02ECC6,	"ptr",	0);
	create_insn	(0X7D02ECC6);
	set_name	(0X7D02ECC6,	"static_ta_destroy");
	create_insn	(0X7D02ECCC);
	set_name	(0X7D02ECCC,	"static_ta_enter_close_session");
	create_insn	(0X7D02ECF8);
	set_name	(0X7D02ECF8,	"static_ta_enter_open_session");
	set_cmt	(0X7D02ED0E,	"param",	0);
	create_insn	(0X7D02ED20);
	create_insn	(0X7D02ED42);
	create_insn	(0X7D02ED5A);
	set_name	(0X7D02ED5A,	"static_ta_enter_invoke_cmd");
	set_cmt	(0X7D02ED74,	"param",	0);
	create_insn	(0X7D02ED84);
	create_insn	(0X7D02EDA4);
	set_name	(0X7D02EDA4,	"copy_phdr");
	create_insn	(0X7D02EDC2);
	set_cmt	(0X7D02EDC8,	"ptr",	0);
	set_cmt	(0X7D02EDCE,	"ptr",	0);
	set_cmt	(0X7D02EDD4,	"ptr",	0);
	set_cmt	(0X7D02EDDA,	"ptr",	0);
	set_cmt	(0X7D02EDE0,	"ptr",	0);
	create_insn	(0X7D02EDEA);
	create_insn	(0X7D02EDEC);
	set_name	(0X7D02EDEC,	"tee_time_wait");
	set_cmt	(0X7D02EE08,	"inlined thread_rpc_cmd()",	1);
	set_cmt	(0X7D02EE0C,	"num_params",	0);
	set_cmt	(0X7D02EE0E,	"params",	0);
	set_cmt	(0X7D02EE10,	"cmd",	0);
	create_insn	(0X7D02EE1A);
	set_name	(0X7D02EE1A,	"arm_cntpct_get_sys_time");
	set_cmt	(0X7D02EE2A,	"a3",	0);
	set_cmt	(0X7D02EE2C,	"a4",	0);
	set_cmt	(0X7D02EE2E,	"a1",	0);
	set_cmt	(0X7D02EE30,	"a2",	0);
	set_cmt	(0X7D02EE3A,	"a2",	0);
	set_cmt	(0X7D02EE3C,	"a1",	0);
	set_cmt	(0X7D02EE3E,	"a3",	0);
	set_cmt	(0X7D02EE40,	"a4",	0);
	set_cmt	(0X7D02EE4E,	"a1",	0);
	set_cmt	(0X7D02EE50,	"a2",	0);
	set_cmt	(0X7D02EE52,	"a3",	0);
	set_cmt	(0X7D02EE54,	"a4",	0);
	create_insn	(x=0X7D02EE5E);
	op_enum		(x,	1,	GetEnum("TEE_Result"),0);
	create_insn	(0X7D02EE64);
	create_insn	(0X7D02EE6E);
	set_name	(0X7D02EE6E,	"thread_set_exceptions");
	create_insn	(x=0X7D02EE72);
	op_hex		(x,	1);
	create_insn	(x=0X7D02EE76);
	op_hex		(x,	1);
	create_insn	(0X7D02EE84);
	set_name	(0X7D02EE84,	"thread_mask_exceptions");
	create_insn	(x=0X7D02EE8E);
	op_hex		(x,	1);
	set_cmt	(0X7D02EE92,	"exceptions",	0);
	create_insn	(x=0X7D02EE9C);
	op_hex		(x,	1);
	set_name	(0X7D02EE9C,	"thread_unmask_exceptions");
	create_insn	(0X7D02EEA4);
	set_name	(0X7D02EEA4,	"j_thread_get_id");
	create_insn	(0X7D02EEA8);
	set_name	(0X7D02EEA8,	"j_thread_rpc_free");
	create_insn	(0X7D02EEAC);
	create_insn	(x=0X7D02EEB0);
	op_hex		(x,	1);
	create_insn	(0X7D02EEBE);
	set_name	(0X7D02EEBE,	"vfp_is_enabled");
	create_insn	(0X7D02EECA);
	set_name	(0X7D02EECA,	"vfp_enable");
	create_insn	(x=0X7D02EED0);
	op_hex		(x,	1);
	create_insn	(0X7D02EEDC);
	set_name	(0X7D02EEDC,	"vfp_disable");
	create_insn	(x=0X7D02EEE2);
	op_hex		(x,	1);
	create_insn	(0X7D02EEEE);
	set_name	(0X7D02EEEE,	"vfp_lazy_save_state_init");
	create_insn	(x=0X7D02EEF8);
	op_hex		(x,	1);
	create_insn	(0X7D02EF04);
	set_name	(0X7D02EF04,	"vfp_lazy_save_state_final");
	set_cmt	(0X7D02EF14,	"fpexc",	0);
	create_insn	(x=0X7D02EF14);
	op_hex		(x,	1);
	set_cmt	(0X7D02EF22,	"regs",	0);
	create_insn	(0X7D02EF34);
	create_insn	(0X7D02EF36);
	set_name	(0X7D02EF36,	"vfp_lazy_restore_state");
	set_cmt	(0X7D02EF40,	"fpexc",	0);
	create_insn	(x=0X7D02EF40);
	op_hex		(x,	1);
	set_cmt	(0X7D02EF48,	"fpscr",	0);
	set_cmt	(0X7D02EF4E,	"regs",	0);
	create_insn	(0X7D02EF60);
	create_insn	(0X7D02EF76);
	create_insn	(0X7D02EF7E);
	set_name	(0X7D02EF7E,	"j_thread_get_id_0");
	create_insn	(0X7D02EF82);
	set_name	(0X7D02EF82,	"j_j_get_core_pos");
	create_insn	(0X7D02EF86);
	set_cmt	(0X7D02EF94,	"address",	0);
	set_cmt	(0X7D02EF9C,	"address",	0);
	set_cmt	(0X7D02EFA2,	"state",	0);
	set_cmt	(0X7D02EFAC,	"wq",	0);
	set_cmt	(0X7D02EFB8,	"cv",	0);
	set_cmt	(0X7D02EFBA,	"only_one",	0);
	set_cmt	(0X7D02EFBC,	"sync_obj",	0);
	create_insn	(0X7D02EFC6);
	set_name	(0X7D02EFC6,	"_mutex_init");
	create_insn	(0X7D02EFDA);
	set_name	(0X7D02EFDA,	"__mutex_lock");
	set_cmt	(0X7D02EFEE,	"address",	0);
	set_cmt	(0X7D02EFFA,	"cv",	0);
	set_cmt	(0X7D02EFFC,	"wq",	0);
	set_cmt	(0X7D02F000,	"wqe",	0);
	create_insn	(x=0X7D02F000);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F008);
	set_cmt	(0X7D02F00A,	"m",	0);
	set_cmt	(0X7D02F010,	"address",	0);
	set_cmt	(0X7D02F016,	"state",	0);
	set_cmt	(0X7D02F024,	"wq",	0);
	create_insn	(x=0X7D02F028);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F02A,	"wqe",	0);
	create_insn	(x=0X7D02F02A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F02C,	"sync_obj",	0);
	create_insn	(0X7D02F036);
	create_insn	(0X7D02F03C);
	set_name	(0X7D02F03C,	"condvar_init");
	create_insn	(0X7D02F044);
	set_name	(0X7D02F044,	"condvar_signal");
	create_insn	(0X7D02F04A);
	set_name	(0X7D02F04A,	"condvar_broadcast");
	create_insn	(0X7D02F050);
	set_name	(0X7D02F050,	"wq_rpc");
	set_cmt	(0X7D02F076,	"num_params",	0);
	set_cmt	(0X7D02F078,	"params",	0);
	set_cmt	(0X7D02F07A,	"cmd",	0);
	create_insn	(0X7D02F088);
	set_name	(0X7D02F088,	"init_sec_mon");
	create_insn	(0X7D02F098);
	set_name	(0X7D02F098,	"init_secondary_helper");
	set_cmt	(0X7D02F09C,	"exceptions",	0);
	set_cmt	(0X7D02F0A6,	"nsec_entry",	0);
	create_insn	(x=0X7D02F0B4);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F0B8);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F0C4);
	op_hex		(x,	1);
	create_insn	(0X7D02F0D2);
	set_name	(0X7D02F0D2,	"unwind_unksub1");
	create_insn	(0X7D02F0F4);
	create_insn	(0X7D02F0FA);
	create_insn	(0X7D02F0FC);
	create_insn	(0X7D02F0FE);
	set_name	(0X7D02F0FE,	"compute_checksum");
	create_insn	(x=0X7D02F108);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F118);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F11C);
	op_hex		(x,	1);
	set_cmt	(0X7D02F120,	"source",	0);
	set_cmt	(0X7D02F124,	"destination",	0);
	create_insn	(x=0X7D02F124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F12A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F134);
	set_name	(0X7D02F134,	"image_calculate_digest");
	create_insn	(x=0X7D02F13A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F13E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F148);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F154,	"crypto",	0);
	create_insn	(x=0X7D02F154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F156);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F158,	"dst",	0);
	set_cmt	(0X7D02F15A,	"data",	0);
	set_cmt	(0X7D02F15C,	"len",	0);
	set_cmt	(0X7D02F164,	"a2",	0);
	set_cmt	(0X7D02F166,	"crypto",	0);
	create_insn	(x=0X7D02F166);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F170);
	set_name	(0X7D02F170,	"get_auth_key");
	create_insn	(0X7D02F190);
	create_insn	(0X7D02F194);
	set_name	(0X7D02F194,	"pbuf_is_inside");
	set_cmt	(0X7D02F196,	"b",	0);
	set_cmt	(0X7D02F198,	"bl",	0);
	create_insn	(0X7D02F1A0);
	set_name	(0X7D02F1A0,	"pbuf_intersects");
	set_cmt	(0X7D02F1A2,	"b",	0);
	set_cmt	(0X7D02F1A4,	"bl",	0);
	create_insn	(0X7D02F1AC);
	set_name	(0X7D02F1AC,	"map_pa2va");
	create_insn	(0X7D02F1C6);
	create_insn	(0X7D02F1DE);
	create_insn	(0X7D02F1E2);
	set_name	(0X7D02F1E2,	"core_mmu_mattr_is_ok");
	create_insn	(0X7D02F1F0);
	create_insn	(x=0X7D02F1F8);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F20A);
	create_insn	(0X7D02F248);
	create_insn	(0X7D02F24C);
	set_name	(0X7D02F24C,	"virt_to_phys");
	create_insn	(x=0X7D02F26A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F26E);
	op_hex		(x,	1);
	create_insn	(0X7D02F27A);
	create_insn	(0X7D02F28A);
	set_name	(0X7D02F28A,	"core_vbuf_is");
	set_cmt	(0X7D02F298,	"pbuf",	0);
	set_cmt	(0X7D02F29C,	"attr",	0);
	set_cmt	(0X7D02F29E,	"len",	0);
	create_insn	(0X7D02F2A8);
	create_insn	(0X7D02F2AC);
	create_insn	(0X7D02F2AE);
	set_name	(0X7D02F2AE,	"core_mmu_populate_user_map");
	create_insn	(0X7D02F2E0);
	set_cmt	(0X7D02F2E2,	"pgt_cache",	0);
	set_cmt	(0X7D02F2E6,	"begin",	0);
	set_cmt	(0X7D02F2E8,	"ctx",	0);
	set_cmt	(0X7D02F2F2,	"last",	0);
	create_insn	(x=0X7D02F2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F332);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F336);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F33C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F346);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F362);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F36A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F382);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F392);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3AE);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F3B2);
	create_insn	(0X7D02F3B6);
	create_insn	(0X7D02F3BC);
	set_name	(0X7D02F3BC,	"phys_to_virt");
	set_cmt	(0X7D02F3C2,	"va",	0);
	create_insn	(x=0X7D02F3CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F3D8);
	set_cmt	(0X7D02F3DC,	"ua",	0);
	set_cmt	(0X7D02F3DE,	"utc",	0);
	set_cmt	(0X7D02F3E2,	"pa",	0);
	create_insn	(x=0X7D02F3E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F3EC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F3F0);
	create_insn	(0X7D02F400);
	create_insn	(x=0X7D02F404);
	op_hex		(x,	1);
	create_insn	(0X7D02F40A);
	set_name	(0X7D02F40A,	"tee_mmu_map_stack");
	create_insn	(x=0X7D02F412);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F416);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F41A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F420);
	op_hex		(x,	1);
	create_insn	(0X7D02F430);
	set_name	(0X7D02F430,	"tee_mmu_map_clear");
	create_insn	(0X7D02F43E);
	set_name	(0X7D02F43E,	"tee_mmu_is_vbuf_inside_ta_private");
	set_cmt	(0X7D02F446,	"b",	0);
	set_cmt	(0X7D02F448,	"bl",	0);
	set_cmt	(0X7D02F44C,	"a",	0);
	set_cmt	(0X7D02F44E,	"al",	0);
	create_insn	(0X7D02F458);
	set_name	(0X7D02F458,	"tee_mmu_is_vbuf_intersect_ta_private");
	set_cmt	(0X7D02F460,	"b",	0);
	set_cmt	(0X7D02F462,	"bl",	0);
	set_cmt	(0X7D02F466,	"a",	0);
	set_cmt	(0X7D02F468,	"al",	0);
	create_insn	(0X7D02F472);
	set_name	(0X7D02F472,	"tee_mmu_set_ctx");
	set_cmt	(0X7D02F484,	"pgt_cache",	0);
	create_insn	(x=0X7D02F48C);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F490);
	op_hex		(x,	1);
	set_cmt	(0X7D02F4A0,	"map",	0);
	set_cmt	(0X7D02F4A2,	"utc",	0);
	create_insn	(0X7D02F4B6);
	set_name	(0X7D02F4B6,	"tee_mmu_get_ctx");
	create_insn	(0X7D02F4C0);
	create_insn	(0X7D02F4D4);
	create_insn	(0X7D02F4E0);
	set_cmt	(0X7D02F4E4,	"level",	0);
	set_cmt	(0X7D02F4E6,	"attr",	0);
	create_insn	(x=0X7D02F4E6);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F4F8);
	set_name	(0X7D02F4F8,	"core_mmu_get_user_va_range");
	create_insn	(0X7D02F50A);
	set_name	(0X7D02F50A,	"core_mmu_get_user_map");
	create_insn	(0X7D02F518);
	set_name	(0X7D02F518,	"core_mmu_set_user_map");
	create_insn	(0X7D02F546);
	set_cmt	(0X7D02F552,	"op",	0);
	set_cmt	(0X7D02F554,	"a",	0);
	set_cmt	(0X7D02F55A,	"state",	0);
	create_insn	(0X7D02F564);
	set_name	(0X7D02F564,	"core_mmu_user_mapping_is_active");
	create_insn	(0X7D02F574);
	create_insn	(0X7D02F580);
	set_name	(0X7D02F580,	"get_fault_type");
	create_insn	(0X7D02F59C);
	create_insn	(0X7D02F5AC);
	create_insn	(0X7D02F5BC);
	create_insn	(x=0X7D02F5C0);
	op_hex		(x,	1);
	create_insn	(0X7D02F5CC);
	create_insn	(0X7D02F5D0);
	create_insn	(0X7D02F5D4);
	create_insn	(0X7D02F5D8);
	set_name	(0X7D02F5D8,	"tee_mm_lock");
	set_cmt	(0X7D02F5E4,	"address",	0);
	create_insn	(0X7D02F5EE);
	set_name	(0X7D02F5EE,	"tee_mm_unlock");
	set_cmt	(0X7D02F5F6,	"state",	0);
	create_insn	(0X7D02F600);
	set_name	(0X7D02F600,	"tee_mm_init");
	create_insn	(x=0X7D02F604);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F612,	"nmemb",	0);
	create_insn	(0X7D02F612);
	set_cmt	(0X7D02F632,	"size",	0);
	create_insn	(0X7D02F65E);
	set_cmt	(0X7D02F67C,	"size",	0);
	create_insn	(0X7D02F6D0);
	create_insn	(0X7D02F6E6);
	create_insn	(0X7D02F708);
	create_insn	(0X7D02F742);
	set_cmt	(0X7D02F752,	"ptr",	0);
	create_insn	(0X7D02F75E);
	set_name	(0X7D02F75E,	"tee_mm_final");
	set_cmt	(0X7D02F76A,	"ptr",	0);
	create_insn	(0X7D02F76A);
	set_cmt	(0X7D02F770,	"p",	0);
	create_insn	(0X7D02F778);
	create_insn	(0X7D02F780);
	set_name	(0X7D02F780,	"tee_mm_get_bytes");
	create_insn	(0X7D02F78E);
	create_insn	(0X7D02F792);
	set_name	(0X7D02F792,	"tee_mm_addr_is_within_range");
	create_insn	(0X7D02F7A6);
	create_insn	(x=0X7D02F7A8);
	op_hex		(x,	1);
	create_insn	(0X7D02F7AE);
	create_insn	(0X7D02F7D4);
	create_insn	(0X7D02F7E2);
	create_insn	(0X7D02F7E6);
	set_name	(0X7D02F7E6,	"tee_mm_get_smem");
	create_insn	(0X7D02F7F4);
	set_name	(0X7D02F7F4,	"copy_out_param");
	create_insn	(x=0X7D02F806);
	op_hex		(x,	1);
	set_cmt	(0X7D02F80A,	"switch 6 cases ",	0);
	set_cmt	(0X7D02F810,	"switch jump",	0);
	set_cmt	(0X7D02F814,	"jump table for switch statement",	0);
	create_byte	(0X7D02F814);
	set_name	(0X7D02F814,	"jpt_7D02F810");
	create_byte	(0X7D02F815);
	create_byte	(0X7D02F816);
	create_byte	(0X7D02F817);
	create_byte	(0X7D02F818);
	create_byte	(0X7D02F819);
	set_cmt	(0X7D02F81A,	"jumptable 7D02F810 cases 2,3",	1);
	create_insn	(0X7D02F81A);
	set_cmt	(0X7D02F822,	"jumptable 7D02F810 cases 6,7",	1);
	set_cmt	(0X7D02F82C,	"jumptable 7D02F810 default case",	1);
	set_name	(0X7D02F82C,	"def_7D02F810");
	create_insn	(0X7D02F834);
	create_insn	(0X7D02F836);
	set_name	(0X7D02F836,	"copy_in_params");
	create_insn	(x=0X7D02F846);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F866,	"switch 12 cases ",	0);
	set_cmt	(0X7D02F86A,	"switch jump",	0);
	set_cmt	(0X7D02F86E,	"jump table for switch statement",	0);
	create_byte	(0X7D02F86E);
	set_name	(0X7D02F86E,	"jpt_7D02F86A");
	create_byte	(0X7D02F86F);
	create_byte	(0X7D02F870);
	create_byte	(0X7D02F871);
	create_byte	(0X7D02F872);
	create_byte	(0X7D02F873);
	create_byte	(0X7D02F874);
	create_byte	(0X7D02F875);
	create_byte	(0X7D02F876);
	create_byte	(0X7D02F877);
	create_byte	(0X7D02F878);
	create_byte	(0X7D02F879);
	set_cmt	(0X7D02F87A,	"jumptable 7D02F86A case 0",	1);
	create_insn	(0X7D02F87A);
	create_insn	(x=0X7D02F87E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F88E,	"jumptable 7D02F86A cases 1-3",	1);
	create_insn	(0X7D02F88E);
	create_insn	(x=0X7D02F892);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F898,	"jumptable 7D02F86A cases 9-11",	1);
	create_insn	(x=0X7D02F898);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F89A);
	op_hex		(x,	1);
	create_insn	(x=0X7D02F8C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F8DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F8EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F8EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F900);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02F90E,	"jumptable 7D02F86A default case",	1);
	create_insn	(0X7D02F90E);
	set_name	(0X7D02F90E,	"def_7D02F86A");
	create_insn	(0X7D02F916);
	set_name	(0X7D02F916,	"tee_entry_get_api_call_count");
	create_insn	(0X7D02F91C);
	set_name	(0X7D02F91C,	"tee_entry_get_api_revision");
	create_insn	(0X7D02F926);
	set_name	(0X7D02F926,	"tee_entry_get_os_revision");
	create_insn	(0X7D02F930);
	create_insn	(0X7D02F934);
	set_name	(0X7D02F934,	"nullsub_9");
	create_insn	(0X7D02F936);
	create_insn	(0X7D02F93A);
	set_name	(0X7D02F93A,	"nullsub_8");
	set_cmt	(0X7D02F93C,	"a1",	0);
	create_insn	(0X7D02F93C);
	create_insn	(0X7D02F942);
	set_name	(0X7D02F942,	"console_init");
	create_insn	(0X7D02F944);
	set_name	(0X7D02F944,	"mpcore_processor_number");
	create_insn	(0X7D02F954);
	create_insn	(x=0X7D02F962);
	op_hex		(x,	1);
	set_cmt	(0X7D02F966,	"switch 6 cases ",	0);
	set_cmt	(0X7D02F96C,	"switch jump",	0);
	set_cmt	(0X7D02F970,	"jump table for switch statement",	0);
	create_byte	(0X7D02F970);
	set_name	(0X7D02F970,	"jpt_7D02F96C");
	create_byte	(0X7D02F971);
	create_byte	(0X7D02F972);
	create_byte	(0X7D02F973);
	create_byte	(0X7D02F974);
	create_byte	(0X7D02F975);
	set_cmt	(0X7D02F976,	"jumptable 7D02F96C cases 6,7",	1);
	create_insn	(0X7D02F976);
	set_cmt	(0X7D02F980,	"jumptable 7D02F96C cases 2,3",	1);
	create_insn	(0X7D02F980);
	set_cmt	(0X7D02F98C,	"jumptable 7D02F96C default case",	1);
	set_name	(0X7D02F98C,	"def_7D02F96C");
	create_insn	(0X7D02F996);
	set_cmt	(0X7D02F998,	"time",	0);
	create_insn	(x=0X7D02F9AA);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F9AE);
	set_cmt	(0X7D02F9C0,	"time",	0);
	create_insn	(0X7D02F9C0);
	create_insn	(x=0X7D02F9CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02F9DC);
	op_stkvar	(x,	1);
	create_insn	(0X7D02F9F4);
	set_name	(0X7D02F9F4,	"tee_ta_session_is_cancelled");
	create_insn	(0X7D02FA02);
	create_insn	(0X7D02FA0C);
	set_cmt	(0X7D02FA1C,	"time",	0);
	create_insn	(0X7D02FA1C);
	create_insn	(x=0X7D02FA28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FA32);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FA3E);
	set_name	(0X7D02FA3E,	"tee_ta_push_current_session");
	create_insn	(0X7D02FA54);
	create_insn	(0X7D02FA62);
	set_name	(0X7D02FA62,	"tee_ta_pop_current_session");
	create_insn	(0X7D02FA76);
	create_insn	(0X7D02FA84);
	set_name	(0X7D02FA84,	"tee_ta_get_calling_session");
	create_insn	(0X7D02FA92);
	set_name	(0X7D02FA92,	"is_valid_conf_and_notnull_size");
	create_insn	(0X7D02FAAA);
	create_insn	(0X7D02FAAE);
	create_insn	(0X7D02FAB2);
	set_name	(0X7D02FAB2,	"tee_b2hs");
	create_insn	(x=0X7D02FAC8);
	op_hex		(x,	1);
	create_insn	(0X7D02FAEA);
	create_insn	(0X7D02FAF4);
	create_insn	(0X7D02FAF8);
	create_insn	(0X7D02FB06);
	create_insn	(0X7D02FB30);
	create_insn	(0X7D02FB32);
	create_insn	(0X7D02FB5C);
	set_name	(0X7D02FB5C,	"_core_is_buffer_inside");
	create_insn	(0X7D02FB82);
	create_insn	(0X7D02FB86);
	set_name	(0X7D02FB86,	"core_is_buffer_intersect");
	create_insn	(0X7D02FBA8);
	create_insn	(0X7D02FBAC);
	set_name	(0X7D02FBAC,	"handle_get");
	create_insn	(0X7D02FBBA);
	create_insn	(0X7D02FBD6);
	create_insn	(0X7D02FBDA);
	create_insn	(0X7D02FBE0);
	set_cmt	(0X7D02FBE2,	"ptr",	0);
	create_insn	(0X7D02FC0C);
	set_name	(0X7D02FC0C,	"handle_put");
	create_insn	(0X7D02FC28);
	create_insn	(0X7D02FC2C);
	create_insn	(0X7D02FC30);
	set_name	(0X7D02FC30,	"handle_lookup");
	create_insn	(0X7D02FC44);
	create_insn	(0X7D02FC48);
	set_name	(0X7D02FC48,	"syscall_check_access_rights");
	create_insn	(x=0X7D02FC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FC58);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FC5A,	"flags",	0);
	set_cmt	(0X7D02FC5E,	"uaddr",	0);
	set_cmt	(0X7D02FC60,	"len",	0);
	set_cmt	(0X7D02FC62,	"utc",	0);
	create_insn	(0X7D02FC6E);
	set_name	(0X7D02FC6E,	"tee_svc_copy_from_user");
	create_insn	(x=0X7D02FC72);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FC7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FC80,	"flags",	0);
	set_cmt	(0X7D02FC84,	"uaddr",	0);
	set_cmt	(0X7D02FC86,	"len",	0);
	set_cmt	(0X7D02FC88,	"utc",	0);
	set_cmt	(0X7D02FC94,	"destination",	0);
	set_cmt	(0X7D02FC96,	"source",	0);
	set_cmt	(0X7D02FC98,	"num",	0);
	create_insn	(0X7D02FCA4);
	set_name	(0X7D02FCA4,	"tee_svc_copy_to_user");
	create_insn	(x=0X7D02FCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FCB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FCB6,	"flags",	0);
	set_cmt	(0X7D02FCBA,	"uaddr",	0);
	set_cmt	(0X7D02FCBC,	"len",	0);
	set_cmt	(0X7D02FCBE,	"utc",	0);
	set_cmt	(0X7D02FCCA,	"destination",	0);
	set_cmt	(0X7D02FCCC,	"source",	0);
	set_cmt	(0X7D02FCCE,	"num",	0);
	create_insn	(0X7D02FCDA);
	set_name	(0X7D02FCDA,	"tee_svc_update_out_param");
	create_insn	(x=0X7D02FCE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FCEE);
	op_hex		(x,	1);
	create_insn	(x=0X7D02FCF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FD00);
	op_hex		(x,	1);
	set_cmt	(0X7D02FD04,	"switch 6 cases ",	0);
	set_cmt	(0X7D02FD0A,	"switch jump",	0);
	set_cmt	(0X7D02FD0E,	"jump table for switch statement",	0);
	create_byte	(0X7D02FD0E);
	set_name	(0X7D02FD0E,	"jpt_7D02FD0A");
	create_byte	(0X7D02FD0F);
	create_byte	(0X7D02FD10);
	create_byte	(0X7D02FD11);
	create_byte	(0X7D02FD12);
	create_byte	(0X7D02FD13);
	set_cmt	(0X7D02FD14,	"jumptable 7D02FD0A cases 6,7",	1);
	create_insn	(0X7D02FD14);
	create_insn	(x=0X7D02FD1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FD26);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FD2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FD50,	"jumptable 7D02FD0A cases 2,3",	1);
	create_insn	(0X7D02FD50);
	set_cmt	(0X7D02FD60,	"jumptable 7D02FD0A default case",	1);
	set_name	(0X7D02FD60,	"def_7D02FD0A");
	create_insn	(0X7D02FD78);
	set_name	(0X7D02FD78,	"syscall_get_cancellation_flag");
	create_insn	(x=0X7D02FD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FD8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FD96);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FDA6);
	set_name	(0X7D02FDA6,	"syscall_unmask_cancellation");
	create_insn	(x=0X7D02FDAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FDBE);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FDD8);
	set_name	(0X7D02FDD8,	"syscall_mask_cancellation");
	create_insn	(x=0X7D02FDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FDEE);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FE0A);
	set_name	(0X7D02FE0A,	"syscall_set_ta_time");
	create_insn	(x=0X7D02FE0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FE2A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FE36);
	set_name	(0X7D02FE36,	"op_attr_value_from_obj");
	create_insn	(0X7D02FE3E);
	set_name	(0X7D02FE3E,	"op_attr_value_clear");
	create_insn	(0X7D02FE44);
	set_name	(0X7D02FE44,	"tee_svc_cryp_obj_find_type_attr_idx");
	create_insn	(0X7D02FE60);
	create_insn	(0X7D02FE64);
	create_insn	(0X7D02FE6A);
	set_name	(0X7D02FE6A,	"op_u32_from_binary_helper");
	set_cmt	(0X7D02FE7A,	"source",	0);
	set_cmt	(0X7D02FE7C,	"destination",	0);
	create_insn	(x=0X7D02FE7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FE7E,	"num",	0);
	create_insn	(x=0X7D02FE84);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FE94);
	create_insn	(0X7D02FE9A);
	set_name	(0X7D02FE9A,	"op_attr_value_from_binary");
	create_insn	(0X7D02FE9E);
	set_name	(0X7D02FE9E,	"op_attr_secret_value_from_binary");
	set_cmt	(0X7D02FEA4,	"v",	0);
	create_insn	(x=0X7D02FEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FEB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FEC6,	"num",	0);
	set_cmt	(0X7D02FECE,	"source",	0);
	create_insn	(0X7D02FEDC);
	create_insn	(0X7D02FEE6);
	create_insn	(x=0X7D02FEF6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D02FEF8,	"num",	0);
	set_cmt	(0X7D02FEFE,	"destination",	0);
	set_cmt	(0X7D02FF00,	"source",	0);
	create_insn	(0X7D02FF10);
	set_name	(0X7D02FF10,	"op_attr_value_to_binary");
	create_insn	(0X7D02FF16);
	set_name	(0X7D02FF16,	"op_attr_secret_value_to_binary");
	set_cmt	(0X7D02FF2A,	"num",	0);
	set_cmt	(0X7D02FF32,	"destination",	0);
	set_cmt	(0X7D02FF34,	"source",	0);
	create_insn	(0X7D02FF46);
	set_name	(0X7D02FF46,	"op_attr_secret_value_clear");
	create_insn	(0X7D02FF54);
	set_name	(0X7D02FF54,	"cryp_state_free");
	create_insn	(x=0X7D02FF56);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FF66);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D02FF7A);
	op_stkvar	(x,	1);
	create_insn	(0X7D02FF8A);
	set_cmt	(0X7D02FF9A,	"ptr",	0);
	set_cmt	(0X7D02FFA0,	"ptr",	0);
	create_insn	(0X7D02FFAC);
	set_name	(0X7D02FFAC,	"copy_in_attrs");
	set_cmt	(0X7D02FFB8,	"flags",	0);
	set_cmt	(0X7D02FFBA,	"uaddr",	0);
	create_insn	(x=0X7D02FFD8);
	op_hex		(x,	1);
	set_cmt	(0X7D02FFE2,	"utc",	0);
	set_cmt	(0X7D02FFE4,	"flags",	0);
	set_cmt	(0X7D02FFE6,	"uaddr",	0);
	set_cmt	(0X7D02FFE8,	"len",	0);
	create_insn	(0X7D02FFFE);
	create_insn	(0X7D030004);
	set_name	(0X7D030004,	"tee_svc_cryp_free_states");
	create_insn	(0X7D030014);
	create_insn	(0X7D030016);
	set_name	(0X7D030016,	"syscall_cipher_update");
	create_insn	(x=0X7D030018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03001E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030020);
	op_stkvar	(x,	1);
	create_insn	(0X7D030030);
	set_name	(0X7D030030,	"syscall_cipher_final");
	create_insn	(x=0X7D030032);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03003A);
	op_stkvar	(x,	1);
	create_insn	(0X7D03004A);
	set_name	(0X7D03004A,	"syscall_oper72");
	create_insn	(x=0X7D03004E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030058);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03005A,	"flags",	0);
	set_cmt	(0X7D03005E,	"uaddr",	0);
	set_cmt	(0X7D030060,	"len",	0);
	set_cmt	(0X7D030062,	"utc",	0);
	create_insn	(0X7D03007C);
	set_name	(0X7D03007C,	"syscall_oper73");
	create_insn	(x=0X7D030080);
	op_stkvar	(x,	1);
	create_insn	(0X7D03009A);
	set_name	(0X7D03009A,	"syscall_cryptocell_9A");
	set_cmt	(0X7D03009E,	"fourcc",	0);
	create_insn	(x=0X7D0300A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0300B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0300B8,	"out_key",	0);
	create_insn	(x=0X7D0300B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0300BA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0300BC,	"a1",	0);
	set_cmt	(0X7D0300BE,	"out_key_len",	0);
	create_insn	(x=0X7D0300BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0300C0,	"passphrase",	0);
	set_cmt	(0X7D0300C2,	"a2",	0);
	set_cmt	(0X7D0300C4,	"passphrase_len",	0);
	create_insn	(x=0X7D0300C4);
	op_stkvar	(x,	1);
	create_insn	(0X7D0300D2);
	set_name	(0X7D0300D2,	"tee_svc_storage_create_filename");
	create_insn	(0X7D0300EA);
	set_cmt	(0X7D0300EC,	"size",	0);
	set_cmt	(0X7D030100,	"hslen",	0);
	set_cmt	(0X7D030102,	"b",	0);
	set_cmt	(0X7D030104,	"blen",	0);
	set_cmt	(0X7D03011E,	"b",	0);
	set_cmt	(0X7D030120,	"hs",	0);
	set_cmt	(0X7D030122,	"blen",	0);
	set_cmt	(0X7D030124,	"hslen",	0);
	create_insn	(0X7D030130);
	set_name	(0X7D030130,	"tee_svc_storage_create_dirname");
	set_cmt	(0X7D030134,	"size",	0);
	set_cmt	(0X7D030146,	"blen",	0);
	set_cmt	(0X7D030148,	"b",	0);
	set_cmt	(0X7D03014A,	"hslen",	0);
	create_insn	(0X7D030154);
	set_name	(0X7D030154,	"tee_svc_storage_close_all_enum");
	create_insn	(0X7D030164);
	create_insn	(0X7D030166);
	set_name	(0X7D030166,	"rpmb_fs_mkdir");
	create_insn	(0X7D03016A);
	set_name	(0X7D03016A,	"rpmb_fs_dir_free");
	set_cmt	(0X7D030172,	"ptr",	0);
	create_insn	(0X7D03018C);
	create_insn	(0X7D03018E);
	set_name	(0X7D03018E,	"rpmb_fs_readdir");
	set_cmt	(0X7D030198,	"ptr",	0);
	create_insn	(0X7D030198);
	create_insn	(0X7D0301B4);
	set_name	(0X7D0301B4,	"rpmb_fs_closedir");
	set_cmt	(0X7D0301BE,	"ptr",	0);
	create_insn	(0X7D0301C8);
	set_name	(0X7D0301C8,	"tee_rpmb_invoke");
	set_cmt	(0X7D0301FC,	"num_params",	0);
	set_cmt	(0X7D030216,	"cmd",	0);
	set_cmt	(0X7D03021C,	"params",	0);
	create_insn	(0X7D030226);
	set_name	(0X7D030226,	"tee_rpmb_free");
	create_insn	(0X7D030234);
	create_insn	(0X7D03023C);
	create_insn	(0X7D030250);
	set_name	(0X7D030250,	"alloc_file_handle");
	set_cmt	(0X7D030252,	"size",	0);
	set_cmt	(0X7D030258,	"nmemb",	0);
	set_cmt	(0X7D030264,	"src",	0);
	set_cmt	(0X7D030266,	"dst",	0);
	set_cmt	(0X7D03026A,	"siz",	0);
	create_insn	(0X7D030274);
	set_name	(0X7D030274,	"rpmb_fs_opendir");
	create_insn	(x=0X7D030278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03027E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030282);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03028C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030290);
	op_stkvar	(x,	1);
	create_insn	(0X7D030294);
	set_name	(0X7D030294,	"tee_obj_add");
	set_cmt	(0X7D0302A2,	"nmemb",	0);
	create_insn	(0X7D0302A2);
	set_name	(0X7D0302A2,	"tee_obj_alloc");
	set_cmt	(0X7D0302A4,	"size",	0);
	create_insn	(0X7D0302AA);
	set_name	(0X7D0302AA,	"tee_obj_free");
	set_cmt	(0X7D0302B4,	"ptr",	0);
	set_cmt	(0X7D0302BA,	"ptr",	0);
	create_insn	(0X7D0302C4);
	create_insn	(0X7D0302C6);
	set_name	(0X7D0302C6,	"tee_obj_close");
	create_insn	(0X7D0302D4);
	create_insn	(0X7D0302FE);
	set_name	(0X7D0302FE,	"tee_obj_close_all");
	create_insn	(0X7D03030E);
	create_insn	(0X7D030310);
	set_name	(0X7D030310,	"syscall_oper71");
	create_insn	(x=0X7D030314);
	op_stkvar	(x,	1);
	create_insn	(0X7D03032E);
	set_name	(0X7D03032E,	"plat_cpu_gic_conf_interrupts");
	set_cmt	(0X7D030334,	"GIC_DIST_ISR0",	1);
	create_insn	(0X7D030344);
	set_name	(0X7D030344,	"gic_init");
	create_insn	(0X7D030376);
	create_insn	(0X7D03037E);
	create_insn	(0X7D03038E);
	create_insn	(x=0X7D030390);
	op_hex		(x,	1);
	create_insn	(0X7D03039A);
	create_insn	(0X7D0303AC);
	create_insn	(0X7D0303B0);
	create_insn	(0X7D0303B4);
	create_insn	(0X7D0303C4);
	create_insn	(0X7D0303D0);
	create_insn	(0X7D0303E2);
	create_insn	(0X7D0303E6);
	create_insn	(0X7D0303F8);
	create_insn	(0X7D0303FC);
	set_name	(0X7D0303FC,	"sasi_bn_clear");
	create_insn	(0X7D030404);
	set_name	(0X7D030404,	"sasi_bn_free");
	create_insn	(0X7D030408);
	set_name	(0X7D030408,	"sasi_free_ecc_public_key");
	set_cmt	(0X7D03040E,	"ptr",	0);
	set_cmt	(0X7D030414,	"ptr",	0);
	create_insn	(0X7D03041E);
	create_insn	(0X7D030420);
	set_name	(0X7D030420,	"sasi_free_rsa_public_key");
	set_cmt	(0X7D030426,	"ptr",	0);
	set_cmt	(0X7D03042C,	"ptr",	0);
	create_insn	(0X7D030436);
	create_insn	(0X7D030438);
	set_name	(0X7D030438,	"sasi_copy");
	create_insn	(0X7D030440);
	create_insn	(0X7D030442);
	set_name	(0X7D030442,	"sasi_bn_allocate");
	set_cmt	(0X7D030448,	"nmemb",	0);
	set_cmt	(0X7D03044E,	"size",	0);
	create_insn	(0X7D03045C);
	set_name	(0X7D03045C,	"sasi_bn_alloc_max");
	create_insn	(0X7D030472);
	set_name	(0X7D030472,	"sasi_bignum_bn2bin");
	create_insn	(x=0X7D03047C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030482,	"buffer",	0);
	set_cmt	(0X7D030484,	"buffer_len",	0);
	create_insn	(x=0X7D030484);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030486,	"n",	0);
	create_insn	(0X7D030490);
	set_name	(0X7D030490,	"sasi_bignum_num_bytes");
	create_insn	(0X7D030494);
	set_name	(0X7D030494,	"tom_bn_clear");
	create_insn	(0X7D03049C);
	set_name	(0X7D03049C,	"tom_bn_free");
	create_insn	(0X7D0304A0);
	set_name	(0X7D0304A0,	"tom_free_ecc_public_key");
	set_cmt	(0X7D0304A6,	"ptr",	0);
	set_cmt	(0X7D0304AC,	"ptr",	0);
	create_insn	(0X7D0304B6);
	create_insn	(0X7D0304B8);
	set_name	(0X7D0304B8,	"tom_free_rsa_public_key");
	set_cmt	(0X7D0304BE,	"ptr",	0);
	set_cmt	(0X7D0304C4,	"ptr",	0);
	create_insn	(0X7D0304CE);
	create_insn	(0X7D0304D0);
	set_name	(0X7D0304D0,	"tom_bn_allocate");
	set_cmt	(0X7D0304D6,	"nmemb",	0);
	set_cmt	(0X7D0304DC,	"size",	0);
	create_insn	(0X7D0304EA);
	set_name	(0X7D0304EA,	"tom_bn_alloc_max");
	create_insn	(0X7D030500);
	set_name	(0X7D030500,	"tom_rsanopad_encrypt");
	create_insn	(x=0X7D030506);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030518,	"src",	0);
	create_insn	(x=0X7D03051A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03051E,	"src_len",	0);
	create_insn	(x=0X7D030520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030522);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030524,	"dst",	0);
	set_cmt	(0X7D030526,	"dst_len",	0);
	create_insn	(x=0X7D030526);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030528,	"ltc_key",	0);
	create_insn	(x=0X7D030528);
	op_stkvar	(x,	1);
	create_insn	(0X7D030532);
	set_name	(0X7D030532,	"tom_rsanopad_decrypt");
	create_insn	(x=0X7D030538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03054A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03056C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030576);
	op_stkvar	(x,	1);
	set_cmt	(0X7D030578,	"ltc_key",	0);
	create_insn	(x=0X7D030578);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03057A,	"src",	0);
	set_cmt	(0X7D03057C,	"dst_len",	0);
	create_insn	(x=0X7D03057C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03057E,	"src_len",	0);
	set_cmt	(0X7D030580,	"dst",	0);
	create_insn	(0X7D03058A);
	set_name	(0X7D03058A,	"tom_get_pool");
	set_cmt	(0X7D0305A6,	"cv",	0);
	set_cmt	(0X7D0305A8,	"m",	0);
	create_insn	(0X7D0305B0);
	set_cmt	(0X7D0305B8,	"m",	0);
	create_insn	(0X7D0305C6);
	set_name	(0X7D0305C6,	"tom_get_des2_key");
	create_insn	(x=0X7D0305CC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0305D8,	"destination",	0);
	set_cmt	(0X7D0305DA,	"source",	0);
	set_cmt	(0X7D0305DC,	"num",	0);
	set_cmt	(0X7D0305E2,	"source",	0);
	set_cmt	(0X7D0305E4,	"destination",	0);
	set_cmt	(0X7D0305E8,	"num",	0);
	create_insn	(0X7D0305FA);
	create_insn	(0X7D030604);
	create_insn	(0X7D030608);
	set_name	(0X7D030608,	"nullsub_14");
	create_insn	(0X7D03060A);
	set_name	(0X7D03060A,	"rijndael_keysize");
	create_insn	(0X7D03061A);
	create_insn	(0X7D030628);
	create_insn	(0X7D03062C);
	create_insn	(0X7D030630);
	create_insn	(0X7D030634);
	create_insn	(0X7D030638);
	set_name	(0X7D030638,	"des_done");
	create_insn	(0X7D03063A);
	set_name	(0X7D03063A,	"des3_done");
	create_insn	(0X7D03063C);
	set_name	(0X7D03063C,	"des_keysize");
	create_insn	(0X7D03064C);
	create_insn	(0X7D030650);
	create_insn	(0X7D030654);
	set_name	(0X7D030654,	"des3_keysize");
	create_insn	(0X7D030664);
	create_insn	(0X7D030668);
	create_insn	(0X7D03066C);
	create_insn	(x=0X7D03068A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0306A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0306AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0306BA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0306CE);
	create_insn	(0X7D0306D4);
	create_insn	(x=0X7D0306F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03070E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030724);
	op_stkvar	(x,	1);
	create_insn	(0X7D030738);
	create_insn	(0X7D03073E);
	create_insn	(x=0X7D030766);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03077E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D030798);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0307A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0307BC);
	create_insn	(0X7D0307C2);
	create_insn	(0X7D030842);
	create_insn	(0X7D030848);
	create_insn	(x=0X7D030852);
	op_hex		(x,	1);
	create_insn	(0X7D030876);
	create_insn	(0X7D03087A);
	create_insn	(0X7D030880);
	create_insn	(x=0X7D03088E);
	op_hex		(x,	1);
	create_insn	(x=0X7D030894);
	op_hex		(x,	1);
	create_insn	(0X7D0308F6);
	create_insn	(0X7D0308FA);
	create_insn	(0X7D0308FE);
	create_insn	(0X7D030906);
	set_name	(0X7D030906,	"ccm_reset");
	set_cmt	(0X7D03090C,	"outlen",	0);
	set_cmt	(0X7D03090E,	"out",	0);
	set_cmt	(0X7D030916,	"outlen",	0);
	set_cmt	(0X7D030918,	"out",	0);
	set_cmt	(0X7D030920,	"outlen",	0);
	set_cmt	(0X7D030922,	"out",	0);
	create_insn	(0X7D03093A);
	create_insn	(0X7D03093E);
	set_name	(0X7D03093E,	"gcm_add_aad");
	create_insn	(0X7D030950);
	set_cmt	(0X7D03095E,	"idx",	0);
	set_cmt	(0X7D03097A,	"num",	0);
	create_insn	(0X7D0309A2);
	set_cmt	(0X7D0309C0,	"outlen",	0);
	set_cmt	(0X7D0309C2,	"out",	0);
	set_cmt	(0X7D030A26,	"source",	0);
	set_cmt	(0X7D030A28,	"destination",	0);
	set_cmt	(0X7D030A2C,	"num",	0);
	set_cmt	(0X7D030A32,	"out",	0);
	set_cmt	(0X7D030A34,	"outlen",	0);
	set_cmt	(0X7D030A3C,	"destination",	0);
	create_insn	(0X7D030A3C);
	set_cmt	(0X7D030A40,	"source",	0);
	set_cmt	(0X7D030A5A,	"num",	0);
	set_cmt	(0X7D030A5C,	"source",	0);
	set_cmt	(0X7D030A62,	"destination",	0);
	set_cmt	(0X7D030A6C,	"outlen",	0);
	set_cmt	(0X7D030A6E,	"out",	0);
	create_insn	(0X7D030AEA);
	create_insn	(0X7D030AF0);
	set_name	(0X7D030AF0,	"gcm_add_iv");
	set_cmt	(0X7D030B14,	"idx",	0);
	create_insn	(x=0X7D030B2E);
	op_hex		(x,	1);
	create_insn	(0X7D030B98);
	create_insn	(0X7D030B9C);
	create_insn	(0X7D030BA4);
	set_name	(0X7D030BA4,	"gcm_mult_h");
	set_cmt	(0X7D030BB2,	"destination",	0);
	set_cmt	(0X7D030BB4,	"source",	0);
	set_cmt	(0X7D030BB6,	"num",	0);
	create_insn	(0X7D030BC0);
	set_name	(0X7D030BC0,	"gcm_reset");
	set_cmt	(0X7D030BC6,	"outlen",	0);
	set_cmt	(0X7D030BC8,	"out",	0);
	set_cmt	(0X7D030BD0,	"outlen",	0);
	set_cmt	(0X7D030BD2,	"out",	0);
	create_insn	(0X7D030BFE);
	create_insn	(0X7D030C02);
	set_name	(0X7D030C02,	"md5_test");
	create_insn	(0X7D030C06);
	set_name	(0X7D030C06,	"md5_done");
	create_insn	(0X7D030C4A);
	create_insn	(0X7D030C6A);
	create_insn	(0X7D030CCA);
	create_insn	(0X7D030CCE);
	create_insn	(0X7D030CD2);
	set_name	(0X7D030CD2,	"md5_process");
	create_insn	(0X7D030D24);
	set_cmt	(0X7D030D30,	"source",	0);
	set_cmt	(0X7D030D32,	"destination",	0);
	set_cmt	(0X7D030D34,	"num",	0);
	create_insn	(0X7D030D68);
	create_insn	(0X7D030D6E);
	create_insn	(0X7D030D74);
	set_name	(0X7D030D74,	"sha1_test");
	create_insn	(0X7D030D78);
	set_name	(0X7D030D78,	"sha1_done");
	create_insn	(0X7D030DC0);
	create_insn	(0X7D030DE2);
	create_insn	(0X7D030E4A);
	create_insn	(0X7D030E4E);
	create_insn	(0X7D030E52);
	set_name	(0X7D030E52,	"sha1_process");
	create_insn	(0X7D030EA4);
	set_cmt	(0X7D030EB0,	"source",	0);
	set_cmt	(0X7D030EB2,	"destination",	0);
	set_cmt	(0X7D030EB4,	"num",	0);
	create_insn	(0X7D030EE8);
	create_insn	(0X7D030EEE);
	create_insn	(0X7D030EF4);
	set_name	(0X7D030EF4,	"sha224_test");
	create_insn	(0X7D030EF8);
	set_name	(0X7D030EF8,	"sha224_done");
	set_cmt	(0X7D030F0A,	"source",	0);
	set_cmt	(0X7D030F0C,	"destination",	0);
	set_cmt	(0X7D030F0E,	"num",	0);
	create_insn	(0X7D030F18);
	create_insn	(0X7D030F1E);
	set_name	(0X7D030F1E,	"sha256_test");
	create_insn	(0X7D030F22);
	set_name	(0X7D030F22,	"sha256_done");
	create_insn	(0X7D030F6A);
	create_insn	(0X7D030F8C);
	create_insn	(0X7D030FF4);
	create_insn	(0X7D030FF8);
	create_insn	(0X7D030FFC);
	set_name	(0X7D030FFC,	"sha256_process");
	create_insn	(0X7D03104E);
	set_cmt	(0X7D03105A,	"source",	0);
	set_cmt	(0X7D03105C,	"destination",	0);
	set_cmt	(0X7D03105E,	"num",	0);
	create_insn	(0X7D031092);
	create_insn	(0X7D031098);
	create_insn	(0X7D03109E);
	set_name	(0X7D03109E,	"sha384_test");
	create_insn	(0X7D0310A2);
	set_name	(0X7D0310A2,	"sha384_done");
	set_cmt	(0X7D0310B8,	"destination",	0);
	set_cmt	(0X7D0310BA,	"source",	0);
	set_cmt	(0X7D0310BC,	"num",	0);
	create_insn	(0X7D0310C6);
	create_insn	(0X7D0310CC);
	set_name	(0X7D0310CC,	"sha512_test");
	create_insn	(0X7D0310D0);
	set_name	(0X7D0310D0,	"sha512_done");
	create_insn	(0X7D031116);
	create_insn	(0X7D031138);
	create_insn	(0X7D0311BE);
	create_insn	(0X7D0311C2);
	create_insn	(0X7D0311C6);
	set_name	(0X7D0311C6,	"sha512_process");
	create_insn	(0X7D031218);
	set_cmt	(0X7D031224,	"source",	0);
	set_cmt	(0X7D031226,	"destination",	0);
	set_cmt	(0X7D031228,	"num",	0);
	create_insn	(0X7D03125C);
	create_insn	(0X7D031262);
	create_insn	(0X7D031268);
	set_name	(0X7D031268,	"zeromem");
	create_insn	(0X7D031278);
	create_insn	(0X7D03127A);
	set_name	(0X7D03127A,	"ctr_decrypt");
	create_insn	(0X7D03128A);
	create_insn	(0X7D03128E);
	set_name	(0X7D03128E,	"xts_mult_x");
	create_insn	(0X7D0312AA);
	create_insn	(x=0X7D0312AE);
	op_hex		(x,	1);
	create_insn	(0X7D0312B8);
	set_name	(0X7D0312B8,	"dsa_free");
	create_insn	(x=0X7D0312C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0312D2);
	set_name	(0X7D0312D2,	"rsa_free");
	create_insn	(x=0X7D0312DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0312F8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0312FC);
	set_name	(0X7D0312FC,	"ecc_free");
	create_insn	(x=0X7D031304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03130E);
	op_stkvar	(x,	1);
	create_insn	(0X7D031312);
	set_name	(0X7D031312,	"ltc_ecc_new_point");
	set_cmt	(0X7D031314,	"nmemb",	0);
	set_cmt	(0X7D031316,	"size",	0);
	create_insn	(x=0X7D031322);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031336,	"ptr",	0);
	create_insn	(0X7D031340);
	create_insn	(0X7D031346);
	set_name	(0X7D031346,	"ltc_ecc_del_point");
	set_cmt	(0X7D031354,	"ptr",	0);
	create_insn	(0X7D03135E);
	create_insn	(0X7D031360);
	set_name	(0X7D031360,	"fortuna_update_iv");
	create_insn	(0X7D031378);
	set_name	(0X7D031378,	"fortuna_test");
	create_insn	(0X7D03137C);
	set_name	(0X7D03137C,	"fortuna_reseed");
	create_insn	(x=0X7D03138C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0313A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0313BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0313BC);
	op_stkvar	(x,	1);
	create_insn	(0X7D0313C4);
	set_cmt	(0X7D0313D2,	"shift",	0);
	create_insn	(x=0X7D0313E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0313F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0313F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031402);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031406);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03140C);
	op_stkvar	(x,	1);
	create_insn	(0X7D031412);
	create_insn	(x=0X7D03141E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031420);
	op_stkvar	(x,	1);
	create_insn	(0X7D03142A);
	create_insn	(x=0X7D03142C);
	op_stkvar	(x,	1);
	create_insn	(0X7D03145C);
	set_name	(0X7D03145C,	"fortuna_ready");
	create_insn	(0X7D031460);
	set_name	(0X7D031460,	"fortuna_start");
	create_insn	(0X7D031494);
	create_insn	(0X7D031498);
	set_cmt	(0X7D0314BE,	"outlen",	0);
	set_cmt	(0X7D0314C4,	"out",	0);
	set_cmt	(0X7D0314EE,	"out",	0);
	create_insn	(0X7D0314EE);
	set_cmt	(0X7D0314F0,	"outlen",	0);
	create_insn	(0X7D031502);
	create_insn	(0X7D03150A);
	set_name	(0X7D03150A,	"fortuna_done");
	set_cmt	(0X7D03151A,	"m",	0);
	set_cmt	(0X7D031534,	"m",	0);
	create_insn	(0X7D03153E);
	create_insn	(0X7D031544);
	set_name	(0X7D031544,	"fortuna_add_entropy");
	set_cmt	(0X7D03155C,	"m",	0);
	set_cmt	(0X7D031566,	"m",	0);
	create_insn	(0X7D03156E);
	create_insn	(x=0X7D031578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031582);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031586);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031592,	"m",	0);
	create_insn	(0X7D03159C);
	set_cmt	(0X7D0315AE,	"m",	0);
	create_insn	(0X7D0315B8);
	set_cmt	(0X7D0315BC,	"lineno",	0);
	set_cmt	(0X7D0315C2,	"m",	0);
	create_insn	(0X7D0315D6);
	create_insn	(0X7D0315DE);
	set_name	(0X7D0315DE,	"fortuna_import");
	create_insn	(0X7D03160E);
	create_insn	(0X7D031612);
	set_name	(0X7D031612,	"fortuna_read");
	set_cmt	(0X7D031632,	"m",	0);
	set_cmt	(0X7D031654,	"prng",	0);
	create_insn	(0X7D031654);
	create_insn	(0X7D031660);
	create_insn	(x=0X7D03167E);
	op_hex		(x,	1);
	create_insn	(x=0X7D031682);
	op_hex		(x,	1);
	set_cmt	(0X7D031694,	"destination",	0);
	set_cmt	(0X7D031696,	"source",	0);
	set_cmt	(0X7D031698,	"num",	0);
	set_cmt	(0X7D0316D8,	"m",	0);
	set_cmt	(0X7D0316E2,	"m",	0);
	create_insn	(0X7D0316E2);
	create_insn	(0X7D0316EC);
	create_insn	(0X7D0316F4);
	set_name	(0X7D0316F4,	"fortuna_export");
	set_cmt	(0X7D031710,	"m",	0);
	set_cmt	(0X7D03171E,	"m",	0);
	set_cmt	(0X7D03172E,	"size",	0);
	create_insn	(0X7D03172E);
	set_cmt	(0X7D031738,	"m",	0);
	create_insn	(0X7D031742);
	set_cmt	(0X7D03174C,	"num",	0);
	set_cmt	(0X7D03174E,	"destination",	0);
	set_cmt	(0X7D031794,	"ptr",	0);
	create_insn	(x=0X7D031796);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03179C,	"m",	0);
	create_insn	(x=0X7D0317A2);
	op_stkvar	(x,	1);
	create_insn	(0X7D0317A8);
	create_insn	(0X7D0317B0);
	set_name	(0X7D0317B0,	"mp_get_digit");
	create_insn	(0X7D0317C6);
	create_insn	(0X7D0317CA);
	create_insn	(0X7D0317CE);
	set_name	(0X7D0317CE,	"mp_get_digit_count");
	create_insn	(0X7D0317DA);
	create_insn	(0X7D0317DE);
	set_name	(0X7D0317DE,	"mp_montgomery_deinit");
	create_insn	(0X7D0317E2);
	set_name	(0X7D0317E2,	"mp_copy");
	set_cmt	(0X7D0317EA,	"dest",	0);
	set_cmt	(0X7D0317EC,	"src",	0);
	create_insn	(0X7D0317F6);
	create_insn	(0X7D0317FA);
	set_name	(0X7D0317FA,	"mp_compare_d");
	set_cmt	(0X7D031804,	"op2",	0);
	create_insn	(0X7D031810);
	set_cmt	(0X7D03181E,	"op1",	0);
	create_insn	(x=0X7D03181E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D031822);
	create_insn	(0X7D031832);
	create_insn	(0X7D031836);
	create_insn	(0X7D03183A);
	set_name	(0X7D03183A,	"mp_div_2");
	set_cmt	(0X7D031842,	"dest",	0);
	set_cmt	(0X7D031844,	"steps",	0);
	set_cmt	(0X7D031846,	"src",	0);
	create_insn	(0X7D031850);
	create_insn	(0X7D031854);
	set_name	(0X7D031854,	"mp_unsigned_read");
	set_cmt	(0X7D03185A,	"negative",	0);
	create_insn	(0X7D031864);
	create_insn	(0X7D031868);
	set_name	(0X7D031868,	"mp_read_radix");
	create_insn	(0X7D03187A);
	create_insn	(0X7D03187E);
	create_insn	(0X7D031882);
	set_name	(0X7D031882,	"mp_get_int");
	create_insn	(0X7D031888);
	create_insn	(0X7D03188C);
	set_name	(0X7D03188C,	"mp_set_int");
	create_insn	(0X7D031898);
	create_insn	(0X7D03189C);
	set_name	(0X7D03189C,	"mp_neg");
	set_cmt	(0X7D0318A4,	"dest",	0);
	set_cmt	(0X7D0318A6,	"src",	0);
	create_insn	(0X7D0318B0);
	create_insn	(0X7D0318B4);
	set_name	(0X7D0318B4,	"mp_twoexpt");
	create_insn	(0X7D0318DA);
	create_insn	(x=0X7D0318DC);
	op_hex		(x,	1);
	create_insn	(0X7D0318EE);
	create_insn	(0X7D0318F2);
	create_insn	(0X7D0318F6);
	set_name	(0X7D0318F6,	"mp_sqrmod");
	set_cmt	(0X7D0318F8,	"d",	0);
	set_cmt	(0X7D0318FC,	"b",	0);
	set_cmt	(0X7D031904,	"c",	0);
	create_insn	(0X7D03190E);
	create_insn	(0X7D031912);
	set_name	(0X7D031912,	"mp_write_radix");
	set_cmt	(0X7D031914,	"n",	0);
	set_cmt	(0X7D03191A,	"str",	0);
	set_cmt	(0X7D03191C,	"mode",	0);
	create_insn	(0X7D03192C);
	create_insn	(0X7D031930);
	set_name	(0X7D031930,	"mp_count_lsb_bits");
	create_insn	(0X7D031948);
	set_cmt	(0X7D03194A,	"src",	0);
	set_cmt	(0X7D03194C,	"idx",	0);
	create_insn	(0X7D031958);
	create_insn	(0X7D03195C);
	create_insn	(0X7D031960);
	set_name	(0X7D031960,	"mp_count_bits");
	create_insn	(0X7D03196C);
	create_insn	(0X7D031970);
	set_name	(0X7D031970,	"mp_unsigned_size");
	set_cmt	(0X7D03197C,	"op2",	0);
	set_cmt	(0X7D03197E,	"op1",	0);
	create_insn	(x=0X7D031986);
	op_hex		(x,	1);
	create_insn	(0X7D031994);
	create_insn	(0X7D031998);
	set_name	(0X7D031998,	"mp_unsigned_write");
	set_cmt	(0X7D0319A6,	"n",	0);
	create_insn	(x=0X7D0319A8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0319AE,	"buffer",	0);
	create_insn	(0X7D0319B8);
	create_insn	(0X7D0319BE);
	set_name	(0X7D0319BE,	"mp_compare");
	create_insn	(0X7D0319D4);
	create_insn	(0X7D0319DA);
	create_insn	(0X7D0319DE);
	set_name	(0X7D0319DE,	"mp_lcm");
	set_cmt	(0X7D0319EC,	"a",	0);
	create_insn	(x=0X7D0319EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0319FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A1A);
	op_stkvar	(x,	1);
	create_insn	(0X7D031A22);
	create_insn	(0X7D031A26);
	create_insn	(0X7D031A2E);
	set_name	(0X7D031A2E,	"mp_modi");
	set_cmt	(0X7D031A3A,	"a",	0);
	create_insn	(x=0X7D031A3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A42);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A62);
	op_stkvar	(x,	1);
	create_insn	(0X7D031A6C);
	create_insn	(0X7D031A70);
	create_insn	(0X7D031A76);
	set_name	(0X7D031A76,	"mp_init_copy");
	create_insn	(0X7D031A8E);
	create_insn	(0X7D031A92);
	set_name	(0X7D031A92,	"der_decode_sequence_ex");
	create_insn	(x=0X7D031A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031A9C);
	op_stkvar	(x,	1);
	create_insn	(0X7D031AC8);
	create_insn	(x=0X7D031AD4);
	op_hex		(x,	1);
	create_insn	(0X7D031AF4);
	create_insn	(x=0X7D031B00);
	op_stkvar	(x,	1);
	create_insn	(0X7D031B10);
	create_insn	(x=0X7D031B14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031B26,	"outlen",	0);
	create_insn	(x=0X7D031B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031B2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031B46,	"switch 17 cases ",	0);
	create_insn	(0X7D031B46);
	set_cmt	(0X7D031B4E,	"switch jump",	0);
	set_cmt	(0X7D031B52,	"jump table for switch statement",	0);
	create_word	(0X7D031B52);
	set_name	(0X7D031B52,	"jpt_7D031B4E");
	create_word	(0X7D031B54);
	create_word	(0X7D031B56);
	create_word	(0X7D031B58);
	create_word	(0X7D031B5A);
	create_word	(0X7D031B5C);
	create_word	(0X7D031B5E);
	create_word	(0X7D031B60);
	create_word	(0X7D031B62);
	create_word	(0X7D031B64);
	create_word	(0X7D031B66);
	create_word	(0X7D031B68);
	create_word	(0X7D031B6A);
	create_word	(0X7D031B6C);
	create_word	(0X7D031B6E);
	create_word	(0X7D031B70);
	create_word	(0X7D031B72);
	set_cmt	(0X7D031B74,	"jumptable 7D031B4E case 1",	1);
	create_insn	(0X7D031B74);
	set_cmt	(0X7D031B76,	"inlen",	0);
	set_cmt	(0X7D031B78,	"out",	0);
	create_insn	(x=0X7D031B7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031B86,	"outlen",	0);
	create_insn	(x=0X7D031B86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031B8E,	"jumptable 7D031B4E case 2",	1);
	create_insn	(0X7D031B8E);
	set_cmt	(0X7D031B90,	"inlen",	0);
	set_cmt	(0X7D031B92,	"num",	0);
	create_insn	(x=0X7D031B94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BA0,	"num",	0);
	set_cmt	(0X7D031BA2,	"outlen",	0);
	create_insn	(x=0X7D031BA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BAA,	"jumptable 7D031B4E case 3",	1);
	create_insn	(0X7D031BAA);
	set_cmt	(0X7D031BAC,	"inlen",	0);
	set_cmt	(0X7D031BAE,	"num",	0);
	create_insn	(x=0X7D031BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031BC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BC8,	"jumptable 7D031B4E case 4",	1);
	create_insn	(0X7D031BC8);
	set_cmt	(0X7D031BCA,	"outlen",	0);
	create_insn	(x=0X7D031BCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BCC,	"inlen",	0);
	set_cmt	(0X7D031BCE,	"out",	0);
	create_insn	(x=0X7D031BD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BD8,	"jumptable 7D031B4E case 16",	1);
	create_insn	(0X7D031BD8);
	set_cmt	(0X7D031BDA,	"outlen",	0);
	create_insn	(x=0X7D031BDA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BDC,	"inlen",	0);
	set_cmt	(0X7D031BDE,	"out",	0);
	create_insn	(x=0X7D031BE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BEC,	"nbits",	0);
	create_insn	(x=0X7D031BEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BEE,	"outlen",	0);
	create_insn	(x=0X7D031BEE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BFA,	"jumptable 7D031B4E case 5",	1);
	create_insn	(0X7D031BFA);
	set_cmt	(0X7D031BFC,	"outlen",	0);
	create_insn	(x=0X7D031BFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031BFE,	"inlen",	0);
	set_cmt	(0X7D031C00,	"out",	0);
	create_insn	(x=0X7D031C02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C0E,	"noctets",	0);
	create_insn	(x=0X7D031C0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C10,	"outlen",	0);
	create_insn	(x=0X7D031C10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C1C,	"jumptable 7D031B4E case 6",	1);
	create_insn	(0X7D031C1C);
	create_insn	(0X7D031C34);
	create_insn	(x=0X7D031C36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C3A,	"jumptable 7D031B4E case 7",	1);
	create_insn	(0X7D031C3A);
	set_cmt	(0X7D031C3C,	"outlen",	0);
	create_insn	(x=0X7D031C3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C3E,	"inlen",	0);
	set_cmt	(0X7D031C40,	"words",	0);
	create_insn	(x=0X7D031C42);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C4C,	"nwords",	0);
	create_insn	(x=0X7D031C4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C4E,	"outlen",	0);
	create_insn	(x=0X7D031C4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C50,	"words",	0);
	set_cmt	(0X7D031C5C,	"jumptable 7D031B4E case 17",	1);
	create_insn	(0X7D031C5C);
	set_cmt	(0X7D031C5E,	"outlen",	0);
	create_insn	(x=0X7D031C5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C60,	"inlen",	0);
	set_cmt	(0X7D031C62,	"out",	0);
	create_insn	(x=0X7D031C64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C6E,	"noctets",	0);
	create_insn	(x=0X7D031C6E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C70,	"outlen",	0);
	create_insn	(x=0X7D031C70);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C72,	"octets",	0);
	set_cmt	(0X7D031C7E,	"jumptable 7D031B4E case 8",	1);
	create_insn	(0X7D031C7E);
	set_cmt	(0X7D031C80,	"outlen",	0);
	create_insn	(x=0X7D031C80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C82,	"inlen",	0);
	set_cmt	(0X7D031C84,	"out",	0);
	create_insn	(x=0X7D031C86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C90,	"noctets",	0);
	create_insn	(x=0X7D031C90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C92,	"outlen",	0);
	create_insn	(x=0X7D031C92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031C94,	"octets",	0);
	set_cmt	(0X7D031CA0,	"jumptable 7D031B4E case 9",	1);
	create_insn	(0X7D031CA0);
	set_cmt	(0X7D031CA2,	"outlen",	0);
	create_insn	(x=0X7D031CA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CA4,	"inlen",	0);
	set_cmt	(0X7D031CA6,	"out",	0);
	create_insn	(x=0X7D031CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031CB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CC2,	"jumptable 7D031B4E case 10",	1);
	create_insn	(0X7D031CC2);
	set_cmt	(0X7D031CC4,	"outlen",	0);
	create_insn	(x=0X7D031CC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CC6,	"inlen",	0);
	set_cmt	(0X7D031CC8,	"out",	0);
	create_insn	(x=0X7D031CCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CD4,	"noctets",	0);
	create_insn	(x=0X7D031CD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CD6,	"outlen",	0);
	create_insn	(x=0X7D031CD6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CD8,	"in",	0);
	set_cmt	(0X7D031CE4,	"jumptable 7D031B4E case 11",	1);
	create_insn	(0X7D031CE4);
	set_cmt	(0X7D031CE6,	"inlen",	0);
	create_insn	(x=0X7D031CE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CE8,	"out",	0);
	create_insn	(x=0X7D031CEA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CF2,	"jumptable 7D031B4E case 14",	1);
	create_insn	(0X7D031CF2);
	create_insn	(x=0X7D031CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031CF6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031CFA,	"jumptable 7D031B4E cases 13,15",	1);
	create_insn	(0X7D031CFA);
	create_insn	(x=0X7D031D00);
	op_hex		(x,	1);
	create_insn	(0X7D031D0A);
	create_insn	(x=0X7D031D10);
	op_hex		(x,	1);
	create_insn	(0X7D031D18);
	create_insn	(x=0X7D031D1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031D1C,	"ordered",	0);
	create_insn	(x=0X7D031D1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031D1E,	"in",	0);
	set_cmt	(0X7D031D20,	"inlen",	0);
	set_cmt	(0X7D031D22,	"list",	0);
	set_cmt	(0X7D031D2A,	"list",	0);
	set_cmt	(0X7D031D2C,	"outlen",	0);
	create_insn	(x=0X7D031D2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031D2E,	"inlen",	0);
	create_insn	(x=0X7D031D2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031D38,	"jumptable 7D031B4E case 12",	1);
	create_insn	(0X7D031D38);
	set_cmt	(0X7D031D3A,	"inlen",	0);
	create_insn	(x=0X7D031D3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031D3C,	"list",	0);
	create_insn	(x=0X7D031D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031D4A);
	op_stkvar	(x,	1);
	create_insn	(0X7D031D64);
	create_insn	(x=0X7D031D6E);
	op_stkvar	(x,	1);
	create_insn	(0X7D031D78);
	set_cmt	(0X7D031D7C,	"jumptable 7D031B4E default case",	1);
	create_insn	(0X7D031D7C);
	set_name	(0X7D031D7C,	"def_7D031B4E");
	create_insn	(0X7D031D84);
	set_name	(0X7D031D84,	"der_encode_sequence_ex");
	set_cmt	(0X7D031DB0,	"nwords",	0);
	set_cmt	(0X7D031DB2,	"words",	0);
	create_insn	(x=0X7D031DB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031DC0,	"switch 16 cases ",	0);
	create_insn	(0X7D031DC0);
	set_cmt	(0X7D031DC8,	"switch jump",	0);
	set_cmt	(0X7D031DCC,	"jump table for switch statement",	0);
	create_word	(0X7D031DCC);
	set_name	(0X7D031DCC,	"jpt_7D031DC8");
	create_word	(0X7D031DCE);
	create_word	(0X7D031DD0);
	create_word	(0X7D031DD2);
	create_word	(0X7D031DD4);
	create_word	(0X7D031DD6);
	create_word	(0X7D031DD8);
	create_word	(0X7D031DDA);
	create_word	(0X7D031DDC);
	create_word	(0X7D031DDE);
	create_word	(0X7D031DE0);
	create_word	(0X7D031DE2);
	create_word	(0X7D031DE4);
	create_word	(0X7D031DE6);
	create_word	(0X7D031DE8);
	create_word	(0X7D031DEA);
	set_cmt	(0X7D031DEC,	"jumptable 7D031DC8 case 1",	1);
	create_insn	(x=0X7D031DEC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031DF4,	"jumptable 7D031DC8 case 2",	1);
	create_insn	(x=0X7D031DF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031DFC,	"jumptable 7D031DC8 case 3",	1);
	create_insn	(0X7D031DFC);
	create_insn	(x=0X7D031DFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E06,	"jumptable 7D031DC8 cases 4,16",	1);
	create_insn	(0X7D031E06);
	set_cmt	(0X7D031E08,	"outlen",	0);
	create_insn	(x=0X7D031E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031E14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E1A,	"jumptable 7D031DC8 case 5",	1);
	create_insn	(0X7D031E1A);
	set_cmt	(0X7D031E1C,	"outlen",	0);
	create_insn	(x=0X7D031E1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E24,	"jumptable 7D031DC8 case 6",	1);
	create_insn	(0X7D031E24);
	set_cmt	(0X7D031E28,	"jumptable 7D031DC8 case 7",	1);
	create_insn	(x=0X7D031E28);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E30,	"jumptable 7D031DC8 case 8",	1);
	create_insn	(x=0X7D031E30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E38,	"jumptable 7D031DC8 case 9",	1);
	create_insn	(x=0X7D031E38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E40,	"jumptable 7D031DC8 case 10",	1);
	create_insn	(x=0X7D031E40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E48,	"jumptable 7D031DC8 case 11",	1);
	create_insn	(x=0X7D031E48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031E50,	"jumptable 7D031DC8 cases 13-15",	1);
	create_insn	(x=0X7D031E50);
	op_stkvar	(x,	1);
	create_insn	(0X7D031E58);
	create_insn	(0X7D031E60);
	create_insn	(0X7D031E68);
	create_insn	(0X7D031E72);
	create_insn	(0X7D031E88);
	create_insn	(x=0X7D031E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031E9E);
	op_stkvar	(x,	1);
	create_insn	(0X7D031EA4);
	create_insn	(x=0X7D031EAE);
	op_stkvar	(x,	1);
	create_insn	(0X7D031EB4);
	create_insn	(x=0X7D031EC4);
	op_stkvar	(x,	1);
	create_insn	(0X7D031ECA);
	create_insn	(x=0X7D031EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031EE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031EFE,	"inlen",	0);
	set_cmt	(0X7D031F00,	"in",	0);
	set_cmt	(0X7D031F08,	"switch 16 cases ",	0);
	set_cmt	(0X7D031F10,	"switch jump",	0);
	set_cmt	(0X7D031F14,	"jump table for switch statement",	0);
	create_byte	(0X7D031F14);
	set_name	(0X7D031F14,	"jpt_7D031F10");
	create_byte	(0X7D031F15);
	create_byte	(0X7D031F16);
	create_byte	(0X7D031F17);
	create_byte	(0X7D031F18);
	create_byte	(0X7D031F19);
	create_byte	(0X7D031F1A);
	create_byte	(0X7D031F1B);
	create_byte	(0X7D031F1C);
	create_byte	(0X7D031F1D);
	create_byte	(0X7D031F1E);
	create_byte	(0X7D031F1F);
	create_byte	(0X7D031F20);
	create_byte	(0X7D031F21);
	create_byte	(0X7D031F22);
	create_byte	(0X7D031F23);
	set_cmt	(0X7D031F24,	"jumptable 7D031F10 case 1",	1);
	create_insn	(x=0X7D031F24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F26,	"outlen",	0);
	create_insn	(x=0X7D031F26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F2A,	"out",	0);
	set_cmt	(0X7D031F2C,	"in",	0);
	create_insn	(x=0X7D031F2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F36,	"jumptable 7D031F10 case 2",	1);
	create_insn	(x=0X7D031F36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F38,	"outlen",	0);
	create_insn	(x=0X7D031F38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F3C,	"out",	0);
	create_insn	(x=0X7D031F3E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F46,	"jumptable 7D031F10 case 3",	1);
	create_insn	(0X7D031F46);
	set_cmt	(0X7D031F48,	"outlen",	0);
	create_insn	(x=0X7D031F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F4E,	"out",	0);
	set_cmt	(0X7D031F50,	"num",	0);
	set_cmt	(0X7D031F58,	"jumptable 7D031F10 case 4",	1);
	create_insn	(0X7D031F58);
	create_insn	(x=0X7D031F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F5E,	"outlen",	0);
	create_insn	(x=0X7D031F5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F60,	"out",	0);
	set_cmt	(0X7D031F68,	"jumptable 7D031F10 case 16",	1);
	create_insn	(0X7D031F68);
	create_insn	(x=0X7D031F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F6E,	"outlen",	0);
	create_insn	(x=0X7D031F6E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F70,	"out",	0);
	set_cmt	(0X7D031F78,	"jumptable 7D031F10 case 5",	1);
	create_insn	(0X7D031F78);
	create_insn	(x=0X7D031F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F7E,	"outlen",	0);
	create_insn	(x=0X7D031F7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F80,	"out",	0);
	set_cmt	(0X7D031F88,	"jumptable 7D031F10 case 6",	1);
	create_insn	(x=0X7D031F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031F92);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031F9E,	"jumptable 7D031F10 case 7",	1);
	create_insn	(0X7D031F9E);
	create_insn	(x=0X7D031FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FA4,	"outlen",	0);
	create_insn	(x=0X7D031FA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FA6,	"out",	0);
	set_cmt	(0X7D031FAE,	"jumptable 7D031F10 case 8",	1);
	create_insn	(0X7D031FAE);
	create_insn	(x=0X7D031FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FB4,	"outlen",	0);
	create_insn	(x=0X7D031FB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FB6,	"out",	0);
	set_cmt	(0X7D031FBE,	"jumptable 7D031F10 case 9",	1);
	create_insn	(0X7D031FBE);
	create_insn	(x=0X7D031FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FC4,	"outlen",	0);
	create_insn	(x=0X7D031FC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FC6,	"out",	0);
	set_cmt	(0X7D031FCE,	"jumptable 7D031F10 case 10",	1);
	create_insn	(0X7D031FCE);
	create_insn	(x=0X7D031FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FD4,	"outlen",	0);
	create_insn	(x=0X7D031FD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FD6,	"out",	0);
	set_cmt	(0X7D031FDE,	"jumptable 7D031F10 case 11",	1);
	create_insn	(x=0X7D031FDE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FE0,	"outlen",	0);
	create_insn	(x=0X7D031FE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FE4,	"out",	0);
	create_insn	(x=0X7D031FE6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FEE,	"jumptable 7D031F10 case 14",	1);
	create_insn	(0X7D031FEE);
	create_insn	(x=0X7D031FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D031FF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D031FFE,	"jumptable 7D031F10 case 15",	1);
	create_insn	(0X7D031FFE);
	create_insn	(x=0X7D032000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032002);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032004,	"outlen",	0);
	create_insn	(x=0X7D032004);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032006,	"out",	0);
	set_cmt	(0X7D03200E,	"jumptable 7D031F10 case 13",	1);
	create_insn	(0X7D03200E);
	create_insn	(x=0X7D032010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032012);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032014,	"outlen",	0);
	create_insn	(x=0X7D032014);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032016,	"type_of",	0);
	create_insn	(x=0X7D032016);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03201A,	"out",	0);
	create_insn	(x=0X7D032022);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032036);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03203E,	"jumptable 7D031DC8 default case",	1);
	create_insn	(0X7D03203E);
	set_name	(0X7D03203E,	"def_7D031F10");
	create_insn	(0X7D032046);
	set_name	(0X7D032046,	"der_length_sequence");
	set_cmt	(0X7D032062,	"nwords",	0);
	set_cmt	(0X7D032064,	"words",	0);
	set_cmt	(0X7D032070,	"switch 17 cases ",	0);
	create_insn	(0X7D032070);
	set_cmt	(0X7D032076,	"switch jump",	0);
	set_cmt	(0X7D03207A,	"jump table for switch statement",	0);
	create_byte	(0X7D03207A);
	set_name	(0X7D03207A,	"jpt_7D032076");
	create_byte	(0X7D03207B);
	create_byte	(0X7D03207C);
	create_byte	(0X7D03207D);
	create_byte	(0X7D03207E);
	create_byte	(0X7D03207F);
	create_byte	(0X7D032080);
	create_byte	(0X7D032081);
	create_byte	(0X7D032082);
	create_byte	(0X7D032083);
	create_byte	(0X7D032084);
	create_byte	(0X7D032085);
	create_byte	(0X7D032086);
	create_byte	(0X7D032087);
	create_byte	(0X7D032088);
	create_byte	(0X7D032089);
	create_byte	(0X7D03208A);
	set_cmt	(0X7D03208C,	"jumptable 7D032076 case 1",	1);
	create_insn	(x=0X7D03208C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032094,	"jumptable 7D032076 case 2",	1);
	create_insn	(x=0X7D032094);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03209C,	"jumptable 7D032076 case 3",	1);
	create_insn	(0X7D03209C);
	create_insn	(x=0X7D03209E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320A6,	"jumptable 7D032076 cases 4,16",	1);
	create_insn	(0X7D0320A6);
	set_cmt	(0X7D0320A8,	"outlen",	0);
	create_insn	(x=0X7D0320A8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320B0,	"jumptable 7D032076 case 5",	1);
	create_insn	(0X7D0320B0);
	set_cmt	(0X7D0320B2,	"outlen",	0);
	create_insn	(x=0X7D0320B2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320BA,	"jumptable 7D032076 case 6",	1);
	create_insn	(0X7D0320BA);
	set_cmt	(0X7D0320BE,	"jumptable 7D032076 case 7",	1);
	create_insn	(x=0X7D0320BE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320C6,	"jumptable 7D032076 case 8",	1);
	create_insn	(x=0X7D0320C6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320CE,	"jumptable 7D032076 case 17",	1);
	create_insn	(x=0X7D0320CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320D6,	"jumptable 7D032076 case 9",	1);
	create_insn	(x=0X7D0320D6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320DE,	"jumptable 7D032076 case 11",	1);
	create_insn	(x=0X7D0320DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320E6,	"jumptable 7D032076 case 10",	1);
	create_insn	(x=0X7D0320E6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0320EE,	"jumptable 7D032076 cases 13-15",	1);
	create_insn	(x=0X7D0320EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0320F6);
	op_stkvar	(x,	1);
	create_insn	(0X7D032100);
	create_insn	(0X7D032108);
	create_insn	(0X7D032112);
	set_cmt	(0X7D032120,	"jumptable 7D032076 default case",	1);
	create_insn	(0X7D032120);
	set_name	(0X7D032120,	"def_7D032076");
	create_insn	(0X7D032128);
	set_name	(0X7D032128,	"qsort_helper");
	set_cmt	(0X7D032132,	"m1",	0);
	set_cmt	(0X7D032134,	"m2",	0);
	set_cmt	(0X7D03213C,	"n",	0);
	create_insn	(0X7D032156);
	create_insn	(0X7D032162);
	create_insn	(0X7D032166);
	create_insn	(0X7D03216C);
	set_name	(0X7D03216C,	"der_decode_short_integer");
	create_insn	(x=0X7D032178);
	op_hex		(x,	1);
	create_insn	(0X7D03219A);
	create_insn	(0X7D0321A0);
	create_insn	(0X7D0321A4);
	create_insn	(0X7D0321A8);
	set_name	(0X7D0321A8,	"der_encode_short_integer");
	create_insn	(x=0X7D0321B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0321C0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0321CC);
	create_insn	(0X7D0321D2);
	create_insn	(0X7D0321DA);
	create_insn	(x=0X7D0321E8);
	op_hex		(x,	1);
	create_insn	(0X7D032200);
	create_insn	(0X7D032226);
	create_insn	(0X7D03222E);
	create_insn	(0X7D032234);
	set_name	(0X7D032234,	"der_length_short_integer");
	create_insn	(0X7D032244);
	create_insn	(x=0X7D032252);
	op_hex		(x,	1);
	create_insn	(0X7D03225E);
	create_insn	(0X7D032262);
	set_name	(0X7D032262,	"der_decode_utctime");
	create_insn	(0X7D032288);
	set_cmt	(0X7D03229E,	"v",	0);
	set_cmt	(0X7D0322B0,	"x",	0);
	create_insn	(x=0X7D0322B0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0322C0,	"x",	0);
	create_insn	(x=0X7D0322C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0322D2,	"x",	0);
	create_insn	(x=0X7D0322D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0322DC,	"x",	0);
	create_insn	(x=0X7D0322DC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0322EE,	"x",	0);
	create_insn	(x=0X7D0322EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0322F8,	"x",	0);
	create_insn	(x=0X7D0322F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03230A,	"x",	0);
	create_insn	(x=0X7D03230A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032314,	"x",	0);
	create_insn	(x=0X7D032314);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032326,	"x",	0);
	create_insn	(x=0X7D032326);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032330,	"x",	0);
	create_insn	(x=0X7D032330);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032342,	"x",	0);
	create_insn	(x=0X7D032342);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032356);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03236A,	"x",	0);
	set_cmt	(0X7D032374,	"x",	0);
	create_insn	(x=0X7D032374);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032388,	"x",	0);
	create_insn	(x=0X7D032388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032392);
	op_stkvar	(x,	1);
	create_insn	(0X7D032398);
	set_cmt	(0X7D03239E,	"x",	0);
	create_insn	(x=0X7D0323B0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0323BC);
	set_cmt	(0X7D0323CE,	"x",	0);
	create_insn	(x=0X7D0323CE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0323DA,	"x",	0);
	create_insn	(x=0X7D0323DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0323EE,	"x",	0);
	create_insn	(x=0X7D0323EE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0323F8,	"x",	0);
	create_insn	(x=0X7D0323F8);
	op_stkvar	(x,	1);
	create_insn	(0X7D03240E);
	create_insn	(0X7D032414);
	set_name	(0X7D032414,	"der_length_utctime");
	create_insn	(0X7D032426);
	create_insn	(0X7D03242E);
	create_insn	(0X7D032432);
	set_name	(0X7D032432,	"der_decode_utf8_string");
	create_insn	(0X7D03244C);
	create_insn	(x=0X7D03244E);
	op_hex		(x,	1);
	create_insn	(x=0X7D03245C);
	op_hex		(x,	1);
	create_insn	(0X7D032482);
	create_insn	(0X7D032486);
	create_insn	(x=0X7D03249C);
	op_hex		(x,	1);
	create_insn	(0X7D0324AE);
	create_insn	(x=0X7D0324D0);
	op_hex		(x,	1);
	create_insn	(x=0X7D0324DA);
	op_hex		(x,	1);
	create_insn	(0X7D0324E6);
	create_insn	(0X7D0324F4);
	create_insn	(0X7D0324FC);
	create_insn	(0X7D032504);
	create_insn	(0X7D03250A);
	set_name	(0X7D03250A,	"der_utf8_charsize");
	create_insn	(0X7D032520);
	create_insn	(0X7D032524);
	create_insn	(0X7D032528);
	set_name	(0X7D032528,	"der_decode_teletex_string");
	create_insn	(0X7D032538);
	create_insn	(x=0X7D032546);
	op_hex		(x,	1);
	create_insn	(x=0X7D032554);
	op_hex		(x,	1);
	create_insn	(0X7D03257A);
	create_insn	(0X7D03257E);
	create_insn	(0X7D03258E);
	set_cmt	(0X7D03259E,	"v",	0);
	create_insn	(0X7D0325B0);
	create_insn	(0X7D0325B8);
	create_insn	(0X7D0325BE);
	set_name	(0X7D0325BE,	"der_length_teletex_string");
	set_cmt	(0X7D0325D0,	"c",	0);
	create_insn	(0X7D0325DE);
	create_insn	(0X7D0325E6);
	create_insn	(0X7D0325EE);
	create_insn	(0X7D0325F8);
	create_insn	(0X7D032606);
	create_insn	(0X7D03260A);
	set_name	(0X7D03260A,	"pkcs_1_v1_5_decode");
	create_insn	(x=0X7D03260C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032614);
	op_hex		(x,	1);
	create_insn	(x=0X7D032622);
	op_stkvar	(x,	1);
	create_insn	(0X7D03263C);
	create_insn	(0X7D032648);
	create_insn	(0X7D032660);
	set_cmt	(0X7D03267A,	"num",	0);
	set_cmt	(0X7D03268C,	"source",	0);
	set_cmt	(0X7D03268E,	"destination",	0);
	create_insn	(x=0X7D03268E);
	op_stkvar	(x,	1);
	create_insn	(0X7D03269A);
	create_insn	(0X7D03269E);
	create_insn	(0X7D0326A2);
	create_insn	(0X7D0326A6);
	set_name	(0X7D0326A6,	"der_decode_bit_string");
	create_insn	(x=0X7D0326BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0326C8);
	op_hex		(x,	1);
	create_insn	(0X7D0326E8);
	create_insn	(0X7D0326EC);
	create_insn	(x=0X7D0326FA);
	op_hex		(x,	1);
	create_insn	(0X7D03270E);
	create_insn	(0X7D032714);
	create_insn	(x=0X7D03271C);
	op_hex		(x,	1);
	create_insn	(x=0X7D032724);
	op_hex		(x,	1);
	create_insn	(x=0X7D03272A);
	op_hex		(x,	1);
	create_insn	(0X7D03273A);
	create_insn	(0X7D032740);
	create_insn	(0X7D032744);
	create_insn	(0X7D032748);
	set_name	(0X7D032748,	"der_encode_bit_string");
	set_cmt	(0X7D032760,	"nbits",	0);
	set_cmt	(0X7D032762,	"outlen",	0);
	create_insn	(x=0X7D032762);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03276C);
	op_stkvar	(x,	1);
	create_insn	(0X7D03277A);
	create_insn	(x=0X7D03277C);
	op_hex		(x,	1);
	create_insn	(0X7D032796);
	create_insn	(0X7D0327A2);
	create_insn	(0X7D0327B6);
	create_insn	(x=0X7D0327BC);
	op_hex		(x,	1);
	create_insn	(x=0X7D0327D4);
	op_hex		(x,	1);
	create_insn	(x=0X7D0327E4);
	op_hex		(x,	1);
	create_insn	(0X7D0327F8);
	create_insn	(0X7D032806);
	create_insn	(0X7D03280E);
	set_name	(0X7D03280E,	"der_length_bit_string");
	create_insn	(x=0X7D032810);
	op_hex		(x,	1);
	create_insn	(0X7D032826);
	create_insn	(0X7D03282E);
	create_insn	(0X7D03283C);
	create_insn	(0X7D032840);
	set_name	(0X7D032840,	"der_decode_raw_bit_string");
	create_insn	(x=0X7D032856);
	op_hex		(x,	1);
	create_insn	(x=0X7D032864);
	op_hex		(x,	1);
	create_insn	(0X7D032884);
	create_insn	(0X7D032888);
	create_insn	(x=0X7D032896);
	op_hex		(x,	1);
	create_insn	(0X7D0328AE);
	create_insn	(0X7D0328B6);
	create_insn	(x=0X7D0328BA);
	op_hex		(x,	1);
	create_insn	(x=0X7D0328D4);
	op_hex		(x,	1);
	create_insn	(0X7D0328EC);
	create_insn	(0X7D0328F2);
	create_insn	(0X7D0328F8);
	set_name	(0X7D0328F8,	"der_encode_raw_bit_string");
	set_cmt	(0X7D032910,	"nbits",	0);
	set_cmt	(0X7D032912,	"outlen",	0);
	create_insn	(x=0X7D032912);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03291C);
	op_stkvar	(x,	1);
	create_insn	(0X7D03292A);
	create_insn	(x=0X7D03292C);
	op_hex		(x,	1);
	create_insn	(0X7D032946);
	create_insn	(0X7D032952);
	create_insn	(0X7D032966);
	create_insn	(x=0X7D03296C);
	op_hex		(x,	1);
	create_insn	(x=0X7D032984);
	op_hex		(x,	1);
	create_insn	(x=0X7D0329AA);
	op_hex		(x,	1);
	create_insn	(0X7D0329C0);
	create_insn	(0X7D0329CE);
	create_insn	(0X7D0329D6);
	set_name	(0X7D0329D6,	"der_decode_boolean");
	create_insn	(0X7D032A02);
	create_insn	(0X7D032A06);
	set_name	(0X7D032A06,	"der_encode_boolean");
	create_insn	(0X7D032A1A);
	create_insn	(0X7D032A2E);
	create_insn	(0X7D032A32);
	set_name	(0X7D032A32,	"der_length_boolean");
	create_insn	(0X7D032A3C);
	create_insn	(0X7D032A40);
	set_name	(0X7D032A40,	"der_decode_choice");
	create_insn	(0X7D032A66);
	create_insn	(0X7D032A7A);
	create_insn	(0X7D032A88);
	set_cmt	(0X7D032A8C,	"outlen",	0);
	set_cmt	(0X7D032A8E,	"switch 17 cases ",	0);
	create_insn	(x=0X7D032A90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032A98,	"switch jump",	0);
	set_cmt	(0X7D032A9C,	"jump table for switch statement",	0);
	create_word	(0X7D032A9C);
	set_name	(0X7D032A9C,	"jpt_7D032A98");
	create_word	(0X7D032A9E);
	create_word	(0X7D032AA0);
	create_word	(0X7D032AA2);
	create_word	(0X7D032AA4);
	create_word	(0X7D032AA6);
	create_word	(0X7D032AA8);
	create_word	(0X7D032AAA);
	create_word	(0X7D032AAC);
	create_word	(0X7D032AAE);
	create_word	(0X7D032AB0);
	create_word	(0X7D032AB2);
	create_word	(0X7D032AB4);
	create_word	(0X7D032AB6);
	create_word	(0X7D032AB8);
	create_word	(0X7D032ABA);
	create_word	(0X7D032ABC);
	set_cmt	(0X7D032ABE,	"jumptable 7D032A98 case 1",	1);
	create_insn	(0X7D032ABE);
	set_cmt	(0X7D032AC0,	"inlen",	0);
	set_cmt	(0X7D032AC2,	"out",	0);
	set_cmt	(0X7D032ACE,	"outlen",	0);
	create_insn	(x=0X7D032ACE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032AD6,	"jumptable 7D032A98 case 2",	1);
	create_insn	(0X7D032AD6);
	set_cmt	(0X7D032AD8,	"inlen",	0);
	set_cmt	(0X7D032ADA,	"num",	0);
	set_cmt	(0X7D032AE6,	"num",	0);
	set_cmt	(0X7D032AE8,	"outlen",	0);
	create_insn	(x=0X7D032AE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032AF0,	"jumptable 7D032A98 case 3",	1);
	create_insn	(0X7D032AF0);
	set_cmt	(0X7D032AF2,	"inlen",	0);
	set_cmt	(0X7D032AF4,	"num",	0);
	create_insn	(x=0X7D032B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032B02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B0A,	"jumptable 7D032A98 case 4",	1);
	create_insn	(0X7D032B0A);
	set_cmt	(0X7D032B0C,	"outlen",	0);
	create_insn	(x=0X7D032B0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B0E,	"inlen",	0);
	set_cmt	(0X7D032B10,	"out",	0);
	set_cmt	(0X7D032B18,	"jumptable 7D032A98 case 16",	1);
	create_insn	(0X7D032B18);
	set_cmt	(0X7D032B1A,	"outlen",	0);
	create_insn	(x=0X7D032B1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B1C,	"inlen",	0);
	set_cmt	(0X7D032B1E,	"out",	0);
	set_cmt	(0X7D032B2A,	"nbits",	0);
	create_insn	(x=0X7D032B2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B2C,	"outlen",	0);
	create_insn	(x=0X7D032B2C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B34,	"jumptable 7D032A98 case 5",	1);
	create_insn	(0X7D032B34);
	set_cmt	(0X7D032B36,	"outlen",	0);
	create_insn	(x=0X7D032B36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B38,	"inlen",	0);
	set_cmt	(0X7D032B3A,	"out",	0);
	set_cmt	(0X7D032B44,	"noctets",	0);
	create_insn	(x=0X7D032B44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B46,	"outlen",	0);
	create_insn	(x=0X7D032B46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B4E,	"jumptable 7D032A98 case 6",	1);
	create_insn	(0X7D032B4E);
	set_cmt	(0X7D032B6A,	"jumptable 7D032A98 case 7",	1);
	create_insn	(0X7D032B6A);
	set_cmt	(0X7D032B6C,	"outlen",	0);
	create_insn	(x=0X7D032B6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B6E,	"inlen",	0);
	set_cmt	(0X7D032B70,	"words",	0);
	set_cmt	(0X7D032B7A,	"words",	0);
	set_cmt	(0X7D032B7C,	"outlen",	0);
	create_insn	(x=0X7D032B7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B7E,	"nwords",	0);
	create_insn	(x=0X7D032B7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B86,	"jumptable 7D032A98 case 17",	1);
	create_insn	(0X7D032B86);
	set_cmt	(0X7D032B88,	"outlen",	0);
	create_insn	(x=0X7D032B88);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B8A,	"inlen",	0);
	set_cmt	(0X7D032B8C,	"out",	0);
	set_cmt	(0X7D032B96,	"octets",	0);
	set_cmt	(0X7D032B98,	"outlen",	0);
	create_insn	(x=0X7D032B98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032B9A,	"noctets",	0);
	create_insn	(x=0X7D032B9A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BA2,	"jumptable 7D032A98 case 8",	1);
	create_insn	(0X7D032BA2);
	set_cmt	(0X7D032BA4,	"outlen",	0);
	create_insn	(x=0X7D032BA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BA6,	"inlen",	0);
	set_cmt	(0X7D032BA8,	"out",	0);
	set_cmt	(0X7D032BB2,	"octets",	0);
	set_cmt	(0X7D032BB4,	"outlen",	0);
	create_insn	(x=0X7D032BB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BB6,	"noctets",	0);
	create_insn	(x=0X7D032BB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BBE,	"jumptable 7D032A98 case 9",	1);
	create_insn	(0X7D032BBE);
	set_cmt	(0X7D032BC0,	"outlen",	0);
	create_insn	(x=0X7D032BC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BC2,	"inlen",	0);
	set_cmt	(0X7D032BC4,	"out",	0);
	create_insn	(x=0X7D032BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032BD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BDA,	"jumptable 7D032A98 case 10",	1);
	create_insn	(0X7D032BDA);
	set_cmt	(0X7D032BDC,	"outlen",	0);
	create_insn	(x=0X7D032BDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BDE,	"inlen",	0);
	set_cmt	(0X7D032BE0,	"out",	0);
	set_cmt	(0X7D032BE8,	"in",	0);
	set_cmt	(0X7D032BEA,	"outlen",	0);
	create_insn	(x=0X7D032BEA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BEC,	"noctets",	0);
	create_insn	(x=0X7D032BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032BF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032BFE,	"jumptable 7D032A98 case 11",	1);
	create_insn	(0X7D032BFE);
	set_cmt	(0X7D032C00,	"inlen",	0);
	create_insn	(x=0X7D032C00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032C02,	"in",	0);
	set_cmt	(0X7D032C04,	"out",	0);
	create_insn	(x=0X7D032C06);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032C0E,	"jumptable 7D032A98 cases 13-15",	1);
	create_insn	(x=0X7D032C0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032C12,	"in",	0);
	set_cmt	(0X7D032C14,	"inlen",	0);
	set_cmt	(0X7D032C16,	"list",	0);
	set_cmt	(0X7D032C1E,	"list",	0);
	set_cmt	(0X7D032C20,	"outlen",	0);
	create_insn	(x=0X7D032C20);
	op_stkvar	(x,	1);
	set_cmt	(0X7D032C22,	"inlen",	0);
	create_insn	(x=0X7D032C22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032C2E);
	op_stkvar	(x,	1);
	create_insn	(0X7D032C34);
	set_cmt	(0X7D032C3C,	"jumptable 7D032A98 default case",	1);
	create_insn	(0X7D032C3C);
	set_name	(0X7D032C3C,	"def_7D032A98");
	create_insn	(0X7D032C44);
	set_name	(0X7D032C44,	"der_decode_ia5_string");
	create_insn	(0X7D032C54);
	create_insn	(x=0X7D032C62);
	op_hex		(x,	1);
	create_insn	(x=0X7D032C70);
	op_hex		(x,	1);
	create_insn	(0X7D032C96);
	create_insn	(0X7D032C9A);
	create_insn	(0X7D032CAA);
	set_cmt	(0X7D032CBA,	"v",	0);
	create_insn	(0X7D032CCC);
	create_insn	(0X7D032CD4);
	create_insn	(0X7D032CDA);
	set_name	(0X7D032CDA,	"der_encode_ia5_string");
	set_cmt	(0X7D032CE8,	"octets",	0);
	create_insn	(x=0X7D032CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D032CEC);
	set_cmt	(0X7D032CF4,	"outlen",	0);
	create_insn	(x=0X7D032CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032CFC);
	op_stkvar	(x,	1);
	create_insn	(0X7D032D0E);
	create_insn	(0X7D032D22);
	create_insn	(0X7D032D30);
	create_insn	(0X7D032D44);
	create_insn	(0X7D032D5C);
	set_cmt	(0X7D032D60,	"c",	0);
	create_insn	(0X7D032D6E);
	create_insn	(0X7D032D7C);
	set_name	(0X7D032D7C,	"der_length_ia5_string");
	set_cmt	(0X7D032D8E,	"c",	0);
	create_insn	(0X7D032D9C);
	create_insn	(0X7D032DA4);
	create_insn	(0X7D032DAC);
	create_insn	(0X7D032DB6);
	create_insn	(0X7D032DC4);
	create_insn	(0X7D032DC8);
	set_name	(0X7D032DC8,	"der_decode_object_identifier");
	create_insn	(0X7D032DE2);
	create_insn	(x=0X7D032DE4);
	op_hex		(x,	1);
	create_insn	(0X7D032DF6);
	create_insn	(x=0X7D032E02);
	op_hex		(x,	1);
	create_insn	(0X7D032E1A);
	create_insn	(0X7D032E26);
	create_insn	(0X7D032E2C);
	create_insn	(0X7D032E32);
	create_insn	(x=0X7D032E42);
	op_hex		(x,	1);
	create_insn	(x=0X7D032E46);
	op_hex		(x,	1);
	create_insn	(0X7D032E6A);
	create_insn	(0X7D032E80);
	set_name	(0X7D032E80,	"der_encode_object_identifier");
	set_cmt	(0X7D032E90,	"words",	0);
	create_insn	(x=0X7D032E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D032E94);
	set_cmt	(0X7D032E9C,	"outlen",	0);
	create_insn	(x=0X7D032E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032EA8);
	op_stkvar	(x,	1);
	create_insn	(0X7D032EBA);
	set_cmt	(0X7D032ED6,	"x",	0);
	create_insn	(x=0X7D032ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032EEC);
	op_stkvar	(x,	1);
	create_insn	(0X7D032F0C);
	create_insn	(x=0X7D032F18);
	op_stkvar	(x,	1);
	create_insn	(0X7D032F1E);
	create_insn	(x=0X7D032F28);
	op_stkvar	(x,	1);
	create_insn	(0X7D032F2E);
	create_insn	(x=0X7D032F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032F52);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D032F62);
	op_hex		(x,	1);
	create_insn	(0X7D032F7C);
	create_insn	(0X7D032F92);
	create_insn	(0X7D032F96);
	create_insn	(0X7D032FAC);
	create_insn	(0X7D032FB8);
	set_name	(0X7D032FB8,	"der_object_identifier_bits");
	create_insn	(0X7D032FC2);
	create_insn	(0X7D032FC6);
	set_name	(0X7D032FC6,	"der_length_object_identifier");
	set_cmt	(0X7D033000,	"x",	0);
	create_insn	(0X7D033040);
	create_insn	(0X7D033048);
	create_insn	(0X7D03305A);
	create_insn	(0X7D033060);
	set_name	(0X7D033060,	"der_decode_octet_string");
	create_insn	(x=0X7D03306E);
	op_hex		(x,	1);
	create_insn	(x=0X7D03307C);
	op_hex		(x,	1);
	create_insn	(0X7D0330A2);
	create_insn	(0X7D0330A6);
	create_insn	(0X7D0330B4);
	create_insn	(0X7D0330CA);
	create_insn	(0X7D0330D0);
	create_insn	(0X7D0330D4);
	create_insn	(0X7D0330D8);
	set_name	(0X7D0330D8,	"der_encode_octet_string");
	create_insn	(0X7D0330E8);
	set_cmt	(0X7D0330F0,	"noctets",	0);
	set_cmt	(0X7D0330F2,	"outlen",	0);
	create_insn	(x=0X7D0330F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0330FA);
	op_stkvar	(x,	1);
	create_insn	(0X7D033108);
	create_insn	(0X7D03311C);
	create_insn	(0X7D03312A);
	create_insn	(0X7D03313C);
	create_insn	(0X7D033154);
	create_insn	(0X7D033160);
	create_insn	(0X7D03316A);
	set_name	(0X7D03316A,	"der_length_octet_string");
	create_insn	(0X7D033174);
	create_insn	(0X7D03317C);
	create_insn	(0X7D033186);
	create_insn	(0X7D033194);
	create_insn	(0X7D033198);
	set_name	(0X7D033198,	"der_decode_printable_string");
	create_insn	(0X7D0331A8);
	create_insn	(x=0X7D0331B6);
	op_hex		(x,	1);
	create_insn	(x=0X7D0331C4);
	op_hex		(x,	1);
	create_insn	(0X7D0331EA);
	create_insn	(0X7D0331EE);
	create_insn	(0X7D0331FE);
	set_cmt	(0X7D03320E,	"v",	0);
	create_insn	(0X7D033220);
	create_insn	(0X7D033228);
	create_insn	(0X7D03322E);
	set_name	(0X7D03322E,	"der_encode_printable_string");
	create_insn	(0X7D033240);
	create_insn	(x=0X7D033248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033250);
	op_stkvar	(x,	1);
	create_insn	(0X7D033262);
	create_insn	(0X7D033276);
	create_insn	(0X7D033284);
	create_insn	(0X7D033298);
	create_insn	(0X7D0332B0);
	set_cmt	(0X7D0332B4,	"c",	0);
	create_insn	(0X7D0332C2);
	create_insn	(0X7D0332D0);
	set_name	(0X7D0332D0,	"der_length_printable_string");
	set_cmt	(0X7D0332E2,	"c",	0);
	create_insn	(0X7D0332F0);
	create_insn	(0X7D0332F8);
	create_insn	(0X7D033300);
	create_insn	(0X7D03330A);
	create_insn	(0X7D033318);
	create_insn	(0X7D03331C);
	set_name	(0X7D03331C,	"__mpa_set_unused_digits_to_zero");
	create_insn	(0X7D033336);
	set_name	(0X7D033336,	"mpa_wipe");
	create_insn	(0X7D03334C);
	set_name	(0X7D03334C,	"mpa_copy");
	set_cmt	(0X7D033358,	"destination",	0);
	set_cmt	(0X7D03335A,	"source",	0);
	create_insn	(0X7D03336E);
	set_name	(0X7D03336E,	"mpa_highest_bit_index");
	create_insn	(0X7D033392);
	create_insn	(0X7D033398);
	set_name	(0X7D033398,	"mpa_get_bit");
	create_insn	(x=0X7D0333AA);
	op_hex		(x,	1);
	create_insn	(0X7D0333C0);
	create_insn	(0X7D0333C4);
	set_name	(0X7D0333C4,	"mpa_parity");
	create_insn	(x=0X7D0333C6);
	op_hex		(x,	1);
	create_insn	(0X7D0333CC);
	set_name	(0X7D0333CC,	"__mpa_montgomery_mul_add");
	create_insn	(0X7D033408);
	create_insn	(0X7D03341C);
	create_insn	(0X7D03342C);
	set_name	(0X7D03342C,	"__mpa_montgomery_sub_ack");
	create_insn	(0X7D03345C);
	create_insn	(0X7D033470);
	create_insn	(0X7D033488);
	create_insn	(0X7D03348A);
	set_name	(0X7D03348A,	"__mpa_montgomery_mul");
	create_insn	(x=0X7D033494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03349E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0334CC);
	op_stkvar	(x,	1);
	create_insn	(0X7D033506);
	set_cmt	(0X7D033512,	"op1",	0);
	create_insn	(0X7D033512);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_9(void) {
        auto x;
#define id x

	set_cmt	(0X7D033514,	"op2",	0);
	create_insn	(0X7D03352C);
	create_insn	(0X7D033532);
	set_name	(0X7D033532,	"mpa_montgomery_mul");
	set_cmt	(0X7D03353A,	"var",	0);
	create_insn	(x=0X7D03353A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03353C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033540,	"pool",	0);
	create_insn	(x=0X7D03354A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033554);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03355A,	"dest",	0);
	set_cmt	(0X7D03355C,	"src",	0);
	create_insn	(x=0X7D03355C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033562,	"pool",	0);
	set_cmt	(0X7D033564,	"var",	0);
	create_insn	(x=0X7D033564);
	op_stkvar	(x,	1);
	create_insn	(0X7D033570);
	set_name	(0X7D033570,	"mpa_set_S32");
	create_insn	(0X7D033580);
	create_insn	(0X7D03358C);
	set_name	(0X7D03358C,	"mpa_set_word");
	create_insn	(0X7D033598);
	set_name	(0X7D033598,	"mpa_get_word");
	create_insn	(0X7D0335A0);
	create_insn	(0X7D0335A4);
	set_name	(0X7D0335A4,	"__mpa_soft_div");
	create_insn	(0X7D0335CE);
	create_insn	(0X7D0335FA);
	create_insn	(0X7D033608);
	set_name	(0X7D033608,	"__mpa_div_q_r_internal_word");
	set_cmt	(0X7D03362E,	"dest",	0);
	set_cmt	(0X7D03363E,	"dest",	0);
	create_insn	(0X7D03363E);
	set_cmt	(0X7D033640,	"src",	0);
	set_cmt	(0X7D033648,	"dest",	0);
	set_cmt	(0X7D03364A,	"src",	0);
	set_cmt	(0X7D033656,	"num",	0);
	set_cmt	(0X7D03366C,	"num",	0);
	set_cmt	(0X7D033678,	"den_in_rem",	0);
	set_cmt	(0X7D03367A,	"den_in_rem",	0);
	create_insn	(x=0X7D03367A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03367C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03368C);
	op_stkvar	(x,	1);
	create_insn	(0X7D0336A0);
	create_insn	(0X7D0336CC);
	set_name	(0X7D0336CC,	"__mpa_div_q_r");
	create_insn	(x=0X7D0336DA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0336DE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0336EA);
	set_cmt	(0X7D033714,	"op1",	0);
	create_insn	(x=0X7D033714);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033716,	"op2",	0);
	create_insn	(x=0X7D033718);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033724,	"dest",	0);
	set_cmt	(0X7D033726,	"src",	0);
	set_cmt	(0X7D03372C,	"dest",	0);
	set_cmt	(0X7D03372E,	"src",	0);
	create_insn	(0X7D033736);
	set_cmt	(0X7D033748,	"pool",	0);
	set_cmt	(0X7D03374A,	"var",	0);
	create_insn	(x=0X7D03374A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033750,	"pool",	0);
	set_cmt	(0X7D033752,	"var",	0);
	create_insn	(x=0X7D033752);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033758,	"src",	0);
	set_cmt	(0X7D03375A,	"dest",	0);
	create_insn	(x=0X7D03375A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033762,	"pool",	0);
	set_cmt	(0X7D033764,	"var",	0);
	create_insn	(x=0X7D033764);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03376A,	"dest",	0);
	create_insn	(x=0X7D03376A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03376C,	"src",	0);
	create_insn	(x=0X7D03376C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033772,	"dest",	0);
	create_insn	(x=0X7D033772);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03379E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337AA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337AE,	"src",	0);
	set_cmt	(0X7D0337B0,	"steps",	0);
	set_cmt	(0X7D0337B6,	"dest",	0);
	create_insn	(x=0X7D0337B6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337B8,	"steps",	0);
	create_insn	(x=0X7D0337B8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337BA,	"src",	0);
	create_insn	(x=0X7D0337C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337C2,	"var",	0);
	create_insn	(x=0X7D0337C6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337D2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337D8,	"op",	0);
	create_insn	(x=0X7D0337D8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337DA,	"q",	0);
	set_cmt	(0X7D0337E0,	"op2",	0);
	create_insn	(x=0X7D0337E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0337E2,	"dest",	0);
	create_insn	(x=0X7D0337E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0337FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03382A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033866,	"op1",	0);
	set_cmt	(0X7D033868,	"pool",	0);
	create_insn	(x=0X7D03386E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03387E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033892);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0338A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0338BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0338BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0338CA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0338E6);
	set_cmt	(0X7D0338F0,	"num",	0);
	set_cmt	(0X7D0338FE,	"num",	0);
	create_insn	(x=0X7D033902);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03390C,	"den_in_rem",	0);
	set_cmt	(0X7D033910,	"den_in_rem",	0);
	create_insn	(x=0X7D03391A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033936);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03393C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03393E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033940,	"a",	0);
	set_cmt	(0X7D033946,	"b",	0);
	set_cmt	(0X7D03394A,	"p",	0);
	create_insn	(x=0X7D03394A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03394C,	"carry",	0);
	create_insn	(x=0X7D03394C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033952);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033970);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033972,	"a",	0);
	set_cmt	(0X7D033986,	"b",	0);
	set_cmt	(0X7D03398A,	"p",	0);
	create_insn	(x=0X7D03398A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03398C,	"carry",	0);
	create_insn	(x=0X7D03398C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033992,	"a",	0);
	create_insn	(x=0X7D033992);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033994,	"sum",	0);
	create_insn	(x=0X7D033994);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033996,	"b",	0);
	create_insn	(x=0X7D033996);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033998,	"carry",	0);
	create_insn	(x=0X7D033998);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0339A0,	"sum",	0);
	create_insn	(x=0X7D0339A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0339A4,	"carry",	0);
	create_insn	(x=0X7D0339A4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0339A6,	"a",	0);
	create_insn	(x=0X7D0339A6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0339A8,	"b",	0);
	create_insn	(x=0X7D0339A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0339EA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A08,	"op",	0);
	create_insn	(x=0X7D033A08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A0A,	"q",	0);
	create_insn	(x=0X7D033A10);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A12,	"op1",	0);
	create_insn	(x=0X7D033A12);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A18,	"pool",	0);
	set_cmt	(0X7D033A1A,	"dest",	0);
	create_insn	(x=0X7D033A1A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A1C,	"op2",	0);
	set_cmt	(0X7D033A24,	"dest",	0);
	create_insn	(x=0X7D033A24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A26,	"pool",	0);
	set_cmt	(0X7D033A28,	"op1",	0);
	set_cmt	(0X7D033A2A,	"op2",	0);
	create_insn	(x=0X7D033A2A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A30,	"dest",	0);
	create_insn	(x=0X7D033A30);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A38,	"pool",	0);
	set_cmt	(0X7D033A3A,	"op1",	0);
	set_cmt	(0X7D033A3C,	"op2",	0);
	create_insn	(x=0X7D033A3C);
	op_stkvar	(x,	1);
	create_insn	(0X7D033A58);
	set_cmt	(0X7D033A6A,	"dest",	0);
	create_insn	(x=0X7D033A6A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A72,	"steps",	0);
	create_insn	(x=0X7D033A72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A74,	"src",	0);
	set_cmt	(0X7D033A7A,	"dest",	0);
	set_cmt	(0X7D033A7C,	"src",	0);
	create_insn	(x=0X7D033A7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A82,	"pool",	0);
	set_cmt	(0X7D033A84,	"var",	0);
	create_insn	(x=0X7D033A84);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A8A,	"pool",	0);
	set_cmt	(0X7D033A8C,	"var",	0);
	create_insn	(x=0X7D033A8C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A92,	"pool",	0);
	set_cmt	(0X7D033A94,	"var",	0);
	create_insn	(x=0X7D033A94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033A9C,	"q",	0);
	create_insn	(0X7D033A9C);
	set_cmt	(0X7D033A9E,	"r",	0);
	set_cmt	(0X7D033AA0,	"op1",	0);
	create_insn	(x=0X7D033AA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033AA2,	"op2",	0);
	set_cmt	(0X7D033AAA,	"dest",	0);
	create_insn	(0X7D033AAA);
	set_cmt	(0X7D033AAC,	"src",	0);
	set_cmt	(0X7D033AB2,	"dest",	0);
	set_cmt	(0X7D033AB4,	"src",	0);
	create_insn	(x=0X7D033AB4);
	op_stkvar	(x,	1);
	create_insn	(0X7D033ABC);
	create_insn	(x=0X7D033ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033ACC);
	op_stkvar	(x,	1);
	create_insn	(0X7D033AF6);
	create_insn	(0X7D033AFC);
	create_insn	(0X7D033B04);
	create_insn	(0X7D033B0C);
	create_insn	(0X7D033B12);
	set_name	(0X7D033B12,	"mpa_div");
	create_insn	(x=0X7D033B18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B2A,	"pool",	0);
	set_cmt	(0X7D033B2C,	"var",	0);
	create_insn	(x=0X7D033B2C);
	op_stkvar	(x,	1);
	create_insn	(0X7D033B38);
	create_insn	(x=0X7D033B3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B48,	"pool",	0);
	set_cmt	(0X7D033B4A,	"var",	0);
	create_insn	(x=0X7D033B4A);
	op_stkvar	(x,	1);
	create_insn	(0X7D033B56);
	create_insn	(x=0X7D033B5A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B5C,	"pool",	0);
	create_insn	(x=0X7D033B5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B5E,	"q",	0);
	create_insn	(x=0X7D033B5E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B60,	"r",	0);
	create_insn	(x=0X7D033B60);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B62,	"op1",	0);
	set_cmt	(0X7D033B64,	"op2",	0);
	set_cmt	(0X7D033B6C,	"dest",	0);
	set_cmt	(0X7D033B6E,	"src",	0);
	create_insn	(x=0X7D033B6E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B7A,	"pool",	0);
	set_cmt	(0X7D033B7C,	"var",	0);
	create_insn	(x=0X7D033B7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B84,	"dest",	0);
	set_cmt	(0X7D033B86,	"src",	0);
	create_insn	(x=0X7D033B86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033B92,	"pool",	0);
	set_cmt	(0X7D033B94,	"var",	0);
	create_insn	(x=0X7D033B94);
	op_stkvar	(x,	1);
	create_insn	(0X7D033BA0);
	set_name	(0X7D033BA0,	"__mpa_divby2");
	create_insn	(0X7D033BE0);
	create_insn	(0X7D033BEE);
	set_name	(0X7D033BEE,	"__mpa_gcd");
	set_cmt	(0X7D033BF6,	"var",	0);
	create_insn	(x=0X7D033BF6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033BF8,	"pool",	0);
	set_cmt	(0X7D033C02,	"src",	0);
	set_cmt	(0X7D033C04,	"dest",	0);
	create_insn	(x=0X7D033C04);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C0C,	"pool",	0);
	set_cmt	(0X7D033C0E,	"var",	0);
	create_insn	(x=0X7D033C0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C14,	"dest",	0);
	create_insn	(x=0X7D033C14);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C16,	"src",	0);
	set_cmt	(0X7D033C1C,	"src",	0);
	create_insn	(x=0X7D033C1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C24,	"pool",	0);
	set_cmt	(0X7D033C26,	"var",	0);
	create_insn	(x=0X7D033C26);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C2E,	"src",	0);
	create_insn	(x=0X7D033C2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C38,	"op",	0);
	create_insn	(x=0X7D033C38);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C40,	"op",	0);
	create_insn	(x=0X7D033C40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C48,	"op1",	0);
	create_insn	(x=0X7D033C48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C4A,	"pool",	0);
	set_cmt	(0X7D033C4C,	"dest",	0);
	create_insn	(x=0X7D033C4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C4E,	"op2",	0);
	create_insn	(x=0X7D033C4E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C54,	"op",	0);
	create_insn	(x=0X7D033C54);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C64,	"op2",	0);
	create_insn	(x=0X7D033C64);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C66,	"op1",	0);
	create_insn	(x=0X7D033C66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C6E,	"src",	0);
	create_insn	(x=0X7D033C6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033C72);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C74,	"dest",	0);
	create_insn	(x=0X7D033C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033C7A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C80,	"src",	0);
	create_insn	(x=0X7D033C80);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C88,	"op",	0);
	create_insn	(x=0X7D033C88);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C90,	"src",	0);
	create_insn	(x=0X7D033C90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033C9A,	"op",	0);
	create_insn	(x=0X7D033C9A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033CA2,	"steps",	0);
	create_insn	(0X7D033CA2);
	set_cmt	(0X7D033CA4,	"dest",	0);
	set_cmt	(0X7D033CA6,	"src",	0);
	create_insn	(x=0X7D033CA6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033CAC,	"pool",	0);
	set_cmt	(0X7D033CAE,	"var",	0);
	create_insn	(x=0X7D033CAE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033CB4,	"pool",	0);
	set_cmt	(0X7D033CB6,	"var",	0);
	create_insn	(x=0X7D033CB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033CBC,	"pool",	0);
	set_cmt	(0X7D033CBE,	"var",	0);
	create_insn	(x=0X7D033CBE);
	op_stkvar	(x,	1);
	create_insn	(0X7D033CC8);
	set_name	(0X7D033CC8,	"__mpa_egcd");
	create_insn	(x=0X7D033CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033CDE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033CE4,	"dest",	0);
	set_cmt	(0X7D033CE6,	"src",	0);
	set_cmt	(0X7D033CEE,	"dest",	0);
	set_cmt	(0X7D033CF0,	"src",	0);
	set_cmt	(0X7D033CF6,	"dest",	0);
	set_cmt	(0X7D033CF8,	"src",	0);
	set_cmt	(0X7D033D00,	"pool",	0);
	create_insn	(0X7D033D00);
	set_cmt	(0X7D033D02,	"var",	0);
	create_insn	(x=0X7D033D02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D08,	"src",	0);
	set_cmt	(0X7D033D0A,	"dest",	0);
	create_insn	(x=0X7D033D0A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D14,	"pool",	0);
	set_cmt	(0X7D033D16,	"var",	0);
	create_insn	(x=0X7D033D16);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D1C,	"dest",	0);
	create_insn	(x=0X7D033D1C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D1E,	"src",	0);
	set_cmt	(0X7D033D24,	"src",	0);
	create_insn	(x=0X7D033D24);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D2C,	"pool",	0);
	set_cmt	(0X7D033D2E,	"var",	0);
	create_insn	(x=0X7D033D2E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D34,	"dest",	0);
	create_insn	(x=0X7D033D34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D36,	"src",	0);
	create_insn	(x=0X7D033D36);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D3C,	"dest",	0);
	set_cmt	(0X7D033D3E,	"src",	0);
	create_insn	(x=0X7D033D3E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D44,	"pool",	0);
	set_cmt	(0X7D033D46,	"var",	0);
	create_insn	(x=0X7D033D46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D4C,	"dest",	0);
	create_insn	(x=0X7D033D4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D4E,	"src",	0);
	set_cmt	(0X7D033D54,	"pool",	0);
	set_cmt	(0X7D033D56,	"var",	0);
	create_insn	(x=0X7D033D56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D5C,	"dest",	0);
	create_insn	(x=0X7D033D5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D5E,	"src",	0);
	set_cmt	(0X7D033D64,	"pool",	0);
	set_cmt	(0X7D033D66,	"var",	0);
	create_insn	(x=0X7D033D66);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D6C,	"dest",	0);
	create_insn	(x=0X7D033D6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D6E,	"src",	0);
	set_cmt	(0X7D033D74,	"pool",	0);
	set_cmt	(0X7D033D76,	"var",	0);
	create_insn	(x=0X7D033D76);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D7C,	"dest",	0);
	create_insn	(x=0X7D033D7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D7E,	"src",	0);
	set_cmt	(0X7D033D86,	"src",	0);
	create_insn	(x=0X7D033D86);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D90,	"op",	0);
	create_insn	(x=0X7D033D90);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033D9A,	"op",	0);
	create_insn	(x=0X7D033D9A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DA2,	"op",	0);
	create_insn	(x=0X7D033DA2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DA8,	"src",	0);
	create_insn	(x=0X7D033DA8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DB2,	"dest",	0);
	create_insn	(x=0X7D033DB2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DB4,	"op2",	0);
	create_insn	(x=0X7D033DB4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DB6,	"op1",	0);
	set_cmt	(0X7D033DB8,	"pool",	0);
	set_cmt	(0X7D033DBE,	"dest",	0);
	create_insn	(x=0X7D033DBE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DC0,	"op2",	0);
	create_insn	(x=0X7D033DC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DC2,	"op1",	0);
	set_cmt	(0X7D033DC4,	"pool",	0);
	set_cmt	(0X7D033DCA,	"op",	0);
	create_insn	(x=0X7D033DCA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DD0,	"op",	0);
	create_insn	(x=0X7D033DD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DD6,	"src",	0);
	create_insn	(x=0X7D033DD6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DE0,	"src",	0);
	set_cmt	(0X7D033DE8,	"op1",	0);
	create_insn	(x=0X7D033DE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DEA,	"op2",	0);
	set_cmt	(0X7D033DF4,	"dest",	0);
	create_insn	(x=0X7D033DF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033DF6,	"op2",	0);
	set_cmt	(0X7D033DF8,	"op1",	0);
	set_cmt	(0X7D033DFA,	"pool",	0);
	set_cmt	(0X7D033E00,	"dest",	0);
	create_insn	(x=0X7D033E00);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E02,	"op2",	0);
	create_insn	(x=0X7D033E02);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E04,	"op1",	0);
	set_cmt	(0X7D033E06,	"pool",	0);
	set_cmt	(0X7D033E0C,	"dest",	0);
	create_insn	(x=0X7D033E0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E0E,	"op2",	0);
	create_insn	(x=0X7D033E0E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E10,	"op1",	0);
	set_cmt	(0X7D033E12,	"pool",	0);
	create_insn	(x=0X7D033E18);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E22,	"src",	0);
	create_insn	(x=0X7D033E22);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E2E,	"op",	0);
	create_insn	(0X7D033E2E);
	set_cmt	(0X7D033E34,	"src",	0);
	create_insn	(x=0X7D033E34);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E3E,	"dest",	0);
	create_insn	(x=0X7D033E3E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E40,	"op2",	0);
	create_insn	(x=0X7D033E40);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E42,	"op1",	0);
	set_cmt	(0X7D033E44,	"pool",	0);
	set_cmt	(0X7D033E4A,	"dest",	0);
	create_insn	(x=0X7D033E4A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E4C,	"op2",	0);
	create_insn	(x=0X7D033E4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E4E,	"op1",	0);
	set_cmt	(0X7D033E50,	"pool",	0);
	set_cmt	(0X7D033E58,	"src",	0);
	create_insn	(x=0X7D033E58);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E62,	"op",	0);
	create_insn	(x=0X7D033E62);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E68,	"op",	0);
	create_insn	(x=0X7D033E68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E70,	"dest",	0);
	create_insn	(0X7D033E70);
	set_cmt	(0X7D033E72,	"op1",	0);
	set_cmt	(0X7D033E74,	"op2",	0);
	create_insn	(x=0X7D033E74);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E76,	"pool",	0);
	set_cmt	(0X7D033E7C,	"dest",	0);
	create_insn	(x=0X7D033E7C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E7E,	"op2",	0);
	create_insn	(x=0X7D033E7E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E80,	"op1",	0);
	set_cmt	(0X7D033E82,	"pool",	0);
	create_insn	(x=0X7D033E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033E8A);
	op_stkvar	(x,	1);
	create_insn	(0X7D033E90);
	set_cmt	(0X7D033E92,	"dest",	0);
	set_cmt	(0X7D033E94,	"src",	0);
	create_insn	(x=0X7D033E94);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033E9C,	"dest",	0);
	set_cmt	(0X7D033E9E,	"src",	0);
	create_insn	(x=0X7D033E9E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EA4,	"steps",	0);
	set_cmt	(0X7D033EA6,	"dest",	0);
	set_cmt	(0X7D033EA8,	"src",	0);
	set_cmt	(0X7D033EAE,	"pool",	0);
	set_cmt	(0X7D033EB0,	"var",	0);
	create_insn	(x=0X7D033EB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EB6,	"pool",	0);
	set_cmt	(0X7D033EB8,	"var",	0);
	create_insn	(x=0X7D033EB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EBE,	"pool",	0);
	set_cmt	(0X7D033EC0,	"var",	0);
	create_insn	(x=0X7D033EC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EC6,	"pool",	0);
	set_cmt	(0X7D033EC8,	"var",	0);
	create_insn	(x=0X7D033EC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033ECE,	"pool",	0);
	set_cmt	(0X7D033ED0,	"var",	0);
	create_insn	(x=0X7D033ED0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033ED6,	"pool",	0);
	set_cmt	(0X7D033ED8,	"var",	0);
	create_insn	(x=0X7D033ED8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EDE,	"pool",	0);
	set_cmt	(0X7D033EE0,	"var",	0);
	create_insn	(x=0X7D033EE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033EEC,	"y_in",	0);
	create_insn	(0X7D033EEC);
	set_name	(0X7D033EEC,	"mpa_gcd");
	set_cmt	(0X7D033F24,	"op1",	0);
	set_cmt	(0X7D033F28,	"op2",	0);
	create_insn	(0X7D033F38);
	set_cmt	(0X7D033F3C,	"dest",	0);
	set_cmt	(0X7D033F3E,	"src",	0);
	create_insn	(0X7D033F48);
	create_insn	(0X7D033F4C);
	set_cmt	(0X7D033F52,	"gcd",	0);
	set_cmt	(0X7D033F54,	"x_in",	0);
	set_cmt	(0X7D033F56,	"y_in",	0);
	set_cmt	(0X7D033F58,	"pool",	0);
	create_insn	(0X7D033F8A);
	set_name	(0X7D033F8A,	"mpa_extended_gcd");
	set_cmt	(0X7D033F8E,	"y_in",	0);
	create_insn	(x=0X7D033F96);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D033F98);
	op_stkvar	(x,	1);
	set_cmt	(0X7D033FA8,	"src1",	0);
	set_cmt	(0X7D033FAA,	"src2",	0);
	set_cmt	(0X7D033FAC,	"pool",	0);
	create_insn	(0X7D033FB4);
	set_cmt	(0X7D033FDA,	"op1",	0);
	set_cmt	(0X7D033FE4,	"op2",	0);
	set_cmt	(0X7D033FF4,	"dest",	0);
	set_cmt	(0X7D033FF6,	"src",	0);
	set_cmt	(0X7D033FFE,	"dest",	0);
	set_cmt	(0X7D034000,	"src",	0);
	set_cmt	(0X7D034008,	"dest",	0);
	set_cmt	(0X7D03400A,	"src",	0);
	create_insn	(0X7D034012);
	set_cmt	(0X7D034020,	"pool",	0);
	set_cmt	(0X7D034022,	"var",	0);
	create_insn	(x=0X7D034022);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03402A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03402E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034034,	"gcd",	0);
	create_insn	(x=0X7D034034);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034036,	"a",	0);
	set_cmt	(0X7D034038,	"b",	0);
	set_cmt	(0X7D03403A,	"x_in",	0);
	set_cmt	(0X7D03404A,	"dest",	0);
	set_cmt	(0X7D03404C,	"src",	0);
	create_insn	(x=0X7D03404C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034052);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034056,	"pool",	0);
	set_cmt	(0X7D034058,	"var",	0);
	create_insn	(x=0X7D034058);
	op_stkvar	(x,	1);
	create_insn	(0X7D0340A4);
	create_insn	(x=0X7D0340A8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0340B2);
	create_insn	(x=0X7D0340B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0340B8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0340BC);
	create_insn	(0X7D0340C2);
	set_name	(0X7D0340C2,	"mpa_init_scratch_mem_sync");
	create_insn	(x=0X7D0340C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0340CA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0340D8);
	set_name	(0X7D0340D8,	"mpa_alloc_static_temp_var_size");
	create_insn	(0X7D0340F4);
	create_insn	(x=0X7D0340FE);
	op_hex		(x,	1);
	set_cmt	(0X7D034126,	"src",	0);
	set_cmt	(0X7D03412C,	"len",	0);
	create_insn	(0X7D03413A);
	create_insn	(0X7D03414A);
	create_insn	(0X7D03414E);
	set_name	(0X7D03414E,	"mpa_alloc_static_temp_var");
	create_insn	(0X7D03415A);
	set_name	(0X7D03415A,	"mpa_free_static_temp_var");
	create_insn	(0X7D034188);
	set_name	(0X7D034188,	"__mpa_mul_add_word");
	create_insn	(0X7D034198);
	set_name	(0X7D034198,	"__mpa_mul_add_word_cum");
	create_insn	(0X7D0341B0);
	set_name	(0X7D0341B0,	"__mpa_abs_mul_word");
	create_insn	(0X7D0341F4);
	create_insn	(0X7D034206);
	set_name	(0X7D034206,	"__mpa_abs_mul");
	create_insn	(x=0X7D03420E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03424E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03425E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034260,	"a",	0);
	set_cmt	(0X7D034264,	"b",	0);
	set_cmt	(0X7D034268,	"p",	0);
	set_cmt	(0X7D03426E,	"carry",	0);
	create_insn	(x=0X7D034270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03427E);
	op_stkvar	(x,	1);
	create_insn	(0X7D03428C);
	create_insn	(x=0X7D034292);
	op_stkvar	(x,	1);
	create_insn	(0X7D03429E);
	set_name	(0X7D03429E,	"mpa_mul");
	set_cmt	(0X7D0342B2,	"dest",	0);
	set_cmt	(0X7D0342B4,	"src",	0);
	create_insn	(0X7D0342BC);
	create_insn	(0X7D0342C8);
	create_insn	(x=0X7D0342CA);
	op_hex		(x,	1);
	set_cmt	(0X7D0342D0,	"pool",	0);
	set_cmt	(0X7D0342D2,	"var",	0);
	create_insn	(x=0X7D0342D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0342DA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0342DC,	"op2",	0);
	set_cmt	(0X7D0342DE,	"dest",	0);
	create_insn	(x=0X7D0342DE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0342E0,	"op1",	0);
	create_insn	(x=0X7D034302);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03430A,	"dest",	0);
	set_cmt	(0X7D03430C,	"src",	0);
	create_insn	(x=0X7D03430C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034318,	"pool",	0);
	set_cmt	(0X7D03431A,	"var",	0);
	create_insn	(x=0X7D03431A);
	op_stkvar	(x,	1);
	create_insn	(0X7D034326);
	set_name	(0X7D034326,	"mpa_mul_word");
	set_cmt	(0X7D034338,	"dest",	0);
	set_cmt	(0X7D03433A,	"src",	0);
	create_insn	(0X7D034342);
	set_cmt	(0X7D034356,	"pool",	0);
	set_cmt	(0X7D034358,	"var",	0);
	create_insn	(x=0X7D034358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034360);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034362,	"dest",	0);
	create_insn	(x=0X7D034362);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034364,	"op1",	0);
	set_cmt	(0X7D034366,	"op2",	0);
	create_insn	(x=0X7D034372);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03437A,	"dest",	0);
	set_cmt	(0X7D03437C,	"src",	0);
	create_insn	(x=0X7D03437C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034384,	"pool",	0);
	set_cmt	(0X7D034386,	"var",	0);
	create_insn	(x=0X7D034386);
	op_stkvar	(x,	1);
	create_insn	(0X7D034392);
	set_name	(0X7D034392,	"__mpa_shift_words_left");
	create_insn	(0X7D0343CA);
	create_insn	(0X7D0343E6);
	set_name	(0X7D0343E6,	"__mpa_shift_words_right");
	set_cmt	(0X7D034404,	"src",	0);
	create_insn	(0X7D034404);
	create_insn	(0X7D03440E);
	create_insn	(0X7D03441E);
	create_insn	(0X7D03442C);
	set_name	(0X7D03442C,	"mpa_shift_left");
	set_cmt	(0X7D034438,	"n",	0);
	create_insn	(x=0X7D03444E);
	op_hex		(x,	1);
	create_insn	(0X7D03447C);
	create_insn	(0X7D034480);
	create_insn	(0X7D03451E);
	create_insn	(0X7D034542);
	set_name	(0X7D034542,	"mpa_shift_right");
	set_cmt	(0X7D03454E,	"n",	0);
	create_insn	(x=0X7D034560);
	op_hex		(x,	1);
	set_cmt	(0X7D034570,	"dest",	0);
	set_cmt	(0X7D034572,	"src",	0);
	create_insn	(0X7D03457E);
	create_insn	(x=0X7D034594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0345A0);
	op_stkvar	(x,	1);
	create_insn	(0X7D0345A6);
	create_insn	(0X7D0345BC);
	create_insn	(x=0X7D0345D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0345E8);
	op_stkvar	(x,	1);
	create_insn	(0X7D0345FA);
	create_insn	(0X7D03463C);
	set_name	(0X7D03463C,	"__mpa_full_adder");
	create_insn	(0X7D034654);
	set_name	(0X7D034654,	"__mpa_full_sub");
	create_insn	(0X7D03466C);
	set_name	(0X7D03466C,	"__mpa_abs_add");
	create_insn	(x=0X7D034670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03467A);
	op_stkvar	(x,	1);
	create_insn	(0X7D0346BC);
	set_cmt	(0X7D0346C6,	"source",	0);
	create_insn	(0X7D0346EC);
	set_cmt	(0X7D0346F4,	"destination",	0);
	set_cmt	(0X7D0346FA,	"num",	0);
	create_insn	(0X7D034704);
	create_insn	(0X7D034718);
	create_insn	(0X7D03471C);
	set_name	(0X7D03471C,	"__mpa_abs_sub");
	create_insn	(x=0X7D03472A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03472E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03473A);
	op_stkvar	(x,	1);
	create_insn	(0X7D03474E);
	create_insn	(x=0X7D03475A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03476A);
	op_stkvar	(x,	1);
	create_insn	(0X7D034778);
	set_cmt	(0X7D03477E,	"destination",	0);
	set_cmt	(0X7D034782,	"source",	0);
	set_cmt	(0X7D034784,	"num",	0);
	create_insn	(0X7D034790);
	create_insn	(0X7D0347A6);
	set_name	(0X7D0347A6,	"mpa_add");
	set_cmt	(0X7D0347AA,	"op2",	0);
	set_cmt	(0X7D0347E8,	"pool",	0);
	set_cmt	(0X7D0347EA,	"var",	0);
	create_insn	(x=0X7D0347EA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0347F4);
	create_insn	(x=0X7D0347F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0347FE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034806);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03480C);
	op_stkvar	(x,	1);
	create_insn	(0X7D034822);
	set_cmt	(0X7D034826,	"op1",	0);
	set_cmt	(0X7D034828,	"op2",	0);
	create_insn	(x=0X7D03482A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034832);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034840);
	op_stkvar	(x,	1);
	create_insn	(0X7D034848);
	set_cmt	(0X7D03484C,	"op1_size",	0);
	set_cmt	(0X7D03484E,	"diff",	0);
	set_cmt	(0X7D034852,	"op1",	0);
	set_cmt	(0X7D034854,	"diff_size",	0);
	create_insn	(x=0X7D03485A);
	op_stkvar	(x,	1);
	create_insn	(0X7D034864);
	create_insn	(x=0X7D034868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03486A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03486E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034876);
	op_stkvar	(x,	1);
	create_insn	(0X7D03487E);
	set_cmt	(0X7D034882,	"op1_size",	0);
	set_cmt	(0X7D034884,	"diff",	0);
	set_cmt	(0X7D034888,	"op1",	0);
	set_cmt	(0X7D03488A,	"diff_size",	0);
	set_cmt	(0X7D034890,	"dest",	0);
	set_cmt	(0X7D034892,	"src",	0);
	create_insn	(x=0X7D034892);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034898);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03489C,	"pool",	0);
	set_cmt	(0X7D03489E,	"var",	0);
	create_insn	(x=0X7D03489E);
	op_stkvar	(x,	1);
	create_insn	(0X7D0348AA);
	set_name	(0X7D0348AA,	"mpa_sub");
	set_cmt	(0X7D0348E6,	"pool",	0);
	set_cmt	(0X7D0348E8,	"var",	0);
	create_insn	(x=0X7D0348E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0348EA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0348EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0348F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0348F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034908,	"op1",	0);
	set_cmt	(0X7D03490A,	"op2",	0);
	create_insn	(x=0X7D034912);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034916);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03491C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034926);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03492C);
	op_stkvar	(x,	1);
	create_insn	(0X7D034936);
	create_insn	(x=0X7D03493A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03493E,	"op1",	0);
	set_cmt	(0X7D034940,	"diff",	0);
	set_cmt	(0X7D034944,	"op1_size",	0);
	set_cmt	(0X7D034946,	"diff_size",	0);
	set_cmt	(0X7D034948,	"op2",	0);
	create_insn	(x=0X7D034948);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03494A,	"op2_size",	0);
	create_insn	(x=0X7D03494A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034952,	"op1",	0);
	create_insn	(0X7D034952);
	set_cmt	(0X7D034954,	"diff",	0);
	set_cmt	(0X7D034958,	"op1_size",	0);
	set_cmt	(0X7D03495A,	"diff_size",	0);
	set_cmt	(0X7D03495C,	"op2",	0);
	create_insn	(x=0X7D03495C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03495E,	"op2_size",	0);
	create_insn	(x=0X7D03495E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034966);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03496A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034970);
	op_stkvar	(x,	1);
	create_insn	(0X7D034982);
	create_insn	(x=0X7D034986);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03498E,	"dest",	0);
	set_cmt	(0X7D034990,	"src",	0);
	create_insn	(x=0X7D034990);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03499C,	"pool",	0);
	set_cmt	(0X7D03499E,	"var",	0);
	create_insn	(x=0X7D03499E);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0349A6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0349AE);
	create_insn	(0X7D0349B4);
	set_name	(0X7D0349B4,	"mpa_neg");
	create_insn	(0X7D0349C4);
	set_name	(0X7D0349C4,	"mpa_add_word");
	create_insn	(x=0X7D0349CE);
	op_stkvar	(x,	1);
	create_insn	(0X7D0349DA);
	create_insn	(0X7D0349E8);
	set_cmt	(0X7D034A08,	"pool",	0);
	set_cmt	(0X7D034A0A,	"var",	0);
	create_insn	(x=0X7D034A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034A12);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034A16);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034A1A);
	op_stkvar	(x,	1);
	create_insn	(0X7D034A32);
	create_insn	(x=0X7D034A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034A46);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034A48,	"diff",	0);
	set_cmt	(0X7D034A4C,	"op2",	0);
	create_insn	(x=0X7D034A4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034A4E,	"diff_size",	0);
	set_cmt	(0X7D034A52,	"op1",	0);
	set_cmt	(0X7D034A56,	"op2_size",	0);
	create_insn	(x=0X7D034A56);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034A58,	"op1_size",	0);
	create_insn	(x=0X7D034A5E);
	op_stkvar	(x,	1);
	create_insn	(0X7D034A68);
	set_cmt	(0X7D034A74,	"dest",	0);
	set_cmt	(0X7D034A76,	"src",	0);
	create_insn	(x=0X7D034A76);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034A82,	"pool",	0);
	set_cmt	(0X7D034A84,	"var",	0);
	create_insn	(x=0X7D034A84);
	op_stkvar	(x,	1);
	create_insn	(0X7D034A90);
	set_name	(0X7D034A90,	"mpa_sub_word");
	create_insn	(x=0X7D034A9A);
	op_stkvar	(x,	1);
	create_insn	(0X7D034AA6);
	create_insn	(0X7D034AB6);
	set_cmt	(0X7D034AD0,	"pool",	0);
	set_cmt	(0X7D034AD2,	"var",	0);
	create_insn	(x=0X7D034AD2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034ADA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034AF8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034AFA,	"diff",	0);
	set_cmt	(0X7D034AFE,	"op2",	0);
	create_insn	(x=0X7D034AFE);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034B00,	"diff_size",	0);
	set_cmt	(0X7D034B04,	"op1",	0);
	set_cmt	(0X7D034B08,	"op2_size",	0);
	create_insn	(x=0X7D034B08);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034B0A,	"op1_size",	0);
	create_insn	(0X7D034B12);
	create_insn	(x=0X7D034B22);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034B32);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034B3A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034B42,	"dest",	0);
	set_cmt	(0X7D034B44,	"src",	0);
	create_insn	(x=0X7D034B44);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034B4C,	"pool",	0);
	set_cmt	(0X7D034B4E,	"var",	0);
	create_insn	(x=0X7D034B4E);
	op_stkvar	(x,	1);
	create_insn	(0X7D034B5A);
	set_name	(0X7D034B5A,	"__mpa_abs_cmp");
	create_insn	(0X7D034B7C);
	create_insn	(0X7D034BA4);
	create_insn	(0X7D034BA8);
	create_insn	(0X7D034BB0);
	create_insn	(0X7D034BB6);
	set_name	(0X7D034BB6,	"__mpa_abs_greater_than");
	create_insn	(0X7D034BC6);
	set_name	(0X7D034BC6,	"mpa_cmp");
	set_cmt	(0X7D034BEC,	"op1",	0);
	create_insn	(x=0X7D034BEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7D034BF2);
	create_insn	(0X7D034BFE);
	create_insn	(0X7D034C02);
	create_insn	(0X7D034C06);
	create_insn	(0X7D034C0A);
	set_name	(0X7D034C0A,	"mpa_cmp_short");
	create_insn	(0X7D034C26);
	create_insn	(0X7D034C48);
	create_insn	(0X7D034C4C);
	create_insn	(0X7D034C50);
	create_insn	(0X7D034C58);
	create_insn	(0X7D034C5E);
	create_insn	(0X7D034C60);
	set_name	(0X7D034C60,	"mpa_init_static");
	create_insn	(0X7D034C72);
	set_name	(0X7D034C72,	"mpa_init_static_fmm_context");
	create_insn	(x=0X7D034C82);
	op_hex		(x,	1);
	create_insn	(0X7D034CAA);
	set_name	(0X7D034CAA,	"__mpa_word_to_hexstr");
	create_insn	(x=0X7D034CB6);
	op_hex		(x,	1);
	create_insn	(0X7D034CC2);
	create_insn	(0X7D034CC8);
	create_insn	(0X7D034CD4);
	set_name	(0X7D034CD4,	"__mpa_mpanum_to_hexstr");
	set_cmt	(0X7D034CF2,	"str",	0);
	create_insn	(0X7D034CF2);
	set_cmt	(0X7D034CF6,	"w",	0);
	set_cmt	(0X7D034CFA,	"caseing",	0);
	create_insn	(0X7D034D24);
	set_cmt	(0X7D034D34,	"str",	0);
	set_cmt	(0X7D034D36,	"w",	0);
	set_cmt	(0X7D034D38,	"caseing",	0);
	create_insn	(0X7D034D58);
	create_insn	(0X7D034D70);
	set_name	(0X7D034D70,	"__mpa_isspace");
	create_insn	(x=0X7D034D7C);
	op_hex		(x,	1);
	create_insn	(0X7D034D8E);
	create_insn	(0X7D034D92);
	set_name	(0X7D034D92,	"mpa_get_str");
	set_cmt	(0X7D034DB0,	"caseing",	0);
	create_insn	(0X7D034DB0);
	create_insn	(0X7D034DBA);
	create_insn	(0X7D034DBE);
	set_name	(0X7D034DBE,	"mpa_set_oct_str");
	create_insn	(0X7D034DDA);
	set_cmt	(0X7D034DDC,	"dest",	0);
	set_cmt	(0X7D034DDE,	"src",	0);
	create_insn	(0X7D034DE6);
	set_cmt	(0X7D034DF0,	"dest",	0);
	set_cmt	(0X7D034DF6,	"src",	0);
	create_insn	(0X7D034E3C);
	create_insn	(0X7D034E4A);
	create_insn	(0X7D034E52);
	set_name	(0X7D034E52,	"mpa_get_oct_str");
	create_insn	(0X7D034E80);
	create_insn	(0X7D034E8C);
	create_insn	(0X7D034EAE);
	create_insn	(x=0X7D034EB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034EBA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034EC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034ECC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034ED6,	"destination",	0);
	set_cmt	(0X7D034ED8,	"source",	0);
	set_cmt	(0X7D034EDA,	"num",	0);
	create_insn	(0X7D034EE4);
	create_insn	(0X7D034F18);
	create_insn	(0X7D034F20);
	create_insn	(0X7D034F2A);
	set_name	(0X7D034F2A,	"mpa_mod");
	set_cmt	(0X7D034F32,	"pool",	0);
	create_insn	(x=0X7D034F32);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F34,	"q",	0);
	set_cmt	(0X7D034F36,	"r",	0);
	set_cmt	(0X7D034F38,	"op1",	0);
	set_cmt	(0X7D034F3A,	"op2",	0);
	create_insn	(0X7D034F44);
	set_name	(0X7D034F44,	"mpa_mul_mod");
	create_insn	(x=0X7D034F48);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F4C,	"var",	0);
	create_insn	(x=0X7D034F4C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F52,	"pool",	0);
	set_cmt	(0X7D034F5A,	"dest",	0);
	create_insn	(x=0X7D034F5A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F5C,	"op1",	0);
	set_cmt	(0X7D034F5E,	"op2",	0);
	set_cmt	(0X7D034F60,	"pool",	0);
	set_cmt	(0X7D034F66,	"r",	0);
	set_cmt	(0X7D034F68,	"op1",	0);
	create_insn	(x=0X7D034F68);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F6A,	"op2",	0);
	set_cmt	(0X7D034F6C,	"pool",	0);
	create_insn	(x=0X7D034F6C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034F6E,	"q",	0);
	set_cmt	(0X7D034F74,	"pool",	0);
	set_cmt	(0X7D034F76,	"var",	0);
	create_insn	(x=0X7D034F76);
	op_stkvar	(x,	1);
	create_insn	(0X7D034F82);
	set_name	(0X7D034F82,	"mpa_inv_mod");
	set_cmt	(0X7D034F8A,	"op1",	0);
	set_cmt	(0X7D034F8C,	"op2",	0);
	set_cmt	(0X7D034F9A,	"dest",	0);
	set_cmt	(0X7D034F9C,	"short_val",	0);
	create_insn	(0X7D034FA4);
	set_cmt	(0X7D034FAC,	"pool",	0);
	set_cmt	(0X7D034FAE,	"var",	0);
	create_insn	(x=0X7D034FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D034FB6);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FB8,	"pool",	0);
	set_cmt	(0X7D034FBA,	"var",	0);
	create_insn	(x=0X7D034FBA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FC0,	"src1",	0);
	set_cmt	(0X7D034FC2,	"gcd",	0);
	create_insn	(x=0X7D034FC2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FC4,	"dest1",	0);
	create_insn	(x=0X7D034FC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FC6,	"dest2",	0);
	set_cmt	(0X7D034FC8,	"src2",	0);
	create_insn	(x=0X7D034FC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FCC,	"pool",	0);
	create_insn	(x=0X7D034FCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FD2,	"op1",	0);
	create_insn	(x=0X7D034FD2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FD4,	"op2",	0);
	set_cmt	(0X7D034FDE,	"dest",	0);
	create_insn	(x=0X7D034FE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FE2,	"src",	0);
	set_cmt	(0X7D034FEA,	"var",	0);
	set_cmt	(0X7D034FEC,	"pool",	0);
	set_cmt	(0X7D034FF2,	"pool",	0);
	set_cmt	(0X7D034FF4,	"var",	0);
	create_insn	(x=0X7D034FF4);
	op_stkvar	(x,	1);
	set_cmt	(0X7D034FFC,	"op1",	0);
	set_cmt	(0X7D034FFE,	"op2",	0);
	set_cmt	(0X7D035008,	"dest",	0);
	set_cmt	(0X7D03500A,	"op1",	0);
	set_cmt	(0X7D03500C,	"op2",	0);
	set_cmt	(0X7D03500E,	"pool",	0);
	create_insn	(0X7D035016);
	create_insn	(0X7D03501A);
	create_insn	(0X7D035026);
	set_name	(0X7D035026,	"bgetz");
	create_insn	(0X7D035040);
	create_insn	(0X7D03504E);
	set_name	(0X7D03504E,	"realloc_unlocked");
	set_cmt	(0X7D035052,	"requested_size",	0);
	set_cmt	(0X7D035068,	"source",	0);
	set_cmt	(0X7D035070,	"num",	0);
	set_cmt	(0X7D035076,	"buf",	0);
	create_insn	(0X7D035080);
	set_name	(0X7D035080,	"malloc");
	set_cmt	(0X7D03508E,	"requested_size",	0);
	create_insn	(0X7D03509E);
	set_name	(0X7D03509E,	"free");
	set_cmt	(0X7D0350A8,	"buf",	0);
	create_insn	(0X7D0350B6);
	set_name	(0X7D0350B6,	"calloc");
	set_cmt	(0X7D0350D0,	"size",	0);
	create_insn	(0X7D0350DA);
	create_insn	(0X7D0350E4);
	set_name	(0X7D0350E4,	"realloc");
	set_cmt	(0X7D0350F4,	"size",	0);
	set_cmt	(0X7D0350F6,	"ptr",	0);
	create_insn	(0X7D035106);
	set_name	(0X7D035106,	"swapfunc");
	create_insn	(0X7D035122);
	create_insn	(0X7D035136);
	set_name	(0X7D035136,	"med3");
	create_insn	(0X7D035160);
	create_insn	(0X7D035176);
	create_insn	(0X7D03517A);
	set_name	(0X7D03517A,	"qsort");
	create_insn	(x=0X7D035186);
	op_stkvar	(x,	1);
	create_insn	(0X7D035198);
	create_insn	(x=0X7D0351A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0351C0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0351D8,	"a",	0);
	create_insn	(0X7D0351D8);
	set_cmt	(0X7D0351DA,	"b",	0);
	set_cmt	(0X7D0351DC,	"n",	0);
	set_cmt	(0X7D0351DE,	"swaptype",	0);
	create_insn	(0X7D0351E8);
	create_insn	(0X7D0351EC);
	set_cmt	(0X7D035210,	"cmp",	0);
	create_insn	(x=0X7D035210);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035216,	"c",	0);
	set_cmt	(0X7D03521A,	"b",	0);
	set_cmt	(0X7D03521E,	"a",	0);
	create_insn	(x=0X7D035220);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03522C,	"b",	0);
	set_cmt	(0X7D03522E,	"c",	0);
	create_insn	(x=0X7D035232);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035234,	"cmp",	0);
	create_insn	(x=0X7D035234);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035236,	"a",	0);
	create_insn	(x=0X7D03523E);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035242,	"b",	0);
	set_cmt	(0X7D035246,	"c",	0);
	set_cmt	(0X7D03524A,	"cmp",	0);
	create_insn	(x=0X7D03524A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D035258);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03525A,	"b",	0);
	set_cmt	(0X7D03525C,	"a",	0);
	create_insn	(x=0X7D03525C);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03525E,	"c",	0);
	set_cmt	(0X7D035260,	"cmp",	0);
	create_insn	(x=0X7D035260);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035274,	"a",	0);
	create_insn	(0X7D035274);
	set_cmt	(0X7D035276,	"b",	0);
	set_cmt	(0X7D035278,	"n",	0);
	set_cmt	(0X7D03527A,	"swaptype",	0);
	create_insn	(x=0X7D035280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D035294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03529A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0352A0);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0352B6,	"a",	0);
	create_insn	(0X7D0352B6);
	set_cmt	(0X7D0352B8,	"b",	0);
	set_cmt	(0X7D0352BA,	"n",	0);
	set_cmt	(0X7D0352BC,	"swaptype",	0);
	create_insn	(x=0X7D0352CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0352D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0352D6);
	op_stkvar	(x,	1);
	create_insn	(0X7D0352E6);
	set_cmt	(0X7D0352FA,	"a",	0);
	create_insn	(0X7D0352FA);
	set_cmt	(0X7D0352FC,	"b",	0);
	set_cmt	(0X7D0352FE,	"n",	0);
	set_cmt	(0X7D035300,	"swaptype",	0);
	create_insn	(0X7D03530E);
	set_cmt	(0X7D03531E,	"a",	0);
	create_insn	(0X7D03531E);
	set_cmt	(0X7D035320,	"b",	0);
	set_cmt	(0X7D035322,	"n",	0);
	set_cmt	(0X7D035324,	"swaptype",	0);
	create_insn	(0X7D035334);
	create_insn	(x=0X7D03533C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D035350);
	op_stkvar	(x,	1);
	set_cmt	(0X7D035368,	"a",	0);
	create_insn	(0X7D035368);
	set_cmt	(0X7D03536A,	"b",	0);
	set_cmt	(0X7D03536C,	"n",	0);
	set_cmt	(0X7D03536E,	"swaptype",	0);
	create_insn	(x=0X7D035378);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D03537C);
	op_stkvar	(x,	1);
	create_insn	(0X7D035380);
	set_cmt	(0X7D03538E,	"n",	0);
	set_cmt	(0X7D035394,	"a",	0);
	set_cmt	(0X7D035396,	"b",	0);
	set_cmt	(0X7D035398,	"swaptype",	0);
	create_insn	(x=0X7D03539A);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0353A2);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0353B4,	"n",	0);
	set_cmt	(0X7D0353BA,	"a",	0);
	set_cmt	(0X7D0353C0,	"swaptype",	0);
	create_insn	(x=0X7D0353C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D0353CA);
	op_stkvar	(x,	1);
	set_cmt	(0X7D0353D2,	"base",	0);
	set_cmt	(0X7D0353D8,	"size",	0);
	set_cmt	(0X7D0353DA,	"compar",	0);
	create_insn	(x=0X7D0353DA);
	op_stkvar	(x,	1);
	create_insn	(0X7D0353EE);
	create_insn	(0X7D0353F4);
	set_name	(0X7D0353F4,	"memcmp");
	create_insn	(0X7D03540E);
	create_insn	(0X7D035412);
	set_name	(0X7D035412,	"memcpy");
	create_insn	(0X7D035422);
	create_insn	(0X7D035424);
	set_name	(0X7D035424,	"memmove");
	create_insn	(0X7D03542E);
	create_insn	(0X7D035448);
	create_insn	(0X7D03544A);
	create_insn	(0X7D035456);
	create_insn	(0X7D035458);
	set_name	(0X7D035458,	"memset");
	create_insn	(0X7D035466);
	create_insn	(0X7D035468);
	set_name	(0X7D035468,	"strcmp");
	create_insn	(0X7D035482);
	set_name	(0X7D035482,	"strlen");
	create_insn	(0X7D035492);
	set_name	(0X7D035492,	"uint64_div_soft");
	create_insn	(0X7D0354BE);
	create_insn	(0X7D0354F2);
	create_insn	(0X7D03550A);
	set_name	(0X7D03550A,	"int64_unk1_soft");
	create_insn	(0X7D035538);
	create_insn	(0X7D035580);
	create_insn	(0X7D0355B4);
	create_insn	(0X7D0355DC);
	set_name	(0X7D0355DC,	"__aeabi_llsr");
	create_insn	(0X7D0355F0);
	create_insn	(0X7D035606);
	set_name	(0X7D035606,	"strlcpy");
	create_insn	(0X7D035630);
	set_name	(0X7D035630,	"buf_compare_ct");
	create_insn	(0X7D035646);
	create_insn	(x=0X7D035652);
	op_hex		(x,	1);
	create_insn	(0X7D035658);
	set_name	(0X7D035658,	"vsnprintk");
	create_insn	(x=0X7D03565A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7D03565C,	"ap",	0);
	create_insn	(x=0X7D03565C);
	op_stkvar	(x,	1);
	create_insn	(0X7D035666);
	set_name	(0X7D035666,	"snprintk");
	set_cmt	(0X7D035668,	"ext",	0);
	create_insn	(x=0X7D03566A);
	op_stkvar	(x,	1);
	set_cmt	(0X7D03566C,	"ap",	0);
	create_insn	(x=0X7D035670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7D035678);
	op_stkvar	(x,	1);
	create_insn	(0X7D035680);
	set_name	(0X7D035680,	"memchr");
	create_insn	(0X7D035698);
	make_array	(0X7D03569C,	0X4);
	create_insn	(0X7D0356A0);
	set_name	(0X7D0356A0,	"j_vfp_write_fpexc");
	make_array	(0X7D0356A2,	0X2);
	create_insn	(0X7D0356A4);
	create_insn	(x=0X7D0356A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7D0356A8,	"j_tee_svc_sys_return_helper");
	create_dword	(x=0X7D0356AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X7D0356B0);
	set_name	(0X7D0356B0,	"j_cpu_spin_unlock");
	make_array	(0X7D0356B2,	0X2);
	create_insn	(0X7D0356B4);
	create_insn	(0X7D0356B8);
	set_name	(0X7D0356B8,	"j_get_core_pos");
	make_array	(0X7D0356BA,	0X2);
	create_insn	(0X7D0356BC);
	create_insn	(0X7D0356C0);
	set_name	(0X7D0356C0,	"j_thread_resume");
	make_array	(0X7D0356C2,	0X2);
	create_insn	(0X7D0356C4);
	create_insn	(0X7D0356C8);
	set_name	(0X7D0356C8,	"j_cpu_spin_lock");
	make_array	(0X7D0356CA,	0X2);
	create_insn	(0X7D0356CC);
	create_insn	(0X7D0356D0);
	set_name	(0X7D0356D0,	"j_thread_init_vbar");
	make_array	(0X7D0356D2,	0X2);
	create_insn	(0X7D0356D4);
	create_insn	(0X7D0356D8);
	set_name	(0X7D0356D8,	"j__thread_enter_user_mode");
	make_array	(0X7D0356DA,	0X2);
	create_insn	(0X7D0356DC);
	create_dword	(0X7D0356E0);
	make_array	(0X7D0356E0,	0X6A6);
	set_name	(0X7D0356E0,	"__exidx_start");
	create_byte	(0X7D0375C0);
	make_array	(0X7D0375C0,	0X10);
	set_name	(0X7D0375C0,	"ufie_key");
	create_byte	(0X7D0375E0);
	make_array	(0X7D0375E0,	0X10);
	set_name	(0X7D0375E0,	"tbie_key");
	create_qword	(0X7D037600);
	make_array	(0X7D037600,	0X800);
	create_qword	(0X7D03B600);
	make_array	(0X7D03B600,	0X807);
	MakeStruct	(0X7D03F894,	"tee_ta_ops");
	set_name	(0X7D03F894,	"static_ta_ops");
	MakeStruct	(0X7D03F8A8,	"time_source");
	set_name	(0X7D03F8A8,	"arm_cntpct_time_source");
	create_dword	(0X7D03F8B4);
	set_name	(0X7D03F8B4,	"stack_tmp_stride");
	set_cmt	(0X7D03F8B8,	"This array is ordered according to the SYSCALL ids TEE_SCN_xxx",	1);
	create_dword	(x=0X7D03F8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D03F8B8,	"tee_svc_syscall_table");
	create_dword	(x=0X7D03F8BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F8FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F904);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F90C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F914);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F91C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F92C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F934);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F93C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F944);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F94C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F95C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F964);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F96C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F974);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F97C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F98C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D03F994,	"syscall_se_service_open",	1);
	create_dword	(x=0X7D03F994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F99C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X7D03F9CC,	"syscall_se_channel_close",	1);
	create_dword	(x=0X7D03F9CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03F9FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03FA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03FA04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03FA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D03FA0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	MakeStruct	(0X7D03FA10,	"thread_handlers");
	set_name	(0X7D03FA10,	"th_handlers");
	create_dword	(0X7D03FA34);
	set_name	(0X7D03FA34,	"crypto_ecc_en");
	MakeStruct	(0X7D03FA38,	"tee_props");
	set_name	(0X7D03FA38,	"tee_propset_client");
	create_dword	(x=0X7D03FA4C);
	op_dec		(x,	0);
	set_name	(0X7D03FA4C,	"ta_time_prot_lvl");
	MakeStruct	(0X7D03FA50,	"tee_props");
	make_array	(0X7D03FA50,	0XD);
	set_name	(0X7D03FA50,	"tee_propset_tee");
	MakeStruct	(0X7D03FB54,	"tee_props");
	set_name	(0X7D03FB54,	"tee_propset_ta");
	create_dword	(0X7D03FC7C);
	make_array	(0X7D03FC7C,	0X5C);
	MakeStruct	(0X7D03FDF4,	"attr_ops_s");
	make_array	(0X7D03FDF4,	0X3);
	set_name	(0X7D03FDF4,	"attr_ops");
	MakeStruct	(0X7D03FECC,	"tee_file_operations");
	set_name	(0X7D03FECC,	"rpmb_fs_ops");
	MakeStruct	(0X7D03FF04,	"itr_ops_s");
	set_name	(0X7D03FF04,	"gic_ops");
	create_dword	(0X7D03FF10);
	set_name	(0X7D03FF10,	"ta_pub_key_modulus_size");
	create_dword	(0X7D03FF14);
	set_name	(0X7D03FF14,	"ta_pub_key_exponent");
	create_dword	(0X7D03FF18);
	make_array	(0X7D03FF18,	0X100);
	set_cmt	(0X7D040318,	"struct crypto_ops_s starts here; we will name individual sub-structs to avoid bugging out",	1);
	create_dword	(x=0X7D040318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D040318,	"crypto_ops_sasi__name");
	create_dword	(x=0X7D04031C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04031C,	"crypto_ops_sasi__init");
	MakeStruct	(0X7D040320,	"hash_ops");
	set_name	(0X7D040320,	"crypto_ops_sasi__hash");
	MakeStruct	(0X7D040330,	"cipher_ops");
	set_name	(0X7D040330,	"crypto_ops_sasi__cipher");
	MakeStruct	(0X7D040344,	"mac_ops");
	set_name	(0X7D040344,	"crypto_ops_sasi__mac");
	MakeStruct	(0X7D040354,	"authenc_ops");
	set_name	(0X7D040354,	"crypto_ops_sasi__authenc");
	MakeStruct	(0X7D040370,	"acipher_ops");
	set_name	(0X7D040370,	"crypto_ops_sasi__acipher");
	MakeStruct	(0X7D0403D4,	"bignum_ops");
	set_name	(0X7D0403D4,	"crypto_ops_sasi__bignum");
	MakeStruct	(0X7D0403F8,	"prng_ops");
	set_name	(0X7D0403F8,	"crypto_ops_sasi__prng");
	create_dword	(x=0X7D040400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D040400,	"crypto_ops_tom__name");
	create_dword	(x=0X7D040404);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D040404,	"crypto_ops_tom__init");
	MakeStruct	(0X7D040408,	"hash_ops");
	set_name	(0X7D040408,	"crypto_ops_tom__hash");
	MakeStruct	(0X7D040418,	"cipher_ops");
	set_name	(0X7D040418,	"crypto_ops_tom__cipher");
	MakeStruct	(0X7D04042C,	"mac_ops");
	set_name	(0X7D04042C,	"crypto_ops_tom__mac");
	MakeStruct	(0X7D04043C,	"authenc_ops");
	set_name	(0X7D04043C,	"crypto_ops_tom__authenc");
	MakeStruct	(0X7D040458,	"acipher_ops");
	set_name	(0X7D040458,	"crypto_ops_tom__acipher");
	MakeStruct	(0X7D0404BC,	"bignum_ops");
	set_name	(0X7D0404BC,	"crypto_ops_tom__bignum");
	MakeStruct	(0X7D0404E0,	"prng_ops");
	set_name	(0X7D0404E0,	"crypto_ops_tom__prng");
	create_dword	(0X7D0404E8);
	make_array	(0X7D0404E8,	0X100);
	create_dword	(0X7D0408E8);
	make_array	(0X7D0408E8,	0X100);
	create_dword	(0X7D040CE8);
	make_array	(0X7D040CE8,	0X100);
	create_dword	(0X7D0410E8);
	make_array	(0X7D0410E8,	0X100);
	create_dword	(0X7D0414E8);
	make_array	(0X7D0414E8,	0X100);
	create_dword	(x=0X7D0428E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D042950);
	make_array	(0X7D042950,	0X100);
	create_dword	(0X7D042D50);
	make_array	(0X7D042D50,	0X100);
	create_dword	(0X7D043178);
	make_array	(0X7D043178,	0X100);
	create_dword	(0X7D043978);
	make_array	(0X7D043978,	0X100);
	create_dword	(0X7D043D78);
	make_array	(0X7D043D78,	0X100);
	create_dword	(0X7D044178);
	make_array	(0X7D044178,	0X100);
	create_dword	(0X7D044578);
	make_array	(0X7D044578,	0X100);
	create_dword	(0X7D044978);
	make_array	(0X7D044978,	0X18);
	create_dword	(x=0X7D0449D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D044A40);
	make_array	(0X7D044A40,	0X8);
	create_dword	(x=0X7D044A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D044AC8);
	make_array	(0X7D044AC8,	0X40);
	create_dword	(0X7D044BC8);
	make_array	(0X7D044BC8,	0X40);
	create_dword	(0X7D044CC8);
	make_array	(0X7D044CC8,	0X40);
	create_dword	(0X7D044DC8);
	make_array	(0X7D044DC8,	0X40);
	create_dword	(0X7D044EC8);
	make_array	(0X7D044EC8,	0X40);
	create_dword	(0X7D044FC8);
	make_array	(0X7D044FC8,	0X40);
	create_dword	(0X7D0450C8);
	make_array	(0X7D0450C8,	0X40);
	create_dword	(0X7D0451C8);
	make_array	(0X7D0451C8,	0X40);
	MakeStruct	(0X7D0452C8,	"ltc_hash_descriptor");
	set_name	(0X7D0452C8,	"md5_desc");
	MakeStruct	(0X7D045330,	"ltc_hash_descriptor");
	set_name	(0X7D045330,	"sha1_desc");
	MakeStruct	(0X7D045398,	"ltc_hash_descriptor");
	set_name	(0X7D045398,	"sha224_desc");
	MakeStruct	(0X7D045400,	"ltc_hash_descriptor");
	set_name	(0X7D045400,	"sha256_desc");
	MakeStruct	(0X7D045468,	"ltc_hash_descriptor");
	set_name	(0X7D045468,	"sha384_desc");
	MakeStruct	(0X7D0454D0,	"ltc_hash_descriptor");
	set_name	(0X7D0454D0,	"sha512_desc");
	MakeStruct	(0X7D045538,	"ltc_ecc_set_type");
	make_array	(0X7D045538,	0X6);
	set_name	(0X7D045538,	"ltc_ecc_sets");
	MakeStruct	(0X7D0455E0,	"ltc_prng_descriptor");
	set_name	(0X7D0455E0,	"fortuna_desc");
	MakeStruct	(0X7D045608,	"ans1_der_conv_table_entry");
	make_array	(0X7D045608,	0X76);
	set_name	(0X7D045608,	"teletex_table");
	MakeStruct	(0X7D0459B8,	"ans1_der_conv_table_entry");
	make_array	(0X7D0459B8,	0X66);
	set_name	(0X7D0459B8,	"ia5_table");
	MakeStruct	(0X7D045CE8,	"ans1_der_conv_table_entry");
	make_array	(0X7D045CE8,	0X4A);
	set_name	(0X7D045CE8,	"printable_table");
	MakeStruct	(0X7D045F38,	"mpa_num_base");
	set_name	(0X7D045F38,	"Const_1_LShift_Base");
	create_dword	(0X7D045F44);
	MakeStruct	(0X7D045F48,	"mpa_num_base");
	set_name	(0X7D045F48,	"const_one");
	MakeStruct	(0X7D045F54,	"mpa_num_base");
	set_name	(0X7D045F54,	"const_miller_rabin_proof_limit");
	create_dword	(0X7D045F60);
	create_dword	(x=0X7D045F64);
	make_array	(x,	0X7);
	op_dec		(x,	0);
	set_name	(0X7D045F64,	"proof_a");
	MakeStruct	(0X7D045F80,	"mpa_num_base");
	set_name	(0X7D045F80,	"const_two");
	MakeStruct	(0X7D045F8C,	"mpa_num_base");
	set_name	(0X7D045F8C,	"const_small_prime_factors");
	create_dword	(0X7D045F98);
	make_array	(0X7D045F98,	0X2B);
	create_dword	(0X7D046044);
	make_array	(0X7D046044,	0X30E);
	set_name	(0X7D046044,	"PRIME_TABLE");
	create_dword	(0X7D046C7C);
	make_array	(0X7D046C7C,	0XD);
	set_name	(0X7D046C7C,	"CSWTCH_7_SaSi_AesInit");
	create_dword	(0X7D046CB0);
	make_array	(0X7D046CB0,	0X10);
	create_dword	(0X7D046CF0);
	make_array	(0X7D046CF0,	0X10);
	set_name	(0X7D046CF0,	"crys_hash_err_map");
	create_dword	(0X7D046D30);
	make_array	(0X7D046D30,	0X6);
	create_dword	(0X7D046D48);
	make_array	(0X7D046D48,	0X10);
	create_dword	(0X7D046D88);
	make_array	(0X7D046D88,	0X80);
	create_dword	(0X7D046F88);
	make_array	(0X7D046F88,	0X10);
	create_dword	(0X7D046FC8);
	make_array	(0X7D046FC8,	0X10);
	create_strlit	(0X7D047008,	0X7D047014);
	set_name	(0X7D047008,	"aRpmbKeysasi");
	create_dword	(0X7D047014);
	make_array	(0X7D047014,	0X10);
	create_dword	(0X7D047054);
	make_array	(0X7D047054,	0X30);
	set_name	(0X7D047054,	"gHashDerCodes");
	create_dword	(0X7D047114);
	make_array	(0X7D047114,	0X5);
	create_strlit	(0X7D047128,	0X7D047140);
	set_name	(0X7D047128,	"aCrysEcpkiBuild");
	create_strlit	(0X7D047140,	0X7D04719B);
	set_name	(0X7D047140,	"aIllgalPrivKeyS");
	create_byte	(0X7D04719C);
	make_array	(0X7D04719C,	0X20);
	create_byte	(0X7D0471BC);
	make_array	(0X7D0471BC,	0X20);
	create_byte	(0X7D0471DC);
	make_array	(0X7D0471DC,	0X30);
	create_byte	(0X7D04720E);
	create_byte	(0X7D04720F);
	create_byte	(0X7D047210);
	create_byte	(0X7D047211);
	create_byte	(0X7D047212);
	create_byte	(0X7D047213);
	create_byte	(0X7D047214);
	create_byte	(0X7D04721A);
	create_byte	(0X7D04721B);
	create_byte	(0X7D04721C);
	create_byte	(0X7D04721E);
	create_byte	(0X7D04721F);
	create_byte	(0X7D047220);
	create_byte	(0X7D047221);
	create_word	(x=0X7D047334);
	make_array	(x,	0X100);
	op_dec		(x,	0);
	set_name	(0X7D047334,	"g_SmallPrime");
	MakeStruct	(0X7D047980,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D047980,	"ecpki_domain_secp160k1");
	MakeStruct	(0X7D047C5C,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D047C5C,	"ecpki_domain_secp160r1");
	MakeStruct	(0X7D047F38,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D047F38,	"ecpki_domain_secp160r2");
	MakeStruct	(0X7D048214,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D048214,	"ecpki_domain_secp192r1");
	MakeStruct	(0X7D0484F0,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D0484F0,	"ecpki_domain_secp192k1");
	MakeStruct	(0X7D0487CC,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D0487CC,	"ecpki_domain_secp224r1");
	MakeStruct	(0X7D048AA8,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D048AA8,	"ecpki_domain_secp224k1");
	MakeStruct	(0X7D048D84,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D048D84,	"ecpki_domain_secp256r1");
	MakeStruct	(0X7D049060,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D049060,	"ecpki_domain_secp256k1");
	MakeStruct	(0X7D04933C,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D04933C,	"ecpki_domain_secp384r1");
	MakeStruct	(0X7D049618,	"CRYS_ECPKI_Domain_t");
	set_name	(0X7D049618,	"ecpki_domain_secp521r1");
	create_word	(0X7D0498F4);
	make_array	(0X7D0498F4,	0XB);
	create_strlit	(0X7D04990A,	0X7D049918);
	set_name	(0X7D04990A,	"aUserTaEnter");
	create_strlit	(0X7D049918,	0X7D049934);
	set_name	(0X7D049918,	"aTeeTaInitUserT");
	create_strlit	(0X7D049934,	0X7D04993C);
	set_name	(0X7D049934,	"aTaLoad");
	create_strlit	(0X7D04993C,	0X7D04995E);
	set_name	(0X7D04993C,	"aLoadAddr0xXCtx");
	create_strlit	(0X7D04995E,	0X7D049971);
	set_name	(0X7D04995E,	"aStack0xLxZu");
	create_strlit	(0X7D049971,	0X7D049985);
	set_name	(0X7D049971,	"aSectZuLxZu");
	create_strlit	(0X7D049985,	0X7D0499A4);
	set_name	(0X7D049985,	"aCoreArchArmKer_4");
	create_strlit	(0X7D0499A4,	0X7D0499BC);
	set_name	(0X7D0499A4,	"aTaDoesNotExecI");
	create_strlit	(0X7D0499BC,	0X7D0499DB);
	set_name	(0X7D0499BC,	"aFailedToVerify_2");
	create_strlit	(0X7D0499DB,	0X7D049A07);
	set_name	(0X7D0499DB,	"aFailedToAlloca");
	create_strlit	(0X7D049A07,	0X7D049A2D);
	set_name	(0X7D049A07,	"aTaFlagIssueFla");
	create_strlit	(0X7D049A2D,	0X7D049A39);
	set_name	(0X7D049A2D,	"aAllocStack");
	create_strlit	(0X7D049A39,	0X7D049A54);
	set_name	(0X7D049A39,	"aUnknownRelocat");
	create_strlit	(0X7D049A54,	0X7D049A64);
	set_name	(0X7D049A54,	"aE32ProcessRel");
	create_strlit	(0X7D049A64,	0X7D049A6F);
	set_name	(0X7D049A64,	"aArmCntpct");
	create_strlit	(0X7D049A6F,	0X7D049A85);
	set_name	(0X7D049A6F,	"aThreadCheckCan");
	create_strlit	(0X7D049A85,	0X7D049AA4);
	set_name	(0X7D049A85,	"aDeadCanaryAtSO");
	create_strlit	(0X7D049AA4,	0X7D049AAA);
	set_name	(0X7D049AA4,	"aStart");
	create_strlit	(0X7D049AAA,	0X7D049AB4);
	set_name	(0X7D049AAA,	"aStackTmp");
	create_strlit	(0X7D049AB4,	0X7D049AD2);
	set_name	(0X7D049AB4,	"aCoreArchArmKer");
	create_strlit	(0X7D049AD2,	0X7D049AD6);
	set_name	(0X7D049AD2,	"aEnd");
	create_strlit	(0X7D049AD6,	0X7D049AE0);
	set_name	(0X7D049AD6,	"aStackAbt");
	create_strlit	(0X7D049AE0,	0X7D049AE9);
	set_name	(0X7D049AE0,	"aStackSm");
	create_strlit	(0X7D049AE9,	0X7D049AF6);
	set_name	(0X7D049AE9,	"aStackThread");
	create_strlit	(0X7D049AF6,	0X7D049B04);
	set_name	(0X7D049AF6,	"aAbortHandler");
	create_strlit	(0X7D049B04,	0X7D049B09);
	set_name	(0X7D049B04,	"aData");
	create_strlit	(0X7D049B09,	0X7D049B12);
	set_name	(0X7D049B09,	"aPrefetch");
	create_strlit	(0X7D049B12,	0X7D049B18);
	set_name	(0X7D049B12,	"aUndef");
	create_strlit	(0X7D049B18,	0X7D049B2B);
	set_name	(0X7D049B18,	"aAlignmentFault");
	create_strlit	(0X7D049B2B,	0X7D049B40);
	set_name	(0X7D049B2B,	"aTranslationFau");
	create_strlit	(0X7D049B40,	0X7D049B59);
	set_name	(0X7D049B40,	"aReadPermission");
	create_strlit	(0X7D049B59,	0X7D049B73);
	set_name	(0X7D049B59,	"aWritePermissio");
	create_strlit	(0X7D049B73,	0X7D049B93);
	set_name	(0X7D049B73,	"aSSAbortAtAddre");
	create_strlit	(0X7D049B93,	0X7D049BC7);
	set_name	(0X7D049B93,	"aFsr0x08xTtbr00");
	create_strlit	(0X7D049BC7,	0X7D049BE7);
	set_name	(0X7D049BC7,	"aCpuZuCpsr0x08x");
	create_strlit	(0X7D049BE7,	0X7D049C1C);
	set_name	(0X7D049BE7,	"aR00x08xR40x08x");
	create_strlit	(0X7D049C1C,	0X7D049C51);
	set_name	(0X7D049C1C,	"aR10x08xR50x08x");
	create_strlit	(0X7D049C51,	0X7D049C86);
	set_name	(0X7D049C51,	"aR20x08xR60x08x");
	create_strlit	(0X7D049C86,	0X7D049CBB);
	set_name	(0X7D049C86,	"aR30x08xR70x08x");
	create_strlit	(0X7D049CBB,	0X7D049CC0);
	set_name	(0X7D049CBB,	"aCore");
	create_strlit	(0X7D049CC0,	0X7D049CCC);
	set_name	(0X7D049CC0,	"aCallStack");
	create_strlit	(0X7D049CCC,	0X7D049CD7);
	set_name	(0X7D049CCC,	"aPc0x08x");
	create_strlit	(0X7D049CD7,	0X7D049CF4);
	set_name	(0X7D049CD7,	"aCoreArchArmKer_2");
	create_strlit	(0X7D049CF4,	0X7D049D1E);
	set_name	(0X7D049CF4,	"aAbortAbortInAb");
	create_strlit	(0X7D049D1E,	0X7D049D41);
	set_name	(0X7D049D1E,	"aAbortUndefined");
	create_strlit	(0X7D049D41,	0X7D049D67);
	set_name	(0X7D049D41,	"aAbortAlignemen");
	create_strlit	(0X7D049D67,	0X7D049D8D);
	set_name	(0X7D049D67,	"aAbortAccessBit");
	create_strlit	(0X7D049D8D,	0X7D049DA6);
	set_name	(0X7D049D8D,	"aUnhandledPagea");
	create_strlit	(0X7D049DA6,	0X7D049DAE);
	set_name	(0X7D049DA6,	"aUserTa");
	create_strlit	(0X7D049DAE,	0X7D049DC1);
	set_name	(0X7D049DAE,	"aHandleUserTaVf");
	create_strlit	(0X7D049DC1,	0X7D049DD0);
	set_name	(0X7D049DC1,	"aGetFaultType");
	create_strlit	(0X7D049DD0,	0X7D049DD9);
	set_name	(0X7D049DD0,	"aTeeCore");
	create_strlit	(0X7D049DD9,	0X7D049DE7);
	set_name	(0X7D049DD9,	"aMutexDestroy");
	create_strlit	(0X7D049DE7,	0X7D049DF7);
	set_name	(0X7D049DE7,	"aCondvarDestroy");
	create_strlit	(0X7D049DF7,	0X7D049E14);
	set_name	(0X7D049DF7,	"aCoreArchArmKer_0");
	create_strlit	(0X7D049E14,	0X7D049E28);
	set_name	(0X7D049E14,	"aWaitqueueNotEm");
	create_strlit	(0X7D049E28,	0X7D049E36);
	set_name	(0X7D049E28,	"aInvalidMutex");
	create_strlit	(0X7D049E36,	0X7D049E45);
	set_name	(0X7D049E36,	"aMutexUnlock");
	create_strlit	(0X7D049E45,	0X7D049E54);
	set_name	(0X7D049E45,	"aCondvarWait");
	create_strlit	(0X7D049E54,	0X7D049E5D);
	set_name	(0X7D049E54,	"aPmPanic");
	create_strlit	(0X7D049E5D,	0X7D049E7D);
	set_name	(0X7D049E5D,	"aCoreArchArmKer_3");
	create_strlit	(0X7D049E7D,	0X7D049E90);
	set_name	(0X7D049E7D,	"aInitializingS");
	create_strlit	(0X7D049E90,	0X7D049EB4);
	set_name	(0X7D049E90,	"aCoreArchArmKer_1");
	create_strlit	(0X7D049EB4,	0X7D049EC8);
	set_name	(0X7D049EB4,	"aInitPrimaryHel");
	create_strlit	(0X7D049EC8,	0X7D049ED5);
	set_name	(0X7D049EC8,	"aImageEncKeyfwI");
	create_strlit	(0X7D049ED5,	0X7D049EE5);
	set_name	(0X7D049ED5,	"aFwImageVerify");
	create_strlit	(0X7D049EE5,	0X7D049EFE);
	set_name	(0X7D049EE5,	"aTeeCoreCcKeyGe");
	create_byte	(0X7D049EFE);
	make_array	(0X7D049EFE,	0X220);
	set_name	(0X7D049EFE,	"prak_key");
	create_byte	(0X7D04A11E);
	make_array	(0X7D04A11E,	0X220);
	set_name	(0X7D04A11E,	"PRAK_key");
	create_strlit	(0X7D04A33E,	0X7D04A361);
	set_name	(0X7D04A33E,	"aTaKeyderivatio");
	create_strlit	(0X7D04A361,	0X7D04A385);
	set_name	(0X7D04A361,	"aChunkNumDIsNot");
	create_strlit	(0X7D04A385,	0X7D04A3A7);
	set_name	(0X7D04A385,	"aTooManyChunksD");
	create_strlit	(0X7D04A3A7,	0X7D04A3C3);
	set_name	(0X7D04A3A7,	"aFailedToVerify");
	create_strlit	(0X7D04A3C3,	0X7D04A3D7);
	set_name	(0X7D04A3C3,	"aCryptoAlgoMapp");
	create_strlit	(0X7D04A3D7,	0X7D04A3E7);
	set_name	(0X7D04A3D7,	"aCryptoIsNull");
	create_strlit	(0X7D04A3E7,	0X7D04A404);
	set_name	(0X7D04A3E7,	"aOpTeeOnlySuppo");
	create_strlit	(0X7D04A404,	0X7D04A41B);
	set_name	(0X7D04A404,	"aAlgo0xXNotSupp");
	create_strlit	(0X7D04A41B,	0X7D04A438);
	set_name	(0X7D04A41B,	"aAlgo0xXMapToTe");
	create_strlit	(0X7D04A438,	0X7D04A444);
	set_name	(0X7D04A438,	"aCryptoInit");
	create_strlit	(0X7D04A444,	0X7D04A45F);
	set_name	(0X7D04A444,	"aNoKeySlotForId");
	create_strlit	(0X7D04A45F,	0X7D04A46E);
	set_name	(0X7D04A45F,	"aKeymgrAddKey");
	create_strlit	(0X7D04A46E,	0X7D04A489);
	set_name	(0X7D04A46E,	"aSUnsupportedId");
	create_strlit	(0X7D04A489,	0X7D04A49B);
	set_name	(0X7D04A489,	"aKeymgrInjectKe");
	create_strlit	(0X7D04A49B,	0X7D04A4B0);
	set_name	(0X7D04A49B,	"aImageVerifyPay");
	create_strlit	(0X7D04A4B0,	0X7D04A4BB);
	set_name	(0X7D04A4B0,	"aChunkLoad");
	create_strlit	(0X7D04A4BB,	0X7D04A4D2);
	set_name	(0X7D04A4BB,	"aCleanL1Failed0");
	create_strlit	(0X7D04A4D2,	0X7D04A4E9);
	set_name	(0X7D04A4D2,	"aFlushL1Failed0");
	create_strlit	(0X7D04A4E9,	0X7D04A506);
	set_name	(0X7D04A4E9,	"aFailedToInitia");
	create_strlit	(0X7D04A506,	0X7D04A51F);
	set_name	(0X7D04A506,	"aFailedToDecryp");
	create_strlit	(0X7D04A51F,	0X7D04A54C);
	set_name	(0X7D04A51F,	"aFailedToVerify_0");
	create_strlit	(0X7D04A54C,	0X7D04A566);
	set_name	(0X7D04A54C,	"aFailedToCalcul");
	create_strlit	(0X7D04A566,	0X7D04A590);
	set_name	(0X7D04A566,	"aFailedPayloadD");
	create_strlit	(0X7D04A590,	0X7D04A5B2);
	set_name	(0X7D04A590,	"aTypeDoesTMatch");
	create_strlit	(0X7D04A5B2,	0X7D04A5CC);
	set_name	(0X7D04A5B2,	"aTooShortImageS");
	create_strlit	(0X7D04A5CC,	0X7D04A5EE);
	set_name	(0X7D04A5CC,	"aNameDoesTMatch");
	create_strlit	(0X7D04A5EE,	0X7D04A617);
	set_name	(0X7D04A5EE,	"aCanNotSupportC");
	create_strlit	(0X7D04A617,	0X7D04A63F);
	set_name	(0X7D04A617,	"aCanNotSupportP");
	create_strlit	(0X7D04A63F,	0X7D04A657);
	set_name	(0X7D04A63F,	"aChecksumVerify");
	create_strlit	(0X7D04A657,	0X7D04A677);
	set_name	(0X7D04A657,	"aFailedToGetAut");
	create_strlit	(0X7D04A677,	0X7D04A68C);
	set_name	(0X7D04A677,	"aNotSupportRomK");
	create_strlit	(0X7D04A68C,	0X7D04A6A8);
	set_name	(0X7D04A68C,	"aFailedToCalcul_0");
	create_strlit	(0X7D04A6A8,	0X7D04A6C2);
	set_name	(0X7D04A6A8,	"aFailedToAuthTh");
	create_strlit	(0X7D04A6C2,	0X7D04A6E4);
	set_name	(0X7D04A6C2,	"aFailedToGetEnc");
	create_strlit	(0X7D04A6E4,	0X7D04A704);
	set_name	(0X7D04A6E4,	"aFailedToDecryp_0");
	create_strlit	(0X7D04A704,	0X7D04A725);
	set_name	(0X7D04A704,	"aFailedToVerify_1");
	create_strlit	(0X7D04A725,	0X7D04A747);
	set_name	(0X7D04A725,	"aFailedToDecryp_1");
	create_strlit	(0X7D04A747,	0X7D04A765);
	set_name	(0X7D04A747,	"aFailedToLoadCl");
	create_strlit	(0X7D04A765,	0X7D04A779);
	set_name	(0X7D04A765,	"aImageVerifyCom");
	create_strlit	(0X7D04A779,	0X7D04A78F);
	set_name	(0X7D04A779,	"aImageVerifyChe");
	create_strlit	(0X7D04A78F,	0X7D04A7A5);
	set_name	(0X7D04A78F,	"aImageExtractPa");
	create_strlit	(0X7D04A7A5,	0X7D04A7B9);
	set_name	(0X7D04A7A5,	"aImageVerifyHea");
	create_strlit	(0X7D04A7B9,	0X7D04A7CF);
	set_name	(0X7D04A7B9,	"aImageDecryptPa");
	create_strlit	(0X7D04A7CF,	0X7D04A7E3);
	set_name	(0X7D04A7CF,	"aImageVerifyDig");
	create_strlit	(0X7D04A7E3,	0X7D04A7F0);
	set_name	(0X7D04A7E3,	"aTypeToAttr");
	create_strlit	(0X7D04A7F0,	0X7D04A805);
	set_name	(0X7D04A7F0,	"aCoreTlbMainten");
	create_strlit	(0X7D04A805,	0X7D04A821);
	set_name	(0X7D04A805,	"aCoreArchArmMmC");
	create_strlit	(0X7D04A821,	0X7D04A82E);
	set_name	(0X7D04A821,	"aInvalidType");
	create_strlit	(0X7D04A82E,	0X7D04A855);
	set_name	(0X7D04A82E,	"aInvalidMemoryA");
	create_strlit	(0X7D04A855,	0X7D04A878);
	set_name	(0X7D04A855,	"aOutOfEntriesZu");
	create_strlit	(0X7D04A878,	0X7D04A899);
	set_name	(0X7D04A878,	"aTeeRamCanTFitI");
	create_strlit	(0X7D04A899,	0X7D04A8B9);
	set_name	(0X7D04A899,	"aTaRamCanTFitIn");
	create_strlit	(0X7D04A8B9,	0X7D04A8D9);
	set_name	(0X7D04A8B9,	"aNsShmCanTFitIn");
	create_strlit	(0X7D04A8D9,	0X7D04A8ED);
	set_name	(0X7D04A8D9,	"aUhandledMemtyp");
	create_strlit	(0X7D04A8ED,	0X7D04A909);
	set_name	(0X7D04A8ED,	"aMandatoryAreaS");
	create_strlit	(0X7D04A909,	0X7D04A932);
	set_name	(0X7D04A909,	"aTlbInvSecureMv");
	create_strlit	(0X7D04A932,	0X7D04A942);
	set_name	(0X7D04A932,	"aCfgShmemStart");
	create_strlit	(0X7D04A942,	0X7D04A953);
	set_name	(0X7D04A942,	"aCfgTaRamStart");
	create_strlit	(0X7D04A953,	0X7D04A965);
	set_name	(0X7D04A953,	"aCfgTeeRamStart");
	create_strlit	(0X7D04A965,	0X7D04A972);
	set_name	(0X7D04A965,	"aAddPhysMem");
	create_strlit	(0X7D04A972,	0X7D04A984);
	set_name	(0X7D04A972,	"aCoreInitMmuMap");
	create_strlit	(0X7D04A984,	0X7D04A9A2);
	set_name	(0X7D04A984,	"aZuPageTablesNo");
	create_strlit	(0X7D04A9A2,	0X7D04A9BD);
	set_name	(0X7D04A9A2,	"aCoreArchArmMmT");
	create_strlit	(0X7D04A9BD,	0X7D04A9CA);
	set_name	(0X7D04A9BD,	"aInvalidSize");
	create_strlit	(0X7D04A9CA,	0X7D04A9D9);
	set_name	(0X7D04A9CA,	"aInvalidTaRam");
	create_strlit	(0X7D04A9D9,	0X7D04A9EE);
	set_name	(0X7D04A9D9,	"aTaRamIsNotSecu");
	create_strlit	(0X7D04A9EE,	0X7D04AA07);
	set_name	(0X7D04A9EE,	"aTaRamPoolIsNot");
	create_strlit	(0X7D04AA07,	0X7D04AA17);
	set_name	(0X7D04AA07,	"aInvalidPubRam");
	create_strlit	(0X7D04AA17,	0X7D04AA31);
	set_name	(0X7D04AA17,	"aPubRamIsNotNon");
	create_strlit	(0X7D04AA31,	0X7D04AA41);
	set_name	(0X7D04AA31,	"aCannotGetAttr");
	create_strlit	(0X7D04AA41,	0X7D04AA51);
	set_name	(0X7D04AA41,	"aCheckPgtAvail");
	create_strlit	(0X7D04AA51,	0X7D04AA67);
	set_name	(0X7D04AA51,	"aTeeMmuGetLoadA");
	create_strlit	(0X7D04AA67,	0X7D04AA7B);
	set_name	(0X7D04AA67,	"aTeecoreInitTaR");
	create_strlit	(0X7D04AA7B,	0X7D04AA90);
	set_name	(0X7D04AA7B,	"aTeecoreInitPub");
	create_strlit	(0X7D04AA90,	0X7D04AAAC);
	set_name	(0X7D04AA90,	"aTeeMmuUserGetC");
	create_strlit	(0X7D04AAAC,	0X7D04AAB8);
	set_name	(0X7D04AAAC,	"aMapMemarea");
	create_strlit	(0X7D04AAB8,	0X7D04AAC9);
	set_name	(0X7D04AAB8,	"aMapPageMemarea");
	create_strlit	(0X7D04AAC9,	0X7D04AAE1);
	set_name	(0X7D04AAC9,	"aCoreMmuGetUl1T");
	create_strlit	(0X7D04AAE1,	0X7D04AB00);
	set_name	(0X7D04AAE1,	"aCoreArchArmMmC_0");
	create_strlit	(0X7D04AB00,	0X7D04AB16);
	set_name	(0X7D04AB00,	"aInvalidUserL1T");
	create_strlit	(0X7D04AB16,	0X7D04AB38);
	set_name	(0X7D04AB16,	"aVaConflictsWit");
	create_strlit	(0X7D04AB38,	0X7D04AB50);
	set_name	(0X7D04AB38,	"aMemareaCanTBeM");
	create_strlit	(0X7D04AB50,	0X7D04AB5C);
	set_name	(0X7D04AB50,	"aNoL2Table");
	create_strlit	(0X7D04AB5C,	0X7D04AB68);
	set_name	(0X7D04AB5C,	"aTeeMmFree");
	create_strlit	(0X7D04AB68,	0X7D04AB82);
	set_name	(0X7D04AB68,	"aCoreArchArmMmT_0");
	create_strlit	(0X7D04AB82,	0X7D04AB8F);
	set_name	(0X7D04AB82,	"aInvalidPool");
	create_strlit	(0X7D04AB8F,	0X7D04ABA0);
	set_name	(0X7D04AB8F,	"aInvalidMmEntry");
	create_strlit	(0X7D04ABA0,	0X7D04ABAD);
	set_name	(0X7D04ABA0,	"aTeeMmAlloc");
	create_strlit	(0X7D04ABAD,	0X7D04ABE0);
	set_name	(0X7D04ABAD,	"aTaPanickedWith");
	create_strlit	(0X7D04ABE0,	0X7D04ABFA);
	set_name	(0X7D04ABE0,	"aTeeSvcSysRetur");
	create_strlit	(0X7D04ABFA,	0X7D04AC08);
	set_name	(0X7D04ABFA,	"aTeeEntryStd");
	create_strlit	(0X7D04AC08,	0X7D04AC1B);
	set_name	(0X7D04AC08,	"aUnknownSmc0xLl");
	create_strlit	(0X7D04AC1B,	0X7D04AC31);
	set_name	(0X7D04AC1B,	"aBadArgAddress0");
	create_strlit	(0X7D04AC31,	0X7D04AC43);
	set_name	(0X7D04AC31,	"aUnknownCmd0xX");
	create_strlit	(0X7D04AC43,	0X7D04AC52);
	set_name	(0X7D04AC43,	"aCallInitcalls");
	create_strlit	(0X7D04AC52,	0X7D04AC6E);
	set_name	(0X7D04AC52,	"aInitialCall0x0");
	create_strlit	(0X7D04AC6E,	0X7D04AC84);
	set_name	(0X7D04AC6E,	"aUnexpectedPara");
	create_strlit	(0X7D04AC84,	0X7D04AC96);
	set_name	(0X7D04AC84,	"aStaSelfTestsTa");
	create_strlit	(0X7D04AC96,	0X7D04ACA8);
	set_name	(0X7D04AC96,	"aTestEntryParam");
	create_strlit	(0X7D04ACA8,	0X7D04ACB8);
	set_name	(0X7D04ACA8,	"aCoreSelfTests");
	create_strlit	(0X7D04ACB8,	0X7D04ACEF);
	set_name	(0X7D04ACB8,	"aSomeSelfTestXx");
	create_strlit	(0X7D04ACEF,	0X7D04ACFD);
	set_name	(0X7D04ACEF,	"aMainInitGic");
	create_strlit	(0X7D04ACFD,	0X7D04AD1D);
	set_name	(0X7D04ACFD,	"aCoreArchArmPla");
	create_byte	(0X7D04AD1D);
	create_strlit	(0X7D04AD1E,	0X7D04AD44);
	set_name	(0X7D04AD1E,	"aPteeV0001Jan22");
	create_strlit	(0X7D04AD44,	0X7D04AD51);
	set_name	(0X7D04AD44,	"aSysRamBase");
	create_strlit	(0X7D04AD51,	0X7D04AD61);
	set_name	(0X7D04AD51,	"aIonMemoryBase");
	create_strlit	(0X7D04AD61,	0X7D04AD71);
	set_name	(0X7D04AD61,	"aDspExtPriMem");
	create_strlit	(0X7D04AD71,	0X7D04AD85);
	set_name	(0X7D04AD71,	"aA7DdrcTzasc0Ba");
	create_strlit	(0X7D04AD85,	0X7D04AD9E);
	set_name	(0X7D04AD85,	"aA7PeriSecTeeCf");
	create_strlit	(0X7D04AD9E,	0X7D04ADB3);
	set_name	(0X7D04AD9E,	"aA7CsVideoEncBa");
	create_strlit	(0X7D04ADB3,	0X7D04ADCA);
	set_name	(0X7D04ADB3,	"aA7CsIspAesCfgB");
	create_strlit	(0X7D04ADCA,	0X7D04ADDE);
	set_name	(0X7D04ADCA,	"aA7PeriSecScBas");
	create_strlit	(0X7D04ADDE,	0X7D04ADF2);
	set_name	(0X7D04ADDE,	"aA7AcpuScCrgBas");
	create_strlit	(0X7D04ADF2,	0X7D04ADFB);
	set_name	(0X7D04ADF2,	"aGicBase");
	create_strlit	(0X7D04ADFB,	0X7D04AE0F);
	set_name	(0X7D04ADFB,	"aA7PeriScCrgBas");
	create_strlit	(0X7D04AE0F,	0X7D04AE21);
	set_name	(0X7D04AE0F,	"aConsoleUartBas");
	create_strlit	(0X7D04AE21,	0X7D04AE2A);
	set_name	(0X7D04AE21,	"aMainFiq");
	create_strlit	(0X7D04AE2A,	0X7D04AE31);
	set_name	(0X7D04AE2A,	"aOnline");
	create_strlit	(0X7D04AE31,	0X7D04AE39);
	set_name	(0X7D04AE31,	"aOffline");
	create_strlit	(0X7D04AE39,	0X7D04AE47);
	set_name	(0X7D04AE39,	"aCpuDIsS");
	create_strlit	(0X7D04AE47,	0X7D04AE5B);
	set_name	(0X7D04AE47,	"aEagleSystemRes");
	create_strlit	(0X7D04AE5B,	0X7D04AE6F);
	set_name	(0X7D04AE5B,	"a0xXNotSupporte");
	create_strlit	(0X7D04AE6F,	0X7D04AE7F);
	set_name	(0X7D04AE6F,	"aPmSystemReset");
	create_strlit	(0X7D04AE7F,	0X7D04AE90);
	set_name	(0X7D04AE7F,	"aPsciSmcHandler");
	create_strlit	(0X7D04AE90,	0X7D04AEA0);
	set_name	(0X7D04AE90,	"aTeeTaSetBusy");
	create_strlit	(0X7D04AEA0,	0X7D04AEB3);
	set_name	(0X7D04AEA0,	"aUpdateCurrentC");
	create_strlit	(0X7D04AEB3,	0X7D04AEC8);
	set_name	(0X7D04AEB3,	"aTeeTaCloseSess");
	create_strlit	(0X7D04AEC8,	0X7D04AEE5);
	set_name	(0X7D04AEC8,	"aCoreKernelTeeT");
	create_strlit	(0X7D04AEE5,	0X7D04AEFF);
	set_name	(0X7D04AEE5,	"aUnexpectedActi");
	create_strlit	(0X7D04AEFF,	0X7D04AF28);
	set_name	(0X7D04AEFF,	"aSession0xLxToB");
	create_strlit	(0X7D04AF28,	0X7D04AF42);
	set_name	(0X7D04AF28,	"aFailedReturnEr");
	create_strlit	(0X7D04AF42,	0X7D04AF4B);
	set_name	(0X7D04AF42,	"aActive");
	create_strlit	(0X7D04AF4B,	0X7D04AF78);
	set_name	(0X7D04AF4B,	"aNoValidSession");
	create_strlit	(0X7D04AF78,	0X7D04AF92);
	set_name	(0X7D04AF78,	"aStatusOfTaPulP");
	create_strlit	(0X7D04AF92,	0X7D04AFA6);
	set_name	(0X7D04AF92,	"aTeeTaOpenSessi");
	create_strlit	(0X7D04AFA6,	0X7D04AFBA);
	set_name	(0X7D04AFA6,	"aTeeTaDumpCurre");
	create_strlit	(0X7D04AFBA,	0X7D04AFBD);
	create_strlit	(0X7D04AFBD,	0X7D04AFBF);
	create_strlit	(0X7D04AFBF,	0X7D04AFC1);
	create_strlit	(0X7D04AFC1,	0X7D04AFC3);
	create_strlit	(0X7D04AFC3,	0X7D04AFC9);
	set_name	(0X7D04AFC3,	"aPanic");
	create_strlit	(0X7D04AFC9,	0X7D04AFE5);
	set_name	(0X7D04AFC9,	"aPanicSSSatSDSS");
	create_strlit	(0X7D04AFE5,	0X7D04AFF6);
	set_name	(0X7D04AFE5,	"fw_manufacturer");
	create_strlit	(0X7D04AFF6,	0X7D04B002);
	set_name	(0X7D04AFF6,	"api_vers");
	create_strlit	(0X7D04B002,	0X7D04B007);
	set_name	(0X7D04B002,	"aS_1");
	create_strlit	(0X7D04B007,	0X7D04B01A);
	set_name	(0X7D04B007,	"aGpdTeeApiversi");
	create_strlit	(0X7D04B01A,	0X7D04B02E);
	set_name	(0X7D04B01A,	"aGpdTeeDescript");
	create_strlit	(0X7D04B02E,	0X7D04B03F);
	set_name	(0X7D04B02E,	"aGpdTeeDeviceid");
	create_strlit	(0X7D04B03F,	0X7D04B062);
	set_name	(0X7D04B03F,	"aGpdTeeSystemti");
	create_strlit	(0X7D04B062,	0X7D04B08B);
	set_name	(0X7D04B062,	"aGpdTeeTapersis");
	create_strlit	(0X7D04B08B,	0X7D04B0A4);
	set_name	(0X7D04B08B,	"aGpdTeeCryptogr");
	create_strlit	(0X7D04B0A4,	0X7D04B0D8);
	set_name	(0X7D04B0A4,	"aGpdTeeTrusteds");
	create_strlit	(0X7D04B0D8,	0X7D04B101);
	set_name	(0X7D04B0D8,	"aGpdTeeTrustedo");
	create_strlit	(0X7D04B101,	0X7D04B130);
	set_name	(0X7D04B101,	"aGpdTeeTrustedo_0");
	create_strlit	(0X7D04B130,	0X7D04B14F);
	set_name	(0X7D04B130,	"aGpdTeeTrustedo_1");
	create_strlit	(0X7D04B14F,	0X7D04B177);
	set_name	(0X7D04B14F,	"aGpdTeeFirmware");
	create_strlit	(0X7D04B177,	0X7D04B1A5);
	set_name	(0X7D04B177,	"aGpdTeeFirmware_0");
	create_strlit	(0X7D04B1A5,	0X7D04B1C3);
	set_name	(0X7D04B1A5,	"aGpdTeeFirmware_1");
	create_strlit	(0X7D04B1C3,	0X7D04B1D0);
	set_name	(0X7D04B1C3,	"aGpdTaAppid");
	create_strlit	(0X7D04B1D0,	0X7D04B1E4);
	set_name	(0X7D04B1D0,	"aGpdClientIdent");
	create_strlit	(0X7D04B1E4,	0X7D04B1F6);
	set_name	(0X7D04B1E4,	"trustedos_impl_version");
	create_strlit	(0X7D04B1F6,	0X7D04B204);
	set_name	(0X7D04B1F6,	"fw_impl_version");
	create_strlit	(0X7D04B204,	0X7D04B20B);
	set_name	(0X7D04B204,	"trustedos_manufacturer");
	create_strlit	(0X7D04B20B,	0X7D04B211);
	set_name	(0X7D04B20B,	"descr");
	create_strlit	(0X7D04B211,	0X7D04B22B);
	set_name	(0X7D04B211,	"aSyscallUnrdAll_0");
	create_strlit	(0X7D04B22B,	0X7D04B247);
	set_name	(0X7D04B22B,	"aSyscallUnrdRel_0");
	create_strlit	(0X7D04B247,	0X7D04B25F);
	set_name	(0X7D04B247,	"aSyscallUnrdSet_0");
	create_strlit	(0X7D04B25F,	0X7D04B272);
	set_name	(0X7D04B25F,	"aSyscallRpmbWri");
	create_strlit	(0X7D04B272,	0X7D04B284);
	set_name	(0X7D04B272,	"aSyscallRpmbRea");
	create_strlit	(0X7D04B284,	0X7D04B29D);
	set_name	(0X7D04B284,	"aGetlcsReturnWi");
	create_strlit	(0X7D04B29D,	0X7D04B2BF);
	set_name	(0X7D04B29D,	"aRpmbKeyInjectR");
	create_strlit	(0X7D04B2BF,	0X7D04B2E3);
	set_name	(0X7D04B2BF,	"aSyscallUnrdOpe");
	create_strlit	(0X7D04B2E3,	0X7D04B308);
	set_name	(0X7D04B2E3,	"aSyscallUnrdClo");
	create_strlit	(0X7D04B308,	0X7D04B334);
	set_name	(0X7D04B308,	"aSyscallUnrdAll");
	create_strlit	(0X7D04B334,	0X7D04B362);
	set_name	(0X7D04B334,	"aSyscallUnrdRel");
	create_strlit	(0X7D04B362,	0X7D04B38C);
	set_name	(0X7D04B362,	"aSyscallUnrdSet");
	create_strlit	(0X7D04B38C,	0X7D04B3B6);
	set_name	(0X7D04B38C,	"aSyscallUnrdGet");
	create_strlit	(0X7D04B3B6,	0X7D04B3DB);
	set_name	(0X7D04B3B6,	"aSyscallUnrdFlu");
	create_strlit	(0X7D04B3DB,	0X7D04B3F5);
	set_name	(0X7D04B3DB,	"aSyscallCryptoc");
	create_strlit	(0X7D04B3F5,	0X7D04B40D);
	set_name	(0X7D04B3F5,	"aSyscallRpmbKey");
	create_strlit	(0X7D04B40D,	0X7D04B41F);
	set_name	(0X7D04B40D,	"aSyscallUnrdOpe_0");
	create_strlit	(0X7D04B41F,	0X7D04B437);
	set_name	(0X7D04B41F,	"aSyscallUnrdGet_0");
	create_strlit	(0X7D04B437,	0X7D04B44A);
	set_name	(0X7D04B437,	"aSyscallUnrdClo_0");
	create_strlit	(0X7D04B44A,	0X7D04B45D);
	set_name	(0X7D04B44A,	"aSyscallUnrdFlu_0");
	create_strlit	(0X7D04B45D,	0X7D04B476);
	set_name	(0X7D04B45D,	"aSyscallStorage_0");
	create_strlit	(0X7D04B476,	0X7D04B490);
	set_name	(0X7D04B476,	"aTeeSvcStorageR");
	create_byte	(0X7D04B490);
	make_array	(0X7D04B490,	0X3);
	set_name	(0X7D04B490,	"tee_svc_storage_conv_whence_arr");
	create_strlit	(0X7D04B493,	0X7D04B4A1);
	set_name	(0X7D04B493,	"aHeadCorrupt");
	create_strlit	(0X7D04B4A1,	0X7D04B4B1);
	set_name	(0X7D04B4A1,	"aObjectCorrupt");
	create_strlit	(0X7D04B4B1,	0X7D04B4C0);
	set_name	(0X7D04B4B1,	"aErrorCodeX");
	create_strlit	(0X7D04B4C0,	0X7D04B4DA);
	set_name	(0X7D04B4C0,	"aSyscallStorage_1");
	create_strlit	(0X7D04B4DA,	0X7D04B4F3);
	set_name	(0X7D04B4DA,	"aSyscallStorage");
	create_strlit	(0X7D04B4F3,	0X7D04B501);
	set_name	(0X7D04B4F3,	"aRpmbFsWrite");
	create_strlit	(0X7D04B501,	0X7D04B512);
	set_name	(0X7D04B501,	"aTeeRpmbKeyGen");
	create_strlit	(0X7D04B512,	0X7D04B520);
	set_name	(0X7D04B512,	"aRpmbFsLseek");
	create_strlit	(0X7D04B520,	0X7D04B537);
	set_name	(0X7D04B520,	"aCoreTeeTeeRpmb");
	create_strlit	(0X7D04B537,	0X7D04B54E);
	set_name	(0X7D04B537,	"aInvalidSizeOrO");
	create_strlit	(0X7D04B54E,	0X7D04B573);
	set_name	(0X7D04B54E,	"aSasiUtilderive");
	create_strlit	(0X7D04B573,	0X7D04B59C);
	set_name	(0X7D04B573,	"aPositionIsBeyo");
	create_strlit	(0X7D04B59C,	0X7D04B5B4);
	set_name	(0X7D04B59C,	"aInvalidLastEnt");
	create_strlit	(0X7D04B5B4,	0X7D04B5D2);
	set_name	(0X7D04B5B4,	"aRpmbKeyInjectF");
	create_strlit	(0X7D04B5D2,	0X7D04B5E2);
	set_name	(0X7D04B5D2,	"aRpmbKeyInject");
	create_strlit	(0X7D04B5E2,	0X7D04B5EA);
	set_name	(0X7D04B5E2,	"aDecrypt");
	create_strlit	(0X7D04B5EA,	0X7D04B5EE);
	set_name	(0X7D04B5EA,	"aBeef");
	create_strlit	(0X7D04B5EE,	0X7D04B602);
	set_name	(0X7D04B5EE,	"aOnlyForTeeFsSs");
	create_strlit	(0X7D04B602,	0X7D04B611);
	set_name	(0X7D04B602,	"aTeeObjVerify");
	create_strlit	(0X7D04B611,	0X7D04B624);
	set_name	(0X7D04B611,	"aCoreDriversGic");
	create_strlit	(0X7D04B624,	0X7D04B62F);
	set_name	(0X7D04B624,	"aGicOpAdd");
	create_strlit	(0X7D04B62F,	0X7D04B63D);
	set_name	(0X7D04B62F,	"aGicOpEnable");
	create_strlit	(0X7D04B63D,	0X7D04B64C);
	set_name	(0X7D04B63D,	"aGicOpDisable");
	create_strlit	(0X7D04B64C,	0X7D04B65E);
	set_name	(0X7D04B64C,	"aDspDdmaTransfe");
	create_strlit	(0X7D04B65E,	0X7D04B66D);
	set_name	(0X7D04B65E,	"aDspChunkLoad");
	create_strlit	(0X7D04B66D,	0X7D04B68C);
	set_name	(0X7D04B66D,	"aExpectingSrcPI");
	create_strlit	(0X7D04B68C,	0X7D04B6AF);
	set_name	(0X7D04B68C,	"aFlushDcacheAre");
	create_strlit	(0X7D04B6AF,	0X7D04B6C8);
	set_name	(0X7D04B6AF,	"aDspDDmaCheckFa");
	create_strlit	(0X7D04B6C8,	0X7D04B6D5);
	set_name	(0X7D04B6C8,	"aDspBaseRam");
	create_strlit	(0X7D04B6D5,	0X7D04B6E1);
	set_name	(0X7D04B6D5,	"aDspBaseIo");
	create_strlit	(0X7D04B6E1,	0X7D04B6F3);
	set_name	(0X7D04B6E1,	"aDspPdmaTransfe");
	create_byte	(0X7D04B6F3);
	make_array	(0X7D04B6F3,	0X100);
	set_name	(0X7D04B6F3,	"ta_pub_key_modulus");
	create_strlit	(0X7D04B7F3,	0X7D04B829);
	set_name	(0X7D04B7F3,	"a22052G85ddabf1");
	create_strlit	(0X7D04B829,	0X7D04B832);
	set_name	(0X7D04B829,	"aTagErr");
	create_strlit	(0X7D04B832,	0X7D04B842);
	set_name	(0X7D04B832,	"aValueOverflow");
	create_strlit	(0X7D04B842,	0X7D04B84C);
	set_name	(0X7D04B842,	"aItemErr");
	create_strlit	(0X7D04B84C,	0X7D04B85F);
	set_name	(0X7D04B84C,	"aErrInSetBinary");
	create_strlit	(0X7D04B85F,	0X7D04B872);
	set_name	(0X7D04B85F,	"aErrInGetBinary");
	create_strlit	(0X7D04B872,	0X7D04B881);
	set_name	(0X7D04B872,	"aNullInFlush");
	create_strlit	(0X7D04B881,	0X7D04B899);
	set_name	(0X7D04B881,	"aUserHandleIsIn");
	create_strlit	(0X7D04B899,	0X7D04B8A8);
	set_name	(0X7D04B899,	"aNullInClear");
	create_strlit	(0X7D04B8A8,	0X7D04B8BD);
	set_name	(0X7D04B8A8,	"aUserHandleInva");
	create_strlit	(0X7D04B8BD,	0X7D04B8CD);
	set_name	(0X7D04B8BD,	"aNullInDelete");
	create_strlit	(0X7D04B8CD,	0X7D04B8E3);
	set_name	(0X7D04B8CD,	"aNullInAllocHan");
	create_strlit	(0X7D04B8E3,	0X7D04B8F7);
	set_name	(0X7D04B8E3,	"aReadContextFai");
	create_strlit	(0X7D04B8F7,	0X7D04B909);
	set_name	(0X7D04B8F7,	"aUnrdAllocHandl");
	create_strlit	(0X7D04B909,	0X7D04B91D);
	set_name	(0X7D04B909,	"aUnrdReleaseHan");
	create_strlit	(0X7D04B91D,	0X7D04B92D);
	set_name	(0X7D04B91D,	"aUnrdSetBinary");
	create_strlit	(0X7D04B92D,	0X7D04B938);
	set_name	(0X7D04B92D,	"aUnrdFlush");
	create_strlit	(0X7D04B938,	0X7D04B948);
	set_name	(0X7D04B938,	"aUnrdGetBinary");
	create_strlit	(0X7D04B948,	0X7D04B95E);
	set_name	(0X7D04B948,	"aUnrdSelectItem");
	create_strlit	(0X7D04B95E,	0X7D04B96C);
	set_name	(0X7D04B95E,	"aUnrdGetItem");
	create_strlit	(0X7D04B96C,	0X7D04B979);
	set_name	(0X7D04B96C,	"aHsearchItem");
	create_strlit	(0X7D04B979,	0X7D04B98F);
	set_name	(0X7D04B979,	"aBuildDefaultCo_1");
	create_strlit	(0X7D04B98F,	0X7D04B9A2);
	set_name	(0X7D04B98F,	"aUnrdFlushConte");
	create_strlit	(0X7D04B9A2,	0X7D04B9AF);
	set_name	(0X7D04B9A2,	"aReadContext");
	create_strlit	(0X7D04B9AF,	0X7D04B9C6);
	set_name	(0X7D04B9AF,	"aIsContextItems");
	create_strlit	(0X7D04B9C6,	0X7D04B9D3);
	set_name	(0X7D04B9C6,	"aHdeleteItem");
	create_strlit	(0X7D04B9D3,	0X7D04B9E1);
	set_name	(0X7D04B9D3,	"aHeadIsNull");
	create_strlit	(0X7D04B9E1,	0X7D04B9E6);
	set_name	(0X7D04B9E1,	"aUnr0");
	create_strlit	(0X7D04B9E6,	0X7D04B9F2);
	set_name	(0X7D04B9E6,	"aHeaderErr");
	create_strlit	(0X7D04B9F2,	0X7D04BA02);
	set_name	(0X7D04B9F2,	"aHeaderCrcErr");
	create_strlit	(0X7D04BA02,	0X7D04BA14);
	set_name	(0X7D04BA02,	"aHeaderMagicErr");
	create_strlit	(0X7D04BA14,	0X7D04BA26);
	set_name	(0X7D04BA14,	"aHeadMagic0xX");
	create_strlit	(0X7D04BA26,	0X7D04BA34);
	set_name	(0X7D04BA26,	"aItemIsNull");
	create_strlit	(0X7D04BA34,	0X7D04BA4A);
	set_name	(0X7D04BA34,	"aNullInHsearchI");
	create_strlit	(0X7D04BA4A,	0X7D04BA5D);
	set_name	(0X7D04BA4A,	"aNullInMatchIte");
	create_strlit	(0X7D04BA5D,	0X7D04BA6C);
	set_name	(0X7D04BA5D,	"aDoNotSearch");
	create_strlit	(0X7D04BA6C,	0X7D04BA83);
	set_name	(0X7D04BA6C,	"aNullInItemComp");
	create_strlit	(0X7D04BA83,	0X7D04BA96);
	set_name	(0X7D04BA83,	"aGetOffsetFaile");
	create_strlit	(0X7D04BA96,	0X7D04BAAC);
	set_name	(0X7D04BA96,	"aNullInReadCont");
	create_strlit	(0X7D04BAAC,	0X7D04BAD4);
	set_name	(0X7D04BAAC,	"aReadHead1From0");
	create_strlit	(0X7D04BAD4,	0X7D04BAE3);
	set_name	(0X7D04BAD4,	"aHead1Invalid");
	create_strlit	(0X7D04BAE3,	0X7D04BB0B);
	set_name	(0X7D04BAE3,	"aReadHead2From0");
	create_strlit	(0X7D04BB0B,	0X7D04BB1A);
	set_name	(0X7D04BB0B,	"aHead2Invalid");
	create_strlit	(0X7D04BB1A,	0X7D04BB3A);
	set_name	(0X7D04BB1A,	"aBuildDefaultCo");
	create_strlit	(0X7D04BB3A,	0X7D04BB58);
	set_name	(0X7D04BB3A,	"aBuildDefaultCo_0");
	create_strlit	(0X7D04BB58,	0X7D04BB6B);
	set_name	(0X7D04BB58,	"aUnrddCurIsErr");
	create_strlit	(0X7D04BB6B,	0X7D04BB7A);
	set_name	(0X7D04BB6B,	"aContextEmpty");
	create_strlit	(0X7D04BB7A,	0X7D04BB93);
	set_name	(0X7D04BB7A,	"aMallocSize0xXF");
	create_strlit	(0X7D04BB93,	0X7D04BBBD);
	set_name	(0X7D04BB93,	"aReadContextFro");
	create_strlit	(0X7D04BBBD,	0X7D04BBCB);
	set_name	(0X7D04BBBD,	"aItemCrcErr");
	create_strlit	(0X7D04BBCB,	0X7D04BBE6);
	set_name	(0X7D04BBCB,	"aContextDItemsI");
	create_strlit	(0X7D04BBE6,	0X7D04BBF8);
	set_name	(0X7D04BBE6,	"aContextInvalid");
	create_strlit	(0X7D04BBF8,	0X7D04BC0E);
	set_name	(0X7D04BBF8,	"aNullInHdeleteI");
	create_strlit	(0X7D04BC0E,	0X7D04BC22);
	set_name	(0X7D04BC0E,	"aErrInDeleteIte");
	create_strlit	(0X7D04BC22,	0X7D04BC31);
	set_name	(0X7D04BC22,	"aNoMatchItem");
	create_strlit	(0X7D04BC31,	0X7D04BC45);
	set_name	(0X7D04BC31,	"aHandleIsInvali");
	create_strlit	(0X7D04BC45,	0X7D04BC50);
	set_name	(0X7D04BC45,	"aItemNull");
	create_strlit	(0X7D04BC50,	0X7D04BC65);
	set_name	(0X7D04BC50,	"aNullInGetVersi");
	create_strlit	(0X7D04BC65,	0X7D04BC77);
	set_name	(0X7D04BC65,	"aNullInGetItem");
	create_strlit	(0X7D04BC77,	0X7D04BC90);
	set_name	(0X7D04BC77,	"aNoMatchItemFou");
	create_strlit	(0X7D04BC90,	0X7D04BC9F);
	set_name	(0X7D04BC90,	"aItemSize0");
	create_strlit	(0X7D04BC9F,	0X7D04BCB1);
	set_name	(0X7D04BC9F,	"aNullInSetItem");
	create_strlit	(0X7D04BCB1,	0X7D04BCC3);
	set_name	(0X7D04BCB1,	"aContextOverflo");
	create_strlit	(0X7D04BCC3,	0X7D04BCDA);
	set_name	(0X7D04BCC3,	"aNullInClearCon");
	create_strlit	(0X7D04BCDA,	0X7D04BCF1);
	set_name	(0X7D04BCDA,	"aNullInFlushCon");
	create_strlit	(0X7D04BCF1,	0X7D04BD14);
	set_name	(0X7D04BCF1,	"aHeaderSizeErrI");
	create_strlit	(0X7D04BD14,	0X7D04BD37);
	set_name	(0X7D04BD14,	"aWriteFromDdrTo");
	create_strlit	(0X7D04BD37,	0X7D04BD4C);
	set_name	(0X7D04BD37,	"aNullInSetVersi");
	create_strlit	(0X7D04BD4C,	0X7D04BD5E);
	set_name	(0X7D04BD4C,	"aReadContextHea");
	create_strlit	(0X7D04BD5E,	0X7D04BD68);
	set_name	(0X7D04BD5E,	"aItemSize");
	create_strlit	(0X7D04BD68,	0X7D04BD77);
	set_name	(0X7D04BD68,	"aItemsComplete");
	create_strlit	(0X7D04BD77,	0X7D04BD85);
	set_name	(0X7D04BD77,	"aUnrdSetItem");
	create_strlit	(0X7D04BD85,	0X7D04BD9A);
	set_name	(0X7D04BD85,	"aUnrdGetHeadOff");
	create_strlit	(0X7D04BD9A,	0X7D04BDB0);
	set_name	(0X7D04BD9A,	"aIsContextHeadV");
	create_strlit	(0X7D04BDB0,	0X7D04BDBB);
	set_name	(0X7D04BDB0,	"aMatchItem");
	create_strlit	(0X7D04BDBB,	0X7D04BDC9);
	set_name	(0X7D04BDBB,	"aRsassaVerify");
	create_strlit	(0X7D04BDC9,	0X7D04BDDD);
	set_name	(0X7D04BDC9,	"aDoDhSharedSecr");
	create_strlit	(0X7D04BDDD,	0X7D04BDE8);
	set_name	(0X7D04BDDD,	"aEccVerify");
	create_strlit	(0X7D04BDE8,	0X7D04BE13);
	set_name	(0X7D04BDE8,	"aImportCryseccu");
	create_strlit	(0X7D04BE13,	0X7D04BE1F);
	set_name	(0X7D04BE13,	"aCipherInit");
	create_strlit	(0X7D04BE1F,	0X7D04BE2D);
	set_name	(0X7D04BE1F,	"aTeeSasiInit");
	create_strlit	(0X7D04BE2D,	0X7D04BE4D);
	set_name	(0X7D04BE2D,	"aBnAllocateOnPB");
	create_strlit	(0X7D04BE4D,	0X7D04BE6E);
	set_name	(0X7D04BE4D,	"aBnAllocateOnTm");
	create_strlit	(0X7D04BE6E,	0X7D04BE92);
	set_name	(0X7D04BE6E,	"aBnAllocateOnTm_0");
	create_strlit	(0X7D04BE92,	0X7D04BEB0);
	set_name	(0X7D04BE92,	"aBnAllocateOnPr");
	create_strlit	(0X7D04BEB0,	0X7D04BECE);
	set_name	(0X7D04BEB0,	"aBnAllocateOnPu");
	create_strlit	(0X7D04BECE,	0X7D04BEF5);
	set_name	(0X7D04BECE,	"aBnAllocateOnSh");
	create_strlit	(0X7D04BEF5,	0X7D04BF11);
	set_name	(0X7D04BEF5,	"aMpaGetOctStrFa_1");
	create_strlit	(0X7D04BF11,	0X7D04BF3A);
	set_name	(0X7D04BF11,	"aMpaGetOctStrFa_3");
	create_strlit	(0X7D04BF3A,	0X7D04BF5F);
	set_name	(0X7D04BF3A,	"aMpaGetOctStrFa_4");
	create_strlit	(0X7D04BF5F,	0X7D04BF89);
	set_name	(0X7D04BF5F,	"aCrysDhGetsecre");
	create_strlit	(0X7D04BF89,	0X7D04BFAA);
	set_name	(0X7D04BF89,	"aMpaSetOctStrFa_4");
	create_strlit	(0X7D04BFAA,	0X7D04BFC3);
	set_name	(0X7D04BFAA,	"aSDCrysRes0xX");
	create_strlit	(0X7D04BFC3,	0X7D04BFDA);
	set_name	(0X7D04BFC3,	"aSDCrysRes0xX_0");
	create_strlit	(0X7D04BFDA,	0X7D04BFFB);
	set_name	(0X7D04BFDA,	"aCrysHmacInitFa");
	create_strlit	(0X7D04BFFB,	0X7D04C03A);
	set_name	(0X7D04BFFB,	"aImportCryseccu_0");
	create_strlit	(0X7D04C03A,	0X7D04C073);
	set_name	(0X7D04C03A,	"aSasiGetHashInd");
	create_strlit	(0X7D04C073,	0X7D04C098);
	set_name	(0X7D04C073,	"aCrysEcdsaSignF");
	create_strlit	(0X7D04C098,	0X7D04C0C3);
	set_name	(0X7D04C098,	"aEccGetCrysDoma");
	create_strlit	(0X7D04C0C3,	0X7D04C0EF);
	set_name	(0X7D04C0C3,	"aMpaGetOctStrFa_5");
	create_strlit	(0X7D04C0EF,	0X7D04C10B);
	set_name	(0X7D04C0EF,	"aKeyXHasAnInval");
	create_strlit	(0X7D04C10B,	0X7D04C146);
	set_name	(0X7D04C10B,	"aMpaGetOctStrFa_6");
	create_strlit	(0X7D04C146,	0X7D04C16C);
	set_name	(0X7D04C146,	"aNumBytesKeyYDP");
	create_strlit	(0X7D04C16C,	0X7D04C188);
	set_name	(0X7D04C16C,	"aKeyYHasAnInval");
	create_strlit	(0X7D04C188,	0X7D04C1B4);
	set_name	(0X7D04C188,	"aDxEcpkiBuildpu");
	create_strlit	(0X7D04C1B4,	0X7D04C1F4);
	set_name	(0X7D04C1B4,	"aImportCryseccu_1");
	create_strlit	(0X7D04C1F4,	0X7D04C215);
	set_name	(0X7D04C1F4,	"aMpaGetOctStrFa");
	create_strlit	(0X7D04C215,	0X7D04C243);
	set_name	(0X7D04C215,	"aCrysEcpkiExpor");
	create_strlit	(0X7D04C243,	0X7D04C26F);
	set_name	(0X7D04C243,	"aMpaSetOctStrFa");
	create_strlit	(0X7D04C26F,	0X7D04C2AA);
	set_name	(0X7D04C26F,	"aMpaSetOctStrFa_0");
	create_strlit	(0X7D04C2AA,	0X7D04C2D2);
	set_name	(0X7D04C2AA,	"aMpaSetOctStrFa_1");
	create_strlit	(0X7D04C2D2,	0X7D04C2F2);
	set_name	(0X7D04C2D2,	"aBnAllocateOnGB");
	create_strlit	(0X7D04C2F2,	0X7D04C312);
	set_name	(0X7D04C2F2,	"aBnAllocateOnQB");
	create_strlit	(0X7D04C312,	0X7D04C32E);
	set_name	(0X7D04C312,	"aMpaGetOctStrFa_0");
	create_strlit	(0X7D04C32E,	0X7D04C34A);
	set_name	(0X7D04C32E,	"aMpaGetOctStrFa_2");
	create_strlit	(0X7D04C34A,	0X7D04C375);
	set_name	(0X7D04C34A,	"aDxDhGeneratepu");
	create_strlit	(0X7D04C375,	0X7D04C396);
	set_name	(0X7D04C375,	"aMpaSetOctStrFa_2");
	create_strlit	(0X7D04C396,	0X7D04C3B7);
	set_name	(0X7D04C396,	"aMpaSetOctStrFa_3");
	create_strlit	(0X7D04C3B7,	0X7D04C3D8);
	set_name	(0X7D04C3B7,	"aSignatureLengt");
	create_strlit	(0X7D04C3D8,	0X7D04C3F0);
	set_name	(0X7D04C3D8,	"aSasiLibinitIni");
	create_strlit	(0X7D04C3F0,	0X7D04C409);
	set_name	(0X7D04C3F0,	"aDxSetSessionKe");
	create_strlit	(0X7D04C409,	0X7D04C41A);
	set_name	(0X7D04C409,	"aLibsasiProvide");
	create_strlit	(0X7D04C41A,	0X7D04C425);
	set_name	(0X7D04C41A,	"aGenDhKey");
	create_strlit	(0X7D04C425,	0X7D04C431);
	set_name	(0X7D04C425,	"aCipherInit_0");
	create_strlit	(0X7D04C431,	0X7D04C43A);
	set_name	(0X7D04C431,	"aMacInit");
	create_strlit	(0X7D04C43A,	0X7D04C443);
	set_name	(0X7D04C43A,	"aEccSign");
	create_strlit	(0X7D04C443,	0X7D04C44F);
	set_name	(0X7D04C443,	"aGenEccKey");
	create_strlit	(0X7D04C44F,	0X7D04C45D);
	set_name	(0X7D04C44F,	"aRsaesDecrypt");
	create_strlit	(0X7D04C45D,	0X7D04C462);
	set_name	(0X7D04C45D,	"aSha1");
	create_strlit	(0X7D04C462,	0X7D04C466);
	set_name	(0X7D04C462,	"aMd5");
	create_strlit	(0X7D04C466,	0X7D04C46D);
	set_name	(0X7D04C466,	"aSha224");
	create_strlit	(0X7D04C46D,	0X7D04C474);
	set_name	(0X7D04C46D,	"aSha256");
	create_strlit	(0X7D04C474,	0X7D04C47B);
	set_name	(0X7D04C474,	"aSha384");
	create_strlit	(0X7D04C47B,	0X7D04C482);
	set_name	(0X7D04C47B,	"aSha512");
	create_strlit	(0X7D04C482,	0X7D04C4A4);
	set_name	(0X7D04C482,	"aRsaEncryptKeyE");
	create_strlit	(0X7D04C4A4,	0X7D04C4CD);
	set_name	(0X7D04C4A4,	"aTeeAlgoToLtcHa");
	create_strlit	(0X7D04C4CD,	0X7D04C4EF);
	set_name	(0X7D04C4CD,	"aRsaDecryptKeyE");
	create_strlit	(0X7D04C4EF,	0X7D04C518);
	set_name	(0X7D04C4EF,	"aRsaDecryptKeyE_0");
	create_strlit	(0X7D04C518,	0X7D04C533);
	set_name	(0X7D04C518,	"aRsaExptmodRetu");
	create_strlit	(0X7D04C533,	0X7D04C537);
	set_name	(0X7D04C533,	"aAes");
	create_strlit	(0X7D04C537,	0X7D04C53C);
	set_name	(0X7D04C537,	"a3des");
	create_strlit	(0X7D04C53C,	0X7D04C568);
	set_name	(0X7D04C53C,	"aCoreLibLibtomc");
	create_strlit	(0X7D04C568,	0X7D04C58C);
	set_name	(0X7D04C568,	"aReleaseIssueIn");
	create_strlit	(0X7D04C58C,	0X7D04C5A1);
	set_name	(0X7D04C58C,	"aLibtomcryptPro");
	create_strlit	(0X7D04C5A1,	0X7D04C5A9);
	set_name	(0X7D04C5A1,	"aFortuna");
	create_strlit	(0X7D04C5A9,	0X7D04C5B2);
	set_name	(0X7D04C5A9,	"aRsadorep");
	create_strlit	(0X7D04C5B2,	0X7D04C5C3);
	set_name	(0X7D04C5B2,	"aPoolPostaction");
	create_strlit	(0X7D04C5C3,	0X7D04C5D1);
	set_name	(0X7D04C5C3,	"aRsaesEncrypt");
	create_strlit	(0X7D04C5D1,	0X7D04C5DA);
	set_name	(0X7D04C5D1,	"aRijndael");
	create_byte	(0X7D04C5DA);
	make_array	(0X7D04C5DA,	0X38);
	create_byte	(0X7D04C612);
	make_array	(0X7D04C612,	0X30);
	create_byte	(0X7D04C642);
	make_array	(0X7D04C642,	0X10);
	create_strlit	(0X7D04C652,	0X7D04C65A);
	set_name	(0X7D04C652,	"aEcc192");
	create_strlit	(0X7D04C65A,	0X7D04C68B);
	set_name	(0X7D04C65A,	"aFfffffffffffff");
	create_strlit	(0X7D04C68B,	0X7D04C6BC);
	set_name	(0X7D04C68B,	"a64210519e59c80");
	create_strlit	(0X7D04C6BC,	0X7D04C6ED);
	set_name	(0X7D04C6BC,	"aFfffffffffffff_0");
	create_strlit	(0X7D04C6ED,	0X7D04C71E);
	set_name	(0X7D04C6ED,	"a188da80eb03090");
	create_strlit	(0X7D04C71E,	0X7D04C74E);
	set_name	(0X7D04C71E,	"a7192b95ffc8da7");
	create_strlit	(0X7D04C74E,	0X7D04C756);
	set_name	(0X7D04C74E,	"aEcc224");
	create_strlit	(0X7D04C756,	0X7D04C78F);
	set_name	(0X7D04C756,	"aFfffffffffffff_1");
	create_strlit	(0X7D04C78F,	0X7D04C7C8);
	set_name	(0X7D04C78F,	"aB4050a850c04b3");
	create_strlit	(0X7D04C7C8,	0X7D04C801);
	set_name	(0X7D04C7C8,	"aFfffffffffffff_2");
	create_strlit	(0X7D04C801,	0X7D04C83A);
	set_name	(0X7D04C801,	"aB70e0cbd6bb4bf");
	create_strlit	(0X7D04C83A,	0X7D04C873);
	set_name	(0X7D04C83A,	"aBd376388b5f723");
	create_strlit	(0X7D04C873,	0X7D04C87B);
	set_name	(0X7D04C873,	"aEcc256");
	create_strlit	(0X7D04C87B,	0X7D04C8BC);
	set_name	(0X7D04C87B,	"aFfffffff000000");
	create_strlit	(0X7D04C8BC,	0X7D04C8FD);
	set_name	(0X7D04C8BC,	"a5ac635d8aa3a93");
	create_strlit	(0X7D04C8FD,	0X7D04C93E);
	set_name	(0X7D04C8FD,	"aFfffffff000000_0");
	create_strlit	(0X7D04C93E,	0X7D04C97F);
	set_name	(0X7D04C93E,	"a6b17d1f2e12c42");
	create_strlit	(0X7D04C97F,	0X7D04C9C0);
	set_name	(0X7D04C97F,	"a4fe342e2fe1a7f");
	create_strlit	(0X7D04C9C0,	0X7D04C9C8);
	set_name	(0X7D04C9C0,	"aEcc384");
	create_strlit	(0X7D04C9C8,	0X7D04CA29);
	set_name	(0X7D04C9C8,	"aFfffffffffffff_3");
	create_strlit	(0X7D04CA29,	0X7D04CA8A);
	set_name	(0X7D04CA29,	"aB3312fa7e23ee7");
	create_strlit	(0X7D04CA8A,	0X7D04CAEB);
	set_name	(0X7D04CA8A,	"aFfffffffffffff_4");
	create_strlit	(0X7D04CAEB,	0X7D04CB4C);
	set_name	(0X7D04CAEB,	"aAa87ca22be8b05");
	create_strlit	(0X7D04CB4C,	0X7D04CBAD);
	set_name	(0X7D04CB4C,	"a3617de4a96262c");
	create_strlit	(0X7D04CBAD,	0X7D04CBB5);
	set_name	(0X7D04CBAD,	"aEcc521");
	create_strlit	(0X7D04CBB5,	0X7D04CC39);
	set_name	(0X7D04CBB5,	"a1fffffffffffff");
	create_strlit	(0X7D04CC39,	0X7D04CCBC);
	set_name	(0X7D04CC39,	"a51953eb9618e1c");
	create_strlit	(0X7D04CCBC,	0X7D04CD40);
	set_name	(0X7D04CCBC,	"a1fffffffffffff_0");
	create_strlit	(0X7D04CD40,	0X7D04CDC3);
	set_name	(0X7D04CD40,	"aC6858e06b70404");
	create_strlit	(0X7D04CDC3,	0X7D04CE47);
	set_name	(0X7D04CDC3,	"a11839296a789a3");
	create_strlit	(0X7D04CE47,	0X7D04CE4B);
	set_name	(0X7D04CE47,	"aMpa");
	create_byte	(0X7D04CE4B);
	make_array	(0X7D04CE4B,	0X2);
	create_byte	(0X7D04CE4D);
	make_array	(0X7D04CE4D,	0X7);
	create_byte	(0X7D04CE54);
	create_byte	(0X7D04CE55);
	make_array	(0X7D04CE55,	0X14);
	create_byte	(0X7D04CE69);
	make_array	(0X7D04CE69,	0XA);
	set_name	(0X7D04CE69,	"char_to_int_switch");
	create_strlit	(0X7D04CE73,	0X7D04CE7E);
	set_name	(0X7D04CE73,	"baseten");
	create_strlit	(0X7D04CE7E,	0X7D04CE9C);
	set_name	(0X7D04CE7E,	"aDataLenDMaxSiz");
	create_strlit	(0X7D04CE9C,	0X7D04CEC5);
	set_name	(0X7D04CE9C,	"aBinaryBufferDA");
	create_strlit	(0X7D04CEC5,	0X7D04CED1);
	set_name	(0X7D04CEC5,	"aMpaSetStr");
	create_strlit	(0X7D04CED1,	0X7D04CEDA);
	set_name	(0X7D04CED1,	"aUnknown");
	create_strlit	(0X7D04CEDA,	0X7D04CEE3);
	set_name	(0X7D04CEDA,	"aError");
	create_strlit	(0X7D04CEE3,	0X7D04CEEC);
	set_name	(0X7D04CEE3,	"aInfo");
	create_strlit	(0X7D04CEEC,	0X7D04CEF5);
	set_name	(0X7D04CEEC,	"aDebug");
	create_strlit	(0X7D04CEF5,	0X7D04CEFE);
	set_name	(0X7D04CEF5,	"aFlow");
	create_strlit	(0X7D04CEFE,	0X7D04CF07);
	set_name	(0X7D04CEFE,	"aMessage");
	create_strlit	(0X7D04CF07,	0X7D04CF0B);
	set_name	(0X7D04CF07,	"aS");
	create_strlit	(0X7D04CF0B,	0X7D04CF11);
	set_name	(0X7D04CF0B,	"aD");
	create_strlit	(0X7D04CF11,	0X7D04CF19);
	set_name	(0X7D04CF11,	"a0xX");
	create_strlit	(0X7D04CF19,	0X7D04CF1D);
	set_name	(0X7D04CF19,	"aS_0");
	create_strlit	(0X7D04CF1D,	0X7D04CF24);
	set_name	(0X7D04CF1D,	"aSD");
	create_strlit	(0X7D04CF24,	0X7D04CF35);
	set_name	(0X7D04CF24,	"HEXDIGITS");
	create_strlit	(0X7D04CF35,	0X7D04CF3C);
	set_name	(0X7D04CF35,	"aNull");
	create_strlit	(0X7D04CF3C,	0X7D04CF6C);
	set_name	(0X7D04CF3C,	"a08x04x04x02x02");
	create_strlit	(0X7D04CF6C,	0X7D04CF7D);
	set_name	(0X7D04CF6C,	"hexdigits");
	make_array	(0X7D04CF7D,	0X3);
	create_dword	(0X7D04CF80);
	set_name	(0X7D04CF80,	"__start_ta_head_section");
	create_dword	(0X7D04CF84);
	create_dword	(0X7D04CF88);
	create_dword	(0X7D04CF8C);
	create_dword	(x=0X7D04CF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CF94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CF9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CFA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04CFA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04CFA8,	"__stop_ta_head_section");
	create_dword	(0X7D04CFAC);
	create_dword	(0X7D04CFB0);
	create_dword	(0X7D04CFB4);
	create_dword	(x=0X7D04CFB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04CFBC);
	create_dword	(0X7D04CFC0);
	create_dword	(0X7D04CFC4);
	create_dword	(x=0X7D04CFC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04CFCC);
	create_dword	(0X7D04CFD0);
	create_dword	(0X7D04CFD4);
	create_dword	(x=0X7D04CFD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04CFDC);
	create_dword	(0X7D04CFE0);
	create_dword	(0X7D04CFE4);
	create_dword	(x=0X7D04CFE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04CFEC);
	create_dword	(0X7D04CFF0);
	create_dword	(0X7D04CFF4);
	create_dword	(x=0X7D04CFF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04CFFC);
	create_dword	(0X7D04D000);
	create_dword	(0X7D04D004);
	create_dword	(x=0X7D04D008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04D00C);
	create_dword	(0X7D04D010);
	create_dword	(0X7D04D014);
	create_dword	(x=0X7D04D018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04D01C);
	create_dword	(0X7D04D020);
	create_dword	(0X7D04D024);
	create_dword	(x=0X7D04D028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04D02C);
	create_dword	(x=0X7D04D038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04D048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04D0C8);
	set_name	(0X7D04D0C8,	"static_memory_map");
	create_dword	(0X7D04D0CC);
	create_dword	(0X7D04D0D0);
	create_dword	(0X7D04D0D4);
	create_dword	(0X7D04D0D8);
	create_dword	(0X7D04D0DC);
	create_dword	(0X7D04D0E0);
	make_array	(0X7D04D0E0,	0X6);
	set_name	(0X7D04D0E0,	"static_memory_map_field");
	create_byte	(0X7D04D0F8);
	make_array	(0X7D04D0F8,	0X168);
	create_byte	(0X7D04D260);
	set_name	(0X7D04D260,	"mem_map_inited");
	make_array	(0X7D04D261,	0X3);
	create_dword	(0X7D04D264);
	set_name	(0X7D04D264,	"map_tee_ram");
	create_dword	(x=0X7D04D268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04D268,	"map_ta_ram");
	create_dword	(x=0X7D04D26C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04D26C,	"map_nsec_shm");
	create_dword	(0X7D04D270);
	set_name	(0X7D04D270,	"default_nsec_shm_paddr");
	create_dword	(0X7D04D274);
	set_name	(0X7D04D274,	"default_nsec_shm_size");
	set_name	(0X7D04D290,	"tee_mm_sec_ddr");
	create_dword	(0X7D04D2A8);
	create_dword	(x=0X7D04D2AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X7D04D2B0);
	make_array	(0X7D04D2B0,	0X1D60);
	create_byte	(0X7D04F010);
	make_array	(0X7D04F011,	0X7);
	create_dword	(0X7D04F018);
	create_dword	(0X7D04F01C);
	make_array	(0X7D04F01C,	0X4);
	set_name	(0X7D04F01C,	"ns_entry_addrs");
	create_dword	(x=0X7D04F02C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F02C,	"secure_only");
	set_name	(0X7D04F030,	"secure_only__size");
	set_name	(0X7D04F034,	"ddr");
	set_name	(0X7D04F03C,	"nsec_shared");
	create_dword	(0X7D04F044);
	set_name	(0X7D04F044,	"g_asid");
	create_dword	(0X7D04F048);
	set_name	(0X7D04F04C,	"pgt_mu");
	create_dword	(0X7D04F064);
	set_name	(0X7D04F064,	"call_initcalls__is_first");
	create_dword	(0X7D04F078);
	make_array	(0X7D04F078,	0X6);
	set_name	(0X7D04F078,	"allowed_phys_addr_ranges");
	create_dword	(0X7D04F090);
	create_dword	(0X7D04F094);
	make_array	(0X7D04F094,	0X4);
	MakeStruct	(0X7D04F0A4,	"tee_ta_session_head");
	set_name	(0X7D04F0A4,	"tee_open_sessions");
	create_dword	(x=0X7D04F0AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F0AC,	"tee_ctxes_0");
	create_dword	(x=0X7D04F0B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F0B0,	"tee_ctxes");
	set_name	(0X7D04F0B4,	"tee_ta_mutex");
	create_dword	(0X7D04F0CC);
	set_name	(0X7D04F0CC,	"tee_ta_single_instance_thread");
	set_name	(0X7D04F0D0,	"ta_dir_mutex");
	set_name	(0X7D04F0E8,	"rpmb_mutex");
	create_dword	(x=0X7D04F100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F104);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F108,	"urnd_mutex");
	set_name	(0X7D04F148,	"ltc_cipher_mutex");
	MakeStruct	(0X7D04F190,	"ltc_math_descriptor");
	set_name	(0X7D04F190,	"ltc_mp");
	set_name	(0X7D04F25C,	"freelist");
	create_dword	(0X7D04F260);
	create_dword	(x=0X7D04F264);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F264,	"freelist__ql__flink");
	create_dword	(x=0X7D04F268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F268,	"freelist__ql__blink");
	create_dword	(0X7D04F26C);
	set_name	(0X7D04F26C,	"__malloc_mu");
	create_dword	(0X7D04F270);
	create_dword	(0X7D04F274);
	create_dword	(0X7D04F278);
	create_dword	(0X7D04F27C);
	create_dword	(0X7D04F280);
	create_dword	(x=0X7D04F284);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F28C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F294);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F29C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04F2A8);
	create_dword	(0X7D04F2AC);
	create_dword	(0X7D04F2B0);
	create_dword	(x=0X7D04F2B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04F2CC);
	create_dword	(x=0X7D04F2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X7D04F2D4);
	set_cmt	(0X7D04F2D8,	"jump table for switch statement",	0);
	create_dword	(x=0X7D04F2D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F2D8,	"jpt_7D0296C6");
	create_dword	(x=0X7D04F2DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F2FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X7D04F304,	0X4);
	create_dword	(0X7D04F308);
	create_dword	(0X7D04F30C);
	create_dword	(0X7D04F310);
	create_dword	(x=0X7D04F314);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F31C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F320,	"sasiGenVecMutex");
	create_dword	(x=0X7D04F324);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F328,	"gCcRegBase");
	create_dword	(x=0X7D04F32C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F32C,	"sasiAsymCryptoMutex_0");
	create_dword	(x=0X7D04F330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F334);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F338,	"ecpki_supported_hash_modes");
	create_dword	(x=0X7D04F33C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F340,	"regTemps");
	create_dword	(x=0X7D04F344);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F34C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F34C,	"ecpki_hash_info");
	create_dword	(x=0X7D04F350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F354);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F354,	"sasiAsymCryptoMutex");
	create_dword	(x=0X7D04F358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F35C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F368,	"ppSaSiRndCryptoMutex");
	create_dword	(x=0X7D04F36C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F36C,	"pCRYS_RND_GenerateVector");
	create_dword	(x=0X7D04F370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F374);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7D04F378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F378,	"p_g_SmallPrime");
	create_dword	(x=0X7D04F37C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7D04F37C,	"sasiSymCryptoMutex");
	set_cmt	(0X7D04F380,	"mem block start; ends at 0x7D061048",	1);
	create_byte	(0X7D04F380);
	make_array	(0X7D04F380,	0X10);
	set_name	(0X7D04F380,	"UFIE_key");
	create_byte	(0X7D04F390);
	make_array	(0X7D04F390,	0X10);
	create_byte	(0X7D04F3A0);
	make_array	(0X7D04F3A0,	0X10);
	set_name	(0X7D04F3A0,	"TBIE_key");
	create_byte	(0X7D04F3B0);
	make_array	(0X7D04F3B0,	0X10);
	MakeStruct	(0X7D04F3C0,	"thread_ctx");
	set_name	(0X7D04F3C0,	"threads");
	create_byte	(0X7D04F678);
	make_array	(0X7D04F678,	0X54);
	create_dword	(0X7D04F6CC);
	create_dword	(0X7D04F984);
	create_dword	(0X7D04FC3C);
	create_dword	(0X7D04FEA0);
	create_dword	(0X7D04FEA4);
	create_dword	(0X7D04FEA8);
	create_dword	(0X7D04FEAC);
	create_dword	(0X7D04FEB0);
	create_dword	(0X7D04FEB4);
	create_byte	(0X7D04FEB8);
	make_array	(0X7D04FEB8,	0X48);
	create_dword	(0X7D04FF00);
	make_array	(0X7D04FF04,	0X4);
	create_dword	(0X7D04FF08);
	create_dword	(0X7D04FF0C);
	MakeStruct	(0X7D04FF10,	"struc_FF10");
	MakeStruct	(0X7D050748,	"struc_FF10");
	create_byte	(0X7D050F80);
	make_array	(0X7D050F80,	0X240);
	MakeStruct	(0X7D0511C0,	"time_source");
	set_name	(0X7D0511C0,	"_time_source");
	create_dword	(0X7D0511CC);
	set_name	(0X7D0511CC,	"thread_std_smc_handler_ptr");
	create_dword	(0X7D0511D0);
	set_name	(0X7D0511D0,	"thread_system_off_handler_ptr");
	set_name	(0X7D0511D4,	"thread_global_lock");
	create_dword	(0X7D0511D8);
	set_name	(0X7D0511D8,	"thread_cpu_on_handler_ptr");
	MakeStruct	(0X7D0511DC,	"thread_core_local_s");
	make_array	(0X7D0511DC,	0X4);
	set_name	(0X7D0511DC,	"thread_core_local");
	create_dword	(0X7D0511FC);
	set_name	(0X7D0511FC,	"thread_cpu_suspend_handler_ptr");
	create_dword	(0X7D051200);
	set_name	(0X7D051200,	"thread_cpu_off_handler_ptr");
	create_dword	(0X7D051204);
	set_name	(0X7D051204,	"thread_fast_smc_handler_ptr");
	create_dword	(0X7D051208);
	set_name	(0X7D051208,	"thread_system_reset_handler_ptr");
	create_dword	(0X7D05120C);
	set_name	(0X7D05120C,	"thread_cpu_resume_handler_ptr");
	create_dword	(0X7D051210);
	set_name	(0X7D051210,	"thread_fiq_handler_ptr");
	set_name	(0X7D051214,	"wq_spin_lock");
	create_dword	(0X7D051218);
	set_name	(0X7D051218,	"cipher_ctx");
	create_byte	(0X7D05121C);
	make_array	(0X7D05121C,	0X910);
	set_name	(0X7D05121C,	"auth_keys");
	create_byte	(0X7D051B2C);
	make_array	(0X7D051B2C,	0X220);
	set_name	(0X7D051B2C,	"enc_keys");
	create_dword	(0X7D051D4C);
	set_name	(0X7D051D4C,	"pgt_free_list");
	MakeStruct	(0X7D051D50,	"pgt");
	make_array	(0X7D051D50,	0X100);
	set_name	(0X7D051D50,	"pgt_entries");
	MakeStruct	(0X7D052550,	"condvar");
	set_name	(0X7D052550,	"pgt_cv");
	set_name	(0X7D052558,	"gic_data");
	create_dword	(0X7D052564);
	create_dword	(0X7D052568);
	create_dword	(0X7D0528AC);
	create_dword	(0X7D0528B0);
	set_name	(0X7D0528B0,	"tee_ta_single_instance_count");
	set_name	(0X7D0528B4,	"tee_ta_cv");
	create_dword	(0X7D0528BC);
	set_name	(0X7D0528BC,	"itr_chip");
	set_name	(0X7D0528C0,	"fw_impl_bin_version");
	set_name	(0X7D0528C4,	"ts_antiroll_prot_lvl");
	create_dword	(0X7D0528C8);
	set_name	(0X7D0528C8,	"vendor_props_client_C8");
	create_dword	(0X7D0528CC);
	set_name	(0X7D0528CC,	"vendor_props_client_CC");
	create_dword	(0X7D0528D0);
	set_name	(0X7D0528D0,	"tee_svc_uref_base");
	create_dword	(0X7D0528D4);
	set_name	(0X7D0528D4,	"vendor_props_ta_D4");
	create_dword	(0X7D0528D8);
	set_name	(0X7D0528D8,	"vendor_props_ta_D8");
	set_name	(0X7D0528DC,	"trustedos_impl_bin_version");
	create_dword	(0X7D0528E0);
	set_name	(0X7D0528E0,	"vendor_props_tee_E0");
	create_dword	(0X7D0528E4);
	set_name	(0X7D0528E4,	"vendor_props_tee_E4");
	create_dword	(0X7D0528E8);
	set_name	(0X7D0528E8,	"fs_par");
	create_dword	(0X7D0528EC);
	set_name	(0X7D0528EC,	"rpmb_ctx");
	set_name	(0X7D0528F0,	"fs_handle_db");
	create_dword	(0X7D0528F8);
	set_name	(0X7D0528F8,	"tee_time_offs");
	create_dword	(0X7D0528FC);
	set_name	(0X7D0528FC,	"tee_time_num_offs");
	create_dword	(0X7D052900);
	create_dword	(0X7D052904);
	create_dword	(0X7D052908);
	create_dword	(0X7D05290C);
	create_dword	(0X7D052910);
	create_dword	(0X7D052964);
	create_dword	(0X7D052968);
	create_dword	(0X7D05296C);
	create_dword	(0X7D052970);
	create_dword	(0X7D052974);
	MakeStruct	(0X7D052978,	"CRYS_RND_Context_t");
	set_name	(0X7D052978,	"eccSignContext");
	create_dword	(0X7D052A60);
	create_dword	(0X7D052A6C);
	create_dword	(0X7D0F19FC);
	set_name	(0X7D0F1A00,	"__init_end");
}

static Functions_0(void) {

	add_func    (0X7D000000,0X7D000020);
	set_func_flags(0X7D000000,0x485);
	set_frame_size(0X7D000000, 0, 0, 0);
	set_name(0X7D000004, "irqvec_undef", SN_LOCAL);
	set_name(0X7D000008, "irqvec_syscall", SN_LOCAL);
	set_name(0X7D00000C, "irqvec_prefetch_abort", SN_LOCAL);
	set_name(0X7D000010, "irqvec_data_abort", SN_LOCAL);
	set_name(0X7D000014, "irqvec_reserved", SN_LOCAL);
	set_name(0X7D000018, "irqvec_irq", SN_LOCAL);
	set_name(0X7D00001C, "irqvec_fiq", SN_LOCAL);
	add_func    (0X7D000020,0X7D000024);
	set_func_flags(0X7D000020,0x404);
	set_frame_size(0X7D000020, 0, 0, 0);
	add_func    (0X7D000024,0X7D000028);
	set_func_flags(0X7D000024,0x404);
	set_frame_size(0X7D000024, 0, 0, 0);
	add_func    (0X7D000028,0X7D00002C);
	set_func_flags(0X7D000028,0x404);
	set_frame_size(0X7D000028, 0, 0, 0);
	add_func    (0X7D00002C,0X7D000030);
	set_func_flags(0X7D00002C,0x404);
	set_frame_size(0X7D00002C, 0, 0, 0);
	add_func    (0X7D000030,0X7D000034);
	set_func_flags(0X7D000030,0x404);
	set_frame_size(0X7D000030, 0, 0, 0);
	add_func    (0X7D000034,0X7D00007C);
	set_func_flags(0X7D000034,0x405);
	set_frame_size(0X7D000034, 0, 0, 0);
	add_func    (0X7D00007C,0X7D000120);
	set_func_flags(0X7D00007C,0x405);
	SetType(0X7D00007C, "void __cdecl reset_primary();");
	set_frame_size(0X7D00007C, 0, 0, 0);
	add_func    (0X7D000120,0X7D000128);
	set_func_flags(0X7D000120,0x405);
	set_frame_size(0X7D000120, 0, 0, 0);
	add_func    (0X7D000128,0X7D00019C);
	set_func_flags(0X7D000128,0x405);
	set_func_cmt(0X7D000128,	"condition is src: not defined(CFG_WITH_ARM_TRUSTED_FW)", 1);
	set_frame_size(0X7D000128, 0, 0, 0);
	add_func    (0X7D0001E0,0X7D0001FC);
	set_func_flags(0X7D0001E0,0x405);
	set_frame_size(0X7D0001E0, 0X20, 0, 0);
	add_func    (0X7D0001FC,0X7D000218);
	set_func_flags(0X7D0001FC,0x405);
	set_frame_size(0X7D0001FC, 0X20, 0, 0);
	add_func    (0X7D000218,0X7D000238);
	set_func_flags(0X7D000218,0x405);
	set_frame_size(0X7D000218, 0, 0, 0);
	add_func    (0X7D000238,0X7D000254);
	set_func_flags(0X7D000238,0x405);
	set_frame_size(0X7D000238, 0, 0, 0);
	add_func    (0X7D000254,0X7D000270);
	set_func_flags(0X7D000254,0x405);
	set_frame_size(0X7D000254, 0, 0, 0);
	add_func    (0X7D000270,0X7D00028C);
	set_func_flags(0X7D000270,0x405);
	set_frame_size(0X7D000270, 0, 0, 0);
	add_func    (0X7D00028C,0X7D0002A8);
	set_func_flags(0X7D00028C,0x405);
	set_frame_size(0X7D00028C, 0, 0, 0);
	add_func    (0X7D0002A8,0X7D0002C4);
	set_func_flags(0X7D0002A8,0x405);
	set_frame_size(0X7D0002A8, 0, 0, 0);
	add_func    (0X7D0002C4,0X7D0002E0);
	set_func_flags(0X7D0002C4,0x405);
	set_frame_size(0X7D0002C4, 0, 0, 0);
	add_func    (0X7D0002E0,0X7D0002E4);
	set_func_flags(0X7D0002E0,0x485);
	set_func_cmt(0X7D0002E0,	"Vector table supplied to ARM Trusted Firmware (ARM-TF) at\ninitialization.  Also used when compiled with the internal monitor, but\nthe cpu_*_entry and system_*_entry are not used then.\n", 1);
	set_frame_size(0X7D0002E0, 0, 0, 0);
	add_func    (0X7D0002E4,0X7D0002E8);
	set_func_flags(0X7D0002E4,0x485);
	set_frame_size(0X7D0002E4, 0, 0, 0);
	add_func    (0X7D0002E8,0X7D0002EC);
	set_func_flags(0X7D0002E8,0x485);
	set_frame_size(0X7D0002E8, 0, 0, 0);
	add_func    (0X7D0002EC,0X7D0002F0);
	set_func_flags(0X7D0002EC,0x485);
	set_frame_size(0X7D0002EC, 0, 0, 0);
	add_func    (0X7D0002F0,0X7D0002F4);
	set_func_flags(0X7D0002F0,0x485);
	set_frame_size(0X7D0002F0, 0, 0, 0);
	add_func    (0X7D0002F4,0X7D0002F8);
	set_func_flags(0X7D0002F4,0x485);
	set_frame_size(0X7D0002F4, 0, 0, 0);
	add_func    (0X7D0002F8,0X7D0002FC);
	set_func_flags(0X7D0002F8,0x485);
	set_frame_size(0X7D0002F8, 0, 0, 0);
	add_func    (0X7D0002FC,0X7D000300);
	set_func_flags(0X7D0002FC,0x485);
	set_frame_size(0X7D0002FC, 0, 0, 0);
	add_func    (0X7D000300,0X7D000304);
	set_func_flags(0X7D000300,0x485);
	set_frame_size(0X7D000300, 0, 0, 0);
	add_func    (0X7D000304,0X7D000318);
	set_func_flags(0X7D000304,0x404);
	SetType(0X7D000304, "void __cdecl thread_set_abt_sp(uint32_t sp);");
	set_frame_size(0X7D000304, 0, 0, 0);
	add_func    (0X7D000318,0X7D00032C);
	set_func_flags(0X7D000318,0x404);
	SetType(0X7D000318, "void __cdecl thread_set_irq_sp(uint32_t sp);");
	set_frame_size(0X7D000318, 0, 0, 0);
	add_func    (0X7D00032C,0X7D000340);
	set_func_flags(0X7D00032C,0x404);
	SetType(0X7D00032C, "void __cdecl thread_set_fiq_sp(uint32_t sp);");
	set_frame_size(0X7D00032C, 0, 0, 0);
	add_func    (0X7D000340,0X7D00036C);
	set_func_flags(0X7D000340,0x405);
	set_frame_size(0X7D000340, 0X8, 0, 0);
	add_func    (0X7D00036C,0X7D0003CC);
	set_func_flags(0X7D00036C,0x404);
	set_frame_size(0X7D00036C, 0X28, 0, 0);
	add_func    (0X7D0003CC,0X7D00040C);
	set_func_flags(0X7D0003CC,0x405);
	set_frame_size(0X7D0003CC, 0X20, 0, 0);
	add_func    (0X7D00040C,0X7D000450);
	set_func_flags(0X7D00040C,0x404);
	SetType(0X7D00040C, "void __cdecl _thread_rpc(uint32_t *rv);");
	set_frame_size(0X7D00040C, 0X10, 0, 0);
	add_func    (0X7D000450,0X7D00045C);
	set_func_flags(0X7D000450,0x404);
	set_frame_size(0X7D000450, 0, 0, 0);
	add_func    (0X7D00045C,0X7D00047C);
	set_func_flags(0X7D00045C,0x404);
	set_frame_size(0X7D00045C, 0X28, 0, 0);
	add_func    (0X7D00047C,0X7D0004CC);
	set_func_flags(0X7D00047C,0x405);
	set_frame_size(0X7D00047C, 0X8, 0, 0);
	add_func    (0X7D0004CC,0X7D0004D8);
	set_func_flags(0X7D0004CC,0x404);
	set_frame_size(0X7D0004CC, 0, 0, 0);
	add_func    (0X7D0004D8,0X7D000508);
	set_func_flags(0X7D0004D8,0x405);
	set_frame_size(0X7D0004D8, 0X30, 0, 0);
	add_func    (0X7D000508,0X7D00052C);
	set_func_flags(0X7D000508,0x404);
	set_frame_size(0X7D000508, 0, 0, 0);
	add_func    (0X7D00052C,0X7D0005D0);
	set_func_flags(0X7D00052C,0x404);
	set_frame_size(0X7D00052C, 0X34, 0, 0);
	set_name(0X7D00058C, ".thread_abort_generic", SN_LOCAL);
	add_func    (0X7D0005D0,0X7D0005F4);
	set_func_flags(0X7D0005D0,0x404);
	set_frame_size(0X7D0005D0, 0X28, 0, 0);
	add_func    (0X7D000600,0X7D000604);
	set_func_flags(0X7D000600,0x405);
	set_frame_size(0X7D000600, 0, 0, 0);
	add_func    (0X7D000604,0X7D000608);
	set_func_flags(0X7D000604,0x484);
	set_frame_size(0X7D000604, 0, 0, 0);
	add_func    (0X7D000608,0X7D00060C);
	set_func_flags(0X7D000608,0x484);
	set_frame_size(0X7D000608, 0, 0, 0);
	add_func    (0X7D00060C,0X7D000610);
	set_func_flags(0X7D00060C,0x484);
	set_frame_size(0X7D00060C, 0, 0, 0);
	add_func    (0X7D000610,0X7D000614);
	set_func_flags(0X7D000610,0x484);
	set_frame_size(0X7D000610, 0, 0, 0);
	add_func    (0X7D000614,0X7D000618);
	set_func_flags(0X7D000614,0x405);
	set_frame_size(0X7D000614, 0, 0, 0);
	add_func    (0X7D000618,0X7D00061C);
	set_func_flags(0X7D000618,0x485);
	set_frame_size(0X7D000618, 0, 0, 0);
	add_func    (0X7D00061C,0X7D000620);
	set_func_flags(0X7D00061C,0x484);
	set_frame_size(0X7D00061C, 0, 0, 0);
	add_func    (0X7D000680,0X7D0006D4);
	set_func_flags(0X7D000680,0x404);
	set_frame_size(0X7D000680, 0, 0, 0);
	add_func    (0X7D0006D4,0X7D000728);
	set_func_flags(0X7D0006D4,0x404);
	set_frame_size(0X7D0006D4, 0, 0, 0);
	add_func    (0X7D000728,0X7D0007B4);
	set_func_flags(0X7D000728,0x404);
	set_frame_size(0X7D000728, 0X10, 0, 0);
	define_local_var(0X7D000728, 0X7D0007B4, "[bp-0X10]", "varg_r0");
	define_local_var(0X7D000728, 0X7D0007B4, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D000728, 0X7D0007B4, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D000728, 0X7D0007B4, "[bp-0X4]", "varg_r3");
	set_name(0X7D000778, ".smc_ret_to_sec", SN_LOCAL);
	set_name(0X7D0007AC, ".smc_exit", SN_LOCAL);
	add_func    (0X7D0007B4,0X7D000800);
	set_func_flags(0X7D0007B4,0x404);
	set_frame_size(0X7D0007B4, 0X18, 0, 0);
	define_local_var(0X7D0007B4, 0X7D000800, "[bp-0X10]", "varg_r0");
	define_local_var(0X7D0007B4, 0X7D000800, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D0007B4, 0X7D000800, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D0007B4, 0X7D000800, "[bp-0X4]", "varg_r3");
	add_func    (0X7D000800,0X7D000820);
	set_func_flags(0X7D000800,0x405);
	set_frame_size(0X7D000800, 0, 0, 0);
	set_name(0X7D000804, "sm_vect_table__reset", SN_LOCAL);
	set_name(0X7D000808, "sm_vect_table__secure_mon", SN_LOCAL);
	set_name(0X7D00080C, "sm_vect_table__prefetch_abort", SN_LOCAL);
	set_name(0X7D000810, "sm_vect_table__data_abort", SN_LOCAL);
	set_name(0X7D000814, "sm_vect_table__reserved", SN_LOCAL);
	set_name(0X7D000818, "sm_vect_table__irq", SN_LOCAL);
	set_name(0X7D00081C, "sm_vect_table__giq", SN_LOCAL);
	add_func    (0X7D000820,0X7D000840);
	set_func_flags(0X7D000820,0x404);
	SetType(0X7D000820, "void __cdecl sm_init(uint32_t stack_pointer);");
	set_frame_size(0X7D000820, 0X8, 0, 0);
	add_func    (0X7D000860,0X7D0008C8);
	set_func_flags(0X7D000860,0x404);
	SetType(0X7D000860, "int __cdecl sha384_init(struct hash_state *md);");
	set_frame_size(0X7D000860, 0, 0, 0);
	add_func    (0X7D000908,0X7D000970);
	set_func_flags(0X7D000908,0x404);
	SetType(0X7D000908, "int __cdecl sha512_init(struct hash_state *md);");
	set_frame_size(0X7D000908, 0, 0, 0);
	add_func    (0X7D0009B0,0X7D000A34);
	set_func_flags(0X7D0009B0,0x404);
	SetType(0X7D0009B0, "enum TEE_Result __cdecl tee_ta_verify_param(struct tee_ta_session *sess, struct tee_ta_param *param);");
	set_frame_size(0X7D0009B0, 0X20, 0, 0);
	add_func    (0X7D000A38,0X7D000AA8);
	set_func_flags(0X7D000A38,0x404);
	SetType(0X7D000A38, "void __cdecl static user_ta_dump_state(struct tee_ta_ctx *ctx);");
	set_frame_size(0X7D000A38, 0X28, 0, 0);
	define_local_var(0X7D000A38, 0X7D000AA8, "[bp-0X28]", "fmt");
	add_func    (0X7D000AB4,0X7D000BF0);
	set_func_flags(0X7D000AB4,0x404);
	SetType(0X7D000AB4, "enum TEE_Result __cdecl user_ta_enter(struct TEE_ErrorOrigin *err, struct tee_ta_session *session, int func, uint32_t cmd, struct tee_ta_param *param);");
	set_frame_size(0X7D000AB4, 0X48, 0, 0);
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp-0X48]", "user_sp");
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp-0X44]", "entry_func");
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp-0X40]", "is_32bit");
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp-0X3C]", "exit_status0");
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp-0X38]", "exit_status1");
	define_local_var(0X7D000AB4, 0X7D000BF0, "[bp+0]", "param");
	add_func    (0X7D000C04,0X7D000C96);
	set_func_flags(0X7D000C04,0x404);
	SetType(0X7D000C04, "int __cdecl load_elf_segments(struct user_ta_ctx *utc, struct elf_load_state *elf_state, bool init_attrs);");
	set_frame_size(0X7D000C04, 0X38, 0, 0);
	define_local_var(0X7D000C04, 0X7D000C96, "[bp-0X38]", "flags");
	define_local_var(0X7D000C04, 0X7D000C96, "[bp-0X2C]", "vaddr");
	define_local_var(0X7D000C04, 0X7D000C96, "[bp-0X28]", "size");
	add_func    (0X7D000C9C,0X7D0011CA);
	set_func_flags(0X7D000C9C,0x400);
	set_func_cmt(0X7D000C9C,	"Has DJI-made modifications - accepts and unsigns IMaH", 1);
	set_frame_size(0X7D000C9C, 0XB0, 0, 0);
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0XB0]", "fmt");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0XA0]", "uuid1");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0X94]", "nwdata_len");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0X78]", "size");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0X74]", "phta");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0X70]", "cta");
	define_local_var(0X7D000C9C, 0X7D0011CA, "[bp-0X68]", "params");
	add_func    (0X7D0011F4,0X7D001226);
	set_func_flags(0X7D0011F4,0x400);
	SetType(0X7D0011F4, "enum TEE_Result __cdecl static tee_ta_param_pa2va(struct tee_ta_param *param);");
	set_frame_size(0X7D0011F4, 0X10, 0, 0);
	add_func    (0X7D00122C,0X7D001298);
	set_func_flags(0X7D00122C,0x404);
	SetType(0X7D00122C, "enum TEE_Result __cdecl tee_ta_init_static_ta_session(const struct TEE_UUID *uuid, struct tee_ta_session *s);");
	set_frame_size(0X7D00122C, 0X18, 0, 0);
	add_func    (0X7D0012B0,0X7D0012E6);
	set_func_flags(0X7D0012B0,0x404);
	SetType(0X7D0012B0, "enum TEE_Result __cdecl static advance_to(struct elf_load_state *state, size_t offs);");
	set_frame_size(0X7D0012B0, 0X10, 0, 0);
	add_func    (0X7D0012F4,0X7D0012F8);
	set_func_flags(0X7D0012F4,0x404);
	SetType(0X7D0012F4, "int __cdecl e64_process_rel(struct elf_load_state *state, size_t rel_sidx, void *vabase);");
	set_frame_size(0X7D0012F4, 0, 0, 0);
	add_func    (0X7D0012FC,0X7D0013CE);
	set_func_flags(0X7D0012FC,0x404);
	SetType(0X7D0012FC, "int __cdecl e32_process_rel(struct elf_load_state *state, size_t rel_sidx, void *vabase);");
	set_frame_size(0X7D0012FC, 0X20, 0, 0);
	add_func    (0X7D0013E0,0X7D001440);
	set_func_flags(0X7D0013E0,0x404);
	SetType(0X7D0013E0, "enum TEE_Result __cdecl static copy_to(struct elf_load_state *state, void *dst, size_t dst_size, size_t dst_offs, size_t offs, size_t len);");
	set_frame_size(0X7D0013E0, 0X20, 0, 0);
	define_local_var(0X7D0013E0, 0X7D001440, "[bp+0]", "offs");
	define_local_var(0X7D0013E0, 0X7D001440, "[bp+0X4]", "len");
	add_func    (0X7D001448,0X7D00148A);
	set_func_flags(0X7D001448,0x404);
	SetType(0X7D001448, "int __cdecl alloc_and_copy_to(void **p, struct elf_load_state *state, size_t offs, size_t len);");
	set_frame_size(0X7D001448, 0X20, 0, 0);
	define_local_var(0X7D001448, 0X7D00148A, "[bp-0X20]", "offs");
	define_local_var(0X7D001448, 0X7D00148A, "[bp-0X1C]", "len");
	add_func    (0X7D001490,0X7D0014B8);
	set_func_flags(0X7D001490,0x404);
	SetType(0X7D001490, "enum TEE_Result __cdecl elf_load_init(void *hash_ctx, uint32_t hash_algo, uint8_t *nwdata, size_t nwdata_len, struct elf_load_state **ret_state);");
	set_frame_size(0X7D001490, 0X18, 0, 0);
	define_local_var(0X7D001490, 0X7D0014B8, "[bp+0]", "ret_state");
	add_func    (0X7D0014BC,0X7D0015CA);
	set_func_flags(0X7D0014BC,0x404);
	SetType(0X7D0014BC, "enum TEE_Result __cdecl elf_load_head(struct elf_load_state *state, size_t head_size, void **head, size_t *vasize, bool *is_32bit);");
	set_frame_size(0X7D0014BC, 0X90, 0, 0);
	define_local_var(0X7D0014BC, 0X7D0015CA, "[bp-0X88]", "state");
	define_local_var(0X7D0014BC, 0X7D0015CA, "[bp-0X58]", "offs");
	define_local_var(0X7D0014BC, 0X7D0015CA, "[bp-0X54]", "ehdr");
	define_local_var(0X7D0014BC, 0X7D0015CA, "[bp+0]", "is_32bit");
	add_func    (0X7D0015E8,0X7D00163C);
	set_func_flags(0X7D0015E8,0x404);
	SetType(0X7D0015E8, "int __cdecl elf_load_get_next_segment(struct elf_load_state *state, size_t *idx, void **vaddr, size_t *size, uint32_t *flags, uint32_t *type);");
	set_frame_size(0X7D0015E8, 0X38, 0, 0);
	define_local_var(0X7D0015E8, 0X7D00163C, "[bp+0]", "flags");
	define_local_var(0X7D0015E8, 0X7D00163C, "[bp+0X4]", "type");
	add_func    (0X7D001640,0X7D001712);
	set_func_flags(0X7D001640,0x404);
	SetType(0X7D001640, "int __cdecl elf_load_body(struct elf_load_state *state, void *vabase);");
	set_frame_size(0X7D001640, 0X48, 0, 0);
	define_local_var(0X7D001640, 0X7D001712, "[bp-0X48]", "offs");
	define_local_var(0X7D001640, 0X7D001712, "[bp-0X44]", "len");
	define_local_var(0X7D001640, 0X7D001712, "[bp-0X40]", "p");
	add_func    (0X7D00171C,0X7D001726);
	set_func_flags(0X7D00171C,0x404);
	SetType(0X7D00171C, "enum TEE_Result __cdecl tee_time_get_sys_time(struct TEE_Time *time);");
	set_frame_size(0X7D00171C, 0X8, 0, 0);
	add_func    (0X7D00172C,0X7D001732);
	set_func_flags(0X7D00172C,0x404);
	SetType(0X7D00172C, "uint32_t tee_time_get_sys_time_protection_level(void);");
	set_frame_size(0X7D00172C, 0, 0, 0);
	add_func    (0X7D001738,0X7D00177E);
	set_func_flags(0X7D001738,0x400);
	SetType(0X7D001738, "enum TEE_Result __cdecl tee_time_get_ree_time(struct TEE_Time *time);");
	set_frame_size(0X7D001738, 0X30, 0, 0);
	add_func    (0X7D001788,0X7D001794);
	set_func_flags(0X7D001788,0x400);
	SetType(0X7D001788, "void time_source_init(void);");
	add_func    (0X7D00179C,0X7D0017C8);
	set_func_flags(0X7D00179C,0x404);
	SetType(0X7D00179C, "void __cdecl cpu_spin_lock(void *address);");
	set_frame_size(0X7D00179C, 0, 0, 0);
	set_name(0X7D0017A0, "_spinlock_loop", SN_LOCAL);
	add_func    (0X7D0017C8,0X7D0017FC);
	set_func_flags(0X7D0017C8,0x404);
	SetType(0X7D0017C8, "int __cdecl cpu_spin_trylock(void *address);");
	set_frame_size(0X7D0017C8, 0, 0, 0);
	set_name(0X7D0017D0, "_trylock_loop", SN_LOCAL);
	set_name(0X7D0017F0, "_trylock_out", SN_LOCAL);
	add_func    (0X7D0017FC,0X7D001814);
	set_func_flags(0X7D0017FC,0x404);
	SetType(0X7D0017FC, "void __cdecl cpu_spin_unlock(void *address);");
	set_frame_size(0X7D0017FC, 0, 0, 0);
	add_func    (0X7D001814,0X7D001830);
	set_func_flags(0X7D001814,0x404);
	SetType(0X7D001814, "void cpu_mmu_enable(void);");
	set_frame_size(0X7D001814, 0, 0, 0);
	add_func    (0X7D001830,0X7D001850);
	set_func_flags(0X7D001830,0x404);
	SetType(0X7D001830, "void cpu_mmu_enable_icache(void);");
	set_frame_size(0X7D001830, 0, 0, 0);
	add_func    (0X7D001850,0X7D001868);
	set_func_flags(0X7D001850,0x404);
	SetType(0X7D001850, "void cpu_mmu_enable_dcache(void);");
	set_frame_size(0X7D001850, 0, 0, 0);
	add_func    (0X7D001868,0X7D001878);
	set_func_flags(0X7D001868,0x404);
	SetType(0X7D001868, "void secure_mmu_unifiedtlbinvall(void);");
	set_frame_size(0X7D001868, 0, 0, 0);
	add_func    (0X7D00187C,0X7D001898);
	set_func_flags(0X7D00187C,0x404);
	SetType(0X7D00187C, "void __cdecl secure_mmu_unifiedtlbinvbymva(void *mva);");
	set_frame_size(0X7D00187C, 0, 0, 0);
	add_func    (0X7D001898,0X7D0018B0);
	set_func_flags(0X7D001898,0x404);
	SetType(0X7D001898, "void secure_mmu_unifiedtlbinv_curasid(void);");
	set_frame_size(0X7D001898, 0, 0, 0);
	add_func    (0X7D0018B0,0X7D0018C4);
	set_func_flags(0X7D0018B0,0x404);
	SetType(0X7D0018B0, "void __cdecl secure_mmu_unifiedtlbinv_byasid(unsigned int asid);");
	set_frame_size(0X7D0018B0, 0, 0, 0);
	add_func    (0X7D0018C4,0X7D001900);
	set_func_flags(0X7D0018C4,0x404);
	SetType(0X7D0018C4, "void arm_cl1_d_cleanbysetway(void);");
	set_frame_size(0X7D0018C4, 0, 0, 0);
	set_name(0X7D0018D4, "_cl_nextWay", SN_LOCAL);
	set_name(0X7D0018D8, "_cl_nextLine", SN_LOCAL);
	add_func    (0X7D001900,0X7D00193C);
	set_func_flags(0X7D001900,0x404);
	set_frame_size(0X7D001900, 0, 0, 0);
	set_name(0X7D001910, "_inv_nextWay", SN_LOCAL);
	set_name(0X7D001914, "_inv_nextLine", SN_LOCAL);
	add_func    (0X7D00193C,0X7D001978);
	set_func_flags(0X7D00193C,0x404);
	set_frame_size(0X7D00193C, 0, 0, 0);
	set_name(0X7D00194C, "_cli_nextWay", SN_LOCAL);
	set_name(0X7D001950, "_cli_nextLine", SN_LOCAL);
	add_func    (0X7D001978,0X7D0019A8);
	set_func_flags(0X7D001978,0x404);
	SetType(0X7D001978, "void __cdecl arm_cl1_d_cleanbyva(void *s, void *e);");
	set_frame_size(0X7D001978, 0, 0, 0);
	set_name(0X7D001990, "_cl_area_nextLine", SN_LOCAL);
	set_name(0X7D0019A0, "_cl_area_exit", SN_LOCAL);
	add_func    (0X7D0019A8,0X7D0019D8);
	set_func_flags(0X7D0019A8,0x404);
	SetType(0X7D0019A8, "void __cdecl arm_cl1_d_invbyva(void *s, void *e);");
	set_frame_size(0X7D0019A8, 0, 0, 0);
	set_name(0X7D0019C0, "_inv_area_dcache_nl", SN_LOCAL);
	set_name(0X7D0019D0, "_inv_area_dcache_exit", SN_LOCAL);
	add_func    (0X7D0019D8,0X7D001A08);
	set_func_flags(0X7D0019D8,0x404);
	SetType(0X7D0019D8, "void __cdecl arm_cl1_d_cleaninvbyva(void *s, void *e);");
	set_frame_size(0X7D0019D8, 0, 0, 0);
	set_name(0X7D0019F0, "_cli_area_nextLine", SN_LOCAL);
	set_name(0X7D001A00, "_cli_area_exit", SN_LOCAL);
	add_func    (0X7D001A08,0X7D001A20);
	set_func_flags(0X7D001A08,0x404);
	SetType(0X7D001A08, "void arm_cl1_i_inv_all(void);");
	set_frame_size(0X7D001A08, 0, 0, 0);
	add_func    (0X7D001A20,0X7D001A54);
	set_func_flags(0X7D001A20,0x404);
	SetType(0X7D001A20, "void __cdecl arm_cl1_i_inv(void *start, void *end);");
	set_frame_size(0X7D001A20, 0, 0, 0);
	set_name(0X7D001A2C, "_inv_icache_nextLine", SN_LOCAL);
	set_name(0X7D001A50, "_inv_icache_exit", SN_LOCAL);
	add_func    (0X7D001A54,0X7D001A5A);
	set_func_flags(0X7D001A54,0x404);
	set_frame_size(0X7D001A54, 0, 0, 0);
	add_func    (0X7D001A60,0X7D001A66);
	set_func_flags(0X7D001A60,0x404);
	set_frame_size(0X7D001A60, 0, 0, 0);
	add_func    (0X7D001A6C,0X7D001C14);
	set_func_flags(0X7D001A6C,0x404);
	SetType(0X7D001A6C, "void thread_check_canaries(void);");
	set_frame_size(0X7D001A6C, 0X18, 0, 0);
	define_local_var(0X7D001A6C, 0X7D001C14, "[bp-0X18]", "fmt");
	add_func    (0X7D001C48,0X7D001C92);
	set_func_flags(0X7D001C48,0x404);
	SetType(0X7D001C48, "void thread_init_boot_thread(void);");
	set_frame_size(0X7D001C48, 0X10, 0, 0);
	add_func    (0X7D001CA0,0X7D001CC4);
	set_func_flags(0X7D001CA0,0x404);
	SetType(0X7D001CA0, "void thread_clr_boot_thread(void);");
	set_frame_size(0X7D001CA0, 0X8, 0, 0);
	add_func    (0X7D001CCC,0X7D001CDE);
	set_func_flags(0X7D001CCC,0x404);
	SetType(0X7D001CCC, "void __cdecl thread_handle_fast_smc(struct thread_smc_args *args);");
	set_frame_size(0X7D001CCC, 0X8, 0, 0);
	add_func    (0X7D001CE4,0X7D001CF2);
	set_func_flags(0X7D001CE4,0x404);
	SetType(0X7D001CE4, "void *thread_get_tmp_sp(void);");
	set_frame_size(0X7D001CE4, 0X8, 0, 0);
	add_func    (0X7D001CF8,0X7D001D18);
	set_func_flags(0X7D001CF8,0x404);
	SetType(0X7D001CF8, "int thread_get_id(void);");
	set_frame_size(0X7D001CF8, 0X10, 0, 0);
	add_func    (0X7D001D1C,0X7D001D3C);
	set_func_flags(0X7D001D1C,0x404);
	SetType(0X7D001D1C, "void static thread_lazy_save_ns_vfp(void);");
	set_frame_size(0X7D001D1C, 0X8, 0, 0);
	add_func    (0X7D001D40,0X7D001E9A);
	set_func_flags(0X7D001D40,0x404);
	SetType(0X7D001D40, "void __cdecl thread_handle_std_smc(struct thread_smc_args *args);");
	set_frame_size(0X7D001D40, 0X18, 0, 0);
	add_func    (0X7D001EAC,0X7D001EEE);
	set_func_flags(0X7D001EAC,0x404);
	SetType(0X7D001EAC, "void static thread_lazy_restore_ns_vfp(void);");
	set_frame_size(0X7D001EAC, 0X10, 0, 0);
	add_func    (0X7D001EF4,0X7D001F28);
	set_func_flags(0X7D001EF4,0x404);
	SetType(0X7D001EF4, "void thread_state_free(void);");
	set_frame_size(0X7D001EF4, 0X10, 0, 0);
	add_func    (0X7D001F30,0X7D001F96);
	set_func_flags(0X7D001F30,0x400);
	SetType(0X7D001F30, "void __cdecl static thread_rpc_free(uint64_t cookie);");
	set_func_cmt(0X7D001F30,	"Older version than optee-os 2.2?", 1);
	set_frame_size(0X7D001F30, 0X30, 0, 0);
	define_local_var(0X7D001F30, 0X7D001F96, "[bp-0X30]", "arg");
	add_func    (0X7D001FA4,0X7D0020A8);
	set_func_flags(0X7D001FA4,0x404);
	SetType(0X7D001FA4, "void __cdecl thread_init_primary(const struct thread_handlers *handlers);");
	set_frame_size(0X7D001FA4, 0, 0, 0);
	add_func    (0X7D0020DC,0X7D00212A);
	set_func_flags(0X7D0020DC,0x404);
	SetType(0X7D0020DC, "void thread_init_per_cpu(void);");
	set_frame_size(0X7D0020DC, 0X10, 0, 0);
	add_func    (0X7D002140,0X7D002156);
	set_func_flags(0X7D002140,0x404);
	SetType(0X7D002140, "struct thread_specific_data *thread_get_tsd(void);");
	set_frame_size(0X7D002140, 0X8, 0, 0);
	add_func    (0X7D00215C,0X7D002176);
	set_func_flags(0X7D00215C,0x404);
	SetType(0X7D00215C, "struct thread_ctx_regs *thread_get_ctx_regs(void);");
	set_frame_size(0X7D00215C, 0X8, 0, 0);
	add_func    (0X7D002180,0X7D0021C4);
	set_func_flags(0X7D002180,0x404);
	SetType(0X7D002180, "void __cdecl thread_set_irq(bool enable);");
	set_frame_size(0X7D002180, 0X10, 0, 0);
	add_func    (0X7D0021CC,0X7D002200);
	set_func_flags(0X7D0021CC,0x404);
	SetType(0X7D0021CC, "void thread_restore_irq(void);");
	set_frame_size(0X7D0021CC, 0X8, 0, 0);
	add_func    (0X7D002208,0X7D002230);
	set_func_flags(0X7D002208,0x404);
	SetType(0X7D002208, "void thread_kernel_save_vfp(void);");
	set_frame_size(0X7D002208, 0X10, 0, 0);
	add_func    (0X7D002234,0X7D002262);
	set_func_flags(0X7D002234,0x404);
	SetType(0X7D002234, "void thread_kernel_restore_vfp(void);");
	set_frame_size(0X7D002234, 0X8, 0, 0);
	add_func    (0X7D002268,0X7D0022D8);
	set_func_flags(0X7D002268,0x404);
	SetType(0X7D002268, "void __cdecl thread_user_enable_vfp(struct thread_user_vfp_state *uvfp);");
	set_frame_size(0X7D002268, 0X10, 0, 0);
	add_func    (0X7D0022DC,0X7D002304);
	set_func_flags(0X7D0022DC,0x404);
	SetType(0X7D0022DC, "void thread_user_save_vfp(void);");
	set_frame_size(0X7D0022DC, 0X8, 0, 0);
	add_func    (0X7D002308,0X7D002382);
	set_func_flags(0X7D002308,0x404);
	SetType(0X7D002308, "int __cdecl thread_state_suspend(uint32_t flags, uint32_t cpsr, uint32_t pc);");
	set_frame_size(0X7D002308, 0X28, 0, 0);
	add_func    (0X7D00238C,0X7D0023B8);
	set_func_flags(0X7D00238C,0x404);
	SetType(0X7D00238C, "void __cdecl thread_user_clear_vfp(struct thread_user_vfp_state *uvfp);");
	set_frame_size(0X7D00238C, 0X8, 0, 0);
	add_func    (0X7D0023BC,0X7D00240C);
	set_func_flags(0X7D0023BC,0x404);
	SetType(0X7D0023BC, "uint32_t __cdecl thread_enter_user_mode(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int user_sp, unsigned int entry_func, bool is_32bit, uint32_t *exit_status0, uint32_t *exit_status1);");
	set_frame_size(0X7D0023BC, 0X18, 0, 0);
	define_local_var(0X7D0023BC, 0X7D00240C, "[bp+0]", "user_sp");
	define_local_var(0X7D0023BC, 0X7D00240C, "[bp+0X4]", "entry_func");
	define_local_var(0X7D0023BC, 0X7D00240C, "[bp+0X8]", "is_32bit");
	define_local_var(0X7D0023BC, 0X7D00240C, "[bp+0XC]", "exit_status0");
	define_local_var(0X7D0023BC, 0X7D00240C, "[bp+0X10]", "exit_status1");
	add_func    (0X7D002414,0X7D002444);
	set_func_flags(0X7D002414,0x404);
	SetType(0X7D002414, "void __cdecl thread_add_mutex(struct mutex *m);");
	set_frame_size(0X7D002414, 0X8, 0, 0);
	add_func    (0X7D00244C,0X7D002480);
	set_func_flags(0X7D00244C,0x404);
	SetType(0X7D00244C, "void __cdecl thread_rem_mutex(struct mutex *m);");
	set_frame_size(0X7D00244C, 0X10, 0, 0);
	add_func    (0X7D002488,0X7D0024FC);
	set_func_flags(0X7D002488,0x404);
	set_frame_size(0X7D002488, 0X10, 0, 0);
	add_func    (0X7D002504,0X7D00253E);
	set_func_flags(0X7D002504,0x404);
	SetType(0X7D002504, "bool thread_enable_prealloc_rpc_cache(void);");
	set_frame_size(0X7D002504, 0X10, 0, 0);
	add_func    (0X7D002548,0X7D002600);
	set_func_flags(0X7D002548,0x404);
	SetType(0X7D002548, "uint32_t __cdecl static rpc_cmd_nolock(uint32_t cmd, size_t num_params, struct optee_msg_param *params);");
	set_frame_size(0X7D002548, 0X40, 0, 0);
	define_local_var(0X7D002548, 0X7D002600, "[bp-0X40]", "arg");
	add_func    (0X7D00260C,0X7D002636);
	set_func_flags(0X7D00260C,0x404);
	SetType(0X7D00260C, "void __cdecl thread_rpc_free_arg(uint64_t cookie);");
	set_frame_size(0X7D00260C, 0X28, 0, 0);
	add_func    (0X7D00263C,0X7D00265E);
	set_func_flags(0X7D00263C,0x405);
	SetType(0X7D00263C, "void __cdecl thread_rpc_alloc_arg(size_t size, uint32_t *arg, uint64_t *cookie);");
	set_frame_size(0X7D00263C, 0X40, 0, 0);
	add_func    (0X7D00265E,0X7D0026A4);
	set_func_flags(0X7D00265E,0x400);
	set_frame_size(0X7D00265E, 0, 0, 0);
	define_local_var(0X7D00265E, 0X7D0026A4, "[bp+0X10]", "cookie");
	add_func    (0X7D0026A8,0X7D002722);
	set_func_flags(0X7D0026A8,0);
	SetType(0X7D0026A8, "void __cdecl _thread_std_smc_entry(struct thread_smc_args *args);");
	set_frame_size(0X7D0026A8, 0X20, 0, 0);
	define_local_var(0X7D0026A8, 0X7D002722, "[bp-0X1C]", "arg");
	define_local_var(0X7D0026A8, 0X7D002722, "[bp-0X18]", "cookie");
	add_func    (0X7D002730,0X7D0027F2);
	set_func_flags(0X7D002730,0x404);
	SetType(0X7D002730, "void __cdecl thread_rpc_alloc_payload(size_t size, uint32_t *payload, uint64_t *cookie);");
	set_frame_size(0X7D002730, 0X40, 0, 0);
	define_local_var(0X7D002730, 0X7D0027F2, "[bp-0X40]", "arg");
	add_func    (0X7D002800,0X7D002950);
	set_func_flags(0X7D002800,0x404);
	SetType(0X7D002800, "void __cdecl static print_detailed_abort(struct abort_info *ai, const char *ctx);");
	set_frame_size(0X7D002800, 0X30, 0, 0);
	define_local_var(0X7D002800, 0X7D002950, "[bp-0X30]", "fmt");
	add_func    (0X7D002990,0X7D0029D0);
	set_func_flags(0X7D002990,0x404);
	SetType(0X7D002990, "void __cdecl static handle_user_ta_panic(struct abort_info *ai);");
	set_frame_size(0X7D002990, 0, 0, 0);
	add_func    (0X7D0029DC,0X7D0029E2);
	set_func_flags(0X7D0029DC,0x404);
	SetType(0X7D0029DC, "void __cdecl abort_print(struct abort_info *ai);");
	set_frame_size(0X7D0029DC, 0, 0, 0);
	add_func    (0X7D0029E8,0X7D002A86);
	set_func_flags(0X7D0029E8,0x404);
	SetType(0X7D0029E8, "void __cdecl abort_print_error(struct abort_info *ai);");
	set_frame_size(0X7D0029E8, 0X70, 0, 0);
	define_local_var(0X7D0029E8, 0X7D002A86, "[bp-0X70]", "fmt");
	add_func    (0X7D002A94,0X7D002C5A);
	set_func_flags(0X7D002A94,0x400);
	set_frame_size(0X7D002A94, 0X28, 0, 0);
	define_local_var(0X7D002A94, 0X7D002C5A, "[bp-0X14]", "ai");
	add_func    (0X7D002CB0,0X7D002CBC);
	set_func_flags(0X7D002CB0,0x404);
	SetType(0X7D002CB0, "void __cdecl vfp_save_extension_regs(uint64_t *regs);");
	set_frame_size(0X7D002CB0, 0, 0, 0);
	add_func    (0X7D002CBC,0X7D002CC8);
	set_func_flags(0X7D002CBC,0x404);
	SetType(0X7D002CBC, "void __cdecl vfp_restore_extension_regs(uint64_t *regs);");
	set_frame_size(0X7D002CBC, 0, 0, 0);
	add_func    (0X7D002CC8,0X7D002CD0);
	set_func_flags(0X7D002CC8,0x404);
	SetType(0X7D002CC8, "void __cdecl vfp_write_fpexc(uint32_t fpexc);");
	set_frame_size(0X7D002CC8, 0, 0, 0);
	add_func    (0X7D002CD0,0X7D002CD8);
	set_func_flags(0X7D002CD0,0x404);
	SetType(0X7D002CD0, "uint32_t vfp_read_fpexc(void);");
	set_frame_size(0X7D002CD0, 0, 0, 0);
	add_func    (0X7D002CD8,0X7D002CE0);
	set_func_flags(0X7D002CD8,0x404);
	SetType(0X7D002CD8, "void __cdecl vfp_write_fpscr(uint32_t fpscr);");
	set_frame_size(0X7D002CD8, 0, 0, 0);
	add_func    (0X7D002CE0,0X7D002CE8);
	set_func_flags(0X7D002CE0,0x404);
	SetType(0X7D002CE0, "uint32_t vfp_read_fpscr(void);");
	set_frame_size(0X7D002CE0, 0, 0, 0);
	add_func    (0X7D002CE8,0X7D002CFC);
	set_func_flags(0X7D002CE8,0x404);
	SetType(0X7D002CE8, "size_t get_core_pos(void);");
	set_frame_size(0X7D002CE8, 0, 0, 0);
	add_func    (0X7D002CFC,0X7D002D1C);
	set_func_flags(0X7D002CFC,0x404);
	SetType(0X7D002CFC, "uint32_t __cdecl temp_set_mode(int cpu_mode);");
	set_frame_size(0X7D002CFC, 0, 0, 0);
	add_func    (0X7D002D1C,0X7D002D38);
	set_func_flags(0X7D002D1C,0x404);
	SetType(0X7D002D1C, "uint32_t __cdecl read_mode_sp(int cpu_mode);");
	set_frame_size(0X7D002D1C, 0X8, 0, 0);
	add_func    (0X7D002D38,0X7D002D54);
	set_func_flags(0X7D002D38,0x404);
	SetType(0X7D002D38, "uint32_t __cdecl read_mode_lr(int cpu_mode);");
	set_frame_size(0X7D002D38, 0X8, 0, 0);
	add_func    (0X7D002D54,0X7D002D74);
	set_func_flags(0X7D002D54,0x401);
	add_func    (0X7D002D78,0X7D002DCC);
	set_func_flags(0X7D002D78,0x404);
	SetType(0X7D002D78, "void __cdecl static _mutex_unlock(struct mutex *m);");
	set_frame_size(0X7D002D78, 0X18, 0, 0);
	add_func    (0X7D002DD4,0X7D002DFA);
	set_func_flags(0X7D002DD4,0x404);
	SetType(0X7D002DD4, "void __cdecl mutex_destroy(struct mutex *m);");
	set_frame_size(0X7D002DD4, 0X8, 0, 0);
	add_func    (0X7D002E08,0X7D002E2E);
	set_func_flags(0X7D002E08,0x404);
	SetType(0X7D002E08, "void __cdecl condvar_destroy(struct condvar *cv);");
	set_frame_size(0X7D002E08, 0X8, 0, 0);
	add_func    (0X7D002E38,0X7D002ED4);
	set_func_flags(0X7D002E38,0x404);
	SetType(0X7D002E38, "void __cdecl static condvar_wait(struct condvar *cv, struct mutex *m);");
	set_frame_size(0X7D002E38, 0X30, 0, 0);
	add_func    (0X7D002EE0,0X7D002F28);
	set_func_flags(0X7D002EE0,0x404);
	SetType(0X7D002EE0, "void __cdecl wq_wait_init(struct wait_queue *wq, struct wait_queue_elem *wqe, struct condvar *cv);");
	set_frame_size(0X7D002EE0, 0X10, 0, 0);
	add_func    (0X7D002F2C,0X7D002F7A);
	set_func_flags(0X7D002F2C,0x404);
	SetType(0X7D002F2C, "void __cdecl wq_wait_final(struct wait_queue *wq, struct wait_queue_elem *wqe, const void *sync_obj);");
	set_frame_size(0X7D002F2C, 0X18, 0, 0);
	add_func    (0X7D002F80,0X7D002FD0);
	set_func_flags(0X7D002F80,0x404);
	SetType(0X7D002F80, "void __cdecl wq_wake_one(struct wait_queue *wq, const void *sync_obj);");
	set_frame_size(0X7D002F80, 0X10, 0, 0);
	add_func    (0X7D002FD4,0X7D003012);
	set_func_flags(0X7D002FD4,0x404);
	SetType(0X7D002FD4, "void __cdecl wq_promote_condvar(struct wait_queue *wq, struct condvar *cv, bool only_one, const void *sync_obj);");
	set_frame_size(0X7D002FD4, 0X18, 0, 0);
	add_func    (0X7D003018,0X7D003050);
	set_func_flags(0X7D003018,0x404);
	SetType(0X7D003018, "bool __cdecl wq_have_condvar(struct wait_queue *wq, struct condvar *cv);");
	set_frame_size(0X7D003018, 0X10, 0, 0);
	add_func    (0X7D003054,0X7D003082);
	set_func_flags(0X7D003054,0x404);
	SetType(0X7D003054, "bool __cdecl wq_is_empty(struct wait_queue *wq);");
	set_frame_size(0X7D003054, 0X10, 0, 0);
	add_func    (0X7D003088,0X7D003096);
	set_func_flags(0X7D003088,0x405);
	SetType(0X7D003088, "unsigned int __cdecl pm_panic(unsigned int a0, unsigned int a1);");
	set_frame_size(0X7D003088, 0X8, 0, 0);
	add_func    (0X7D0030A0,0X7D00312C);
	set_func_flags(0X7D0030A0,0x400);
	SetType(0X7D0030A0, "void __cdecl generic_boot_init_primary(unsigned int pageable_part, unsigned int nsec_entry, unsigned int fdt);");
	set_func_cmt(0X7D0030A0,	"Modified by DJI", 1);
	set_frame_size(0X7D0030A0, 0X10, 0, 0);
	define_local_var(0X7D0030A0, 0X7D00312C, "[bp-0X10]", "fmt");
	add_func    (0X7D00314C,0X7D00336C);
	set_func_flags(0X7D00314C,0x404);
	SetType(0X7D00314C, "bool __cdecl unwind_stack(struct unwind_state *state);");
	set_frame_size(0X7D00314C, 0X20, 0, 0);
	add_func    (0X7D003374,0X7D0033C6);
	set_func_flags(0X7D003374,0x400);
	set_frame_size(0X7D003374, 0X40, 0, 0);
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X40]", "a5");
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X3C]", "a6");
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X38]", "a7");
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X34]", "a8");
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X2C]", "fourcc");
	define_local_var(0X7D003374, 0X7D0033C6, "[bp-0X28]", "passphrase");
	add_func    (0X7D0033DC,0X7D003438);
	set_func_flags(0X7D0033DC,0x400);
	set_frame_size(0X7D0033DC, 0X18, 0, 0);
	define_local_var(0X7D0033DC, 0X7D003438, "[bp-0X18]", "ufie");
	define_local_var(0X7D0033DC, 0X7D003438, "[bp-0X14]", "ufie_len");
	add_func    (0X7D003458,0X7D003512);
	set_func_flags(0X7D003458,0x400);
	SetType(0X7D003458, "enum TEE_Result __cdecl fw_image_verify(uint8_t *dt_ptr, unsigned int *dt_len, char *img_name, int a4, int support_chunks);");
	set_frame_size(0X7D003458, 0X238, 0, 0);
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X238]", "fmt");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X234]", "a6");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X230]", "a7");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X22C]", "a8");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X228]", "a9");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X224]", "a10");
	define_local_var(0X7D003458, 0X7D003512, "[bp-0X220]", "chunks");
	define_local_var(0X7D003458, 0X7D003512, "[bp+0]", "support_chunks");
	add_func    (0X7D003528,0X7D003634);
	set_func_flags(0X7D003528,0x400);
	SetType(0X7D003528, "TEE_Result __fastcall crypto_init(signed int *crypto, unsigned int a2, int img_enc_key, int a4, char encrypt);");
	set_frame_size(0X7D003528, 0X40, 0, 0);
	define_local_var(0X7D003528, 0X7D003634, "[bp-0X40]", "fmt");
	define_local_var(0X7D003528, 0X7D003634, "[bp+0]", "encrypt");
	add_func    (0X7D00366C,0X7D0036AC);
	set_func_flags(0X7D00366C,0x400);
	SetType(0X7D00366C, "signed int __fastcall crypto_update(uint8_t *crypto, uint8_t *dst, const uint8_t *data, size_t len);");
	set_frame_size(0X7D00366C, 0X28, 0, 0);
	define_local_var(0X7D00366C, 0X7D0036AC, "[bp-0X28]", "data");
	define_local_var(0X7D00366C, 0X7D0036AC, "[bp-0X24]", "len");
	define_local_var(0X7D00366C, 0X7D0036AC, "[bp-0X20]", "dst");
	add_func    (0X7D0036B8,0X7D0036F8);
	set_func_flags(0X7D0036B8,0x400);
	SetType(0X7D0036B8, "int __fastcall crypto_finalize(uint8_t *crypto, uint8_t *a2);");
	set_frame_size(0X7D0036B8, 0X10, 0, 0);
	add_func    (0X7D003704,0X7D0037A0);
	set_func_flags(0X7D003704,0x400);
	SetType(0X7D003704, "int __cdecl image_auth(uint8_t *signtr_ptr, int signtr_len, uint8_t *shadig, int shadig_len, struct ImgRSAPublicKey *key);");
	set_frame_size(0X7D003704, 0X150, 0, 0);
	define_local_var(0X7D003704, 0X7D0037A0, "[bp+0]", "key");
	add_func    (0X7D0037A8,0X7D0037EA);
	set_func_flags(0X7D0037A8,0x400);
	SetType(0X7D0037A8, "uint8_t *__fastcall keymgr_get_key(uint32_t fourcc);");
	set_frame_size(0X7D0037A8, 0X8, 0, 0);
	add_func    (0X7D0037F8,0X7D003878);
	set_func_flags(0X7D0037F8,0x400);
	SetType(0X7D0037F8, "signed int __fastcall keymgr_add_key(uint8_t *key_head, uint8_t *key);");
	set_frame_size(0X7D0037F8, 0X18, 0, 0);
	define_local_var(0X7D0037F8, 0X7D003878, "[bp-0X18]", "fmt");
	add_func    (0X7D003888,0X7D003918);
	set_func_flags(0X7D003888,0x400);
	SetType(0X7D003888, "int __fastcall keymgr_inject_key(unsigned int fourcc, void *key, int key_len);");
	set_frame_size(0X7D003888, 0X48, 0, 0);
	define_local_var(0X7D003888, 0X7D003918, "[bp-0X48]", "fmt");
	define_local_var(0X7D003888, 0X7D003918, "[bp-0X34]", "key_head");
	add_func    (0X7D003938,0X7D003960);
	set_func_flags(0X7D003938,0x400);
	SetType(0X7D003938, "int __fastcall keymgr_inject_lc_keys(void *prak, int prak_len, void *tbie, int tbie_len, void *ufie, int ufie_len);");
	set_frame_size(0X7D003938, 0X10, 0, 0);
	define_local_var(0X7D003938, 0X7D003960, "[bp+0]", "ufie");
	define_local_var(0X7D003938, 0X7D003960, "[bp+0X4]", "ufie_len");
	add_func    (0X7D00396C,0X7D003994);
	set_func_flags(0X7D00396C,0x400);
	SetType(0X7D00396C, "int __fastcall keymgr_inject_uc_keys(void *prak, int prak_len, void *tbie, int tbie_len, void *ufie, int ufie_len);");
	set_frame_size(0X7D00396C, 0X10, 0, 0);
	define_local_var(0X7D00396C, 0X7D003994, "[bp+0]", "ufie");
	define_local_var(0X7D00396C, 0X7D003994, "[bp+0X4]", "ufie_len");
	add_func    (0X7D0039A0,0X7D0039F4);
	set_func_flags(0X7D0039A0,0x400);
	set_frame_size(0X7D0039A0, 0X20, 0, 0);
	add_func    (0X7D003A00,0X7D003ABA);
	set_func_flags(0X7D003A00,0x400);
	SetType(0X7D003A00, "signed int __fastcall image_extract_payload(uint8_t *dt_ptr, char a2, int a3, int a4, int a5);");
	set_frame_size(0X7D003A00, 0X230, 0, 0);
	define_local_var(0X7D003A00, 0X7D003ABA, "[bp-0X230]", "fmt");
	define_local_var(0X7D003A00, 0X7D003ABA, "[bp-0X228]", "destination");
	define_local_var(0X7D003A00, 0X7D003ABA, "[bp+0]", "a5");
	add_func    (0X7D003AC4,0X7D003C08);
	set_func_flags(0X7D003AC4,0x400);
	SetType(0X7D003AC4, "int __fastcall image_decrypt_payload(uint8_t *dt_ptr, char flags, uint8_t *enc_key, int a4, int a5);");
	set_frame_size(0X7D003AC4, 0X280, 0, 0);
	define_local_var(0X7D003AC4, 0X7D003C08, "[bp-0X280]", "fmt");
	define_local_var(0X7D003AC4, 0X7D003C08, "[bp-0X228]", "destination");
	define_local_var(0X7D003AC4, 0X7D003C08, "[bp+0]", "a5");
	add_func    (0X7D003C1C,0X7D003CFC);
	set_func_flags(0X7D003C1C,0x400);
	SetType(0X7D003C1C, "int __fastcall image_verify_digest(uint8_t *dt_ptr);");
	set_frame_size(0X7D003C1C, 0X2A0, 0, 0);
	define_local_var(0X7D003C1C, 0X7D003CFC, "[bp-0X2A0]", "fmt");
	define_local_var(0X7D003C1C, 0X7D003CFC, "[bp-0X298]", "a2");
	define_local_var(0X7D003C1C, 0X7D003CFC, "[bp-0X278]", "digest");
	define_local_var(0X7D003C1C, 0X7D003CFC, "[bp-0X258]", "crypto");
	define_local_var(0X7D003C1C, 0X7D003CFC, "[bp-0X218]", "chunks");
	add_func    (0X7D003D10,0X7D00401C);
	set_func_flags(0X7D003D10,0x400);
	SetType(0X7D003D10, "int __cdecl image_verify(uint8_t *dt_ptr, unsigned int img_size, int expect_type, char *expect_name, int flags, uint32_t *a6, int a7, int a8, int a9, int a10);");
	set_frame_size(0X7D003D10, 0X70, 0, 0);
	define_local_var(0X7D003D10, 0X7D00401C, "[bp-0X70]", "fmt");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp-0X68]", "a7");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp-0X5C]", "img_enc_key");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp-0X58]", "img_auth_key");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp-0X48]", "sha_buf");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0]", "a2");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0X4]", "a6");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0X8]", "a3");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0XC]", "a8");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0X10]", "a4");
	define_local_var(0X7D003D10, 0X7D00401C, "[bp+0X14]", "a5");
	add_func    (0X7D004028,0X7D004062);
	set_func_flags(0X7D004028,0x404);
	set_frame_size(0X7D004028, 0XC, 0, 0);
	add_func    (0X7D004068,0X7D004092);
	set_func_flags(0X7D004068,0x404);
	SetType(0X7D004068, "struct tee_mmap_region *__cdecl static find_map_by_pa(unsigned int pa);");
	set_frame_size(0X7D004068, 0X8, 0, 0);
	add_func    (0X7D004098,0X7D0040DE);
	set_func_flags(0X7D004098,0x404);
	SetType(0X7D004098, "uint32_t __cdecl static type_to_attr(int t);");
	set_frame_size(0X7D004098, 0X8, 0, 0);
	add_func    (0X7D0040EC,0X7D0043DA);
	set_func_flags(0X7D0040EC,0x404);
	SetType(0X7D0040EC, "void core_init_mmu_map(void);");
	set_frame_size(0X7D0040EC, 0X48, 0, 0);
	define_local_var(0X7D0040EC, 0X7D0043DA, "[bp-0X48]", "fmt");
	add_func    (0X7D00441C,0X7D004430);
	set_func_flags(0X7D00441C,0x404);
	SetType(0X7D00441C, "bool core_mmu_is_shm_cached(void);");
	set_frame_size(0X7D00441C, 0, 0, 0);
	add_func    (0X7D004434,0X7D0044CC);
	set_func_flags(0X7D004434,0x404);
	SetType(0X7D004434, "bool __cdecl core_pbuf_is(enum buf_is_attr attr, uint32_t pbuf, size_t len);");
	set_frame_size(0X7D004434, 0X10, 0, 0);
	add_func    (0X7D0044DC,0X7D004508);
	set_func_flags(0X7D0044DC,0x404);
	SetType(0X7D0044DC, "void __cdecl core_mmu_get_mem_by_type(unsigned int type, uint32_t *s, uint32_t *e);");
	set_frame_size(0X7D0044DC, 0XC, 0, 0);
	add_func    (0X7D00450C,0X7D004550);
	set_func_flags(0X7D00450C,0x404);
	SetType(0X7D00450C, "int __cdecl core_tlb_maintenance(int op, unsigned int a);");
	set_frame_size(0X7D00450C, 0X10, 0, 0);
	define_local_var(0X7D00450C, 0X7D004550, "[bp-0X10]", "fmt");
	add_func    (0X7D004558,0X7D004564);
	set_func_flags(0X7D004558,0x400);
	SetType(0X7D004558, "enum TEE_Result __cdecl static cache_maintenance_l1(int op, void *va, size_t len);");
	set_frame_size(0X7D004558, 0X8, 0, 0);
	add_func    (0X7D0045D0,0X7D00460C);
	set_func_flags(0X7D0045D0,0x404);
	SetType(0X7D0045D0, "enum TEE_Result __cdecl check_pgt_avail(uint32_t base, uint32_t end);");
	set_frame_size(0X7D0045D0, 0X10, 0, 0);
	define_local_var(0X7D0045D0, 0X7D00460C, "[bp-0X10]", "fmt");
	add_func    (0X7D004618,0X7D004676);
	set_func_flags(0X7D004618,0x404);
	SetType(0X7D004618, "enum TEE_Result __cdecl static tee_mmu_user_va2pa_attr(const struct tee_mmu_info *mmu, void *ua, uint32_t *pa, uint32_t *attr);");
	set_frame_size(0X7D004618, 0X20, 0, 0);
	add_func    (0X7D00467C,0X7D0046DA);
	set_func_flags(0X7D00467C,0x404);
	SetType(0X7D00467C, "enum TEE_Result __cdecl tee_mmu_init(struct user_ta_ctx *utc);");
	set_frame_size(0X7D00467C, 0X10, 0, 0);
	add_func    (0X7D0046E8,0X7D0047BE);
	set_func_flags(0X7D0046E8,0x404);
	SetType(0X7D0046E8, "enum TEE_Result __cdecl tee_mmu_map_add_segment(struct user_ta_ctx *utc, uint32_t base_pa, size_t offs, size_t size, uint32_t prot);");
	set_frame_size(0X7D0046E8, 0X20, 0, 0);
	define_local_var(0X7D0046E8, 0X7D0047BE, "[bp+0]", "prot");
	add_func    (0X7D0047C4,0X7D0047FC);
	set_func_flags(0X7D0047C4,0x404);
	SetType(0X7D0047C4, "void __cdecl tee_mmu_final(struct user_ta_ctx *utc);");
	set_frame_size(0X7D0047C4, 0X8, 0, 0);
	add_func    (0X7D004800,0X7D004858);
	set_func_flags(0X7D004800,0x400);
	SetType(0X7D004800, "int __cdecl static tee_mmu_user_va2pa_helper(const struct user_ta_ctx *utc, void *ua, uint32_t *pa);");
	set_func_cmt(0X7D004800,	"inlined tee_mmu_user_va2pa_attr() with attr=NULL", 1);
	set_frame_size(0X7D004800, 0X20, 0, 0);
	add_func    (0X7D00485C,0X7D004AC0);
	set_func_flags(0X7D00485C,0x404);
	SetType(0X7D00485C, "enum TEE_Result __cdecl tee_mmu_map_param(struct user_ta_ctx *utc, struct tee_ta_param *param);");
	set_frame_size(0X7D00485C, 0X38, 0, 0);
	add_func    (0X7D004AD0,0X7D004B28);
	set_func_flags(0X7D004AD0,0x404);
	SetType(0X7D004AD0, "enum TEE_Result __cdecl tee_mmu_check_access_rights(const struct user_ta_ctx *utc, uint32_t flags, uint32_t uaddr, size_t len);");
	set_frame_size(0X7D004AD0, 0X20, 0, 0);
	define_local_var(0X7D004AD0, 0X7D004B28, "[bp-0X1C]", "attr");
	add_func    (0X7D004B30,0X7D004B52);
	set_func_flags(0X7D004B30,0x404);
	SetType(0X7D004B30, "uint32_t __cdecl tee_mmu_get_load_addr(const struct tee_ta_ctx *const ctx);");
	set_frame_size(0X7D004B30, 0X8, 0, 0);
	add_func    (0X7D004B60,0X7D004BE0);
	set_func_flags(0X7D004B60,0x404);
	SetType(0X7D004B60, "void teecore_init_ta_ram(void);");
	set_frame_size(0X7D004B60, 0X20, 0, 0);
	define_local_var(0X7D004B60, 0X7D004BE0, "[bp-0X18]", "s");
	define_local_var(0X7D004B60, 0X7D004BE0, "[bp-0X14]", "e");
	add_func    (0X7D004BF8,0X7D004C56);
	set_func_flags(0X7D004BF8,0x404);
	SetType(0X7D004BF8, "void teecore_init_pub_ram(void);");
	set_frame_size(0X7D004BF8, 0X10, 0, 0);
	define_local_var(0X7D004BF8, 0X7D004C56, "[bp-0X10]", "s");
	define_local_var(0X7D004BF8, 0X7D004C56, "[bp-0XC]", "e");
	add_func    (0X7D004C70,0X7D004C98);
	set_func_flags(0X7D004C70,0x404);
	SetType(0X7D004C70, "uint32_t __cdecl tee_mmu_user_get_cache_attr(struct user_ta_ctx *utc, void *va);");
	set_frame_size(0X7D004C70, 0X10, 0, 0);
	define_local_var(0X7D004C70, 0X7D004C98, "[bp-0XC]", "attr");
	add_func    (0X7D004CA4,0X7D004DAA);
	set_func_flags(0X7D004CA4,0x404);
	SetType(0X7D004CA4, "uint32_t __cdecl static mattr_to_desc(unsigned int level, uint32_t attr);");
	set_frame_size(0X7D004CA4, 0X1C, 0, 0);
	add_func    (0X7D004DB4,0X7D004E14);
	set_func_flags(0X7D004DB4,0x404);
	SetType(0X7D004DB4, "void __cdecl core_mmu_create_user_map(struct user_ta_ctx *utc, struct core_mmu_user_map *map);");
	set_frame_size(0X7D004DB4, 0X28, 0, 0);
	add_func    (0X7D004E24,0X7D004F88);
	set_func_flags(0X7D004E24,0x404);
	SetType(0X7D004E24, "void __cdecl core_init_mmu_tables(struct tee_mmap_region *mm);");
	set_frame_size(0X7D004E24, 0X38, 0, 0);
	define_local_var(0X7D004E24, 0X7D004F88, "[bp-0X34]", "attr");
	add_func    (0X7D004FAC,0X7D004FE2);
	set_func_flags(0X7D004FAC,0x404);
	SetType(0X7D004FAC, "void core_init_mmu_regs(void);");
	set_frame_size(0X7D004FAC, 0, 0, 0);
	add_func    (0X7D004FEC,0X7D0050FE);
	set_func_flags(0X7D004FEC,0x400);
	SetType(0X7D004FEC, "struct tee_mm_entry_t *__cdecl tee_mm_alloc(struct tee_mm_pool_t *pool, uint32_t size);");
	set_func_cmt(0X7D004FEC,	"compared to stock 2.2, lock/unlock mechanisms added", 1);
	set_frame_size(0X7D004FEC, 0X20, 0, 0);
	add_func    (0X7D00510C,0X7D005152);
	set_func_flags(0X7D00510C,0x400);
	SetType(0X7D00510C, "void __cdecl tee_mm_free(tee_mm_entry_t *p);");
	set_func_cmt(0X7D00510C,	"compared to stock 2.2, lock/unlock mechanisms added", 1);
	set_frame_size(0X7D00510C, 0X8, 0, 0);
	add_func    (0X7D005160,0X7D00517A);
	set_func_flags(0X7D005160,0x404);
	SetType(0X7D005160, "void __cdecl static pgt_free_unlocked(struct pgt_cache *pgt_cache);");
	set_frame_size(0X7D005160, 0X8, 0, 0);
	add_func    (0X7D005180,0X7D0051AA);
	set_func_flags(0X7D005180,0x404);
	SetType(0X7D005180, "void pgt_init(void);");
	set_func_cmt(0X7D005180,	"not defined(CFG_PAGED_USER_TA)", 1);
	set_frame_size(0X7D005180, 0X10, 0, 0);
	add_func    (0X7D0051BC,0X7D005244);
	set_func_flags(0X7D0051BC,0x404);
	SetType(0X7D0051BC, "void __cdecl pgt_alloc(struct pgt_cache *pgt_cache, void *ctx, uint32_t begin, uint32_t last);");
	set_frame_size(0X7D0051BC, 0X20, 0, 0);
	add_func    (0X7D005250,0X7D005276);
	set_func_flags(0X7D005250,0x404);
	SetType(0X7D005250, "void __cdecl pgt_free(struct pgt_cache *pgt_cache, bool save_ctx);");
	set_frame_size(0X7D005250, 0X8, 0, 0);
	add_func    (0X7D005280,0X7D0052D8);
	set_func_flags(0X7D005280,0x404);
	SetType(0X7D005280, "uint32_t __cdecl tee_svc_do_call(struct thread_svc_regs *regs, int (__cdecl *func)(int));");
	set_frame_size(0X7D005280, 0X18, 0, 0);
	set_name(0X7D0052C4, ".Lno_args", SN_LOCAL);
	set_name(0X7D0052D0, ".Lret", SN_LOCAL);
	add_func    (0X7D0052D8,0X7D0052E8);
	set_func_flags(0X7D0052D8,0x404);
	set_frame_size(0X7D0052D8, 0, 0, 0);
	add_func    (0X7D0052E8,0X7D0052FC);
	set_func_flags(0X7D0052E8,0x404);
	set_frame_size(0X7D0052E8, 0, 0, 0);
	add_func    (0X7D005304,0X7D005372);
	set_func_flags(0X7D005304,0x404);
	SetType(0X7D005304, "int __cdecl syscall_cache_operation(void *va, size_t len, unsigned int op);");
	set_frame_size(0X7D005304, 0X18, 0, 0);
	add_func    (0X7D00537C,0X7D0053AC);
	set_func_flags(0X7D00537C,0x404);
	SetType(0X7D00537C, "void __cdecl tee_svc_handler(struct thread_svc_regs *regs);");
	set_frame_size(0X7D00537C, 0X8, 0, 0);
	add_func    (0X7D0053B8,0X7D0053FE);
	set_func_flags(0X7D0053B8,0x404);
	SetType(0X7D0053B8, "uint32_t __cdecl tee_svc_sys_return_helper(uint32_t ret, bool panic, uint32_t panic_code, struct thread_svc_regs *regs);");
	set_frame_size(0X7D0053B8, 0X28, 0, 0);
	add_func    (0X7D00540C,0X7D0055CC);
	set_func_flags(0X7D00540C,0x404);
	SetType(0X7D00540C, "void __cdecl tee_entry_std(struct thread_smc_args *smc_args);");
	set_frame_size(0X7D00540C, 0XB0, 0, 0);
	define_local_var(0X7D00540C, 0X7D0055CC, "[bp-0XB0]", "fmt");
	define_local_var(0X7D00540C, 0X7D0055CC, "[bp-0X70]", "destination");
	add_func    (0X7D0055E4,0X7D0055F4);
	set_func_flags(0X7D0055E4,0x404);
	SetType(0X7D0055E4, "void __cdecl tee_entry_get_api_uuid(struct thread_smc_args *args);");
	set_frame_size(0X7D0055E4, 0, 0, 0);
	add_func    (0X7D005604,0X7D005614);
	set_func_flags(0X7D005604,0x404);
	SetType(0X7D005604, "void __cdecl tee_entry_get_os_uuid(struct thread_smc_args *args);");
	set_frame_size(0X7D005604, 0, 0, 0);
	add_func    (0X7D005624,0X7D0056FC);
	set_func_flags(0X7D005624,0x400);
	SetType(0X7D005624, "void __cdecl tee_entry_fast(uint64_t args);");
	set_frame_size(0X7D005624, 0X10, 0, 0);
	add_func    (0X7D005718,0X7D005764);
	set_func_flags(0X7D005718,0x400);
	SetType(0X7D005718, "enum TEE_Result init_teecore(void);");
	set_func_cmt(0X7D005718,	"Modified by DJI", 1);
	set_frame_size(0X7D005718, 0X18, 0, 0);
	define_local_var(0X7D005718, 0X7D005764, "[bp-0X18]", "fmt");
	add_func    (0X7D00577C,0X7D0059BC);
	set_func_flags(0X7D00577C,0x400);
	set_frame_size(0X7D00577C, 0X18, 0, 0);
	define_local_var(0X7D00577C, 0X7D0059BC, "[bp-0X18]", "fmt");
	add_func    (0X7D0059C8,0X7D005B76);
	set_func_flags(0X7D0059C8,0x400);
	SetType(0X7D0059C8, "int __cdecl core_self_tests(uint32_t nParamTypes, struct TEE_Param pParams[]);");
	set_frame_size(0X7D0059C8, 0X28, 0, 0);
	define_local_var(0X7D0059C8, 0X7D005B76, "[bp-0X28]", "fmt");
	add_func    (0X7D005B84,0X7D005BA8);
	set_func_flags(0X7D005B84,0x400);
	set_frame_size(0X7D005B84, 0X8, 0, 0);
	add_func    (0X7D005BAC,0X7D005BBA);
	set_func_flags(0X7D005BAC,0x401);
	set_frame_size(0X7D005BAC, 0X8, 0, 0);
	add_func    (0X7D005BC4,0X7D005C36);
	set_func_flags(0X7D005BC4,0x400);
	SetType(0X7D005BC4, "void __cdecl platform_tee_entry_fast(uint64_t args);");
	set_frame_size(0X7D005BC4, 0X10, 0, 0);
	add_func    (0X7D005C3C,0X7D005C52);
	set_func_flags(0X7D005C3C,0x400);
	set_frame_size(0X7D005C3C, 0X8, 0, 0);
	add_func    (0X7D005C5C,0X7D005C60);
	set_func_flags(0X7D005C5C,0x400);
	SetType(0X7D005C5C, "const struct thread_handlers *generic_boot_get_handlers(void);");
	add_func    (0X7D005C64,0X7D005CB2);
	set_func_flags(0X7D005C64,0x400);
	set_frame_size(0X7D005C64, 0X10, 0, 0);
	add_func    (0X7D005CC8,0X7D005CE2);
	set_func_flags(0X7D005CC8,0x400);
	set_frame_size(0X7D005CC8, 0X8, 0, 0);
	add_func    (0X7D005CE8,0X7D005D16);
	set_func_flags(0X7D005CE8,0x400);
	set_frame_size(0X7D005CE8, 0X10, 0, 0);
	add_func    (0X7D005D1C,0X7D005D46);
	set_func_flags(0X7D005D1C,0x400);
	set_frame_size(0X7D005D1C, 0X8, 0, 0);
	add_func    (0X7D005D50,0X7D005D68);
	set_func_flags(0X7D005D50,0x400);
	set_frame_size(0X7D005D50, 0X8, 0, 0);
	add_func    (0X7D005D6C,0X7D005D82);
	set_func_flags(0X7D005D6C,0x400);
	set_frame_size(0X7D005D6C, 0X8, 0, 0);
	add_func    (0X7D005D88,0X7D005D9E);
	set_func_flags(0X7D005D88,0x400);
	set_frame_size(0X7D005D88, 0X8, 0, 0);
	add_func    (0X7D005DA8,0X7D005DBA);
	set_func_flags(0X7D005DA8,0x400);
	SetType(0X7D005DA8, "void __cdecl sub_7D005DA8(int a1);");
	set_frame_size(0X7D005DA8, 0X8, 0, 0);
	add_func    (0X7D005DC0,0X7D005DE8);
	set_func_flags(0X7D005DC0,0x400);
	set_frame_size(0X7D005DC0, 0X10, 0, 0);
	define_local_var(0X7D005DC0, 0X7D005DE8, "[bp-0X10]", "fmt");
	add_func    (0X7D005DF8,0X7D005F20);
	set_func_flags(0X7D005DF8,0x400);
	set_frame_size(0X7D005DF8, 0X20, 0, 0);
	add_func    (0X7D005F38,0X7D005F5C);
	set_func_flags(0X7D005F38,0x400);
	add_func    (0X7D005F5C,0X7D005F60);
	set_func_flags(0X7D005F5C,0x440);
	add_func    (0X7D005F64,0X7D005F72);
	set_func_flags(0X7D005F64,0x400);
	set_frame_size(0X7D005F64, 0X8, 0, 0);
	add_func    (0X7D005F78,0X7D005F88);
	set_func_flags(0X7D005F78,0x400);
	set_frame_size(0X7D005F78, 0X8, 0, 0);
	add_func    (0X7D005F8C,0X7D005FAC);
	set_func_flags(0X7D005F8C,0x400);
	set_frame_size(0X7D005F8C, 0X8, 0, 0);
	add_func    (0X7D005FB4,0X7D005FEC);
	set_func_flags(0X7D005FB4,0x400);
	set_frame_size(0X7D005FB4, 0X8, 0, 0);
	add_func    (0X7D005FF4,0X7D00600C);
	set_func_flags(0X7D005FF4,0x400);
	set_frame_size(0X7D005FF4, 0X8, 0, 0);
	add_func    (0X7D006014,0X7D00601A);
	set_func_flags(0X7D006014,0x400);
	SetType(0X7D006014, "void __cdecl sm_set_entry_vector(void *entry_vector);");
	add_func    (0X7D006020,0X7D0060D0);
	set_func_flags(0X7D006020,0x400);
	set_frame_size(0X7D006020, 0X78, 0, 0);
	define_local_var(0X7D006020, 0X7D0060D0, "[bp-0X78]", "clnt_id");
	define_local_var(0X7D006020, 0X7D0060D0, "[bp-0X74]", "cancel_req_to");
	define_local_var(0X7D006020, 0X7D0060D0, "[bp-0X70]", "param");
	define_local_var(0X7D006020, 0X7D0060D0, "[bp-0X68]", "sess");
	add_func    (0X7D0060D8,0X7D0060EE);
	set_func_flags(0X7D0060D8,0x400);
	set_frame_size(0X7D0060D8, 0X8, 0, 0);
	add_func    (0X7D0060F4,0X7D00617A);
	set_func_flags(0X7D0060F4,0x400);
	set_frame_size(0X7D0060F4, 0X58, 0, 0);
	add_func    (0X7D006184,0X7D0061BC);
	set_func_flags(0X7D006184,0x404);
	SetType(0X7D006184, "enum TEE_Result __cdecl tee_dispatch_cancel_command(struct tee_dispatch_cancel_command_in *in, struct tee_dispatch_cancel_command_out *out);");
	set_frame_size(0X7D006184, 0X18, 0, 0);
	define_local_var(0X7D006184, 0X7D0061BC, "[bp-0X14]", "err");
	add_func    (0X7D0061C4,0X7D0061EA);
	set_func_flags(0X7D0061C4,0x404);
	SetType(0X7D0061C4, "enum TEE_Result __cdecl check_client(struct tee_ta_session *s, const struct TEE_Identity *id);");
	set_frame_size(0X7D0061C4, 0X8, 0, 0);
	add_func    (0X7D006218,0X7D006244);
	set_func_flags(0X7D006218,0x400);
	SetType(0X7D006218, "void __cdecl static tee_ta_clear_busy(struct tee_ta_ctx *ctx);");
	set_frame_size(0X7D006218, 0X8, 0, 0);
	add_func    (0X7D006248,0X7D0062D2);
	set_func_flags(0X7D006248,0x400);
	SetType(0X7D006248, "bool __cdecl static tee_ta_try_set_busy(struct tee_ta_ctx *ctx);");
	set_frame_size(0X7D006248, 0X10, 0, 0);
	add_func    (0X7D0062E4,0X7D0062F2);
	set_func_flags(0X7D0062E4,0x401);
	SetType(0X7D0062E4, "void __cdecl static panic__tee_ta_set_busy();");
	set_frame_size(0X7D0062E4, 0X8, 0, 0);
	add_func    (0X7D0062FC,0X7D006352);
	set_func_flags(0X7D0062FC,0x400);
	set_frame_size(0X7D0062FC, 0X8, 0, 0);
	add_func    (0X7D006360,0X7D00639E);
	set_func_flags(0X7D006360,0x400);
	set_frame_size(0X7D006360, 0X10, 0, 0);
	add_func    (0X7D0063A4,0X7D00640C);
	set_func_flags(0X7D0063A4,0x404);
	SetType(0X7D0063A4, "struct tee_ta_session *__cdecl tee_ta_get_session(uint32_t id, bool exclusive, struct tee_ta_session_head *open_sessions);");
	set_frame_size(0X7D0063A4, 0X10, 0, 0);
	add_func    (0X7D006410,0X7D006518);
	set_func_flags(0X7D006410,0x404);
	SetType(0X7D006410, "int __cdecl tee_ta_close_session(struct tee_ta_session *csess, struct tee_ta_session_head *open_sessions, const struct TEE_Identity *clnt_id);");
	set_frame_size(0X7D006410, 0X20, 0, 0);
	add_func    (0X7D006534,0X7D0066D4);
	set_func_flags(0X7D006534,0x400);
	SetType(0X7D006534, "enum TEE_Result __cdecl tee_ta_open_session(struct TEE_ErrorOrigin *err, struct tee_ta_session **sess, struct tee_ta_session_head *open_sessions, const struct TEE_UUID *uuid, const struct TEE_Identity *clnt_id, uint32_t cancel_req_to, struct tee_ta_param *param);");
	set_frame_size(0X7D006534, 0X28, 0, 0);
	define_local_var(0X7D006534, 0X7D0066D4, "[bp+0]", "clnt_id");
	define_local_var(0X7D006534, 0X7D0066D4, "[bp+0X4]", "cancel_req_to");
	define_local_var(0X7D006534, 0X7D0066D4, "[bp+0X8]", "param");
	add_func    (0X7D0066F4,0X7D006770);
	set_func_flags(0X7D0066F4,0x400);
	set_frame_size(0X7D0066F4, 0X18, 0, 0);
	add_func    (0X7D006778,0X7D006796);
	set_func_flags(0X7D006778,0x404);
	SetType(0X7D006778, "enum TEE_Result __cdecl tee_ta_cancel_command(int *err, struct tee_ta_session *sess, const struct TEE_Identity *clnt_id);");
	set_frame_size(0X7D006778, 0X8, 0, 0);
	add_func    (0X7D00679C,0X7D0067B2);
	set_func_flags(0X7D00679C,0x400);
	set_frame_size(0X7D00679C, 0X8, 0, 0);
	add_func    (0X7D0067B8,0X7D00682C);
	set_func_flags(0X7D0067B8,0x400);
	set_frame_size(0X7D0067B8, 0X28, 0, 0);
	define_local_var(0X7D0067B8, 0X7D00682C, "[bp-0X28]", "fmt");
	add_func    (0X7D006840,0X7D0068C2);
	set_func_flags(0X7D006840,0x401);
	set_frame_size(0X7D006840, 0X40, 0, 0);
	define_local_var(0X7D006840, 0X7D0068C2, "[bp-0X40]", "fmt");
	add_func    (0X7D0068E4,0X7D0068EA);
	set_func_flags(0X7D0068E4,0x400);
	SetType(0X7D0068E4, "void __cdecl itr_init(struct itr_chip *chip);");
	add_func    (0X7D0068F0,0X7D0068FC);
	set_func_flags(0X7D0068F0,0x400);
	set_frame_size(0X7D0068F0, 0X8, 0, 0);
	add_func    (0X7D006900,0X7D006972);
	set_func_flags(0X7D006900,0x400);
	add_func    (0X7D006990,0X7D006A0C);
	set_func_flags(0X7D006990,0x400);
	set_frame_size(0X7D006990, 0X30, 0, 0);
	define_local_var(0X7D006990, 0X7D006A0C, "[bp-0X2C]", "size");
	define_local_var(0X7D006990, 0X7D006A0C, "[bp+0]", "len");
	add_func    (0X7D006A20,0X7D006A78);
	set_func_flags(0X7D006A20,0x400);
	set_frame_size(0X7D006A20, 0X8, 0, 0);
	add_func    (0X7D006A8C,0X7D006B0C);
	set_func_flags(0X7D006A8C,0x400);
	add_func    (0X7D006B30,0X7D006BC8);
	set_func_flags(0X7D006B30,0x400);
	set_frame_size(0X7D006B30, 0X38, 0, 0);
	define_local_var(0X7D006B30, 0X7D006BC8, "[bp-0X30]", "dst");
	add_func    (0X7D006BE4,0X7D006D4A);
	set_func_flags(0X7D006BE4,0x400);
	set_frame_size(0X7D006BE4, 0XC8, 0, 0);
	define_local_var(0X7D006BE4, 0X7D006D4A, "[bp-0XA8]", "destination");
	add_func    (0X7D006D58,0X7D006D6A);
	set_func_flags(0X7D006D58,0x400);
	set_frame_size(0X7D006D58, 0X8, 0, 0);
	add_func    (0X7D006D70,0X7D006F5A);
	set_func_flags(0X7D006D70,0x400);
	set_frame_size(0X7D006D70, 0XD0, 0, 0);
	define_local_var(0X7D006D70, 0X7D006F5A, "[bp-0X68]", "size");
	add_func    (0X7D006F74,0X7D007088);
	set_func_flags(0X7D006F74,0x400);
	set_frame_size(0X7D006F74, 0X90, 0, 0);
	define_local_var(0X7D006F74, 0X7D007088, "[bp-0X74]", "size");
	define_local_var(0X7D006F74, 0X7D007088, "[bp-0X68]", "source");
	define_local_var(0X7D006F74, 0X7D007088, "[bp+0X4]", "destination");
	add_func    (0X7D007094,0X7D007142);
	set_func_flags(0X7D007094,0x400);
	set_frame_size(0X7D007094, 0X80, 0, 0);
	add_func    (0X7D007148,0X7D007214);
	set_func_flags(0X7D007148,0x400);
	set_frame_size(0X7D007148, 0X58, 0, 0);
	define_local_var(0X7D007148, 0X7D007214, "[bp-0X4C]", "size");
	define_local_var(0X7D007148, 0X7D007214, "[bp-0X40]", "ptr");
	add_func    (0X7D007220,0X7D007224);
	set_func_flags(0X7D007220,0x404);
	set_frame_size(0X7D007220, 0, 0, 0);
	add_func    (0X7D007228,0X7D007262);
	set_func_flags(0X7D007228,0x404);
	SetType(0X7D007228, "int __cdecl syscall_close_ta_session(unsigned int ta_sess);");
	set_frame_size(0X7D007228, 0X30, 0, 0);
	add_func    (0X7D007268,0X7D0072A8);
	set_func_flags(0X7D007268,0x404);
	SetType(0X7D007268, "void __cdecl syscall_log(const void *buf, size_t len);");
	set_frame_size(0X7D007268, 0X20, 0, 0);
	add_func    (0X7D0072AC,0X7D007496);
	set_func_flags(0X7D0072AC,0x400);
	SetType(0X7D0072AC, "TEE_Result __cdecl tee_svc_copy_param(struct tee_ta_session *sess, struct tee_ta_session *called_sess, struct utee_params *callee_params, struct tee_ta_param *param, void **tmp_buf_va, struct tee_mm_entry_t **mm);");
	set_frame_size(0X7D0072AC, 0X38, 0, 0);
	define_local_var(0X7D0072AC, 0X7D007496, "[bp+0]", "tmp_buf_va");
	define_local_var(0X7D0072AC, 0X7D007496, "[bp+0X4]", "lineno");
	add_func    (0X7D0074A8,0X7D0074CA);
	set_func_flags(0X7D0074A8,0x400);
	set_frame_size(0X7D0074A8, 0X8, 0, 0);
	add_func    (0X7D0074D0,0X7D0074F2);
	set_func_flags(0X7D0074D0,0x400);
	set_frame_size(0X7D0074D0, 0X8, 0, 0);
	add_func    (0X7D0074F8,0X7D007522);
	set_func_flags(0X7D0074F8,0x400);
	set_frame_size(0X7D0074F8, 0X18, 0, 0);
	add_func    (0X7D007528,0X7D0075CE);
	set_func_flags(0X7D007528,0x400);
	set_frame_size(0X7D007528, 0X40, 0, 0);
	define_local_var(0X7D007528, 0X7D0075CE, "[bp-0X34]", "destination");
	add_func    (0X7D0075E0,0X7D007720);
	set_func_flags(0X7D0075E0,0x404);
	SetType(0X7D0075E0, "int __cdecl syscall_get_property(unsigned int prop_set, unsigned int index, void *name, uint32_t *name_len, void *buf, uint32_t *blen, uint32_t *prop_type);");
	set_frame_size(0X7D0075E0, 0X38, 0, 0);
	define_local_var(0X7D0075E0, 0X7D007720, "[bp+0]", "buf");
	define_local_var(0X7D0075E0, 0X7D007720, "[bp+0X4]", "blen");
	define_local_var(0X7D0075E0, 0X7D007720, "[bp+0X8]", "prop_type");
	add_func    (0X7D007740,0X7D007834);
	set_func_flags(0X7D007740,0x404);
	SetType(0X7D007740, "int __cdecl syscall_get_property_name_to_index(unsigned int prop_set, void *name, unsigned int name_len, uint32_t *index);");
	set_frame_size(0X7D007740, 0X38, 0, 0);
	add_func    (0X7D007858,0X7D007930);
	set_func_flags(0X7D007858,0x404);
	SetType(0X7D007858, "int __cdecl syscall_invoke_ta_command(unsigned int ta_sess, unsigned int cancel_req_to, unsigned int cmd_id, struct utee_params *usr_param, uint32_t *ret_orig);");
	set_frame_size(0X7D007858, 0X98, 0, 0);
	define_local_var(0X7D007858, 0X7D007930, "[bp-0X98]", "tmp_buf_va");
	define_local_var(0X7D007858, 0X7D007930, "[bp-0X94]", "mm");
	define_local_var(0X7D007858, 0X7D007930, "[bp-0X84]", "p");
	define_local_var(0X7D007858, 0X7D007930, "[bp-0X6C]", "clnt_id__uuid");
	define_local_var(0X7D007858, 0X7D007930, "[bp+0]", "ret_orig");
	add_func    (0X7D00793C,0X7D007956);
	set_func_flags(0X7D00793C,0x404);
	SetType(0X7D00793C, "int __cdecl tee_svc_copy_kaddr_to_uref(uint32_t *uref, void *kaddr);");
	set_frame_size(0X7D00793C, 0X10, 0, 0);
	add_func    (0X7D00795C,0X7D007A78);
	set_func_flags(0X7D00795C,0x404);
	SetType(0X7D00795C, "int __cdecl syscall_open_ta_session(const struct TEE_UUID *dest, unsigned int cancel_req_to, struct utee_params *usr_param, uint32_t *ta_sess, uint32_t *ret_orig);");
	set_frame_size(0X7D00795C, 0X60, 0, 0);
	define_local_var(0X7D00795C, 0X7D007A78, "[bp-0X60]", "clnt_id");
	define_local_var(0X7D00795C, 0X7D007A78, "[bp-0X5C]", "cancel_req_to");
	define_local_var(0X7D00795C, 0X7D007A78, "[bp-0X58]", "param");
	define_local_var(0X7D00795C, 0X7D007A78, "[bp-0X44]", "kaddr");
	define_local_var(0X7D00795C, 0X7D007A78, "[bp-0X3C]", "p");
	define_local_var(0X7D00795C, 0X7D007A78, "[bp+0]", "ret_orig");
	add_func    (0X7D007A80,0X7D007ACE);
	set_func_flags(0X7D007A80,0x404);
	SetType(0X7D007A80, "int __cdecl syscall_wait(unsigned int timeout);");
	set_frame_size(0X7D007A80, 0X28, 0, 0);
	define_local_var(0X7D007A80, 0X7D007ACE, "[bp-0X20]", "time");
	add_func    (0X7D007AD4,0X7D007B2E);
	set_func_flags(0X7D007AD4,0x404);
	SetType(0X7D007AD4, "int __cdecl syscall_get_time(unsigned int cat, struct TEE_Time *mytime);");
	set_frame_size(0X7D007AD4, 0X20, 0, 0);
	define_local_var(0X7D007AD4, 0X7D007B2E, "[bp-0X18]", "time");
	add_func    (0X7D007B38,0X7D007B52);
	set_func_flags(0X7D007B38,0x400);
	set_frame_size(0X7D007B38, 0X8, 0, 0);
	add_func    (0X7D007B5C,0X7D007B6E);
	set_func_flags(0X7D007B5C,0x400);
	set_frame_size(0X7D007B5C, 0X8, 0, 0);
	add_func    (0X7D007B74,0X7D007B82);
	set_func_flags(0X7D007B74,0x400);
	set_frame_size(0X7D007B74, 0X8, 0, 0);
	add_func    (0X7D007B88,0X7D007B9C);
	set_func_flags(0X7D007B88,0x400);
	set_frame_size(0X7D007B88, 0X8, 0, 0);
	add_func    (0X7D007BA0,0X7D007BBE);
	set_func_flags(0X7D007BA0,0x400);
	set_frame_size(0X7D007BA0, 0X8, 0, 0);
	add_func    (0X7D007BC4,0X7D007C7C);
	set_func_flags(0X7D007BC4,0x400);
	set_frame_size(0X7D007BC4, 0X38, 0, 0);
	add_func    (0X7D007C80,0X7D007D28);
	set_func_flags(0X7D007C80,0x400);
	set_frame_size(0X7D007C80, 0X30, 0, 0);
	add_func    (0X7D007D34,0X7D007D48);
	set_func_flags(0X7D007D34,0x400);
	set_frame_size(0X7D007D34, 0X8, 0, 0);
	add_func    (0X7D007D4C,0X7D007D6E);
	set_func_flags(0X7D007D4C,0x400);
	set_frame_size(0X7D007D4C, 0X10, 0, 0);
	add_func    (0X7D007D74,0X7D007DB8);
	set_func_flags(0X7D007D74,0x400);
	set_frame_size(0X7D007D74, 0X20, 0, 0);
	define_local_var(0X7D007D74, 0X7D007DB8, "[bp-0X1C]", "v");
	add_func    (0X7D007DBC,0X7D007E00);
	set_func_flags(0X7D007DBC,0x400);
	set_frame_size(0X7D007DBC, 0X20, 0, 0);
	add_func    (0X7D007E04,0X7D007E3A);
	set_func_flags(0X7D007E04,0x400);
	set_frame_size(0X7D007E04, 0X20, 0, 0);
	add_func    (0X7D007E40,0X7D007E96);
	set_func_flags(0X7D007E40,0x400);
	set_frame_size(0X7D007E40, 0X30, 0, 0);
	add_func    (0X7D007E9C,0X7D007F1C);
	set_func_flags(0X7D007E9C,0x400);
	set_frame_size(0X7D007E9C, 0X30, 0, 0);
	add_func    (0X7D007F24,0X7D007F3E);
	set_func_flags(0X7D007F24,0x400);
	add_func    (0X7D007F44,0X7D008048);
	set_func_flags(0X7D007F44,0x400);
	set_frame_size(0X7D007F44, 0X48, 0, 0);
	define_local_var(0X7D007F44, 0X7D008048, "[bp-0X30]", "len");
	add_func    (0X7D008054,0X7D008142);
	set_func_flags(0X7D008054,0x400);
	add_func    (0X7D008194,0X7D0081B0);
	set_func_flags(0X7D008194,0x400);
	set_frame_size(0X7D008194, 0X10, 0, 0);
	add_func    (0X7D0081B4,0X7D0081FC);
	set_func_flags(0X7D0081B4,0x404);
	SetType(0X7D0081B4, "int __cdecl syscall_cryp_obj_get_info(unsigned int obj, struct TEE_ObjectInfo *info);");
	set_frame_size(0X7D0081B4, 0X18, 0, 0);
	add_func    (0X7D008200,0X7D00824C);
	set_func_flags(0X7D008200,0x404);
	SetType(0X7D008200, "int __cdecl syscall_cryp_obj_restrict_usage(unsigned int obj, unsigned int usage);");
	set_frame_size(0X7D008200, 0X18, 0, 0);
	add_func    (0X7D008250,0X7D0082E4);
	set_func_flags(0X7D008250,0x404);
	SetType(0X7D008250, "int __cdecl syscall_cryp_obj_get_attr(unsigned int obj, unsigned int attr_id, void *buffer, uint64_t *size);");
	set_frame_size(0X7D008250, 0X20, 0, 0);
	add_func    (0X7D0082F8,0X7D00833C);
	set_func_flags(0X7D0082F8,0x404);
	SetType(0X7D0082F8, "void __cdecl tee_obj_attr_free(struct tee_obj *o);");
	set_frame_size(0X7D0082F8, 0X20, 0, 0);
	add_func    (0X7D008340,0X7D008384);
	set_func_flags(0X7D008340,0x404);
	SetType(0X7D008340, "void __cdecl tee_obj_attr_clear(struct tee_obj *o);");
	set_frame_size(0X7D008340, 0X20, 0, 0);
	add_func    (0X7D008388,0X7D008412);
	set_func_flags(0X7D008388,0x404);
	SetType(0X7D008388, "int __cdecl tee_obj_attr_to_binary(struct tee_obj *o, void *data, size_t *data_len);");
	set_frame_size(0X7D008388, 0X30, 0, 0);
	add_func    (0X7D008424,0X7D00848A);
	set_func_flags(0X7D008424,0x404);
	SetType(0X7D008424, "enum TEE_Result __cdecl tee_obj_attr_from_binary(struct tee_obj *o, const void *data, size_t data_len);");
	set_frame_size(0X7D008424, 0X28, 0, 0);
	add_func    (0X7D00849C,0X7D00859A);
	set_func_flags(0X7D00849C,0x404);
	set_frame_size(0X7D00849C, 0X30, 0, 0);
	add_func    (0X7D0085BC,0X7D0086A2);
	set_func_flags(0X7D0085BC,0x400);
	set_frame_size(0X7D0085BC, 0X18, 0, 0);
	add_func    (0X7D0086C8,0X7D008732);
	set_func_flags(0X7D0086C8,0x404);
	SetType(0X7D0086C8, "int __cdecl syscall_cryp_obj_alloc(unsigned int obj_type, unsigned int max_key_size, uint32_t *obj);");
	set_frame_size(0X7D0086C8, 0X20, 0, 0);
	add_func    (0X7D008740,0X7D008780);
	set_func_flags(0X7D008740,0x404);
	SetType(0X7D008740, "int __cdecl syscall_cryp_obj_close(unsigned int obj);");
	set_frame_size(0X7D008740, 0X10, 0, 0);
	add_func    (0X7D008788,0X7D0087D4);
	set_func_flags(0X7D008788,0x404);
	SetType(0X7D008788, "int __cdecl syscall_cryp_obj_reset(unsigned int obj);");
	set_frame_size(0X7D008788, 0X10, 0, 0);
	define_local_var(0X7D008788, 0X7D0087D4, "[bp-0XC]", "o");
	add_func    (0X7D0087DC,0X7D00887E);
	set_func_flags(0X7D0087DC,0x404);
	SetType(0X7D0087DC, "int __cdecl syscall_cryp_obj_populate(unsigned int obj, struct utee_attribute *usr_attrs, unsigned int attr_count);");
	set_frame_size(0X7D0087DC, 0X20, 0, 0);
	add_func    (0X7D008890,0X7D0088FE);
	set_func_flags(0X7D008890,0x404);
	SetType(0X7D008890, "int __cdecl syscall_cryp_obj_copy(unsigned int dst, unsigned int src);");
	set_frame_size(0X7D008890, 0X20, 0, 0);
	add_func    (0X7D008908,0X7D008C66);
	set_func_flags(0X7D008908,0x404);
	SetType(0X7D008908, "int __cdecl syscall_obj_generate_key(unsigned int obj, unsigned int key_size, const struct utee_attribute *usr_params, unsigned int param_count);");
	set_frame_size(0X7D008908, 0X40, 0, 0);
	add_func    (0X7D008C78,0X7D008DD6);
	set_func_flags(0X7D008C78,0x404);
	SetType(0X7D008C78, "int __cdecl syscall_cryp_state_alloc(unsigned int algo, unsigned int mode, unsigned int key1, unsigned int key2, uint32_t *state);");
	set_frame_size(0X7D008C78, 0X30, 0, 0);
	define_local_var(0X7D008C78, 0X7D008DD6, "[bp+0]", "uref");
	add_func    (0X7D008DF4,0X7D008E58);
	set_func_flags(0X7D008DF4,0x404);
	SetType(0X7D008DF4, "int __cdecl syscall_cryp_state_copy(unsigned int dst, unsigned int src);");
	set_frame_size(0X7D008DF4, 0X20, 0, 0);
	add_func    (0X7D008E64,0X7D008E98);
	set_func_flags(0X7D008E64,0x404);
	SetType(0X7D008E64, "int __cdecl syscall_cryp_state_free(unsigned int state);");
	set_frame_size(0X7D008E64, 0X10, 0, 0);
	add_func    (0X7D008E9C,0X7D008F12);
	set_func_flags(0X7D008E9C,0x404);
	SetType(0X7D008E9C, "int __cdecl syscall_hash_init(unsigned int state, const void *iv, size_t iv_len);");
	set_frame_size(0X7D008E9C, 0X18, 0, 0);
	add_func    (0X7D008F24,0X7D008F9A);
	set_func_flags(0X7D008F24,0x404);
	SetType(0X7D008F24, "int __cdecl syscall_hash_update(unsigned int state, const void *chunk, size_t chunk_size);");
	set_frame_size(0X7D008F24, 0X18, 0, 0);
	add_func    (0X7D008FAC,0X7D0090C6);
	set_func_flags(0X7D008FAC,0x404);
	SetType(0X7D008FAC, "int __cdecl syscall_hash_final(unsigned int state, const void *chunk, size_t chunk_size, void *hash, uint64_t *hash_len);");
	set_frame_size(0X7D008FAC, 0X38, 0, 0);
	define_local_var(0X7D008FAC, 0X7D0090C6, "[bp-0X28]", "len");
	define_local_var(0X7D008FAC, 0X7D0090C6, "[bp+0]", "hash_len");
	add_func    (0X7D0090DC,0X7D0091A0);
	set_func_flags(0X7D0090DC,0x404);
	SetType(0X7D0090DC, "int __cdecl syscall_cipher_init(unsigned int state, const void *iv, size_t iv_len);");
	set_frame_size(0X7D0090DC, 0X48, 0, 0);
	define_local_var(0X7D0090DC, 0X7D0091A0, "[bp-0X40]", "key2_len");
	define_local_var(0X7D0090DC, 0X7D0091A0, "[bp-0X3C]", "iv");
	define_local_var(0X7D0090DC, 0X7D0091A0, "[bp-0X38]", "iv_len");
	add_func    (0X7D0091B0,0X7D00964A);
	set_func_flags(0X7D0091B0,0x404);
	SetType(0X7D0091B0, "int __cdecl syscall_cryp_derive_key(unsigned int state, const struct utee_attribute *usr_params, unsigned int param_count, unsigned int derived_key);");
	set_frame_size(0X7D0091B0, 0X70, 0, 0);
	add_func    (0X7D009670,0X7D0096A2);
	set_func_flags(0X7D009670,0x404);
	SetType(0X7D009670, "int __cdecl syscall_cryp_random_number_generate(void *buf, size_t blen);");
	set_frame_size(0X7D009670, 0X18, 0, 0);
	add_func    (0X7D0096A8,0X7D00972E);
	set_func_flags(0X7D0096A8,0x404);
	SetType(0X7D0096A8, "int __cdecl syscall_authenc_init(unsigned int state, const void *nonce, size_t nonce_len, size_t tag_len, size_t aad_len, size_t payload_len);");
	set_frame_size(0X7D0096A8, 0X48, 0, 0);
	define_local_var(0X7D0096A8, 0X7D00972E, "[bp+0]", "aad_len");
	define_local_var(0X7D0096A8, 0X7D00972E, "[bp+0X4]", "payload_len");
	add_func    (0X7D009740,0X7D009794);
	set_func_flags(0X7D009740,0x404);
	SetType(0X7D009740, "int __cdecl syscall_authenc_update_aad(unsigned int state, const void *aad_data, size_t aad_data_len);");
	set_frame_size(0X7D009740, 0X28, 0, 0);
	add_func    (0X7D0097A0,0X7D00986A);
	set_func_flags(0X7D0097A0,0x404);
	SetType(0X7D0097A0, "int __cdecl syscall_authenc_update_payload(unsigned int state, const void *src_data, size_t src_len, void *dst_data, uint64_t *dst_len);");
	set_frame_size(0X7D0097A0, 0X50, 0, 0);
	define_local_var(0X7D0097A0, 0X7D00986A, "[bp-0X30]", "len");
	define_local_var(0X7D0097A0, 0X7D00986A, "[bp+0]", "dst_len");
	add_func    (0X7D00987C,0X7D0099AE);
	set_func_flags(0X7D00987C,0x404);
	SetType(0X7D00987C, "int __cdecl syscall_authenc_enc_final(unsigned int state, const void *src_data, size_t src_len, void *dst_data, uint64_t *dst_len, void *tag, uint64_t *tag_len);");
	set_frame_size(0X7D00987C, 0X50, 0, 0);
	define_local_var(0X7D00987C, 0X7D0099AE, "[bp-0X30]", "len");
	define_local_var(0X7D00987C, 0X7D0099AE, "[bp+0]", "dst_len");
	define_local_var(0X7D00987C, 0X7D0099AE, "[bp+0X4]", "tag");
	define_local_var(0X7D00987C, 0X7D0099AE, "[bp+0X8]", "tag_len");
	add_func    (0X7D0099C4,0X7D009ACA);
	set_func_flags(0X7D0099C4,0x404);
	SetType(0X7D0099C4, "int __cdecl syscall_authenc_dec_final(unsigned int state, const void *src_data, size_t src_len, void *dst_data, uint64_t *dst_len, const void *tag, size_t tag_len);");
	set_frame_size(0X7D0099C4, 0X48, 0, 0);
	define_local_var(0X7D0099C4, 0X7D009ACA, "[bp-0X28]", "len");
	define_local_var(0X7D0099C4, 0X7D009ACA, "[bp+0]", "dst_len");
	define_local_var(0X7D0099C4, 0X7D009ACA, "[bp+0X4]", "tag");
	define_local_var(0X7D0099C4, 0X7D009ACA, "[bp+0X8]", "tag_len");
	add_func    (0X7D009AE0,0X7D009D7A);
	set_func_flags(0X7D009AE0,0x404);
	SetType(0X7D009AE0, "int __cdecl syscall_asymm_operate(unsigned int state, const struct utee_attribute *usr_params, size_t num_params, const void *src_data, size_t src_len, void *dst_data, uint64_t *dst_len);");
	set_frame_size(0X7D009AE0, 0X50, 0, 0);
	define_local_var(0X7D009AE0, 0X7D009D7A, "[bp-0X30]", "len");
	define_local_var(0X7D009AE0, 0X7D009D7A, "[bp+0]", "src_len");
	define_local_var(0X7D009AE0, 0X7D009D7A, "[bp+0X4]", "dst_data");
	define_local_var(0X7D009AE0, 0X7D009D7A, "[bp+0X8]", "dst_len");
	add_func    (0X7D009DF8,0X7D009F5E);
	set_func_flags(0X7D009DF8,0x404);
	SetType(0X7D009DF8, "int __cdecl syscall_asymm_verify(unsigned int state, const struct utee_attribute *usr_params, size_t num_params, const void *data, size_t data_len, const void *sig, size_t sig_len);");
	set_frame_size(0X7D009DF8, 0X48, 0, 0);
	define_local_var(0X7D009DF8, 0X7D009F5E, "[bp+0]", "data_len");
	define_local_var(0X7D009DF8, 0X7D009F5E, "[bp+0X4]", "sig");
	define_local_var(0X7D009DF8, 0X7D009F5E, "[bp+0X8]", "sig_len");
	add_func    (0X7D009F84,0X7D009FB6);
	set_func_flags(0X7D009F84,0x400);
	set_frame_size(0X7D009F84, 0X20, 0, 0);
	add_func    (0X7D009FC0,0X7D009FF2);
	set_func_flags(0X7D009FC0,0x400);
	set_frame_size(0X7D009FC0, 0X20, 0, 0);
	add_func    (0X7D009FFC,0X7D00A028);
	set_func_flags(0X7D009FFC,0x400);
	set_frame_size(0X7D009FFC, 0X18, 0, 0);
	add_func    (0X7D00A030,0X7D00A05C);
	set_func_flags(0X7D00A030,0x400);
	set_frame_size(0X7D00A030, 0X18, 0, 0);
	add_func    (0X7D00A064,0X7D00A09E);
	set_func_flags(0X7D00A064,0x400);
	set_frame_size(0X7D00A064, 0X28, 0, 0);
	add_func    (0X7D00A0A8,0X7D00A0DC);
	set_func_flags(0X7D00A0A8,0x400);
	set_frame_size(0X7D00A0A8, 0X20, 0, 0);
	add_func    (0X7D00A0E4,0X7D00A128);
	set_func_flags(0X7D00A0E4,0x400);
	set_frame_size(0X7D00A0E4, 0X28, 0, 0);
	add_func    (0X7D00A130,0X7D00A174);
	set_func_flags(0X7D00A130,0x400);
	set_frame_size(0X7D00A130, 0X28, 0, 0);
	add_func    (0X7D00A17C,0X7D00A1B0);
	set_func_flags(0X7D00A17C,0x400);
	set_frame_size(0X7D00A17C, 0X20, 0, 0);
	add_func    (0X7D00A1B8,0X7D00A1F4);
	set_func_flags(0X7D00A1B8,0x400);
	set_frame_size(0X7D00A1B8, 0X28, 0, 0);
	add_func    (0X7D00A1FC,0X7D00A238);
	set_func_flags(0X7D00A1FC,0x400);
	set_frame_size(0X7D00A1FC, 0X28, 0, 0);
	add_func    (0X7D00A240,0X7D00A28E);
	set_func_flags(0X7D00A240,0x400);
	set_frame_size(0X7D00A240, 0X20, 0, 0);
	add_func    (0X7D00A294,0X7D00A2CC);
	set_func_flags(0X7D00A294,0x400);
	set_frame_size(0X7D00A294, 0X10, 0, 0);
	add_func    (0X7D00A2D0,0X7D00A3D4);
	set_func_flags(0X7D00A2D0,0x400);
	set_frame_size(0X7D00A2D0, 0X48, 0, 0);
	define_local_var(0X7D00A2D0, 0X7D00A3D4, "[bp-0X48]", "fmt");
	define_local_var(0X7D00A2D0, 0X7D00A3D4, "[bp-0X34]", "size");
	add_func    (0X7D00A3EC,0X7D00A446);
	set_func_flags(0X7D00A3EC,0x400);
	set_frame_size(0X7D00A3EC, 0X18, 0, 0);
	add_func    (0X7D00A450,0X7D00A628);
	set_func_flags(0X7D00A450,0x404);
	SetType(0X7D00A450, "int __cdecl syscall_storage_obj_open(unsigned int storage_id, void *object_id, size_t object_id_len, unsigned int flags, uint32_t *obj);");
	set_frame_size(0X7D00A450, 0X40, 0, 0);
	define_local_var(0X7D00A450, 0X7D00A628, "[bp-0X40]", "fmt");
	define_local_var(0X7D00A450, 0X7D00A628, "[bp-0X38]", "file");
	define_local_var(0X7D00A450, 0X7D00A628, "[bp-0X34]", "sess");
	define_local_var(0X7D00A450, 0X7D00A628, "[bp-0X30]", "po");
	define_local_var(0X7D00A450, 0X7D00A628, "[bp-0X2C]", "data_len");
	define_local_var(0X7D00A450, 0X7D00A628, "[bp+0]", "uref");
	add_func    (0X7D00A654,0X7D00AA34);
	set_func_flags(0X7D00A654,0x404);
	SetType(0X7D00A654, "int __cdecl syscall_storage_obj_create(unsigned int storage_id, void *object_id, size_t object_id_len, unsigned int flags, unsigned int attr, void *object_id_1, size_t object_id_len_1, uint32_t *obj);");
	set_frame_size(0X7D00A654, 0X80, 0, 0);
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X80]", "whence");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X6C]", "flags1");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X68]", "ptr");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X64]", "object_id1");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X60]", "sess");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X50]", "data_len");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp-0X4C]", "head");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp+0]", "attr");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp+0X4]", "object_id_1");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp+0X8]", "object_id_len_1");
	define_local_var(0X7D00A654, 0X7D00AA34, "[bp+0XC]", "uref");
	add_func    (0X7D00AA58,0X7D00AB06);
	set_func_flags(0X7D00AA58,0x404);
	SetType(0X7D00AA58, "int __cdecl syscall_storage_obj_del(unsigned int obj);");
	set_frame_size(0X7D00AA58, 0X18, 0, 0);
	define_local_var(0X7D00AA58, 0X7D00AB06, "[bp-0X18]", "sess");
	add_func    (0X7D00AB24,0X7D00AC46);
	set_func_flags(0X7D00AB24,0x404);
	SetType(0X7D00AB24, "int __cdecl syscall_storage_obj_rename(unsigned int obj, void *object_id, size_t object_id_len);");
	set_frame_size(0X7D00AB24, 0X38, 0, 0);
	define_local_var(0X7D00AB24, 0X7D00AC46, "[bp-0X2C]", "sess");
	add_func    (0X7D00AC60,0X7D00ACA2);
	set_func_flags(0X7D00AC60,0x404);
	SetType(0X7D00AC60, "int __cdecl syscall_storage_alloc_enum(uint32_t *obj_enum);");
	set_frame_size(0X7D00AC60, 0X18, 0, 0);
	add_func    (0X7D00ACAC,0X7D00ACDE);
	set_func_flags(0X7D00ACAC,0x404);
	SetType(0X7D00ACAC, "int __cdecl syscall_storage_free_enum(unsigned int obj_enum);");
	set_frame_size(0X7D00ACAC, 0X10, 0, 0);
	define_local_var(0X7D00ACAC, 0X7D00ACDE, "[bp-0XC]", "sess");
	add_func    (0X7D00ACE8,0X7D00AD2E);
	set_func_flags(0X7D00ACE8,0x404);
	SetType(0X7D00ACE8, "int __cdecl syscall_storage_reset_enum(unsigned int obj_enum);");
	set_frame_size(0X7D00ACE8, 0X10, 0, 0);
	define_local_var(0X7D00ACE8, 0X7D00AD2E, "[bp-0XC]", "sess");
	add_func    (0X7D00AD38,0X7D00AE2E);
	set_func_flags(0X7D00AD38,0x404);
	SetType(0X7D00AD38, "int __cdecl syscall_storage_start_enum(unsigned int obj_enum, unsigned int storage_id);");
	set_frame_size(0X7D00AD38, 0X20, 0, 0);
	define_local_var(0X7D00AD38, 0X7D00AE2E, "[bp-0X1C]", "sess");
	add_func    (0X7D00AE4C,0X7D00AF4E);
	set_func_flags(0X7D00AE4C,0x404);
	SetType(0X7D00AE4C, "int __cdecl syscall_storage_next_enum(unsigned int obj_enum, struct TEE_ObjectInfo *info, void *obj_id, uint64_t *len);");
	set_frame_size(0X7D00AE4C, 0X30, 0, 0);
	add_func    (0X7D00AF60,0X7D00B034);
	set_func_flags(0X7D00AF60,0x404);
	SetType(0X7D00AF60, "int __cdecl syscall_storage_obj_read(unsigned int obj, void *data, size_t len, uint64_t *count);");
	set_frame_size(0X7D00AF60, 0X40, 0, 0);
	define_local_var(0X7D00AF60, 0X7D00B034, "[bp-0X40]", "fmt");
	add_func    (0X7D00B050,0X7D00B0DC);
	set_func_flags(0X7D00B050,0x404);
	SetType(0X7D00B050, "int __cdecl syscall_storage_obj_write(unsigned int obj, void *data, size_t len);");
	set_frame_size(0X7D00B050, 0X28, 0, 0);
	add_func    (0X7D00B0E8,0X7D00B198);
	set_func_flags(0X7D00B0E8,0x404);
	SetType(0X7D00B0E8, "int __cdecl syscall_storage_obj_trunc(unsigned int obj, size_t len);");
	set_frame_size(0X7D00B0E8, 0X30, 0, 0);
	define_local_var(0X7D00B0E8, 0X7D00B198, "[bp-0X30]", "fmt");
	define_local_var(0X7D00B0E8, 0X7D00B198, "[bp-0X20]", "o");
	define_local_var(0X7D00B0E8, 0X7D00B198, "[bp-0X1C]", "data_len");
	add_func    (0X7D00B1B4,0X7D00B262);
	set_func_flags(0X7D00B1B4,0x404);
	SetType(0X7D00B1B4, "int __cdecl syscall_storage_obj_seek(unsigned int obj, int32_t offset, unsigned int whence);");
	set_frame_size(0X7D00B1B4, 0X30, 0, 0);
	define_local_var(0X7D00B1B4, 0X7D00B262, "[bp-0X20]", "o");
	define_local_var(0X7D00B1B4, 0X7D00B262, "[bp-0X1C]", "data_len");
	add_func    (0X7D00B274,0X7D00B2EA);
	set_func_flags(0X7D00B274,0x400);
	SetType(0X7D00B274, "enum TEE_Result __cdecl tee_rpmb_alloc(size_t req_size, size_t resp_size, struct tee_rpmb_mem *mem, void **req, void **resp);");
	set_frame_size(0X7D00B274, 0X18, 0, 0);
	define_local_var(0X7D00B274, 0X7D00B2EA, "[bp+0]", "resp");
	add_func    (0X7D00B2F8,0X7D00B324);
	set_func_flags(0X7D00B2F8,0x404);
	SetType(0X7D00B2F8, "int __cdecl rpmb_fs_close(int fd);");
	set_frame_size(0X7D00B2F8, 0X8, 0, 0);
	add_func    (0X7D00B32C,0X7D00B39E);
	set_func_flags(0X7D00B32C,0x400);
	SetType(0X7D00B32C, "TEE_Result __cdecl tee_rpmb_mac_calc(uint8_t *mac, uint32_t macsize, uint8_t *key, uint32_t keysize, struct rpmb_data_frame *datafrms, uint16_t blkcnt);");
	set_frame_size(0X7D00B32C, 0X20, 0, 0);
	define_local_var(0X7D00B32C, 0X7D00B39E, "[bp+0]", "datafrms");
	define_local_var(0X7D00B32C, 0X7D00B39E, "[bp+0X4]", "blkcnt");
	add_func    (0X7D00B3B0,0X7D00B452);
	set_func_flags(0X7D00B3B0,0x400);
	SetType(0X7D00B3B0, "enum TEE_Result __cdecl decrypt(uint8_t *out, const struct rpmb_data_frame *frm, size_t size, size_t offset, uint16_t blk_idx, const uint8_t *fek);");
	set_frame_size(0X7D00B3B0, 0X28, 0, 0);
	define_local_var(0X7D00B3B0, 0X7D00B452, "[bp-0X24]", "mode");
	define_local_var(0X7D00B3B0, 0X7D00B452, "[bp+0]", "blk_idx");
	define_local_var(0X7D00B3B0, 0X7D00B452, "[bp+0X4]", "fek");
	add_func    (0X7D00B468,0X7D00B5A0);
	set_func_flags(0X7D00B468,0x400);
	SetType(0X7D00B468, "enum TEE_Result __cdecl tee_rpmb_req_pack(struct rpmb_req *req, struct rpmb_raw_data *rawdata, uint16_t nbr_frms, uint16_t dev_id, const uint8_t *fek);");
	set_frame_size(0X7D00B468, 0X30, 0, 0);
	define_local_var(0X7D00B468, 0X7D00B5A0, "[bp-0X30]", "fek");
	define_local_var(0X7D00B468, 0X7D00B5A0, "[bp-0X2C]", "mode");
	add_func    (0X7D00B5B0,0X7D00B818);
	set_func_flags(0X7D00B5B0,0x400);
	SetType(0X7D00B5B0, "enum TEE_Result __cdecl tee_rpmb_resp_unpack_verify(struct rpmb_data_frame *datafrm, struct rpmb_raw_data *rawdata, uint16_t nbr_frms, uint8_t *fek);");
	set_frame_size(0X7D00B5B0, 0X440, 0, 0);
	define_local_var(0X7D00B5B0, 0X7D00B818, "[bp-0X428]", "lastfrm");
	define_local_var(0X7D00B5B0, 0X7D00B818, "[bp-0X244]", "s2");
	define_local_var(0X7D00B5B0, 0X7D00B818, "[bp-0X228]", "destination");
	add_func    (0X7D00B838,0X7D00B900);
	set_func_flags(0X7D00B838,0x400);
	SetType(0X7D00B838, "enum TEE_Result __cdecl tee_rpmb_verify_key_sync_counter(uint16_t dev_id);");
	set_frame_size(0X7D00B838, 0XB0, 0, 0);
	define_local_var(0X7D00B838, 0X7D00B900, "[bp-0XB0]", "resp");
	define_local_var(0X7D00B838, 0X7D00B900, "[bp-0XA0]", "req");
	define_local_var(0X7D00B838, 0X7D00B900, "[bp-0X9C]", "resp_1");
	define_local_var(0X7D00B838, 0X7D00B900, "[bp-0X68]", "mem");
	define_local_var(0X7D00B838, 0X7D00B900, "[bp-0X40]", "rawdata");
	add_func    (0X7D00B90C,0X7D00BB00);
	set_func_flags(0X7D00B90C,0x400);
	SetType(0X7D00B90C, "enum TEE_Result __cdecl tee_rpmb_init();");
	set_frame_size(0X7D00B90C, 0X90, 0, 0);
	define_local_var(0X7D00B90C, 0X7D00BB00, "[bp-0X90]", "resp");
	define_local_var(0X7D00B90C, 0X7D00BB00, "[bp-0X80]", "req");
	define_local_var(0X7D00B90C, 0X7D00BB00, "[bp-0X7C]", "destination");
	define_local_var(0X7D00B90C, 0X7D00BB00, "[bp-0X68]", "source");
	define_local_var(0X7D00B90C, 0X7D00BB00, "[bp-0X40]", "outbuf");
	add_func    (0X7D00BB24,0X7D00BCC6);
	set_func_flags(0X7D00BB24,0x400);
	SetType(0X7D00BB24, "enum TEE_Result __cdecl tee_rpmb_write_blk(uint16_t blk_idx, const uint8_t *data_blks, uint16_t blkcnt, int dev_id);");
	set_frame_size(0X7D00BB24, 0XC0, 0, 0);
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XC0]", "fek_1");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XB4]", "fek");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XB0]", "data_blksa");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XAC]", "dev_ida");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XA8]", "tmp_blkcnt");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XA6]", "tmp_blk_idx");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0XA0]", "req");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0X9C]", "resp_1");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0X78]", "mem");
	define_local_var(0X7D00BB24, 0X7D00BCC6, "[bp-0X50]", "rawdata");
	add_func    (0X7D00BCD4,0X7D00BDD8);
	set_func_flags(0X7D00BCD4,0x400);
	SetType(0X7D00BCD4, "enum TEE_Result __cdecl tee_rpmb_read(uint32_t addr, uint8_t *data, uint32_t len);");
	set_frame_size(0X7D00BCD4, 0XB8, 0, 0);
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0XB8]", "resp");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0XAC]", "blk_idx");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0XAA]", "nbr_frms");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0XA8]", "req");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0XA4]", "fek");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0X70]", "mem");
	define_local_var(0X7D00BCD4, 0X7D00BDD8, "[bp-0X48]", "rawdata");
	add_func    (0X7D00BDE0,0X7D00BE58);
	set_func_flags(0X7D00BDE0,0x400);
	set_frame_size(0X7D00BDE0, 0X28, 0, 0);
	add_func    (0X7D00BE5C,0X7D00BEAA);
	set_func_flags(0X7D00BE5C,0x400);
	SetType(0X7D00BE5C, "void dump_fat(void);");
	set_frame_size(0X7D00BE5C, 0X10, 0, 0);
	add_func    (0X7D00BEB0,0X7D00BEDC);
	set_func_flags(0X7D00BEB0,0x400);
	SetType(0X7D00BEB0, "int __cdecl tee_rpmb_get_write_counter(uint32_t *counter);");
	set_func_cmt(0X7D00BEB0,	"Read the RPMB write counter.\nNo dev_id supplied as parameter.", 1);
	set_frame_size(0X7D00BEB0, 0X10, 0, 0);
	add_func    (0X7D00BEE4,0X7D00BF28);
	set_func_flags(0X7D00BEE4,0x400);
	SetType(0X7D00BEE4, "enum TEE_Result __cdecl write_fat_entry(struct rpmb_file_handle *fh, bool update_write_counter);");
	set_frame_size(0X7D00BEE4, 0X10, 0, 0);
	add_func    (0X7D00BF30,0X7D00C016);
	set_func_flags(0X7D00BF30,0x400);
	set_frame_size(0X7D00BF30, 0X18, 0, 0);
	add_func    (0X7D00C02C,0X7D00C1D6);
	set_func_flags(0X7D00C02C,0x400);
	SetType(0X7D00C02C, "int __cdecl static read_fat(struct rpmb_file_handle *fh, struct tee_mm_pool_t *p);");
	set_frame_size(0X7D00C02C, 0X230, 0, 0);
	add_func    (0X7D00C1E8,0X7D00C226);
	set_func_flags(0X7D00C1E8,0x400);
	set_frame_size(0X7D00C1E8, 0X10, 0, 0);
	add_func    (0X7D00C234,0X7D00C294);
	set_func_flags(0X7D00C234,0x400);
	SetType(0X7D00C234, "int __cdecl rpmb_fs_unlink(const char *filename);");
	set_frame_size(0X7D00C234, 0X10, 0, 0);
	add_func    (0X7D00C2A0,0X7D00C34E);
	set_func_flags(0X7D00C2A0,0x400);
	SetType(0X7D00C2A0, "int __cdecl rpmb_fs_rename(const char *old_name, const char *new_name);");
	set_frame_size(0X7D00C2A0, 0X20, 0, 0);
	add_func    (0X7D00C35C,0X7D00C3F0);
	set_func_flags(0X7D00C35C,0x400);
	SetType(0X7D00C35C, "uint64_t __cdecl rpmb_fs_lseek(enum TEE_Result *errno, int fd, uint64_t offset, int whence);");
	set_frame_size(0X7D00C35C, 0X20, 0, 0);
	define_local_var(0X7D00C35C, 0X7D00C3F0, "[bp-0X20]", "fmt");
	define_local_var(0X7D00C35C, 0X7D00C3F0, "[bp+0]", "whence");
	add_func    (0X7D00C404,0X7D00C488);
	set_func_flags(0X7D00C404,0x400);
	SetType(0X7D00C404, "int __cdecl static rpmb_fs_read(int *errno, int fd, void *buf, size_t size);");
	set_frame_size(0X7D00C404, 0X18, 0, 0);
	add_func    (0X7D00C494,0X7D00C5B0);
	set_func_flags(0X7D00C494,0x400);
	set_frame_size(0X7D00C494, 0X50, 0, 0);
	define_local_var(0X7D00C494, 0X7D00C5B0, "[bp-0X40]", "p");
	add_func    (0X7D00C5C4,0X7D00C73E);
	set_func_flags(0X7D00C5C4,0x400);
	SetType(0X7D00C5C4, "int __cdecl static rpmb_fs_write(int *errno, int fd, const void *buf, size_t size);");
	set_frame_size(0X7D00C5C4, 0X50, 0, 0);
	define_local_var(0X7D00C5C4, 0X7D00C73E, "[bp-0X48]", "mm");
	define_local_var(0X7D00C5C4, 0X7D00C73E, "[bp-0X44]", "errno1");
	define_local_var(0X7D00C5C4, 0X7D00C73E, "[bp-0X40]", "p");
	add_func    (0X7D00C768,0X7D00C870);
	set_func_flags(0X7D00C768,0x400);
	SetType(0X7D00C768, "int rpmb_fs_open_internal(const char *file, int flags, ...);");
	set_frame_size(0X7D00C768, 0X48, 0, 0);
	define_local_var(0X7D00C768, 0X7D00C870, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D00C768, 0X7D00C870, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D00C768, 0X7D00C870, "[bp-0X4]", "varg_r3");
	add_func    (0X7D00C87C,0X7D00C8E0);
	set_func_flags(0X7D00C87C,0x404);
	SetType(0X7D00C87C, "int static rpmb_fs_open(const char *file, int flags, ...);");
	set_frame_size(0X7D00C87C, 0X20, 0, 0);
	define_local_var(0X7D00C87C, 0X7D00C8E0, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D00C87C, 0X7D00C8E0, "[bp-0X4]", "varg_r3");
	add_func    (0X7D00C8EC,0X7D00CA72);
	set_func_flags(0X7D00C8EC,0x400);
	set_frame_size(0X7D00C8EC, 0X118, 0, 0);
	define_local_var(0X7D00C8EC, 0X7D00CA72, "[bp-0X114]", "source");
	add_func    (0X7D00CA88,0X7D00CAB6);
	set_func_flags(0X7D00CA88,0x400);
	SetType(0X7D00CA88, "int __cdecl rpmb_fs_rmdir(const char *path);");
	set_frame_size(0X7D00CA88, 0X10, 0, 0);
	define_local_var(0X7D00CA88, 0X7D00CAB6, "[bp-0XC]", "dir");
	add_func    (0X7D00CAC0,0X7D00CAEE);
	set_func_flags(0X7D00CAC0,0x400);
	set_frame_size(0X7D00CAC0, 0X10, 0, 0);
	add_func    (0X7D00CAF4,0X7D00CB22);
	set_func_flags(0X7D00CAF4,0x400);
	set_frame_size(0X7D00CAF4, 0X10, 0, 0);
	add_func    (0X7D00CB28,0X7D00CB50);
	set_func_flags(0X7D00CB28,0x400);
	set_frame_size(0X7D00CB28, 0X18, 0, 0);
	add_func    (0X7D00CB54,0X7D00CB7C);
	set_func_flags(0X7D00CB54,0x400);
	set_frame_size(0X7D00CB54, 0X18, 0, 0);
	add_func    (0X7D00CB80,0X7D00CBB0);
	set_func_flags(0X7D00CB80,0x400);
	set_frame_size(0X7D00CB80, 0X10, 0, 0);
	add_func    (0X7D00CBBC,0X7D00CC38);
	set_func_flags(0X7D00CBBC,0x400);
	SetType(0X7D00CBBC, "enum TEE_Result __cdecl do_hmac(uint8_t *out_key, uint8_t *in_key, uint32_t key_size, const uint8_t *message, size_t message_size);");
	set_frame_size(0X7D00CBBC, 0X30, 0, 0);
	define_local_var(0X7D00CBBC, 0X7D00CC38, "[bp-0X24]", "hash_ctx_size");
	define_local_var(0X7D00CBBC, 0X7D00CC38, "[bp+0]", "a5");
	add_func    (0X7D00CC48,0X7D00CCFE);
	set_func_flags(0X7D00CC48,0x400);
	SetType(0X7D00CC48, "enum TEE_Result __cdecl fek_crypt(enum TEE_OperationMode mode, uint8_t *key);");
	set_frame_size(0X7D00CC48, 0X70, 0, 0);
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X70]", "key1_len");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X6C]", "len");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X68]", "key2_len");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X64]", "iv");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X60]", "iv_len");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X58]", "size");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X50]", "dst_key");
	define_local_var(0X7D00CC48, 0X7D00CCFE, "[bp-0X40]", "tsk");
	add_func    (0X7D00CD18,0X7D00CD7C);
	set_func_flags(0X7D00CD18,0x400);
	SetType(0X7D00CD18, "enum TEE_Result tee_fs_init_key_manager(void);");
	set_frame_size(0X7D00CD18, 0X80, 0, 0);
	define_local_var(0X7D00CD18, 0X7D00CD7C, "[bp-0X80]", "a5");
	define_local_var(0X7D00CD18, 0X7D00CD7C, "[bp-0X74]", "a2");
	define_local_var(0X7D00CD18, 0X7D00CD7C, "[bp-0X44]", "a4");
	define_local_var(0X7D00CD18, 0X7D00CD7C, "[bp-0X24]", "destination");
	add_func    (0X7D00CD88,0X7D00CDAC);
	set_func_flags(0X7D00CD88,0x400);
	SetType(0X7D00CD88, "enum TEE_Result __cdecl tee_fs_generate_fek(uint8_t *buf, int buf_size);");
	set_frame_size(0X7D00CD88, 0X8, 0, 0);
	add_func    (0X7D00CDB4,0X7D00CF0A);
	set_func_flags(0X7D00CDB4,0x400);
	SetType(0X7D00CDB4, "enum TEE_Result __fastcall decrypt_block(uint8_t *out, const uint8_t *in, size_t a3, __int16 blk_idx, const uint8_t *fek, TEE_OperationMode mode);");
	set_frame_size(0X7D00CDB4, 0XA8, 0, 0);
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0XA8]", "data");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0XA4]", "len");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0XA0]", "key2_len");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X9C]", "iv");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X98]", "iv_len");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X7C]", "size");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X78]", "key");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X68]", "ctx_size");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp-0X48]", "key1");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp+0]", "fek");
	define_local_var(0X7D00CDB4, 0X7D00CF0A, "[bp+0X4]", "mode");
	add_func    (0X7D00CF20,0X7D00CF36);
	set_func_flags(0X7D00CF20,0x400);
	add_func    (0X7D00CF3C,0X7D00CFE4);
	set_func_flags(0X7D00CF3C,0x400);
	set_frame_size(0X7D00CF3C, 0X30, 0, 0);
	define_local_var(0X7D00CF3C, 0X7D00CFE4, "[bp-0X30]", "fmt");
	add_func    (0X7D00CFF8,0X7D00D0F6);
	set_func_flags(0X7D00CFF8,0x400);
	set_frame_size(0X7D00CFF8, 0X28, 0, 0);
	add_func    (0X7D00D104,0X7D00D13A);
	set_func_flags(0X7D00D104,0x400);
	set_frame_size(0X7D00D104, 0X8, 0, 0);
	add_func    (0X7D00D144,0X7D00D182);
	set_func_flags(0X7D00D144,0x400);
	set_frame_size(0X7D00D144, 0X18, 0, 0);
	add_func    (0X7D00D190,0X7D00D218);
	set_func_flags(0X7D00D190,0x400);
	SetType(0X7D00D190, "TEE_Result __cdecl tee_time_ta_set_offs(const struct TEE_UUID *uuid, const struct TEE_Time *offs, bool positive);");
	set_frame_size(0X7D00D190, 0X30, 0, 0);
	add_func    (0X7D00D224,0X7D00D2D0);
	set_func_flags(0X7D00D224,0x400);
	set_frame_size(0X7D00D224, 0X28, 0, 0);
	add_func    (0X7D00D2E0,0X7D00D362);
	set_func_flags(0X7D00D2E0,0x400);
	set_frame_size(0X7D00D2E0, 0X20, 0, 0);
	define_local_var(0X7D00D2E0, 0X7D00D362, "[bp-0X18]", "time");
	add_func    (0X7D00D368,0X7D00D396);
	set_func_flags(0X7D00D368,0x400);
	set_frame_size(0X7D00D368, 0X8, 0, 0);
	add_func    (0X7D00D3A0,0X7D00D3CE);
	set_func_flags(0X7D00D3A0,0x400);
	set_frame_size(0X7D00D3A0, 0X8, 0, 0);
	add_func    (0X7D00D3D8,0X7D00D44A);
	set_func_flags(0X7D00D3D8,0x400);
	set_frame_size(0X7D00D3D8, 0X18, 0, 0);
	add_func    (0X7D00D454,0X7D00D4A2);
	set_func_flags(0X7D00D454,0x400);
	SetType(0X7D00D454, "void __cdecl gic_init_base_addr(struct gic_data *gd, void *gicc_base, void *gicd_base);");
	set_frame_size(0X7D00D454, 0X14, 0, 0);
	add_func    (0X7D00D4A8,0X7D00D4DC);
	set_func_flags(0X7D00D4A8,0x400);
	add_func    (0X7D00D4E0,0X7D00D50A);
	set_func_flags(0X7D00D4E0,0x400);
	set_frame_size(0X7D00D4E0, 0X10, 0, 0);
	add_func    (0X7D00D510,0X7D00D6F0);
	set_func_flags(0X7D00D510,0x400);
	set_frame_size(0X7D00D510, 0X38, 0, 0);
	add_func    (0X7D00D718,0X7D00D742);
	set_func_flags(0X7D00D718,0x400);
	set_frame_size(0X7D00D718, 0X18, 0, 0);
	add_func    (0X7D00D748,0X7D00D78C);
	set_func_flags(0X7D00D748,0x400);
	set_frame_size(0X7D00D748, 0X18, 0, 0);
	add_func    (0X7D00D798,0X7D00D7F0);
	set_func_flags(0X7D00D798,0x400);
	set_frame_size(0X7D00D798, 0X20, 0, 0);
	add_func    (0X7D00D800,0X7D00D8FC);
	set_func_flags(0X7D00D800,0x400);
	set_frame_size(0X7D00D800, 0X38, 0, 0);
	define_local_var(0X7D00D800, 0X7D00D8FC, "[bp-0X38]", "fmt");
	add_func    (0X7D00D918,0X7D00D9F8);
	set_func_flags(0X7D00D918,0x400);
	set_frame_size(0X7D00D918, 0X30, 0, 0);
	define_local_var(0X7D00D918, 0X7D00D9F8, "[bp-0X30]", "fmt");
	add_func    (0X7D00DA10,0X7D00DA64);
	set_func_flags(0X7D00DA10,0x400);
	set_frame_size(0X7D00DA10, 0X18, 0, 0);
	define_local_var(0X7D00DA10, 0X7D00DA64, "[bp-0X18]", "fmt");
	add_func    (0X7D00DA74,0X7D00DAB6);
	set_func_flags(0X7D00DA74,0x400);
	set_frame_size(0X7D00DA74, 0X8, 0, 0);
	add_func    (0X7D00DAC8,0X7D00DAF8);
	set_func_flags(0X7D00DAC8,0x400);
	set_frame_size(0X7D00DAC8, 0X10, 0, 0);
	add_func    (0X7D00DB08,0X7D00DBBE);
	set_func_flags(0X7D00DB08,0x400);
	set_frame_size(0X7D00DB08, 0X28, 0, 0);
	define_local_var(0X7D00DB08, 0X7D00DBBE, "[bp-0X28]", "fmt");
	add_func    (0X7D00DBD8,0X7D00DC24);
	set_func_flags(0X7D00DBD8,0x400);
	set_frame_size(0X7D00DBD8, 0X18, 0, 0);
	define_local_var(0X7D00DBD8, 0X7D00DC24, "[bp-0X18]", "fmt");
	add_func    (0X7D00DC38,0X7D00DCDC);
	set_func_flags(0X7D00DC38,0x400);
	set_frame_size(0X7D00DC38, 0X20, 0, 0);
	define_local_var(0X7D00DC38, 0X7D00DCDC, "[bp-0X20]", "fmt");
	add_func    (0X7D00DD00,0X7D00DD28);
	set_func_flags(0X7D00DD00,0x400);
	set_frame_size(0X7D00DD00, 0X10, 0, 0);
	define_local_var(0X7D00DD00, 0X7D00DD28, "[bp-0X10]", "fmt");
	add_func    (0X7D00DD30,0X7D00DDB8);
	set_func_flags(0X7D00DD30,0x400);
	set_frame_size(0X7D00DD30, 0X20, 0, 0);
	define_local_var(0X7D00DD30, 0X7D00DDB8, "[bp-0X20]", "fmt");
	add_func    (0X7D00DDCC,0X7D00DE06);
	set_func_flags(0X7D00DDCC,0x400);
	set_frame_size(0X7D00DDCC, 0X10, 0, 0);
	define_local_var(0X7D00DDCC, 0X7D00DE06, "[bp-0X10]", "fmt");
	add_func    (0X7D00DE10,0X7D00DE2A);
	set_func_flags(0X7D00DE10,0x400);
	set_frame_size(0X7D00DE10, 0X10, 0, 0);
	define_local_var(0X7D00DE10, 0X7D00DE2A, "[bp-0X10]", "fmt");
	add_func    (0X7D00DE34,0X7D00E0D4);
	set_func_flags(0X7D00DE34,0x400);
	set_frame_size(0X7D00DE34, 0X78, 0, 0);
	define_local_var(0X7D00DE34, 0X7D00E0D4, "[bp-0X78]", "fmt");
	define_local_var(0X7D00DE34, 0X7D00E0D4, "[bp-0X68]", "head1");
	define_local_var(0X7D00DE34, 0X7D00E0D4, "[bp-0X44]", "head2");
	add_func    (0X7D00E124,0X7D00E19E);
	set_func_flags(0X7D00E124,0x400);
	set_frame_size(0X7D00E124, 0X18, 0, 0);
	define_local_var(0X7D00E124, 0X7D00E19E, "[bp-0X18]", "fmt");
	add_func    (0X7D00E1B0,0X7D00E1E0);
	set_func_flags(0X7D00E1B0,0x400);
	set_frame_size(0X7D00E1B0, 0X10, 0, 0);
	define_local_var(0X7D00E1B0, 0X7D00E1E0, "[bp-0X10]", "fmt");
	add_func    (0X7D00E1F0,0X7D00E26C);
	set_func_flags(0X7D00E1F0,0x400);
	set_frame_size(0X7D00E1F0, 0X18, 0, 0);
	define_local_var(0X7D00E1F0, 0X7D00E26C, "[bp-0X18]", "fmt");
	add_func    (0X7D00E280,0X7D00E30E);
	set_func_flags(0X7D00E280,0x400);
	set_frame_size(0X7D00E280, 0X18, 0, 0);
	define_local_var(0X7D00E280, 0X7D00E30E, "[bp-0X18]", "fmt");
	add_func    (0X7D00E324,0X7D00E3B8);
	set_func_flags(0X7D00E324,0x400);
	SetType(0X7D00E324, "signed int __fastcall unrd_flush_context(int *flush_context, int a2);");
	set_frame_size(0X7D00E324, 0X18, 0, 0);
	define_local_var(0X7D00E324, 0X7D00E3B8, "[bp-0X18]", "fmt");
	add_func    (0X7D00E3C8,0X7D00E48A);
	set_func_flags(0X7D00E3C8,0x400);
	set_frame_size(0X7D00E3C8, 0X10, 0, 0);
	add_func    (0X7D00E490,0X7D00E57A);
	set_func_flags(0X7D00E490,0x400);
	SetType(0X7D00E490, "TEE_Result __cdecl tee_algo_to_sasi_hashindex(uint32_t algo, int *sasi_hashindex);");
	add_func    (0X7D00E5BC,0X7D00E5D4);
	set_func_flags(0X7D00E5BC,0x400);
	SetType(0X7D00E5BC, "TEE_Result __cdecl sasi_hash_get_ctx_size(uint32_t algo, size_t *size);");
	add_func    (0X7D00E5D8,0X7D00E5E2);
	set_func_flags(0X7D00E5D8,0x400);
	set_frame_size(0X7D00E5D8, 0X8, 0, 0);
	add_func    (0X7D00E5E8,0X7D00E5F2);
	set_func_flags(0X7D00E5E8,0x400);
	set_frame_size(0X7D00E5E8, 0X8, 0, 0);
	add_func    (0X7D00E5F8,0X7D00E604);
	set_func_flags(0X7D00E5F8,0x400);
	set_frame_size(0X7D00E5F8, 0X8, 0, 0);
	add_func    (0X7D00E608,0X7D00E61E);
	set_func_flags(0X7D00E608,0x400);
	set_frame_size(0X7D00E608, 0X10, 0, 0);
	add_func    (0X7D00E624,0X7D00E63A);
	set_func_flags(0X7D00E624,0x400);
	set_frame_size(0X7D00E624, 0X10, 0, 0);
	add_func    (0X7D00E640,0X7D00E672);
	set_func_flags(0X7D00E640,0x400);
	add_func    (0X7D00E67C,0X7D00E6B4);
	set_func_flags(0X7D00E67C,0x400);
	add_func    (0X7D00E6B8,0X7D00E6D0);
	set_func_flags(0X7D00E6B8,0x400);
	set_frame_size(0X7D00E6B8, 0X8, 0, 0);
	add_func    (0X7D00E6D8,0X7D00E6F6);
	set_func_flags(0X7D00E6D8,0x400);
	set_frame_size(0X7D00E6D8, 0X8, 0, 0);
	add_func    (0X7D00E6FC,0X7D00E740);
	set_func_flags(0X7D00E6FC,0x400);
	set_frame_size(0X7D00E6FC, 0X8, 0, 0);
	add_func    (0X7D00E744,0X7D00E776);
	set_func_flags(0X7D00E744,0x400);
	set_frame_size(0X7D00E744, 0X8, 0, 0);
	add_func    (0X7D00E77C,0X7D00E7F8);
	set_func_flags(0X7D00E77C,0x400);
	SetType(0X7D00E77C, "TEE_Result __fastcall sub_7D00E77C(struct CRYS_RSAUserPubKey_t *UserPubKey_ptr, int *a2);");
	set_frame_size(0X7D00E77C, 0X28, 0, 0);
	define_local_var(0X7D00E77C, 0X7D00E7F8, "[bp-0X20]", "ExponentSize");
	define_local_var(0X7D00E77C, 0X7D00E7F8, "[bp-0X1C]", "ModulusSize");
	add_func    (0X7D00E800,0X7D00E9F8);
	set_func_flags(0X7D00E800,0x400);
	SetType(0X7D00E800, "signed int __fastcall sasi_do_dh_shared_secret(int a1, int a2, int secret);");
	set_frame_size(0X7D00E800, 0X58, 0, 0);
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X58]", "fmt");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X54]", "PrimeSize");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X50]", "tmpPubKey_ptr");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X4C]", "tmpPrimeData_ptr");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X48]", "SecretKey_ptr");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X44]", "SecretKeySize_ptr");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X3C]", "secret1");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X30]", "ClientPrvKeySize");
	define_local_var(0X7D00E800, 0X7D00E9F8, "[bp-0X2C]", "ServerPubKeySize");
	add_func    (0X7D00EA30,0X7D00ECCE);
	set_func_flags(0X7D00EA30,0x400);
	set_frame_size(0X7D00EA30, 0XA50, 0, 0);
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA50]", "userPrivKey_ptr");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA4C]", "userPubKey_ptr");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA48]", "keyGenData_ptr");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA44]", "pFipsCtx");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA24]", "UserPubKey_ptr");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA20]", "ptr");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA1C]", "keySize");
	define_local_var(0X7D00EA30, 0X7D00ECCE, "[bp-0XA0E]", "buffer_len");
	add_func    (0X7D00ECE4,0X7D00EDD0);
	set_func_flags(0X7D00ECE4,0x400);
	set_frame_size(0X7D00ECE4, 0X60, 0, 0);
	define_local_var(0X7D00ECE4, 0X7D00EDD0, "[bp-0X60]", "pDataOut");
	define_local_var(0X7D00ECE4, 0X7D00EDD0, "[bp-0X5C]", "dataOutBuffSize");
	define_local_var(0X7D00ECE4, 0X7D00EDD0, "[bp-0X54]", "num");
	define_local_var(0X7D00ECE4, 0X7D00EDD0, "[bp-0X50]", "a2");
	add_func    (0X7D00EDF0,0X7D00EFCA);
	set_func_flags(0X7D00EDF0,0x400);
	SetType(0X7D00EDF0, "TEE_Result __cdecl sasi_cipher_update(void *ctx, uint32_t algo, TEE_OperationMode mode, bool last_block, const uint8_t *data, size_t len, uint8_t *dst);");
	set_frame_size(0X7D00EDF0, 0XC0, 0, 0);
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp-0XBC]", "dataOutBuffSize");
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp-0XA8]", "pDataIn");
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp-0X68]", "pDataOut");
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp+0]", "data");
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp+0X4]", "len");
	define_local_var(0X7D00EDF0, 0X7D00EFCA, "[bp+0X8]", "dst");
	add_func    (0X7D00EFF0,0X7D00F016);
	set_func_flags(0X7D00EFF0,0x400);
	SetType(0X7D00EFF0, "TEE_Result __cdecl sasi_cipher_get_block_size(uint32_t algo, size_t *size);");
	set_frame_size(0X7D00EFF0, 0X8, 0, 0);
	add_func    (0X7D00F024,0X7D00F278);
	set_func_flags(0X7D00F024,0x400);
	SetType(0X7D00F024, "TEE_Result __cdecl sasi_cipher_init(void *ctx, uint32_t algo, TEE_OperationMode mode, const uint8_t *key1, size_t key1_len, const uint8_t *key2, size_t key2_len, const uint8_t *iv, size_t iv_len);");
	set_frame_size(0X7D00F024, 0XA0, 0, 0);
	define_local_var(0X7D00F024, 0X7D00F278, "[bp-0XA0]", "fmt");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp-0X84]", "size");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp-0X78]", "a2");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp-0X68]", "a3");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp+0]", "key1_len");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp+0X4]", "key2");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp+0X8]", "key2_len");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp+0XC]", "iv");
	define_local_var(0X7D00F024, 0X7D00F278, "[bp+0X10]", "iv_len");
	add_func    (0X7D00F2C8,0X7D00F3F4);
	set_func_flags(0X7D00F2C8,0x400);
	set_frame_size(0X7D00F2C8, 0X48, 0, 0);
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X48]", "key1_len");
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X44]", "key2");
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X40]", "key2_len");
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X3C]", "iv");
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X38]", "iv_len");
	define_local_var(0X7D00F2C8, 0X7D00F3F4, "[bp-0X2C]", "ltc_hashindex");
	add_func    (0X7D00F41C,0X7D00F488);
	set_func_flags(0X7D00F41C,0x400);
	set_frame_size(0X7D00F41C, 0X8, 0, 0);
	add_func    (0X7D00F4A0,0X7D00F4B2);
	set_func_flags(0X7D00F4A0,0x400);
	SetType(0X7D00F4A0, "void __cdecl sasi_cipher_final(void *ctx, uint32_t algo);");
	set_frame_size(0X7D00F4A0, 0X8, 0, 0);
	add_func    (0X7D00F4BC,0X7D00F51A);
	set_func_flags(0X7D00F4BC,0x400);
	set_frame_size(0X7D00F4BC, 0X8, 0, 0);
	add_func    (0X7D00F534,0X7D00F558);
	set_func_flags(0X7D00F534,0x400);
	set_frame_size(0X7D00F534, 0X8, 0, 0);
	add_func    (0X7D00F568,0X7D00F586);
	set_func_flags(0X7D00F568,0x400);
	set_frame_size(0X7D00F568, 0X8, 0, 0);
	add_func    (0X7D00F594,0X7D00F5BA);
	set_func_flags(0X7D00F594,0x400);
	set_frame_size(0X7D00F594, 0X8, 0, 0);
	add_func    (0X7D00F5C8,0X7D00F5F0);
	set_func_flags(0X7D00F5C8,0x400);
	set_frame_size(0X7D00F5C8, 0X10, 0, 0);
	add_func    (0X7D00F5F4,0X7D00F646);
	set_func_flags(0X7D00F5F4,0x400);
	SetType(0X7D00F5F4, "TEE_Result __fastcall Import_CRYSECCUserPrivkey_From_ECCKeypair(struct CRYS_ECPKI_UserPrivKey_t *pSignerPrivKey, _DWORD *a2);");
	set_frame_size(0X7D00F5F4, 0X120, 0, 0);
	define_local_var(0X7D00F5F4, 0X7D00F646, "[bp-0X120]", "domainId");
	define_local_var(0X7D00F5F4, 0X7D00F646, "[bp-0X11C]", "PrivKeySizeInBytes");
	define_local_var(0X7D00F5F4, 0X7D00F646, "[bp-0X118]", "octstr");
	add_func    (0X7D00F650,0X7D00F70A);
	set_func_flags(0X7D00F650,0x400);
	set_frame_size(0X7D00F650, 0X1390, 0, 0);
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X1390]", "fmt");
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X138C]", "messageSizeInBytes");
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X1388]", "pSignatureOut");
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X1384]", "pSignatureOutSize");
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X1378]", "signerPrivKey");
	define_local_var(0X7D00F650, 0X7D00F70A, "[bp-0X1048]", "signUserContext");
	add_func    (0X7D00F72C,0X7D00F866);
	set_func_flags(0X7D00F72C,0x400);
	SetType(0X7D00F72C, "CRYSError_t __fastcall Import_CRYSECCUserPubkey_From_ECCPublickey(struct CRYS_ECPKI_UserPublKey_t *PartnerPublKey_ptr, _DWORD *key);");
	set_frame_size(0X7D00F72C, 0X4C0, 0, 0);
	define_local_var(0X7D00F72C, 0X7D00F866, "[bp-0X4C0]", "fmt");
	define_local_var(0X7D00F72C, 0X7D00F866, "[bp-0X4BC]", "pTempBuff");
	define_local_var(0X7D00F72C, 0X7D00F866, "[bp-0X4AC]", "domainId");
	define_local_var(0X7D00F72C, 0X7D00F866, "[bp-0X4A8]", "Partial_Size");
	define_local_var(0X7D00F72C, 0X7D00F866, "[bp-0X4A4]", "PublKeyIn");
	add_func    (0X7D00F890,0X7D00F922);
	set_func_flags(0X7D00F890,0x400);
	SetType(0X7D00F890, "CRYSError_t __fastcall sasi_ecc_verify(unsigned int tee_algo, _DWORD *key, int a3, int a4, int a5, int a6);");
	set_frame_size(0X7D00F890, 0X1088, 0, 0);
	define_local_var(0X7D00F890, 0X7D00F922, "[bp-0X1088]", "fmt");
	define_local_var(0X7D00F890, 0X7D00F922, "[bp-0X1080]", "messageSizeInBytes");
	define_local_var(0X7D00F890, 0X7D00F922, "[bp-0X1078]", "hashMode");
	define_local_var(0X7D00F890, 0X7D00F922, "[bp-0X1074]", "PartnerPublKey_ptr");
	add_func    (0X7D00F938,0X7D00FAC8);
	set_func_flags(0X7D00F938,0x400);
	set_frame_size(0X7D00F938, 0X68, 0, 0);
	define_local_var(0X7D00F938, 0X7D00FAC8, "[bp-0X48]", "buffer_len");
	add_func    (0X7D00FAD0,0X7D00FC30);
	set_func_flags(0X7D00FAD0,0x400);
	SetType(0X7D00FAD0, "int __cdecl sasi_gen_ecc_key(_DWORD *a1);");
	set_frame_size(0X7D00FAD0, 0X1308, 0, 0);
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X1308]", "fmt");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X1304]", "pFipsCtx");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X12FC]", "pPublKeySizeBytes");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X12F8]", "buffer_len");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X12F4]", "domainId");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X12F0]", "KeyPub_Buffer");
	define_local_var(0X7D00FAD0, 0X7D00FC30, "[bp-0X11E8]", "KeyPrv_Buffer");
	add_func    (0X7D00FC54,0X7D00FF50);
	set_func_flags(0X7D00FC54,0x400);
	set_frame_size(0X7D00FC54, 0X80, 0, 0);
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X80]", "fmt");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X7C]", "L");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X78]", "Q_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X74]", "QSize");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X70]", "DH_mode");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X6C]", "tmpPubKey_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X68]", "tmpPrimeData_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X64]", "ClientPrvKey_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X60]", "ClientPrvKeySize_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X5C]", "ClientPub1_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X58]", "ClientPubSize_ptr");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X48]", "GeneratorSize");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X44]", "n");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X3C]", "PrimeSize");
	define_local_var(0X7D00FC54, 0X7D00FF50, "[bp-0X34]", "buffer_len");
	add_func    (0X7D00FF50,0X7D00FFB2);
	set_func_flags(0X7D00FF50,0x400);
	set_frame_size(0X7D00FF50, 0X8, 0, 0);
	add_func    (0X7D00FFB8,0X7D00FFE4);
	set_func_flags(0X7D00FFB8,0x400);
	set_frame_size(0X7D00FFB8, 0X8, 0, 0);
	add_func    (0X7D00FFE8,0X7D010082);
	set_func_flags(0X7D00FFE8,0x400);
	set_frame_size(0X7D00FFE8, 0X8, 0, 0);
	add_func    (0X7D010088,0X7D0100D6);
	set_func_flags(0X7D010088,0x400);
	set_frame_size(0X7D010088, 0XA18, 0, 0);
	define_local_var(0X7D010088, 0X7D0100D6, "[bp-0XA0C]", "SharedSecrValSize_ptr");
	define_local_var(0X7D010088, 0X7D0100D6, "[bp-0XA08]", "pSignerPrivKey");
	define_local_var(0X7D010088, 0X7D0100D6, "[bp-0X6D8]", "TempBuff_ptr");
	define_local_var(0X7D010088, 0X7D0100D6, "[bp-0X38C]", "PartnerPublKey_ptr");
	add_func    (0X7D0100DC,0X7D0100FA);
	set_func_flags(0X7D0100DC,0x400);
	set_frame_size(0X7D0100DC, 0X14, 0, 0);
	add_func    (0X7D010100,0X7D010256);
	set_func_flags(0X7D010100,0x400);
	SetType(0X7D010100, "TEE_Result __fastcall sasi_rsassa_verify(uint32_t a1, struct rsa_public_key *key, int a3, const uint8_t *a4, size_t a5, const uint8_t *a6, size_t a7);");
	set_frame_size(0X7D010100, 0X48, 0, 0);
	define_local_var(0X7D010100, 0X7D010256, "[bp-0X2C]", "ltc_hashindex");
	add_func    (0X7D01028C,0X7D0103E0);
	set_func_flags(0X7D01028C,0x400);
	set_frame_size(0X7D01028C, 0X50, 0, 0);
	define_local_var(0X7D01028C, 0X7D0103E0, "[bp-0X2C]", "ltc_hashindex");
	add_func    (0X7D010410,0X7D010516);
	set_func_flags(0X7D010410,0x400);
	set_frame_size(0X7D010410, 0X50, 0, 0);
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X50]", "L");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X4C]", "Llen");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X48]", "MGF");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X44]", "DataIn_ptr");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X40]", "DataInSize");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X3C]", "Output_ptr");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X38]", "PKCS1_ver");
	define_local_var(0X7D010410, 0X7D010516, "[bp-0X2C]", "ltc_hashindex");
	add_func    (0X7D010530,0X7D010652);
	set_func_flags(0X7D010530,0x400);
	set_frame_size(0X7D010530, 0X58, 0, 0);
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X50]", "DataIn_ptr");
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X4C]", "DataInSize");
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X48]", "Output_ptr");
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X44]", "OutputSize_ptr");
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X40]", "PKCS1_ver");
	define_local_var(0X7D010530, 0X7D010652, "[bp-0X2C]", "ltc_hashindex");
	add_func    (0X7D010668,0X7D01073A);
	set_func_flags(0X7D010668,0x400);
	set_frame_size(0X7D010668, 0X28, 0, 0);
	add_func    (0X7D01074C,0X7D01081E);
	set_func_flags(0X7D01074C,0x400);
	set_frame_size(0X7D01074C, 0X28, 0, 0);
	add_func    (0X7D010830,0X7D0108B0);
	set_func_flags(0X7D010830,0x400);
	set_frame_size(0X7D010830, 0X48, 0, 0);
	add_func    (0X7D0108CC,0X7D010946);
	set_func_flags(0X7D0108CC,0x400);
	set_frame_size(0X7D0108CC, 0X48, 0, 0);
	add_func    (0X7D010960,0X7D0109B2);
	set_func_flags(0X7D010960,0x400);
	set_frame_size(0X7D010960, 0X30, 0, 0);
	add_func    (0X7D0109CC,0X7D010A5C);
	set_func_flags(0X7D0109CC,0x400);
	set_frame_size(0X7D0109CC, 0X20, 0, 0);
	define_local_var(0X7D0109CC, 0X7D010A5C, "[bp+0]", "num");
	add_func    (0X7D010A78,0X7D010B68);
	set_func_flags(0X7D010A78,0x400);
	set_frame_size(0X7D010A78, 0X70, 0, 0);
	define_local_var(0X7D010A78, 0X7D010B68, "[bp-0X48]", "destination");
	add_func    (0X7D010B88,0X7D010D14);
	set_func_flags(0X7D010B88,0x400);
	set_frame_size(0X7D010B88, 0X18, 0, 0);
	add_func    (0X7D010D30,0X7D010DCE);
	set_func_flags(0X7D010D30,0x400);
	SetType(0X7D010D30, "TEE_Result __cdecl sasi_hash_update(void *ctx, uint32_t algo, const uint8_t *data, size_t len);");
	set_frame_size(0X7D010D30, 0X20, 0, 0);
	add_func    (0X7D010DDC,0X7D010E40);
	set_func_flags(0X7D010DDC,0x400);
	SetType(0X7D010DDC, "TEE_Result __cdecl sasi_hash_final(void *ctx, uint32_t algo, uint8_t *digest, size_t len);");
	set_frame_size(0X7D010DDC, 0X60, 0, 0);
	define_local_var(0X7D010DDC, 0X7D010E40, "[bp-0X58]", "HashResultBuff");
	add_func    (0X7D010E48,0X7D010E90);
	set_func_flags(0X7D010E48,0x400);
	SetType(0X7D010E48, "TEE_Result __cdecl sasi_hash_init(void *ctx, uint32_t algo);");
	set_frame_size(0X7D010E48, 0X18, 0, 0);
	define_local_var(0X7D010E48, 0X7D010E90, "[bp-0X14]", "ltc_hashindex");
	add_func    (0X7D010E9C,0X7D010EF4);
	set_func_flags(0X7D010E9C,0x400);
	set_frame_size(0X7D010E9C, 0X3A60, 0, 0);
	define_local_var(0X7D010E9C, 0X7D010EF4, "[bp-0X3A60]", "fmt");
	define_local_var(0X7D010E9C, 0X7D010EF4, "[bp-0X3A54]", "rndWorkBuff_ptr");
	add_func    (0X7D010F0C,0X7D010F22);
	set_func_flags(0X7D010F0C,0x400);
	add_func    (0X7D010F28,0X7D010F32);
	set_func_flags(0X7D010F28,0x400);
	set_frame_size(0X7D010F28, 0X8, 0, 0);
	add_func    (0X7D010F38,0X7D010F42);
	set_func_flags(0X7D010F38,0x400);
	set_frame_size(0X7D010F38, 0X8, 0, 0);
	add_func    (0X7D010F48,0X7D010F52);
	set_func_flags(0X7D010F48,0x400);
	set_frame_size(0X7D010F48, 0X8, 0, 0);
	add_func    (0X7D010F58,0X7D010F62);
	set_func_flags(0X7D010F58,0x400);
	set_frame_size(0X7D010F58, 0X8, 0, 0);
	add_func    (0X7D010F68,0X7D010F86);
	set_func_flags(0X7D010F68,0x400);
	set_frame_size(0X7D010F68, 0X10, 0, 0);
	add_func    (0X7D010F90,0X7D010FA0);
	set_func_flags(0X7D010F90,0x400);
	set_frame_size(0X7D010F90, 0X8, 0, 0);
	add_func    (0X7D010FA4,0X7D011036);
	set_func_flags(0X7D010FA4,0x400);
	SetType(0X7D010FA4, "TEE_Result __cdecl ecc_get_keysize(uint32_t curve, uint32_t algo, size_t *key_size_bytes, size_t *key_size_bits);");
	set_frame_size(0X7D010FA4, 0X8, 0, 0);
	add_func    (0X7D011068,0X7D0110D0);
	set_func_flags(0X7D011068,0x400);
	add_func    (0X7D0110E4,0X7D01113C);
	set_func_flags(0X7D0110E4,0x400);
	add_func    (0X7D01114C,0X7D01116E);
	set_func_flags(0X7D01114C,0x400);
	add_func    (0X7D011178,0X7D0111BC);
	set_func_flags(0X7D011178,0x400);
	set_frame_size(0X7D011178, 0X8, 0, 0);
	add_func    (0X7D0111C0,0X7D0111F2);
	set_func_flags(0X7D0111C0,0x400);
	set_frame_size(0X7D0111C0, 0X8, 0, 0);
	add_func    (0X7D0111F8,0X7D0112A6);
	set_func_flags(0X7D0111F8,0x400);
	set_frame_size(0X7D0111F8, 0X50, 0, 0);
	add_func    (0X7D0112BC,0X7D0113F4);
	set_func_flags(0X7D0112BC,0x400);
	set_frame_size(0X7D0112BC, 0X60, 0, 0);
	add_func    (0X7D011414,0X7D011520);
	set_func_flags(0X7D011414,0x400);
	SetType(0X7D011414, "TEE_Result __cdecl tee_algo_to_ltc_hashindex(uint32_t algo, int *ltc_hashindex);");
	set_frame_size(0X7D011414, 0X8, 0, 0);
	add_func    (0X7D011590,0X7D011670);
	set_func_flags(0X7D011590,0x400);
	set_frame_size(0X7D011590, 0X68, 0, 0);
	define_local_var(0X7D011590, 0X7D011670, "[bp-0X48]", "ltc_hashindex");
	add_func    (0X7D011698,0X7D0116CE);
	set_func_flags(0X7D011698,0x400);
	set_frame_size(0X7D011698, 0X20, 0, 0);
	define_local_var(0X7D011698, 0X7D0116CE, "[bp-0X1C]", "ltc_hashindex");
	add_func    (0X7D0116DC,0X7D01170A);
	set_func_flags(0X7D0116DC,0x400);
	set_frame_size(0X7D0116DC, 0X10, 0, 0);
	define_local_var(0X7D0116DC, 0X7D01170A, "[bp-0XC]", "ltc_hashindex");
	add_func    (0X7D011718,0X7D011824);
	set_func_flags(0X7D011718,0x400);
	set_frame_size(0X7D011718, 0X68, 0, 0);
	define_local_var(0X7D011718, 0X7D011824, "[bp-0X4C]", "ltc_hashindex");
	add_func    (0X7D011850,0X7D0118F8);
	set_func_flags(0X7D011850,0x400);
	set_frame_size(0X7D011850, 0X68, 0, 0);
	define_local_var(0X7D011850, 0X7D0118F8, "[bp-0X68]", "fmt");
	define_local_var(0X7D011850, 0X7D0118F8, "[bp-0X48]", "ltc_hashindex");
	add_func    (0X7D011918,0X7D011A64);
	set_func_flags(0X7D011918,0x400);
	set_frame_size(0X7D011918, 0X70, 0, 0);
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X70]", "fmt");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X68]", "hash_idx");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X64]", "padding");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X60]", "stat");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X5C]", "key");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X58]", "outlen");
	define_local_var(0X7D011918, 0X7D011A64, "[bp-0X54]", "ltc_hashindex");
	define_local_var(0X7D011918, 0X7D011A64, "[bp+0]", "in");
	define_local_var(0X7D011918, 0X7D011A64, "[bp+0X8]", "destination");
	add_func    (0X7D011A8C,0X7D011AEE);
	set_func_flags(0X7D011A8C,0x400);
	set_frame_size(0X7D011A8C, 0X60, 0, 0);
	define_local_var(0X7D011A8C, 0X7D011AEE, "[bp-0X5C]", "ltc_hashindex");
	add_func    (0X7D011B00,0X7D011BB2);
	set_func_flags(0X7D011B00,0x400);
	SetType(0X7D011B00, "TEE_Result __cdecl rsadorep(struct rsa_key *ltc_key, const uint8_t *src, size_t src_len, uint8_t *dst, size_t *dst_len);");
	set_frame_size(0X7D011B00, 0X30, 0, 0);
	define_local_var(0X7D011B00, 0X7D011BB2, "[bp-0X30]", "fmt");
	define_local_var(0X7D011B00, 0X7D011BB2, "[bp+0]", "dst_len");
	add_func    (0X7D011BD0,0X7D011BFC);
	set_func_flags(0X7D011BD0,0x400);
	set_frame_size(0X7D011BD0, 0X20, 0, 0);
	add_func    (0X7D011C00,0X7D011C8C);
	set_func_flags(0X7D011C00,0x400);
	set_frame_size(0X7D011C00, 0X38, 0, 0);
	define_local_var(0X7D011C00, 0X7D011C8C, "[bp-0X34]", "key_size_bytes");
	define_local_var(0X7D011C00, 0X7D011C8C, "[bp-0X30]", "key_size_bits");
	add_func    (0X7D011C98,0X7D011CE2);
	set_func_flags(0X7D011C98,0x400);
	set_frame_size(0X7D011C98, 0X38, 0, 0);
	add_func    (0X7D011CF0,0X7D011D7A);
	set_func_flags(0X7D011CF0,0x400);
	set_frame_size(0X7D011CF0, 0X40, 0, 0);
	add_func    (0X7D011D88,0X7D011E1A);
	set_func_flags(0X7D011D88,0x400);
	set_frame_size(0X7D011D88, 0X48, 0, 0);
	define_local_var(0X7D011D88, 0X7D011E1A, "[bp-0X48]", "key");
	add_func    (0X7D011E28,0X7D011E40);
	set_func_flags(0X7D011E28,0x400);
	SetType(0X7D011E28, "void __cdecl tom_authenc_final(void *ctx, uint32_t algo);");
	add_func    (0X7D011E44,0X7D011EDA);
	set_func_flags(0X7D011E44,0x400);
	SetType(0X7D011E44, "enum TEE_Result __cdecl tee_algo_to_ltc_cipherindex(uint32_t algo, int *ltc_cipherindex);");
	set_frame_size(0X7D011E44, 0X8, 0, 0);
	add_func    (0X7D011F10,0X7D011FCE);
	set_func_flags(0X7D011F10,0x400);
	set_frame_size(0X7D011F10, 0X38, 0, 0);
	define_local_var(0X7D011F10, 0X7D011FCE, "[bp-0X24]", "ltc_cipherindex");
	add_func    (0X7D011FE0,0X7D012000);
	set_func_flags(0X7D011FE0,0x400);
	set_frame_size(0X7D011FE0, 0X10, 0, 0);
	define_local_var(0X7D011FE0, 0X7D012000, "[bp-0XC]", "ltc_cipherindex");
	add_func    (0X7D012008,0X7D0120D6);
	set_func_flags(0X7D012008,0x400);
	SetType(0X7D012008, "TEE_Result __cdecl tom_cipher_update(void *ctx, uint32_t algo, enum TEE_OperationMode mode, bool last_block, const uint8_t *data, size_t len, uint8_t *dst);");
	set_frame_size(0X7D012008, 0X20, 0, 0);
	define_local_var(0X7D012008, 0X7D0120D6, "[bp+0]", "data");
	define_local_var(0X7D012008, 0X7D0120D6, "[bp+0X4]", "len");
	define_local_var(0X7D012008, 0X7D0120D6, "[bp+0X8]", "dst");
	add_func    (0X7D0120F8,0X7D012134);
	set_func_flags(0X7D0120F8,0x400);
	set_frame_size(0X7D0120F8, 0X8, 0, 0);
	add_func    (0X7D012144,0X7D012178);
	set_func_flags(0X7D012144,0x400);
	set_frame_size(0X7D012144, 0X10, 0, 0);
	add_func    (0X7D012184,0X7D0121B8);
	set_func_flags(0X7D012184,0x400);
	set_frame_size(0X7D012184, 0X10, 0, 0);
	add_func    (0X7D0121C4,0X7D012242);
	set_func_flags(0X7D0121C4,0x400);
	SetType(0X7D0121C4, "TEE_Result __cdecl ecc_populate_ltc_public_key(struct ecc_key *ltc_key, struct ecc_public_key *key, void *key_z, uint32_t algo, size_t *key_size_bytes);");
	set_frame_size(0X7D0121C4, 0X28, 0, 0);
	define_local_var(0X7D0121C4, 0X7D012242, "[bp-0X28]", "ltc_key1");
	define_local_var(0X7D0121C4, 0X7D012242, "[bp-0X24]", "key_size_bits");
	define_local_var(0X7D0121C4, 0X7D012242, "[bp+0]", "key_size_bytes");
	add_func    (0X7D012250,0X7D0122B2);
	set_func_flags(0X7D012250,0x400);
	set_frame_size(0X7D012250, 0X8, 0, 0);
	add_func    (0X7D0122B8,0X7D012308);
	set_func_flags(0X7D0122B8,0x400);
	set_frame_size(0X7D0122B8, 0X8, 0, 0);
	add_func    (0X7D01230C,0X7D01236E);
	set_func_flags(0X7D01230C,0x400);
	set_frame_size(0X7D01230C, 0X8, 0, 0);
	add_func    (0X7D012374,0X7D0123A0);
	set_func_flags(0X7D012374,0x400);
	set_frame_size(0X7D012374, 0X8, 0, 0);
	add_func    (0X7D0123A4,0X7D01243E);
	set_func_flags(0X7D0123A4,0x400);
	set_frame_size(0X7D0123A4, 0X8, 0, 0);
	add_func    (0X7D012444,0X7D0124DE);
	set_func_flags(0X7D012444,0x400);
	set_frame_size(0X7D012444, 0X58, 0, 0);
	define_local_var(0X7D012444, 0X7D0124DE, "[bp-0X58]", "key_size_bytes");
	define_local_var(0X7D012444, 0X7D0124DE, "[bp-0X44]", "key_z");
	add_func    (0X7D0124F0,0X7D0125E4);
	set_func_flags(0X7D0124F0,0x400);
	set_frame_size(0X7D0124F0, 0X58, 0, 0);
	define_local_var(0X7D0124F0, 0X7D0125E4, "[bp-0X58]", "real_key_len");
	define_local_var(0X7D0124F0, 0X7D0125E4, "[bp-0X4C]", "ltc_cipherindex");
	define_local_var(0X7D0124F0, 0X7D0125E4, "[bp-0X48]", "real_key");
	define_local_var(0X7D0124F0, 0X7D0125E4, "[bp-0X30]", "ltc_hashindex");
	add_func    (0X7D012600,0X7D0127A0);
	set_func_flags(0X7D012600,0x400);
	set_frame_size(0X7D012600, 0X68, 0, 0);
	define_local_var(0X7D012600, 0X7D0127A0, "[bp-0X68]", "real_key_len");
	define_local_var(0X7D012600, 0X7D0127A0, "[bp-0X4C]", "ltc_cipherindex");
	define_local_var(0X7D012600, 0X7D0127A0, "[bp-0X48]", "real_key");
	define_local_var(0X7D012600, 0X7D0127A0, "[bp-0X40]", "key_intermediate");
	add_func    (0X7D0127C4,0X7D0127F4);
	set_func_flags(0X7D0127C4,0x400);
	set_frame_size(0X7D0127C4, 0X8, 0, 0);
	define_local_var(0X7D0127C4, 0X7D0127F4, "[bp+0]", "adatalen");
	add_func    (0X7D012800,0X7D01287A);
	set_func_flags(0X7D012800,0x400);
	set_frame_size(0X7D012800, 0X28, 0, 0);
	add_func    (0X7D012888,0X7D0128FE);
	set_func_flags(0X7D012888,0x400);
	set_frame_size(0X7D012888, 0X40, 0, 0);
	define_local_var(0X7D012888, 0X7D0128FE, "[bp-0X28]", "s1");
	define_local_var(0X7D012888, 0X7D0128FE, "[bp+0X8]", "s2");
	add_func    (0X7D012914,0X7D0129A0);
	set_func_flags(0X7D012914,0x400);
	set_frame_size(0X7D012914, 0X38, 0, 0);
	add_func    (0X7D0129B0,0X7D012AA2);
	set_func_flags(0X7D0129B0,0x400);
	set_frame_size(0X7D0129B0, 0X18, 0, 0);
	add_func    (0X7D012AB8,0X7D012B2C);
	set_func_flags(0X7D012AB8,0x400);
	set_frame_size(0X7D012AB8, 0X8, 0, 0);
	add_func    (0X7D012B38,0X7D012C1A);
	set_func_flags(0X7D012B38,0x400);
	set_frame_size(0X7D012B38, 0X20, 0, 0);
	add_func    (0X7D012C30,0X7D012CE0);
	set_func_flags(0X7D012C30,0x400);
	set_frame_size(0X7D012C30, 0X20, 0, 0);
	define_local_var(0X7D012C30, 0X7D012CE0, "[bp-0X20]", "put");
	define_local_var(0X7D012C30, 0X7D012CE0, "[bp-0X1C]", "sync");
	add_func    (0X7D012D2C,0X7D012D8A);
	set_func_flags(0X7D012D2C,0x400);
	SetType(0X7D012D2C, "TEE_Result __cdecl ecc_populate_ltc_private_key(struct ecc_key *ltc_key, struct ecc_keypair *key, uint32_t algo, size_t *key_size_bytes);");
	set_frame_size(0X7D012D2C, 0X20, 0, 0);
	define_local_var(0X7D012D2C, 0X7D012D8A, "[bp-0X1C]", "key_size_bits");
	add_func    (0X7D012D94,0X7D012E04);
	set_func_flags(0X7D012D94,0x400);
	set_frame_size(0X7D012D94, 0X60, 0, 0);
	define_local_var(0X7D012D94, 0X7D012E04, "[bp-0X60]", "key_size_bytes");
	define_local_var(0X7D012D94, 0X7D012E04, "[bp-0X54]", "key_z");
	add_func    (0X7D012E0C,0X7D012ED0);
	set_func_flags(0X7D012E0C,0x400);
	set_frame_size(0X7D012E0C, 0X58, 0, 0);
	define_local_var(0X7D012E0C, 0X7D012ED0, "[bp-0X40]", "key_size_bytes");
	add_func    (0X7D012EE8,0X7D012F14);
	set_func_flags(0X7D012EE8,0x400);
	add_func    (0X7D012F24,0X7D013296);
	set_func_flags(0X7D012F24,0x400);
	set_frame_size(0X7D012F24, 0X20, 0, 0);
	add_func    (0X7D0132AC,0X7D013618);
	set_func_flags(0X7D0132AC,0x400);
	set_frame_size(0X7D0132AC, 0X40, 0, 0);
	add_func    (0X7D0139B8,0X7D013C12);
	set_func_flags(0X7D0139B8,0x400);
	set_frame_size(0X7D0139B8, 0X38, 0, 0);
	add_func    (0X7D013C3C,0X7D013D82);
	set_func_flags(0X7D013C3C,0x400);
	set_frame_size(0X7D013C3C, 0X198, 0, 0);
	define_local_var(0X7D013C3C, 0X7D013D82, "[bp-0XA8]", "source");
	add_func    (0X7D013D98,0X7D013E32);
	set_func_flags(0X7D013D98,0x400);
	set_frame_size(0X7D013D98, 0X20, 0, 0);
	add_func    (0X7D013E38,0X7D013FC0);
	set_func_flags(0X7D013E38,0x400);
	set_frame_size(0X7D013E38, 0X18, 0, 0);
	add_func    (0X7D013FC4,0X7D01407A);
	set_func_flags(0X7D013FC4,0x400);
	set_frame_size(0X7D013FC4, 0X18, 0, 0);
	add_func    (0X7D014080,0X7D014196);
	set_func_flags(0X7D014080,0x400);
	set_frame_size(0X7D014080, 0X28, 0, 0);
	add_func    (0X7D01419C,0X7D01425E);
	set_func_flags(0X7D01419C,0x400);
	set_frame_size(0X7D01419C, 0X18, 0, 0);
	add_func    (0X7D014264,0X7D01439A);
	set_func_flags(0X7D014264,0x400);
	set_frame_size(0X7D014264, 0X20, 0, 0);
	add_func    (0X7D0143A0,0X7D014442);
	set_func_flags(0X7D0143A0,0x400);
	set_frame_size(0X7D0143A0, 0X30, 0, 0);
	add_func    (0X7D014448,0X7D014598);
	set_func_flags(0X7D014448,0x400);
	set_frame_size(0X7D014448, 0X20, 0, 0);
	add_func    (0X7D01459C,0X7D014C86);
	set_func_flags(0X7D01459C,0x400);
	set_frame_size(0X7D01459C, 0X68, 0, 0);
	add_func    (0X7D014CF4,0X7D014D1E);
	set_func_flags(0X7D014CF4,0x404);
	set_frame_size(0X7D014CF4, 0, 0, 0);
	add_func    (0X7D014D28,0X7D015052);
	set_func_flags(0X7D014D28,0x400);
	set_frame_size(0X7D014D28, 0X178, 0, 0);
	add_func    (0X7D015064,0X7D015092);
	set_func_flags(0X7D015064,0x404);
	set_frame_size(0X7D015064, 0, 0, 0);
	add_func    (0X7D0150A0,0X7D0150D6);
	set_func_flags(0X7D0150A0,0x404);
	set_frame_size(0X7D0150A0, 0, 0, 0);
	add_func    (0X7D0150F8,0X7D01641E);
	set_func_flags(0X7D0150F8,0x400);
	set_frame_size(0X7D0150F8, 0X148, 0, 0);
	add_func    (0X7D01645C,0X7D016492);
	set_func_flags(0X7D01645C,0x404);
	set_frame_size(0X7D01645C, 0, 0, 0);
	add_func    (0X7D0164B4,0X7D01708A);
	set_func_flags(0X7D0164B4,0x400);
	set_frame_size(0X7D0164B4, 0X4C0, 0, 0);
	add_func    (0X7D017094,0X7D017192);
	set_func_flags(0X7D017094,0x400);
	set_frame_size(0X7D017094, 0X30, 0, 0);
	add_func    (0X7D017198,0X7D01727A);
	set_func_flags(0X7D017198,0x400);
	set_frame_size(0X7D017198, 0X38, 0, 0);
	add_func    (0X7D017280,0X7D0172B0);
	set_func_flags(0X7D017280,0x400);
	set_frame_size(0X7D017280, 0X10, 0, 0);
	add_func    (0X7D0172B4,0X7D017380);
	set_func_flags(0X7D0172B4,0x400);
	set_frame_size(0X7D0172B4, 0X20, 0, 0);
	add_func    (0X7D017384,0X7D017482);
	set_func_flags(0X7D017384,0x400);
	set_frame_size(0X7D017384, 0X28, 0, 0);
	add_func    (0X7D017488,0X7D017526);
	set_func_flags(0X7D017488,0x400);
	set_frame_size(0X7D017488, 0X20, 0, 0);
	add_func    (0X7D01752C,0X7D01757E);
	set_func_flags(0X7D01752C,0x400);
	set_frame_size(0X7D01752C, 0X30, 0, 0);
	define_local_var(0X7D01752C, 0X7D01757E, "[bp-0X10]", "varg_r0");
	define_local_var(0X7D01752C, 0X7D01757E, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D01752C, 0X7D01757E, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D01752C, 0X7D01757E, "[bp-0X4]", "varg_r3");
	add_func    (0X7D017584,0X7D0175E0);
	set_func_flags(0X7D017584,0x400);
	set_frame_size(0X7D017584, 0X30, 0, 0);
	define_local_var(0X7D017584, 0X7D0175E0, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D017584, 0X7D0175E0, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D017584, 0X7D0175E0, "[bp-0X4]", "varg_r3");
	add_func    (0X7D0175E4,0X7D01760C);
	set_func_flags(0X7D0175E4,0x400);
	set_frame_size(0X7D0175E4, 0X20, 0, 0);
	define_local_var(0X7D0175E4, 0X7D01760C, "[bp-0X10]", "varg_r0");
	define_local_var(0X7D0175E4, 0X7D01760C, "[bp-0XC]", "varg_r1");
	define_local_var(0X7D0175E4, 0X7D01760C, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D0175E4, 0X7D01760C, "[bp-0X4]", "varg_r3");
	add_func    (0X7D017610,0X7D017638);
	set_func_flags(0X7D017610,0x400);
	SetType(0X7D017610, "int __cdecl cipher_is_valid(int idx);");
	set_frame_size(0X7D017610, 0X8, 0, 0);
	add_func    (0X7D017640,0X7D017680);
	set_func_flags(0X7D017640,0x400);
	set_frame_size(0X7D017640, 0X10, 0, 0);
	add_func    (0X7D017688,0X7D0176C8);
	set_func_flags(0X7D017688,0x400);
	set_frame_size(0X7D017688, 0X10, 0, 0);
	add_func    (0X7D0176D0,0X7D017710);
	set_func_flags(0X7D0176D0,0x400);
	set_frame_size(0X7D0176D0, 0X10, 0, 0);
	add_func    (0X7D017718,0X7D017740);
	set_func_flags(0X7D017718,0x400);
	set_frame_size(0X7D017718, 0X8, 0, 0);
	add_func    (0X7D017748,0X7D017770);
	set_func_flags(0X7D017748,0x400);
	set_frame_size(0X7D017748, 0X8, 0, 0);
	add_func    (0X7D017778,0X7D0177CC);
	set_func_flags(0X7D017778,0x400);
	set_frame_size(0X7D017778, 0X10, 0, 0);
	add_func    (0X7D0177D4,0X7D017822);
	set_func_flags(0X7D0177D4,0x400);
	set_frame_size(0X7D0177D4, 0X10, 0, 0);
	add_func    (0X7D01782C,0X7D01787A);
	set_func_flags(0X7D01782C,0x400);
	set_frame_size(0X7D01782C, 0X10, 0, 0);
	add_func    (0X7D017884,0X7D01792C);
	set_func_flags(0X7D017884,0x400);
	set_frame_size(0X7D017884, 0X38, 0, 0);
	add_func    (0X7D017930,0X7D01795A);
	set_func_flags(0X7D017930,0x400);
	set_frame_size(0X7D017930, 0X10, 0, 0);
	add_func    (0X7D017960,0X7D017A16);
	set_func_flags(0X7D017960,0x400);
	set_frame_size(0X7D017960, 0X28, 0, 0);
	add_func    (0X7D017A1C,0X7D017A72);
	set_func_flags(0X7D017A1C,0x400);
	set_frame_size(0X7D017A1C, 0X20, 0, 0);
	add_func    (0X7D017A78,0X7D017AA2);
	set_func_flags(0X7D017A78,0x400);
	set_frame_size(0X7D017A78, 0X10, 0, 0);
	add_func    (0X7D017AA8,0X7D017B98);
	set_func_flags(0X7D017AA8,0x400);
	SetType(0X7D017AA8, "int __cdecl ctr_encrypt(const unsigned __int8 *pt, unsigned __int8 *ct, unsigned int len, struct symmetric_CTR *ctr);");
	set_frame_size(0X7D017AA8, 0X30, 0, 0);
	add_func    (0X7D017B9C,0X7D017C7A);
	set_func_flags(0X7D017B9C,0x400);
	set_frame_size(0X7D017B9C, 0X30, 0, 0);
	add_func    (0X7D017C80,0X7D017D08);
	set_func_flags(0X7D017C80,0x400);
	set_frame_size(0X7D017C80, 0X20, 0, 0);
	add_func    (0X7D017D0C,0X7D017D36);
	set_func_flags(0X7D017D0C,0x400);
	set_frame_size(0X7D017D0C, 0X10, 0, 0);
	add_func    (0X7D017D3C,0X7D017DC4);
	set_func_flags(0X7D017D3C,0x400);
	set_frame_size(0X7D017D3C, 0X20, 0, 0);
	add_func    (0X7D017DC8,0X7D017E04);
	set_func_flags(0X7D017DC8,0x400);
	set_frame_size(0X7D017DC8, 0X18, 0, 0);
	add_func    (0X7D017E08,0X7D017E4E);
	set_func_flags(0X7D017E08,0x400);
	set_frame_size(0X7D017E08, 0X10, 0, 0);
	add_func    (0X7D017E54,0X7D017F84);
	set_func_flags(0X7D017E54,0x400);
	set_frame_size(0X7D017E54, 0X68, 0, 0);
	define_local_var(0X7D017E54, 0X7D017F84, "[bp-0X48]", "I");
	define_local_var(0X7D017E54, 0X7D017F84, "[bp-0X38]", "destination");
	add_func    (0X7D017F88,0X7D017FAE);
	set_func_flags(0X7D017F88,0x400);
	set_frame_size(0X7D017F88, 0X10, 0, 0);
	define_local_var(0X7D017F88, 0X7D017FAE, "[bp+0]", "ecb");
	add_func    (0X7D017FB4,0X7D017FFA);
	set_func_flags(0X7D017FB4,0x400);
	SetType(0X7D017FB4, "int __cdecl tweak_uncrypt(const unsigned __int8 *C, unsigned __int8 *P, unsigned __int8 *T, struct symmetric_xts *xts);");
	set_frame_size(0X7D017FB4, 0X10, 0, 0);
	add_func    (0X7D018000,0X7D01811E);
	set_func_flags(0X7D018000,0x400);
	set_frame_size(0X7D018000, 0X60, 0, 0);
	define_local_var(0X7D018000, 0X7D01811E, "[bp-0X38]", "destination");
	add_func    (0X7D018124,0X7D018186);
	set_func_flags(0X7D018124,0x400);
	set_frame_size(0X7D018124, 0X20, 0, 0);
	add_func    (0X7D01818C,0X7D0186BC);
	set_func_flags(0X7D01818C,0x400);
	set_frame_size(0X7D01818C, 0X140, 0, 0);
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0X11C]", "c");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0X118]", "ptr");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XFC]", "prng");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XF8]", "wprng");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XF4]", "d");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XDC]", "bits");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XB4]", "a");
	define_local_var(0X7D01818C, 0X7D0186BC, "[bp-0XB0]", "b");
	add_func    (0X7D0186C0,0X7D018830);
	set_func_flags(0X7D0186C0,0x400);
	set_frame_size(0X7D0186C0, 0X48, 0, 0);
	define_local_var(0X7D0186C0, 0X7D018830, "[bp-0X48]", "ptr");
	define_local_var(0X7D0186C0, 0X7D018830, "[bp-0X40]", "bits");
	define_local_var(0X7D0186C0, 0X7D018830, "[bp-0X34]", "b");
	define_local_var(0X7D0186C0, 0X7D018830, "[bp-0X30]", "c");
	define_local_var(0X7D0186C0, 0X7D018830, "[bp+0]", "prng");
	define_local_var(0X7D0186C0, 0X7D018830, "[bp+0X4]", "wprng");
	add_func    (0X7D018834,0X7D01897A);
	set_func_flags(0X7D018834,0x400);
	set_frame_size(0X7D018834, 0X40, 0, 0);
	define_local_var(0X7D018834, 0X7D01897A, "[bp-0X38]", "c");
	define_local_var(0X7D018834, 0X7D01897A, "[bp-0X30]", "d");
	define_local_var(0X7D018834, 0X7D01897A, "[bp-0X2C]", "b");
	add_func    (0X7D018980,0X7D018A5C);
	set_func_flags(0X7D018980,0x400);
	SetType(0X7D018980, "int __cdecl rsa_decrypt_key_ex(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen, const unsigned __int8 *lparam, unsigned int lparamlen, int hash_idx, int padding, int *stat, struct rsa_key *key);");
	set_frame_size(0X7D018980, 0X48, 0, 0);
	define_local_var(0X7D018980, 0X7D018A5C, "[bp-0X48]", "modulus_bitlen");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp-0X40]", "out");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp-0X3C]", "outlen");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp-0X38]", "res");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp-0X2C]", "msglen");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0]", "lparam");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0X4]", "lparamlen");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0X8]", "hash_idx");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0XC]", "padding");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0X10]", "stat");
	define_local_var(0X7D018980, 0X7D018A5C, "[bp+0X14]", "key");
	add_func    (0X7D018A60,0X7D018B34);
	set_func_flags(0X7D018A60,0x400);
	set_frame_size(0X7D018A60, 0X50, 0, 0);
	define_local_var(0X7D018A60, 0X7D018B34, "[bp-0X50]", "modulus_bitlen");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp-0X4C]", "hash_idx");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp-0X48]", "out");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp-0X44]", "outlen");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp-0X40]", "res");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp+0]", "lparam");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp+0X4]", "lparamlen");
	define_local_var(0X7D018A60, 0X7D018B34, "[bp+0X8]", "prng");
	add_func    (0X7D018B38,0X7D018CBC);
	set_func_flags(0X7D018B38,0x400);
	set_frame_size(0X7D018B38, 0X30, 0, 0);
	define_local_var(0X7D018B38, 0X7D018CBC, "[bp-0X2C]", "d");
	add_func    (0X7D018CC0,0X7D018F02);
	set_func_flags(0X7D018CC0,0x400);
	SetType(0X7D018CC0, "int __cdecl rsa_make_key(struct prng_state *prng, int wprng, int size, int e, rsa_key *key);");
	set_frame_size(0X7D018CC0, 0X60, 0, 0);
	define_local_var(0X7D018CC0, 0X7D018F02, "[bp-0X44]", "prng");
	define_local_var(0X7D018CC0, 0X7D018F02, "[bp-0X3C]", "N");
	define_local_var(0X7D018CC0, 0X7D018F02, "[bp-0X38]", "a");
	define_local_var(0X7D018CC0, 0X7D018F02, "[bp-0X34]", "b");
	define_local_var(0X7D018CC0, 0X7D018F02, "[bp+0]", "key");
	add_func    (0X7D018F08,0X7D01906C);
	set_func_flags(0X7D018F08,0x400);
	set_frame_size(0X7D018F08, 0XD0, 0, 0);
	define_local_var(0X7D018F08, 0X7D01906C, "[bp-0XCC]", "prng_idx");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp-0XC4]", "out");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp-0XC0]", "outlen");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp-0XAC]", "msglen");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp-0X68]", "list");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp+0X4]", "prng");
	define_local_var(0X7D018F08, 0X7D01906C, "[bp+0X10]", "saltlen");
	add_func    (0X7D019074,0X7D019256);
	set_func_flags(0X7D019074,0x400);
	set_frame_size(0X7D019074, 0X108, 0, 0);
	define_local_var(0X7D019074, 0X7D019256, "[bp-0X108]", "saltlen");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0X104]", "hash_idx");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0X100]", "modulus_bitlen");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0XFC]", "res");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0XF4]", "outlen");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0XEC]", "is_valid");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0XA4]", "s1");
	define_local_var(0X7D019074, 0X7D019256, "[bp-0X68]", "list");
	add_func    (0X7D019260,0X7D0193CC);
	set_func_flags(0X7D019260,0x400);
	set_frame_size(0X7D019260, 0X38, 0, 0);
	add_func    (0X7D0193D4,0X7D0193F6);
	set_func_flags(0X7D0193D4,0x400);
	set_frame_size(0X7D0193D4, 0X8, 0, 0);
	add_func    (0X7D0193FC,0X7D019426);
	set_func_flags(0X7D0193FC,0x400);
	set_frame_size(0X7D0193FC, 0X10, 0, 0);
	add_func    (0X7D01942C,0X7D01959A);
	set_func_flags(0X7D01942C,0x400);
	set_frame_size(0X7D01942C, 0X40, 0, 0);
	define_local_var(0X7D01942C, 0X7D01959A, "[bp-0X40]", "map");
	define_local_var(0X7D01942C, 0X7D01959A, "[bp-0X30]", "a");
	add_func    (0X7D0195A4,0X7D0195D6);
	set_func_flags(0X7D0195A4,0x400);
	set_frame_size(0X7D0195A4, 0X18, 0, 0);
	add_func    (0X7D0195DC,0X7D0196D0);
	set_func_flags(0X7D0195DC,0x400);
	set_frame_size(0X7D0195DC, 0X38, 0, 0);
	define_local_var(0X7D0195DC, 0X7D0196D0, "[bp-0X38]", "map");
	define_local_var(0X7D0195DC, 0X7D0196D0, "[bp-0X2C]", "a");
	add_func    (0X7D0196D4,0X7D019818);
	set_func_flags(0X7D0196D4,0x400);
	set_frame_size(0X7D0196D4, 0X50, 0, 0);
	define_local_var(0X7D0196D4, 0X7D019818, "[bp-0X48]", "a");
	define_local_var(0X7D0196D4, 0X7D019818, "[bp-0X2C]", "c");
	add_func    (0X7D01981C,0X7D019AB8);
	set_func_flags(0X7D01981C,0x400);
	set_frame_size(0X7D01981C, 0X60, 0, 0);
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X60]", "C");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X5C]", "modulus");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X44]", "c");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X40]", "d");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X3C]", "kB");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X34]", "a");
	define_local_var(0X7D01981C, 0X7D019AB8, "[bp-0X2C]", "b");
	add_func    (0X7D019ABC,0X7D019AE0);
	set_func_flags(0X7D019ABC,0x400);
	set_frame_size(0X7D019ABC, 0X8, 0, 0);
	add_func    (0X7D019AE4,0X7D019AFA);
	set_func_flags(0X7D019AE4,0x400);
	set_frame_size(0X7D019AE4, 0X10, 0, 0);
	define_local_var(0X7D019AE4, 0X7D019AFA, "[bp-0XC]", "var");
	add_func    (0X7D019B00,0X7D019B22);
	set_func_flags(0X7D019B00,0x400);
	set_frame_size(0X7D019B00, 0X8, 0, 0);
	add_func    (0X7D019B28,0X7D019B56);
	set_func_flags(0X7D019B28,0x400);
	SetType(0X7D019B28, "int __cdecl mp_montgomery_normalization(void *a, void *b);");
	set_frame_size(0X7D019B28, 0X10, 0, 0);
	add_func    (0X7D019B5C,0X7D019B98);
	set_func_flags(0X7D019B5C,0x400);
	set_frame_size(0X7D019B5C, 0X10, 0, 0);
	add_func    (0X7D019B9C,0X7D019BCA);
	set_func_flags(0X7D019B9C,0x400);
	SetType(0X7D019B9C, "int __cdecl mp_invmod(void *a, void *b, void *c);");
	set_frame_size(0X7D019B9C, 0X10, 0, 0);
	add_func    (0X7D019BD0,0X7D019C28);
	set_func_flags(0X7D019BD0,0x400);
	SetType(0X7D019BD0, "int __cdecl mp_mulmod(void *a, void *b, void *c, void *d);");
	set_frame_size(0X7D019BD0, 0X28, 0, 0);
	define_local_var(0X7D019BD0, 0X7D019C28, "[bp-0X28]", "pool");
	define_local_var(0X7D019BD0, 0X7D019C28, "[bp-0X20]", "op1");
	define_local_var(0X7D019BD0, 0X7D019C28, "[bp-0X1C]", "op2");
	add_func    (0X7D019C2C,0X7D019C4C);
	set_func_flags(0X7D019C2C,0x400);
	set_frame_size(0X7D019C2C, 0X8, 0, 0);
	add_func    (0X7D019C50,0X7D019C70);
	set_func_flags(0X7D019C50,0x400);
	set_frame_size(0X7D019C50, 0X8, 0, 0);
	add_func    (0X7D019C74,0X7D019C9A);
	set_func_flags(0X7D019C74,0x400);
	set_frame_size(0X7D019C74, 0X18, 0, 0);
	define_local_var(0X7D019C74, 0X7D019C9A, "[bp-0X18]", "pool");
	add_func    (0X7D019CA0,0X7D019CBE);
	set_func_flags(0X7D019CA0,0x400);
	set_frame_size(0X7D019CA0, 0X8, 0, 0);
	add_func    (0X7D019CC4,0X7D019CE4);
	set_func_flags(0X7D019CC4,0x400);
	set_frame_size(0X7D019CC4, 0X8, 0, 0);
	add_func    (0X7D019CE8,0X7D019D06);
	set_func_flags(0X7D019CE8,0x400);
	set_frame_size(0X7D019CE8, 0X8, 0, 0);
	add_func    (0X7D019D0C,0X7D019D2A);
	set_func_flags(0X7D019D0C,0x400);
	set_frame_size(0X7D019D0C, 0X8, 0, 0);
	add_func    (0X7D019D30,0X7D019D50);
	set_func_flags(0X7D019D30,0x400);
	set_frame_size(0X7D019D30, 0X8, 0, 0);
	add_func    (0X7D019D54,0X7D019D72);
	set_func_flags(0X7D019D54,0x400);
	set_frame_size(0X7D019D54, 0X8, 0, 0);
	add_func    (0X7D019D78,0X7D019DC6);
	set_func_flags(0X7D019D78,0x400);
	SetType(0X7D019D78, "int __cdecl mp_montgomery_setup(void *a, void **b);");
	set_frame_size(0X7D019D78, 0X20, 0, 0);
	define_local_var(0X7D019D78, 0X7D019DC6, "[bp-0X20]", "pool");
	add_func    (0X7D019DCC,0X7D019DF0);
	set_func_flags(0X7D019DCC,0x400);
	SetType(0X7D019DCC, "int __cdecl init_size(int size_bits, void **a);");
	set_frame_size(0X7D019DCC, 0X8, 0, 0);
	add_func    (0X7D019DF4,0X7D019E18);
	set_func_flags(0X7D019DF4,0x400);
	SetType(0X7D019DF4, "int __cdecl init(void **a);");
	set_frame_size(0X7D019DF4, 0X8, 0, 0);
	add_func    (0X7D019E1C,0X7D019EAA);
	set_func_flags(0X7D019E1C,0x400);
	SetType(0X7D019E1C, "int __cdecl mp_exptmod(void *a, void *b, void *c, void *d);");
	set_frame_size(0X7D019E1C, 0X38, 0, 0);
	define_local_var(0X7D019E1C, 0X7D019EAA, "[bp-0X28]", "ptr");
	define_local_var(0X7D019E1C, 0X7D019EAA, "[bp-0X24]", "a");
}

static Functions_1(void) {

	add_func    (0X7D019EB0,0X7D019F22);
	set_func_flags(0X7D019EB0,0x400);
	SetType(0X7D019EB0, "int __cdecl mp_montgomery_reduce(void *a, void *b, void *c);");
	set_frame_size(0X7D019EB0, 0X30, 0, 0);
	define_local_var(0X7D019EB0, 0X7D019F22, "[bp-0X30]", "n_inv");
	define_local_var(0X7D019EB0, 0X7D019F22, "[bp-0X2C]", "pool");
	define_local_var(0X7D019EB0, 0X7D019F22, "[bp-0X24]", "a");
	add_func    (0X7D019F28,0X7D019F2E);
	set_func_flags(0X7D019F28,0x400);
	add_func    (0X7D019F34,0X7D019FD2);
	set_func_flags(0X7D019F34,0x400);
	set_frame_size(0X7D019F34, 0X40, 0, 0);
	add_func    (0X7D019FDC,0X7D01A066);
	set_func_flags(0X7D019FDC,0x400);
	set_frame_size(0X7D019FDC, 0X28, 0, 0);
	add_func    (0X7D01A06C,0X7D01A140);
	set_func_flags(0X7D01A06C,0x400);
	SetType(0X7D01A06C, "int __cdecl rand_prime(void *N, int len, struct prng_state *prng, int wprng);");
	set_frame_size(0X7D01A06C, 0X38, 0, 0);
	add_func    (0X7D01A148,0X7D01A1C6);
	set_func_flags(0X7D01A148,0x400);
	SetType(0X7D01A148, "int __cdecl rand_bn_bits(void *N, int bits, prng_state *prng, int wprng);");
	set_frame_size(0X7D01A148, 0X20, 0, 0);
	add_func    (0X7D01A1D0,0X7D01A1FE);
	set_func_flags(0X7D01A1D0,0x400);
	set_frame_size(0X7D01A1D0, 0X8, 0, 0);
	add_func    (0X7D01A204,0X7D01A274);
	set_func_flags(0X7D01A204,0x400);
	set_frame_size(0X7D01A204, 0X30, 0, 0);
	define_local_var(0X7D01A204, 0X7D01A274, "[bp-0X30]", "type_of");
	add_func    (0X7D01A278,0X7D01A39A);
	set_func_flags(0X7D01A278,0x400);
	SetType(0X7D01A278, "int __cdecl der_encode_setof(struct ltc_asn1_list *list, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01A278, 0X38, 0, 0);
	define_local_var(0X7D01A278, 0X7D01A39A, "[bp-0X38]", "type_of");
	define_local_var(0X7D01A278, 0X7D01A39A, "[bp-0X2C]", "num");
	add_func    (0X7D01A3A0,0X7D01A3B2);
	set_func_flags(0X7D01A3A0,0x400);
	SetType(0X7D01A3A0, "int __cdecl char_to_int(unsigned __int8 x);");
	add_func    (0X7D01A3B8,0X7D01A576);
	set_func_flags(0X7D01A3B8,0x400);
	SetType(0X7D01A3B8, "int __cdecl der_encode_utctime(struct ltc_utctime *utctime, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01A3B8, 0X20, 0, 0);
	define_local_var(0X7D01A3B8, 0X7D01A576, "[bp-0X1C]", "outlen");
	add_func    (0X7D01A57C,0X7D01A708);
	set_func_flags(0X7D01A57C,0x400);
	SetType(0X7D01A57C, "int __cdecl der_encode_utf8_string(const wchar_t *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01A57C, 0X20, 0, 0);
	add_func    (0X7D01A70C,0X7D01A768);
	set_func_flags(0X7D01A70C,0x400);
	SetType(0X7D01A70C, "int __cdecl der_length_utf8_string(const wchar_t *in, unsigned int noctets, unsigned int *outlen);");
	set_frame_size(0X7D01A70C, 0X20, 0, 0);
	add_func    (0X7D01A76C,0X7D01A790);
	set_func_flags(0X7D01A76C,0x400);
	SetType(0X7D01A76C, "int __cdecl der_teletex_char_encode(int c);");
	set_frame_size(0X7D01A76C, 0X8, 0, 0);
	add_func    (0X7D01A794,0X7D01A7B6);
	set_func_flags(0X7D01A794,0x400);
	SetType(0X7D01A794, "int __cdecl der_teletex_value_decode(int v);");
	add_func    (0X7D01A7BC,0X7D01A9A4);
	set_func_flags(0X7D01A7BC,0x400);
	SetType(0X7D01A7BC, "int __cdecl pkcs_1_oaep_decode(const unsigned __int8 *msg, unsigned int msglen, const unsigned __int8 *lparam, unsigned int lparamlen, unsigned int modulus_bitlen, int hash_idx, unsigned __int8 *out, unsigned int *outlen, int *res);");
	set_frame_size(0X7D01A7BC, 0X48, 0, 0);
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp-0X48]", "masklen");
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp+0]", "modulus_bitlen");
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp+0X4]", "hash_idx");
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp+0X8]", "out");
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp+0XC]", "outlen");
	define_local_var(0X7D01A7BC, 0X7D01A9A4, "[bp+0X10]", "res");
	add_func    (0X7D01A9A8,0X7D01AB8C);
	set_func_flags(0X7D01A9A8,0x400);
	SetType(0X7D01A9A8, "int __cdecl pkcs_1_oaep_encode(const unsigned __int8 *msg, unsigned int msglen, const unsigned __int8 *lparam, unsigned int lparamlen, unsigned int modulus_bitlen, prng_state *prng, int prng_idx, int hash_idx, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01A9A8, 0X48, 0, 0);
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp-0X48]", "masklen");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp-0X38]", "source");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0]", "modulus_bitlen");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0X4]", "prng");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0X8]", "out");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0XC]", "hash_idx");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0X10]", "res");
	define_local_var(0X7D01A9A8, 0X7D01AB8C, "[bp+0X14]", "outlen");
	add_func    (0X7D01AB94,0X7D01ADA0);
	set_func_flags(0X7D01AB94,0x400);
	SetType(0X7D01AB94, "int __cdecl pkcs_1_pss_decode(const unsigned __int8 *msghash, unsigned int msghashlen, const unsigned __int8 *sig, unsigned int siglen, unsigned int saltlen, int hash_idx, unsigned int modulus_bitlen, int *res);");
	set_frame_size(0X7D01AB94, 0X118, 0, 0);
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp-0X118]", "masklen");
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp-0X108]", "ptr");
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp+0]", "saltlen");
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp+0X4]", "hash_idx");
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp+0X8]", "modulus_bitlen");
	define_local_var(0X7D01AB94, 0X7D01ADA0, "[bp+0XC]", "res");
	add_func    (0X7D01ADA4,0X7D01AFD0);
	set_func_flags(0X7D01ADA4,0x400);
	SetType(0X7D01ADA4, "int __cdecl pkcs_1_pss_encode(const unsigned __int8 *msghash, unsigned int msghashlen, unsigned int saltlen, prng_state *prng, int prng_idx, int hash_idx, unsigned int modulus_bitlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01ADA4, 0X120, 0, 0);
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp-0X120]", "masklen");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp-0X10C]", "seedlen");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp-0X108]", "ptr");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp+0]", "prng_idx");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp+0X4]", "hash_idx");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp+0X8]", "modulus_bitlen");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp+0XC]", "out");
	define_local_var(0X7D01ADA4, 0X7D01AFD0, "[bp+0X10]", "outlen");
	add_func    (0X7D01AFD8,0X7D01B0BC);
	set_func_flags(0X7D01AFD8,0x400);
	SetType(0X7D01AFD8, "int __cdecl pkcs_1_v1_5_encode(const unsigned __int8 *msg, unsigned int msglen, int block_type, unsigned int modulus_bitlen, prng_state *prng, int prng_idx, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01AFD8, 0X38, 0, 0);
	define_local_var(0X7D01AFD8, 0X7D01B0BC, "[bp-0X30]", "source");
	define_local_var(0X7D01AFD8, 0X7D01B0BC, "[bp+0]", "prng");
	define_local_var(0X7D01AFD8, 0X7D01B0BC, "[bp+0X4]", "prng_idx");
	define_local_var(0X7D01AFD8, 0X7D01B0BC, "[bp+0X8]", "out");
	define_local_var(0X7D01AFD8, 0X7D01B0BC, "[bp+0XC]", "outlen");
	add_func    (0X7D01B0C0,0X7D01B1AA);
	set_func_flags(0X7D01B0C0,0x400);
	SetType(0X7D01B0C0, "int __cdecl ltc_ecc_map(struct ecc_point *P, void *modulus, void *mp);");
	set_frame_size(0X7D01B0C0, 0X28, 0, 0);
	define_local_var(0X7D01B0C0, 0X7D01B1AA, "[bp-0X28]", "c");
	add_func    (0X7D01B1B0,0X7D01B478);
	set_func_flags(0X7D01B1B0,0x400);
	SetType(0X7D01B1B0, "int __cdecl ltc_ecc_mulmod(void *k, ecc_point *G, ecc_point *R, void *modulus, int map);");
	set_frame_size(0X7D01B1B0, 0X60, 0, 0);
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp-0X60]", "mp");
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp-0X3C]", "a");
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp-0X38]", "b");
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp-0X34]", "p");
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp-0X2C]", "R");
	define_local_var(0X7D01B1B0, 0X7D01B478, "[bp+0]", "map");
	add_func    (0X7D01B47C,0X7D01B846);
	set_func_flags(0X7D01B47C,0x400);
	SetType(0X7D01B47C, "int __cdecl ltc_ecc_mul2add(struct ecc_point *A, void *kA, struct ecc_point *B, void *kB, struct ecc_point *C, void *modulus);");
	set_frame_size(0X7D01B47C, 0X90, 0, 0);
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp-0X90]", "mp");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp-0X80]", "ptr");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp-0X70]", "b");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp-0X6C]", "a");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp-0X5C]", "R");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp+0]", "C");
	define_local_var(0X7D01B47C, 0X7D01B846, "[bp+0X4]", "modulus");
	add_func    (0X7D01B84C,0X7D01BE40);
	set_func_flags(0X7D01B84C,0x400);
	SetType(0X7D01B84C, "int __cdecl ltc_ecc_projective_add_point(struct ecc_point *P, struct ecc_point *Q, struct ecc_point *R, void *modulus, void *mp);");
	set_frame_size(0X7D01B84C, 0X48, 0, 0);
	define_local_var(0X7D01B84C, 0X7D01BE40, "[bp-0X3C]", "a");
	define_local_var(0X7D01B84C, 0X7D01BE40, "[bp+0]", "mp");
	add_func    (0X7D01BE44,0X7D01C28C);
	set_func_flags(0X7D01BE44,0x400);
	SetType(0X7D01BE44, "int __cdecl ltc_ecc_projective_dbl_point(struct ecc_point *P, struct ecc_point *R, void *modulus, void *mp);");
	set_frame_size(0X7D01BE44, 0X28, 0, 0);
	define_local_var(0X7D01BE44, 0X7D01C28C, "[bp-0X20]", "a");
	add_func    (0X7D01C290,0X7D01C2B4);
	set_func_flags(0X7D01C290,0x400);
	SetType(0X7D01C290, "int __cdecl der_ia5_char_encode(int c);");
	set_frame_size(0X7D01C290, 0X8, 0, 0);
	add_func    (0X7D01C2B8,0X7D01C2DA);
	set_func_flags(0X7D01C2B8,0x400);
	SetType(0X7D01C2B8, "int __cdecl der_ia5_value_decode(int v);");
	add_func    (0X7D01C2E0,0X7D01C3AE);
	set_func_flags(0X7D01C2E0,0x400);
	SetType(0X7D01C2E0, "int __cdecl der_decode_integer(const unsigned __int8 *in, unsigned int inlen, void *num);");
	set_frame_size(0X7D01C2E0, 0X20, 0, 0);
	define_local_var(0X7D01C2E0, 0X7D01C3AE, "[bp-0X1C]", "a");
	add_func    (0X7D01C3B4,0X7D01C572);
	set_func_flags(0X7D01C3B4,0x400);
	SetType(0X7D01C3B4, "int __cdecl der_encode_integer(void *num, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D01C3B4, 0X30, 0, 0);
	define_local_var(0X7D01C3B4, 0X7D01C572, "[bp-0X2C]", "a");
	add_func    (0X7D01C578,0X7D01C612);
	set_func_flags(0X7D01C578,0x400);
	SetType(0X7D01C578, "int __cdecl der_length_integer(void *num, unsigned int *outlen);");
	set_frame_size(0X7D01C578, 0X20, 0, 0);
	add_func    (0X7D01C618,0X7D01C63C);
	set_func_flags(0X7D01C618,0x400);
	SetType(0X7D01C618, "int __cdecl der_printable_char_encode(int c);");
	set_frame_size(0X7D01C618, 0X8, 0, 0);
	add_func    (0X7D01C640,0X7D01C662);
	set_func_flags(0X7D01C640,0x400);
	SetType(0X7D01C640, "int __cdecl der_printable_value_decode(int v);");
	add_func    (0X7D01C668,0X7D01C752);
	set_func_flags(0X7D01C668,0x400);
	SetType(0X7D01C668, "int __cdecl pkcs_1_mgf1(int hash_idx, const unsigned __int8 *seed, unsigned int seedlen, unsigned __int8 *mask, unsigned int masklen);");
	set_frame_size(0X7D01C668, 0X30, 0, 0);
	define_local_var(0X7D01C668, 0X7D01C752, "[bp-0X30]", "hLen");
	define_local_var(0X7D01C668, 0X7D01C752, "[bp+0]", "masklen");
	add_func    (0X7D01C758,0X7D01C75C);
	set_func_flags(0X7D01C758,0x400);
	SetType(0X7D01C758, "struct mpa_num_base *mpa_constant_one(void);");
	add_func    (0X7D01C760,0X7D01C816);
	set_func_flags(0X7D01C760,0x400);
	SetType(0X7D01C760, "int __cdecl mpa_compute_fmm_context(const struct mpa_num_base *modulus, struct mpa_num_base *r_modn, struct mpa_num_base *r2_modn, uint32_t *n_inv, uint8_t *pool);");
	set_frame_size(0X7D01C760, 0X40, 0, 0);
	define_local_var(0X7D01C760, 0X7D01C816, "[bp-0X40]", "pool");
	define_local_var(0X7D01C760, 0X7D01C816, "[bp-0X34]", "tmp_n_inv");
	define_local_var(0X7D01C760, 0X7D01C816, "[bp-0X30]", "gcd");
	define_local_var(0X7D01C760, 0X7D01C816, "[bp-0X2C]", "src1");
	define_local_var(0X7D01C760, 0X7D01C816, "[bp+0X8]", "r2_modn");
	define_local_var(0X7D01C760, 0X7D01C816, "[bp+0X14]", "n_inv");
	add_func    (0X7D01C81C,0X7D01CA62);
	set_func_flags(0X7D01C81C,0x400);
	SetType(0X7D01C81C, "int __cdecl primality_test_miller_rabin(void *n, int conf_level, void *pool);");
	set_frame_size(0X7D01C81C, 0X60, 0, 0);
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X60]", "pool");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X44]", "dest");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X40]", "q");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X3C]", "n_minus_1");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X38]", "b");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X34]", "r_modn");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X30]", "r2_modn");
	define_local_var(0X7D01C81C, 0X7D01CA62, "[bp-0X2C]", "op1");
	add_func    (0X7D01CA78,0X7D01CA7E);
	set_func_flags(0X7D01CA78,0x400);
	SetType(0X7D01CA78, "void __cdecl mpa_set_random_generator(uint32_t (__cdecl *callback)(void *buf, size_t blen));");
	add_func    (0X7D01CA84,0X7D01CB20);
	set_func_flags(0X7D01CA84,0x400);
	set_frame_size(0X7D01CA84, 0X28, 0, 0);
	add_func    (0X7D01CB24,0X7D01CBFA);
	set_func_flags(0X7D01CB24,0x400);
	set_frame_size(0X7D01CB24, 0X40, 0, 0);
	define_local_var(0X7D01CB24, 0X7D01CBFA, "[bp-0X34]", "dest");
	define_local_var(0X7D01CB24, 0X7D01CBFA, "[bp-0X30]", "n");
	define_local_var(0X7D01CB24, 0X7D01CBFA, "[bp-0X2C]", "var");
	define_local_var(0X7D01CB24, 0X7D01CBFA, "[bp+0]", "src");
	define_local_var(0X7D01CB24, 0X7D01CBFA, "[bp+0XC]", "pool");
	add_func    (0X7D01CC00,0X7D01CD92);
	set_func_flags(0X7D01CC00,0x400);
	SetType(0X7D01CC00, "int __cdecl mpa_set_str(void *dest, const char *digitstr);");
	set_frame_size(0X7D01CC00, 0X30, 0, 0);
	add_func    (0X7D01CDA4,0X7D01CDAA);
	set_func_flags(0X7D01CDA4,0x400);
	SetType(0X7D01CDA4, "void malloc_lock(void);");
	add_func    (0X7D01CDB0,0X7D01CDB6);
	set_func_flags(0X7D01CDB0,0x400);
	SetType(0X7D01CDB0, "void malloc_unlock(void);");
	add_func    (0X7D01CDBC,0X7D01CE10);
	set_func_flags(0X7D01CDBC,0x400);
	SetType(0X7D01CDBC, "void *__cdecl bget(unsigned int requested_size);");
	add_func    (0X7D01CE14,0X7D01CE62);
	set_func_flags(0X7D01CE14,0x400);
	SetType(0X7D01CE14, "void __cdecl brel(void *buf);");
	set_frame_size(0X7D01CE14, 0XC, 0, 0);
	add_func    (0X7D01CE68,0X7D01CE8E);
	set_func_flags(0X7D01CE68,0x400);
	SetType(0X7D01CE68, "void __cdecl bpool(void *buf, int len);");
	set_func_cmt(0X7D01CE68,	"BPOOL  --  Add a region of memory to the buffer pool.", 1);
	add_func    (0X7D01CE94,0X7D01CF98);
	set_func_flags(0X7D01CE94,0x400);
	SetType(0X7D01CE94, "void *__cdecl memalign(size_t alignment, size_t size);");
	set_frame_size(0X7D01CE94, 0X18, 0, 0);
	add_func    (0X7D01CF9C,0X7D01CFFA);
	set_func_flags(0X7D01CF9C,0x400);
	SetType(0X7D01CF9C, "void __cdecl malloc_add_pool(void *buf, size_t len);");
	set_frame_size(0X7D01CF9C, 0X20, 0, 0);
	add_func    (0X7D01D004,0X7D01D068);
	set_func_flags(0X7D01D004,0x400);
	SetType(0X7D01D004, "bool __cdecl malloc_buffer_is_within_alloced(void *buf, size_t len);");
	set_frame_size(0X7D01D004, 0X18, 0, 0);
	add_func    (0X7D01D070,0X7D01D0B6);
	set_func_flags(0X7D01D070,0x400);
	SetType(0X7D01D070, "bool __cdecl malloc_buffer_overlaps_heap(void *buf, size_t len);");
	set_frame_size(0X7D01D070, 0X10, 0, 0);
	add_func    (0X7D01D0C0,0X7D01D0D8);
	set_func_flags(0X7D01D0C0,0x400);
	set_frame_size(0X7D01D0C0, 0X18, 0, 0);
	add_func    (0X7D01D0D8,0X7D01D0F0);
	set_func_flags(0X7D01D0D8,0x400);
	SetType(0X7D01D0D8, "int32_t __fastcall __spoils<R2,R3,R12> uint64_div(int a1, int a2, int a3, int a4);");
	set_frame_size(0X7D01D0D8, 0X18, 0, 0);
	add_func    (0X7D01D0F0,0X7D01D1FC);
	set_func_flags(0X7D01D0F0,0x400);
	SetType(0X7D01D0F0, "void trace_printf(const char *function, int line, int level, bool level_ok, const char *fmt, ...);");
	set_frame_size(0X7D01D0F0, 0X130, 0, 0);
	define_local_var(0X7D01D0F0, 0X7D01D1FC, "[bp-0X130]", "ext");
	define_local_var(0X7D01D0F0, 0X7D01D1FC, "[bp+0]", "fmt");
	define_local_var(0X7D01D0F0, 0X7D01D1FC, "[bp+0X4]", "ap");
	add_func    (0X7D01D224,0X7D01D956);
	set_func_flags(0X7D01D224,0x400);
	SetType(0X7D01D224, "int __cdecl kprintf(const char *fmt0, int oflags, void *vp, char *sbuf, va_list ap, bool ext);");
	set_frame_size(0X7D01D224, 0XA8, 0, 0);
	define_local_var(0X7D01D224, 0X7D01D956, "[bp-0X4C]", "bf");
	define_local_var(0X7D01D224, 0X7D01D956, "[bp+0]", "ap");
	define_local_var(0X7D01D224, 0X7D01D956, "[bp+0X4]", "ext");
	add_func    (0X7D01D958,0X7D01DB00);
	set_func_flags(0X7D01D958,0x400);
	SetType(0X7D01D958, "SA_SilibRetCode_t __cdecl SaSi_LibInit(struct CRYS_RND_Context_t *rndContext_ptr, CRYS_RND_WorkBuff_t *rndWorkBuff_ptr);");
	set_frame_size(0X7D01D958, 0X48, 0, 0);
	add_func    (0X7D01DB10,0X7D01DB2A);
	set_func_flags(0X7D01DB10,0x400);
	set_frame_size(0X7D01DB10, 0X8, 0, 0);
	add_func    (0X7D01DB2C,0X7D01DB5A);
	set_func_flags(0X7D01DB2C,0x400);
	set_frame_size(0X7D01DB2C, 0X18, 0, 0);
	add_func    (0X7D01DB64,0X7D01DB7E);
	set_func_flags(0X7D01DB64,0x400);
	set_frame_size(0X7D01DB64, 0X8, 0, 0);
	add_func    (0X7D01DB88,0X7D01DBA4);
	set_func_flags(0X7D01DB88,0x400);
	SetType(0X7D01DB88, "CRYSError_t __cdecl SaSi_HalWaitInterrupt(uint32_t data);");
	add_func    (0X7D01DBAC,0X7D01DBC0);
	set_func_flags(0X7D01DBAC,0x400);
	add_func    (0X7D01DBC8,0X7D01DBFC);
	set_func_flags(0X7D01DBC8,0x400);
	set_frame_size(0X7D01DBC8, 0X10, 0, 0);
	add_func    (0X7D01DC08,0X7D01DC38);
	set_func_flags(0X7D01DC08,0x400);
	set_frame_size(0X7D01DC08, 0XC, 0, 0);
	add_func    (0X7D01DC3C,0X7D01DC6C);
	set_func_flags(0X7D01DC3C,0x400);
	set_frame_size(0X7D01DC3C, 0X10, 0, 0);
	add_func    (0X7D01DC70,0X7D01DD0A);
	set_func_flags(0X7D01DC70,0x400);
	set_frame_size(0X7D01DC70, 0X20, 0, 0);
	add_func    (0X7D01DD1C,0X7D01DD94);
	set_func_flags(0X7D01DD1C,0x400);
	set_frame_size(0X7D01DD1C, 0X18, 0, 0);
	add_func    (0X7D01DDA4,0X7D01DDC6);
	set_func_flags(0X7D01DDA4,0x400);
	set_frame_size(0X7D01DDA4, 0X10, 0, 0);
	add_func    (0X7D01DDCC,0X7D01DDD8);
	set_func_flags(0X7D01DDCC,0x400);
	add_func    (0X7D01DDE8,0X7D01DDEE);
	set_func_flags(0X7D01DDE8,0x400);
	add_func    (0X7D01DDF0,0X7D01DE22);
	set_func_flags(0X7D01DDF0,0x400);
	set_frame_size(0X7D01DDF0, 0X10, 0, 0);
	add_func    (0X7D01DE3C,0X7D01DE40);
	set_func_flags(0X7D01DE3C,0x4c0);
	add_func    (0X7D01DE40,0X7D01DE4A);
	set_func_flags(0X7D01DE40,0x400);
	SetType(0X7D01DE40, "enum TEE_Result __fastcall cache_area_clean(void *va, size_t len);");
	add_func    (0X7D01DE4C,0X7D01DE56);
	set_func_flags(0X7D01DE4C,0x400);
	add_func    (0X7D01DE58,0X7D01DE5C);
	set_func_flags(0X7D01DE58,0x400);
	add_func    (0X7D01DE5C,0X7D01DE5E);
	set_func_flags(0X7D01DE5C,0x400);
	add_func    (0X7D01DE60,0X7D01DE92);
	set_func_flags(0X7D01DE60,0x400);
	SetType(0X7D01DE60, "unsigned int __fastcall sub_7D01DE60(void *va, size_t len, int a3, _DWORD *a4, struct struc_FF10_fld28 *outbuf);");
	set_frame_size(0X7D01DE60, 0X18, 0, 0);
	define_local_var(0X7D01DE60, 0X7D01DE92, "[bp+0]", "ophys");
	add_func    (0X7D01DE94,0X7D01DE9E);
	set_func_flags(0X7D01DE94,0x400);
	SetType(0X7D01DE94, "int __fastcall mem_area_invalidate(void *va, size_t len);");
	set_frame_size(0X7D01DE94, 0X8, 0, 0);
	add_func    (0X7D01DEA0,0X7D01DEAE);
	set_func_flags(0X7D01DEA0,0x400);
	SetType(0X7D01DEA0, "void *__cdecl SaSi_PalMemMalloc(uint32_t aSize);");
	set_frame_size(0X7D01DEA0, 0X8, 0, 0);
	add_func    (0X7D01DEB0,0X7D01DEC2);
	set_func_flags(0X7D01DEB0,0x400);
	SetType(0X7D01DEB0, "void __cdecl SaSi_PalMemFree(void *ptr);");
	set_frame_size(0X7D01DEB0, 0X8, 0, 0);
	add_func    (0X7D01DEC4,0X7D01DEC8);
	set_func_flags(0X7D01DEC4,0x400);
	add_func    (0X7D01DEC8,0X7D01DECC);
	set_func_flags(0X7D01DEC8,0x400);
	add_func    (0X7D01DECC,0X7D01DEDC);
	set_func_flags(0X7D01DECC,0x400);
	SetType(0X7D01DECC, "uint32_t __cdecl SaSi_PalMemMap(uint32_t physicalAddress, uint32_t mapSize, uint32_t **ppVirtBuffAddr);");
	set_func_cmt(0X7D01DECC,	"This function purpose is to return the base virtual address that maps the base physical address. ", 1);
	set_frame_size(0X7D01DECC, 0X8, 0, 0);
	add_func    (0X7D01DEDC,0X7D01DEE0);
	set_func_flags(0X7D01DEDC,0x400);
	SetType(0X7D01DEDC, "uint32_t __cdecl SaSi_PalMemUnMap(uint32_t *pVirtBuffAddr, uint32_t mapSize);");
	set_func_cmt(0X7D01DEDC,	"This function purpose is to Unmap a specified address range previously mapped by SaSi_PalMemMap. ", 1);
	add_func    (0X7D01DEE0,0X7D01DEEA);
	set_func_flags(0X7D01DEE0,0x400);
	SetType(0X7D01DEE0, "SaSiError_t __cdecl SaSi_PalMutexCreate(struct SaSi_PalMutex *pMutexId);");
	set_frame_size(0X7D01DEE0, 0X8, 0, 0);
	add_func    (0X7D01DEEC,0X7D01DEF6);
	set_func_flags(0X7D01DEEC,0x400);
	SetType(0X7D01DEEC, "int __cdecl SaSi_PalMutexDestroy();");
	set_frame_size(0X7D01DEEC, 0X8, 0, 0);
	add_func    (0X7D01DEF8,0X7D01DF02);
	set_func_flags(0X7D01DEF8,0x400);
	SetType(0X7D01DEF8, "SaSiError_t __cdecl SaSi_PalMutexLock(struct SaSi_PalMutex *pMutexId, uint32_t aTimeOut);");
	set_frame_size(0X7D01DEF8, 0X8, 0, 0);
	add_func    (0X7D01DF04,0X7D01DF0E);
	set_func_flags(0X7D01DF04,0x400);
	SetType(0X7D01DF04, "SaSiError_t __cdecl SaSi_PalMutexUnlock(struct SaSi_PalMutex *pMutexId);");
	set_frame_size(0X7D01DF04, 0X8, 0, 0);
	add_func    (0X7D01DF10,0X7D01DF12);
	set_func_flags(0X7D01DF10,0x400);
	add_func    (0X7D01DF14,0X7D01DF16);
	set_func_flags(0X7D01DF14,0x400);
	add_func    (0X7D01DF18,0X7D01DFC0);
	set_func_flags(0X7D01DF18,0x400);
	SetType(0X7D01DF18, "SaSiError_t __cdecl SaSi_AesInit(struct SaSiAesUserContext_t *pContext, enum SaSiAesEncryptMode_t encryptDecryptFlag, enum SaSiAesOperationMode_t operationMode, enum SaSiAesPaddingType_t paddingType);");
	add_func    (0X7D01DFC4,0X7D01E146);
	set_func_flags(0X7D01DFC4,0x400);
	SetType(0X7D01DFC4, "int __cdecl SaSi_AesSetKey(struct CRYS_HASHUserContext_t *ContextID_ptr, unsigned int a2, int *a3, int a4);");
	set_frame_size(0X7D01DFC4, 0X18, 0, 0);
	add_func    (0X7D01E158,0X7D01E1A6);
	set_func_flags(0X7D01E158,0x400);
	SetType(0X7D01E158, "signed int __fastcall SaSi_AesSetIv(uint8_t *a1, void *a2);");
	set_frame_size(0X7D01E158, 0X10, 0, 0);
	add_func    (0X7D01E1A8,0X7D01E1F8);
	set_func_flags(0X7D01E1A8,0x400);
	set_frame_size(0X7D01E1A8, 0X10, 0, 0);
	add_func    (0X7D01E1F8,0X7D01E294);
	set_func_flags(0X7D01E1F8,0x400);
	SetType(0X7D01E1F8, "SaSiError_t __cdecl SaSi_AesBlock(struct SaSiAesUserContext_t *pContext, uint8_t *pDataIn, size_t dataInSize, uint8_t *pDataOut);");
	set_frame_size(0X7D01E1F8, 0X10, 0, 0);
	add_func    (0X7D01E298,0X7D01E474);
	set_func_flags(0X7D01E298,0x400);
	SetType(0X7D01E298, "SaSiError_t __cdecl SaSi_AesFinish(struct SaSiAesUserContext_t *pContext, size_t dataSize, uint8_t *pDataIn, size_t dataInBuffSize, uint8_t *pDataOut, size_t *dataOutBuffSize);");
	set_frame_size(0X7D01E298, 0X20, 0, 0);
	define_local_var(0X7D01E298, 0X7D01E474, "[bp+0]", "pDataOut");
	define_local_var(0X7D01E298, 0X7D01E474, "[bp+0X4]", "dataOutBuffSize");
	add_func    (0X7D01E478,0X7D01E494);
	set_func_flags(0X7D01E478,0x400);
	SetType(0X7D01E478, "signed int __fastcall sub_7D01E478(struct CRYS_HASHUserContext_t *ContextID_ptr);");
	set_frame_size(0X7D01E478, 0X8, 0, 0);
	add_func    (0X7D01E494,0X7D01E522);
	set_func_flags(0X7D01E494,0x400);
	SetType(0X7D01E494, "CRYSError_t __cdecl CRYS_HASH_Init(struct CRYS_HASHUserContext_t *ContextID_ptr, enum CRYS_HASH_OperationMode_t OperationMode);");
	add_func    (0X7D01E528,0X7D01E5C4);
	set_func_flags(0X7D01E528,0x400);
	SetType(0X7D01E528, "CRYSError_t __cdecl CRYS_HASH_Update(struct CRYS_HASHUserContext_t *ContextID_ptr, uint8_t *DataIn_ptr, size_t DataInSize);");
	set_frame_size(0X7D01E528, 0X18, 0, 0);
	add_func    (0X7D01E5CC,0X7D01E624);
	set_func_flags(0X7D01E5CC,0x400);
	SetType(0X7D01E5CC, "CRYSError_t __cdecl CRYS_HASH_Finish(struct CRYS_HASHUserContext_t *ContextID_ptr, uint32_t *HashResultBuff);");
	set_frame_size(0X7D01E5CC, 0X10, 0, 0);
	add_func    (0X7D01E628,0X7D01E644);
	set_func_flags(0X7D01E628,0x400);
	SetType(0X7D01E628, "CRYSError_t __cdecl CRYS_HASH_Free(struct CRYS_HASHUserContext_t *ContextID_ptr);");
	set_frame_size(0X7D01E628, 0X8, 0, 0);
	add_func    (0X7D01E644,0X7D01E69A);
	set_func_flags(0X7D01E644,0x400);
	SetType(0X7D01E644, "CRYSError_t __cdecl CRYS_HASH(enum CRYS_HASH_OperationMode_t OperationMode, uint8_t *DataIn_ptr, size_t DataSize, uint32_t *HashResultBuff);");
	set_frame_size(0X7D01E644, 0X230, 0, 0);
	define_local_var(0X7D01E644, 0X7D01E69A, "[bp-0X22C]", "ContextID_ptr");
	add_func    (0X7D01E69C,0X7D01E6B0);
	set_func_flags(0X7D01E69C,0x400);
	add_func    (0X7D01E6B4,0X7D01E7C6);
	set_func_flags(0X7D01E6B4,0x400);
	SetType(0X7D01E6B4, "CRYSError_t __cdecl CRYS_HMAC_Init(struct CRYS_HMACUserContext_t *ContextID_ptr, enum CRYS_HASH_OperationMode_t OperationMode, uint8_t *key_ptr, uint16_t keySize);");
	set_frame_size(0X7D01E6B4, 0X20, 0, 0);
	add_func    (0X7D01E7D0,0X7D01E882);
	set_func_flags(0X7D01E7D0,0x400);
	SetType(0X7D01E7D0, "int __fastcall sub_7D01E7D0(struct CRYS_HASHUserContext_t *ContextID_ptr, void *a2, unsigned int a3);");
	add_func    (0X7D01E88C,0X7D01E90A);
	set_func_flags(0X7D01E88C,0x400);
	SetType(0X7D01E88C, "int __fastcall sub_7D01E88C(struct CRYS_HASHUserContext_t *ContextID_ptr, void *a2);");
	set_frame_size(0X7D01E88C, 0X10, 0, 0);
	add_func    (0X7D01E92C,0X7D01E966);
	set_func_flags(0X7D01E92C,0x400);
	set_frame_size(0X7D01E92C, 0X228, 0, 0);
	define_local_var(0X7D01E92C, 0X7D01E966, "[bp+0]", "a3");
	define_local_var(0X7D01E92C, 0X7D01E966, "[bp+0X4]", "a2");
	add_func    (0X7D01E968,0X7D01EAD8);
	set_func_flags(0X7D01E968,0x400);
	SetType(0X7D01E968, "signed int __fastcall crys_unknfuncE968(unsigned int *a1, int a2, void *a3, int a4, unsigned int a5, unsigned int a6);");
	set_frame_size(0X7D01E968, 0X30, 0, 0);
	define_local_var(0X7D01E968, 0X7D01EAD8, "[bp-0X2C]", "ptr2");
	define_local_var(0X7D01E968, 0X7D01EAD8, "[bp+0]", "a5");
	define_local_var(0X7D01E968, 0X7D01EAD8, "[bp+0X4]", "a6");
	add_func    (0X7D01EAE0,0X7D01EB58);
	set_func_flags(0X7D01EAE0,0x400);
	SetType(0X7D01EAE0, "signed int __fastcall sub_7D01EAE0(struct CRYS_HASHUserContext_t *ContextID_ptr, char *a2, unsigned int a3, char *a4);");
	set_frame_size(0X7D01EAE0, 0X10, 0, 0);
	add_func    (0X7D01EB5C,0X7D01EB78);
	set_func_flags(0X7D01EB5C,0x400);
	set_frame_size(0X7D01EB5C, 0X8, 0, 0);
	add_func    (0X7D01EB78,0X7D01EBCA);
	set_func_flags(0X7D01EB78,0x400);
	set_frame_size(0X7D01EB78, 0X228, 0, 0);
	define_local_var(0X7D01EB78, 0X7D01EBCA, "[bp-0X21C]", "a1");
	define_local_var(0X7D01EB78, 0X7D01EBCA, "[bp+0X4]", "a2");
	define_local_var(0X7D01EB78, 0X7D01EBCA, "[bp+0XC]", "a4");
	add_func    (0X7D01EBCC,0X7D01ECEC);
	set_func_flags(0X7D01EBCC,0x400);
	set_frame_size(0X7D01EBCC, 0X20, 0, 0);
	define_local_var(0X7D01EBCC, 0X7D01ECEC, "[bp+0X8]", "ptr2");
	add_func    (0X7D01ECF0,0X7D01EE18);
	set_func_flags(0X7D01ECF0,0x400);
	set_frame_size(0X7D01ECF0, 0X30, 0, 0);
	add_func    (0X7D01EE24,0X7D01EE82);
	set_func_flags(0X7D01EE24,0x400);
	add_func    (0X7D01EE88,0X7D01EF30);
	set_func_flags(0X7D01EE88,0x400);
	set_frame_size(0X7D01EE88, 0X18, 0, 0);
	define_local_var(0X7D01EE88, 0X7D01EF30, "[bp+0]", "ptr1");
	add_func    (0X7D01EFBC,0X7D01EFE4);
	set_func_flags(0X7D01EFBC,0x400);
	SetType(0X7D01EFBC, "void __cdecl sub_7D01EFBC(struct struc_FF10 *a1);");
	set_frame_size(0X7D01EFBC, 0X8, 0, 0);
	add_func    (0X7D01EFE4,0X7D01F0C4);
	set_func_flags(0X7D01EFE4,0x410);
	set_frame_size(0X7D01EFE4, 0X58, 32, 0);
	define_local_var(0X7D01EFE4, 0X7D01F0C4, "[bp-0X58]", "a5");
	define_local_var(0X7D01EFE4, 0X7D01F0C4, "[bp-0X30]", "a2");
	define_local_var(0X7D01EFE4, 0X7D01F0C4, "[bp-0X18]", "a3");
	add_func    (0X7D01F0CC,0X7D01F356);
	set_func_flags(0X7D01F0CC,0x400);
	SetType(0X7D01F0CC, "signed int __fastcall crys_unknfuncF0CC(char *a1, size_t a2, int a3, int a4, struct struc_FF10 *stru4);");
	set_frame_size(0X7D01F0CC, 0X40, 0, 0);
	define_local_var(0X7D01F0CC, 0X7D01F356, "[bp-0X40]", "a5");
	define_local_var(0X7D01F0CC, 0X7D01F356, "[bp-0X34]", "a4");
	define_local_var(0X7D01F0CC, 0X7D01F356, "[bp+0]", "stru4");
	add_func    (0X7D01F358,0X7D01F45C);
	set_func_flags(0X7D01F358,0x400);
	SetType(0X7D01F358, "signed int __fastcall crys_unknfuncF358(uint8_t *va, unsigned int len, int a3, struct struc_FF10 *stru4);");
	set_frame_size(0X7D01F358, 0X28, 0, 0);
	add_func    (0X7D01F45C,0X7D01F4DC);
	set_func_flags(0X7D01F45C,0x400);
	SetType(0X7D01F45C, "int __fastcall sub_7D01F45C(struct struc_FF10 *a1);");
	set_frame_size(0X7D01F45C, 0X18, 0, 0);
	add_func    (0X7D01F4DC,0X7D01F51C);
	set_func_flags(0X7D01F4DC,0x400);
	set_frame_size(0X7D01F4DC, 0X10, 0, 0);
	add_func    (0X7D01F520,0X7D01F53C);
	set_func_flags(0X7D01F520,0x400);
	set_frame_size(0X7D01F520, 0X8, 0, 0);
	add_func    (0X7D01F540,0X7D01F596);
	set_func_flags(0X7D01F540,0x400);
	add_func    (0X7D01F598,0X7D01F5F0);
	set_func_flags(0X7D01F598,0x400);
	set_frame_size(0X7D01F598, 0X10, 0, 0);
	add_func    (0X7D01F5F8,0X7D01F7FA);
	set_func_flags(0X7D01F5F8,0x400);
	SetType(0X7D01F5F8, "signed int __fastcall crys_unknfuncF5F8(uint32_t *a1, uint8_t *DataIn_ptr1, uint8_t *a3, unsigned int DataInSize);");
	set_frame_size(0X7D01F5F8, 0X68, 0, 0);
	define_local_var(0X7D01F5F8, 0X7D01F7FA, "[bp-0X68]", "a5");
	define_local_var(0X7D01F5F8, 0X7D01F7FA, "[bp-0X5C]", "a3");
	add_func    (0X7D01F814,0X7D01FA6C);
	set_func_flags(0X7D01F814,0x400);
	SetType(0X7D01F814, "signed int __fastcall crys_hash_do_finish(uint32_t *ctx2, void *kinbuf, void *outbuf, int kinbuf_len);");
	set_frame_size(0X7D01F814, 0X70, 0, 0);
	define_local_var(0X7D01F814, 0X7D01FA6C, "[bp-0X70]", "a5");
	define_local_var(0X7D01F814, 0X7D01FA6C, "[bp-0X64]", "va");
	add_func    (0X7D01FA84,0X7D01FA8A);
	set_func_flags(0X7D01FA84,0x400);
	add_func    (0X7D01FA8C,0X7D01FAFE);
	set_func_flags(0X7D01FA8C,0x400);
	set_frame_size(0X7D01FA8C, 0X18, 0, 0);
	add_func    (0X7D01FBB8,0X7D01FBE0);
	set_func_flags(0X7D01FBB8,0x400);
	set_frame_size(0X7D01FBB8, 0X10, 0, 0);
	add_func    (0X7D01FBE8,0X7D01FC1C);
	set_func_flags(0X7D01FBE8,0x400);
	SetType(0X7D01FBE8, "int __cdecl sub_7D01FBE8(uint32_t a1, int *a2, int *a3);");
	set_frame_size(0X7D01FBE8, 0X18, 0, 0);
	add_func    (0X7D01FC24,0X7D01FC58);
	set_func_flags(0X7D01FC24,0x400);
	set_frame_size(0X7D01FC24, 0X18, 0, 0);
	add_func    (0X7D01FC60,0X7D01FDF0);
	set_func_flags(0X7D01FC60,0x400);
	set_frame_size(0X7D01FC60, 0X738, 0, 0);
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X738]", "fourcc");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X734]", "fourcc_len");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X730]", "out_key");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X72C]", "out_key_len");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X724]", "in32_ptr");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X6CC]", "ecX");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X6C8]", "out32_ptr");
	define_local_var(0X7D01FC60, 0X7D01FDF0, "[bp-0X39C]", "ecY");
	add_func    (0X7D01FDF0,0X7D01FE80);
	set_func_flags(0X7D01FDF0,0x400);
	set_frame_size(0X7D01FDF0, 0X48, 0, 0);
	define_local_var(0X7D01FDF0, 0X7D01FE80, "[bp-0X48]", "a5");
	define_local_var(0X7D01FDF0, 0X7D01FE80, "[bp-0X44]", "a6");
	define_local_var(0X7D01FDF0, 0X7D01FE80, "[bp-0X40]", "a7");
	define_local_var(0X7D01FDF0, 0X7D01FE80, "[bp-0X3C]", "a8");
	define_local_var(0X7D01FDF0, 0X7D01FE80, "[bp-0X28]", "out_key");
	add_func    (0X7D01FE8C,0X7D01FED2);
	set_func_flags(0X7D01FE8C,0x400);
	add_func    (0X7D01FEDC,0X7D020054);
	set_func_flags(0X7D01FEDC,0x400);
	SetType(0X7D01FEDC, "signed int __fastcall TEE_CryptoCell_KeyDerivation(unsigned int kind1, _DWORD *a2, uint8_t *passphrase, int passphrase_len, uint32_t *fourcc, int fourcc_len, uint8_t *out_key, unsigned int out_key_len);");
	set_frame_size(0X7D01FEDC, 0XD8, 0, 0);
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp-0XD8]", "outbuf");
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp-0XAC]", "kinbuf");
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp+0]", "a5");
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp+0X4]", "a6");
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp+0X8]", "a7");
	define_local_var(0X7D01FEDC, 0X7D020054, "[bp+0XC]", "a8");
	add_func    (0X7D020054,0X7D0200AC);
	set_func_flags(0X7D020054,0x400);
	set_frame_size(0X7D020054, 0X18, 0, 0);
	add_func    (0X7D0200AC,0X7D02019A);
	set_func_flags(0X7D0200AC,0x400);
	set_frame_size(0X7D0200AC, 0X10, 0, 0);
	add_func    (0X7D0201A8,0X7D02021A);
	set_func_flags(0X7D0201A8,0x400);
	set_frame_size(0X7D0201A8, 0X20, 0, 0);
	add_func    (0X7D02021C,0X7D02029C);
	set_func_flags(0X7D02021C,0x400);
	set_frame_size(0X7D02021C, 0X30, 0, 0);
	add_func    (0X7D0202A4,0X7D0202F6);
	set_func_flags(0X7D0202A4,0x400);
	SetType(0X7D0202A4, "signed int __fastcall SaSi_UtilDeriveRPMBKey(uint8_t *outbuf);");
	set_frame_size(0X7D0202A4, 0X38, 0, 0);
	define_local_var(0X7D0202A4, 0X7D0202F6, "[bp-0X38]", "a5");
	define_local_var(0X7D0202A4, 0X7D0202F6, "[bp-0X34]", "a6");
	define_local_var(0X7D0202A4, 0X7D0202F6, "[bp-0X30]", "a7");
	define_local_var(0X7D0202A4, 0X7D0202F6, "[bp-0X2C]", "a8");
	define_local_var(0X7D0202A4, 0X7D0202F6, "[bp-0X20]", "destination");
	add_func    (0X7D0202FC,0X7D0203C0);
	set_func_flags(0X7D0202FC,0x400);
	set_frame_size(0X7D0202FC, 0X2A0, 0, 0);
	define_local_var(0X7D0202FC, 0X7D0203C0, "[bp-0X294]", "outbuf");
	define_local_var(0X7D0202FC, 0X7D0203C0, "[bp-0X234]", "ContextID_ptr");
	add_func    (0X7D0203C0,0X7D0203D6);
	set_func_flags(0X7D0203C0,0x400);
	add_func    (0X7D0203DC,0X7D020424);
	set_func_flags(0X7D0203DC,0x400);
	set_frame_size(0X7D0203DC, 0X4, 0, 0);
	add_func    (0X7D020424,0X7D0205B4);
	set_func_flags(0X7D020424,0x400);
	SetType(0X7D020424, "unsigned int __fastcall sub_7D020424(void **a1, unsigned int a2, int a3, void *a4, void *a5);");
	set_frame_size(0X7D020424, 0X50, 0, 0);
	define_local_var(0X7D020424, 0X7D0205B4, "[bp-0X50]", "a5");
	add_func    (0X7D0205B4,0X7D020638);
	set_func_flags(0X7D0205B4,0x400);
	SetType(0X7D0205B4, "signed int __fastcall sub_7D0205B4(int a1, int a2, int a3, void *a4);");
	set_frame_size(0X7D0205B4, 0X38, 0, 0);
	add_func    (0X7D020638,0X7D0206D6);
	set_func_flags(0X7D020638,0x400);
	set_frame_size(0X7D020638, 0X58, 0, 0);
	define_local_var(0X7D020638, 0X7D0206D6, "[bp-0X58]", "a5");
	define_local_var(0X7D020638, 0X7D0206D6, "[bp-0X38]", "a3");
	add_func    (0X7D0206E8,0X7D020784);
	set_func_flags(0X7D0206E8,0x400);
	set_frame_size(0X7D0206E8, 0X58, 0, 0);
	define_local_var(0X7D0206E8, 0X7D020784, "[bp-0X58]", "a5");
	add_func    (0X7D020794,0X7D0207CC);
	set_func_flags(0X7D020794,0x400);
	set_frame_size(0X7D020794, 0X10, 0, 0);
	add_func    (0X7D0207CC,0X7D020800);
	set_func_flags(0X7D0207CC,0x400);
	set_frame_size(0X7D0207CC, 0X10, 0, 0);
	add_func    (0X7D020800,0X7D020840);
	set_func_flags(0X7D020800,0x400);
	set_frame_size(0X7D020800, 0X8, 0, 0);
	add_func    (0X7D020840,0X7D02085A);
	set_func_flags(0X7D020840,0x400);
	set_frame_size(0X7D020840, 0X8, 0, 0);
	add_func    (0X7D02085C,0X7D02086A);
	set_func_flags(0X7D02085C,0x400);
	set_frame_size(0X7D02085C, 0X8, 0, 0);
	add_func    (0X7D020870,0X7D0208AA);
	set_func_flags(0X7D020870,0x400);
	set_frame_size(0X7D020870, 0X18, 0, 0);
	add_func    (0X7D0208AC,0X7D0208C0);
	set_func_flags(0X7D0208AC,0x400);
	set_frame_size(0X7D0208AC, 0X8, 0, 0);
	add_func    (0X7D0208C4,0X7D020924);
	set_func_flags(0X7D0208C4,0x400);
	SetType(0X7D0208C4, "enum CRYSError_t __cdecl CRYS_COMMON_ReverseMemcpy(uint8_t *dst_ptr, uint8_t *src_ptr, uint32_t size);");
	set_frame_size(0X7D0208C4, 0X4, 0, 0);
	add_func    (0X7D020924,0X7D020966);
	set_func_flags(0X7D020924,0x400);
	SetType(0X7D020924, "void __cdecl CRYS_COMMON_InPlaceConvertBytesWordsAndArrayEndianness(uint32_t *buf_ptr, uint32_t sizeWords);");
	add_func    (0X7D020968,0X7D020A12);
	set_func_flags(0X7D020968,0x400);
	SetType(0X7D020968, "CRYSError_t __cdecl CRYS_COMMON_ConvertMsbLsbBytesToLswMswWords(uint32_t *out32_ptr, uint32_t sizeOutBuffBytes, const uint8_t *in8_ptr, uint32_t sizeInBytes);");
	add_func    (0X7D020A14,0X7D020AA8);
	set_func_flags(0X7D020A14,0x400);
	SetType(0X7D020A14, "CRYSError_t __cdecl CRYS_COMMON_ConvertLswMswWordsToMsbLsbBytes(uint8_t *out8_ptr, uint32_t sizeOutBuffBytes, uint32_t *in32_ptr, uint32_t sizeInBytes);");
	add_func    (0X7D020AA8,0X7D020ACC);
	set_func_flags(0X7D020AA8,0x400);
	set_frame_size(0X7D020AA8, 0X8, 0, 0);
	add_func    (0X7D020ACC,0X7D020AD8);
	set_func_flags(0X7D020ACC,0x400);
	add_func    (0X7D020AD8,0X7D020C16);
	set_func_flags(0X7D020AD8,0x400);
	SetType(0X7D020AD8, "CRYSError_t __cdecl CRYS_RSA_Build_PubKey(struct CRYS_RSAUserPubKey_t *UserPubKey_ptr, uint8_t *Exponent_ptr, uint16_t ExponentSize, uint8_t *Modulus_ptr, uint16_t ModulusSize);");
	set_frame_size(0X7D020AD8, 0X28, 0, 0);
	define_local_var(0X7D020AD8, 0X7D020C16, "[bp+0]", "ModulusSize");
	add_func    (0X7D020C18,0X7D020DE8);
	set_func_flags(0X7D020C18,0x400);
	set_frame_size(0X7D020C18, 0X30, 0, 0);
	define_local_var(0X7D020C18, 0X7D020DE8, "[bp-0X30]", "CounterBuff_ptr");
	define_local_var(0X7D020C18, 0X7D020DE8, "[bp+0X4]", "in8_ptr");
	add_func    (0X7D020DE8,0X7D02109A);
	set_func_flags(0X7D020DE8,0x400);
	set_frame_size(0X7D020DE8, 0X48, 0, 0);
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp-0X48]", "sizeInBytes");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp-0X40]", "out32_ptr");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp-0X3C]", "CounterBuff_ptr");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp-0X38]", "CounterSizeWords");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp+0X4]", "in8_ptr");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp+0X8]", "Counter1Size");
	define_local_var(0X7D020DE8, 0X7D02109A, "[bp+0XC]", "CounterBuff1_ptr");
	add_func    (0X7D02109C,0X7D0211D0);
	set_func_flags(0X7D02109C,0x400);
	SetType(0X7D02109C, "enum CRYSError_t __cdecl CRYS_RSA_Get_PubKey(struct CRYS_RSAUserPubKey_t *UserPubKey_ptr, uint8_t *Exponent_ptr, uint16_t *ExponentSize_ptr, uint8_t *Modulus_ptr, uint16_t *ModulusSize_ptr);");
	set_frame_size(0X7D02109C, 0X20, 0, 0);
	define_local_var(0X7D02109C, 0X7D0211D0, "[bp+0]", "ModulusSize_ptr");
	add_func    (0X7D0211D0,0X7D0213A0);
	set_func_flags(0X7D0211D0,0x400);
	set_frame_size(0X7D0211D0, 0, 0, 0);
	define_local_var(0X7D0211D0, 0X7D0213A0, "[bp+0X4]", "dst_ptr");
	add_func    (0X7D0213A0,0X7D021540);
	set_func_flags(0X7D0213A0,0x400);
	SetType(0X7D0213A0, "enum CRYSError_t __cdecl SaSi_RsaSchemesEncrypt(struct CRYS_RND_Context_t *rndContext_ptr, struct CRYS_RSAUserPubKey_t *UserPubKey_ptr, struct CRYS_RSAPrimeData_t *PrimeData_ptr, void *hashFunc, uint8_t *L, uint16_t Llen, uint32_t MGF, uint8_t *DataIn_ptr, uint16_t DataInSize, uint8_t *Output_ptr, uint32_t PKCS1_ver);");
	set_frame_size(0X7D0213A0, 0X38, 0, 0);
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0]", "L");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0X4]", "Llen");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0X8]", "MGF");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0XC]", "ptr2");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0X10]", "DataInSize");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0X14]", "Output_ptr");
	define_local_var(0X7D0213A0, 0X7D021540, "[bp+0X18]", "PKCS1_ver");
	add_func    (0X7D021540,0X7D021730);
	set_func_flags(0X7D021540,0x400);
	SetType(0X7D021540, "enum CRYSError_t __cdecl SaSi_RsaSchemesDecrypt(struct CRYS_RSAUserPrivKey_t *UserPrivKey_ptr, struct CRYS_RSAPrimeData_t *PrimeData_ptr, void *hashFunc, uint8_t *L, uint16_t Llen, uint32_t MGF, uint8_t *DataIn_ptr, uint16_t DataInSize, uint8_t *Output_ptr, uint16_t *OutputSize_ptr, uint32_t PKCS1_ver);");
	set_frame_size(0X7D021540, 0X250, 0, 0);
	define_local_var(0X7D021540, 0X7D021730, "[bp+0]", "Llen");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0X4]", "MGF");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0X8]", "DataIn_ptr");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0XC]", "DataInSize");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0X10]", "Output_ptr");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0X14]", "OutputSize_ptr");
	define_local_var(0X7D021540, 0X7D021730, "[bp+0X18]", "PKCS1_ver");
	add_func    (0X7D02180C,0X7D02188C);
	set_func_flags(0X7D02180C,0x400);
	add_func    (0X7D02188C,0X7D021918);
	set_func_flags(0X7D02188C,0x400);
	set_frame_size(0X7D02188C, 0, 0, 0);
	add_func    (0X7D021920,0X7D021A1C);
	set_func_flags(0X7D021920,0x400);
	set_frame_size(0X7D021920, 0X20, 0, 0);
	define_local_var(0X7D021920, 0X7D021A1C, "[bp+0]", "out8_ptr");
	add_func    (0X7D021A1C,0X7D021B14);
	set_func_flags(0X7D021A1C,0x400);
	set_frame_size(0X7D021A1C, 0X20, 0, 0);
	define_local_var(0X7D021A1C, 0X7D021B14, "[bp+0]", "out8_ptr");
	add_func    (0X7D021B14,0X7D021CB2);
	set_func_flags(0X7D021B14,0x400);
	set_frame_size(0X7D021B14, 0X28, 0, 0);
	add_func    (0X7D021CC0,0X7D021D58);
	set_func_flags(0X7D021CC0,0x400);
	set_frame_size(0X7D021CC0, 0X10, 0, 0);
	add_func    (0X7D021D58,0X7D021E4C);
	set_func_flags(0X7D021D58,0x400);
	set_frame_size(0X7D021D58, 0X28, 0, 0);
	add_func    (0X7D021E4C,0X7D021E88);
	set_func_flags(0X7D021E4C,0x400);
	set_frame_size(0X7D021E4C, 0X20, 0, 0);
	add_func    (0X7D021E88,0X7D021F4C);
	set_func_flags(0X7D021E88,0x400);
	set_frame_size(0X7D021E88, 0X30, 0, 0);
	add_func    (0X7D021F4C,0X7D0221B4);
	set_func_flags(0X7D021F4C,0x400);
	set_frame_size(0X7D021F4C, 0X38, 0, 0);
	add_func    (0X7D0221B4,0X7D0223B6);
	set_func_flags(0X7D0221B4,0x400);
	SetType(0X7D0221B4, "CRYSError_t __cdecl CRYS_RSA_KG_GenerateKeyPairCRT(struct CRYS_RND_Context_t *rndContext_ptr, uint8_t *pubExp_ptr, uint16_t pubExpSizeInBytes, uint32_t keySize, struct CRYS_RSAUserPrivKey_t *userPrivKey_ptr, struct CRYS_RSAUserPubKey_t *userPubKey_ptr, struct CRYS_RSAKGData_t *keyGenData_ptr, struct CRYS_RSAKGFipsContext_t *pFipsCtx);");
	set_frame_size(0X7D0221B4, 0X18, 0, 0);
	define_local_var(0X7D0221B4, 0X7D0223B6, "[bp+0]", "userPrivKey_ptr");
	define_local_var(0X7D0221B4, 0X7D0223B6, "[bp+0X4]", "userPubKey_ptr");
	define_local_var(0X7D0221B4, 0X7D0223B6, "[bp+0X8]", "keyGenData_ptr");
	define_local_var(0X7D0221B4, 0X7D0223B6, "[bp+0XC]", "pFipsCtx");
	add_func    (0X7D0223B8,0X7D02254C);
	set_func_flags(0X7D0223B8,0x400);
	set_frame_size(0X7D0223B8, 0X28, 0, 0);
	add_func    (0X7D022558,0X7D0225FA);
	set_func_flags(0X7D022558,0x400);
	add_func    (0X7D0225FC,0X7D02271E);
	set_func_flags(0X7D0225FC,0x400);
	set_frame_size(0X7D0225FC, 0X28, 0, 0);
	add_func    (0X7D022720,0X7D022774);
	set_func_flags(0X7D022720,0x400);
	set_frame_size(0X7D022720, 0X28, 0, 0);
	add_func    (0X7D022774,0X7D022B02);
	set_func_flags(0X7D022774,0x400);
	SetType(0X7D022774, "CRYSError_t __cdecl DX_DH_GeneratePubPrv(struct CRYS_RND_Context_t *rndContext_ptr, uint8_t *Generator_ptr, uint16_t GeneratorSize, uint8_t *Prime_ptr, uint16_t PrimeSize, uint16_t L, uint8_t *Q_ptr, uint16_t QSize, enum CRYS_DH_OpMode_t DH_mode, struct CRYS_RSAUserPubKey_t *tmpPubKey_ptr, struct CRYS_RSAPrimeData_t *tmpPrimeData_ptr, uint8_t *ClientPrvKey_ptr, uint16_t *ClientPrvKeySize_ptr, uint8_t *ClientPub1_ptr, uint16_t *ClientPubSize_ptr);");
	set_frame_size(0X7D022774, 0X40, 0, 0);
	define_local_var(0X7D022774, 0X7D022B02, "[bp-0X40]", "ModulusSize");
	define_local_var(0X7D022774, 0X7D022B02, "[bp-0X29]", "CounterBuff2_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0]", "PrimeSize");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X4]", "L");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X8]", "Q_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0XC]", "QSize");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X10]", "DH_mode");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X14]", "tmpPubKey_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X18]", "tmpPrimeData_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X1C]", "ClientPrvKey_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X20]", "ClientPrvKeySize_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X24]", "ClientPub1_ptr");
	define_local_var(0X7D022774, 0X7D022B02, "[bp+0X28]", "ClientPubSize_ptr");
	add_func    (0X7D022B04,0X7D022C44);
	set_func_flags(0X7D022B04,0x400);
	SetType(0X7D022B04, "CRYSError_t __cdecl CRYS_DH_GetSecretKey(uint8_t *ClientPrvKey_ptr, size_t ClientPrvKeySize, uint8_t *ServerPubKey_ptr, size_t ServerPubKeySize, uint8_t *Prime_ptr, size_t PrimeSize, struct CRYS_DHUserPubKey_t *tmpPubKey_ptr, struct CRYS_DHPrimeData_t *tmpPrimeData_ptr, uint8_t *SecretKey_ptr, size_t *SecretKeySize_ptr);");
	set_frame_size(0X7D022B04, 0X28, 0, 0);
	define_local_var(0X7D022B04, 0X7D022C44, "[bp-0X28]", "ModulusSize");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp-0X19]", "CounterBuff1_ptr");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0]", "Modulus_ptr");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0X4]", "PrimeSize");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0X8]", "UserPubKey_ptr");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0XC]", "Exponent_ptr");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0X10]", "SecretKey_ptr");
	define_local_var(0X7D022B04, 0X7D022C44, "[bp+0X14]", "SecretKeySize_ptr");
	add_func    (0X7D022C44,0X7D022CFA);
	set_func_flags(0X7D022C44,0x400);
	SetType(0X7D022C44, "CRYSError_t __cdecl CC_DhX942GetSecretData(uint8_t *ClientPrvKey_ptr, size_t ClientPrvKeySize, uint8_t *ServerPubKey_ptr, size_t ServerPubKeySize, uint8_t *Prime_ptr, size_t PrimeSize, struct CRYS_DH_OtherInfo_t *otherInfo_ptr, int hashMode, int DerivFunc_mode, struct CRYS_DH_Temp_t *tmpBuff_ptr, uint8_t *SecretKeyingData_ptr, size_t SecretKeyingDataSize);");
	set_frame_size(0X7D022C44, 0X38, 0, 0);
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X38]", "Prime_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X34]", "PrimeSize");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X30]", "tmpPubKey_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X2C]", "tmpPrimeData_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X28]", "SecretKey_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X24]", "SecretKeySize_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp-0X1A]", "ZZSecretSize");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0X8]", "otherInfo_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0XC]", "hashMode");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0X10]", "DerivFunc_mode");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0X14]", "tmpBuff_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0X18]", "SecretKeyingData_ptr");
	define_local_var(0X7D022C44, 0X7D022CFA, "[bp+0X1C]", "SecretKeyingDataSize");
	add_func    (0X7D022D00,0X7D022E02);
	set_func_flags(0X7D022D00,0x400);
	SetType(0X7D022D00, "CRYSError_t __cdecl CC_DhX942HybridGetSecretData(CRYSError_t result, size_t ClientPrvKeySize1, uint8_t *ClientPrvKey_ptr2, size_t ClientPrvKeySize2, uint8_t *ServerPubKey_ptr1, size_t ServerPubKeySize1, uint8_t *ServerPubKey_ptr2, size_t ServerPubKeySize2, uint8_t *Prime_ptr, size_t PrimeSize, struct CRYS_DH_OtherInfo_t *otherInfo_ptr, int hashMode, int DerivFunc_mode, struct CRYS_DH_HybrTemp_t *tmpDhHybr_ptr, uint8_t *SecretKeyingData_ptr, size_t SecretKeyingDataSize);");
	set_frame_size(0X7D022D00, 0X50, 0, 0);
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X50]", "Prime_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X4C]", "PrimeSize");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X48]", "tmpPubKey_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X44]", "tmpPrimeData_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X40]", "SecretKey_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X3C]", "SecretKeySize_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp-0X34]", "ClientPrvKey_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0]", "ServerPubKey_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X4]", "ServerPubKeySize");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X8]", "ServerPubKey_ptr2");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0XC]", "ServerPubKeySize2");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X18]", "otherInfo_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X1C]", "hashMode");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X20]", "DerivFunc_mode");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X28]", "SecretKeyingData_ptr");
	define_local_var(0X7D022D00, 0X7D022E02, "[bp+0X2C]", "SecretKeyingDataSize");
	add_func    (0X7D022E08,0X7D023008);
	set_func_flags(0X7D022E08,0x400);
	SetType(0X7D022E08, "CRYSError_t __cdecl CRYS_DH_CheckPubKey(uint8_t *modP_ptr, uint32_t modPsizeBytes, uint8_t *orderQ_ptr, uint32_t orderQsizeBytes, uint8_t *pubKey_ptr, uint32_t pubKeySizeBytes, struct CRYS_DH_Temp_t *tempBuff_ptr);");
	set_frame_size(0X7D022E08, 0, 0, 0);
	define_local_var(0X7D022E08, 0X7D023008, "[bp+0]", "pubKey_ptr");
	define_local_var(0X7D022E08, 0X7D023008, "[bp+0X4]", "pubKeySizeBytes");
	define_local_var(0X7D022E08, 0X7D023008, "[bp+0X8]", "tempBuff_ptr");
	add_func    (0X7D023008,0X7D02308A);
	set_func_flags(0X7D023008,0x400);
	set_frame_size(0X7D023008, 0X20, 0, 0);
	add_func    (0X7D02308C,0X7D023304);
	set_func_flags(0X7D02308C,0x400);
	SetType(0X7D02308C, "CRYSError_t __cdecl CRYS_KDF_KeyDerivFunc(uint8_t *ZZSecret_ptr, uint32_t ZZSecretSize, struct CRYS_KDF_OtherInfo_t *OtherInfo_ptr, int KDFhashMode, int derivation_mode, uint8_t *KeyingData_ptr, uint32_t KeyingDataSizeBytes);");
	set_frame_size(0X7D02308C, 0X330, 0, 0);
	define_local_var(0X7D02308C, 0X7D023304, "[bp-0X328]", "num");
	define_local_var(0X7D02308C, 0X7D023304, "[bp-0X324]", "HashResultBuff");
	define_local_var(0X7D02308C, 0X7D023304, "[bp-0X320]", "OperationMode");
	define_local_var(0X7D02308C, 0X7D023304, "[bp-0X23C]", "ContextID_ptr");
	define_local_var(0X7D02308C, 0X7D023304, "[bp+0]", "derivation_mode");
	define_local_var(0X7D02308C, 0X7D023304, "[bp+0X4]", "KeyingData_ptr");
	define_local_var(0X7D02308C, 0X7D023304, "[bp+0X8]", "KeyingDataSizeBytes");
	add_func    (0X7D023304,0X7D0234BA);
	set_func_flags(0X7D023304,0x400);
	SetType(0X7D023304, "CRYSError_t __cdecl DX_ECPKI_BuildPublKey(const struct CRYS_ECPKI_Domain_t *pDomain, uint8_t *PublKeyIn_ptr, uint32_t PublKeySizeInBytes, enum EC_PublKeyCheckMode_t CheckMode, struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, struct CRYS_ECPKI_BUILD_TempData_t *pTempBuff);");
	set_frame_size(0X7D023304, 0X30, 0, 0);
	define_local_var(0X7D023304, 0X7D0234BA, "[bp-0X2C]", "CounterBuff1_ptr");
	define_local_var(0X7D023304, 0X7D0234BA, "[bp+0]", "pUserPublKey");
	define_local_var(0X7D023304, 0X7D0234BA, "[bp+0X4]", "pTempBuff");
	add_func    (0X7D0234BC,0X7D0235EC);
	set_func_flags(0X7D0234BC,0x400);
	SetType(0X7D0234BC, "CRYSError_t __cdecl CRYS_ECPKI_ExportPublKey(struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, enum CRYS_ECPKI_PointCompression_t compression, uint8_t *pExternPublKey, uint32_t *pPublKeySizeBytes);");
	set_frame_size(0X7D0234BC, 0X20, 0, 0);
	add_func    (0X7D0235EC,0X7D0236E8);
	set_func_flags(0X7D0235EC,0x400);
	SetType(0X7D0235EC, "CRYSError_t __cdecl CRYS_ECPKI_BuildPrivKey(const struct CRYS_ECPKI_Domain_t *pDomain, const uint8_t *pPrivKeyIn, uint32_t PrivKeySizeInBytes, struct CRYS_ECPKI_UserPrivKey_t *pUserPrivKey);");
	set_frame_size(0X7D0235EC, 0X30, 0, 0);
	define_local_var(0X7D0235EC, 0X7D0236E8, "[bp-0X30]", "fmt");
	add_func    (0X7D0236F0,0X7D0237A2);
	set_func_flags(0X7D0236F0,0x400);
	SetType(0X7D0236F0, "CRYSError_t __fastcall CRYS_ECDSA_VerifyInit(struct CRYS_ECDSA_VerifyUserContext_t *pVerifyUserContext, struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, enum CRYS_ECPKI_HASH_OpMode_t hashMode);");
	set_frame_size(0X7D0236F0, 0X18, 0, 0);
	add_func    (0X7D0237B0,0X7D023858);
	set_func_flags(0X7D0237B0,0x400);
	SetType(0X7D0237B0, "CRYSError_t __fastcall CRYS_ECDSA_VerifyUpdate(struct CRYS_ECDSA_VerifyUserContext_t *pVerifyUserContext, uint8_t *pMessageDataIn, uint32_t messageSizeInBytes);");
	set_frame_size(0X7D0237B0, 0X18, 0, 0);
	add_func    (0X7D023860,0X7D02397A);
	set_func_flags(0X7D023860,0x400);
	SetType(0X7D023860, "CRYSError_t __fastcall CRYS_ECDSA_VerifyFinish(struct CRYS_ECDSA_VerifyUserContext_t *pVerifyUserContext, uint8_t *pSignatureIn, uint32_t SignatureSizeBytes);");
	set_frame_size(0X7D023860, 0X38, 0, 0);
	define_local_var(0X7D023860, 0X7D02397A, "[bp-0X30]", "src_ptr");
	add_func    (0X7D02397C,0X7D0239B2);
	set_func_flags(0X7D02397C,0x400);
	SetType(0X7D02397C, "CRYSError_t __cdecl CRYS_ECDSA_Verify(struct CRYS_ECDSA_VerifyUserContext_t *pVerifyUserContext, struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, enum CRYS_ECPKI_HASH_OpMode_t hashMode, uint8_t *pSignatureIn, uint32_t SignatureSizeBytes, uint8_t *pMessageDataIn, uint32_t messageSizeInBytes);");
	set_frame_size(0X7D02397C, 0X18, 0, 0);
	define_local_var(0X7D02397C, 0X7D0239B2, "[bp+0]", "SignatureSizeBytes");
	define_local_var(0X7D02397C, 0X7D0239B2, "[bp+0X4]", "pMessageDataIn");
	define_local_var(0X7D02397C, 0X7D0239B2, "[bp+0X8]", "messageSizeInBytes");
	add_func    (0X7D0239B4,0X7D023A68);
	set_func_flags(0X7D0239B4,0x400);
	SetType(0X7D0239B4, "signed int __fastcall CRYS_ECDSA_SignInit(struct CRYS_ECDSA_SignUserContext_t *pSignUserContext, struct CRYS_ECPKI_UserPrivKey_t *pSignerPrivKey, enum CRYS_ECPKI_HASH_OpMode_t hashMode);");
	set_frame_size(0X7D0239B4, 0X18, 0, 0);
	add_func    (0X7D023A74,0X7D023B14);
	set_func_flags(0X7D023A74,0x400);
	SetType(0X7D023A74, "CRYSError_t __fastcall CRYS_ECDSA_SignUpdate(struct CRYS_ECDSA_SignUserContext_t *pSignUserContext, uint8_t *pMessageDataIn, uint32_t messageSizeInBytes);");
	set_frame_size(0X7D023A74, 0X18, 0, 0);
	add_func    (0X7D023B1C,0X7D023C98);
	set_func_flags(0X7D023B1C,0x400);
	SetType(0X7D023B1C, "CRYSError_t __fastcall DX_ECDSA_SignFinish(struct CRYS_ECDSA_SignUserContext_t *pSignUserContext, struct CRYS_RND_Context_t *pRndContext, uint8_t *pSignatureOut, uint32_t *pSignatureOutSize, unsigned int a5, int a6);");
	set_frame_size(0X7D023B1C, 0X40, 0, 0);
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp-0X40]", "ptr2");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp-0X38]", "a7");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp-0X34]", "a8");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp-0X30]", "pRndContext1");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp-0X2C]", "pSignatureOutSize1");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp+0]", "a5");
	define_local_var(0X7D023B1C, 0X7D023C98, "[bp+0X4]", "a6");
	add_func    (0X7D023C98,0X7D023CDE);
	set_func_flags(0X7D023C98,0x400);
	SetType(0X7D023C98, "CRYSError_t __cdecl CRYS_ECDSA_Sign(struct CRYS_RND_Context_t *pRndContext, struct CRYS_ECDSA_SignUserContext_t *pSignUserContext, struct CRYS_ECPKI_UserPrivKey_t *pSignerPrivKey, enum CRYS_ECPKI_HASH_OpMode_t hashMode, uint8_t *pMessageDataIn, uint32_t messageSizeInBytes, uint8_t *pSignatureOut, uint32_t *pSignatureOutSize);");
	set_frame_size(0X7D023C98, 0X20, 0, 0);
	define_local_var(0X7D023C98, 0X7D023CDE, "[bp+0]", "pMessageDataIn");
	define_local_var(0X7D023C98, 0X7D023CDE, "[bp+0X4]", "messageSizeInBytes");
	define_local_var(0X7D023C98, 0X7D023CDE, "[bp+0X8]", "pSignatureOut");
	define_local_var(0X7D023C98, 0X7D023CDE, "[bp+0XC]", "pSignatureOutSize");
	add_func    (0X7D023CE0,0X7D023DD4);
	set_func_flags(0X7D023CE0,0x400);
	SetType(0X7D023CE0, "CRYSError_t __cdecl CRYS_ECPKI_GenKeyPair(struct CRYS_RND_Context_t *pRndContext, const struct CRYS_ECPKI_Domain_t *pDomain, struct CRYS_ECPKI_UserPrivKey_t *pUserPrivKey, struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, struct CRYS_ECPKI_KG_TempData_t *pTempData, struct CRYS_ECPKI_KG_FipsContext_t *pFipsCtx);");
	set_frame_size(0X7D023CE0, 0, 0, 0);
	define_local_var(0X7D023CE0, 0X7D023DD4, "[bp+0]", "ptr1");
	define_local_var(0X7D023CE0, 0X7D023DD4, "[bp+0X4]", "pFipsCtx");
	add_func    (0X7D023DD4,0X7D023ED2);
	set_func_flags(0X7D023DD4,0x400);
	SetType(0X7D023DD4, "CRYSError_t __cdecl CRYS_ECDH_SVDP_DH(struct CRYS_ECPKI_UserPublKey_t *PartnerPublKey_ptr, struct CRYS_ECPKI_UserPrivKey_t *UserPrivKey_ptr, uint8_t *SharedSecretValue_ptr, uint32_t *SharedSecrValSize_ptr, struct CRYS_ECDH_TempData_t *TempBuff_ptr);");
	set_frame_size(0X7D023DD4, 0X20, 0, 0);
	define_local_var(0X7D023DD4, 0X7D023ED2, "[bp+0]", "TempBuff_ptr");
	add_func    (0X7D023ED4,0X7D023F9C);
	set_func_flags(0X7D023ED4,0x400);
	SetType(0X7D023ED4, "CRYSError_t __cdecl EcWrstGenKeyPair(const struct CRYS_ECPKI_Domain_t *pDomain, const uint32_t *ecX, const uint32_t *ecY, struct CRYS_ECPKI_UserPrivKey_t *pUserPrivKey, struct CRYS_ECPKI_UserPublKey_t *pUserPublKey, struct CRYS_ECPKI_BUILD_TempData_t *pTempBuff);");
	set_frame_size(0X7D023ED4, 0X30, 0, 0);
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp-0X30]", "inPointY");
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp-0X2C]", "outPointX");
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp-0X28]", "outPointY");
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp-0X24]", "tmpBuff");
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp+0]", "pUserPublKey");
	define_local_var(0X7D023ED4, 0X7D023F9C, "[bp+0X4]", "pTempBuff");
	add_func    (0X7D023F9C,0X7D023FBC);
	set_func_flags(0X7D023F9C,0x400);
	set_frame_size(0X7D023F9C, 0X8, 0, 0);
	add_func    (0X7D023FBC,0X7D024174);
	set_func_flags(0X7D023FBC,0x410);
	set_frame_size(0X7D023FBC, 0X2B4, 36, 0);
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X2B4]", "pDataOut");
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X2B0]", "dataOutBuffSize");
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X2A0]", "pDataIn");
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X29C]", "a3");
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X294]", "a1");
	define_local_var(0X7D023FBC, 0X7D024174, "[bp-0X280]", "destination");
	add_func    (0X7D024178,0X7D0241F2);
	set_func_flags(0X7D024178,0x400);
	set_frame_size(0X7D024178, 0X240, 0, 0);
	define_local_var(0X7D024178, 0X7D0241F2, "[bp-0X240]", "pDataOut");
	define_local_var(0X7D024178, 0X7D0241F2, "[bp-0X23C]", "dataOutBuffSize");
	define_local_var(0X7D024178, 0X7D0241F2, "[bp-0X234]", "a3");
	define_local_var(0X7D024178, 0X7D0241F2, "[bp-0X22C]", "pContext");
	add_func    (0X7D0241F4,0X7D0243B2);
	set_func_flags(0X7D0241F4,0x400);
	set_frame_size(0X7D0241F4, 0X58, 0, 0);
	add_func    (0X7D0243B4,0X7D0243D4);
	set_func_flags(0X7D0243B4,0x400);
	add_func    (0X7D0243D4,0X7D024684);
	set_func_flags(0X7D0243D4,0x400);
	SetType(0X7D0243D4, "CRYSError_t __cdecl CRYS_RND_GenerateVector(struct CRYS_RND_State_t *rndState_ptr, uint16_t outSizeBytes, uint8_t *out_ptr);");
	set_frame_size(0X7D0243D4, 0X258, 0, 0);
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X258]", "pDataOut");
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X254]", "dataOutBuffSize");
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X250]", "destination");
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X248]", "a2");
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X244]", "len");
	define_local_var(0X7D0243D4, 0X7D024684, "[bp-0X23C]", "a3");
	add_func    (0X7D02468C,0X7D0246D2);
	set_func_flags(0X7D02468C,0x400);
	SetType(0X7D02468C, "CRYSError_t __cdecl CRYS_RND_Instantiation(struct CRYS_RND_Context_t *rndContext_ptr, struct CRYS_RND_WorkBuff_t *rndWorkBuff_ptr);");
	set_frame_size(0X7D02468C, 0X10, 0, 0);
	add_func    (0X7D0246DC,0X7D0246F6);
	set_func_flags(0X7D0246DC,0x400);
	SetType(0X7D0246DC, "CRYSError_t __cdecl CRYS_RND_UnInstantiation(struct CRYS_RND_Context_t *rndContext_ptr);");
	set_frame_size(0X7D0246DC, 0X8, 0, 0);
	add_func    (0X7D0246F8,0X7D02473E);
	set_func_flags(0X7D0246F8,0x400);
	set_frame_size(0X7D0246F8, 0X10, 0, 0);
	add_func    (0X7D024748,0X7D0247D4);
	set_func_flags(0X7D024748,0x400);
	set_frame_size(0X7D024748, 0X20, 0, 0);
	add_func    (0X7D0247DC,0X7D0248DA);
	set_func_flags(0X7D0247DC,0x400);
	set_frame_size(0X7D0247DC, 0X30, 0, 0);
	define_local_var(0X7D0247DC, 0X7D0248DA, "[bp-0X2C]", "ptr2");
	define_local_var(0X7D0247DC, 0X7D0248DA, "[bp+0]", "len");
	add_func    (0X7D0248E4,0X7D0248F2);
	set_func_flags(0X7D0248E4,0x400);
	add_func    (0X7D0248F4,0X7D024AEC);
	set_func_flags(0X7D0248F4,0x400);
	SetType(0X7D0248F4, "CRYSError_t __cdecl CRYS_RND_GenerateVectorInRange(struct CRYS_RND_Context_t *rndContext_ptr, uint32_t rndSizeInBits, uint8_t *maxVect_ptr, uint8_t *rndVect_ptr);");
	set_frame_size(0X7D0248F4, 0X40, 0, 0);
	define_local_var(0X7D0248F4, 0X7D024AEC, "[bp-0X40]", "CounterSize");
	define_local_var(0X7D0248F4, 0X7D024AEC, "[bp-0X38]", "CounterBuff2_ptr");
	add_func    (0X7D024AEC,0X7D024B46);
	set_func_flags(0X7D024AEC,0x400);
	SetType(0X7D024AEC, "CRYSError_t __fastcall SaSi_RndGenerateWordsArrayInRange(struct CRYS_RND_Context_t *a1, uint32_t a2, void *a3, uint8_t *a4, uint8_t *ptr1);");
	set_frame_size(0X7D024AEC, 0X18, 0, 0);
	define_local_var(0X7D024AEC, 0X7D024B46, "[bp+0]", "ptr1");
	add_func    (0X7D024B48,0X7D024B86);
	set_func_flags(0X7D024B48,0x400);
	set_frame_size(0X7D024B48, 0X14, 0, 0);
	add_func    (0X7D024B88,0X7D024BB0);
	set_func_flags(0X7D024B88,0x400);
	set_frame_size(0X7D024B88, 0XC, 0, 0);
	add_func    (0X7D024BB0,0X7D025058);
	set_func_flags(0X7D024BB0,0x400);
	set_frame_size(0X7D024BB0, 0X58, 0, 0);
	add_func    (0X7D025058,0X7D02508C);
	set_func_flags(0X7D025058,0x400);
	SetType(0X7D025058, "CRYSError_t __cdecl LLF_RND_WaitRngInterrupt(uint32_t *isr_ptr);");
	set_frame_size(0X7D025058, 0X10, 0, 0);
	add_func    (0X7D025094,0X7D0250D0);
	set_func_flags(0X7D025094,0x400);
	add_func    (0X7D0250D0,0X7D0250F2);
	set_func_flags(0X7D0250D0,0x400);
	add_func    (0X7D025138,0X7D025164);
	set_func_flags(0X7D025138,0x400);
	set_frame_size(0X7D025138, 0X4, 0, 0);
	add_func    (0X7D02516C,0X7D0251D6);
	set_func_flags(0X7D02516C,0x400);
	set_frame_size(0X7D02516C, 0X18, 0, 0);
	add_func    (0X7D0251D8,0X7D025202);
	set_func_flags(0X7D0251D8,0x400);
	set_frame_size(0X7D0251D8, 0X10, 0, 0);
	add_func    (0X7D025204,0X7D0252C6);
	set_func_flags(0X7D025204,0x400);
	set_frame_size(0X7D025204, 0X60, 0, 0);
	define_local_var(0X7D025204, 0X7D0252C6, "[bp-0X60]", "a5");
	define_local_var(0X7D025204, 0X7D0252C6, "[bp-0X54]", "ptr2");
	define_local_var(0X7D025204, 0X7D0252C6, "[bp-0X48]", "outbuf");
	add_func    (0X7D0252D0,0X7D025360);
	set_func_flags(0X7D0252D0,0x400);
	set_frame_size(0X7D0252D0, 0X18, 0, 0);
	add_func    (0X7D025368,0X7D025478);
	set_func_flags(0X7D025368,0x400);
	set_frame_size(0X7D025368, 0X20, 0, 0);
	add_func    (0X7D025480,0X7D02565A);
	set_func_flags(0X7D025480,0x400);
	set_frame_size(0X7D025480, 0X70, 0, 0);
	define_local_var(0X7D025480, 0X7D02565A, "[bp-0X64]", "source");
	add_func    (0X7D025664,0X7D025668);
	set_func_flags(0X7D025664,0x400);
	add_func    (0X7D025668,0X7D025714);
	set_func_flags(0X7D025668,0x400);
	set_frame_size(0X7D025668, 0X30, 0, 0);
	add_func    (0X7D02571C,0X7D0257CC);
	set_func_flags(0X7D02571C,0x400);
	set_frame_size(0X7D02571C, 0X28, 0, 0);
	add_func    (0X7D0257D8,0X7D025872);
	set_func_flags(0X7D0257D8,0x400);
	set_frame_size(0X7D0257D8, 0X38, 0, 0);
	add_func    (0X7D025880,0X7D025906);
	set_func_flags(0X7D025880,0x400);
	set_frame_size(0X7D025880, 0X38, 0, 0);
	add_func    (0X7D025914,0X7D025954);
	set_func_flags(0X7D025914,0x400);
	set_frame_size(0X7D025914, 0X10, 0, 0);
	add_func    (0X7D02595C,0X7D02598C);
	set_func_flags(0X7D02595C,0x400);
	set_frame_size(0X7D02595C, 0X18, 0, 0);
	add_func    (0X7D025994,0X7D0259BE);
	set_func_flags(0X7D025994,0x400);
	set_frame_size(0X7D025994, 0X8, 0, 0);
	add_func    (0X7D0259C8,0X7D0259EA);
	set_func_flags(0X7D0259C8,0x400);
	set_frame_size(0X7D0259C8, 0X10, 0, 0);
	add_func    (0X7D0259EC,0X7D025A06);
	set_func_flags(0X7D0259EC,0x400);
	add_func    (0X7D025A08,0X7D025AE2);
	set_func_flags(0X7D025A08,0x400);
	set_frame_size(0X7D025A08, 0X38, 0, 0);
	add_func    (0X7D025AF0,0X7D025B52);
	set_func_flags(0X7D025AF0,0x400);
	add_func    (0X7D025B54,0X7D025F20);
	set_func_flags(0X7D025B54,0x400);
	set_frame_size(0X7D025B54, 0X90, 0, 0);
	add_func    (0X7D025F2C,0X7D025F7E);
	set_func_flags(0X7D025F2C,0x400);
	set_frame_size(0X7D025F2C, 0X18, 0, 0);
	add_func    (0X7D025F88,0X7D026042);
	set_func_flags(0X7D025F88,0x400);
	set_frame_size(0X7D025F88, 0X18, 0, 0);
	add_func    (0X7D02604C,0X7D0262F6);
	set_func_flags(0X7D02604C,0x400);
	set_frame_size(0X7D02604C, 0X90, 0, 0);
	add_func    (0X7D026304,0X7D0264CA);
	set_func_flags(0X7D026304,0x400);
	set_frame_size(0X7D026304, 0X58, 0, 0);
	add_func    (0X7D0264D8,0X7D026546);
	set_func_flags(0X7D0264D8,0x400);
	set_frame_size(0X7D0264D8, 0X28, 0, 0);
	add_func    (0X7D026554,0X7D026654);
	set_func_flags(0X7D026554,0x400);
	set_frame_size(0X7D026554, 0X30, 0, 0);
	add_func    (0X7D026660,0X7D0266C8);
	set_func_flags(0X7D026660,0x400);
	set_frame_size(0X7D026660, 0X28, 0, 0);
	add_func    (0X7D0266D0,0X7D0266E2);
	set_func_flags(0X7D0266D0,0x400);
	add_func    (0X7D0266EC,0X7D02678A);
	set_func_flags(0X7D0266EC,0x400);
	set_frame_size(0X7D0266EC, 0X28, 0, 0);
	add_func    (0X7D026798,0X7D026810);
	set_func_flags(0X7D026798,0x400);
	set_frame_size(0X7D026798, 0X20, 0, 0);
	add_func    (0X7D026818,0X7D026916);
	set_func_flags(0X7D026818,0x400);
	set_frame_size(0X7D026818, 0X40, 0, 0);
	add_func    (0X7D026924,0X7D026A28);
	set_func_flags(0X7D026924,0x400);
	set_frame_size(0X7D026924, 0X30, 0, 0);
	add_func    (0X7D026A30,0X7D026D48);
	set_func_flags(0X7D026A30,0x400);
	set_frame_size(0X7D026A30, 0XB8, 0, 0);
	add_func    (0X7D026D50,0X7D026E04);
	set_func_flags(0X7D026D50,0x400);
	set_frame_size(0X7D026D50, 0X38, 0, 0);
	add_func    (0X7D026E2C,0X7D02711A);
	set_func_flags(0X7D026E2C,0x400);
	set_frame_size(0X7D026E2C, 0XB8, 0, 0);
	define_local_var(0X7D026E2C, 0X7D02711A, "[bp-0XB8]", "ptr1");
	define_local_var(0X7D026E2C, 0X7D02711A, "[bp-0XAC]", "a3");
	define_local_var(0X7D026E2C, 0X7D02711A, "[bp-0X9C]", "a1");
	define_local_var(0X7D026E2C, 0X7D02711A, "[bp-0X98]", "a2");
	add_func    (0X7D027124,0X7D02749E);
	set_func_flags(0X7D027124,0x400);
	set_frame_size(0X7D027124, 0XE8, 0, 0);
	define_local_var(0X7D027124, 0X7D02749E, "[bp-0XA0]", "pMutexId");
	add_func    (0X7D0274B8,0X7D027B2E);
	set_func_flags(0X7D0274B8,0x400);
	set_frame_size(0X7D0274B8, 0X150, 0, 0);
	add_func    (0X7D027B3C,0X7D0283A0);
	set_func_flags(0X7D027B3C,0x400);
	set_frame_size(0X7D027B3C, 0X198, 0, 0);
	define_local_var(0X7D027B3C, 0X7D0283A0, "[bp-0X198]", "a1");
	define_local_var(0X7D027B3C, 0X7D0283A0, "[bp-0X194]", "a2");
	add_func    (0X7D0283BC,0X7D028958);
	set_func_flags(0X7D0283BC,0x400);
	set_frame_size(0X7D0283BC, 0XE0, 0, 0);
	add_func    (0X7D028964,0X7D028B68);
	set_func_flags(0X7D028964,0x400);
	set_frame_size(0X7D028964, 0X88, 0, 0);
	add_func    (0X7D028B7C,0X7D029036);
	set_func_flags(0X7D028B7C,0x400);
	set_frame_size(0X7D028B7C, 0XD8, 0, 0);
	define_local_var(0X7D028B7C, 0X7D029036, "[bp-0XB8]", "ptr2");
	define_local_var(0X7D028B7C, 0X7D029036, "[bp-0XA8]", "ptr1");
	add_func    (0X7D029044,0X7D029092);
	set_func_flags(0X7D029044,0x400);
	set_frame_size(0X7D029044, 0X10, 0, 0);
	add_func    (0X7D029094,0X7D029280);
	set_func_flags(0X7D029094,0x400);
	SetType(0X7D029094, "CRYSError_t __cdecl EcWrstInitPubKey(uint32_t *pPublKey, uint8_t pointCtl);");
	set_frame_size(0X7D029094, 0X50, 0, 0);
	add_func    (0X7D02928C,0X7D0292F6);
	set_func_flags(0X7D02928C,0x400);
	SetType(0X7D02928C, "int __fastcall EcWrstFullCheckPublKey(uint32_t *pPublKey, struct CRYS_ECPKI_BUILD_TempData_t *pTempBuff);");
	set_frame_size(0X7D02928C, 0X28, 0, 0);
	define_local_var(0X7D02928C, 0X7D0292F6, "[bp-0X28]", "inPointY");
	define_local_var(0X7D02928C, 0X7D0292F6, "[bp-0X24]", "outPointX");
	define_local_var(0X7D02928C, 0X7D0292F6, "[bp-0X20]", "outPointY");
	define_local_var(0X7D02928C, 0X7D0292F6, "[bp-0X1C]", "tmpBuff");
	add_func    (0X7D0292F8,0X7D02937E);
	set_func_flags(0X7D0292F8,0x400);
	SetType(0X7D0292F8, "CRYSError_t __fastcall EcWrstDhDeriveSharedSecret(uint32_t *PublKeyDbBuff_ptr, uint32_t *pPrivKeyDbBuff, uint8_t *SharedSecretValue_ptr, struct CRYS_ECDH_TempData_t *TempBuff_ptr);");
	set_frame_size(0X7D0292F8, 0X30, 0, 0);
	define_local_var(0X7D0292F8, 0X7D02937E, "[bp-0X30]", "inPointY");
	define_local_var(0X7D0292F8, 0X7D02937E, "[bp-0X2C]", "outPointX");
	define_local_var(0X7D0292F8, 0X7D02937E, "[bp-0X28]", "outPointY");
	define_local_var(0X7D0292F8, 0X7D02937E, "[bp-0X24]", "tmpBuff");
	add_func    (0X7D029380,0X7D0294A6);
	set_func_flags(0X7D029380,0x400);
	set_frame_size(0X7D029380, 0X40, 0, 0);
	add_func    (0X7D0294B0,0X7D0296B2);
	set_func_flags(0X7D0294B0,0x400);
	set_frame_size(0X7D0294B0, 0X30, 0, 0);
	define_local_var(0X7D0294B0, 0X7D0296B2, "[bp-0X30]", "in8_ptr");
	define_local_var(0X7D0294B0, 0X7D0296B2, "[bp-0X2C]", "CounterSizeWords");
	define_local_var(0X7D0294B0, 0X7D0296B2, "[bp+0XC]", "sizeInBytes");
	add_func    (0X7D0296B4,0X7D0296CC);
	set_func_flags(0X7D0296B4,0x400);
	SetType(0X7D0296B4, "const struct CRYS_ECPKI_Domain_t *__cdecl CRYS_ECPKI_GetEcDomain(enum CRYS_ECPKI_DomainID_t domainId);");
	add_func    (0X7D0296D4,0X7D029A16);
	set_func_flags(0X7D0296D4,0x400);
	SetType(0X7D0296D4, "signed int __fastcall EcWrstDsaSign(struct CRYS_RND_Context_t *pRndContext, _DWORD *a2, int a3, int a4, void *ptr2, int a6, int a7, int a8);");
	set_frame_size(0X7D0296D4, 0XC0, 0, 0);
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XC0]", "inPointY");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XBC]", "outPointX");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XB8]", "outPointY");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XB4]", "tmpBuff");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XA8]", "ptr1");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0XA0]", "len");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0X9C]", "pDomain");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0X98]", "scalSizeInWords");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp-0X6C]", "rndContext_ptr");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp+0]", "ptr2");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp+0X4]", "a6");
	define_local_var(0X7D0296D4, 0X7D029A16, "[bp+0X8]", "a7");
	add_func    (0X7D029A24,0X7D029BD4);
	set_func_flags(0X7D029A24,0x400);
	set_frame_size(0X7D029A24, 0X68, 0, 0);
	add_func    (0X7D029BE0,0X7D029C26);
	set_func_flags(0X7D029BE0,0x400);
	add_func    (0X7D029C28,0X7D029D24);
	set_func_flags(0X7D029C28,0x400);
	set_frame_size(0X7D029C28, 0X38, 0, 0);
	add_func    (0X7D029D24,0X7D029E62);
	set_func_flags(0X7D029D24,0x400);
	SetType(0X7D029D24, "CRYSError_t __cdecl ScalarMultAff(const struct CRYS_ECPKI_Domain_t *domain, uint32_t *bxr, uint32_t *byr, const uint32_t *k, uint32_t kSizeBit, const uint32_t *bxp, const uint32_t *byp, uint32_t *tmpBuff);");
	set_frame_size(0X7D029D24, 0X58, 0, 0);
	define_local_var(0X7D029D24, 0X7D029E62, "[bp+0]", "kSizeBit");
	define_local_var(0X7D029D24, 0X7D029E62, "[bp+0X4]", "bxp");
	define_local_var(0X7D029D24, 0X7D029E62, "[bp+0X8]", "byp");
	define_local_var(0X7D029D24, 0X7D029E62, "[bp+0XC]", "ptr1");
	add_func    (0X7D029E6C,0X7D029ED8);
	set_func_flags(0X7D029E6C,0x400);
	SetType(0X7D029E6C, "CRYSError_t __cdecl PkaEcWrstScalarMult(const struct CRYS_ECPKI_Domain_t *pDomain, const uint32_t *scalar, uint32_t scalSizeInWords, const uint32_t *inPointX, const uint32_t *inPointY, uint32_t *outPointX, uint32_t *outPointY, uint32_t *tmpBuff);");
	set_frame_size(0X7D029E6C, 0X30, 0, 0);
	define_local_var(0X7D029E6C, 0X7D029ED8, "[bp-0X2C]", "byp");
	define_local_var(0X7D029E6C, 0X7D029ED8, "[bp+0]", "inPointY");
	define_local_var(0X7D029E6C, 0X7D029ED8, "[bp+0X4]", "outPointX");
	define_local_var(0X7D029E6C, 0X7D029ED8, "[bp+0X8]", "outPointY");
	define_local_var(0X7D029E6C, 0X7D029ED8, "[bp+0XC]", "tmpBuff");
	add_func    (0X7D029ED8,0X7D029F1C);
	set_func_flags(0X7D029ED8,0x400);
	SetType(0X7D029ED8, "unsigned int __fastcall crys_buffer_aligned_len(uint32_t *userContext_buff, int a2, unsigned int a3);");
	set_frame_size(0X7D029ED8, 0X4, 0, 0);
	add_func    (0X7D029F1C,0X7D029F52);
	set_func_flags(0X7D029F1C,0x400);
	SetType(0X7D029F1C, "uint32_t *__cdecl crys_init_user_context(uint32_t *userContext_buff, unsigned int a2, unsigned int a3);");
	set_frame_size(0X7D029F1C, 0X10, 0, 0);
	add_func    (0X7D029F54,0X7D029F8C);
	set_func_flags(0X7D029F54,0x400);
	SetType(0X7D029F54, "uint32_t *__cdecl crys_align_user_context(uint32_t *userContext_buff);");
	set_frame_size(0X7D029F54, 0X18, 0, 0);
	add_func    (0X7D029F8C,0X7D029FC6);
	set_func_flags(0X7D029F8C,0x400);
	set_frame_size(0X7D029F8C, 0X8, 0, 0);
	add_func    (0X7D029FD0,0X7D029FF6);
	set_func_flags(0X7D029FD0,0x400);
	set_frame_size(0X7D029FD0, 0X8, 0, 0);
	add_func    (0X7D02A000,0X7D02A03A);
	set_func_flags(0X7D02A000,0x400);
	set_frame_size(0X7D02A000, 0X10, 0, 0);
	add_func    (0X7D02A044,0X7D02A098);
	set_func_flags(0X7D02A044,0x400);
	set_frame_size(0X7D02A044, 0X10, 0, 0);
	add_func    (0X7D02A0A0,0X7D02A0DE);
	set_func_flags(0X7D02A0A0,0x400);
	set_frame_size(0X7D02A0A0, 0X10, 0, 0);
	add_func    (0X7D02A0E8,0X7D02A148);
	set_func_flags(0X7D02A0E8,0x400);
	set_frame_size(0X7D02A0E8, 0X30, 0, 0);
	add_func    (0X7D02A148,0X7D02A202);
	set_func_flags(0X7D02A148,0x400);
	set_frame_size(0X7D02A148, 0X40, 0, 0);
	add_func    (0X7D02A204,0X7D02A372);
	set_func_flags(0X7D02A204,0x400);
	set_frame_size(0X7D02A204, 0X40, 0, 0);
	add_func    (0X7D02A374,0X7D02A4A0);
	set_func_flags(0X7D02A374,0x400);
	set_frame_size(0X7D02A374, 0X30, 0, 0);
	add_func    (0X7D02A4A0,0X7D02A7B0);
	set_func_flags(0X7D02A4A0,0x400);
	set_frame_size(0X7D02A4A0, 0X58, 0, 0);
	add_func    (0X7D02A7B0,0X7D02A914);
	set_func_flags(0X7D02A7B0,0x400);
	set_frame_size(0X7D02A7B0, 0X50, 0, 0);
	add_func    (0X7D02A91C,0X7D02AC12);
	set_func_flags(0X7D02A91C,0x400);
	set_frame_size(0X7D02A91C, 0X68, 0, 0);
	add_func    (0X7D02AC14,0X7D02AF32);
	set_func_flags(0X7D02AC14,0x400);
	set_frame_size(0X7D02AC14, 0X68, 0, 0);
	add_func    (0X7D02AF34,0X7D02AF5C);
	set_func_flags(0X7D02AF34,0x400);
	set_frame_size(0X7D02AF34, 0X4, 0, 0);
	add_func    (0X7D02AF64,0X7D02AF8A);
	set_func_flags(0X7D02AF64,0x400);
	set_frame_size(0X7D02AF64, 0X4, 0, 0);
	add_func    (0X7D02AF94,0X7D02AFBA);
	set_func_flags(0X7D02AF94,0x400);
	set_frame_size(0X7D02AF94, 0X4, 0, 0);
	add_func    (0X7D02AFC4,0X7D02AFE8);
	set_func_flags(0X7D02AFC4,0x400);
	add_func    (0X7D02AFE8,0X7D02B13C);
	set_func_flags(0X7D02AFE8,0x400);
	set_frame_size(0X7D02AFE8, 0X60, 0, 0);
	add_func    (0X7D02B13C,0X7D02B1D0);
	set_func_flags(0X7D02B13C,0x400);
	set_frame_size(0X7D02B13C, 0X38, 0, 0);
	add_func    (0X7D02B1D0,0X7D02B274);
	set_func_flags(0X7D02B1D0,0x400);
	set_frame_size(0X7D02B1D0, 0X18, 0, 0);
	add_func    (0X7D02B290,0X7D02B366);
	set_func_flags(0X7D02B290,0x400);
	set_frame_size(0X7D02B290, 0X48, 0, 0);
	add_func    (0X7D02B368,0X7D02B4E2);
	set_func_flags(0X7D02B368,0x400);
	set_frame_size(0X7D02B368, 0X58, 0, 0);
	add_func    (0X7D02B4E4,0X7D02B6A2);
	set_func_flags(0X7D02B4E4,0x400);
	set_frame_size(0X7D02B4E4, 0X40, 0, 0);
	add_func    (0X7D02B6C0,0X7D02B782);
	set_func_flags(0X7D02B6C0,0x400);
	set_frame_size(0X7D02B6C0, 0XB8, 0, 0);
	add_func    (0X7D02B784,0X7D02B7E2);
	set_func_flags(0X7D02B784,0x400);
	set_frame_size(0X7D02B784, 0X38, 0, 0);
	add_func    (0X7D02B7E4,0X7D02B968);
	set_func_flags(0X7D02B7E4,0x410);
	set_frame_size(0X7D02B7E4, 0X44, 36, 0);
	add_func    (0X7D02B968,0X7D02BA1E);
	set_func_flags(0X7D02B968,0x400);
	set_frame_size(0X7D02B968, 0X38, 0, 0);
	add_func    (0X7D02BA20,0X7D02BA5C);
	set_func_flags(0X7D02BA20,0x400);
	set_frame_size(0X7D02BA20, 0X28, 0, 0);
	add_func    (0X7D02BA5C,0X7D02BAC0);
	set_func_flags(0X7D02BA5C,0x400);
	set_frame_size(0X7D02BA5C, 0X28, 0, 0);
	add_func    (0X7D02BAC0,0X7D02BC96);
	set_func_flags(0X7D02BAC0,0x400);
	set_frame_size(0X7D02BAC0, 0X58, 0, 0);
	add_func    (0X7D02BC98,0X7D02C18E);
	set_func_flags(0X7D02BC98,0x400);
	set_frame_size(0X7D02BC98, 0X88, 0, 0);
	add_func    (0X7D02C190,0X7D02C2D6);
	set_func_flags(0X7D02C190,0x400);
	set_frame_size(0X7D02C190, 0X48, 0, 0);
	add_func    (0X7D02C2D8,0X7D02C2F4);
	set_func_flags(0X7D02C2D8,0x400);
	set_frame_size(0X7D02C2D8, 0X10, 0, 0);
	add_func    (0X7D02C2F4,0X7D02C358);
	set_func_flags(0X7D02C2F4,0x400);
	set_frame_size(0X7D02C2F4, 0X30, 0, 0);
	add_func    (0X7D02C358,0X7D02C490);
	set_func_flags(0X7D02C358,0x400);
	SetType(0X7D02C358, "int __cdecl TEE_CryptoCell_DeriveBlock(unsigned int kind1, uint32_t *a2, uint8_t *kinbuf, int kinbuf_len, uint8_t *outbuf);");
	set_frame_size(0X7D02C358, 0X230, 0, 0);
	define_local_var(0X7D02C358, 0X7D02C490, "[bp-0X22C]", "userContext_buff");
	define_local_var(0X7D02C358, 0X7D02C490, "[bp+0]", "a3");
	add_func    (0X7D02C498,0X7D02C51A);
	set_func_flags(0X7D02C498,0x400);
	SetType(0X7D02C498, "void __cdecl CRYS_COMMON_IncMsbUnsignedCounter(uint32_t *CounterBuff_ptr, uint32_t Val, uint32_t CounterSize);");
	set_frame_size(0X7D02C498, 0X14, 0, 0);
	add_func    (0X7D02C51C,0X7D02C53A);
	set_func_flags(0X7D02C51C,0x400);
	SetType(0X7D02C51C, "uint32_t __cdecl CRYS_COMMON_IncLsbUnsignedCounter(uint32_t *CounterBuff_ptr, uint32_t Val, uint32_t CounterSize);");
	add_func    (0X7D02C53C,0X7D02C566);
	set_func_flags(0X7D02C53C,0x400);
	SetType(0X7D02C53C, "void __cdecl CRYS_COMMON_DecrLsbUnsignedCounter(uint32_t *CounterBuff_ptr, uint32_t Val, uint32_t CounterSizeInWords);");
	set_frame_size(0X7D02C53C, 0X4, 0, 0);
	add_func    (0X7D02C568,0X7D02C602);
	set_func_flags(0X7D02C568,0x400);
	SetType(0X7D02C568, "int __cdecl CRYS_COMMON_CmpMsbUnsignedCounters(const uint8_t *CounterBuff1_ptr, uint32_t Counter1Size, const uint8_t *CounterBuff2_ptr, uint32_t Counter2Size);");
	set_frame_size(0X7D02C568, 0X10, 0, 0);
	add_func    (0X7D02C604,0X7D02C6AE);
	set_func_flags(0X7D02C604,0x400);
	SetType(0X7D02C604, "int __cdecl CRYS_COMMON_CmpLsbUnsignedCounters(const uint8_t *CounterBuff1_ptr, size_t Counter1Size, const uint8_t *CounterBuff2_ptr, size_t Counter2Size);");
	set_frame_size(0X7D02C604, 0X10, 0, 0);
	add_func    (0X7D02C6B0,0X7D02C764);
	set_func_flags(0X7D02C6B0,0x400);
	SetType(0X7D02C6B0, "int __cdecl CRYS_COMMON_CmpLsWordsUnsignedCounters(const uint32_t *CounterBuff1_ptr, uint32_t Counter1SizeWords, const uint32_t *CounterBuff2_ptr, uint32_t Counter2SizeWords);");
	set_frame_size(0X7D02C6B0, 0X10, 0, 0);
	add_func    (0X7D02C764,0X7D02C7A0);
	set_func_flags(0X7D02C764,0x400);
	SetType(0X7D02C764, "uint32_t __cdecl CRYS_COMMON_GetBytesCounterEffectiveSizeInBits(const uint8_t *CounterBuff_ptr, uint32_t CounterSize);");
	add_func    (0X7D02C7A0,0X7D02C7F6);
	set_func_flags(0X7D02C7A0,0x400);
	SetType(0X7D02C7A0, "uint32_t __cdecl CRYS_COMMON_GetWordsCounterEffectiveSizeInBits(const uint32_t *CounterBuff_ptr, uint32_t CounterSizeWords);");
	set_frame_size(0X7D02C7A0, 0X4, 0, 0);
	add_func    (0X7D02C7F8,0X7D02C83E);
	set_func_flags(0X7D02C7F8,0x400);
	add_func    (0X7D02C840,0X7D02C884);
	set_func_flags(0X7D02C840,0x400);
	add_func    (0X7D02C884,0X7D02C8C8);
	set_func_flags(0X7D02C884,0x400);
	add_func    (0X7D02C8C8,0X7D02C918);
	set_func_flags(0X7D02C8C8,0x400);
	set_frame_size(0X7D02C8C8, 0X18, 0, 0);
	add_func    (0X7D02C918,0X7D02C954);
	set_func_flags(0X7D02C918,0x400);
	set_frame_size(0X7D02C918, 0X10, 0, 0);
	add_func    (0X7D02C954,0X7D02C9AC);
	set_func_flags(0X7D02C954,0x400);
	SetType(0X7D02C954, "uint8_t __cdecl CRYS_COMMON_SubtractMSBUint8Arrays(uint8_t *A_ptr, uint32_t sizeA, uint8_t *B_ptr, uint32_t sizeB, uint8_t *Res_ptr);");
	set_frame_size(0X7D02C954, 0X14, 0, 0);
	define_local_var(0X7D02C954, 0X7D02C9AC, "[bp+0]", "Res_ptr");
	add_func    (0X7D02C9AC,0X7D02CA3C);
	set_func_flags(0X7D02C9AC,0x400);
	set_frame_size(0X7D02C9AC, 0X78, 0, 0);
	define_local_var(0X7D02C9AC, 0X7D02CA3C, "[bp-0X74]", "len");
	define_local_var(0X7D02C9AC, 0X7D02CA3C, "[bp-0X6C]", "source");
	define_local_var(0X7D02C9AC, 0X7D02CA3C, "[bp+0X4]", "OperationMode");
	define_local_var(0X7D02C9AC, 0X7D02CA3C, "[bp+0X8]", "ptr2");
	define_local_var(0X7D02C9AC, 0X7D02CA3C, "[bp+0XC]", "ptr1");
	add_func    (0X7D02CA3C,0X7D02CC60);
	set_func_flags(0X7D02CA3C,0x400);
	set_frame_size(0X7D02CA3C, 0X50, 0, 0);
	define_local_var(0X7D02CA3C, 0X7D02CC60, "[bp-0X3C]", "OperationMode");
	define_local_var(0X7D02CA3C, 0X7D02CC60, "[bp-0X38]", "ptr2");
	define_local_var(0X7D02CA3C, 0X7D02CC60, "[bp-0X2C]", "ContextID_ptr");
	define_local_var(0X7D02CA3C, 0X7D02CC60, "[bp+0X4]", "DataIn_ptr");
	define_local_var(0X7D02CA3C, 0X7D02CC60, "[bp+0X8]", "DataSize");
	add_func    (0X7D02CC60,0X7D02CE7E);
	set_func_flags(0X7D02CC60,0x400);
	set_frame_size(0X7D02CC60, 0X48, 0, 0);
	define_local_var(0X7D02CC60, 0X7D02CE7E, "[bp-0X34]", "m1");
	define_local_var(0X7D02CC60, 0X7D02CE7E, "[bp-0X2C]", "ContextID_ptr");
	define_local_var(0X7D02CC60, 0X7D02CE7E, "[bp+0]", "DataIn_ptr");
	define_local_var(0X7D02CC60, 0X7D02CE7E, "[bp+0X4]", "DataSize");
	define_local_var(0X7D02CC60, 0X7D02CE7E, "[bp+0XC]", "ptr1");
	add_func    (0X7D02CE80,0X7D02D038);
	set_func_flags(0X7D02CE80,0x400);
	set_frame_size(0X7D02CE80, 0X70, 0, 0);
	define_local_var(0X7D02CE80, 0X7D02D038, "[bp-0X60]", "destination");
	add_func    (0X7D02D038,0X7D02D1F8);
	set_func_flags(0X7D02D038,0x400);
	set_frame_size(0X7D02D038, 0X40, 0, 0);
	define_local_var(0X7D02D038, 0X7D02D1F8, "[bp-0X30]", "ptr2");
	add_func    (0X7D02D1F8,0X7D02D1FA);
	set_func_flags(0X7D02D1F8,0x400);
	add_func    (0X7D02D1FC,0X7D02D44A);
	set_func_flags(0X7D02D1FC,0x400);
	set_frame_size(0X7D02D1FC, 0X80, 0, 0);
	add_func    (0X7D02D458,0X7D02DADA);
	set_func_flags(0X7D02D458,0x400);
	SetType(0X7D02D458, "bool PkiIsModSquareRootExists(void);");
	set_frame_size(0X7D02D458, 0X128, 0, 0);
	add_func    (0X7D02DAE8,0X7D02DD46);
	set_func_flags(0X7D02DAE8,0x400);
	set_frame_size(0X7D02DAE8, 0X80, 0, 0);
	add_func    (0X7D02DD50,0X7D02DF52);
	set_func_flags(0X7D02DD50,0x400);
	set_frame_size(0X7D02DD50, 0X68, 0, 0);
	add_func    (0X7D02DF5C,0X7D02E1A4);
	set_func_flags(0X7D02DF5C,0x400);
	set_frame_size(0X7D02DF5C, 0X88, 0, 0);
	add_func    (0X7D02E1AC,0X7D02E272);
	set_func_flags(0X7D02E1AC,0x400);
	set_frame_size(0X7D02E1AC, 0X30, 0, 0);
	add_func    (0X7D02E27C,0X7D02E3F4);
	set_func_flags(0X7D02E27C,0x400);
	set_frame_size(0X7D02E27C, 0X50, 0, 0);
	add_func    (0X7D02E3FC,0X7D02E6E8);
	set_func_flags(0X7D02E3FC,0x400);
	set_frame_size(0X7D02E3FC, 0X98, 0, 0);
	add_func    (0X7D02E6F0,0X7D02E9E8);
	set_func_flags(0X7D02E6F0,0x400);
	set_frame_size(0X7D02E6F0, 0XA8, 0, 0);
	add_func    (0X7D02EAF0,0X7D02EAF6);
	set_func_flags(0X7D02EAF0,0x400);
	add_func    (0X7D02EAF8,0X7D02EAFC);
	set_func_flags(0X7D02EAF8,0x400);
	add_func    (0X7D02EAFC,0X7D02EB98);
	set_func_flags(0X7D02EAFC,0x400);
	add_func    (0X7D02EBA4,0X7D02EBC4);
	set_func_flags(0X7D02EBA4,0x400);
	SetType(0X7D02EBA4, "uint32_t __usercall crys_unknfuncEBA4@<R1>(int a1@<R0>, int a2@<R1>);");
	set_func_cmt(0X7D02EBA4,	"this seem to be returning values in both r0 and r1; but callers only care for r1", 1);
	add_func    (0X7D02EBC8,0X7D02EC72);
	set_func_flags(0X7D02EBC8,0x400);
	SetType(0X7D02EBC8, "void __cdecl user_ta_ctx_destroy(struct tee_ta_ctx *ctx);");
	set_frame_size(0X7D02EBC8, 0X10, 0, 0);
	add_func    (0X7D02EC72,0X7D02EC96);
	set_func_flags(0X7D02EC72,0x400);
	SetType(0X7D02EC72, "enum TEE_Result __cdecl user_ta_enter_close_session(struct tee_ta_session *s);");
	set_frame_size(0X7D02EC72, 0X50, 0, 0);
	define_local_var(0X7D02EC72, 0X7D02EC96, "[bp-0X50]", "param");
	add_func    (0X7D02EC96,0X7D02ECAE);
	set_func_flags(0X7D02EC96,0x400);
	SetType(0X7D02EC96, "enum TEE_Result __cdecl user_ta_enter_invoke_cmd(struct tee_ta_session *s, uint32_t cmd, struct tee_ta_param *param, struct TEE_ErrorOrigin *eo);");
	set_frame_size(0X7D02EC96, 0X18, 0, 0);
	define_local_var(0X7D02EC96, 0X7D02ECAE, "[bp-0X18]", "param");
	add_func    (0X7D02ECAE,0X7D02ECC6);
	set_func_flags(0X7D02ECAE,0x400);
	SetType(0X7D02ECAE, "enum TEE_Result __fastcall user_ta_enter_open_session(struct tee_ta_session *s, struct tee_ta_param *param, struct TEE_ErrorOrigin *eo);");
	set_frame_size(0X7D02ECAE, 0X10, 0, 0);
	define_local_var(0X7D02ECAE, 0X7D02ECC6, "[bp-0X10]", "param");
	add_func    (0X7D02ECC6,0X7D02ECCC);
	set_func_flags(0X7D02ECC6,0x400);
	add_func    (0X7D02ECCC,0X7D02ECF8);
	set_func_flags(0X7D02ECCC,0x400);
	set_frame_size(0X7D02ECCC, 0X10, 0, 0);
	add_func    (0X7D02ECF8,0X7D02ED5A);
	set_func_flags(0X7D02ECF8,0x400);
	SetType(0X7D02ECF8, "enum TEE_Result __cdecl static static_ta_enter_open_session(struct tee_ta_session *s, struct tee_ta_param *param, struct TEE_ErrorOrigin *eo);");
	set_frame_size(0X7D02ECF8, 0X18, 0, 0);
	add_func    (0X7D02ED5A,0X7D02EDA4);
	set_func_flags(0X7D02ED5A,0x400);
	set_frame_size(0X7D02ED5A, 0X20, 0, 0);
	add_func    (0X7D02EDA4,0X7D02EDC2);
	set_func_flags(0X7D02EDA4,0x400);
	SetType(0X7D02EDA4, "void __cdecl static copy_phdr(struct elf_phdr *phdr, struct elf_load_state *state, size_t idx);");
	add_func    (0X7D02EDC2,0X7D02EDEC);
	set_func_flags(0X7D02EDC2,0x400);
	set_frame_size(0X7D02EDC2, 0X8, 0, 0);
	add_func    (0X7D02EDEC,0X7D02EE1A);
	set_func_flags(0X7D02EDEC,0x404);
	SetType(0X7D02EDEC, "void __cdecl tee_time_wait(uint32_t milliseconds_delay);");
	set_frame_size(0X7D02EDEC, 0X28, 0, 0);
	add_func    (0X7D02EE1A,0X7D02EE64);
	set_func_flags(0X7D02EE1A,0x404);
	SetType(0X7D02EE1A, "enum TEE_Result __cdecl static arm_cntpct_get_sys_time(struct TEE_Time *time);");
	set_frame_size(0X7D02EE1A, 0X20, 0, 0);
	add_func    (0X7D02EE64,0X7D02EE6E);
	set_func_flags(0X7D02EE64,0x400);
	add_func    (0X7D02EE6E,0X7D02EE84);
	set_func_flags(0X7D02EE6E,0x404);
	SetType(0X7D02EE6E, "void __cdecl thread_set_exceptions(uint32_t exceptions);");
	set_frame_size(0X7D02EE6E, 0, 0, 0);
	add_func    (0X7D02EE84,0X7D02EE9C);
	set_func_flags(0X7D02EE84,0x400);
	set_frame_size(0X7D02EE84, 0X10, 0, 0);
	add_func    (0X7D02EE9C,0X7D02EEA4);
	set_func_flags(0X7D02EE9C,0x400);
	SetType(0X7D02EE9C, "void __cdecl thread_unmask_exceptions(uint32_t state);");
	add_func    (0X7D02EEA4,0X7D02EEA8);
	set_func_flags(0X7D02EEA4,0x4c0);
	add_func    (0X7D02EEA8,0X7D02EEAC);
	set_func_flags(0X7D02EEA8,0x4c1);
	add_func    (0X7D02EEAC,0X7D02EEBE);
	set_func_flags(0X7D02EEAC,0x400);
	add_func    (0X7D02EEBE,0X7D02EECA);
	set_func_flags(0X7D02EEBE,0x404);
	SetType(0X7D02EEBE, "bool vfp_is_enabled(void);");
	set_frame_size(0X7D02EEBE, 0X8, 0, 0);
	add_func    (0X7D02EECA,0X7D02EEDC);
	set_func_flags(0X7D02EECA,0x404);
	SetType(0X7D02EECA, "void vfp_enable(void);");
	set_frame_size(0X7D02EECA, 0X8, 0, 0);
	add_func    (0X7D02EEDC,0X7D02EEEE);
	set_func_flags(0X7D02EEDC,0x404);
	SetType(0X7D02EEDC, "void vfp_disable(void);");
	set_frame_size(0X7D02EEDC, 0X8, 0, 0);
	add_func    (0X7D02EEEE,0X7D02EF04);
	set_func_flags(0X7D02EEEE,0x404);
	SetType(0X7D02EEEE, "void __cdecl vfp_lazy_save_state_init(struct vfp_state *state);");
	set_frame_size(0X7D02EEEE, 0X8, 0, 0);
	add_func    (0X7D02EF04,0X7D02EF36);
	set_func_flags(0X7D02EF04,0x404);
	SetType(0X7D02EF04, "void __cdecl vfp_lazy_save_state_final(struct vfp_state *state);");
	set_frame_size(0X7D02EF04, 0X10, 0, 0);
	add_func    (0X7D02EF36,0X7D02EF60);
	set_func_flags(0X7D02EF36,0x404);
	SetType(0X7D02EF36, "void __cdecl vfp_lazy_restore_state(struct vfp_state *state, bool full_state);");
	set_frame_size(0X7D02EF36, 0X8, 0, 0);
	add_func    (0X7D02EF60,0X7D02EF7E);
	set_func_flags(0X7D02EF60,0x400);
	set_frame_size(0X7D02EF60, 0X8, 0, 0);
	add_func    (0X7D02EF7E,0X7D02EF82);
	set_func_flags(0X7D02EF7E,0x4c0);
	add_func    (0X7D02EF82,0X7D02EF86);
	set_func_flags(0X7D02EF82,0x4c0);
	add_func    (0X7D02EF86,0X7D02EFC6);
	set_func_flags(0X7D02EF86,0x400);
	set_frame_size(0X7D02EF86, 0X20, 0, 0);
	add_func    (0X7D02EFC6,0X7D02EFDA);
	set_func_flags(0X7D02EFC6,0x404);
	set_frame_size(0X7D02EFC6, 0X8, 0, 0);
	add_func    (0X7D02EFDA,0X7D02F03C);
	set_func_flags(0X7D02EFDA,0x404);
	SetType(0X7D02EFDA, "void __cdecl static _mutex_lock(struct mutex *m);");
	set_frame_size(0X7D02EFDA, 0X30, 0, 0);
	add_func    (0X7D02F03C,0X7D02F044);
	set_func_flags(0X7D02F03C,0x400);
	add_func    (0X7D02F044,0X7D02F04A);
	set_func_flags(0X7D02F044,0x400);
	add_func    (0X7D02F04A,0X7D02F050);
	set_func_flags(0X7D02F04A,0x400);
	add_func    (0X7D02F050,0X7D02F088);
	set_func_flags(0X7D02F050,0x400);
	SetType(0X7D02F050, "void __cdecl static wq_rpc(uint32_t func, int id, const void *sync_obj);");
	set_frame_size(0X7D02F050, 0X38, 0, 0);
	add_func    (0X7D02F088,0X7D02F098);
	set_func_flags(0X7D02F088,0x400);
	SetType(0X7D02F088, "void __cdecl init_sec_mon(unsigned int nsec_entry);");
	set_frame_size(0X7D02F088, 0X8, 0, 0);
	add_func    (0X7D02F098,0X7D02F0D2);
	set_func_flags(0X7D02F098,0x400);
	SetType(0X7D02F098, "void __cdecl static init_secondary_helper(unsigned int nsec_entry);");
	set_func_cmt(0X7D02F098,	"Modified from original op-tee version", 1);
	set_frame_size(0X7D02F098, 0X8, 0, 0);
	add_func    (0X7D02F0D2,0X7D02F0FA);
	set_func_flags(0X7D02F0D2,0x400);
	SetType(0X7D02F0D2, "int __cdecl static unwind_unksub1(struct unwind_state *state);");
	set_frame_size(0X7D02F0D2, 0X8, 0, 0);
	add_func    (0X7D02F0FE,0X7D02F134);
	set_func_flags(0X7D02F0FE,0x400);
	set_frame_size(0X7D02F0FE, 0X18, 0, 0);
	define_local_var(0X7D02F0FE, 0X7D02F134, "[bp-0X14]", "destination");
	add_func    (0X7D02F134,0X7D02F170);
	set_func_flags(0X7D02F134,0x400);
	SetType(0X7D02F134, "int __cdecl image_calculate_digest(uint8_t *out, uint8_t *a2, uint8_t *inp_buf, int inp_len, uint32_t flags, uint8_t *img_enc_key, void *a7, char a8);");
	set_frame_size(0X7D02F134, 0X60, 0, 0);
	define_local_var(0X7D02F134, 0X7D02F170, "[bp-0X58]", "crypto");
	define_local_var(0X7D02F134, 0X7D02F170, "[bp+0]", "flags");
	define_local_var(0X7D02F134, 0X7D02F170, "[bp+0X4]", "img_enc_key");
	define_local_var(0X7D02F134, 0X7D02F170, "[bp+0X8]", "a7");
	define_local_var(0X7D02F134, 0X7D02F170, "[bp+0XC]", "a8");
	add_func    (0X7D02F170,0X7D02F194);
	set_func_flags(0X7D02F170,0x400);
	SetType(0X7D02F170, "char *__fastcall get_auth_key(int a1, int *key);");
	set_frame_size(0X7D02F170, 0X8, 0, 0);
	add_func    (0X7D02F194,0X7D02F1A0);
	set_func_flags(0X7D02F194,0x400);
	add_func    (0X7D02F1A0,0X7D02F1AC);
	set_func_flags(0X7D02F1A0,0x400);
	add_func    (0X7D02F1AC,0X7D02F1E2);
	set_func_flags(0X7D02F1AC,0x400);
	set_frame_size(0X7D02F1AC, 0X8, 0, 0);
	add_func    (0X7D02F1E2,0X7D02F1F0);
	set_func_flags(0X7D02F1E2,0x404);
	SetType(0X7D02F1E2, "bool __cdecl core_mmu_mattr_is_ok(uint32_t mattr);");
	set_frame_size(0X7D02F1E2, 0, 0, 0);
	add_func    (0X7D02F1F0,0X7D02F20A);
	set_func_flags(0X7D02F1F0,0x400);
	set_frame_size(0X7D02F1F0, 0X18, 0, 0);
	add_func    (0X7D02F20A,0X7D02F24C);
	set_func_flags(0X7D02F20A,0x400);
	set_frame_size(0X7D02F20A, 0X20, 0, 0);
	add_func    (0X7D02F24C,0X7D02F28A);
	set_func_flags(0X7D02F24C,0x400);
	set_frame_size(0X7D02F24C, 0X10, 0, 0);
	add_func    (0X7D02F28A,0X7D02F2AE);
	set_func_flags(0X7D02F28A,0x400);
	set_frame_size(0X7D02F28A, 0X10, 0, 0);
	add_func    (0X7D02F2AE,0X7D02F3BC);
	set_func_flags(0X7D02F2AE,0x400);
	set_frame_size(0X7D02F2AE, 0X58, 0, 0);
	add_func    (0X7D02F3BC,0X7D02F400);
	set_func_flags(0X7D02F3BC,0x404);
	SetType(0X7D02F3BC, "void *__cdecl phys_to_virt(uint32_t pa, int m);");
	set_frame_size(0X7D02F3BC, 0X10, 0, 0);
	define_local_var(0X7D02F3BC, 0X7D02F400, "[bp-0XC]", "pa");
	add_func    (0X7D02F400,0X7D02F40A);
	set_func_flags(0X7D02F400,0x400);
	add_func    (0X7D02F40A,0X7D02F430);
	set_func_flags(0X7D02F40A,0x400);
	SetType(0X7D02F40A, "void __cdecl tee_mmu_map_stack(struct user_ta_ctx *utc, uint32_t pa, size_t size, uint32_t prot);");
	set_frame_size(0X7D02F40A, 0X8, 0, 0);
	add_func    (0X7D02F430,0X7D02F43E);
	set_func_flags(0X7D02F430,0x400);
	SetType(0X7D02F430, "void __cdecl tee_mmu_map_clear(struct user_ta_ctx *utc);");
	add_func    (0X7D02F43E,0X7D02F458);
	set_func_flags(0X7D02F43E,0x400);
	set_frame_size(0X7D02F43E, 0X8, 0, 0);
	add_func    (0X7D02F458,0X7D02F472);
	set_func_flags(0X7D02F458,0x400);
	set_frame_size(0X7D02F458, 0X8, 0, 0);
	add_func    (0X7D02F472,0X7D02F4B6);
	set_func_flags(0X7D02F472,0x400);
	set_frame_size(0X7D02F472, 0X18, 0, 0);
	add_func    (0X7D02F4B6,0X7D02F4C0);
	set_func_flags(0X7D02F4B6,0x400);
	SetType(0X7D02F4B6, "struct tee_ta_ctx *tee_mmu_get_ctx(void);");
	set_frame_size(0X7D02F4B6, 0X8, 0, 0);
	add_func    (0X7D02F4C0,0X7D02F4E0);
	set_func_flags(0X7D02F4C0,0x400);
	add_func    (0X7D02F4E0,0X7D02F4F8);
	set_func_flags(0X7D02F4E0,0x400);
	set_frame_size(0X7D02F4E0, 0X10, 0, 0);
	define_local_var(0X7D02F4E0, 0X7D02F4F8, "[bp+0]", "attr");
	add_func    (0X7D02F4F8,0X7D02F50A);
	set_func_flags(0X7D02F4F8,0x400);
	add_func    (0X7D02F50A,0X7D02F518);
	set_func_flags(0X7D02F50A,0x400);
	add_func    (0X7D02F518,0X7D02F564);
	set_func_flags(0X7D02F518,0x400);
	set_frame_size(0X7D02F518, 0X10, 0, 0);
	add_func    (0X7D02F564,0X7D02F574);
	set_func_flags(0X7D02F564,0x400);
	add_func    (0X7D02F574,0X7D02F580);
	set_func_flags(0X7D02F574,0x400);
	add_func    (0X7D02F580,0X7D02F5D8);
	set_func_flags(0X7D02F580,0x400);
	add_func    (0X7D02F5D8,0X7D02F5EE);
	set_func_flags(0X7D02F5D8,0x400);
	set_frame_size(0X7D02F5D8, 0X10, 0, 0);
	add_func    (0X7D02F5EE,0X7D02F600);
	set_func_flags(0X7D02F5EE,0x400);
	set_frame_size(0X7D02F5EE, 0X8, 0, 0);
	add_func    (0X7D02F600,0X7D02F65E);
	set_func_flags(0X7D02F600,0x400);
	set_frame_size(0X7D02F600, 0X18, 0, 0);
	add_func    (0X7D02F65E,0X7D02F75E);
	set_func_flags(0X7D02F65E,0x400);
	set_frame_size(0X7D02F65E, 0X20, 0, 0);
	add_func    (0X7D02F75E,0X7D02F780);
	set_func_flags(0X7D02F75E,0x400);
	set_frame_size(0X7D02F75E, 0X10, 0, 0);
	add_func    (0X7D02F780,0X7D02F792);
	set_func_flags(0X7D02F780,0x400);
	add_func    (0X7D02F792,0X7D02F7AE);
	set_func_flags(0X7D02F792,0x400);
	add_func    (0X7D02F7AE,0X7D02F7E6);
	set_func_flags(0X7D02F7AE,0x400);
	set_frame_size(0X7D02F7AE, 0X10, 0, 0);
	add_func    (0X7D02F7E6,0X7D02F7F4);
	set_func_flags(0X7D02F7E6,0x404);
	SetType(0X7D02F7E6, "uint32_t __cdecl tee_mm_get_smem(const struct tee_mm_entry_t *mm);");
	set_frame_size(0X7D02F7E6, 0, 0, 0);
	add_func    (0X7D02F7F4,0X7D02F836);
	set_func_flags(0X7D02F7F4,0x400);
	set_frame_size(0X7D02F7F4, 0X14, 0, 0);
	add_func    (0X7D02F836,0X7D02F916);
	set_func_flags(0X7D02F836,0x400);
	set_frame_size(0X7D02F836, 0X30, 0, 0);
	add_func    (0X7D02F916,0X7D02F91C);
	set_func_flags(0X7D02F916,0x400);
	SetType(0X7D02F916, "void __cdecl tee_entry_get_api_call_count(struct thread_smc_args *args);");
	add_func    (0X7D02F91C,0X7D02F926);
	set_func_flags(0X7D02F91C,0x400);
	SetType(0X7D02F91C, "void __cdecl tee_entry_get_api_revision(struct thread_smc_args *args);");
	add_func    (0X7D02F926,0X7D02F930);
	set_func_flags(0X7D02F926,0x400);
	SetType(0X7D02F926, "void __cdecl tee_entry_get_os_revision(struct thread_smc_args *args);");
	add_func    (0X7D02F930,0X7D02F934);
	set_func_flags(0X7D02F930,0x400);
	add_func    (0X7D02F934,0X7D02F936);
	set_func_flags(0X7D02F934,0x440);
	add_func    (0X7D02F936,0X7D02F93A);
	set_func_flags(0X7D02F936,0x400);
	add_func    (0X7D02F93A,0X7D02F93C);
	set_func_flags(0X7D02F93A,0x440);
	add_func    (0X7D02F93C,0X7D02F942);
	set_func_flags(0X7D02F93C,0x400);
	SetType(0X7D02F93C, "void __fastcall sub_7D02F93C(int a1);");
	add_func    (0X7D02F942,0X7D02F944);
	set_func_flags(0X7D02F942,0x440);
	add_func    (0X7D02F944,0X7D02F954);
	set_func_flags(0X7D02F944,0x400);
	SetType(0X7D02F944, "int mpcore_processor_number(void);");
	set_func_cmt(0X7D02F944,	"Returns CPU ID of the current core.\nThis is stored in lowest 8 bits (2 bits, usually) of MPIDR register.\n", 1);
	add_func    (0X7D02F954,0X7D02F996);
	set_func_flags(0X7D02F954,0x400);
	set_frame_size(0X7D02F954, 0X10, 0, 0);
	add_func    (0X7D02F996,0X7D02F9AE);
	set_func_flags(0X7D02F996,0x400);
	set_frame_size(0X7D02F996, 0X10, 0, 0);
	add_func    (0X7D02F9AE,0X7D02F9F4);
	set_func_flags(0X7D02F9AE,0x400);
	set_frame_size(0X7D02F9AE, 0X18, 0, 0);
	add_func    (0X7D02F9F4,0X7D02FA3E);
	set_func_flags(0X7D02F9F4,0x400);
	set_frame_size(0X7D02F9F4, 0X18, 0, 0);
	add_func    (0X7D02FA3E,0X7D02FA62);
	set_func_flags(0X7D02FA3E,0x404);
	SetType(0X7D02FA3E, "void __cdecl tee_ta_push_current_session(struct tee_ta_session *sess);");
	set_frame_size(0X7D02FA3E, 0X8, 0, 0);
	add_func    (0X7D02FA62,0X7D02FA84);
	set_func_flags(0X7D02FA62,0x400);
	set_frame_size(0X7D02FA62, 0X8, 0, 0);
	add_func    (0X7D02FA84,0X7D02FA92);
	set_func_flags(0X7D02FA84,0x400);
	SetType(0X7D02FA84, "struct tee_ta_session *tee_ta_get_calling_session(void);");
	set_frame_size(0X7D02FA84, 0X8, 0, 0);
	add_func    (0X7D02FA92,0X7D02FAB2);
	set_func_flags(0X7D02FA92,0x400);
	set_frame_size(0X7D02FA92, 0X8, 0, 0);
	add_func    (0X7D02FAB2,0X7D02FAF8);
	set_func_flags(0X7D02FAB2,0x400);
	SetType(0X7D02FAB2, "uint32_t __cdecl tee_b2hs(uint8_t *b, uint8_t *hs, uint32_t blen, uint32_t hslen);");
	set_frame_size(0X7D02FAB2, 0X10, 0, 0);
	add_func    (0X7D02FAF8,0X7D02FB5C);
	set_func_flags(0X7D02FAF8,0x400);
	set_frame_size(0X7D02FAF8, 0X14, 0, 0);
	add_func    (0X7D02FB5C,0X7D02FB86);
	set_func_flags(0X7D02FB5C,0x400);
	SetType(0X7D02FB5C, "bool __cdecl core_is_buffer_inside(uint32_t b, size_t bl, uint32_t a, size_t al);");
	set_frame_size(0X7D02FB5C, 0X18, 0, 0);
	add_func    (0X7D02FB86,0X7D02FBAC);
	set_func_flags(0X7D02FB86,0x400);
	SetType(0X7D02FB86, "bool __cdecl core_is_buffer_intersect(uint32_t b, size_t bl, uint32_t a, size_t al);");
	set_frame_size(0X7D02FB86, 0X18, 0, 0);
	add_func    (0X7D02FBAC,0X7D02FC0C);
	set_func_flags(0X7D02FBAC,0x400);
	set_frame_size(0X7D02FBAC, 0X18, 0, 0);
	add_func    (0X7D02FC0C,0X7D02FC30);
	set_func_flags(0X7D02FC0C,0x400);
	add_func    (0X7D02FC30,0X7D02FC48);
	set_func_flags(0X7D02FC30,0x400);
	add_func    (0X7D02FC48,0X7D02FC6E);
	set_func_flags(0X7D02FC48,0x404);
	SetType(0X7D02FC48, "int __cdecl syscall_check_access_rights(unsigned int flags, const void *buf, size_t len);");
	set_frame_size(0X7D02FC48, 0X20, 0, 0);
	add_func    (0X7D02FC6E,0X7D02FCA4);
	set_func_flags(0X7D02FC6E,0x400);
	set_frame_size(0X7D02FC6E, 0X20, 0, 0);
	add_func    (0X7D02FCA4,0X7D02FCDA);
	set_func_flags(0X7D02FCA4,0x400);
	set_frame_size(0X7D02FCA4, 0X20, 0, 0);
	add_func    (0X7D02FCDA,0X7D02FD78);
	set_func_flags(0X7D02FCDA,0x400);
	set_frame_size(0X7D02FCDA, 0X30, 0, 0);
	add_func    (0X7D02FD78,0X7D02FDA6);
	set_func_flags(0X7D02FD78,0x404);
	SetType(0X7D02FD78, "int __cdecl syscall_get_cancellation_flag(uint32_t *cancel);");
	set_frame_size(0X7D02FD78, 0X10, 0, 0);
	add_func    (0X7D02FDA6,0X7D02FDD8);
	set_func_flags(0X7D02FDA6,0x404);
	SetType(0X7D02FDA6, "int __cdecl syscall_unmask_cancellation(uint32_t *old_mask);");
	set_frame_size(0X7D02FDA6, 0X10, 0, 0);
	add_func    (0X7D02FDD8,0X7D02FE0A);
	set_func_flags(0X7D02FDD8,0x404);
	SetType(0X7D02FDD8, "int __cdecl syscall_mask_cancellation(uint32_t *old_mask);");
	set_frame_size(0X7D02FDD8, 0X10, 0, 0);
	add_func    (0X7D02FE0A,0X7D02FE36);
	set_func_flags(0X7D02FE0A,0x404);
	SetType(0X7D02FE0A, "int __cdecl syscall_set_ta_time(const struct TEE_Time *mytime);");
	set_frame_size(0X7D02FE0A, 0X18, 0, 0);
	add_func    (0X7D02FE36,0X7D02FE3E);
	set_func_flags(0X7D02FE36,0x400);
	add_func    (0X7D02FE3E,0X7D02FE44);
	set_func_flags(0X7D02FE3E,0x400);
	add_func    (0X7D02FE44,0X7D02FE6A);
	set_func_flags(0X7D02FE44,0x400);
	set_frame_size(0X7D02FE44, 0X10, 0, 0);
	add_func    (0X7D02FE6A,0X7D02FE9A);
	set_func_flags(0X7D02FE6A,0x400);
	SetType(0X7D02FE6A, "bool __cdecl op_u32_from_binary_helper(uint32_t *v, const uint8_t *data, size_t data_len, size_t *offs);");
	set_frame_size(0X7D02FE6A, 0X18, 0, 0);
	define_local_var(0X7D02FE6A, 0X7D02FE9A, "[bp-0X14]", "destination");
	add_func    (0X7D02FE9A,0X7D02FE9E);
	set_func_flags(0X7D02FE9A,0x480);
	add_func    (0X7D02FE9E,0X7D02FEE6);
	set_func_flags(0X7D02FE9E,0x400);
	set_frame_size(0X7D02FE9E, 0X28, 0, 0);
	define_local_var(0X7D02FE9E, 0X7D02FEE6, "[bp-0X24]", "v");
	add_func    (0X7D02FEE6,0X7D02FF10);
	set_func_flags(0X7D02FEE6,0x400);
	set_frame_size(0X7D02FEE6, 0X18, 0, 0);
	add_func    (0X7D02FF10,0X7D02FF16);
	set_func_flags(0X7D02FF10,0x400);
	add_func    (0X7D02FF16,0X7D02FF46);
	set_func_flags(0X7D02FF16,0x400);
	set_frame_size(0X7D02FF16, 0X18, 0, 0);
	add_func    (0X7D02FF46,0X7D02FF54);
	set_func_flags(0X7D02FF46,0x400);
	add_func    (0X7D02FF54,0X7D02FFAC);
	set_func_flags(0X7D02FF54,0x400);
	set_frame_size(0X7D02FF54, 0X18, 0, 0);
	add_func    (0X7D02FFAC,0X7D030004);
	set_func_flags(0X7D02FFAC,0x400);
	set_frame_size(0X7D02FFAC, 0X20, 0, 0);
	add_func    (0X7D030004,0X7D030016);
	set_func_flags(0X7D030004,0x400);
	set_frame_size(0X7D030004, 0X8, 0, 0);
	add_func    (0X7D030016,0X7D030030);
	set_func_flags(0X7D030016,0x404);
	SetType(0X7D030016, "int __cdecl syscall_cipher_update(unsigned int state, const void *src, size_t src_len, void *dst, uint64_t *dst_len);");
	set_frame_size(0X7D030016, 0X18, 0, 0);
	define_local_var(0X7D030016, 0X7D030030, "[bp+0]", "dst_len");
	add_func    (0X7D030030,0X7D03004A);
	set_func_flags(0X7D030030,0x404);
	SetType(0X7D030030, "int __cdecl syscall_cipher_final(unsigned int state, const void *src, size_t src_len, void *dst, uint64_t *dst_len);");
	set_frame_size(0X7D030030, 0X18, 0, 0);
	define_local_var(0X7D030030, 0X7D03004A, "[bp+0]", "dst_len");
	add_func    (0X7D03004A,0X7D03007C);
	set_func_flags(0X7D03004A,0x400);
	set_frame_size(0X7D03004A, 0X18, 0, 0);
	add_func    (0X7D03007C,0X7D03009A);
	set_func_flags(0X7D03007C,0x400);
	set_frame_size(0X7D03007C, 0X18, 0, 0);
	add_func    (0X7D03009A,0X7D0300D2);
	set_func_flags(0X7D03009A,0x400);
	SetType(0X7D03009A, "int __fastcall syscall_cryptocell_9A(unsigned int a1, uint32_t *fourcc, int fourcc_len, uint8_t *passphrase, int passphrase_len, uint8_t *out_key, unsigned int out_key_len);");
	set_frame_size(0X7D03009A, 0X30, 0, 0);
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp-0X28]", "a7");
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp-0X24]", "a8");
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp-0X1C]", "sess");
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp+0]", "passphrase_len");
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp+0X4]", "out_key");
	define_local_var(0X7D03009A, 0X7D0300D2, "[bp+0X8]", "out_key_len");
	add_func    (0X7D0300D2,0X7D030130);
	set_func_flags(0X7D0300D2,0x400);
	SetType(0X7D0300D2, "char *__cdecl tee_svc_storage_create_filename(struct tee_ta_session *sess, void *object_id, uint32_t object_id_len, bool transient);");
	set_frame_size(0X7D0300D2, 0X20, 0, 0);
	add_func    (0X7D030130,0X7D030154);
	set_func_flags(0X7D030130,0x400);
	set_frame_size(0X7D030130, 0X10, 0, 0);
	add_func    (0X7D030154,0X7D030166);
	set_func_flags(0X7D030154,0x400);
	set_frame_size(0X7D030154, 0X8, 0, 0);
	add_func    (0X7D030166,0X7D03016A);
	set_func_flags(0X7D030166,0x400);
	add_func    (0X7D03016A,0X7D03018E);
	set_func_flags(0X7D03016A,0x400);
	set_frame_size(0X7D03016A, 0X10, 0, 0);
	add_func    (0X7D03018E,0X7D0301B4);
	set_func_flags(0X7D03018E,0x400);
	set_frame_size(0X7D03018E, 0X8, 0, 0);
	add_func    (0X7D0301B4,0X7D0301C8);
	set_func_flags(0X7D0301B4,0x400);
	SetType(0X7D0301B4, "int __cdecl rpmb_fs_closedir(struct tee_fs_dir *dir);");
	set_frame_size(0X7D0301B4, 0X8, 0, 0);
	add_func    (0X7D0301C8,0X7D030226);
	set_func_flags(0X7D0301C8,0x400);
	set_frame_size(0X7D0301C8, 0X48, 0, 0);
	add_func    (0X7D030226,0X7D030250);
	set_func_flags(0X7D030226,0x400);
	set_frame_size(0X7D030226, 0X8, 0, 0);
	add_func    (0X7D030250,0X7D030274);
	set_func_flags(0X7D030250,0x404);
	SetType(0X7D030250, "struct rpmb_file_handle *__cdecl static alloc_file_handle(const char *filename);");
	set_frame_size(0X7D030250, 0X10, 0, 0);
	add_func    (0X7D030274,0X7D030294);
	set_func_flags(0X7D030274,0x400);
	set_frame_size(0X7D030274, 0X10, 0, 0);
	add_func    (0X7D030294,0X7D0302A2);
	set_func_flags(0X7D030294,0x400);
	add_func    (0X7D0302A2,0X7D0302AA);
	set_func_flags(0X7D0302A2,0x400);
	add_func    (0X7D0302AA,0X7D0302C6);
	set_func_flags(0X7D0302AA,0x400);
	set_frame_size(0X7D0302AA, 0X8, 0, 0);
	add_func    (0X7D0302C6,0X7D0302FE);
	set_func_flags(0X7D0302C6,0x400);
	set_frame_size(0X7D0302C6, 0X8, 0, 0);
	add_func    (0X7D0302FE,0X7D030310);
	set_func_flags(0X7D0302FE,0x400);
	set_frame_size(0X7D0302FE, 0X8, 0, 0);
	add_func    (0X7D030310,0X7D03032E);
	set_func_flags(0X7D030310,0x400);
	set_frame_size(0X7D030310, 0X18, 0, 0);
	add_func    (0X7D03032E,0X7D030344);
	set_func_flags(0X7D03032E,0x400);
	add_func    (0X7D030344,0X7D03038E);
	set_func_flags(0X7D030344,0x400);
	SetType(0X7D030344, "void __cdecl gic_init(struct gic_data *gd, void *gicc_base, void *gicd_base);");
	set_frame_size(0X7D030344, 0X10, 0, 0);
	add_func    (0X7D03038E,0X7D03039A);
	set_func_flags(0X7D03038E,0x400);
	add_func    (0X7D03039A,0X7D0303AC);
	set_func_flags(0X7D03039A,0x400);
	set_frame_size(0X7D03039A, 0X10, 0, 0);
	add_func    (0X7D0303AC,0X7D0303B0);
	set_func_flags(0X7D0303AC,0x480);
	add_func    (0X7D0303B0,0X7D0303B4);
	set_func_flags(0X7D0303B0,0x480);
	add_func    (0X7D0303B4,0X7D0303C4);
	set_func_flags(0X7D0303B4,0x400);
	set_frame_size(0X7D0303B4, 0X8, 0, 0);
	add_func    (0X7D0303C4,0X7D0303D0);
	set_func_flags(0X7D0303C4,0x400);
	add_func    (0X7D0303D0,0X7D0303E6);
	set_func_flags(0X7D0303D0,0x400);
	add_func    (0X7D0303E6,0X7D0303FC);
	set_func_flags(0X7D0303E6,0x400);
	add_func    (0X7D0303FC,0X7D030404);
	set_func_flags(0X7D0303FC,0x400);
	add_func    (0X7D030404,0X7D030408);
	set_func_flags(0X7D030404,0x4c0);
	add_func    (0X7D030408,0X7D030420);
	set_func_flags(0X7D030408,0x400);
	set_frame_size(0X7D030408, 0X8, 0, 0);
	add_func    (0X7D030420,0X7D030438);
	set_func_flags(0X7D030420,0x400);
	set_frame_size(0X7D030420, 0X8, 0, 0);
	add_func    (0X7D030438,0X7D030442);
	set_func_flags(0X7D030438,0x400);
	add_func    (0X7D030442,0X7D03045C);
	set_func_flags(0X7D030442,0x400);
	set_frame_size(0X7D030442, 0X8, 0, 0);
	add_func    (0X7D03045C,0X7D030472);
	set_func_flags(0X7D03045C,0x400);
	SetType(0X7D03045C, "bool __cdecl sasi_bn_alloc_max(struct bignum **s);");
	set_frame_size(0X7D03045C, 0X8, 0, 0);
	add_func    (0X7D030472,0X7D030490);
	set_func_flags(0X7D030472,0x400);
	set_frame_size(0X7D030472, 0X18, 0, 0);
	define_local_var(0X7D030472, 0X7D030490, "[bp-0X14]", "buffer_len");
	add_func    (0X7D030490,0X7D030494);
	set_func_flags(0X7D030490,0x480);
	add_func    (0X7D030494,0X7D03049C);
	set_func_flags(0X7D030494,0x400);
	add_func    (0X7D03049C,0X7D0304A0);
	set_func_flags(0X7D03049C,0x4c0);
	add_func    (0X7D0304A0,0X7D0304B8);
	set_func_flags(0X7D0304A0,0x400);
	set_frame_size(0X7D0304A0, 0X8, 0, 0);
	add_func    (0X7D0304B8,0X7D0304D0);
	set_func_flags(0X7D0304B8,0x400);
	set_frame_size(0X7D0304B8, 0X8, 0, 0);
	add_func    (0X7D0304D0,0X7D0304EA);
	set_func_flags(0X7D0304D0,0x400);
	set_frame_size(0X7D0304D0, 0X8, 0, 0);
	add_func    (0X7D0304EA,0X7D030500);
	set_func_flags(0X7D0304EA,0x400);
	SetType(0X7D0304EA, "bool __cdecl tom_bn_alloc_max(struct bignum **s);");
	set_frame_size(0X7D0304EA, 0X8, 0, 0);
	add_func    (0X7D030500,0X7D030532);
	set_func_flags(0X7D030500,0x400);
	set_frame_size(0X7D030500, 0X48, 0, 0);
	define_local_var(0X7D030500, 0X7D030532, "[bp-0X48]", "dst_len");
	define_local_var(0X7D030500, 0X7D030532, "[bp-0X3C]", "ltc_key");
	add_func    (0X7D030532,0X7D03058A);
	set_func_flags(0X7D030532,0x400);
	set_frame_size(0X7D030532, 0X48, 0, 0);
	define_local_var(0X7D030532, 0X7D03058A, "[bp-0X48]", "dst_len");
	define_local_var(0X7D030532, 0X7D03058A, "[bp-0X3C]", "ltc_key");
	add_func    (0X7D03058A,0X7D0305C6);
	set_func_flags(0X7D03058A,0x400);
	SetType(0X7D03058A, "void __cdecl tom_get_pool(struct mpa_scratch_mem_sync *sync);");
	set_frame_size(0X7D03058A, 0X10, 0, 0);
	add_func    (0X7D0305C6,0X7D030604);
	set_func_flags(0X7D0305C6,0x400);
	SetType(0X7D0305C6, "void __cdecl tom_get_des2_key(const uint8_t *key, size_t key_len, uint8_t *key_intermediate, uint8_t **real_key, size_t *real_key_len);");
	set_frame_size(0X7D0305C6, 0X18, 0, 0);
	define_local_var(0X7D0305C6, 0X7D030604, "[bp+0]", "real_key_len");
	add_func    (0X7D030604,0X7D030608);
	set_func_flags(0X7D030604,0x400);
	add_func    (0X7D030608,0X7D03060A);
	set_func_flags(0X7D030608,0x400);
	add_func    (0X7D03060A,0X7D030630);
	set_func_flags(0X7D03060A,0x400);
	SetType(0X7D03060A, "int __cdecl rijndael_keysize(int *keysize);");
	add_func    (0X7D030630,0X7D030634);
	set_func_flags(0X7D030630,0x400);
	add_func    (0X7D030634,0X7D030638);
	set_func_flags(0X7D030634,0x400);
	add_func    (0X7D030638,0X7D03063A);
	set_func_flags(0X7D030638,0x400);
	SetType(0X7D030638, "void __cdecl des_done(struct symmetric_key *skey);");
	add_func    (0X7D03063A,0X7D03063C);
	set_func_flags(0X7D03063A,0x400);
	SetType(0X7D03063A, "void __cdecl des3_done(struct symmetric_key *skey);");
	add_func    (0X7D03063C,0X7D030654);
	set_func_flags(0X7D03063C,0x400);
	SetType(0X7D03063C, "int __cdecl des_keysize(int *keysize);");
	add_func    (0X7D030654,0X7D03066C);
	set_func_flags(0X7D030654,0x400);
	SetType(0X7D030654, "int __cdecl des3_keysize(int *keysize);");
	add_func    (0X7D03066C,0X7D0306D4);
	set_func_flags(0X7D03066C,0x400);
	set_frame_size(0X7D03066C, 0X10, 0, 0);
	add_func    (0X7D0306D4,0X7D03073E);
	set_func_flags(0X7D0306D4,0x400);
	set_frame_size(0X7D0306D4, 0X10, 0, 0);
	add_func    (0X7D03073E,0X7D0307C2);
	set_func_flags(0X7D03073E,0x400);
	set_frame_size(0X7D03073E, 0X18, 0, 0);
	add_func    (0X7D030906,0X7D03093E);
	set_func_flags(0X7D030906,0x400);
	SetType(0X7D030906, "int __cdecl ccm_reset(struct ccm_state *ccm);");
	set_frame_size(0X7D030906, 0X8, 0, 0);
	add_func    (0X7D03093E,0X7D030AF0);
	set_func_flags(0X7D03093E,0x400);
	SetType(0X7D03093E, "int __cdecl gcm_add_aad(struct gcm_state *gcm, const unsigned __int8 *adata, unsigned int adatalen);");
	set_frame_size(0X7D03093E, 0X20, 0, 0);
	add_func    (0X7D030AF0,0X7D030BA4);
	set_func_flags(0X7D030AF0,0x400);
	SetType(0X7D030AF0, "int __cdecl gcm_add_iv(struct gcm_state *gcm, const unsigned __int8 *IV, unsigned int IVlen);");
	set_frame_size(0X7D030AF0, 0X28, 0, 0);
	add_func    (0X7D030BA4,0X7D030BC0);
	set_func_flags(0X7D030BA4,0x400);
	set_frame_size(0X7D030BA4, 0X18, 0, 0);
	add_func    (0X7D030BC0,0X7D030C02);
	set_func_flags(0X7D030BC0,0x400);
	SetType(0X7D030BC0, "int __cdecl gcm_reset(struct gcm_state *gcm);");
	set_func_cmt(0X7D030BC0,	"LIBRARY ENDING libtomcrypt/src/encauth\n", 1);
	set_frame_size(0X7D030BC0, 0X8, 0, 0);
	add_func    (0X7D030C02,0X7D030C06);
	set_func_flags(0X7D030C02,0x404);
	set_frame_size(0X7D030C02, 0, 0, 0);
	add_func    (0X7D030C06,0X7D030CD2);
	set_func_flags(0X7D030C06,0x404);
	set_frame_size(0X7D030C06, 0X10, 0, 0);
	add_func    (0X7D030CD2,0X7D030D74);
	set_func_flags(0X7D030CD2,0x404);
	set_frame_size(0X7D030CD2, 0X20, 0, 0);
	add_func    (0X7D030D74,0X7D030D78);
	set_func_flags(0X7D030D74,0x404);
	set_frame_size(0X7D030D74, 0, 0, 0);
	add_func    (0X7D030D78,0X7D030E52);
	set_func_flags(0X7D030D78,0x404);
	set_frame_size(0X7D030D78, 0X10, 0, 0);
	add_func    (0X7D030E52,0X7D030EF4);
	set_func_flags(0X7D030E52,0x404);
	set_frame_size(0X7D030E52, 0X20, 0, 0);
	add_func    (0X7D030EF4,0X7D030EF8);
	set_func_flags(0X7D030EF4,0x404);
	set_frame_size(0X7D030EF4, 0, 0, 0);
	add_func    (0X7D030EF8,0X7D030F1E);
	set_func_flags(0X7D030EF8,0x404);
	set_frame_size(0X7D030EF8, 0X30, 0, 0);
	add_func    (0X7D030F1E,0X7D030F22);
	set_func_flags(0X7D030F1E,0x404);
	set_frame_size(0X7D030F1E, 0, 0, 0);
	add_func    (0X7D030F22,0X7D030FFC);
	set_func_flags(0X7D030F22,0x404);
	set_frame_size(0X7D030F22, 0X10, 0, 0);
	add_func    (0X7D030FFC,0X7D03109E);
	set_func_flags(0X7D030FFC,0x404);
	set_frame_size(0X7D030FFC, 0X20, 0, 0);
	add_func    (0X7D03109E,0X7D0310A2);
	set_func_flags(0X7D03109E,0x404);
	set_frame_size(0X7D03109E, 0, 0, 0);
	add_func    (0X7D0310A2,0X7D0310CC);
	set_func_flags(0X7D0310A2,0x404);
	set_frame_size(0X7D0310A2, 0X48, 0, 0);
	add_func    (0X7D0310CC,0X7D0310D0);
	set_func_flags(0X7D0310CC,0x404);
	set_frame_size(0X7D0310CC, 0, 0, 0);
	add_func    (0X7D0310D0,0X7D0311C6);
	set_func_flags(0X7D0310D0,0x404);
	set_frame_size(0X7D0310D0, 0X10, 0, 0);
	add_func    (0X7D0311C6,0X7D031268);
	set_func_flags(0X7D0311C6,0x404);
	set_frame_size(0X7D0311C6, 0X20, 0, 0);
	add_func    (0X7D031268,0X7D03127A);
	set_func_flags(0X7D031268,0x400);
	SetType(0X7D031268, "void __cdecl zeromem(volatile void *out, size_t outlen);");
	set_func_cmt(0X7D031268,	"LIBRARY ITEM libtomcrypt/src/misc", 1);
	add_func    (0X7D03127A,0X7D03128E);
	set_func_flags(0X7D03127A,0x400);
	SetType(0X7D03127A, "int __cdecl ctr_decrypt(const unsigned __int8 *ct, unsigned __int8 *pt, unsigned int len, struct symmetric_CTR *ctr);");
	set_frame_size(0X7D03127A, 0XC, 0, 0);
	add_func    (0X7D03128E,0X7D0312B8);
	set_func_flags(0X7D03128E,0x400);
	SetType(0X7D03128E, "void __cdecl xts_mult_x(unsigned __int8 *I);");
	set_frame_size(0X7D03128E, 0X8, 0, 0);
	add_func    (0X7D0312B8,0X7D0312D2);
	set_func_flags(0X7D0312B8,0x400);
	SetType(0X7D0312B8, "void __cdecl dsa_free(struct dsa_key *key);");
	set_frame_size(0X7D0312B8, 0X10, 0, 0);
	add_func    (0X7D0312D2,0X7D0312FC);
	set_func_flags(0X7D0312D2,0x400);
	SetType(0X7D0312D2, "void __cdecl rsa_free(struct rsa_key *key);");
	set_frame_size(0X7D0312D2, 0X20, 0, 0);
	add_func    (0X7D0312FC,0X7D031312);
	set_func_flags(0X7D0312FC,0x400);
	SetType(0X7D0312FC, "void __cdecl ecc_free(struct ecc_key *key);");
	set_frame_size(0X7D0312FC, 0X10, 0, 0);
	add_func    (0X7D031312,0X7D031346);
	set_func_flags(0X7D031312,0x400);
	SetType(0X7D031312, "struct ecc_point *ltc_ecc_new_point(void);");
	set_frame_size(0X7D031312, 0X18, 0, 0);
	add_func    (0X7D031346,0X7D031360);
	set_func_flags(0X7D031346,0x400);
	SetType(0X7D031346, "void __cdecl ltc_ecc_del_point(struct ecc_point *p);");
	set_func_cmt(0X7D031346,	"LIBRARY ENDING libtomcrypt/src/pk/ecc", 1);
	set_frame_size(0X7D031346, 0X8, 0, 0);
	add_func    (0X7D031360,0X7D031378);
	set_func_flags(0X7D031360,0x400);
	set_func_cmt(0X7D031360,	"LIBRARY START libtomcrypt/src/prngs", 1);
	add_func    (0X7D031378,0X7D03137C);
	set_func_flags(0X7D031378,0x400);
	add_func    (0X7D03137C,0X7D03145C);
	set_func_flags(0X7D03137C,0x400);
	SetType(0X7D03137C, "int __cdecl fortuna_reseed(struct prng_state *prng);");
	set_frame_size(0X7D03137C, 0X180, 0, 0);
	add_func    (0X7D03145C,0X7D031460);
	set_func_flags(0X7D03145C,0x480);
	SetType(0X7D03145C, "int __cdecl fortuna_ready(struct prng_state *prng);");
	add_func    (0X7D031460,0X7D03150A);
	set_func_flags(0X7D031460,0x400);
	set_frame_size(0X7D031460, 0XA0, 0, 0);
	add_func    (0X7D03150A,0X7D031544);
	set_func_flags(0X7D03150A,0x400);
	set_frame_size(0X7D03150A, 0X38, 0, 0);
	add_func    (0X7D031544,0X7D0315DE);
	set_func_flags(0X7D031544,0x400);
	set_frame_size(0X7D031544, 0X28, 0, 0);
	add_func    (0X7D0315DE,0X7D031612);
	set_func_flags(0X7D0315DE,0x400);
	set_frame_size(0X7D0315DE, 0X10, 0, 0);
	add_func    (0X7D031612,0X7D0316F4);
	set_func_flags(0X7D031612,0x400);
	set_frame_size(0X7D031612, 0X38, 0, 0);
	add_func    (0X7D0316F4,0X7D0317B0);
	set_func_flags(0X7D0316F4,0x400);
	set_func_cmt(0X7D0316F4,	"LIBRARY ENDING libtomcrypt/src/prngs", 1);
	set_frame_size(0X7D0316F4, 0X30, 0, 0);
	add_func    (0X7D0317B0,0X7D0317CE);
	set_func_flags(0X7D0317B0,0x400);
	set_func_cmt(0X7D0317B0,	"LIBRARY START libtomcrypt/mpa_desc.c\nthe mp_ prefixes were added for consistency", 1);
	add_func    (0X7D0317CE,0X7D0317DE);
	set_func_flags(0X7D0317CE,0x400);
	add_func    (0X7D0317DE,0X7D0317E2);
	set_func_flags(0X7D0317DE,0x4c0);
	SetType(0X7D0317DE, "void __cdecl mp_montgomery_deinit(void *a);");
	add_func    (0X7D0317E2,0X7D0317FA);
	set_func_flags(0X7D0317E2,0x400);
	set_frame_size(0X7D0317E2, 0X8, 0, 0);
	add_func    (0X7D0317FA,0X7D03183A);
	set_func_flags(0X7D0317FA,0x400);
	set_frame_size(0X7D0317FA, 0X8, 0, 0);
	add_func    (0X7D03183A,0X7D031854);
	set_func_flags(0X7D03183A,0x400);
	set_frame_size(0X7D03183A, 0X8, 0, 0);
	add_func    (0X7D031854,0X7D031868);
	set_func_flags(0X7D031854,0x400);
	set_frame_size(0X7D031854, 0X8, 0, 0);
	add_func    (0X7D031868,0X7D031882);
	set_func_flags(0X7D031868,0x400);
	SetType(0X7D031868, "int __cdecl mp_read_radix(void *a, const char *b, int radix);");
	set_frame_size(0X7D031868, 0X8, 0, 0);
	add_func    (0X7D031882,0X7D03188C);
	set_func_flags(0X7D031882,0x400);
	add_func    (0X7D03188C,0X7D03189C);
	set_func_flags(0X7D03188C,0x400);
	set_frame_size(0X7D03188C, 0X8, 0, 0);
	add_func    (0X7D03189C,0X7D0318B4);
	set_func_flags(0X7D03189C,0x400);
	set_frame_size(0X7D03189C, 0X8, 0, 0);
	add_func    (0X7D0318B4,0X7D0318F6);
	set_func_flags(0X7D0318B4,0x400);
	set_frame_size(0X7D0318B4, 0X10, 0, 0);
	add_func    (0X7D0318F6,0X7D031912);
	set_func_flags(0X7D0318F6,0x400);
	SetType(0X7D0318F6, "int __cdecl mp_sqrmod(void *a, void *b, void *c);");
	set_frame_size(0X7D0318F6, 0X8, 0, 0);
	add_func    (0X7D031912,0X7D031930);
	set_func_flags(0X7D031912,0x400);
	set_frame_size(0X7D031912, 0X8, 0, 0);
	add_func    (0X7D031930,0X7D031960);
	set_func_flags(0X7D031930,0x400);
	set_frame_size(0X7D031930, 0X10, 0, 0);
	add_func    (0X7D031960,0X7D031970);
	set_func_flags(0X7D031960,0x400);
	set_frame_size(0X7D031960, 0X8, 0, 0);
	add_func    (0X7D031970,0X7D031998);
	set_func_flags(0X7D031970,0x400);
	set_frame_size(0X7D031970, 0X10, 0, 0);
	add_func    (0X7D031998,0X7D0319BE);
	set_func_flags(0X7D031998,0x400);
	set_frame_size(0X7D031998, 0X18, 0, 0);
	add_func    (0X7D0319BE,0X7D0319DE);
	set_func_flags(0X7D0319BE,0x400);
	set_frame_size(0X7D0319BE, 0X8, 0, 0);
	add_func    (0X7D0319DE,0X7D031A2E);
	set_func_flags(0X7D0319DE,0x400);
	set_frame_size(0X7D0319DE, 0X20, 0, 0);
	define_local_var(0X7D0319DE, 0X7D031A2E, "[bp-0X1C]", "a");
	add_func    (0X7D031A2E,0X7D031A76);
	set_func_flags(0X7D031A2E,0x400);
	set_frame_size(0X7D031A2E, 0X18, 0, 0);
	define_local_var(0X7D031A2E, 0X7D031A76, "[bp-0X14]", "a");
	add_func    (0X7D031A76,0X7D031A92);
	set_func_flags(0X7D031A76,0x400);
	set_func_cmt(0X7D031A76,	"LIBRARY ENDING libtomcrypt/mpa_desc.c", 1);
	set_frame_size(0X7D031A76, 0X10, 0, 0);
	add_func    (0X7D031A92,0X7D031D84);
	set_func_flags(0X7D031A92,0x404);
	SetType(0X7D031A92, "int __cdecl der_decode_sequence_ex(const unsigned __int8 *in, unsigned int inlen, struct ltc_asn1_list *list, unsigned int outlen, int ordered);");
	set_func_cmt(0X7D031A92,	"LIBRARY START pk/ans1/der/sequence", 1);
	set_frame_size(0X7D031A92, 0X40, 0, 0);
	define_local_var(0X7D031A92, 0X7D031D84, "[bp-0X30]", "noctets");
	define_local_var(0X7D031A92, 0X7D031D84, "[bp-0X2C]", "outlen");
	define_local_var(0X7D031A92, 0X7D031D84, "[bp+0]", "ordered");
	add_func    (0X7D031D84,0X7D032046);
	set_func_flags(0X7D031D84,0x404);
	SetType(0X7D031D84, "int __cdecl der_encode_sequence_ex(struct ltc_asn1_list *list, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen, int type_of);");
	set_frame_size(0X7D031D84, 0X30, 0, 0);
	define_local_var(0X7D031D84, 0X7D032046, "[bp-0X28]", "outlen");
	define_local_var(0X7D031D84, 0X7D032046, "[bp+0]", "type_of");
	add_func    (0X7D032046,0X7D032128);
	set_func_flags(0X7D032046,0x404);
	SetType(0X7D032046, "int __cdecl der_length_sequence(struct ltc_asn1_list *list, unsigned int inlen, unsigned int *outlen);");
	set_frame_size(0X7D032046, 0X20, 0, 0);
	define_local_var(0X7D032046, 0X7D032128, "[bp-0X1C]", "outlen");
	add_func    (0X7D032128,0X7D03216C);
	set_func_flags(0X7D032128,0x404);
	set_frame_size(0X7D032128, 0X18, 0, 0);
	add_func    (0X7D03216C,0X7D0321A8);
	set_func_flags(0X7D03216C,0x404);
	SetType(0X7D03216C, "int __cdecl der_decode_short_integer(const unsigned __int8 *in, unsigned int inlen, unsigned int *num);");
	set_func_cmt(0X7D03216C,	"LIBRARY pk/ans1/der/short_integer", 1);
	set_frame_size(0X7D03216C, 0X8, 0, 0);
	add_func    (0X7D0321A8,0X7D032234);
	set_func_flags(0X7D0321A8,0x404);
	SetType(0X7D0321A8, "int __cdecl der_encode_short_integer(unsigned int num, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D0321A8, 0X18, 0, 0);
	add_func    (0X7D032234,0X7D032262);
	set_func_flags(0X7D032234,0x404);
	set_frame_size(0X7D032234, 0X8, 0, 0);
	add_func    (0X7D032262,0X7D032414);
	set_func_flags(0X7D032262,0x404);
	SetType(0X7D032262, "int __cdecl der_decode_utctime(const unsigned __int8 *in, unsigned int *inlen, struct ltc_utctime *out);");
	set_func_cmt(0X7D032262,	"LIBRARY pk/ans1/der/utctime", 1);
	set_frame_size(0X7D032262, 0X38, 0, 0);
	define_local_var(0X7D032262, 0X7D032414, "[bp-0X38]", "x");
	add_func    (0X7D032414,0X7D032432);
	set_func_flags(0X7D032414,0x404);
	SetType(0X7D032414, "int __cdecl der_length_utctime(struct ltc_utctime *utctime, unsigned int *outlen);");
	set_frame_size(0X7D032414, 0, 0, 0);
	add_func    (0X7D032432,0X7D03250A);
	set_func_flags(0X7D032432,0x404);
	SetType(0X7D032432, "int __cdecl der_decode_utf8_string(const unsigned __int8 *in, unsigned int inlen, wchar_t *out, unsigned int *outlen);");
	set_func_cmt(0X7D032432,	"LIBRARY pk/ans1/der/utf8", 1);
	set_frame_size(0X7D032432, 0X18, 0, 0);
	add_func    (0X7D03250A,0X7D032528);
	set_func_flags(0X7D03250A,0x404);
	SetType(0X7D03250A, "unsigned int __cdecl der_utf8_charsize(const wchar_t c);");
	set_frame_size(0X7D03250A, 0, 0, 0);
	add_func    (0X7D032528,0X7D0325BE);
	set_func_flags(0X7D032528,0x404);
	SetType(0X7D032528, "int __cdecl der_decode_teletex_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_func_cmt(0X7D032528,	"LIBRARY pk/ans1/der/teletex_string", 1);
	set_frame_size(0X7D032528, 0X18, 0, 0);
	add_func    (0X7D0325BE,0X7D03260A);
	set_func_flags(0X7D0325BE,0x404);
	SetType(0X7D0325BE, "int __cdecl der_length_teletex_string(const unsigned __int8 *octets, unsigned int noctets, unsigned int *outlen);");
	set_frame_size(0X7D0325BE, 0X18, 0, 0);
	add_func    (0X7D03260A,0X7D0326A6);
	set_func_flags(0X7D03260A,0x400);
	SetType(0X7D03260A, "int __cdecl pkcs_1_v1_5_decode(const unsigned __int8 *msg, unsigned int msglen, int block_type, unsigned int modulus_bitlen, unsigned __int8 *out, unsigned int *outlen, int *is_valid);");
	set_func_cmt(0X7D03260A,	"LIBRARY ???", 1);
	set_frame_size(0X7D03260A, 0X18, 0, 0);
	define_local_var(0X7D03260A, 0X7D0326A6, "[bp+0]", "out");
	define_local_var(0X7D03260A, 0X7D0326A6, "[bp+0X4]", "outlen");
	define_local_var(0X7D03260A, 0X7D0326A6, "[bp+0X8]", "is_valid");
	add_func    (0X7D0326A6,0X7D032748);
	set_func_flags(0X7D0326A6,0x404);
	SetType(0X7D0326A6, "int __cdecl der_decode_bit_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_func_cmt(0X7D0326A6,	"LIBRARY pk/ans1/der/bit", 1);
	set_frame_size(0X7D0326A6, 0X14, 0, 0);
	add_func    (0X7D032748,0X7D03280E);
	set_func_flags(0X7D032748,0x404);
	SetType(0X7D032748, "int __cdecl der_encode_bit_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D032748, 0X20, 0, 0);
	define_local_var(0X7D032748, 0X7D03280E, "[bp-0X1C]", "outlen");
	add_func    (0X7D03280E,0X7D032840);
	set_func_flags(0X7D03280E,0x404);
	SetType(0X7D03280E, "int __cdecl der_length_bit_string(unsigned int nbits, unsigned int *outlen);");
	set_frame_size(0X7D03280E, 0, 0, 0);
	add_func    (0X7D032840,0X7D0328F8);
	set_func_flags(0X7D032840,0x404);
	SetType(0X7D032840, "int __cdecl der_decode_raw_bit_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D032840, 0X18, 0, 0);
	add_func    (0X7D0328F8,0X7D0329D6);
	set_func_flags(0X7D0328F8,0x404);
	SetType(0X7D0328F8, "int __cdecl der_encode_raw_bit_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D0328F8, 0X28, 0, 0);
	define_local_var(0X7D0328F8, 0X7D0329D6, "[bp-0X24]", "outlen");
	add_func    (0X7D0329D6,0X7D032A06);
	set_func_flags(0X7D0329D6,0x404);
	SetType(0X7D0329D6, "int __cdecl der_decode_boolean(const unsigned __int8 *in, unsigned int inlen, int *out);");
	set_func_cmt(0X7D0329D6,	"LIBRARY pk/ans1/der/boolean", 1);
	set_frame_size(0X7D0329D6, 0, 0, 0);
	add_func    (0X7D032A06,0X7D032A32);
	set_func_flags(0X7D032A06,0x404);
	SetType(0X7D032A06, "int __cdecl der_encode_boolean(int in, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D032A06, 0, 0, 0);
	add_func    (0X7D032A32,0X7D032A40);
	set_func_flags(0X7D032A32,0x404);
	SetType(0X7D032A32, "int __cdecl der_length_boolean(unsigned int *outlen);");
	set_frame_size(0X7D032A32, 0, 0, 0);
	add_func    (0X7D032A40,0X7D032C44);
	set_func_flags(0X7D032A40,0x404);
	SetType(0X7D032A40, "int __cdecl der_decode_choice(const unsigned __int8 *in, unsigned int *inlen, struct ltc_asn1_list *list, unsigned int outlen);");
	set_func_cmt(0X7D032A40,	"LIBRARY pk/ans1/der/choice", 1);
	set_frame_size(0X7D032A40, 0X30, 0, 0);
	define_local_var(0X7D032A40, 0X7D032C44, "[bp-0X30]", "ordered");
	define_local_var(0X7D032A40, 0X7D032C44, "[bp-0X28]", "noctets");
	define_local_var(0X7D032A40, 0X7D032C44, "[bp-0X24]", "outlen");
	add_func    (0X7D032C44,0X7D032CDA);
	set_func_flags(0X7D032C44,0x404);
	SetType(0X7D032C44, "int __cdecl der_decode_ia5_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_func_cmt(0X7D032C44,	"LIBRARY pk/ans1/der/ia5", 1);
	set_frame_size(0X7D032C44, 0X18, 0, 0);
	add_func    (0X7D032CDA,0X7D032D7C);
	set_func_flags(0X7D032CDA,0x404);
	SetType(0X7D032CDA, "int __cdecl der_encode_ia5_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D032CDA, 0X28, 0, 0);
	define_local_var(0X7D032CDA, 0X7D032D7C, "[bp-0X24]", "outlen");
	add_func    (0X7D032D7C,0X7D032DC8);
	set_func_flags(0X7D032D7C,0x404);
	SetType(0X7D032D7C, "int __cdecl der_length_ia5_string(const unsigned __int8 *octets, unsigned int noctets, unsigned int *outlen);");
	set_frame_size(0X7D032D7C, 0X18, 0, 0);
	add_func    (0X7D032DC8,0X7D032E80);
	set_func_flags(0X7D032DC8,0x404);
	SetType(0X7D032DC8, "int __cdecl der_decode_object_identifier(const unsigned __int8 *in, unsigned int inlen, unsigned int *words, unsigned int *outlen);");
	set_func_cmt(0X7D032DC8,	"LIBRARY pk/ans1/der/object_identifier", 1);
	set_frame_size(0X7D032DC8, 0X18, 0, 0);
	add_func    (0X7D032E80,0X7D032FB8);
	set_func_flags(0X7D032E80,0x404);
	SetType(0X7D032E80, "int __cdecl der_encode_object_identifier(unsigned int *words, unsigned int nwords, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D032E80, 0X38, 0, 0);
	define_local_var(0X7D032E80, 0X7D032FB8, "[bp-0X2C]", "outlen");
	add_func    (0X7D032FB8,0X7D032FC6);
	set_func_flags(0X7D032FB8,0x404);
	SetType(0X7D032FB8, "unsigned int __cdecl der_object_identifier_bits(unsigned int x);");
	set_frame_size(0X7D032FB8, 0, 0, 0);
	add_func    (0X7D032FC6,0X7D033060);
	set_func_flags(0X7D032FC6,0x404);
	SetType(0X7D032FC6, "int __cdecl der_length_object_identifier(unsigned int *words, unsigned int nwords, unsigned int *outlen);");
	set_frame_size(0X7D032FC6, 0X28, 0, 0);
	add_func    (0X7D033060,0X7D0330D8);
	set_func_flags(0X7D033060,0x404);
	SetType(0X7D033060, "int __cdecl der_decode_octet_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_func_cmt(0X7D033060,	"LIBRARY pk/ans1/der/octet", 1);
	set_frame_size(0X7D033060, 0X14, 0, 0);
	add_func    (0X7D0330D8,0X7D03316A);
	set_func_flags(0X7D0330D8,0x404);
	SetType(0X7D0330D8, "int __cdecl der_encode_octet_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D0330D8, 0X20, 0, 0);
	define_local_var(0X7D0330D8, 0X7D03316A, "[bp-0X1C]", "outlen");
	add_func    (0X7D03316A,0X7D033198);
	set_func_flags(0X7D03316A,0x404);
	SetType(0X7D03316A, "int __cdecl der_length_octet_string(unsigned int noctets, unsigned int *outlen);");
	set_frame_size(0X7D03316A, 0, 0, 0);
	add_func    (0X7D033198,0X7D03322E);
	set_func_flags(0X7D033198,0x404);
	SetType(0X7D033198, "int __cdecl der_decode_printable_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_func_cmt(0X7D033198,	"LIBRARY pk/ans1/der/printable_string", 1);
	set_frame_size(0X7D033198, 0X18, 0, 0);
	add_func    (0X7D03322E,0X7D0332D0);
	set_func_flags(0X7D03322E,0x404);
	SetType(0X7D03322E, "int __cdecl der_encode_printable_string(const unsigned __int8 *in, unsigned int inlen, unsigned __int8 *out, unsigned int *outlen);");
	set_frame_size(0X7D03322E, 0X28, 0, 0);
	add_func    (0X7D0332D0,0X7D03331C);
	set_func_flags(0X7D0332D0,0x404);
	set_func_cmt(0X7D0332D0,	"LIBRARY ENDING pk/ans1/der/printable_string", 1);
	set_frame_size(0X7D0332D0, 0X18, 0, 0);
	add_func    (0X7D03331C,0X7D033336);
	set_func_flags(0X7D03331C,0x404);
	SetType(0X7D03331C, "void __cdecl _mpa_set_unused_digits_to_zero(struct mpa_num_base *n);");
	set_func_cmt(0X7D03331C,	"LIBRARY START libmpa", 1);
	set_frame_size(0X7D03331C, 0, 0, 0);
	add_func    (0X7D033336,0X7D03334C);
	set_func_flags(0X7D033336,0x404);
	SetType(0X7D033336, "void __cdecl mpa_wipe(struct mpa_num_base *var);");
	set_frame_size(0X7D033336, 0X8, 0, 0);
	add_func    (0X7D03334C,0X7D03336E);
	set_func_flags(0X7D03334C,0x404);
	SetType(0X7D03334C, "void __cdecl mpa_copy(struct mpa_num_base *dest, const struct mpa_num_base *src);");
	set_frame_size(0X7D03334C, 0X10, 0, 0);
	add_func    (0X7D03336E,0X7D033398);
	set_func_flags(0X7D03336E,0x404);
	SetType(0X7D03336E, "int __cdecl mpa_highest_bit_index(const struct mpa_num_base *src);");
	set_frame_size(0X7D03336E, 0, 0, 0);
	add_func    (0X7D033398,0X7D0333C4);
	set_func_flags(0X7D033398,0x404);
	SetType(0X7D033398, "uint32_t __cdecl mpa_get_bit(const struct mpa_num_base *src, uint32_t idx);");
	set_frame_size(0X7D033398, 0, 0, 0);
	add_func    (0X7D0333C4,0X7D0333CC);
	set_func_flags(0X7D0333C4,0x404);
	SetType(0X7D0333C4, "int __cdecl mpa_parity(const struct mpa_num_base *src);");
	set_frame_size(0X7D0333C4, 0, 0, 0);
	add_func    (0X7D0333CC,0X7D03342C);
	set_func_flags(0X7D0333CC,0x404);
	set_frame_size(0X7D0333CC, 0X18, 0, 0);
	add_func    (0X7D03342C,0X7D03348A);
	set_func_flags(0X7D03342C,0x404);
	set_frame_size(0X7D03342C, 0X10, 0, 0);
	add_func    (0X7D03348A,0X7D033532);
	set_func_flags(0X7D03348A,0x404);
	set_frame_size(0X7D03348A, 0X30, 0, 0);
	add_func    (0X7D033532,0X7D033570);
	set_func_flags(0X7D033532,0x404);
	SetType(0X7D033532, "void __cdecl mpa_montgomery_mul(struct mpa_num_base *dest, struct mpa_num_base *op1, struct mpa_num_base *op2, struct mpa_num_base *n, uint32_t n_inv, uint8_t *pool);");
	set_frame_size(0X7D033532, 0X30, 0, 0);
	define_local_var(0X7D033532, 0X7D033570, "[bp-0X24]", "src");
	define_local_var(0X7D033532, 0X7D033570, "[bp+0]", "n_inv");
	define_local_var(0X7D033532, 0X7D033570, "[bp+0X4]", "pool");
	add_func    (0X7D033570,0X7D03358C);
	set_func_flags(0X7D033570,0x404);
	SetType(0X7D033570, "void __cdecl mpa_set_S32(struct mpa_num_base *dest, int32_t short_val);");
	set_frame_size(0X7D033570, 0, 0, 0);
	add_func    (0X7D03358C,0X7D033598);
	set_func_flags(0X7D03358C,0x404);
	SetType(0X7D03358C, "void __cdecl mpa_set_word(struct mpa_num_base *dest, uint32_t src);");
	set_frame_size(0X7D03358C, 0, 0, 0);
	add_func    (0X7D033598,0X7D0335A4);
	set_func_flags(0X7D033598,0x404);
	SetType(0X7D033598, "uint32_t __cdecl mpa_get_word(struct mpa_num_base *src);");
	set_frame_size(0X7D033598, 0, 0, 0);
	add_func    (0X7D0335A4,0X7D033608);
	set_func_flags(0X7D0335A4,0x404);
	SetType(0X7D0335A4, "int64_t __cdecl _mpa_soft_div(int64_t num, uint64_t den_in_rem);");
	set_func_cmt(0X7D0335A4,	"unusual call convention - 2nd parameter are two params combined", 1);
	set_frame_size(0X7D0335A4, 0X18, 0, 0);
	add_func    (0X7D033608,0X7D0336CC);
	set_func_flags(0X7D033608,0x404);
	SetType(0X7D033608, "void __cdecl _mpa_div_q_r_internal_word(struct mpa_num_base *q, struct mpa_num_base *r, const struct mpa_num_base *op1, const uint32_t op2);");
	set_frame_size(0X7D033608, 0X38, 0, 0);
	define_local_var(0X7D033608, 0X7D0336CC, "[bp-0X2C]", "rem");
	add_func    (0X7D0336CC,0X7D033B12);
	set_func_flags(0X7D0336CC,0x404);
	SetType(0X7D0336CC, "void __cdecl _mpa_div_q_r(struct mpa_num_base *q, struct mpa_num_base *r, const struct mpa_num_base *op1, const struct mpa_num_base *op2, uint8_t *pool);");
	set_frame_size(0X7D0336CC, 0X68, 0, 0);
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X64]", "steps");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X60]", "op1");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X48]", "carry");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X44]", "p");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X40]", "b");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X38]", "sum");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X34]", "op2");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X30]", "dest");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp-0X2C]", "src");
	define_local_var(0X7D0336CC, 0X7D033B12, "[bp+0]", "pool");
	add_func    (0X7D033B12,0X7D033BA0);
	set_func_flags(0X7D033B12,0x404);
	SetType(0X7D033B12, "void __cdecl mpa_div(struct mpa_num_base *q, struct mpa_num_base *r, const struct mpa_num_base *op1, const struct mpa_num_base *op2, uint8_t *pool);");
	set_frame_size(0X7D033B12, 0X30, 0, 0);
	define_local_var(0X7D033B12, 0X7D033BA0, "[bp-0X30]", "pool");
	define_local_var(0X7D033B12, 0X7D033BA0, "[bp-0X28]", "src");
	define_local_var(0X7D033B12, 0X7D033BA0, "[bp-0X24]", "r");
	add_func    (0X7D033BA0,0X7D033BEE);
	set_func_flags(0X7D033BA0,0x404);
	SetType(0X7D033BA0, "void __cdecl _mpa_divby2(struct mpa_num_base *op);");
	set_frame_size(0X7D033BA0, 0X14, 0, 0);
	add_func    (0X7D033BEE,0X7D033CC8);
	set_func_flags(0X7D033BEE,0x404);
	SetType(0X7D033BEE, "void __cdecl _mpa_gcd(struct mpa_num_base *gcd, const struct mpa_num_base *x_in, const struct mpa_num_base *y_in, uint8_t *pool);");
	set_func_cmt(0X7D033BEE,	"Computes the gcd of x and y where y <= x.\nDestination variable gcd must be allocated.\n", 1);
	set_frame_size(0X7D033BEE, 0X28, 0, 0);
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp-0X24]", "x");
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp-0X20]", "y");
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp-0X1C]", "t");
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp+0]", "y_in");
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp+0X4]", "pool");
	define_local_var(0X7D033BEE, 0X7D033CC8, "[bp+0X8]", "zz");
	add_func    (0X7D033CC8,0X7D033EEC);
	set_func_flags(0X7D033CC8,0x404);
	SetType(0X7D033CC8, "void __cdecl _mpa_egcd(struct mpa_num_base *gcd, struct mpa_num_base *a, struct mpa_num_base *b, const struct mpa_num_base *x_in, const struct mpa_num_base *y_in, uint8_t pool);");
	set_frame_size(0X7D033CC8, 0X40, 0, 0);
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X3C]", "dest");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X38]", "var");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X34]", "op2");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X2C]", "src");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X28]", "op");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp-0X24]", "op1");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp+0]", "y_in");
	define_local_var(0X7D033CC8, 0X7D033EEC, "[bp+0X4]", "pool");
	add_func    (0X7D033EEC,0X7D033F8A);
	set_func_flags(0X7D033EEC,0x404);
	SetType(0X7D033EEC, "void __cdecl mpa_gcd(struct mpa_num_base *dest, const struct mpa_num_base *src1, const struct mpa_num_base *src2, uint8_t *pool);");
	set_frame_size(0X7D033EEC, 0X20, 0, 0);
	add_func    (0X7D033F8A,0X7D0340C2);
	set_func_flags(0X7D033F8A,0x404);
	SetType(0X7D033F8A, "void __cdecl mpa_extended_gcd(struct mpa_num_base *gcd, struct mpa_num_base *dest1, struct mpa_num_base *dest2, const struct mpa_num_base *src1, const struct mpa_num_base *src2, uint8_t *pool);");
	set_frame_size(0X7D033F8A, 0X40, 0, 0);
	define_local_var(0X7D033F8A, 0X7D0340C2, "[bp-0X2C]", "src");
	define_local_var(0X7D033F8A, 0X7D0340C2, "[bp+0]", "op2");
	define_local_var(0X7D033F8A, 0X7D0340C2, "[bp+0X4]", "pool");
	add_func    (0X7D0340C2,0X7D0340D8);
	set_func_flags(0X7D0340C2,0x404);
	SetType(0X7D0340C2, "void __cdecl mpa_init_scratch_mem_sync(uint8_t *pool, size_t size, uint32_t bn_bits, void *get, void *put, struct mpa_scratch_mem_sync *sync);");
	set_frame_size(0X7D0340C2, 0, 0, 0);
	define_local_var(0X7D0340C2, 0X7D0340D8, "[bp+0]", "put");
	define_local_var(0X7D0340C2, 0X7D0340D8, "[bp+0X4]", "sync");
	add_func    (0X7D0340D8,0X7D03414E);
	set_func_flags(0X7D0340D8,0x404);
	set_frame_size(0X7D0340D8, 0X18, 0, 0);
	add_func    (0X7D03414E,0X7D03415A);
	set_func_flags(0X7D03414E,0x404);
	SetType(0X7D03414E, "struct mpa_num_base *__cdecl mpa_alloc_static_temp_var(struct mpa_num_base **var, uint8_t *pool);");
	set_frame_size(0X7D03414E, 0, 0, 0);
	add_func    (0X7D03415A,0X7D034188);
	set_func_flags(0X7D03415A,0x404);
	SetType(0X7D03415A, "void __cdecl mpa_free_static_temp_var(struct mpa_num_base **var, uint8_t *pool);");
	set_frame_size(0X7D03415A, 0X8, 0, 0);
	add_func    (0X7D034188,0X7D034198);
	set_func_flags(0X7D034188,0x404);
	SetType(0X7D034188, "void __cdecl _mpa_mul_add_word(uint32_t a, uint32_t b, uint32_t *p, uint32_t *carry);");
	set_frame_size(0X7D034188, 0XC, 0, 0);
	add_func    (0X7D034198,0X7D0341B0);
	set_func_flags(0X7D034198,0x404);
	SetType(0X7D034198, "void __cdecl _mpa_mul_add_word_cum(uint32_t a, uint32_t b, uint32_t *p, uint32_t *carry);");
	set_frame_size(0X7D034198, 0X10, 0, 0);
	add_func    (0X7D0341B0,0X7D034206);
	set_func_flags(0X7D0341B0,0x404);
	SetType(0X7D0341B0, "void __cdecl _mpa_abs_mul_word(struct mpa_num_base *dest, const struct mpa_num_base *op1, uint32_t op2);");
	set_frame_size(0X7D0341B0, 0X20, 0, 0);
	add_func    (0X7D034206,0X7D03429E);
	set_func_flags(0X7D034206,0x404);
	SetType(0X7D034206, "void __cdecl _mpa_abs_mul(struct mpa_num_base *dest, const struct mpa_num_base *op1, const struct mpa_num_base *op2);");
	set_frame_size(0X7D034206, 0X38, 0, 0);
	add_func    (0X7D03429E,0X7D034326);
	set_func_flags(0X7D03429E,0x404);
	SetType(0X7D03429E, "void __cdecl mpa_mul(struct mpa_num_base *dest, const struct mpa_num_base *op1, const struct mpa_num_base *op2, uint8_t *pool);");
	set_frame_size(0X7D03429E, 0X20, 0, 0);
	define_local_var(0X7D03429E, 0X7D034326, "[bp-0X1C]", "src");
	add_func    (0X7D034326,0X7D034392);
	set_func_flags(0X7D034326,0x404);
	SetType(0X7D034326, "void __cdecl mpa_mul_word(struct mpa_num_base *dest, const struct mpa_num_base *op1, uint32_t op2, uint8_t *pool);");
	set_frame_size(0X7D034326, 0X28, 0, 0);
	define_local_var(0X7D034326, 0X7D034392, "[bp-0X24]", "src");
	add_func    (0X7D034392,0X7D0343E6);
	set_func_flags(0X7D034392,0x404);
	SetType(0X7D034392, "void __cdecl _mpa_shift_words_left(struct mpa_num_base *op, uint32_t q);");
	set_frame_size(0X7D034392, 0X18, 0, 0);
	add_func    (0X7D0343E6,0X7D03442C);
	set_func_flags(0X7D0343E6,0x404);
	SetType(0X7D0343E6, "void __cdecl _mpa_shift_words_right(struct mpa_num_base *op, uint32_t q);");
	set_frame_size(0X7D0343E6, 0X14, 0, 0);
	add_func    (0X7D03442C,0X7D034542);
	set_func_flags(0X7D03442C,0x404);
	SetType(0X7D03442C, "void __cdecl mpa_shift_left(struct mpa_num_base *dest, struct mpa_num_base *src, uint32_t steps);");
	set_frame_size(0X7D03442C, 0X20, 0, 0);
	add_func    (0X7D034542,0X7D03463C);
	set_func_flags(0X7D034542,0x404);
	SetType(0X7D034542, "void __cdecl mpa_shift_right(struct mpa_num_base *dest, struct mpa_num_base *src, uint32_t steps);");
	set_frame_size(0X7D034542, 0X30, 0, 0);
	add_func    (0X7D03463C,0X7D034654);
	set_func_flags(0X7D03463C,0x404);
	SetType(0X7D03463C, "void __cdecl _mpa_full_adder(uint32_t a, uint32_t b, uint32_t *sum, uint32_t *carry);");
	set_frame_size(0X7D03463C, 0X14, 0, 0);
	add_func    (0X7D034654,0X7D03466C);
	set_func_flags(0X7D034654,0x404);
	set_frame_size(0X7D034654, 0X8, 0, 0);
	add_func    (0X7D03466C,0X7D03471C);
	set_func_flags(0X7D03466C,0x404);
	set_frame_size(0X7D03466C, 0X28, 0, 0);
	add_func    (0X7D03471C,0X7D0347A6);
	set_func_flags(0X7D03471C,0x414);
	SetType(0X7D03471C, "void __cdecl _mpa_abs_sub(uint32_t *diff, uint32_t *diff_size, const uint32_t *op1, uint32_t op1_size, const uint32_t *op2, uint32_t op2_size);");
	set_frame_size(0X7D03471C, 0X8, 32, 0);
	define_local_var(0X7D03471C, 0X7D0347A6, "[bp+0X20]", "op2");
	define_local_var(0X7D03471C, 0X7D0347A6, "[bp+0X24]", "op2_size");
	add_func    (0X7D0347A6,0X7D0348AA);
	set_func_flags(0X7D0347A6,0x404);
	SetType(0X7D0347A6, "void __cdecl mpa_add(struct mpa_num_base *dest, const struct mpa_num_base *op1, const struct mpa_num_base *op2, uint8_t *pool);");
	set_frame_size(0X7D0347A6, 0X40, 0, 0);
	define_local_var(0X7D0347A6, 0X7D0348AA, "[bp-0X2C]", "src");
	add_func    (0X7D0348AA,0X7D0349B4);
	set_func_flags(0X7D0348AA,0x404);
	SetType(0X7D0348AA, "void __cdecl mpa_sub(struct mpa_num_base *dest, const struct mpa_num_base *op1, const struct mpa_num_base *op2, uint8_t *pool);");
	set_frame_size(0X7D0348AA, 0X40, 0, 0);
	define_local_var(0X7D0348AA, 0X7D0349B4, "[bp-0X3C]", "op2_size");
	define_local_var(0X7D0348AA, 0X7D0349B4, "[bp-0X38]", "op2");
	define_local_var(0X7D0348AA, 0X7D0349B4, "[bp-0X2C]", "src");
	add_func    (0X7D0349B4,0X7D0349C4);
	set_func_flags(0X7D0349B4,0x404);
	SetType(0X7D0349B4, "void __cdecl mpa_neg(struct mpa_num_base *dest, const struct mpa_num_base *src);");
	set_frame_size(0X7D0349B4, 0X8, 0, 0);
	add_func    (0X7D0349C4,0X7D034A90);
	set_func_flags(0X7D0349C4,0x404);
	SetType(0X7D0349C4, "void __cdecl mpa_add_word(struct mpa_num_base *dest, const struct mpa_num_base *op1, uint32_t op2, uint8_t *pool);");
	set_frame_size(0X7D0349C4, 0X38, 0, 0);
	define_local_var(0X7D0349C4, 0X7D034A90, "[bp-0X38]", "op2");
	define_local_var(0X7D0349C4, 0X7D034A90, "[bp-0X34]", "op2_size");
	define_local_var(0X7D0349C4, 0X7D034A90, "[bp-0X24]", "src");
	add_func    (0X7D034A90,0X7D034B5A);
	set_func_flags(0X7D034A90,0x404);
	SetType(0X7D034A90, "void __cdecl mpa_sub_word(struct mpa_num_base *dest, const struct mpa_num_base *op1, uint32_t op2, uint8_t *pool);");
	set_frame_size(0X7D034A90, 0X38, 0, 0);
	define_local_var(0X7D034A90, 0X7D034B5A, "[bp-0X38]", "op2");
	define_local_var(0X7D034A90, 0X7D034B5A, "[bp-0X34]", "op2_size");
	define_local_var(0X7D034A90, 0X7D034B5A, "[bp-0X24]", "src");
	add_func    (0X7D034B5A,0X7D034BB6);
	set_func_flags(0X7D034B5A,0x404);
	SetType(0X7D034B5A, "int __cdecl _mpa_abs_cmp(const struct mpa_num_base *op1, const struct mpa_num_base *op2);");
	set_frame_size(0X7D034B5A, 0X10, 0, 0);
	add_func    (0X7D034BB6,0X7D034BC6);
	set_func_flags(0X7D034BB6,0x404);
	SetType(0X7D034BB6, "int __cdecl _mpa_abs_greater_than(const struct mpa_num_base *op1, const struct mpa_num_base *op2);");
	set_frame_size(0X7D034BB6, 0X8, 0, 0);
	add_func    (0X7D034BC6,0X7D034C0A);
	set_func_flags(0X7D034BC6,0x404);
	SetType(0X7D034BC6, "int32_t __cdecl mpa_cmp(const struct mpa_num_base *op1, const struct mpa_num_base *op2);");
	set_frame_size(0X7D034BC6, 0X10, 0, 0);
	add_func    (0X7D034C0A,0X7D034C60);
	set_func_flags(0X7D034C0A,0x404);
	SetType(0X7D034C0A, "int32_t __cdecl mpa_cmp_short(const struct mpa_num_base *op1, int32_t op2);");
	set_frame_size(0X7D034C0A, 0X8, 0, 0);
	add_func    (0X7D034C60,0X7D034C72);
	set_func_flags(0X7D034C60,0x404);
	SetType(0X7D034C60, "void __cdecl mpa_init_static(struct mpa_num_base *src, uint32_t len);");
	set_frame_size(0X7D034C60, 0, 0, 0);
	add_func    (0X7D034C72,0X7D034CAA);
	set_func_flags(0X7D034C72,0x404);
	SetType(0X7D034C72, "void __cdecl mpa_init_static_fmm_context(struct mpa_fmm_context_base *context, uint32_t len);");
	set_frame_size(0X7D034C72, 0X10, 0, 0);
	add_func    (0X7D034CAA,0X7D034CD4);
	set_func_flags(0X7D034CAA,0x404);
	SetType(0X7D034CAA, "void __cdecl _mpa_word_to_hexstr(char *str, uint32_t w, int caseing);");
	set_frame_size(0X7D034CAA, 0X8, 0, 0);
	add_func    (0X7D034CD4,0X7D034D70);
	set_func_flags(0X7D034CD4,0x404);
	SetType(0X7D034CD4, "int __cdecl _mpa_mpanum_to_hexstr(char *str, int caseing, const struct mpa_num_base *n);");
	set_frame_size(0X7D034CD4, 0X28, 0, 0);
	add_func    (0X7D034D70,0X7D034D92);
	set_func_flags(0X7D034D70,0x404);
	SetType(0X7D034D70, "int __cdecl _mpa_isspace(char c);");
	set_frame_size(0X7D034D70, 0, 0, 0);
	add_func    (0X7D034D92,0X7D034DBE);
	set_func_flags(0X7D034D92,0x404);
	SetType(0X7D034D92, "char *__cdecl mpa_get_str(char *str, int mode, const struct mpa_num_base *n);");
	set_frame_size(0X7D034D92, 0X8, 0, 0);
	add_func    (0X7D034DBE,0X7D034E52);
	set_func_flags(0X7D034DBE,0x404);
	SetType(0X7D034DBE, "int __cdecl mpa_set_oct_str(struct mpa_num_base *dest, const uint8_t *buffer, size_t buffer_len, bool negative);");
	set_frame_size(0X7D034DBE, 0X20, 0, 0);
	add_func    (0X7D034E52,0X7D034F2A);
	set_func_flags(0X7D034E52,0x404);
	SetType(0X7D034E52, "int __cdecl mpa_get_oct_str(uint8_t *buffer, size_t *buffer_len, const struct mpa_num_base *n);");
	set_frame_size(0X7D034E52, 0X20, 0, 0);
	add_func    (0X7D034F2A,0X7D034F44);
	set_func_flags(0X7D034F2A,0x404);
	SetType(0X7D034F2A, "void __cdecl mpa_mod(struct mpa_num_base *dest, const struct mpa_num_base *op, const struct mpa_num_base *n, uint8_t *pool);");
	set_frame_size(0X7D034F2A, 0X18, 0, 0);
	define_local_var(0X7D034F2A, 0X7D034F44, "[bp-0X18]", "pool");
	add_func    (0X7D034F44,0X7D034F82);
	set_func_flags(0X7D034F44,0x404);
	SetType(0X7D034F44, "void __cdecl mpa_mul_mod(struct mpa_num_base *dest, const struct mpa_num_base *op1, const struct mpa_num_base *op2, const struct mpa_num_base *n, uint8_t *pool);");
	set_frame_size(0X7D034F44, 0X28, 0, 0);
	define_local_var(0X7D034F44, 0X7D034F82, "[bp-0X1C]", "dest");
	define_local_var(0X7D034F44, 0X7D034F82, "[bp+0]", "pool");
	add_func    (0X7D034F82,0X7D035026);
	set_func_flags(0X7D034F82,0x404);
	SetType(0X7D034F82, "int __cdecl mpa_inv_mod(struct mpa_num_base *dest, const struct mpa_num_base *op, const struct mpa_num_base *n, uint8_t *pool);");
	set_func_cmt(0X7D034F82,	"LIBRARY ENDING libmpa", 1);
	set_frame_size(0X7D034F82, 0X28, 0, 0);
	define_local_var(0X7D034F82, 0X7D035026, "[bp-0X28]", "src2");
	define_local_var(0X7D034F82, 0X7D035026, "[bp-0X24]", "pool");
	define_local_var(0X7D034F82, 0X7D035026, "[bp-0X20]", "op1");
	define_local_var(0X7D034F82, 0X7D035026, "[bp-0X1C]", "dest1");
	add_func    (0X7D035026,0X7D03504E);
	set_func_flags(0X7D035026,0x404);
	SetType(0X7D035026, "void *__cdecl bgetz(unsigned int size);");
	set_func_cmt(0X7D035026,	"LIBRARY libutils/isoc\n\nBGETZ  --  Allocate a buffer and clear its contents to zero.  We clear  the  entire  contents  of  the buffer to zero, not just the region requested by the caller.", 1);
	set_frame_size(0X7D035026, 0X8, 0, 0);
	add_func    (0X7D03504E,0X7D035080);
	set_func_flags(0X7D03504E,0x404);
	SetType(0X7D03504E, "void *__cdecl realloc_unlocked(void *ptr, size_t size);");
	set_frame_size(0X7D03504E, 0X10, 0, 0);
	add_func    (0X7D035080,0X7D03509E);
	set_func_flags(0X7D035080,0x404);
	SetType(0X7D035080, "void *__cdecl malloc(size_t size);");
	set_frame_size(0X7D035080, 0X8, 0, 0);
	add_func    (0X7D03509E,0X7D0350B6);
	set_func_flags(0X7D03509E,0x404);
	SetType(0X7D03509E, "void __cdecl free(void *ptr);");
	set_frame_size(0X7D03509E, 0X8, 0, 0);
	add_func    (0X7D0350B6,0X7D0350E4);
	set_func_flags(0X7D0350B6,0x404);
	SetType(0X7D0350B6, "void *__cdecl calloc(size_t nmemb, size_t size);");
	set_frame_size(0X7D0350B6, 0X10, 0, 0);
	add_func    (0X7D0350E4,0X7D035106);
	set_func_flags(0X7D0350E4,0x404);
	SetType(0X7D0350E4, "void *__cdecl realloc(void *ptr, size_t size);");
	set_frame_size(0X7D0350E4, 0X10, 0, 0);
	add_func    (0X7D035106,0X7D035136);
	set_func_flags(0X7D035106,0x404);
	SetType(0X7D035106, "void __cdecl swapfunc(char *a, char *b, int n, int swaptype);");
	set_frame_size(0X7D035106, 0XC, 0, 0);
	add_func    (0X7D035136,0X7D03517A);
	set_func_flags(0X7D035136,0x404);
	SetType(0X7D035136, "char *__cdecl med3(char *a, char *b, char *c, int (__cdecl *cmp)(const void *, const void *));");
	set_frame_size(0X7D035136, 0X18, 0, 0);
	add_func    (0X7D03517A,0X7D0353F4);
	set_func_flags(0X7D03517A,0x404);
	SetType(0X7D03517A, "void __cdecl qsort(void *base, size_t nmemb, size_t size, int (__cdecl *compar)(const void *, const void *));");
	set_frame_size(0X7D03517A, 0X38, 0, 0);
	define_local_var(0X7D03517A, 0X7D0353F4, "[bp-0X34]", "a");
	define_local_var(0X7D03517A, 0X7D0353F4, "[bp-0X30]", "compar");
	add_func    (0X7D0353F4,0X7D035412);
	set_func_flags(0X7D0353F4,0x404);
	SetType(0X7D0353F4, "int __cdecl memcmp(void *m1, void *m2, size_t n);");
	set_frame_size(0X7D0353F4, 0XC, 0, 0);
	add_func    (0X7D035412,0X7D035424);
	set_func_flags(0X7D035412,0x404);
	SetType(0X7D035412, "void *__cdecl memcpy(void *destination, const void *source, size_t num);");
	set_frame_size(0X7D035412, 0X8, 0, 0);
	add_func    (0X7D035424,0X7D035458);
	set_func_flags(0X7D035424,0x404);
	SetType(0X7D035424, "void *__cdecl memmove(void *ptr1, void *ptr2, int len);");
	set_frame_size(0X7D035424, 0X8, 0, 0);
	add_func    (0X7D035458,0X7D035468);
	set_func_flags(0X7D035458,0x404);
	set_frame_size(0X7D035458, 0, 0, 0);
	add_func    (0X7D035468,0X7D035482);
	set_func_flags(0X7D035468,0x404);
	set_frame_size(0X7D035468, 0X8, 0, 0);
	add_func    (0X7D035482,0X7D035492);
	set_func_flags(0X7D035482,0x404);
	set_func_cmt(0X7D035482,	"LIBRARY ENDING libutils/isoc", 1);
	set_frame_size(0X7D035482, 0, 0, 0);
	add_func    (0X7D035492,0X7D03550A);
	set_func_flags(0X7D035492,0x400);
	set_frame_size(0X7D035492, 0X1C, 0, 0);
	add_func    (0X7D03550A,0X7D0355DC);
	set_func_flags(0X7D03550A,0x400);
	set_frame_size(0X7D03550A, 0X20, 0, 0);
	add_func    (0X7D0355DC,0X7D035606);
	set_func_flags(0X7D0355DC,0x400);
	SetType(0X7D0355DC, "__int64 __cdecl _aeabi_llsr(__int64 a, int shift);");
	set_frame_size(0X7D0355DC, 0X8, 0, 0);
	add_func    (0X7D035606,0X7D035630);
	set_func_flags(0X7D035606,0x404);
	SetType(0X7D035606, "size_t __cdecl strlcpy(char *dst, const char *src, size_t siz);");
	set_func_cmt(0X7D035606,	"LIBRARY libutils/ext", 1);
	set_frame_size(0X7D035606, 0X8, 0, 0);
	add_func    (0X7D035630,0X7D035658);
	set_func_flags(0X7D035630,0x404);
	SetType(0X7D035630, "int __cdecl buf_compare_ct(const void *s1, const void *s2, size_t n);");
	set_frame_size(0X7D035630, 0X10, 0, 0);
	add_func    (0X7D035658,0X7D035666);
	set_func_flags(0X7D035658,0x404);
	SetType(0X7D035658, "int __cdecl vsnprintk(char *bf, size_t size, const char *fmt, va_list ap, bool ext);");
	set_frame_size(0X7D035658, 0X10, 0, 0);
	define_local_var(0X7D035658, 0X7D035666, "[bp-0X10]", "ap");
	define_local_var(0X7D035658, 0X7D035666, "[bp+0]", "ext");
	add_func    (0X7D035666,0X7D035680);
	set_func_flags(0X7D035666,0x404);
	SetType(0X7D035666, "int snprintk(char *bf, size_t size, const char *fmt, ...);");
	set_func_cmt(0X7D035666,	"LIBRARY ENDING libutils/ext", 1);
	set_frame_size(0X7D035666, 0X18, 0, 0);
	define_local_var(0X7D035666, 0X7D035680, "[bp-0X8]", "varg_r2");
	define_local_var(0X7D035666, 0X7D035680, "[bp-0X4]", "varg_r3");
	add_func    (0X7D035680,0X7D03569C);
	set_func_flags(0X7D035680,0x404);
	SetType(0X7D035680, "void *__cdecl memchr(void *src, int c, size_t length);");
	set_func_cmt(0X7D035680,	"LIBRARY ITEM libutils/isoc", 1);
	set_frame_size(0X7D035680, 0X8, 0, 0);
	add_func    (0X7D0356A0,0X7D0356A8);
	set_func_flags(0X7D0356A0,0x480);
	add_func    (0X7D0356A8,0X7D0356AC);
	set_func_flags(0X7D0356A8,0x4c0);
	add_func    (0X7D0356B0,0X7D0356B8);
	set_func_flags(0X7D0356B0,0x484);
	set_frame_size(0X7D0356B0, 0, 0, 0);
	add_func    (0X7D0356B8,0X7D0356C0);
	set_func_flags(0X7D0356B8,0x480);
	add_func    (0X7D0356C0,0X7D0356C8);
	set_func_flags(0X7D0356C0,0x480);
	SetType(0X7D0356C0, "void __cdecl j_thread_resume(struct thread_ctx_regs *regs);");
	add_func    (0X7D0356C8,0X7D0356D0);
	set_func_flags(0X7D0356C8,0x484);
	set_frame_size(0X7D0356C8, 0, 0, 0);
	add_func    (0X7D0356D0,0X7D0356D8);
	set_func_flags(0X7D0356D0,0x484);
	SetType(0X7D0356D0, "void j_thread_init_vbar(void);");
	set_frame_size(0X7D0356D0, 0, 0, 0);
	add_func    (0X7D0356D8,0X7D0356E0);
	set_func_flags(0X7D0356D8,0x484);
	SetType(0X7D0356D8, "uint32_t __cdecl j__thread_enter_user_mode(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int user_sp, unsigned int user_func, unsigned int spsr, uint32_t *exit_status0, uint32_t *exit_status1);");
	set_frame_size(0X7D0356D8, 0, 0, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
	Functions_1();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X7D000000,"T",0,3);
	split_sreg_range(0X7D000004,"T",0,3);
	split_sreg_range(0X7D000008,"T",0,3);
	split_sreg_range(0X7D00000C,"T",0,3);
	split_sreg_range(0X7D000010,"T",0,3);
	split_sreg_range(0X7D000014,"T",0,3);
	split_sreg_range(0X7D000018,"T",0,3);
	split_sreg_range(0X7D00001C,"T",0,3);
	split_sreg_range(0X7D000020,"T",0,3);
	split_sreg_range(0X7D000024,"T",0,3);
	split_sreg_range(0X7D000028,"T",0,3);
	split_sreg_range(0X7D00002C,"T",0,3);
	split_sreg_range(0X7D000030,"T",0,3);
	split_sreg_range(0X7D000034,"T",0,3);
	split_sreg_range(0X7D00007C,"T",0,3);
	split_sreg_range(0X7D00011C,"T",0,3);
	split_sreg_range(0X7D000120,"T",0,3);
	split_sreg_range(0X7D000128,"T",0,3);
	split_sreg_range(0X7D000198,"T",0,3);
	split_sreg_range(0X7D0001E0,"T",0,3);
	split_sreg_range(0X7D0001F8,"T",0,3);
	split_sreg_range(0X7D0001FC,"T",0,3);
	split_sreg_range(0X7D000214,"T",0,3);
	split_sreg_range(0X7D000218,"T",0,3);
	split_sreg_range(0X7D000234,"T",0,3);
	split_sreg_range(0X7D000238,"T",0,3);
	split_sreg_range(0X7D000250,"T",0,3);
	split_sreg_range(0X7D000254,"T",0,3);
	split_sreg_range(0X7D00026C,"T",0,3);
	split_sreg_range(0X7D000270,"T",0,3);
	split_sreg_range(0X7D000288,"T",0,3);
	split_sreg_range(0X7D00028C,"T",0,3);
	split_sreg_range(0X7D0002A4,"T",0,3);
	split_sreg_range(0X7D0002A8,"T",0,3);
	split_sreg_range(0X7D0002C0,"T",0,3);
	split_sreg_range(0X7D0002C4,"T",0,3);
	split_sreg_range(0X7D0002DC,"T",0,3);
	split_sreg_range(0X7D0002E0,"T",0,3);
	split_sreg_range(0X7D0002E4,"T",0,3);
	split_sreg_range(0X7D0002E8,"T",0,3);
	split_sreg_range(0X7D0002EC,"T",0,3);
	split_sreg_range(0X7D0002F0,"T",0,3);
	split_sreg_range(0X7D0002F4,"T",0,3);
	split_sreg_range(0X7D0002F8,"T",0,3);
	split_sreg_range(0X7D0002FC,"T",0,3);
	split_sreg_range(0X7D000300,"T",0,3);
	split_sreg_range(0X7D000304,"T",0,3);
	split_sreg_range(0X7D000318,"T",0,3);
	split_sreg_range(0X7D00032C,"T",0,3);
	split_sreg_range(0X7D000340,"T",0,3);
	split_sreg_range(0X7D00036C,"T",0,3);
	split_sreg_range(0X7D0003CC,"T",0,3);
	split_sreg_range(0X7D000408,"T",0,3);
	split_sreg_range(0X7D00040C,"T",0,3);
	split_sreg_range(0X7D00044C,"T",0,3);
	split_sreg_range(0X7D000450,"T",0,3);
	split_sreg_range(0X7D00045C,"T",0,3);
	split_sreg_range(0X7D00047C,"T",0,3);
	split_sreg_range(0X7D0004C8,"T",0,3);
	split_sreg_range(0X7D0004CC,"T",0,3);
	split_sreg_range(0X7D0004D8,"T",0,3);
	split_sreg_range(0X7D000508,"T",0,3);
	split_sreg_range(0X7D00052C,"T",0,3);
	split_sreg_range(0X7D00055C,"T",0,3);
	split_sreg_range(0X7D000574,"T",0,3);
	split_sreg_range(0X7D00058C,"T",0,3);
	split_sreg_range(0X7D0005D0,"T",0,3);
	split_sreg_range(0X7D000600,"T",0,3);
	split_sreg_range(0X7D000604,"T",0,3);
	split_sreg_range(0X7D000608,"T",0,3);
	split_sreg_range(0X7D00060C,"T",0,3);
	split_sreg_range(0X7D000610,"T",0,3);
	split_sreg_range(0X7D000614,"T",0,3);
	split_sreg_range(0X7D000680,"T",0,3);
	split_sreg_range(0X7D0006D4,"T",0,3);
	split_sreg_range(0X7D000728,"T",0,3);
	split_sreg_range(0X7D000764,"T",0,3);
	split_sreg_range(0X7D000778,"T",0,3);
	split_sreg_range(0X7D0007AC,"T",0,3);
	split_sreg_range(0X7D0007B4,"T",0,3);
	split_sreg_range(0X7D0007FC,"T",0,3);
	split_sreg_range(0X7D000800,"T",0,3);
	split_sreg_range(0X7D000804,"T",0,3);
	split_sreg_range(0X7D000808,"T",0,3);
	split_sreg_range(0X7D00080C,"T",0,3);
	split_sreg_range(0X7D000810,"T",0,3);
	split_sreg_range(0X7D000814,"T",0,3);
	split_sreg_range(0X7D000818,"T",0,3);
	split_sreg_range(0X7D00081C,"T",0,3);
	split_sreg_range(0X7D000820,"T",0,3);
	split_sreg_range(0X7D000844,"T",0,2);
	split_sreg_range(0X7D000848,"T",0,2);
	split_sreg_range(0X7D000860,"T",0X1,2);
	split_sreg_range(0X7D0008C4,"T",0X1,2);
	split_sreg_range(0X7D0008E2,"T",0X1,2);
	split_sreg_range(0X7D0008FE,"T",0X1,2);
	split_sreg_range(0X7D000908,"T",0X1,3);
	split_sreg_range(0X7D00090A,"T",0X1,3);
	split_sreg_range(0X7D00091A,"T",0X1,3);
	split_sreg_range(0X7D00096C,"T",0X1,3);
	split_sreg_range(0X7D0009B0,"T",0X1,3);
	split_sreg_range(0X7D0009BC,"T",0X1,3);
	split_sreg_range(0X7D0009DA,"T",0X1,3);
	split_sreg_range(0X7D0009DC,"T",0X1,3);
	split_sreg_range(0X7D0009E2,"T",0X1,3);
	split_sreg_range(0X7D0009E4,"T",0X1,3);
	split_sreg_range(0X7D0009FE,"T",0X1,3);
	split_sreg_range(0X7D000A0A,"T",0X1,3);
	split_sreg_range(0X7D000A18,"T",0X1,3);
	split_sreg_range(0X7D000A26,"T",0X1,3);
	split_sreg_range(0X7D000A38,"T",0X1,3);
	split_sreg_range(0X7D000A7A,"T",0X1,3);
	split_sreg_range(0X7D000AA4,"T",0X1,3);
	split_sreg_range(0X7D000AB4,"T",0X1,3);
	split_sreg_range(0X7D000ADE,"T",0X1,3);
	split_sreg_range(0X7D000B12,"T",0X1,3);
	split_sreg_range(0X7D000B34,"T",0X1,3);
	split_sreg_range(0X7D000B38,"T",0X1,3);
	split_sreg_range(0X7D000BA2,"T",0X1,3);
	split_sreg_range(0X7D000BC6,"T",0X1,3);
	split_sreg_range(0X7D000BCA,"T",0X1,3);
	split_sreg_range(0X7D000BDC,"T",0X1,3);
	split_sreg_range(0X7D000BDE,"T",0X1,3);
	split_sreg_range(0X7D000C04,"T",0X1,3);
	split_sreg_range(0X7D000C3E,"T",0X1,3);
	split_sreg_range(0X7D000C78,"T",0X1,3);
	split_sreg_range(0X7D000C7A,"T",0X1,3);
	split_sreg_range(0X7D000C8E,"T",0X1,3);
	split_sreg_range(0X7D000C90,"T",0X1,3);
	split_sreg_range(0X7D000C9C,"T",0X1,3);
	split_sreg_range(0X7D000D48,"T",0X1,3);
	split_sreg_range(0X7D000D52,"T",0X1,3);
	split_sreg_range(0X7D000D5E,"T",0X1,3);
	split_sreg_range(0X7D000D64,"T",0X1,3);
	split_sreg_range(0X7D000D6A,"T",0X1,3);
	split_sreg_range(0X7D000D70,"T",0X1,3);
	split_sreg_range(0X7D000D78,"T",0X1,3);
	split_sreg_range(0X7D000DA4,"T",0X1,3);
	split_sreg_range(0X7D000DF2,"T",0X1,3);
	split_sreg_range(0X7D000DF6,"T",0X1,3);
	split_sreg_range(0X7D000E8C,"T",0X1,3);
	split_sreg_range(0X7D000EA6,"T",0X1,3);
	split_sreg_range(0X7D000EAA,"T",0X1,3);
	split_sreg_range(0X7D000F8E,"T",0X1,3);
	split_sreg_range(0X7D000F94,"T",0X1,3);
	split_sreg_range(0X7D000FD4,"T",0X1,3);
	split_sreg_range(0X7D001010,"T",0X1,3);
	split_sreg_range(0X7D001012,"T",0X1,3);
	split_sreg_range(0X7D001016,"T",0X1,3);
	split_sreg_range(0X7D001032,"T",0X1,3);
	split_sreg_range(0X7D001036,"T",0X1,3);
	split_sreg_range(0X7D00107A,"T",0X1,3);
	split_sreg_range(0X7D00109A,"T",0X1,3);
	split_sreg_range(0X7D0010DA,"T",0X1,3);
	split_sreg_range(0X7D0010DE,"T",0X1,3);
	split_sreg_range(0X7D0010E2,"T",0X1,3);
	split_sreg_range(0X7D0010E4,"T",0X1,3);
	split_sreg_range(0X7D00110A,"T",0X1,3);
	split_sreg_range(0X7D00110C,"T",0X1,3);
	split_sreg_range(0X7D001124,"T",0X1,3);
	split_sreg_range(0X7D001128,"T",0X1,3);
	split_sreg_range(0X7D00112A,"T",0X1,3);
	split_sreg_range(0X7D001130,"T",0X1,3);
	split_sreg_range(0X7D001136,"T",0X1,3);
	split_sreg_range(0X7D0011BE,"T",0X1,3);
	split_sreg_range(0X7D0011C2,"T",0X1,3);
	split_sreg_range(0X7D0011F4,"T",0X1,3);
	split_sreg_range(0X7D0011FA,"T",0X1,3);
	split_sreg_range(0X7D001218,"T",0X1,3);
	split_sreg_range(0X7D001222,"T",0X1,3);
	split_sreg_range(0X7D00122C,"T",0X1,3);
	split_sreg_range(0X7D001238,"T",0X1,3);
	split_sreg_range(0X7D00124E,"T",0X1,3);
	split_sreg_range(0X7D00128C,"T",0X1,3);
	split_sreg_range(0X7D001292,"T",0X1,3);
	split_sreg_range(0X7D0012B0,"T",0X1,3);
	split_sreg_range(0X7D0012DA,"T",0X1,3);
	split_sreg_range(0X7D0012DE,"T",0X1,3);
	split_sreg_range(0X7D0012E2,"T",0X1,3);
	split_sreg_range(0X7D0012E4,"T",0X1,3);
	split_sreg_range(0X7D0012F4,"T",0X1,3);
	split_sreg_range(0X7D0012FC,"T",0X1,3);
	split_sreg_range(0X7D001342,"T",0X1,3);
	split_sreg_range(0X7D001346,"T",0X1,3);
	split_sreg_range(0X7D001368,"T",0X1,3);
	split_sreg_range(0X7D00138A,"T",0X1,3);
	split_sreg_range(0X7D00138C,"T",0X1,3);
	split_sreg_range(0X7D0013A0,"T",0X1,3);
	split_sreg_range(0X7D0013A4,"T",0X1,3);
	split_sreg_range(0X7D0013AE,"T",0X1,3);
	split_sreg_range(0X7D0013C4,"T",0X1,3);
	split_sreg_range(0X7D0013C8,"T",0X1,3);
	split_sreg_range(0X7D0013CA,"T",0X1,3);
	split_sreg_range(0X7D0013E0,"T",0X1,3);
	split_sreg_range(0X7D001434,"T",0X1,3);
	split_sreg_range(0X7D00143A,"T",0X1,3);
	split_sreg_range(0X7D00143C,"T",0X1,3);
	split_sreg_range(0X7D001448,"T",0X1,3);
	split_sreg_range(0X7D001478,"T",0X1,3);
	split_sreg_range(0X7D00147E,"T",0X1,3);
	split_sreg_range(0X7D001482,"T",0X1,3);
	split_sreg_range(0X7D001484,"T",0X1,3);
	split_sreg_range(0X7D001490,"T",0X1,3);
	split_sreg_range(0X7D0014B4,"T",0X1,3);
	split_sreg_range(0X7D0014BC,"T",0X1,3);
	split_sreg_range(0X7D001564,"T",0X1,3);
	split_sreg_range(0X7D0015A0,"T",0X1,3);
	split_sreg_range(0X7D0015A4,"T",0X1,3);
	split_sreg_range(0X7D0015A6,"T",0X1,3);
	split_sreg_range(0X7D0015BA,"T",0X1,3);
	split_sreg_range(0X7D0015BE,"T",0X1,3);
	split_sreg_range(0X7D0015C2,"T",0X1,3);
	split_sreg_range(0X7D0015C4,"T",0X1,3);
	split_sreg_range(0X7D0015E8,"T",0X1,3);
	split_sreg_range(0X7D0015FE,"T",0X1,3);
	split_sreg_range(0X7D00161E,"T",0X1,3);
	split_sreg_range(0X7D00162A,"T",0X1,3);
	split_sreg_range(0X7D001630,"T",0X1,3);
	split_sreg_range(0X7D001634,"T",0X1,3);
	split_sreg_range(0X7D001636,"T",0X1,3);
	split_sreg_range(0X7D001640,"T",0X1,3);
	split_sreg_range(0X7D001674,"T",0X1,3);
	split_sreg_range(0X7D0016AA,"T",0X1,3);
	split_sreg_range(0X7D0016AE,"T",0X1,3);
	split_sreg_range(0X7D0016C4,"T",0X1,3);
	split_sreg_range(0X7D0016D2,"T",0X1,3);
	split_sreg_range(0X7D0016D6,"T",0X1,3);
	split_sreg_range(0X7D0016EA,"T",0X1,3);
	split_sreg_range(0X7D0016FE,"T",0X1,3);
	split_sreg_range(0X7D001708,"T",0X1,3);
	split_sreg_range(0X7D00170C,"T",0X1,3);
	split_sreg_range(0X7D00171C,"T",0X1,3);
	split_sreg_range(0X7D00172C,"T",0X1,3);
	split_sreg_range(0X7D001738,"T",0X1,3);
	split_sreg_range(0X7D001774,"T",0X1,3);
	split_sreg_range(0X7D001778,"T",0X1,3);
	split_sreg_range(0X7D00177A,"T",0X1,3);
	split_sreg_range(0X7D001788,"T",0X1,3);
	split_sreg_range(0X7D00179C,"T",0,3);
	split_sreg_range(0X7D0017A0,"T",0,3);
	split_sreg_range(0X7D0017C8,"T",0,3);
	split_sreg_range(0X7D0017D0,"T",0,3);
	split_sreg_range(0X7D0017F0,"T",0,3);
	split_sreg_range(0X7D0017FC,"T",0,3);
	split_sreg_range(0X7D001814,"T",0,3);
	split_sreg_range(0X7D001830,"T",0,3);
	split_sreg_range(0X7D001850,"T",0,3);
	split_sreg_range(0X7D001868,"T",0,3);
	split_sreg_range(0X7D001878,"T",0,3);
	split_sreg_range(0X7D00187C,"T",0,3);
	split_sreg_range(0X7D001898,"T",0,3);
	split_sreg_range(0X7D0018B0,"T",0,3);
	split_sreg_range(0X7D0018C4,"T",0,3);
	split_sreg_range(0X7D0018D4,"T",0,3);
	split_sreg_range(0X7D0018D8,"T",0,3);
	split_sreg_range(0X7D001900,"T",0,3);
	split_sreg_range(0X7D001910,"T",0,3);
	split_sreg_range(0X7D001914,"T",0,3);
	split_sreg_range(0X7D00193C,"T",0,3);
	split_sreg_range(0X7D00194C,"T",0,3);
	split_sreg_range(0X7D001950,"T",0,3);
	split_sreg_range(0X7D001978,"T",0,3);
	split_sreg_range(0X7D001990,"T",0,3);
	split_sreg_range(0X7D0019A0,"T",0,3);
	split_sreg_range(0X7D0019A8,"T",0,3);
	split_sreg_range(0X7D0019C0,"T",0,3);
	split_sreg_range(0X7D0019D0,"T",0,3);
	split_sreg_range(0X7D0019D8,"T",0,3);
	split_sreg_range(0X7D0019F0,"T",0,3);
	split_sreg_range(0X7D001A00,"T",0,3);
	split_sreg_range(0X7D001A08,"T",0,3);
	split_sreg_range(0X7D001A20,"T",0,3);
	split_sreg_range(0X7D001A2C,"T",0,3);
	split_sreg_range(0X7D001A50,"T",0,3);
	split_sreg_range(0X7D001A54,"T",0X1,3);
	split_sreg_range(0X7D001A60,"T",0X1,3);
	split_sreg_range(0X7D001A6C,"T",0X1,3);
	split_sreg_range(0X7D001A76,"T",0X1,3);
	split_sreg_range(0X7D001AA2,"T",0X1,3);
	split_sreg_range(0X7D001ACE,"T",0X1,3);
	split_sreg_range(0X7D001AD6,"T",0X1,3);
	split_sreg_range(0X7D001AE4,"T",0X1,3);
	split_sreg_range(0X7D001B10,"T",0X1,3);
	split_sreg_range(0X7D001B3E,"T",0X1,3);
	split_sreg_range(0X7D001B4A,"T",0X1,3);
	split_sreg_range(0X7D001B76,"T",0X1,3);
	split_sreg_range(0X7D001BA2,"T",0X1,3);
	split_sreg_range(0X7D001BB0,"T",0X1,3);
	split_sreg_range(0X7D001BDC,"T",0X1,3);
	split_sreg_range(0X7D001C0A,"T",0X1,3);
	split_sreg_range(0X7D001C48,"T",0X1,3);
	split_sreg_range(0X7D001C60,"T",0X1,3);
	split_sreg_range(0X7D001CA0,"T",0X1,3);
	split_sreg_range(0X7D001CCC,"T",0X1,3);
	split_sreg_range(0X7D001CE4,"T",0X1,3);
	split_sreg_range(0X7D001CF8,"T",0X1,3);
	split_sreg_range(0X7D001D1C,"T",0X1,3);
	split_sreg_range(0X7D001D40,"T",0X1,3);
	split_sreg_range(0X7D001D82,"T",0X1,3);
	split_sreg_range(0X7D001D84,"T",0X1,3);
	split_sreg_range(0X7D001D90,"T",0X1,3);
	split_sreg_range(0X7D001DB0,"T",0X1,3);
	split_sreg_range(0X7D001DE2,"T",0X1,3);
	split_sreg_range(0X7D001DF0,"T",0X1,3);
	split_sreg_range(0X7D001E02,"T",0X1,3);
	split_sreg_range(0X7D001E14,"T",0X1,3);
	split_sreg_range(0X7D001E1C,"T",0X1,3);
	split_sreg_range(0X7D001E2A,"T",0X1,3);
	split_sreg_range(0X7D001E92,"T",0X1,3);
	split_sreg_range(0X7D001EAC,"T",0X1,3);
	split_sreg_range(0X7D001EDA,"T",0X1,3);
	split_sreg_range(0X7D001EF4,"T",0X1,3);
	split_sreg_range(0X7D001F30,"T",0X1,3);
	split_sreg_range(0X7D001FA4,"T",0X1,3);
	split_sreg_range(0X7D0020DC,"T",0X1,3);
	split_sreg_range(0X7D002140,"T",0X1,3);
	split_sreg_range(0X7D00215C,"T",0X1,3);
	split_sreg_range(0X7D002180,"T",0X1,3);
	split_sreg_range(0X7D0021BA,"T",0X1,3);
	split_sreg_range(0X7D0021CC,"T",0X1,3);
	split_sreg_range(0X7D0021FE,"T",0X1,3);
	split_sreg_range(0X7D002208,"T",0X1,3);
	split_sreg_range(0X7D00222E,"T",0X1,3);
	split_sreg_range(0X7D002234,"T",0X1,3);
	split_sreg_range(0X7D002260,"T",0X1,3);
	split_sreg_range(0X7D002268,"T",0X1,3);
	split_sreg_range(0X7D002294,"T",0X1,3);
	split_sreg_range(0X7D0022B2,"T",0X1,3);
	split_sreg_range(0X7D0022C2,"T",0X1,3);
	split_sreg_range(0X7D0022DC,"T",0X1,3);
	split_sreg_range(0X7D002302,"T",0X1,3);
	split_sreg_range(0X7D002308,"T",0X1,3);
	split_sreg_range(0X7D00232E,"T",0X1,3);
	split_sreg_range(0X7D002372,"T",0X1,3);
	split_sreg_range(0X7D00238C,"T",0X1,3);
	split_sreg_range(0X7D0023BC,"T",0X1,3);
	split_sreg_range(0X7D0023FE,"T",0X1,3);
	split_sreg_range(0X7D002414,"T",0X1,3);
	split_sreg_range(0X7D00244C,"T",0X1,3);
	split_sreg_range(0X7D00246C,"T",0X1,3);
	split_sreg_range(0X7D00247A,"T",0X1,3);
	split_sreg_range(0X7D002488,"T",0X1,3);
	split_sreg_range(0X7D00249C,"T",0X1,3);
	split_sreg_range(0X7D0024B2,"T",0X1,3);
	split_sreg_range(0X7D0024D6,"T",0X1,3);
	split_sreg_range(0X7D0024E8,"T",0X1,3);
	split_sreg_range(0X7D0024EC,"T",0X1,3);
	split_sreg_range(0X7D0024EE,"T",0X1,3);
	split_sreg_range(0X7D002504,"T",0X1,3);
	split_sreg_range(0X7D002516,"T",0X1,3);
	split_sreg_range(0X7D00252E,"T",0X1,3);
	split_sreg_range(0X7D002530,"T",0X1,3);
	split_sreg_range(0X7D002548,"T",0X1,3);
	split_sreg_range(0X7D0025BA,"T",0X1,3);
	split_sreg_range(0X7D0025EE,"T",0X1,3);
	split_sreg_range(0X7D0025F6,"T",0X1,3);
	split_sreg_range(0X7D00260C,"T",0X1,3);
	split_sreg_range(0X7D002632,"T",0X1,3);
	split_sreg_range(0X7D00263C,"T",0X1,3);
	split_sreg_range(0X7D002676,"T",0X1,3);
	split_sreg_range(0X7D002688,"T",0X1,3);
	split_sreg_range(0X7D002696,"T",0X1,3);
	split_sreg_range(0X7D0026A8,"T",0X1,3);
	split_sreg_range(0X7D0026CE,"T",0X1,3);
	split_sreg_range(0X7D0026DC,"T",0X1,3);
	split_sreg_range(0X7D0026FA,"T",0X1,3);
	split_sreg_range(0X7D00271E,"T",0X1,3);
	split_sreg_range(0X7D002730,"T",0X1,3);
	split_sreg_range(0X7D0027BC,"T",0X1,3);
	split_sreg_range(0X7D0027C6,"T",0X1,3);
	split_sreg_range(0X7D0027DE,"T",0X1,3);
	split_sreg_range(0X7D0027E8,"T",0X1,3);
	split_sreg_range(0X7D002800,"T",0X1,3);
	split_sreg_range(0X7D00282A,"T",0X1,3);
	split_sreg_range(0X7D00282C,"T",0X1,3);
	split_sreg_range(0X7D002854,"T",0X1,3);
	split_sreg_range(0X7D00285A,"T",0X1,3);
	split_sreg_range(0X7D002990,"T",0X1,3);
	split_sreg_range(0X7D0029DC,"T",0X1,3);
	split_sreg_range(0X7D0029E8,"T",0X1,3);
	split_sreg_range(0X7D002A62,"T",0X1,3);
	split_sreg_range(0X7D002A82,"T",0X1,3);
	split_sreg_range(0X7D002A94,"T",0X1,3);
	split_sreg_range(0X7D002AB2,"T",0X1,3);
	split_sreg_range(0X7D002ABC,"T",0X1,3);
	split_sreg_range(0X7D002AC0,"T",0X1,3);
	split_sreg_range(0X7D002AC6,"T",0X1,3);
	split_sreg_range(0X7D002B36,"T",0X1,3);
	split_sreg_range(0X7D002B66,"T",0X1,3);
	split_sreg_range(0X7D002B6E,"T",0X1,3);
	split_sreg_range(0X7D002B70,"T",0X1,3);
	split_sreg_range(0X7D002B76,"T",0X1,3);
	split_sreg_range(0X7D002B92,"T",0X1,3);
	split_sreg_range(0X7D002BA4,"T",0X1,3);
	split_sreg_range(0X7D002BA8,"T",0X1,3);
	split_sreg_range(0X7D002BF4,"T",0X1,3);
	split_sreg_range(0X7D002BFC,"T",0X1,3);
	split_sreg_range(0X7D002C10,"T",0X1,3);
	split_sreg_range(0X7D002C40,"T",0X1,3);
	split_sreg_range(0X7D002C56,"T",0X1,3);
	split_sreg_range(0X7D002CB0,"T",0,3);
	split_sreg_range(0X7D002CBC,"T",0,3);
	split_sreg_range(0X7D002CC8,"T",0,3);
	split_sreg_range(0X7D002CD0,"T",0,3);
	split_sreg_range(0X7D002CD8,"T",0,3);
	split_sreg_range(0X7D002CE0,"T",0,3);
	split_sreg_range(0X7D002CE8,"T",0,3);
	split_sreg_range(0X7D002CFC,"T",0,3);
	split_sreg_range(0X7D002D1C,"T",0,3);
	split_sreg_range(0X7D002D38,"T",0,3);
	split_sreg_range(0X7D002D54,"T",0,3);
	split_sreg_range(0X7D002D70,"T",0,3);
	split_sreg_range(0X7D002D78,"T",0X1,3);
	split_sreg_range(0X7D002DA0,"T",0X1,3);
	split_sreg_range(0X7D002DD4,"T",0X1,3);
	split_sreg_range(0X7D002DE4,"T",0X1,3);
	split_sreg_range(0X7D002DF4,"T",0X1,3);
	split_sreg_range(0X7D002DF8,"T",0X1,3);
	split_sreg_range(0X7D002E08,"T",0X1,3);
	split_sreg_range(0X7D002E26,"T",0X1,3);
	split_sreg_range(0X7D002E38,"T",0X1,3);
	split_sreg_range(0X7D002E62,"T",0X1,3);
	split_sreg_range(0X7D002E8E,"T",0X1,3);
	split_sreg_range(0X7D002E92,"T",0X1,3);
	split_sreg_range(0X7D002EE0,"T",0X1,3);
	split_sreg_range(0X7D002F06,"T",0X1,3);
	split_sreg_range(0X7D002F0E,"T",0X1,3);
	split_sreg_range(0X7D002F14,"T",0X1,3);
	split_sreg_range(0X7D002F18,"T",0X1,3);
	split_sreg_range(0X7D002F2C,"T",0X1,3);
	split_sreg_range(0X7D002F32,"T",0X1,3);
	split_sreg_range(0X7D002F5A,"T",0X1,3);
	split_sreg_range(0X7D002F64,"T",0X1,3);
	split_sreg_range(0X7D002F68,"T",0X1,3);
	split_sreg_range(0X7D002F80,"T",0X1,3);
	split_sreg_range(0X7D002F94,"T",0X1,3);
	split_sreg_range(0X7D002FAA,"T",0X1,3);
	split_sreg_range(0X7D002FAE,"T",0X1,3);
	split_sreg_range(0X7D002FB4,"T",0X1,3);
	split_sreg_range(0X7D002FCE,"T",0X1,3);
	split_sreg_range(0X7D002FD4,"T",0X1,3);
	split_sreg_range(0X7D002FF0,"T",0X1,3);
	split_sreg_range(0X7D002FFC,"T",0X1,3);
	split_sreg_range(0X7D00300C,"T",0X1,3);
	split_sreg_range(0X7D003010,"T",0X1,3);
	split_sreg_range(0X7D003018,"T",0X1,3);
	split_sreg_range(0X7D00302E,"T",0X1,3);
	split_sreg_range(0X7D00303A,"T",0X1,3);
	split_sreg_range(0X7D00303E,"T",0X1,3);
	split_sreg_range(0X7D003040,"T",0X1,3);
	split_sreg_range(0X7D003054,"T",0X1,3);
	split_sreg_range(0X7D003088,"T",0X1,3);
	split_sreg_range(0X7D0030A0,"T",0X1,3);
	split_sreg_range(0X7D003128,"T",0X1,3);
	split_sreg_range(0X7D00314C,"T",0X1,3);
	split_sreg_range(0X7D003168,"T",0X1,3);
	split_sreg_range(0X7D00316A,"T",0X1,3);
	split_sreg_range(0X7D00318C,"T",0X1,3);
	split_sreg_range(0X7D003190,"T",0X1,3);
	split_sreg_range(0X7D0031CA,"T",0X1,3);
	split_sreg_range(0X7D0031D4,"T",0X1,3);
	split_sreg_range(0X7D0031E6,"T",0X1,3);
	split_sreg_range(0X7D003200,"T",0X1,3);
	split_sreg_range(0X7D003202,"T",0X1,3);
	split_sreg_range(0X7D00320A,"T",0X1,3);
	split_sreg_range(0X7D00321A,"T",0X1,3);
	split_sreg_range(0X7D003238,"T",0X1,3);
	split_sreg_range(0X7D00325A,"T",0X1,3);
	split_sreg_range(0X7D00325C,"T",0X1,3);
	split_sreg_range(0X7D00326C,"T",0X1,3);
	split_sreg_range(0X7D003282,"T",0X1,3);
	split_sreg_range(0X7D003290,"T",0X1,3);
	split_sreg_range(0X7D0032B2,"T",0X1,3);
	split_sreg_range(0X7D0032C0,"T",0X1,3);
	split_sreg_range(0X7D0032CA,"T",0X1,3);
	split_sreg_range(0X7D0032DE,"T",0X1,3);
	split_sreg_range(0X7D0032F8,"T",0X1,3);
	split_sreg_range(0X7D003306,"T",0X1,3);
	split_sreg_range(0X7D00331E,"T",0X1,3);
	split_sreg_range(0X7D003324,"T",0X1,3);
	split_sreg_range(0X7D003328,"T",0X1,3);
	split_sreg_range(0X7D00332C,"T",0X1,3);
	split_sreg_range(0X7D003330,"T",0X1,3);
	split_sreg_range(0X7D00334A,"T",0X1,3);
	split_sreg_range(0X7D003350,"T",0X1,3);
	split_sreg_range(0X7D003352,"T",0X1,3);
	split_sreg_range(0X7D003364,"T",0X1,3);
	split_sreg_range(0X7D003368,"T",0X1,3);
	split_sreg_range(0X7D003374,"T",0X1,3);
	split_sreg_range(0X7D0033DC,"T",0X1,3);
	split_sreg_range(0X7D003406,"T",0X1,3);
	split_sreg_range(0X7D00341C,"T",0X1,3);
	split_sreg_range(0X7D003432,"T",0X1,3);
	split_sreg_range(0X7D003458,"T",0X1,3);
	split_sreg_range(0X7D00348A,"T",0X1,3);
	split_sreg_range(0X7D0034A6,"T",0X1,3);
	split_sreg_range(0X7D0034EA,"T",0X1,3);
	split_sreg_range(0X7D0034F0,"T",0X1,3);
	split_sreg_range(0X7D003500,"T",0X1,3);
	split_sreg_range(0X7D003504,"T",0X1,3);
	split_sreg_range(0X7D003508,"T",0X1,3);
	split_sreg_range(0X7D00350A,"T",0X1,3);
	split_sreg_range(0X7D003528,"T",0X1,3);
	split_sreg_range(0X7D003550,"T",0X1,3);
	split_sreg_range(0X7D003564,"T",0X1,3);
	split_sreg_range(0X7D003578,"T",0X1,3);
	split_sreg_range(0X7D003592,"T",0X1,3);
	split_sreg_range(0X7D0035A0,"T",0X1,3);
	split_sreg_range(0X7D0035A6,"T",0X1,3);
	split_sreg_range(0X7D0035AC,"T",0X1,3);
	split_sreg_range(0X7D0035D0,"T",0X1,3);
	split_sreg_range(0X7D0035D4,"T",0X1,3);
	split_sreg_range(0X7D0035DA,"T",0X1,3);
	split_sreg_range(0X7D0035DE,"T",0X1,3);
	split_sreg_range(0X7D003622,"T",0X1,3);
	split_sreg_range(0X7D00362E,"T",0X1,3);
	split_sreg_range(0X7D00366C,"T",0X1,3);
	split_sreg_range(0X7D00369A,"T",0X1,3);
	split_sreg_range(0X7D0036A0,"T",0X1,3);
	split_sreg_range(0X7D0036A4,"T",0X1,3);
	split_sreg_range(0X7D0036A8,"T",0X1,3);
	split_sreg_range(0X7D0036B8,"T",0X1,3);
	split_sreg_range(0X7D0036D2,"T",0X1,3);
	split_sreg_range(0X7D0036E0,"T",0X1,3);
	split_sreg_range(0X7D0036F2,"T",0X1,3);
	split_sreg_range(0X7D0036F6,"T",0X1,3);
	split_sreg_range(0X7D003704,"T",0X1,3);
	split_sreg_range(0X7D003750,"T",0X1,3);
	split_sreg_range(0X7D003792,"T",0X1,3);
	split_sreg_range(0X7D00379A,"T",0X1,3);
	split_sreg_range(0X7D0037A8,"T",0X1,3);
	split_sreg_range(0X7D0037AE,"T",0X1,3);
	split_sreg_range(0X7D0037B6,"T",0X1,3);
	split_sreg_range(0X7D0037C2,"T",0X1,3);
	split_sreg_range(0X7D0037C6,"T",0X1,3);
	split_sreg_range(0X7D0037D4,"T",0X1,3);
	split_sreg_range(0X7D0037E6,"T",0X1,3);
	split_sreg_range(0X7D0037F8,"T",0X1,3);
	split_sreg_range(0X7D00380A,"T",0X1,3);
	split_sreg_range(0X7D00381C,"T",0X1,3);
	split_sreg_range(0X7D00381E,"T",0X1,3);
	split_sreg_range(0X7D00382E,"T",0X1,3);
	split_sreg_range(0X7D003830,"T",0X1,3);
	split_sreg_range(0X7D00384C,"T",0X1,3);
	split_sreg_range(0X7D003866,"T",0X1,3);
	split_sreg_range(0X7D003874,"T",0X1,3);
	split_sreg_range(0X7D003888,"T",0X1,3);
	split_sreg_range(0X7D0038B4,"T",0X1,3);
	split_sreg_range(0X7D0038C6,"T",0X1,3);
	split_sreg_range(0X7D0038D4,"T",0X1,3);
	split_sreg_range(0X7D0038E0,"T",0X1,3);
	split_sreg_range(0X7D0038E4,"T",0X1,3);
	split_sreg_range(0X7D0038F4,"T",0X1,3);
	split_sreg_range(0X7D003908,"T",0X1,3);
	split_sreg_range(0X7D003938,"T",0X1,3);
	split_sreg_range(0X7D00396C,"T",0X1,3);
	split_sreg_range(0X7D0039A0,"T",0X1,3);
	split_sreg_range(0X7D0039C0,"T",0X1,3);
	split_sreg_range(0X7D0039DA,"T",0X1,3);
	split_sreg_range(0X7D0039E4,"T",0X1,3);
	split_sreg_range(0X7D0039EE,"T",0X1,3);
	split_sreg_range(0X7D003A00,"T",0X1,3);
	split_sreg_range(0X7D003A1E,"T",0X1,3);
	split_sreg_range(0X7D003A22,"T",0X1,3);
	split_sreg_range(0X7D003A46,"T",0X1,3);
	split_sreg_range(0X7D003A5E,"T",0X1,3);
	split_sreg_range(0X7D003A60,"T",0X1,3);
	split_sreg_range(0X7D003A7A,"T",0X1,3);
	split_sreg_range(0X7D003A90,"T",0X1,3);
	split_sreg_range(0X7D003A9E,"T",0X1,3);
	split_sreg_range(0X7D003AA2,"T",0X1,3);
	split_sreg_range(0X7D003AAE,"T",0X1,3);
	split_sreg_range(0X7D003AB2,"T",0X1,3);
	split_sreg_range(0X7D003AC4,"T",0X1,3);
	split_sreg_range(0X7D003B04,"T",0X1,3);
	split_sreg_range(0X7D003B28,"T",0X1,3);
	split_sreg_range(0X7D003B2A,"T",0X1,3);
	split_sreg_range(0X7D003B50,"T",0X1,3);
	split_sreg_range(0X7D003B5A,"T",0X1,3);
	split_sreg_range(0X7D003B68,"T",0X1,3);
	split_sreg_range(0X7D003B6A,"T",0X1,3);
	split_sreg_range(0X7D003B8C,"T",0X1,3);
	split_sreg_range(0X7D003BB0,"T",0X1,3);
	split_sreg_range(0X7D003BBE,"T",0X1,3);
	split_sreg_range(0X7D003BC6,"T",0X1,3);
	split_sreg_range(0X7D003BCA,"T",0X1,3);
	split_sreg_range(0X7D003BE0,"T",0X1,3);
	split_sreg_range(0X7D003C00,"T",0X1,3);
	split_sreg_range(0X7D003C1C,"T",0X1,3);
	split_sreg_range(0X7D003C4C,"T",0X1,3);
	split_sreg_range(0X7D003C7E,"T",0X1,3);
	split_sreg_range(0X7D003C88,"T",0X1,3);
	split_sreg_range(0X7D003CB4,"T",0X1,3);
	split_sreg_range(0X7D003CC2,"T",0X1,3);
	split_sreg_range(0X7D003CD6,"T",0X1,3);
	split_sreg_range(0X7D003CF6,"T",0X1,3);
	split_sreg_range(0X7D003D10,"T",0X1,3);
	split_sreg_range(0X7D003D44,"T",0X1,3);
	split_sreg_range(0X7D003D5A,"T",0X1,3);
	split_sreg_range(0X7D003D72,"T",0X1,3);
	split_sreg_range(0X7D003D94,"T",0X1,3);
	split_sreg_range(0X7D003DC0,"T",0X1,3);
	split_sreg_range(0X7D003DD2,"T",0X1,3);
	split_sreg_range(0X7D003DDE,"T",0X1,3);
	split_sreg_range(0X7D003DEC,"T",0X1,3);
	split_sreg_range(0X7D003DF8,"T",0X1,3);
	split_sreg_range(0X7D003E2A,"T",0X1,3);
	split_sreg_range(0X7D003E2E,"T",0X1,3);
	split_sreg_range(0X7D003E36,"T",0X1,3);
	split_sreg_range(0X7D003E5A,"T",0X1,3);
	split_sreg_range(0X7D003E6E,"T",0X1,3);
	split_sreg_range(0X7D003E92,"T",0X1,3);
	split_sreg_range(0X7D003EBE,"T",0X1,3);
	split_sreg_range(0X7D003EEE,"T",0X1,3);
	split_sreg_range(0X7D003EFC,"T",0X1,3);
	split_sreg_range(0X7D003F10,"T",0X1,3);
	split_sreg_range(0X7D003F1E,"T",0X1,3);
	split_sreg_range(0X7D003F54,"T",0X1,3);
	split_sreg_range(0X7D003F5A,"T",0X1,3);
	split_sreg_range(0X7D003F5E,"T",0X1,3);
	split_sreg_range(0X7D003F72,"T",0X1,3);
	split_sreg_range(0X7D003F88,"T",0X1,3);
	split_sreg_range(0X7D003FD8,"T",0X1,3);
	split_sreg_range(0X7D003FE4,"T",0X1,3);
	split_sreg_range(0X7D003FFA,"T",0X1,3);
	split_sreg_range(0X7D004008,"T",0X1,3);
	split_sreg_range(0X7D004016,"T",0X1,3);
	split_sreg_range(0X7D004028,"T",0X1,3);
	split_sreg_range(0X7D00402E,"T",0X1,3);
	split_sreg_range(0X7D004056,"T",0X1,3);
	split_sreg_range(0X7D004058,"T",0X1,3);
	split_sreg_range(0X7D00405A,"T",0X1,3);
	split_sreg_range(0X7D00405E,"T",0X1,3);
	split_sreg_range(0X7D004060,"T",0X1,3);
	split_sreg_range(0X7D004068,"T",0X1,3);
	split_sreg_range(0X7D00406C,"T",0X1,3);
	split_sreg_range(0X7D004088,"T",0X1,3);
	split_sreg_range(0X7D00408C,"T",0X1,3);
	split_sreg_range(0X7D00408E,"T",0X1,3);
	split_sreg_range(0X7D004098,"T",0X1,3);
	split_sreg_range(0X7D0040C4,"T",0X1,3);
	split_sreg_range(0X7D0040EC,"T",0X1,3);
	split_sreg_range(0X7D00410C,"T",0X1,3);
	split_sreg_range(0X7D00411A,"T",0X1,3);
	split_sreg_range(0X7D00411C,"T",0X1,3);
	split_sreg_range(0X7D004126,"T",0X1,3);
	split_sreg_range(0X7D00412A,"T",0X1,3);
	split_sreg_range(0X7D00414E,"T",0X1,3);
	split_sreg_range(0X7D004150,"T",0X1,3);
	split_sreg_range(0X7D00417C,"T",0X1,3);
	split_sreg_range(0X7D004182,"T",0X1,3);
	split_sreg_range(0X7D004190,"T",0X1,3);
	split_sreg_range(0X7D004196,"T",0X1,3);
	split_sreg_range(0X7D0041C0,"T",0X1,3);
	split_sreg_range(0X7D0041C2,"T",0X1,3);
	split_sreg_range(0X7D0041C6,"T",0X1,3);
	split_sreg_range(0X7D0041CA,"T",0X1,3);
	split_sreg_range(0X7D0041FC,"T",0X1,3);
	split_sreg_range(0X7D00422C,"T",0X1,3);
	split_sreg_range(0X7D004250,"T",0X1,3);
	split_sreg_range(0X7D00425C,"T",0X1,3);
	split_sreg_range(0X7D0042AA,"T",0X1,3);
	split_sreg_range(0X7D0042BC,"T",0X1,3);
	split_sreg_range(0X7D0042EC,"T",0X1,3);
	split_sreg_range(0X7D0042F0,"T",0X1,3);
	split_sreg_range(0X7D0042F2,"T",0X1,3);
	split_sreg_range(0X7D00436A,"T",0X1,3);
	split_sreg_range(0X7D00438C,"T",0X1,3);
	split_sreg_range(0X7D004392,"T",0X1,3);
	split_sreg_range(0X7D0043B0,"T",0X1,3);
	split_sreg_range(0X7D0043C4,"T",0X1,3);
	split_sreg_range(0X7D0043D0,"T",0X1,3);
	split_sreg_range(0X7D00441C,"T",0X1,3);
	split_sreg_range(0X7D00442E,"T",0X1,3);
	split_sreg_range(0X7D004434,"T",0X1,3);
	split_sreg_range(0X7D004466,"T",0X1,3);
	split_sreg_range(0X7D004494,"T",0X1,3);
	split_sreg_range(0X7D0044C4,"T",0X1,3);
	split_sreg_range(0X7D0044C8,"T",0X1,3);
	split_sreg_range(0X7D0044DC,"T",0X1,3);
	split_sreg_range(0X7D0044E0,"T",0X1,3);
	split_sreg_range(0X7D004500,"T",0X1,3);
	split_sreg_range(0X7D004504,"T",0X1,3);
	split_sreg_range(0X7D00450C,"T",0X1,3);
	split_sreg_range(0X7D004528,"T",0X1,3);
	split_sreg_range(0X7D004546,"T",0X1,3);
	split_sreg_range(0X7D004548,"T",0X1,3);
	split_sreg_range(0X7D00454A,"T",0X1,3);
	split_sreg_range(0X7D004558,"T",0X1,3);
	split_sreg_range(0X7D0045C2,"T",0X1,3);
	split_sreg_range(0X7D0045C6,"T",0X1,3);
	split_sreg_range(0X7D0045D0,"T",0X1,3);
	split_sreg_range(0X7D004604,"T",0X1,3);
	split_sreg_range(0X7D004606,"T",0X1,3);
	split_sreg_range(0X7D004618,"T",0X1,3);
	split_sreg_range(0X7D004632,"T",0X1,3);
	split_sreg_range(0X7D00464A,"T",0X1,3);
	split_sreg_range(0X7D004652,"T",0X1,3);
	split_sreg_range(0X7D004658,"T",0X1,3);
	split_sreg_range(0X7D004670,"T",0X1,3);
	split_sreg_range(0X7D00467C,"T",0X1,3);
	split_sreg_range(0X7D00468E,"T",0X1,3);
	split_sreg_range(0X7D0046A0,"T",0X1,3);
	split_sreg_range(0X7D0046A4,"T",0X1,3);
	split_sreg_range(0X7D0046AA,"T",0X1,3);
	split_sreg_range(0X7D0046B8,"T",0X1,3);
	split_sreg_range(0X7D0046BC,"T",0X1,3);
	split_sreg_range(0X7D0046E8,"T",0X1,3);
	split_sreg_range(0X7D004718,"T",0X1,3);
	split_sreg_range(0X7D004742,"T",0X1,3);
	split_sreg_range(0X7D00475E,"T",0X1,3);
	split_sreg_range(0X7D004790,"T",0X1,3);
	split_sreg_range(0X7D0047B8,"T",0X1,3);
	split_sreg_range(0X7D0047BA,"T",0X1,3);
	split_sreg_range(0X7D0047C4,"T",0X1,3);
	split_sreg_range(0X7D0047F6,"T",0X1,3);
	split_sreg_range(0X7D004800,"T",0X1,3);
	split_sreg_range(0X7D004818,"T",0X1,3);
	split_sreg_range(0X7D00481A,"T",0X1,3);
	split_sreg_range(0X7D004822,"T",0X1,3);
	split_sreg_range(0X7D004828,"T",0X1,3);
	split_sreg_range(0X7D00485C,"T",0X1,3);
	split_sreg_range(0X7D004878,"T",0X1,3);
	split_sreg_range(0X7D0048CE,"T",0X1,3);
	split_sreg_range(0X7D0048E0,"T",0X1,3);
	split_sreg_range(0X7D004900,"T",0X1,3);
	split_sreg_range(0X7D004904,"T",0X1,3);
	split_sreg_range(0X7D004906,"T",0X1,3);
	split_sreg_range(0X7D004932,"T",0X1,3);
	split_sreg_range(0X7D00494C,"T",0X1,3);
	split_sreg_range(0X7D004962,"T",0X1,3);
	split_sreg_range(0X7D00497C,"T",0X1,3);
	split_sreg_range(0X7D004986,"T",0X1,3);
	split_sreg_range(0X7D004996,"T",0X1,3);
	split_sreg_range(0X7D0049AE,"T",0X1,3);
	split_sreg_range(0X7D0049C4,"T",0X1,3);
	split_sreg_range(0X7D0049CC,"T",0X1,3);
	split_sreg_range(0X7D0049D0,"T",0X1,3);
	split_sreg_range(0X7D0049E4,"T",0X1,3);
	split_sreg_range(0X7D004A06,"T",0X1,3);
	split_sreg_range(0X7D004A10,"T",0X1,3);
	split_sreg_range(0X7D004A24,"T",0X1,3);
	split_sreg_range(0X7D004A36,"T",0X1,3);
	split_sreg_range(0X7D004A40,"T",0X1,3);
	split_sreg_range(0X7D004A44,"T",0X1,3);
	split_sreg_range(0X7D004A62,"T",0X1,3);
	split_sreg_range(0X7D004A68,"T",0X1,3);
	split_sreg_range(0X7D004A96,"T",0X1,3);
	split_sreg_range(0X7D004AA8,"T",0X1,3);
	split_sreg_range(0X7D004AB0,"T",0X1,3);
	split_sreg_range(0X7D004AB4,"T",0X1,3);
	split_sreg_range(0X7D004AB8,"T",0X1,3);
	split_sreg_range(0X7D004ABA,"T",0X1,3);
	split_sreg_range(0X7D004AD0,"T",0X1,3);
	split_sreg_range(0X7D004ADE,"T",0X1,3);
	split_sreg_range(0X7D004AF4,"T",0X1,3);
	split_sreg_range(0X7D004AFA,"T",0X1,3);
	split_sreg_range(0X7D004B08,"T",0X1,3);
	split_sreg_range(0X7D004B0E,"T",0X1,3);
	split_sreg_range(0X7D004B18,"T",0X1,3);
	split_sreg_range(0X7D004B1E,"T",0X1,3);
	split_sreg_range(0X7D004B22,"T",0X1,3);
	split_sreg_range(0X7D004B24,"T",0X1,3);
	split_sreg_range(0X7D004B30,"T",0X1,3);
	split_sreg_range(0X7D004B4C,"T",0X1,3);
	split_sreg_range(0X7D004B60,"T",0X1,3);
	split_sreg_range(0X7D004B8E,"T",0X1,3);
	split_sreg_range(0X7D004B9A,"T",0X1,3);
	split_sreg_range(0X7D004BB0,"T",0X1,3);
	split_sreg_range(0X7D004BB4,"T",0X1,3);
	split_sreg_range(0X7D004BC8,"T",0X1,3);
	split_sreg_range(0X7D004BF8,"T",0X1,3);
	split_sreg_range(0X7D004C18,"T",0X1,3);
	split_sreg_range(0X7D004C24,"T",0X1,3);
	split_sreg_range(0X7D004C38,"T",0X1,3);
	split_sreg_range(0X7D004C3C,"T",0X1,3);
	split_sreg_range(0X7D004C70,"T",0X1,3);
	split_sreg_range(0X7D004C8C,"T",0X1,3);
	split_sreg_range(0X7D004CA4,"T",0X1,3);
	split_sreg_range(0X7D004CC6,"T",0X1,3);
	split_sreg_range(0X7D004D34,"T",0X1,3);
	split_sreg_range(0X7D004D3A,"T",0X1,3);
	split_sreg_range(0X7D004D40,"T",0X1,3);
	split_sreg_range(0X7D004D46,"T",0X1,3);
	split_sreg_range(0X7D004D58,"T",0X1,3);
	split_sreg_range(0X7D004D72,"T",0X1,3);
	split_sreg_range(0X7D004D78,"T",0X1,3);
	split_sreg_range(0X7D004D7E,"T",0X1,3);
	split_sreg_range(0X7D004D84,"T",0X1,3);
	split_sreg_range(0X7D004D8A,"T",0X1,3);
	split_sreg_range(0X7D004D98,"T",0X1,3);
	split_sreg_range(0X7D004D9E,"T",0X1,3);
	split_sreg_range(0X7D004DA4,"T",0X1,3);
	split_sreg_range(0X7D004DB4,"T",0X1,3);
	split_sreg_range(0X7D004E04,"T",0X1,3);
	split_sreg_range(0X7D004E24,"T",0X1,3);
	split_sreg_range(0X7D004E44,"T",0X1,3);
	split_sreg_range(0X7D004E66,"T",0X1,3);
	split_sreg_range(0X7D004E8A,"T",0X1,3);
	split_sreg_range(0X7D004E8E,"T",0X1,3);
	split_sreg_range(0X7D004ED0,"T",0X1,3);
	split_sreg_range(0X7D004EDE,"T",0X1,3);
	split_sreg_range(0X7D004EE2,"T",0X1,3);
	split_sreg_range(0X7D004EFC,"T",0X1,3);
	split_sreg_range(0X7D004F1A,"T",0X1,3);
	split_sreg_range(0X7D004F26,"T",0X1,3);
	split_sreg_range(0X7D004F34,"T",0X1,3);
	split_sreg_range(0X7D004F4C,"T",0X1,3);
	split_sreg_range(0X7D004F6A,"T",0X1,3);
	split_sreg_range(0X7D004F6E,"T",0X1,3);
	split_sreg_range(0X7D004F78,"T",0X1,3);
	split_sreg_range(0X7D004FAC,"T",0X1,3);
	split_sreg_range(0X7D004FEC,"T",0X1,3);
	split_sreg_range(0X7D005024,"T",0X1,3);
	split_sreg_range(0X7D005026,"T",0X1,3);
	split_sreg_range(0X7D00502E,"T",0X1,3);
	split_sreg_range(0X7D005052,"T",0X1,3);
	split_sreg_range(0X7D005068,"T",0X1,3);
	split_sreg_range(0X7D005072,"T",0X1,3);
	split_sreg_range(0X7D00508E,"T",0X1,3);
	split_sreg_range(0X7D0050A4,"T",0X1,3);
	split_sreg_range(0X7D0050BC,"T",0X1,3);
	split_sreg_range(0X7D0050C0,"T",0X1,3);
	split_sreg_range(0X7D0050D2,"T",0X1,3);
	split_sreg_range(0X7D0050D6,"T",0X1,3);
	split_sreg_range(0X7D0050EA,"T",0X1,3);
	split_sreg_range(0X7D0050F8,"T",0X1,3);
	split_sreg_range(0X7D00510C,"T",0X1,3);
	split_sreg_range(0X7D005122,"T",0X1,3);
	split_sreg_range(0X7D00512E,"T",0X1,3);
	split_sreg_range(0X7D00513C,"T",0X1,3);
	split_sreg_range(0X7D005150,"T",0X1,3);
	split_sreg_range(0X7D005160,"T",0X1,3);
	split_sreg_range(0X7D005168,"T",0X1,3);
	split_sreg_range(0X7D005176,"T",0X1,3);
	split_sreg_range(0X7D005180,"T",0X1,3);
	split_sreg_range(0X7D00518E,"T",0X1,3);
	split_sreg_range(0X7D0051A4,"T",0X1,3);
	split_sreg_range(0X7D0051BC,"T",0X1,3);
	split_sreg_range(0X7D0051EA,"T",0X1,3);
	split_sreg_range(0X7D0051EE,"T",0X1,3);
	split_sreg_range(0X7D005210,"T",0X1,3);
	split_sreg_range(0X7D005216,"T",0X1,3);
	split_sreg_range(0X7D005220,"T",0X1,3);
	split_sreg_range(0X7D00522A,"T",0X1,3);
	split_sreg_range(0X7D005240,"T",0X1,3);
	split_sreg_range(0X7D005250,"T",0X1,3);
	split_sreg_range(0X7D005274,"T",0X1,3);
	split_sreg_range(0X7D005280,"T",0,3);
	split_sreg_range(0X7D0052C4,"T",0,3);
	split_sreg_range(0X7D0052D0,"T",0,3);
	split_sreg_range(0X7D0052D8,"T",0,3);
	split_sreg_range(0X7D0052E8,"T",0,3);
	split_sreg_range(0X7D005304,"T",0X1,3);
	split_sreg_range(0X7D005334,"T",0X1,3);
	split_sreg_range(0X7D005338,"T",0X1,3);
	split_sreg_range(0X7D005350,"T",0X1,3);
	split_sreg_range(0X7D005360,"T",0X1,3);
	split_sreg_range(0X7D005362,"T",0X1,3);
	split_sreg_range(0X7D00536C,"T",0X1,3);
	split_sreg_range(0X7D00536E,"T",0X1,3);
	split_sreg_range(0X7D00537C,"T",0X1,3);
	split_sreg_range(0X7D005396,"T",0X1,3);
	split_sreg_range(0X7D0053B8,"T",0X1,3);
	split_sreg_range(0X7D0053E8,"T",0X1,3);
	split_sreg_range(0X7D005436,"T",0X1,3);
	split_sreg_range(0X7D005444,"T",0X1,3);
	split_sreg_range(0X7D005452,"T",0X1,3);
	split_sreg_range(0X7D005484,"T",0X1,3);
	split_sreg_range(0X7D005490,"T",0X1,3);
	split_sreg_range(0X7D00557A,"T",0X1,3);
	split_sreg_range(0X7D0055A2,"T",0X1,3);
	split_sreg_range(0X7D0055A6,"T",0X1,3);
	split_sreg_range(0X7D0055A8,"T",0X1,3);
	split_sreg_range(0X7D0055AE,"T",0X1,3);
	split_sreg_range(0X7D0055C2,"T",0X1,3);
	split_sreg_range(0X7D0055C4,"T",0X1,3);
	split_sreg_range(0X7D0055C6,"T",0X1,3);
	split_sreg_range(0X7D0055E4,"T",0X1,3);
	split_sreg_range(0X7D005604,"T",0X1,3);
	split_sreg_range(0X7D005624,"T",0X1,3);
	split_sreg_range(0X7D005646,"T",0X1,3);
	split_sreg_range(0X7D005654,"T",0X1,3);
	split_sreg_range(0X7D00566A,"T",0X1,3);
	split_sreg_range(0X7D00567C,"T",0X1,3);
	split_sreg_range(0X7D005682,"T",0X1,3);
	split_sreg_range(0X7D005688,"T",0X1,3);
	split_sreg_range(0X7D00568E,"T",0X1,3);
	split_sreg_range(0X7D0056A6,"T",0X1,3);
	split_sreg_range(0X7D0056B2,"T",0X1,3);
	split_sreg_range(0X7D0056B8,"T",0X1,3);
	split_sreg_range(0X7D0056C4,"T",0X1,3);
	split_sreg_range(0X7D0056D6,"T",0X1,3);
	split_sreg_range(0X7D0056DA,"T",0X1,3);
	split_sreg_range(0X7D0056E4,"T",0X1,3);
	split_sreg_range(0X7D0056EE,"T",0X1,3);
	split_sreg_range(0X7D0056F2,"T",0X1,3);
	split_sreg_range(0X7D0056F6,"T",0X1,3);
	split_sreg_range(0X7D0056F8,"T",0X1,3);
	split_sreg_range(0X7D005718,"T",0X1,3);
	split_sreg_range(0X7D00573A,"T",0X1,3);
	split_sreg_range(0X7D005756,"T",0X1,3);
	split_sreg_range(0X7D00575A,"T",0X1,3);
	split_sreg_range(0X7D00575E,"T",0X1,3);
	split_sreg_range(0X7D00579A,"T",0X1,3);
	split_sreg_range(0X7D0057C2,"T",0X1,3);
	split_sreg_range(0X7D0057E6,"T",0X1,3);
	split_sreg_range(0X7D005800,"T",0X1,3);
	split_sreg_range(0X7D00581E,"T",0X1,3);
	split_sreg_range(0X7D00585A,"T",0X1,3);
	split_sreg_range(0X7D005894,"T",0X1,3);
	split_sreg_range(0X7D0058C6,"T",0X1,3);
	split_sreg_range(0X7D0058F0,"T",0X1,3);
	split_sreg_range(0X7D00590C,"T",0X1,3);
	split_sreg_range(0X7D00591A,"T",0X1,3);
	split_sreg_range(0X7D00591E,"T",0X1,3);
	split_sreg_range(0X7D005922,"T",0X1,3);
	split_sreg_range(0X7D005942,"T",0X1,3);
	split_sreg_range(0X7D005950,"T",0X1,3);
	split_sreg_range(0X7D005968,"T",0X1,3);
	split_sreg_range(0X7D005976,"T",0X1,3);
	split_sreg_range(0X7D00597A,"T",0X1,3);
	split_sreg_range(0X7D005992,"T",0X1,3);
	split_sreg_range(0X7D0059A0,"T",0X1,3);
	split_sreg_range(0X7D0059A2,"T",0X1,3);
	split_sreg_range(0X7D0059A6,"T",0X1,3);
	split_sreg_range(0X7D0059B6,"T",0X1,3);
	split_sreg_range(0X7D0059B8,"T",0X1,3);
	split_sreg_range(0X7D0059C8,"T",0X1,3);
	split_sreg_range(0X7D0059D0,"T",0X1,3);
	split_sreg_range(0X7D0059E4,"T",0X1,3);
	split_sreg_range(0X7D0059FA,"T",0X1,3);
	split_sreg_range(0X7D0059FE,"T",0X1,3);
	split_sreg_range(0X7D005A3E,"T",0X1,3);
	split_sreg_range(0X7D005A64,"T",0X1,3);
	split_sreg_range(0X7D005A66,"T",0X1,3);
	split_sreg_range(0X7D005A7A,"T",0X1,3);
	split_sreg_range(0X7D005A7E,"T",0X1,3);
	split_sreg_range(0X7D005AB0,"T",0X1,3);
	split_sreg_range(0X7D005AB2,"T",0X1,3);
	split_sreg_range(0X7D005B06,"T",0X1,3);
	split_sreg_range(0X7D005B0A,"T",0X1,3);
	split_sreg_range(0X7D005B0E,"T",0X1,3);
	split_sreg_range(0X7D005B12,"T",0X1,3);
	split_sreg_range(0X7D005B14,"T",0X1,3);
	split_sreg_range(0X7D005B54,"T",0X1,3);
	split_sreg_range(0X7D005B56,"T",0X1,3);
	split_sreg_range(0X7D005B72,"T",0X1,3);
	split_sreg_range(0X7D005B84,"T",0X1,3);
	split_sreg_range(0X7D005B8A,"T",0X1,3);
	split_sreg_range(0X7D005B9A,"T",0X1,3);
	split_sreg_range(0X7D005BA4,"T",0X1,3);
	split_sreg_range(0X7D005BAC,"T",0X1,3);
	split_sreg_range(0X7D005BC4,"T",0X1,3);
	split_sreg_range(0X7D005BDA,"T",0X1,3);
	split_sreg_range(0X7D005BFC,"T",0X1,3);
	split_sreg_range(0X7D005C00,"T",0X1,3);
	split_sreg_range(0X7D005C20,"T",0X1,3);
	split_sreg_range(0X7D005C24,"T",0X1,3);
	split_sreg_range(0X7D005C2E,"T",0X1,3);
	split_sreg_range(0X7D005C3C,"T",0X1,3);
	split_sreg_range(0X7D005C4E,"T",0X1,3);
	split_sreg_range(0X7D005C5C,"T",0X1,3);
	split_sreg_range(0X7D005C64,"T",0X1,3);
	split_sreg_range(0X7D005C7E,"T",0X1,3);
	split_sreg_range(0X7D005C8A,"T",0X1,3);
	split_sreg_range(0X7D005CC8,"T",0X1,3);
	split_sreg_range(0X7D005CE8,"T",0X1,3);
	split_sreg_range(0X7D005CFA,"T",0X1,3);
	split_sreg_range(0X7D005CFC,"T",0X1,3);
	split_sreg_range(0X7D005D14,"T",0X1,3);
	split_sreg_range(0X7D005D1C,"T",0X1,3);
	split_sreg_range(0X7D005D38,"T",0X1,3);
	split_sreg_range(0X7D005D44,"T",0X1,3);
	split_sreg_range(0X7D005D50,"T",0X1,3);
	split_sreg_range(0X7D005D5E,"T",0X1,3);
	split_sreg_range(0X7D005D60,"T",0X1,3);
	split_sreg_range(0X7D005D6C,"T",0X1,3);
	split_sreg_range(0X7D005D88,"T",0X1,3);
	split_sreg_range(0X7D005D9A,"T",0X1,3);
	split_sreg_range(0X7D005DA8,"T",0X1,3);
	split_sreg_range(0X7D005DC0,"T",0X1,3);
	split_sreg_range(0X7D005DF8,"T",0X1,3);
	split_sreg_range(0X7D005E28,"T",0X1,3);
	split_sreg_range(0X7D005E44,"T",0X1,3);
	split_sreg_range(0X7D005E46,"T",0X1,3);
	split_sreg_range(0X7D005E78,"T",0X1,3);
	split_sreg_range(0X7D005E7A,"T",0X1,3);
	split_sreg_range(0X7D005EB0,"T",0X1,3);
	split_sreg_range(0X7D005ED0,"T",0X1,3);
	split_sreg_range(0X7D005EDC,"T",0X1,3);
	split_sreg_range(0X7D005EE4,"T",0X1,3);
	split_sreg_range(0X7D005EF6,"T",0X1,3);
	split_sreg_range(0X7D005F0E,"T",0X1,3);
	split_sreg_range(0X7D005F16,"T",0X1,3);
	split_sreg_range(0X7D005F1C,"T",0X1,3);
	split_sreg_range(0X7D005F38,"T",0,3);
	split_sreg_range(0X7D005F5C,"T",0,3);
	split_sreg_range(0X7D005F64,"T",0X1,3);
	split_sreg_range(0X7D005F78,"T",0X1,3);
	split_sreg_range(0X7D005F8C,"T",0X1,3);
	split_sreg_range(0X7D005FB4,"T",0X1,3);
	split_sreg_range(0X7D005FDC,"T",0X1,3);
	split_sreg_range(0X7D005FF4,"T",0X1,3);
	split_sreg_range(0X7D006014,"T",0X1,3);
	split_sreg_range(0X7D006020,"T",0X1,3);
	split_sreg_range(0X7D006052,"T",0X1,3);
	split_sreg_range(0X7D006060,"T",0X1,3);
	split_sreg_range(0X7D006064,"T",0X1,3);
	split_sreg_range(0X7D0060C4,"T",0X1,3);
	split_sreg_range(0X7D0060D8,"T",0X1,3);
	split_sreg_range(0X7D0060F4,"T",0X1,3);
	split_sreg_range(0X7D00616A,"T",0X1,3);
	split_sreg_range(0X7D00616C,"T",0X1,3);
	split_sreg_range(0X7D006184,"T",0X1,3);
	split_sreg_range(0X7D0061AE,"T",0X1,3);
	split_sreg_range(0X7D0061B0,"T",0X1,3);
	split_sreg_range(0X7D0061C4,"T",0X1,3);
	split_sreg_range(0X7D0061D4,"T",0X1,3);
	split_sreg_range(0X7D0061D8,"T",0X1,3);
	split_sreg_range(0X7D0061E6,"T",0X1,3);
	split_sreg_range(0X7D0061F0,"T",0X1,3);
	split_sreg_range(0X7D006208,"T",0X1,3);
	split_sreg_range(0X7D006218,"T",0X1,3);
	split_sreg_range(0X7D00623A,"T",0X1,3);
	split_sreg_range(0X7D006248,"T",0X1,3);
	split_sreg_range(0X7D006266,"T",0X1,3);
	split_sreg_range(0X7D006276,"T",0X1,3);
	split_sreg_range(0X7D00627E,"T",0X1,3);
	split_sreg_range(0X7D006286,"T",0X1,3);
	split_sreg_range(0X7D006296,"T",0X1,3);
	split_sreg_range(0X7D00629C,"T",0X1,3);
	split_sreg_range(0X7D0062A0,"T",0X1,3);
	split_sreg_range(0X7D0062B0,"T",0X1,3);
	split_sreg_range(0X7D0062C2,"T",0X1,3);
	split_sreg_range(0X7D0062E4,"T",0X1,3);
	split_sreg_range(0X7D0062FC,"T",0X1,3);
	split_sreg_range(0X7D00630E,"T",0X1,3);
	split_sreg_range(0X7D006312,"T",0X1,3);
	split_sreg_range(0X7D006314,"T",0X1,3);
	split_sreg_range(0X7D006320,"T",0X1,3);
	split_sreg_range(0X7D006338,"T",0X1,3);
	split_sreg_range(0X7D00633A,"T",0X1,3);
	split_sreg_range(0X7D006350,"T",0X1,3);
	split_sreg_range(0X7D006360,"T",0X1,3);
	split_sreg_range(0X7D006382,"T",0X1,3);
	split_sreg_range(0X7D006394,"T",0X1,3);
	split_sreg_range(0X7D0063A4,"T",0X1,3);
	split_sreg_range(0X7D0063B2,"T",0X1,3);
	split_sreg_range(0X7D0063CC,"T",0X1,3);
	split_sreg_range(0X7D0063D6,"T",0X1,3);
	split_sreg_range(0X7D0063EA,"T",0X1,3);
	split_sreg_range(0X7D0063EE,"T",0X1,3);
	split_sreg_range(0X7D0063FC,"T",0X1,3);
	split_sreg_range(0X7D006402,"T",0X1,3);
	split_sreg_range(0X7D006410,"T",0X1,3);
	split_sreg_range(0X7D00643E,"T",0X1,3);
	split_sreg_range(0X7D006450,"T",0X1,3);
	split_sreg_range(0X7D00645E,"T",0X1,3);
	split_sreg_range(0X7D006472,"T",0X1,3);
	split_sreg_range(0X7D00648A,"T",0X1,3);
	split_sreg_range(0X7D00649A,"T",0X1,3);
	split_sreg_range(0X7D0064A4,"T",0X1,3);
	split_sreg_range(0X7D0064A6,"T",0X1,3);
	split_sreg_range(0X7D0064D2,"T",0X1,3);
	split_sreg_range(0X7D0064E8,"T",0X1,3);
	split_sreg_range(0X7D0064EC,"T",0X1,3);
	split_sreg_range(0X7D006508,"T",0X1,3);
	split_sreg_range(0X7D00650E,"T",0X1,3);
	split_sreg_range(0X7D006512,"T",0X1,3);
	split_sreg_range(0X7D006514,"T",0X1,3);
	split_sreg_range(0X7D006534,"T",0X1,3);
	split_sreg_range(0X7D00658E,"T",0X1,3);
	split_sreg_range(0X7D0065A0,"T",0X1,3);
	split_sreg_range(0X7D0065A8,"T",0X1,3);
	split_sreg_range(0X7D0065C2,"T",0X1,3);
	split_sreg_range(0X7D0065C4,"T",0X1,3);
	split_sreg_range(0X7D0065CE,"T",0X1,3);
	split_sreg_range(0X7D0065D2,"T",0X1,3);
	split_sreg_range(0X7D0065DE,"T",0X1,3);
	split_sreg_range(0X7D006606,"T",0X1,3);
	split_sreg_range(0X7D006650,"T",0X1,3);
	split_sreg_range(0X7D006654,"T",0X1,3);
	split_sreg_range(0X7D006670,"T",0X1,3);
	split_sreg_range(0X7D006674,"T",0X1,3);
	split_sreg_range(0X7D006686,"T",0X1,3);
	split_sreg_range(0X7D00668A,"T",0X1,3);
	split_sreg_range(0X7D00668C,"T",0X1,3);
	split_sreg_range(0X7D0066A6,"T",0X1,3);
	split_sreg_range(0X7D0066AA,"T",0X1,3);
	split_sreg_range(0X7D0066AE,"T",0X1,3);
	split_sreg_range(0X7D0066B2,"T",0X1,3);
	split_sreg_range(0X7D0066BE,"T",0X1,3);
	split_sreg_range(0X7D0066CA,"T",0X1,3);
	split_sreg_range(0X7D0066CE,"T",0X1,3);
	split_sreg_range(0X7D0066F4,"T",0X1,3);
	split_sreg_range(0X7D00671C,"T",0X1,3);
	split_sreg_range(0X7D006726,"T",0X1,3);
	split_sreg_range(0X7D006738,"T",0X1,3);
	split_sreg_range(0X7D00675E,"T",0X1,3);
	split_sreg_range(0X7D00676A,"T",0X1,3);
	split_sreg_range(0X7D006778,"T",0X1,3);
	split_sreg_range(0X7D006792,"T",0X1,3);
	split_sreg_range(0X7D00679C,"T",0X1,3);
	split_sreg_range(0X7D0067AE,"T",0X1,3);
	split_sreg_range(0X7D0067B8,"T",0X1,3);
	split_sreg_range(0X7D0067E0,"T",0X1,3);
	split_sreg_range(0X7D0067FC,"T",0X1,3);
	split_sreg_range(0X7D006828,"T",0X1,3);
	split_sreg_range(0X7D006840,"T",0X1,3);
	split_sreg_range(0X7D00686A,"T",0X1,3);
	split_sreg_range(0X7D006874,"T",0X1,3);
	split_sreg_range(0X7D006878,"T",0X1,3);
	split_sreg_range(0X7D00687C,"T",0X1,3);
	split_sreg_range(0X7D006880,"T",0X1,3);
	split_sreg_range(0X7D006886,"T",0X1,3);
	split_sreg_range(0X7D006888,"T",0X1,3);
	split_sreg_range(0X7D006892,"T",0X1,3);
	split_sreg_range(0X7D006898,"T",0X1,3);
	split_sreg_range(0X7D0068BC,"T",0X1,3);
	split_sreg_range(0X7D0068C0,"T",0X1,3);
	split_sreg_range(0X7D0068E4,"T",0X1,3);
	split_sreg_range(0X7D0068F0,"T",0X1,3);
	split_sreg_range(0X7D0068FA,"T",0X1,3);
	split_sreg_range(0X7D006900,"T",0X1,3);
	split_sreg_range(0X7D00691C,"T",0X1,3);
	split_sreg_range(0X7D006926,"T",0X1,3);
	split_sreg_range(0X7D00692E,"T",0X1,3);
	split_sreg_range(0X7D006940,"T",0X1,3);
	split_sreg_range(0X7D006956,"T",0X1,3);
	split_sreg_range(0X7D00695A,"T",0X1,3);
	split_sreg_range(0X7D00695E,"T",0X1,3);
	split_sreg_range(0X7D006962,"T",0X1,3);
	split_sreg_range(0X7D006964,"T",0X1,3);
	split_sreg_range(0X7D00696A,"T",0X1,3);
	split_sreg_range(0X7D00696E,"T",0X1,3);
	split_sreg_range(0X7D006990,"T",0X1,3);
	split_sreg_range(0X7D0069D2,"T",0X1,3);
	split_sreg_range(0X7D0069E2,"T",0X1,3);
	split_sreg_range(0X7D0069F0,"T",0X1,3);
	split_sreg_range(0X7D0069F4,"T",0X1,3);
	split_sreg_range(0X7D0069F6,"T",0X1,3);
	split_sreg_range(0X7D006A00,"T",0X1,3);
	split_sreg_range(0X7D006A04,"T",0X1,3);
	split_sreg_range(0X7D006A06,"T",0X1,3);
	split_sreg_range(0X7D006A20,"T",0X1,3);
	split_sreg_range(0X7D006A48,"T",0X1,3);
	split_sreg_range(0X7D006A50,"T",0X1,3);
	split_sreg_range(0X7D006A5C,"T",0X1,3);
	split_sreg_range(0X7D006A64,"T",0X1,3);
	split_sreg_range(0X7D006A68,"T",0X1,3);
	split_sreg_range(0X7D006A6C,"T",0X1,3);
	split_sreg_range(0X7D006A6E,"T",0X1,3);
	split_sreg_range(0X7D006A74,"T",0X1,3);
	split_sreg_range(0X7D006A8C,"T",0X1,3);
	split_sreg_range(0X7D006AAE,"T",0X1,3);
	split_sreg_range(0X7D006ABA,"T",0X1,3);
	split_sreg_range(0X7D006ABE,"T",0X1,3);
	split_sreg_range(0X7D006AD4,"T",0X1,3);
	split_sreg_range(0X7D006ADE,"T",0X1,3);
	split_sreg_range(0X7D006AE8,"T",0X1,3);
	split_sreg_range(0X7D006AEE,"T",0X1,3);
	split_sreg_range(0X7D006AF0,"T",0X1,3);
	split_sreg_range(0X7D006AF8,"T",0X1,3);
	split_sreg_range(0X7D006AFC,"T",0X1,3);
	split_sreg_range(0X7D006B00,"T",0X1,3);
	split_sreg_range(0X7D006B02,"T",0X1,3);
	split_sreg_range(0X7D006B08,"T",0X1,3);
	split_sreg_range(0X7D006B30,"T",0X1,3);
	split_sreg_range(0X7D006B84,"T",0X1,3);
	split_sreg_range(0X7D006B8E,"T",0X1,3);
	split_sreg_range(0X7D006B94,"T",0X1,3);
	split_sreg_range(0X7D006BA2,"T",0X1,3);
	split_sreg_range(0X7D006BB8,"T",0X1,3);
	split_sreg_range(0X7D006BBC,"T",0X1,3);
	split_sreg_range(0X7D006BC0,"T",0X1,3);
	split_sreg_range(0X7D006BC2,"T",0X1,3);
	split_sreg_range(0X7D006BE4,"T",0X1,3);
	split_sreg_range(0X7D006C04,"T",0X1,3);
	split_sreg_range(0X7D006C84,"T",0X1,3);
	split_sreg_range(0X7D006C8A,"T",0X1,3);
	split_sreg_range(0X7D006CDE,"T",0X1,3);
	split_sreg_range(0X7D006D00,"T",0X1,3);
	split_sreg_range(0X7D006D16,"T",0X1,3);
	split_sreg_range(0X7D006D3A,"T",0X1,3);
	split_sreg_range(0X7D006D3E,"T",0X1,3);
	split_sreg_range(0X7D006D42,"T",0X1,3);
	split_sreg_range(0X7D006D44,"T",0X1,3);
	split_sreg_range(0X7D006D58,"T",0X1,3);
	split_sreg_range(0X7D006D66,"T",0X1,3);
	split_sreg_range(0X7D006D70,"T",0X1,3);
	split_sreg_range(0X7D006DA8,"T",0X1,3);
	split_sreg_range(0X7D006DB8,"T",0X1,3);
	split_sreg_range(0X7D006E0C,"T",0X1,3);
	split_sreg_range(0X7D006E10,"T",0X1,3);
	split_sreg_range(0X7D006E14,"T",0X1,3);
	split_sreg_range(0X7D006E18,"T",0X1,3);
	split_sreg_range(0X7D006E1E,"T",0X1,3);
	split_sreg_range(0X7D006E24,"T",0X1,3);
	split_sreg_range(0X7D006E26,"T",0X1,3);
	split_sreg_range(0X7D006EAA,"T",0X1,3);
	split_sreg_range(0X7D006EBA,"T",0X1,3);
	split_sreg_range(0X7D006F34,"T",0X1,3);
	split_sreg_range(0X7D006F38,"T",0X1,3);
	split_sreg_range(0X7D006F3A,"T",0X1,3);
	split_sreg_range(0X7D006F3E,"T",0X1,3);
	split_sreg_range(0X7D006F42,"T",0X1,3);
	split_sreg_range(0X7D006F46,"T",0X1,3);
	split_sreg_range(0X7D006F48,"T",0X1,3);
	split_sreg_range(0X7D006F52,"T",0X1,3);
	split_sreg_range(0X7D006F54,"T",0X1,3);
	split_sreg_range(0X7D006F74,"T",0X1,3);
	split_sreg_range(0X7D006FDA,"T",0X1,3);
	split_sreg_range(0X7D007014,"T",0X1,3);
	split_sreg_range(0X7D007024,"T",0X1,3);
	split_sreg_range(0X7D00703C,"T",0X1,3);
	split_sreg_range(0X7D00704C,"T",0X1,3);
	split_sreg_range(0X7D007062,"T",0X1,3);
	split_sreg_range(0X7D007066,"T",0X1,3);
	split_sreg_range(0X7D00706A,"T",0X1,3);
	split_sreg_range(0X7D00706C,"T",0X1,3);
	split_sreg_range(0X7D007070,"T",0X1,3);
	split_sreg_range(0X7D007074,"T",0X1,3);
	split_sreg_range(0X7D007078,"T",0X1,3);
	split_sreg_range(0X7D00707A,"T",0X1,3);
	split_sreg_range(0X7D007094,"T",0X1,3);
	split_sreg_range(0X7D0070B8,"T",0X1,3);
	split_sreg_range(0X7D0070D8,"T",0X1,3);
	split_sreg_range(0X7D0070EE,"T",0X1,3);
	split_sreg_range(0X7D007102,"T",0X1,3);
	split_sreg_range(0X7D00710C,"T",0X1,3);
	split_sreg_range(0X7D007120,"T",0X1,3);
	split_sreg_range(0X7D007134,"T",0X1,3);
	split_sreg_range(0X7D00713A,"T",0X1,3);
	split_sreg_range(0X7D00713C,"T",0X1,3);
	split_sreg_range(0X7D007148,"T",0X1,3);
	split_sreg_range(0X7D0071C8,"T",0X1,3);
	split_sreg_range(0X7D0071E6,"T",0X1,3);
	split_sreg_range(0X7D0071FA,"T",0X1,3);
	split_sreg_range(0X7D0071FC,"T",0X1,3);
	split_sreg_range(0X7D007204,"T",0X1,3);
	split_sreg_range(0X7D007208,"T",0X1,3);
	split_sreg_range(0X7D00720C,"T",0X1,3);
	split_sreg_range(0X7D00720E,"T",0X1,3);
	split_sreg_range(0X7D007220,"T",0X1,3);
	split_sreg_range(0X7D007228,"T",0X1,3);
	split_sreg_range(0X7D00725E,"T",0X1,3);
	split_sreg_range(0X7D007268,"T",0X1,3);
	split_sreg_range(0X7D007298,"T",0X1,3);
	split_sreg_range(0X7D0072A4,"T",0X1,3);
	split_sreg_range(0X7D0072AC,"T",0X1,3);
	split_sreg_range(0X7D0072CA,"T",0X1,3);
	split_sreg_range(0X7D0072E4,"T",0X1,3);
	split_sreg_range(0X7D00732C,"T",0X1,3);
	split_sreg_range(0X7D007330,"T",0X1,3);
	split_sreg_range(0X7D00733C,"T",0X1,3);
	split_sreg_range(0X7D00733E,"T",0X1,3);
	split_sreg_range(0X7D00734A,"T",0X1,3);
	split_sreg_range(0X7D007352,"T",0X1,3);
	split_sreg_range(0X7D007356,"T",0X1,3);
	split_sreg_range(0X7D007366,"T",0X1,3);
	split_sreg_range(0X7D00736E,"T",0X1,3);
	split_sreg_range(0X7D00738C,"T",0X1,3);
	split_sreg_range(0X7D0073A8,"T",0X1,3);
	split_sreg_range(0X7D0073AC,"T",0X1,3);
	split_sreg_range(0X7D0073C2,"T",0X1,3);
	split_sreg_range(0X7D0073EA,"T",0X1,3);
	split_sreg_range(0X7D007428,"T",0X1,3);
	split_sreg_range(0X7D007450,"T",0X1,3);
	split_sreg_range(0X7D00746A,"T",0X1,3);
	split_sreg_range(0X7D00746E,"T",0X1,3);
	split_sreg_range(0X7D00747C,"T",0X1,3);
	split_sreg_range(0X7D00748E,"T",0X1,3);
	split_sreg_range(0X7D007490,"T",0X1,3);
	split_sreg_range(0X7D0074C6,"T",0X1,3);
	split_sreg_range(0X7D0074EE,"T",0X1,3);
	split_sreg_range(0X7D00750C,"T",0X1,3);
	split_sreg_range(0X7D00751E,"T",0X1,3);
	split_sreg_range(0X7D007528,"T",0X1,3);
	split_sreg_range(0X7D007566,"T",0X1,3);
	split_sreg_range(0X7D007572,"T",0X1,3);
	split_sreg_range(0X7D0075C8,"T",0X1,3);
	split_sreg_range(0X7D0075CA,"T",0X1,3);
	split_sreg_range(0X7D0075E0,"T",0X1,3);
	split_sreg_range(0X7D007606,"T",0X1,3);
	split_sreg_range(0X7D007616,"T",0X1,3);
	split_sreg_range(0X7D007624,"T",0X1,3);
	split_sreg_range(0X7D007630,"T",0X1,3);
	split_sreg_range(0X7D007636,"T",0X1,3);
	split_sreg_range(0X7D007642,"T",0X1,3);
	split_sreg_range(0X7D007656,"T",0X1,3);
	split_sreg_range(0X7D00765E,"T",0X1,3);
	split_sreg_range(0X7D00766E,"T",0X1,3);
	split_sreg_range(0X7D007674,"T",0X1,3);
	split_sreg_range(0X7D00767E,"T",0X1,3);
	split_sreg_range(0X7D0076AA,"T",0X1,3);
	split_sreg_range(0X7D0076BC,"T",0X1,3);
	split_sreg_range(0X7D0076BE,"T",0X1,3);
	split_sreg_range(0X7D0076C4,"T",0X1,3);
	split_sreg_range(0X7D0076D4,"T",0X1,3);
	split_sreg_range(0X7D007700,"T",0X1,3);
	split_sreg_range(0X7D007702,"T",0X1,3);
	split_sreg_range(0X7D007714,"T",0X1,3);
	split_sreg_range(0X7D007718,"T",0X1,3);
	split_sreg_range(0X7D00771A,"T",0X1,3);
	split_sreg_range(0X7D007740,"T",0X1,3);
	split_sreg_range(0X7D00775E,"T",0X1,3);
	split_sreg_range(0X7D007770,"T",0X1,3);
	split_sreg_range(0X7D007782,"T",0X1,3);
	split_sreg_range(0X7D007786,"T",0X1,3);
	split_sreg_range(0X7D0077C2,"T",0X1,3);
	split_sreg_range(0X7D0077DE,"T",0X1,3);
	split_sreg_range(0X7D0077E8,"T",0X1,3);
	split_sreg_range(0X7D0077F6,"T",0X1,3);
	split_sreg_range(0X7D00780C,"T",0X1,3);
	split_sreg_range(0X7D007816,"T",0X1,3);
	split_sreg_range(0X7D00781C,"T",0X1,3);
	split_sreg_range(0X7D00781E,"T",0X1,3);
	split_sreg_range(0X7D00782C,"T",0X1,3);
	split_sreg_range(0X7D00782E,"T",0X1,3);
	split_sreg_range(0X7D007858,"T",0X1,3);
	split_sreg_range(0X7D0078F8,"T",0X1,3);
	split_sreg_range(0X7D007914,"T",0X1,3);
	split_sreg_range(0X7D007924,"T",0X1,3);
	split_sreg_range(0X7D007928,"T",0X1,3);
	split_sreg_range(0X7D00792A,"T",0X1,3);
	split_sreg_range(0X7D00793C,"T",0X1,3);
	split_sreg_range(0X7D00795C,"T",0X1,3);
	split_sreg_range(0X7D007A2A,"T",0X1,3);
	split_sreg_range(0X7D007A40,"T",0X1,3);
	split_sreg_range(0X7D007A4E,"T",0X1,3);
	split_sreg_range(0X7D007A5A,"T",0X1,3);
	split_sreg_range(0X7D007A5E,"T",0X1,3);
	split_sreg_range(0X7D007A80,"T",0X1,3);
	split_sreg_range(0X7D007A9A,"T",0X1,3);
	split_sreg_range(0X7D007AC8,"T",0X1,3);
	split_sreg_range(0X7D007ACA,"T",0X1,3);
	split_sreg_range(0X7D007AD4,"T",0X1,3);
	split_sreg_range(0X7D007AFA,"T",0X1,3);
	split_sreg_range(0X7D007B02,"T",0X1,3);
	split_sreg_range(0X7D007B0C,"T",0X1,3);
	split_sreg_range(0X7D007B16,"T",0X1,3);
	split_sreg_range(0X7D007B28,"T",0X1,3);
	split_sreg_range(0X7D007B2A,"T",0X1,3);
	split_sreg_range(0X7D007B38,"T",0X1,3);
	split_sreg_range(0X7D007B4E,"T",0X1,3);
	split_sreg_range(0X7D007B5C,"T",0X1,3);
	split_sreg_range(0X7D007B74,"T",0X1,3);
	split_sreg_range(0X7D007B88,"T",0X1,3);
	split_sreg_range(0X7D007BA0,"T",0X1,3);
	split_sreg_range(0X7D007BA6,"T",0X1,3);
	split_sreg_range(0X7D007BB4,"T",0X1,3);
	split_sreg_range(0X7D007BC4,"T",0X1,3);
	split_sreg_range(0X7D007BDA,"T",0X1,3);
	split_sreg_range(0X7D007BE0,"T",0X1,3);
	split_sreg_range(0X7D007BF2,"T",0X1,3);
	split_sreg_range(0X7D007C12,"T",0X1,3);
	split_sreg_range(0X7D007C1C,"T",0X1,3);
	split_sreg_range(0X7D007C20,"T",0X1,3);
	split_sreg_range(0X7D007C2C,"T",0X1,3);
	split_sreg_range(0X7D007C5C,"T",0X1,3);
	split_sreg_range(0X7D007C66,"T",0X1,3);
	split_sreg_range(0X7D007C6A,"T",0X1,3);
	split_sreg_range(0X7D007C74,"T",0X1,3);
	split_sreg_range(0X7D007C76,"T",0X1,3);
	split_sreg_range(0X7D007C80,"T",0X1,3);
	split_sreg_range(0X7D007C94,"T",0X1,3);
	split_sreg_range(0X7D007D08,"T",0X1,3);
	split_sreg_range(0X7D007D20,"T",0X1,3);
	split_sreg_range(0X7D007D22,"T",0X1,3);
	split_sreg_range(0X7D007D44,"T",0X1,3);
	split_sreg_range(0X7D007D4C,"T",0X1,3);
	split_sreg_range(0X7D007D6A,"T",0X1,3);
	split_sreg_range(0X7D007D74,"T",0X1,3);
	split_sreg_range(0X7D007D8A,"T",0X1,3);
	split_sreg_range(0X7D007D8E,"T",0X1,3);
	split_sreg_range(0X7D007DB0,"T",0X1,3);
	split_sreg_range(0X7D007DBC,"T",0X1,3);
	split_sreg_range(0X7D007DF6,"T",0X1,3);
	split_sreg_range(0X7D007E04,"T",0X1,3);
	split_sreg_range(0X7D007E34,"T",0X1,3);
	split_sreg_range(0X7D007E36,"T",0X1,3);
	split_sreg_range(0X7D007E40,"T",0X1,3);
	split_sreg_range(0X7D007E8E,"T",0X1,3);
	split_sreg_range(0X7D007E90,"T",0X1,3);
	split_sreg_range(0X7D007E9C,"T",0X1,3);
	split_sreg_range(0X7D007F10,"T",0X1,3);
	split_sreg_range(0X7D007F14,"T",0X1,3);
	split_sreg_range(0X7D007F16,"T",0X1,3);
	split_sreg_range(0X7D007F24,"T",0X1,3);
	split_sreg_range(0X7D007F2A,"T",0X1,3);
	split_sreg_range(0X7D007F36,"T",0X1,3);
	split_sreg_range(0X7D007F3A,"T",0X1,3);
	split_sreg_range(0X7D007F44,"T",0X1,3);
	split_sreg_range(0X7D007F98,"T",0X1,3);
	split_sreg_range(0X7D007FCA,"T",0X1,3);
	split_sreg_range(0X7D007FFA,"T",0X1,3);
	split_sreg_range(0X7D008012,"T",0X1,3);
	split_sreg_range(0X7D008020,"T",0X1,3);
	split_sreg_range(0X7D008024,"T",0X1,3);
	split_sreg_range(0X7D00803C,"T",0X1,3);
	split_sreg_range(0X7D008040,"T",0X1,3);
	split_sreg_range(0X7D008042,"T",0X1,3);
	split_sreg_range(0X7D008054,"T",0X1,3);
	split_sreg_range(0X7D008072,"T",0X1,3);
	split_sreg_range(0X7D008086,"T",0X1,3);
	split_sreg_range(0X7D00809A,"T",0X1,3);
	split_sreg_range(0X7D0080AA,"T",0X1,3);
	split_sreg_range(0X7D0080B8,"T",0X1,3);
	split_sreg_range(0X7D0080BE,"T",0X1,3);
	split_sreg_range(0X7D0080C4,"T",0X1,3);
	split_sreg_range(0X7D0080CA,"T",0X1,3);
	split_sreg_range(0X7D0080D0,"T",0X1,3);
	split_sreg_range(0X7D0080D6,"T",0X1,3);
	split_sreg_range(0X7D0080DC,"T",0X1,3);
	split_sreg_range(0X7D0080EA,"T",0X1,3);
	split_sreg_range(0X7D0080F8,"T",0X1,3);
	split_sreg_range(0X7D0080FE,"T",0X1,3);
	split_sreg_range(0X7D00810E,"T",0X1,3);
	split_sreg_range(0X7D008114,"T",0X1,3);
	split_sreg_range(0X7D00811A,"T",0X1,3);
	split_sreg_range(0X7D008120,"T",0X1,3);
	split_sreg_range(0X7D008122,"T",0X1,3);
	split_sreg_range(0X7D008126,"T",0X1,3);
	split_sreg_range(0X7D008128,"T",0X1,3);
	split_sreg_range(0X7D00812A,"T",0X1,3);
	split_sreg_range(0X7D00813A,"T",0X1,3);
	split_sreg_range(0X7D00813E,"T",0X1,3);
	split_sreg_range(0X7D008194,"T",0X1,3);
	split_sreg_range(0X7D0081AC,"T",0X1,3);
	split_sreg_range(0X7D0081B4,"T",0X1,3);
	split_sreg_range(0X7D0081E0,"T",0X1,3);
	split_sreg_range(0X7D0081EE,"T",0X1,3);
	split_sreg_range(0X7D0081F8,"T",0X1,3);
	split_sreg_range(0X7D008200,"T",0X1,3);
	split_sreg_range(0X7D008230,"T",0X1,3);
	split_sreg_range(0X7D00823A,"T",0X1,3);
	split_sreg_range(0X7D008246,"T",0X1,3);
	split_sreg_range(0X7D008250,"T",0X1,3);
	split_sreg_range(0X7D008290,"T",0X1,3);
	split_sreg_range(0X7D0082D4,"T",0X1,3);
	split_sreg_range(0X7D0082D8,"T",0X1,3);
	split_sreg_range(0X7D0082DC,"T",0X1,3);
	split_sreg_range(0X7D0082DE,"T",0X1,3);
	split_sreg_range(0X7D0082F8,"T",0X1,3);
	split_sreg_range(0X7D008318,"T",0X1,3);
	split_sreg_range(0X7D008338,"T",0X1,3);
	split_sreg_range(0X7D008340,"T",0X1,3);
	split_sreg_range(0X7D008360,"T",0X1,3);
	split_sreg_range(0X7D008380,"T",0X1,3);
	split_sreg_range(0X7D008388,"T",0X1,3);
	split_sreg_range(0X7D00839C,"T",0X1,3);
	split_sreg_range(0X7D00839E,"T",0X1,3);
	split_sreg_range(0X7D0083AE,"T",0X1,3);
	split_sreg_range(0X7D0083C6,"T",0X1,3);
	split_sreg_range(0X7D0083F6,"T",0X1,3);
	split_sreg_range(0X7D008406,"T",0X1,3);
	split_sreg_range(0X7D00840A,"T",0X1,3);
	split_sreg_range(0X7D00840C,"T",0X1,3);
	split_sreg_range(0X7D008424,"T",0X1,3);
	split_sreg_range(0X7D00843A,"T",0X1,3);
	split_sreg_range(0X7D00843E,"T",0X1,3);
	split_sreg_range(0X7D008452,"T",0X1,3);
	split_sreg_range(0X7D00847E,"T",0X1,3);
	split_sreg_range(0X7D008482,"T",0X1,3);
	split_sreg_range(0X7D008484,"T",0X1,3);
	split_sreg_range(0X7D00849C,"T",0X1,3);
	split_sreg_range(0X7D0084B0,"T",0X1,3);
	split_sreg_range(0X7D0084B4,"T",0X1,3);
	split_sreg_range(0X7D0084D8,"T",0X1,3);
	split_sreg_range(0X7D008500,"T",0X1,3);
	split_sreg_range(0X7D008518,"T",0X1,3);
	split_sreg_range(0X7D008538,"T",0X1,3);
	split_sreg_range(0X7D00857E,"T",0X1,3);
	split_sreg_range(0X7D00858A,"T",0X1,3);
	split_sreg_range(0X7D00858E,"T",0X1,3);
	split_sreg_range(0X7D008592,"T",0X1,3);
	split_sreg_range(0X7D008594,"T",0X1,3);
	split_sreg_range(0X7D0085BC,"T",0X1,3);
	split_sreg_range(0X7D0085D6,"T",0X1,3);
	split_sreg_range(0X7D008628,"T",0X1,3);
	split_sreg_range(0X7D008638,"T",0X1,3);
	split_sreg_range(0X7D008650,"T",0X1,3);
	split_sreg_range(0X7D00865C,"T",0X1,3);
	split_sreg_range(0X7D008662,"T",0X1,3);
	split_sreg_range(0X7D008668,"T",0X1,3);
	split_sreg_range(0X7D00866C,"T",0X1,3);
	split_sreg_range(0X7D008674,"T",0X1,3);
	split_sreg_range(0X7D008676,"T",0X1,3);
	split_sreg_range(0X7D008686,"T",0X1,3);
	split_sreg_range(0X7D00868A,"T",0X1,3);
	split_sreg_range(0X7D00868E,"T",0X1,3);
	split_sreg_range(0X7D008692,"T",0X1,3);
	split_sreg_range(0X7D008696,"T",0X1,3);
	split_sreg_range(0X7D0086A0,"T",0X1,3);
	split_sreg_range(0X7D0086C8,"T",0X1,3);
	split_sreg_range(0X7D0086FA,"T",0X1,3);
	split_sreg_range(0X7D008724,"T",0X1,3);
	split_sreg_range(0X7D008728,"T",0X1,3);
	split_sreg_range(0X7D00872C,"T",0X1,3);
	split_sreg_range(0X7D00872E,"T",0X1,3);
	split_sreg_range(0X7D008740,"T",0X1,3);
	split_sreg_range(0X7D00877A,"T",0X1,3);
	split_sreg_range(0X7D00877C,"T",0X1,3);
	split_sreg_range(0X7D008788,"T",0X1,3);
	split_sreg_range(0X7D0087CE,"T",0X1,3);
	split_sreg_range(0X7D0087D0,"T",0X1,3);
	split_sreg_range(0X7D0087DC,"T",0X1,3);
	split_sreg_range(0X7D008866,"T",0X1,3);
	split_sreg_range(0X7D008870,"T",0X1,3);
	split_sreg_range(0X7D008874,"T",0X1,3);
	split_sreg_range(0X7D008878,"T",0X1,3);
	split_sreg_range(0X7D00887A,"T",0X1,3);
	split_sreg_range(0X7D008890,"T",0X1,3);
	split_sreg_range(0X7D0088F8,"T",0X1,3);
	split_sreg_range(0X7D0088FA,"T",0X1,3);
	split_sreg_range(0X7D008908,"T",0X1,3);
	split_sreg_range(0X7D0089DC,"T",0X1,3);
	split_sreg_range(0X7D0089F2,"T",0X1,3);
	split_sreg_range(0X7D008A00,"T",0X1,3);
	split_sreg_range(0X7D008A1C,"T",0X1,3);
	split_sreg_range(0X7D008A4E,"T",0X1,3);
	split_sreg_range(0X7D008AA6,"T",0X1,3);
	split_sreg_range(0X7D008AAE,"T",0X1,3);
	split_sreg_range(0X7D008AC0,"T",0X1,3);
	split_sreg_range(0X7D008AD6,"T",0X1,3);
	split_sreg_range(0X7D008B6C,"T",0X1,3);
	split_sreg_range(0X7D008BD4,"T",0X1,3);
	split_sreg_range(0X7D008BE6,"T",0X1,3);
	split_sreg_range(0X7D008BEC,"T",0X1,3);
	split_sreg_range(0X7D008C34,"T",0X1,3);
	split_sreg_range(0X7D008C38,"T",0X1,3);
	split_sreg_range(0X7D008C52,"T",0X1,3);
	split_sreg_range(0X7D008C56,"T",0X1,3);
	split_sreg_range(0X7D008C5A,"T",0X1,3);
	split_sreg_range(0X7D008C5E,"T",0X1,3);
	split_sreg_range(0X7D008C60,"T",0X1,3);
	split_sreg_range(0X7D008C78,"T",0X1,3);
	split_sreg_range(0X7D008CA2,"T",0X1,3);
	split_sreg_range(0X7D008CA6,"T",0X1,3);
	split_sreg_range(0X7D008CC2,"T",0X1,3);
	split_sreg_range(0X7D008CC6,"T",0X1,3);
	split_sreg_range(0X7D008CD6,"T",0X1,3);
	split_sreg_range(0X7D008D00,"T",0X1,3);
	split_sreg_range(0X7D008D44,"T",0X1,3);
	split_sreg_range(0X7D008D48,"T",0X1,3);
	split_sreg_range(0X7D008D6A,"T",0X1,3);
	split_sreg_range(0X7D008D8E,"T",0X1,3);
	split_sreg_range(0X7D008D92,"T",0X1,3);
	split_sreg_range(0X7D008D96,"T",0X1,3);
	split_sreg_range(0X7D008D9A,"T",0X1,3);
	split_sreg_range(0X7D008D9E,"T",0X1,3);
	split_sreg_range(0X7D008DB6,"T",0X1,3);
	split_sreg_range(0X7D008DC2,"T",0X1,3);
	split_sreg_range(0X7D008DC6,"T",0X1,3);
	split_sreg_range(0X7D008DD0,"T",0X1,3);
	split_sreg_range(0X7D008DF4,"T",0X1,3);
	split_sreg_range(0X7D008E4A,"T",0X1,3);
	split_sreg_range(0X7D008E4E,"T",0X1,3);
	split_sreg_range(0X7D008E52,"T",0X1,3);
	split_sreg_range(0X7D008E54,"T",0X1,3);
	split_sreg_range(0X7D008E64,"T",0X1,3);
	split_sreg_range(0X7D008E92,"T",0X1,3);
	split_sreg_range(0X7D008E94,"T",0X1,3);
	split_sreg_range(0X7D008E9C,"T",0X1,3);
	split_sreg_range(0X7D008ED6,"T",0X1,3);
	split_sreg_range(0X7D008F08,"T",0X1,3);
	split_sreg_range(0X7D008F0C,"T",0X1,3);
	split_sreg_range(0X7D008F0E,"T",0X1,3);
	split_sreg_range(0X7D008F24,"T",0X1,3);
	split_sreg_range(0X7D008F38,"T",0X1,3);
	split_sreg_range(0X7D008F7C,"T",0X1,3);
	split_sreg_range(0X7D008F80,"T",0X1,3);
	split_sreg_range(0X7D008F8C,"T",0X1,3);
	split_sreg_range(0X7D008F90,"T",0X1,3);
	split_sreg_range(0X7D008F94,"T",0X1,3);
	split_sreg_range(0X7D008F96,"T",0X1,3);
	split_sreg_range(0X7D008FAC,"T",0X1,3);
	split_sreg_range(0X7D008FC2,"T",0X1,3);
	split_sreg_range(0X7D009046,"T",0X1,3);
	split_sreg_range(0X7D00905E,"T",0X1,3);
	split_sreg_range(0X7D00907C,"T",0X1,3);
	split_sreg_range(0X7D00907E,"T",0X1,3);
	split_sreg_range(0X7D00908E,"T",0X1,3);
	split_sreg_range(0X7D0090A0,"T",0X1,3);
	split_sreg_range(0X7D0090BA,"T",0X1,3);
	split_sreg_range(0X7D0090BE,"T",0X1,3);
	split_sreg_range(0X7D0090C0,"T",0X1,3);
	split_sreg_range(0X7D0090DC,"T",0X1,3);
	split_sreg_range(0X7D009136,"T",0X1,3);
	split_sreg_range(0X7D00913A,"T",0X1,3);
	split_sreg_range(0X7D009170,"T",0X1,3);
	split_sreg_range(0X7D00917A,"T",0X1,3);
	split_sreg_range(0X7D009198,"T",0X1,3);
	split_sreg_range(0X7D00919A,"T",0X1,3);
	split_sreg_range(0X7D0091B0,"T",0X1,3);
	split_sreg_range(0X7D009316,"T",0X1,3);
	split_sreg_range(0X7D009318,"T",0X1,3);
	split_sreg_range(0X7D009326,"T",0X1,3);
	split_sreg_range(0X7D009392,"T",0X1,3);
	split_sreg_range(0X7D0093A8,"T",0X1,3);
	split_sreg_range(0X7D0093AC,"T",0X1,3);
	split_sreg_range(0X7D0093B2,"T",0X1,3);
	split_sreg_range(0X7D0093B6,"T",0X1,3);
	split_sreg_range(0X7D009418,"T",0X1,3);
	split_sreg_range(0X7D00941E,"T",0X1,3);
	split_sreg_range(0X7D009436,"T",0X1,3);
	split_sreg_range(0X7D009490,"T",0X1,3);
	split_sreg_range(0X7D00949C,"T",0X1,3);
	split_sreg_range(0X7D0094AC,"T",0X1,3);
	split_sreg_range(0X7D0094B2,"T",0X1,3);
	split_sreg_range(0X7D0094E6,"T",0X1,3);
	split_sreg_range(0X7D0094FA,"T",0X1,3);
	split_sreg_range(0X7D009514,"T",0X1,3);
	split_sreg_range(0X7D00952C,"T",0X1,3);
	split_sreg_range(0X7D00953A,"T",0X1,3);
	split_sreg_range(0X7D009540,"T",0X1,3);
	split_sreg_range(0X7D009566,"T",0X1,3);
	split_sreg_range(0X7D00957C,"T",0X1,3);
	split_sreg_range(0X7D0095B4,"T",0X1,3);
	split_sreg_range(0X7D0095C2,"T",0X1,3);
	split_sreg_range(0X7D0095D2,"T",0X1,3);
	split_sreg_range(0X7D0095D8,"T",0X1,3);
	split_sreg_range(0X7D009604,"T",0X1,3);
	split_sreg_range(0X7D00962E,"T",0X1,3);
	split_sreg_range(0X7D009632,"T",0X1,3);
	split_sreg_range(0X7D009636,"T",0X1,3);
	split_sreg_range(0X7D009638,"T",0X1,3);
	split_sreg_range(0X7D009642,"T",0X1,3);
	split_sreg_range(0X7D009644,"T",0X1,3);
	split_sreg_range(0X7D009670,"T",0X1,3);
	split_sreg_range(0X7D00969E,"T",0X1,3);
	split_sreg_range(0X7D0096A8,"T",0X1,3);
	split_sreg_range(0X7D009722,"T",0X1,3);
	split_sreg_range(0X7D009726,"T",0X1,3);
	split_sreg_range(0X7D009728,"T",0X1,3);
	split_sreg_range(0X7D009740,"T",0X1,3);
	split_sreg_range(0X7D00978E,"T",0X1,3);
	split_sreg_range(0X7D009790,"T",0X1,3);
	split_sreg_range(0X7D0097A0,"T",0X1,3);
	split_sreg_range(0X7D00984E,"T",0X1,3);
	split_sreg_range(0X7D009850,"T",0X1,3);
	split_sreg_range(0X7D009862,"T",0X1,3);
	split_sreg_range(0X7D009864,"T",0X1,3);
	split_sreg_range(0X7D00987C,"T",0X1,3);
	split_sreg_range(0X7D0098DA,"T",0X1,3);
	split_sreg_range(0X7D0098FE,"T",0X1,3);
	split_sreg_range(0X7D00997C,"T",0X1,3);
	split_sreg_range(0X7D00997E,"T",0X1,3);
	split_sreg_range(0X7D009980,"T",0X1,3);
	split_sreg_range(0X7D009992,"T",0X1,3);
	split_sreg_range(0X7D0099A2,"T",0X1,3);
	split_sreg_range(0X7D0099A6,"T",0X1,3);
	split_sreg_range(0X7D0099A8,"T",0X1,3);
	split_sreg_range(0X7D0099C4,"T",0X1,3);
	split_sreg_range(0X7D009A22,"T",0X1,3);
	split_sreg_range(0X7D009A46,"T",0X1,3);
	split_sreg_range(0X7D009AA4,"T",0X1,3);
	split_sreg_range(0X7D009AA6,"T",0X1,3);
	split_sreg_range(0X7D009ABA,"T",0X1,3);
	split_sreg_range(0X7D009ABE,"T",0X1,3);
	split_sreg_range(0X7D009AC2,"T",0X1,3);
	split_sreg_range(0X7D009AC4,"T",0X1,3);
	split_sreg_range(0X7D009AE0,"T",0X1,3);
	split_sreg_range(0X7D009BC4,"T",0X1,3);
	split_sreg_range(0X7D009BCE,"T",0X1,3);
	split_sreg_range(0X7D009BD4,"T",0X1,3);
	split_sreg_range(0X7D009BE6,"T",0X1,3);
	split_sreg_range(0X7D009BF6,"T",0X1,3);
	split_sreg_range(0X7D009BFE,"T",0X1,3);
	split_sreg_range(0X7D009C1E,"T",0X1,3);
	split_sreg_range(0X7D009C34,"T",0X1,3);
	split_sreg_range(0X7D009C46,"T",0X1,3);
	split_sreg_range(0X7D009C54,"T",0X1,3);
	split_sreg_range(0X7D009C5A,"T",0X1,3);
	split_sreg_range(0X7D009C64,"T",0X1,3);
	split_sreg_range(0X7D009C70,"T",0X1,3);
	split_sreg_range(0X7D009C7A,"T",0X1,3);
	split_sreg_range(0X7D009C8E,"T",0X1,3);
	split_sreg_range(0X7D009C90,"T",0X1,3);
	split_sreg_range(0X7D009CA8,"T",0X1,3);
	split_sreg_range(0X7D009CAC,"T",0X1,3);
	split_sreg_range(0X7D009CB6,"T",0X1,3);
	split_sreg_range(0X7D009CC8,"T",0X1,3);
	split_sreg_range(0X7D009CCC,"T",0X1,3);
	split_sreg_range(0X7D009CD8,"T",0X1,3);
	split_sreg_range(0X7D009CE4,"T",0X1,3);
	split_sreg_range(0X7D009CFE,"T",0X1,3);
	split_sreg_range(0X7D009D02,"T",0X1,3);
	split_sreg_range(0X7D009D04,"T",0X1,3);
	split_sreg_range(0X7D009D1C,"T",0X1,3);
	split_sreg_range(0X7D009D24,"T",0X1,3);
	split_sreg_range(0X7D009D2A,"T",0X1,3);
	split_sreg_range(0X7D009D3C,"T",0X1,3);
	split_sreg_range(0X7D009D40,"T",0X1,3);
	split_sreg_range(0X7D009D44,"T",0X1,3);
	split_sreg_range(0X7D009D46,"T",0X1,3);
	split_sreg_range(0X7D009D54,"T",0X1,3);
	split_sreg_range(0X7D009D6E,"T",0X1,3);
	split_sreg_range(0X7D009D72,"T",0X1,3);
	split_sreg_range(0X7D009D74,"T",0X1,3);
	split_sreg_range(0X7D009DF8,"T",0X1,3);
	split_sreg_range(0X7D009EA0,"T",0X1,3);
	split_sreg_range(0X7D009EA4,"T",0X1,3);
	split_sreg_range(0X7D009EDC,"T",0X1,3);
	split_sreg_range(0X7D009EEC,"T",0X1,3);
	split_sreg_range(0X7D009F04,"T",0X1,3);
	split_sreg_range(0X7D009F08,"T",0X1,3);
	split_sreg_range(0X7D009F0A,"T",0X1,3);
	split_sreg_range(0X7D009F24,"T",0X1,3);
	split_sreg_range(0X7D009F2A,"T",0X1,3);
	split_sreg_range(0X7D009F3E,"T",0X1,3);
	split_sreg_range(0X7D009F42,"T",0X1,3);
	split_sreg_range(0X7D009F46,"T",0X1,3);
	split_sreg_range(0X7D009F48,"T",0X1,3);
	split_sreg_range(0X7D009F52,"T",0X1,3);
	split_sreg_range(0X7D009F56,"T",0X1,3);
	split_sreg_range(0X7D009F58,"T",0X1,3);
	split_sreg_range(0X7D009F84,"T",0X1,3);
	split_sreg_range(0X7D009FAA,"T",0X1,3);
	split_sreg_range(0X7D009FB0,"T",0X1,3);
	split_sreg_range(0X7D009FC0,"T",0X1,3);
	split_sreg_range(0X7D009FE8,"T",0X1,3);
	split_sreg_range(0X7D009FEE,"T",0X1,3);
	split_sreg_range(0X7D009FFC,"T",0X1,3);
	split_sreg_range(0X7D00A020,"T",0X1,3);
	split_sreg_range(0X7D00A024,"T",0X1,3);
	split_sreg_range(0X7D00A030,"T",0X1,3);
	split_sreg_range(0X7D00A054,"T",0X1,3);
	split_sreg_range(0X7D00A058,"T",0X1,3);
	split_sreg_range(0X7D00A064,"T",0X1,3);
	split_sreg_range(0X7D00A090,"T",0X1,3);
	split_sreg_range(0X7D00A09A,"T",0X1,3);
	split_sreg_range(0X7D00A0A8,"T",0X1,3);
	split_sreg_range(0X7D00A0D0,"T",0X1,3);
	split_sreg_range(0X7D00A0D8,"T",0X1,3);
	split_sreg_range(0X7D00A0E4,"T",0X1,3);
	split_sreg_range(0X7D00A112,"T",0X1,3);
	split_sreg_range(0X7D00A122,"T",0X1,3);
	split_sreg_range(0X7D00A130,"T",0X1,3);
	split_sreg_range(0X7D00A15E,"T",0X1,3);
	split_sreg_range(0X7D00A16E,"T",0X1,3);
	split_sreg_range(0X7D00A17C,"T",0X1,3);
	split_sreg_range(0X7D00A1A4,"T",0X1,3);
	split_sreg_range(0X7D00A1AC,"T",0X1,3);
	split_sreg_range(0X7D00A1B8,"T",0X1,3);
	split_sreg_range(0X7D00A1E4,"T",0X1,3);
	split_sreg_range(0X7D00A1F0,"T",0X1,3);
	split_sreg_range(0X7D00A1FC,"T",0X1,3);
	split_sreg_range(0X7D00A228,"T",0X1,3);
	split_sreg_range(0X7D00A234,"T",0X1,3);
	split_sreg_range(0X7D00A240,"T",0X1,3);
	split_sreg_range(0X7D00A288,"T",0X1,3);
	split_sreg_range(0X7D00A294,"T",0X1,3);
	split_sreg_range(0X7D00A2A2,"T",0X1,3);
	split_sreg_range(0X7D00A2A4,"T",0X1,3);
	split_sreg_range(0X7D00A2AC,"T",0X1,3);
	split_sreg_range(0X7D00A2B0,"T",0X1,3);
	split_sreg_range(0X7D00A2D0,"T",0X1,3);
	split_sreg_range(0X7D00A312,"T",0X1,3);
	split_sreg_range(0X7D00A340,"T",0X1,3);
	split_sreg_range(0X7D00A378,"T",0X1,3);
	split_sreg_range(0X7D00A37A,"T",0X1,3);
	split_sreg_range(0X7D00A39E,"T",0X1,3);
	split_sreg_range(0X7D00A3A4,"T",0X1,3);
	split_sreg_range(0X7D00A3AA,"T",0X1,3);
	split_sreg_range(0X7D00A3AE,"T",0X1,3);
	split_sreg_range(0X7D00A3B2,"T",0X1,3);
	split_sreg_range(0X7D00A3B4,"T",0X1,3);
	split_sreg_range(0X7D00A3C8,"T",0X1,3);
	split_sreg_range(0X7D00A3CC,"T",0X1,3);
	split_sreg_range(0X7D00A3CE,"T",0X1,3);
	split_sreg_range(0X7D00A3EC,"T",0X1,3);
	split_sreg_range(0X7D00A43E,"T",0X1,3);
	split_sreg_range(0X7D00A442,"T",0X1,3);
	split_sreg_range(0X7D00A450,"T",0X1,3);
	split_sreg_range(0X7D00A46E,"T",0X1,3);
	split_sreg_range(0X7D00A4D2,"T",0X1,3);
	split_sreg_range(0X7D00A4DA,"T",0X1,3);
	split_sreg_range(0X7D00A532,"T",0X1,3);
	split_sreg_range(0X7D00A566,"T",0X1,3);
	split_sreg_range(0X7D00A5AE,"T",0X1,3);
	split_sreg_range(0X7D00A5B6,"T",0X1,3);
	split_sreg_range(0X7D00A5C0,"T",0X1,3);
	split_sreg_range(0X7D00A5C8,"T",0X1,3);
	split_sreg_range(0X7D00A5CE,"T",0X1,3);
	split_sreg_range(0X7D00A5DA,"T",0X1,3);
	split_sreg_range(0X7D00A5E4,"T",0X1,3);
	split_sreg_range(0X7D00A5F2,"T",0X1,3);
	split_sreg_range(0X7D00A5FC,"T",0X1,3);
	split_sreg_range(0X7D00A602,"T",0X1,3);
	split_sreg_range(0X7D00A60A,"T",0X1,3);
	split_sreg_range(0X7D00A612,"T",0X1,3);
	split_sreg_range(0X7D00A614,"T",0X1,3);
	split_sreg_range(0X7D00A61A,"T",0X1,3);
	split_sreg_range(0X7D00A654,"T",0X1,3);
	split_sreg_range(0X7D00A676,"T",0X1,3);
	split_sreg_range(0X7D00A6CA,"T",0X1,3);
	split_sreg_range(0X7D00A6D4,"T",0X1,3);
	split_sreg_range(0X7D00A6EC,"T",0X1,3);
	split_sreg_range(0X7D00A6FC,"T",0X1,3);
	split_sreg_range(0X7D00A70C,"T",0X1,3);
	split_sreg_range(0X7D00A722,"T",0X1,3);
	split_sreg_range(0X7D00A752,"T",0X1,3);
	split_sreg_range(0X7D00A766,"T",0X1,3);
	split_sreg_range(0X7D00A77A,"T",0X1,3);
	split_sreg_range(0X7D00A782,"T",0X1,3);
	split_sreg_range(0X7D00A78A,"T",0X1,3);
	split_sreg_range(0X7D00A7DE,"T",0X1,3);
	split_sreg_range(0X7D00A7E2,"T",0X1,3);
	split_sreg_range(0X7D00A7FC,"T",0X1,3);
	split_sreg_range(0X7D00A80A,"T",0X1,3);
	split_sreg_range(0X7D00A882,"T",0X1,3);
	split_sreg_range(0X7D00A886,"T",0X1,3);
	split_sreg_range(0X7D00A890,"T",0X1,3);
	split_sreg_range(0X7D00A892,"T",0X1,3);
	split_sreg_range(0X7D00A896,"T",0X1,3);
	split_sreg_range(0X7D00A89C,"T",0X1,3);
	split_sreg_range(0X7D00A8A2,"T",0X1,3);
	split_sreg_range(0X7D00A8C8,"T",0X1,3);
	split_sreg_range(0X7D00A8CA,"T",0X1,3);
	split_sreg_range(0X7D00A8E4,"T",0X1,3);
	split_sreg_range(0X7D00A8E8,"T",0X1,3);
	split_sreg_range(0X7D00A92C,"T",0X1,3);
	split_sreg_range(0X7D00A94E,"T",0X1,3);
	split_sreg_range(0X7D00A956,"T",0X1,3);
	split_sreg_range(0X7D00A966,"T",0X1,3);
	split_sreg_range(0X7D00A9AE,"T",0X1,3);
	split_sreg_range(0X7D00A9B8,"T",0X1,3);
	split_sreg_range(0X7D00A9BC,"T",0X1,3);
	split_sreg_range(0X7D00A9BE,"T",0X1,3);
	split_sreg_range(0X7D00A9C6,"T",0X1,3);
	split_sreg_range(0X7D00A9CE,"T",0X1,3);
	split_sreg_range(0X7D00A9D4,"T",0X1,3);
	split_sreg_range(0X7D00A9DA,"T",0X1,3);
	split_sreg_range(0X7D00A9E6,"T",0X1,3);
	split_sreg_range(0X7D00A9F4,"T",0X1,3);
	split_sreg_range(0X7D00A9F6,"T",0X1,3);
	split_sreg_range(0X7D00A9FE,"T",0X1,3);
	split_sreg_range(0X7D00AA0A,"T",0X1,3);
	split_sreg_range(0X7D00AA1A,"T",0X1,3);
	split_sreg_range(0X7D00AA1E,"T",0X1,3);
	split_sreg_range(0X7D00AA22,"T",0X1,3);
	split_sreg_range(0X7D00AA28,"T",0X1,3);
	split_sreg_range(0X7D00AA2A,"T",0X1,3);
	split_sreg_range(0X7D00AA2E,"T",0X1,3);
	split_sreg_range(0X7D00AA58,"T",0X1,3);
	split_sreg_range(0X7D00AAA2,"T",0X1,3);
	split_sreg_range(0X7D00AAA6,"T",0X1,3);
	split_sreg_range(0X7D00AAF4,"T",0X1,3);
	split_sreg_range(0X7D00AAF8,"T",0X1,3);
	split_sreg_range(0X7D00AAFC,"T",0X1,3);
	split_sreg_range(0X7D00AB00,"T",0X1,3);
	split_sreg_range(0X7D00AB02,"T",0X1,3);
	split_sreg_range(0X7D00AB24,"T",0X1,3);
	split_sreg_range(0X7D00AC12,"T",0X1,3);
	split_sreg_range(0X7D00AC18,"T",0X1,3);
	split_sreg_range(0X7D00AC1C,"T",0X1,3);
	split_sreg_range(0X7D00AC1E,"T",0X1,3);
	split_sreg_range(0X7D00AC22,"T",0X1,3);
	split_sreg_range(0X7D00AC26,"T",0X1,3);
	split_sreg_range(0X7D00AC28,"T",0X1,3);
	split_sreg_range(0X7D00AC3E,"T",0X1,3);
	split_sreg_range(0X7D00AC40,"T",0X1,3);
	split_sreg_range(0X7D00AC60,"T",0X1,3);
	split_sreg_range(0X7D00AC98,"T",0X1,3);
	split_sreg_range(0X7D00AC9C,"T",0X1,3);
	split_sreg_range(0X7D00AC9E,"T",0X1,3);
	split_sreg_range(0X7D00ACAC,"T",0X1,3);
	split_sreg_range(0X7D00ACC8,"T",0X1,3);
	split_sreg_range(0X7D00ACD2,"T",0X1,3);
	split_sreg_range(0X7D00ACD6,"T",0X1,3);
	split_sreg_range(0X7D00ACDA,"T",0X1,3);
	split_sreg_range(0X7D00ACE8,"T",0X1,3);
	split_sreg_range(0X7D00AD04,"T",0X1,3);
	split_sreg_range(0X7D00AD0E,"T",0X1,3);
	split_sreg_range(0X7D00AD12,"T",0X1,3);
	split_sreg_range(0X7D00AD2A,"T",0X1,3);
	split_sreg_range(0X7D00AD48,"T",0X1,3);
	split_sreg_range(0X7D00AD4C,"T",0X1,3);
	split_sreg_range(0X7D00AD4E,"T",0X1,3);
	split_sreg_range(0X7D00AD68,"T",0X1,3);
	split_sreg_range(0X7D00AD72,"T",0X1,3);
	split_sreg_range(0X7D00AD76,"T",0X1,3);
	split_sreg_range(0X7D00AD80,"T",0X1,3);
	split_sreg_range(0X7D00AD84,"T",0X1,3);
	split_sreg_range(0X7D00AD96,"T",0X1,3);
	split_sreg_range(0X7D00AD9A,"T",0X1,3);
	split_sreg_range(0X7D00ADB0,"T",0X1,3);
	split_sreg_range(0X7D00ADB4,"T",0X1,3);
	split_sreg_range(0X7D00ADDC,"T",0X1,3);
	split_sreg_range(0X7D00AE0E,"T",0X1,3);
	split_sreg_range(0X7D00AE10,"T",0X1,3);
	split_sreg_range(0X7D00AE1A,"T",0X1,3);
	split_sreg_range(0X7D00AE28,"T",0X1,3);
	split_sreg_range(0X7D00AE4C,"T",0X1,3);
	split_sreg_range(0X7D00AE76,"T",0X1,3);
	split_sreg_range(0X7D00AE80,"T",0X1,3);
	split_sreg_range(0X7D00AE84,"T",0X1,3);
	split_sreg_range(0X7D00AEAC,"T",0X1,3);
	split_sreg_range(0X7D00AEB0,"T",0X1,3);
	split_sreg_range(0X7D00AF2A,"T",0X1,3);
	split_sreg_range(0X7D00AF2E,"T",0X1,3);
	split_sreg_range(0X7D00AF30,"T",0X1,3);
	split_sreg_range(0X7D00AF3A,"T",0X1,3);
	split_sreg_range(0X7D00AF46,"T",0X1,3);
	split_sreg_range(0X7D00AF60,"T",0X1,3);
	split_sreg_range(0X7D00B004,"T",0X1,3);
	split_sreg_range(0X7D00B026,"T",0X1,3);
	split_sreg_range(0X7D00B02A,"T",0X1,3);
	split_sreg_range(0X7D00B02C,"T",0X1,3);
	split_sreg_range(0X7D00B050,"T",0X1,3);
	split_sreg_range(0X7D00B0CE,"T",0X1,3);
	split_sreg_range(0X7D00B0D2,"T",0X1,3);
	split_sreg_range(0X7D00B0D4,"T",0X1,3);
	split_sreg_range(0X7D00B0E8,"T",0X1,3);
	split_sreg_range(0X7D00B18C,"T",0X1,3);
	split_sreg_range(0X7D00B190,"T",0X1,3);
	split_sreg_range(0X7D00B192,"T",0X1,3);
	split_sreg_range(0X7D00B1B4,"T",0X1,3);
	split_sreg_range(0X7D00B216,"T",0X1,3);
	split_sreg_range(0X7D00B21A,"T",0X1,3);
	split_sreg_range(0X7D00B21C,"T",0X1,3);
	split_sreg_range(0X7D00B256,"T",0X1,3);
	split_sreg_range(0X7D00B25A,"T",0X1,3);
	split_sreg_range(0X7D00B25C,"T",0X1,3);
	split_sreg_range(0X7D00B274,"T",0X1,3);
	split_sreg_range(0X7D00B2D6,"T",0X1,3);
	split_sreg_range(0X7D00B2DA,"T",0X1,3);
	split_sreg_range(0X7D00B2DE,"T",0X1,3);
	split_sreg_range(0X7D00B2E0,"T",0X1,3);
	split_sreg_range(0X7D00B2F8,"T",0X1,3);
	split_sreg_range(0X7D00B31E,"T",0X1,3);
	split_sreg_range(0X7D00B32C,"T",0X1,3);
	split_sreg_range(0X7D00B35C,"T",0X1,3);
	split_sreg_range(0X7D00B37C,"T",0X1,3);
	split_sreg_range(0X7D00B38C,"T",0X1,3);
	split_sreg_range(0X7D00B398,"T",0X1,3);
	split_sreg_range(0X7D00B3B0,"T",0X1,3);
	split_sreg_range(0X7D00B3CC,"T",0X1,3);
	split_sreg_range(0X7D00B3DA,"T",0X1,3);
	split_sreg_range(0X7D00B3E6,"T",0X1,3);
	split_sreg_range(0X7D00B3E8,"T",0X1,3);
	split_sreg_range(0X7D00B3F6,"T",0X1,3);
	split_sreg_range(0X7D00B42C,"T",0X1,3);
	split_sreg_range(0X7D00B430,"T",0X1,3);
	split_sreg_range(0X7D00B434,"T",0X1,3);
	split_sreg_range(0X7D00B44C,"T",0X1,3);
	split_sreg_range(0X7D00B468,"T",0X1,3);
	split_sreg_range(0X7D00B49A,"T",0X1,3);
	split_sreg_range(0X7D00B4BA,"T",0X1,3);
	split_sreg_range(0X7D00B4D6,"T",0X1,3);
	split_sreg_range(0X7D00B4F2,"T",0X1,3);
	split_sreg_range(0X7D00B500,"T",0X1,3);
	split_sreg_range(0X7D00B532,"T",0X1,3);
	split_sreg_range(0X7D00B53C,"T",0X1,3);
	split_sreg_range(0X7D00B546,"T",0X1,3);
	split_sreg_range(0X7D00B550,"T",0X1,3);
	split_sreg_range(0X7D00B562,"T",0X1,3);
	split_sreg_range(0X7D00B578,"T",0X1,3);
	split_sreg_range(0X7D00B588,"T",0X1,3);
	split_sreg_range(0X7D00B58C,"T",0X1,3);
	split_sreg_range(0X7D00B58E,"T",0X1,3);
	split_sreg_range(0X7D00B598,"T",0X1,3);
	split_sreg_range(0X7D00B59A,"T",0X1,3);
	split_sreg_range(0X7D00B5B0,"T",0X1,3);
	split_sreg_range(0X7D00B5EA,"T",0X1,3);
	split_sreg_range(0X7D00B5EC,"T",0X1,3);
	split_sreg_range(0X7D00B5F0,"T",0X1,3);
	split_sreg_range(0X7D00B61C,"T",0X1,3);
	split_sreg_range(0X7D00B64C,"T",0X1,3);
	split_sreg_range(0X7D00B650,"T",0X1,3);
	split_sreg_range(0X7D00B65A,"T",0X1,3);
	split_sreg_range(0X7D00B65E,"T",0X1,3);
	split_sreg_range(0X7D00B664,"T",0X1,3);
	split_sreg_range(0X7D00B672,"T",0X1,3);
	split_sreg_range(0X7D00B6DC,"T",0X1,3);
	split_sreg_range(0X7D00B720,"T",0X1,3);
	split_sreg_range(0X7D00B75A,"T",0X1,3);
	split_sreg_range(0X7D00B75E,"T",0X1,3);
	split_sreg_range(0X7D00B780,"T",0X1,3);
	split_sreg_range(0X7D00B7D2,"T",0X1,3);
	split_sreg_range(0X7D00B7D4,"T",0X1,3);
	split_sreg_range(0X7D00B7E0,"T",0X1,3);
	split_sreg_range(0X7D00B7F8,"T",0X1,3);
	split_sreg_range(0X7D00B80E,"T",0X1,3);
	split_sreg_range(0X7D00B810,"T",0X1,3);
	split_sreg_range(0X7D00B838,"T",0X1,3);
	split_sreg_range(0X7D00B8DE,"T",0X1,3);
	split_sreg_range(0X7D00B8E0,"T",0X1,3);
	split_sreg_range(0X7D00B8EA,"T",0X1,3);
	split_sreg_range(0X7D00B8EE,"T",0X1,3);
	split_sreg_range(0X7D00B8FC,"T",0X1,3);
	split_sreg_range(0X7D00B90C,"T",0X1,3);
	split_sreg_range(0X7D00B92A,"T",0X1,3);
	split_sreg_range(0X7D00B946,"T",0X1,3);
	split_sreg_range(0X7D00B952,"T",0X1,3);
	split_sreg_range(0X7D00B9A8,"T",0X1,3);
	split_sreg_range(0X7D00B9AC,"T",0X1,3);
	split_sreg_range(0X7D00B9B2,"T",0X1,3);
	split_sreg_range(0X7D00B9F4,"T",0X1,3);
	split_sreg_range(0X7D00B9FE,"T",0X1,3);
	split_sreg_range(0X7D00BA26,"T",0X1,3);
	split_sreg_range(0X7D00BA38,"T",0X1,3);
	split_sreg_range(0X7D00BA46,"T",0X1,3);
	split_sreg_range(0X7D00BA4A,"T",0X1,3);
	split_sreg_range(0X7D00BADC,"T",0X1,3);
	split_sreg_range(0X7D00BADE,"T",0X1,3);
	split_sreg_range(0X7D00BAEE,"T",0X1,3);
	split_sreg_range(0X7D00BAF0,"T",0X1,3);
	split_sreg_range(0X7D00BAF4,"T",0X1,3);
	split_sreg_range(0X7D00BAF8,"T",0X1,3);
	split_sreg_range(0X7D00BAFA,"T",0X1,3);
	split_sreg_range(0X7D00BB24,"T",0X1,3);
	split_sreg_range(0X7D00BB94,"T",0X1,3);
	split_sreg_range(0X7D00BBA4,"T",0X1,3);
	split_sreg_range(0X7D00BBBE,"T",0X1,3);
	split_sreg_range(0X7D00BC4A,"T",0X1,3);
	split_sreg_range(0X7D00BC7E,"T",0X1,3);
	split_sreg_range(0X7D00BC80,"T",0X1,3);
	split_sreg_range(0X7D00BC8E,"T",0X1,3);
	split_sreg_range(0X7D00BCA6,"T",0X1,3);
	split_sreg_range(0X7D00BCA8,"T",0X1,3);
	split_sreg_range(0X7D00BCB0,"T",0X1,3);
	split_sreg_range(0X7D00BCB4,"T",0X1,3);
	split_sreg_range(0X7D00BCB8,"T",0X1,3);
	split_sreg_range(0X7D00BCBC,"T",0X1,3);
	split_sreg_range(0X7D00BCC0,"T",0X1,3);
	split_sreg_range(0X7D00BCD4,"T",0X1,3);
	split_sreg_range(0X7D00BDC4,"T",0X1,3);
	split_sreg_range(0X7D00BDC6,"T",0X1,3);
	split_sreg_range(0X7D00BDD0,"T",0X1,3);
	split_sreg_range(0X7D00BDD2,"T",0X1,3);
	split_sreg_range(0X7D00BDE0,"T",0X1,3);
	split_sreg_range(0X7D00BE0E,"T",0X1,3);
	split_sreg_range(0X7D00BE42,"T",0X1,3);
	split_sreg_range(0X7D00BE4A,"T",0X1,3);
	split_sreg_range(0X7D00BE4C,"T",0X1,3);
	split_sreg_range(0X7D00BE5C,"T",0X1,3);
	split_sreg_range(0X7D00BE72,"T",0X1,3);
	split_sreg_range(0X7D00BE8A,"T",0X1,3);
	split_sreg_range(0X7D00BE9E,"T",0X1,3);
	split_sreg_range(0X7D00BEA0,"T",0X1,3);
	split_sreg_range(0X7D00BEB0,"T",0X1,3);
	split_sreg_range(0X7D00BEC4,"T",0X1,3);
	split_sreg_range(0X7D00BECE,"T",0X1,3);
	split_sreg_range(0X7D00BED8,"T",0X1,3);
	split_sreg_range(0X7D00BEE4,"T",0X1,3);
	split_sreg_range(0X7D00BEF8,"T",0X1,3);
	split_sreg_range(0X7D00BF10,"T",0X1,3);
	split_sreg_range(0X7D00BF1E,"T",0X1,3);
	split_sreg_range(0X7D00BF22,"T",0X1,3);
	split_sreg_range(0X7D00BF24,"T",0X1,3);
	split_sreg_range(0X7D00BF30,"T",0X1,3);
	split_sreg_range(0X7D00BF4A,"T",0X1,3);
	split_sreg_range(0X7D00BF5E,"T",0X1,3);
	split_sreg_range(0X7D00BF6E,"T",0X1,3);
	split_sreg_range(0X7D00BF94,"T",0X1,3);
	split_sreg_range(0X7D00BFD2,"T",0X1,3);
	split_sreg_range(0X7D00BFF2,"T",0X1,3);
	split_sreg_range(0X7D00BFFA,"T",0X1,3);
	split_sreg_range(0X7D00BFFE,"T",0X1,3);
	split_sreg_range(0X7D00C002,"T",0X1,3);
	split_sreg_range(0X7D00C004,"T",0X1,3);
	split_sreg_range(0X7D00C02C,"T",0X1,3);
	split_sreg_range(0X7D00C074,"T",0X1,3);
	split_sreg_range(0X7D00C080,"T",0X1,3);
	split_sreg_range(0X7D00C0A2,"T",0X1,3);
	split_sreg_range(0X7D00C0DE,"T",0X1,3);
	split_sreg_range(0X7D00C0E0,"T",0X1,3);
	split_sreg_range(0X7D00C0E8,"T",0X1,3);
	split_sreg_range(0X7D00C0F2,"T",0X1,3);
	split_sreg_range(0X7D00C10A,"T",0X1,3);
	split_sreg_range(0X7D00C120,"T",0X1,3);
	split_sreg_range(0X7D00C134,"T",0X1,3);
	split_sreg_range(0X7D00C146,"T",0X1,3);
	split_sreg_range(0X7D00C14C,"T",0X1,3);
	split_sreg_range(0X7D00C154,"T",0X1,3);
	split_sreg_range(0X7D00C158,"T",0X1,3);
	split_sreg_range(0X7D00C16E,"T",0X1,3);
	split_sreg_range(0X7D00C17C,"T",0X1,3);
	split_sreg_range(0X7D00C180,"T",0X1,3);
	split_sreg_range(0X7D00C1B6,"T",0X1,3);
	split_sreg_range(0X7D00C1BA,"T",0X1,3);
	split_sreg_range(0X7D00C1C0,"T",0X1,3);
	split_sreg_range(0X7D00C1C4,"T",0X1,3);
	split_sreg_range(0X7D00C1C6,"T",0X1,3);
	split_sreg_range(0X7D00C1E8,"T",0X1,3);
	split_sreg_range(0X7D00C208,"T",0X1,3);
	split_sreg_range(0X7D00C20E,"T",0X1,3);
	split_sreg_range(0X7D00C210,"T",0X1,3);
	split_sreg_range(0X7D00C234,"T",0X1,3);
	split_sreg_range(0X7D00C276,"T",0X1,3);
	split_sreg_range(0X7D00C278,"T",0X1,3);
	split_sreg_range(0X7D00C27C,"T",0X1,3);
	split_sreg_range(0X7D00C27E,"T",0X1,3);
	split_sreg_range(0X7D00C2A0,"T",0X1,3);
	split_sreg_range(0X7D00C31E,"T",0X1,3);
	split_sreg_range(0X7D00C322,"T",0X1,3);
	split_sreg_range(0X7D00C324,"T",0X1,3);
	split_sreg_range(0X7D00C328,"T",0X1,3);
	split_sreg_range(0X7D00C32A,"T",0X1,3);
	split_sreg_range(0X7D00C32E,"T",0X1,3);
	split_sreg_range(0X7D00C330,"T",0X1,3);
	split_sreg_range(0X7D00C35C,"T",0X1,3);
	split_sreg_range(0X7D00C388,"T",0X1,3);
	split_sreg_range(0X7D00C396,"T",0X1,3);
	split_sreg_range(0X7D00C39C,"T",0X1,3);
	split_sreg_range(0X7D00C3A0,"T",0X1,3);
	split_sreg_range(0X7D00C3A6,"T",0X1,3);
	split_sreg_range(0X7D00C3C8,"T",0X1,3);
	split_sreg_range(0X7D00C3CE,"T",0X1,3);
	split_sreg_range(0X7D00C3D2,"T",0X1,3);
	split_sreg_range(0X7D00C3D8,"T",0X1,3);
	split_sreg_range(0X7D00C3E0,"T",0X1,3);
	split_sreg_range(0X7D00C404,"T",0X1,3);
	split_sreg_range(0X7D00C42C,"T",0X1,3);
	split_sreg_range(0X7D00C432,"T",0X1,3);
	split_sreg_range(0X7D00C460,"T",0X1,3);
	split_sreg_range(0X7D00C462,"T",0X1,3);
	split_sreg_range(0X7D00C468,"T",0X1,3);
	split_sreg_range(0X7D00C474,"T",0X1,3);
	split_sreg_range(0X7D00C476,"T",0X1,3);
	split_sreg_range(0X7D00C482,"T",0X1,3);
	split_sreg_range(0X7D00C494,"T",0X1,3);
	split_sreg_range(0X7D00C4B2,"T",0X1,3);
	split_sreg_range(0X7D00C4B6,"T",0X1,3);
	split_sreg_range(0X7D00C528,"T",0X1,3);
	split_sreg_range(0X7D00C540,"T",0X1,3);
	split_sreg_range(0X7D00C550,"T",0X1,3);
	split_sreg_range(0X7D00C558,"T",0X1,3);
	split_sreg_range(0X7D00C56A,"T",0X1,3);
	split_sreg_range(0X7D00C572,"T",0X1,3);
	split_sreg_range(0X7D00C578,"T",0X1,3);
	split_sreg_range(0X7D00C57E,"T",0X1,3);
	split_sreg_range(0X7D00C580,"T",0X1,3);
	split_sreg_range(0X7D00C592,"T",0X1,3);
	split_sreg_range(0X7D00C59E,"T",0X1,3);
	split_sreg_range(0X7D00C5AA,"T",0X1,3);
	split_sreg_range(0X7D00C5C4,"T",0X1,3);
	split_sreg_range(0X7D00C5E4,"T",0X1,3);
	split_sreg_range(0X7D00C5EE,"T",0X1,3);
	split_sreg_range(0X7D00C63E,"T",0X1,3);
	split_sreg_range(0X7D00C67A,"T",0X1,3);
	split_sreg_range(0X7D00C6A6,"T",0X1,3);
	split_sreg_range(0X7D00C6CA,"T",0X1,3);
	split_sreg_range(0X7D00C6D8,"T",0X1,3);
	split_sreg_range(0X7D00C6EA,"T",0X1,3);
	split_sreg_range(0X7D00C6F6,"T",0X1,3);
	split_sreg_range(0X7D00C6FE,"T",0X1,3);
	split_sreg_range(0X7D00C702,"T",0X1,3);
	split_sreg_range(0X7D00C704,"T",0X1,3);
	split_sreg_range(0X7D00C70A,"T",0X1,3);
	split_sreg_range(0X7D00C70E,"T",0X1,3);
	split_sreg_range(0X7D00C710,"T",0X1,3);
	split_sreg_range(0X7D00C71E,"T",0X1,3);
	split_sreg_range(0X7D00C72A,"T",0X1,3);
	split_sreg_range(0X7D00C736,"T",0X1,3);
	split_sreg_range(0X7D00C738,"T",0X1,3);
	split_sreg_range(0X7D00C768,"T",0X1,3);
	split_sreg_range(0X7D00C7D6,"T",0X1,3);
	split_sreg_range(0X7D00C7E6,"T",0X1,3);
	split_sreg_range(0X7D00C7F2,"T",0X1,3);
	split_sreg_range(0X7D00C824,"T",0X1,3);
	split_sreg_range(0X7D00C830,"T",0X1,3);
	split_sreg_range(0X7D00C83C,"T",0X1,3);
	split_sreg_range(0X7D00C846,"T",0X1,3);
	split_sreg_range(0X7D00C84C,"T",0X1,3);
	split_sreg_range(0X7D00C854,"T",0X1,3);
	split_sreg_range(0X7D00C85A,"T",0X1,3);
	split_sreg_range(0X7D00C85E,"T",0X1,3);
	split_sreg_range(0X7D00C87C,"T",0X1,3);
	split_sreg_range(0X7D00C8A2,"T",0X1,3);
	split_sreg_range(0X7D00C8BA,"T",0X1,3);
	split_sreg_range(0X7D00C8C6,"T",0X1,3);
	split_sreg_range(0X7D00C8D6,"T",0X1,3);
	split_sreg_range(0X7D00C8EC,"T",0X1,3);
	split_sreg_range(0X7D00C932,"T",0X1,3);
	split_sreg_range(0X7D00C980,"T",0X1,3);
	split_sreg_range(0X7D00C99E,"T",0X1,3);
	split_sreg_range(0X7D00CA02,"T",0X1,3);
	split_sreg_range(0X7D00CA1A,"T",0X1,3);
	split_sreg_range(0X7D00CA28,"T",0X1,3);
	split_sreg_range(0X7D00CA2E,"T",0X1,3);
	split_sreg_range(0X7D00CA32,"T",0X1,3);
	split_sreg_range(0X7D00CA44,"T",0X1,3);
	split_sreg_range(0X7D00CA4C,"T",0X1,3);
	split_sreg_range(0X7D00CA5A,"T",0X1,3);
	split_sreg_range(0X7D00CA60,"T",0X1,3);
	split_sreg_range(0X7D00CA66,"T",0X1,3);
	split_sreg_range(0X7D00CA6A,"T",0X1,3);
	split_sreg_range(0X7D00CAA4,"T",0X1,3);
	split_sreg_range(0X7D00CAA6,"T",0X1,3);
	split_sreg_range(0X7D00CAB0,"T",0X1,3);
	split_sreg_range(0X7D00CAC0,"T",0X1,3);
	split_sreg_range(0X7D00CAEA,"T",0X1,3);
	split_sreg_range(0X7D00CAF4,"T",0X1,3);
	split_sreg_range(0X7D00CB28,"T",0X1,3);
	split_sreg_range(0X7D00CB54,"T",0X1,3);
	split_sreg_range(0X7D00CB80,"T",0X1,3);
	split_sreg_range(0X7D00CBA4,"T",0X1,3);
	split_sreg_range(0X7D00CBBC,"T",0X1,3);
	split_sreg_range(0X7D00CC22,"T",0X1,3);
	split_sreg_range(0X7D00CC2C,"T",0X1,3);
	split_sreg_range(0X7D00CC30,"T",0X1,3);
	split_sreg_range(0X7D00CC32,"T",0X1,3);
	split_sreg_range(0X7D00CC48,"T",0X1,3);
	split_sreg_range(0X7D00CCE4,"T",0X1,3);
	split_sreg_range(0X7D00CCEA,"T",0X1,3);
	split_sreg_range(0X7D00CCEE,"T",0X1,3);
	split_sreg_range(0X7D00CCF2,"T",0X1,3);
	split_sreg_range(0X7D00CCF6,"T",0X1,3);
	split_sreg_range(0X7D00CCF8,"T",0X1,3);
	split_sreg_range(0X7D00CD18,"T",0X1,3);
	split_sreg_range(0X7D00CD32,"T",0X1,3);
	split_sreg_range(0X7D00CD78,"T",0X1,3);
	split_sreg_range(0X7D00CD88,"T",0X1,3);
	split_sreg_range(0X7D00CDA6,"T",0X1,3);
	split_sreg_range(0X7D00CDA8,"T",0X1,3);
	split_sreg_range(0X7D00CDB4,"T",0X1,3);
	split_sreg_range(0X7D00CE28,"T",0X1,3);
	split_sreg_range(0X7D00CE32,"T",0X1,3);
	split_sreg_range(0X7D00CE34,"T",0X1,3);
	split_sreg_range(0X7D00CE98,"T",0X1,3);
	split_sreg_range(0X7D00CE9E,"T",0X1,3);
	split_sreg_range(0X7D00CEF8,"T",0X1,3);
	split_sreg_range(0X7D00CEFE,"T",0X1,3);
	split_sreg_range(0X7D00CF02,"T",0X1,3);
	split_sreg_range(0X7D00CF04,"T",0X1,3);
	split_sreg_range(0X7D00CF20,"T",0X1,3);
	split_sreg_range(0X7D00CF22,"T",0X1,3);
	split_sreg_range(0X7D00CF2E,"T",0X1,3);
	split_sreg_range(0X7D00CF32,"T",0X1,3);
	split_sreg_range(0X7D00CF3C,"T",0X1,3);
	split_sreg_range(0X7D00CF62,"T",0X1,3);
	split_sreg_range(0X7D00CF76,"T",0X1,3);
	split_sreg_range(0X7D00CFC4,"T",0X1,3);
	split_sreg_range(0X7D00CFC8,"T",0X1,3);
	split_sreg_range(0X7D00CFD8,"T",0X1,3);
	split_sreg_range(0X7D00CFDC,"T",0X1,3);
	split_sreg_range(0X7D00CFDE,"T",0X1,3);
	split_sreg_range(0X7D00CFF8,"T",0X1,3);
	split_sreg_range(0X7D00D012,"T",0X1,3);
	split_sreg_range(0X7D00D04A,"T",0X1,3);
	split_sreg_range(0X7D00D050,"T",0X1,3);
	split_sreg_range(0X7D00D06A,"T",0X1,3);
	split_sreg_range(0X7D00D07E,"T",0X1,3);
	split_sreg_range(0X7D00D086,"T",0X1,3);
	split_sreg_range(0X7D00D0BA,"T",0X1,3);
	split_sreg_range(0X7D00D0DC,"T",0X1,3);
	split_sreg_range(0X7D00D0E2,"T",0X1,3);
	split_sreg_range(0X7D00D0EC,"T",0X1,3);
	split_sreg_range(0X7D00D104,"T",0X1,3);
	split_sreg_range(0X7D00D11C,"T",0X1,3);
	split_sreg_range(0X7D00D120,"T",0X1,3);
	split_sreg_range(0X7D00D132,"T",0X1,3);
	split_sreg_range(0X7D00D136,"T",0X1,3);
	split_sreg_range(0X7D00D144,"T",0X1,3);
	split_sreg_range(0X7D00D176,"T",0X1,3);
	split_sreg_range(0X7D00D17A,"T",0X1,3);
	split_sreg_range(0X7D00D17E,"T",0X1,3);
	split_sreg_range(0X7D00D190,"T",0X1,3);
	split_sreg_range(0X7D00D1AA,"T",0X1,3);
	split_sreg_range(0X7D00D1D4,"T",0X1,3);
	split_sreg_range(0X7D00D1D8,"T",0X1,3);
	split_sreg_range(0X7D00D20C,"T",0X1,3);
	split_sreg_range(0X7D00D210,"T",0X1,3);
	split_sreg_range(0X7D00D212,"T",0X1,3);
	split_sreg_range(0X7D00D224,"T",0X1,3);
	split_sreg_range(0X7D00D238,"T",0X1,3);
	split_sreg_range(0X7D00D258,"T",0X1,3);
	split_sreg_range(0X7D00D25C,"T",0X1,3);
	split_sreg_range(0X7D00D260,"T",0X1,3);
	split_sreg_range(0X7D00D288,"T",0X1,3);
	split_sreg_range(0X7D00D290,"T",0X1,3);
	split_sreg_range(0X7D00D2B6,"T",0X1,3);
	split_sreg_range(0X7D00D2BC,"T",0X1,3);
	split_sreg_range(0X7D00D2CA,"T",0X1,3);
	split_sreg_range(0X7D00D2E0,"T",0X1,3);
	split_sreg_range(0X7D00D30E,"T",0X1,3);
	split_sreg_range(0X7D00D314,"T",0X1,3);
	split_sreg_range(0X7D00D32E,"T",0X1,3);
	split_sreg_range(0X7D00D332,"T",0X1,3);
	split_sreg_range(0X7D00D33A,"T",0X1,3);
	split_sreg_range(0X7D00D34C,"T",0X1,3);
	split_sreg_range(0X7D00D356,"T",0X1,3);
	split_sreg_range(0X7D00D35C,"T",0X1,3);
	split_sreg_range(0X7D00D35E,"T",0X1,3);
	split_sreg_range(0X7D00D368,"T",0X1,3);
	split_sreg_range(0X7D00D380,"T",0X1,3);
	split_sreg_range(0X7D00D3A0,"T",0X1,3);
	split_sreg_range(0X7D00D3B8,"T",0X1,3);
	split_sreg_range(0X7D00D3D8,"T",0X1,3);
	split_sreg_range(0X7D00D3F0,"T",0X1,3);
	split_sreg_range(0X7D00D454,"T",0X1,3);
	split_sreg_range(0X7D00D46A,"T",0X1,3);
	split_sreg_range(0X7D00D478,"T",0X1,3);
	split_sreg_range(0X7D00D488,"T",0X1,3);
	split_sreg_range(0X7D00D498,"T",0X1,3);
	split_sreg_range(0X7D00D4B2,"T",0X1,3);
	split_sreg_range(0X7D00D4E0,"T",0X1,3);
	split_sreg_range(0X7D00D506,"T",0X1,3);
	split_sreg_range(0X7D00D508,"T",0X1,3);
	split_sreg_range(0X7D00D510,"T",0X1,3);
	split_sreg_range(0X7D00D556,"T",0X1,3);
	split_sreg_range(0X7D00D596,"T",0X1,3);
	split_sreg_range(0X7D00D5BA,"T",0X1,3);
	split_sreg_range(0X7D00D5BE,"T",0X1,3);
	split_sreg_range(0X7D00D5F8,"T",0X1,3);
	split_sreg_range(0X7D00D610,"T",0X1,3);
	split_sreg_range(0X7D00D626,"T",0X1,3);
	split_sreg_range(0X7D00D660,"T",0X1,3);
	split_sreg_range(0X7D00D66C,"T",0X1,3);
	split_sreg_range(0X7D00D692,"T",0X1,3);
	split_sreg_range(0X7D00D6A6,"T",0X1,3);
	split_sreg_range(0X7D00D6AA,"T",0X1,3);
	split_sreg_range(0X7D00D6AE,"T",0X1,3);
	split_sreg_range(0X7D00D6E4,"T",0X1,3);
	split_sreg_range(0X7D00D6E8,"T",0X1,3);
	split_sreg_range(0X7D00D6EA,"T",0X1,3);
	split_sreg_range(0X7D00D718,"T",0X1,3);
	split_sreg_range(0X7D00D722,"T",0X1,3);
	split_sreg_range(0X7D00D736,"T",0X1,3);
	split_sreg_range(0X7D00D748,"T",0X1,3);
	split_sreg_range(0X7D00D786,"T",0X1,3);
	split_sreg_range(0X7D00D798,"T",0X1,3);
	split_sreg_range(0X7D00D7EA,"T",0X1,3);
	split_sreg_range(0X7D00D800,"T",0X1,3);
	split_sreg_range(0X7D00D824,"T",0X1,3);
	split_sreg_range(0X7D00D830,"T",0X1,3);
	split_sreg_range(0X7D00D848,"T",0X1,3);
	split_sreg_range(0X7D00D85C,"T",0X1,3);
	split_sreg_range(0X7D00D874,"T",0X1,3);
	split_sreg_range(0X7D00D896,"T",0X1,3);
	split_sreg_range(0X7D00D8EE,"T",0X1,3);
	split_sreg_range(0X7D00D8F6,"T",0X1,3);
	split_sreg_range(0X7D00D918,"T",0X1,3);
	split_sreg_range(0X7D00D936,"T",0X1,3);
	split_sreg_range(0X7D00D942,"T",0X1,3);
	split_sreg_range(0X7D00D95A,"T",0X1,3);
	split_sreg_range(0X7D00D96E,"T",0X1,3);
	split_sreg_range(0X7D00D98C,"T",0X1,3);
	split_sreg_range(0X7D00D9DE,"T",0X1,3);
	split_sreg_range(0X7D00D9EA,"T",0X1,3);
	split_sreg_range(0X7D00D9F2,"T",0X1,3);
	split_sreg_range(0X7D00DA10,"T",0X1,3);
	split_sreg_range(0X7D00DA2A,"T",0X1,3);
	split_sreg_range(0X7D00DA44,"T",0X1,3);
	split_sreg_range(0X7D00DA4E,"T",0X1,3);
	split_sreg_range(0X7D00DA60,"T",0X1,3);
	split_sreg_range(0X7D00DA74,"T",0X1,3);
	split_sreg_range(0X7D00DA90,"T",0X1,3);
	split_sreg_range(0X7D00DAB2,"T",0X1,3);
	split_sreg_range(0X7D00DAC8,"T",0X1,3);
	split_sreg_range(0X7D00DAEE,"T",0X1,3);
	split_sreg_range(0X7D00DB08,"T",0X1,3);
	split_sreg_range(0X7D00DB3E,"T",0X1,3);
	split_sreg_range(0X7D00DB4C,"T",0X1,3);
	split_sreg_range(0X7D00DB6A,"T",0X1,3);
	split_sreg_range(0X7D00DBB0,"T",0X1,3);
	split_sreg_range(0X7D00DBB8,"T",0X1,3);
	split_sreg_range(0X7D00DBD8,"T",0X1,3);
	split_sreg_range(0X7D00DC02,"T",0X1,3);
	split_sreg_range(0X7D00DC18,"T",0X1,3);
	split_sreg_range(0X7D00DC20,"T",0X1,3);
	split_sreg_range(0X7D00DC38,"T",0X1,3);
	split_sreg_range(0X7D00DC52,"T",0X1,3);
	split_sreg_range(0X7D00DC78,"T",0X1,3);
	split_sreg_range(0X7D00DC88,"T",0X1,3);
	split_sreg_range(0X7D00DC9A,"T",0X1,3);
	split_sreg_range(0X7D00DCA2,"T",0X1,3);
	split_sreg_range(0X7D00DCA6,"T",0X1,3);
	split_sreg_range(0X7D00DCD4,"T",0X1,3);
	split_sreg_range(0X7D00DCD8,"T",0X1,3);
	split_sreg_range(0X7D00DD00,"T",0X1,3);
	split_sreg_range(0X7D00DD1A,"T",0X1,3);
	split_sreg_range(0X7D00DD22,"T",0X1,3);
	split_sreg_range(0X7D00DD30,"T",0X1,3);
	split_sreg_range(0X7D00DD40,"T",0X1,3);
	split_sreg_range(0X7D00DD4A,"T",0X1,3);
	split_sreg_range(0X7D00DD52,"T",0X1,3);
	split_sreg_range(0X7D00DD56,"T",0X1,3);
	split_sreg_range(0X7D00DD66,"T",0X1,3);
	split_sreg_range(0X7D00DD7E,"T",0X1,3);
	split_sreg_range(0X7D00DD96,"T",0X1,3);
	split_sreg_range(0X7D00DDA2,"T",0X1,3);
	split_sreg_range(0X7D00DDB2,"T",0X1,3);
	split_sreg_range(0X7D00DDCC,"T",0X1,3);
	split_sreg_range(0X7D00DDE8,"T",0X1,3);
	split_sreg_range(0X7D00DE02,"T",0X1,3);
	split_sreg_range(0X7D00DE10,"T",0X1,3);
	split_sreg_range(0X7D00DE34,"T",0X1,3);
	split_sreg_range(0X7D00DE56,"T",0X1,3);
	split_sreg_range(0X7D00DE8E,"T",0X1,3);
	split_sreg_range(0X7D00DEBE,"T",0X1,3);
	split_sreg_range(0X7D00DEC0,"T",0X1,3);
	split_sreg_range(0X7D00DEF4,"T",0X1,3);
	split_sreg_range(0X7D00DEFE,"T",0X1,3);
	split_sreg_range(0X7D00DF2E,"T",0X1,3);
	split_sreg_range(0X7D00DF42,"T",0X1,3);
	split_sreg_range(0X7D00DF4E,"T",0X1,3);
	split_sreg_range(0X7D00DF50,"T",0X1,3);
	split_sreg_range(0X7D00DF54,"T",0X1,3);
	split_sreg_range(0X7D00DF86,"T",0X1,3);
	split_sreg_range(0X7D00DFAA,"T",0X1,3);
	split_sreg_range(0X7D00DFBA,"T",0X1,3);
	split_sreg_range(0X7D00DFC8,"T",0X1,3);
	split_sreg_range(0X7D00DFD6,"T",0X1,3);
	split_sreg_range(0X7D00DFF0,"T",0X1,3);
	split_sreg_range(0X7D00DFFE,"T",0X1,3);
	split_sreg_range(0X7D00E006,"T",0X1,3);
	split_sreg_range(0X7D00E00C,"T",0X1,3);
	split_sreg_range(0X7D00E028,"T",0X1,3);
	split_sreg_range(0X7D00E060,"T",0X1,3);
	split_sreg_range(0X7D00E090,"T",0X1,3);
	split_sreg_range(0X7D00E09A,"T",0X1,3);
	split_sreg_range(0X7D00E09C,"T",0X1,3);
	split_sreg_range(0X7D00E0B0,"T",0X1,3);
	split_sreg_range(0X7D00E0BC,"T",0X1,3);
	split_sreg_range(0X7D00E0C2,"T",0X1,3);
	split_sreg_range(0X7D00E0C8,"T",0X1,3);
	split_sreg_range(0X7D00E0CC,"T",0X1,3);
	split_sreg_range(0X7D00E124,"T",0X1,3);
	split_sreg_range(0X7D00E12C,"T",0X1,3);
	split_sreg_range(0X7D00E138,"T",0X1,3);
	split_sreg_range(0X7D00E15E,"T",0X1,3);
	split_sreg_range(0X7D00E184,"T",0X1,3);
	split_sreg_range(0X7D00E18E,"T",0X1,3);
	split_sreg_range(0X7D00E19A,"T",0X1,3);
	split_sreg_range(0X7D00E1B0,"T",0X1,3);
	split_sreg_range(0X7D00E1C4,"T",0X1,3);
	split_sreg_range(0X7D00E1D2,"T",0X1,3);
	split_sreg_range(0X7D00E1DA,"T",0X1,3);
	split_sreg_range(0X7D00E1F0,"T",0X1,3);
	split_sreg_range(0X7D00E1FA,"T",0X1,3);
	split_sreg_range(0X7D00E206,"T",0X1,3);
	split_sreg_range(0X7D00E218,"T",0X1,3);
	split_sreg_range(0X7D00E220,"T",0X1,3);
	split_sreg_range(0X7D00E226,"T",0X1,3);
	split_sreg_range(0X7D00E24A,"T",0X1,3);
	split_sreg_range(0X7D00E25E,"T",0X1,3);
	split_sreg_range(0X7D00E268,"T",0X1,3);
	split_sreg_range(0X7D00E280,"T",0X1,3);
	split_sreg_range(0X7D00E28A,"T",0X1,3);
	split_sreg_range(0X7D00E296,"T",0X1,3);
	split_sreg_range(0X7D00E2AA,"T",0X1,3);
	split_sreg_range(0X7D00E2C8,"T",0X1,3);
	split_sreg_range(0X7D00E2DC,"T",0X1,3);
	split_sreg_range(0X7D00E2EA,"T",0X1,3);
	split_sreg_range(0X7D00E30A,"T",0X1,3);
	split_sreg_range(0X7D00E324,"T",0X1,3);
	split_sreg_range(0X7D00E336,"T",0X1,3);
	split_sreg_range(0X7D00E354,"T",0X1,3);
	split_sreg_range(0X7D00E35E,"T",0X1,3);
	split_sreg_range(0X7D00E3B0,"T",0X1,3);
	split_sreg_range(0X7D00E3B4,"T",0X1,3);
	split_sreg_range(0X7D00E3C8,"T",0X1,3);
	split_sreg_range(0X7D00E3D6,"T",0X1,3);
	split_sreg_range(0X7D00E45E,"T",0X1,3);
	split_sreg_range(0X7D00E46E,"T",0X1,3);
	split_sreg_range(0X7D00E482,"T",0X1,3);
	split_sreg_range(0X7D00E486,"T",0X1,3);
	split_sreg_range(0X7D00E490,"T",0X1,3);
	split_sreg_range(0X7D00E4B2,"T",0X1,3);
	split_sreg_range(0X7D00E4BA,"T",0X1,3);
	split_sreg_range(0X7D00E4CA,"T",0X1,3);
	split_sreg_range(0X7D00E4DA,"T",0X1,3);
	split_sreg_range(0X7D00E4F6,"T",0X1,3);
	split_sreg_range(0X7D00E4FC,"T",0X1,3);
	split_sreg_range(0X7D00E510,"T",0X1,3);
	split_sreg_range(0X7D00E520,"T",0X1,3);
	split_sreg_range(0X7D00E528,"T",0X1,3);
	split_sreg_range(0X7D00E53C,"T",0X1,3);
	split_sreg_range(0X7D00E540,"T",0X1,3);
	split_sreg_range(0X7D00E544,"T",0X1,3);
	split_sreg_range(0X7D00E548,"T",0X1,3);
	split_sreg_range(0X7D00E54C,"T",0X1,3);
	split_sreg_range(0X7D00E550,"T",0X1,3);
	split_sreg_range(0X7D00E554,"T",0X1,3);
	split_sreg_range(0X7D00E558,"T",0X1,3);
	split_sreg_range(0X7D00E55C,"T",0X1,3);
	split_sreg_range(0X7D00E560,"T",0X1,3);
	split_sreg_range(0X7D00E562,"T",0X1,3);
	split_sreg_range(0X7D00E56E,"T",0X1,3);
	split_sreg_range(0X7D00E576,"T",0X1,3);
	split_sreg_range(0X7D00E5BC,"T",0X1,3);
	split_sreg_range(0X7D00E5D0,"T",0X1,3);
	split_sreg_range(0X7D00E5D8,"T",0X1,3);
	split_sreg_range(0X7D00E5E8,"T",0X1,3);
	split_sreg_range(0X7D00E5F8,"T",0X1,3);
	split_sreg_range(0X7D00E608,"T",0X1,3);
	split_sreg_range(0X7D00E624,"T",0X1,3);
	split_sreg_range(0X7D00E640,"T",0X1,3);
	split_sreg_range(0X7D00E664,"T",0X1,3);
	split_sreg_range(0X7D00E66A,"T",0X1,3);
	split_sreg_range(0X7D00E66E,"T",0X1,3);
	split_sreg_range(0X7D00E67C,"T",0X1,3);
	split_sreg_range(0X7D00E68E,"T",0X1,3);
	split_sreg_range(0X7D00E69A,"T",0X1,3);
	split_sreg_range(0X7D00E69E,"T",0X1,3);
	split_sreg_range(0X7D00E6A0,"T",0X1,3);
	split_sreg_range(0X7D00E6A6,"T",0X1,3);
	split_sreg_range(0X7D00E6AA,"T",0X1,3);
	split_sreg_range(0X7D00E6B8,"T",0X1,3);
	split_sreg_range(0X7D00E6D8,"T",0X1,3);
	split_sreg_range(0X7D00E6F2,"T",0X1,3);
	split_sreg_range(0X7D00E6FC,"T",0X1,3);
	split_sreg_range(0X7D00E710,"T",0X1,3);
	split_sreg_range(0X7D00E726,"T",0X1,3);
	split_sreg_range(0X7D00E744,"T",0X1,3);
	split_sreg_range(0X7D00E758,"T",0X1,3);
	split_sreg_range(0X7D00E768,"T",0X1,3);
	split_sreg_range(0X7D00E77C,"T",0X1,3);
	split_sreg_range(0X7D00E7DA,"T",0X1,3);
	split_sreg_range(0X7D00E7DE,"T",0X1,3);
	split_sreg_range(0X7D00E7E2,"T",0X1,3);
	split_sreg_range(0X7D00E7E4,"T",0X1,3);
	split_sreg_range(0X7D00E7F2,"T",0X1,3);
	split_sreg_range(0X7D00E800,"T",0X1,3);
	split_sreg_range(0X7D00E83C,"T",0X1,3);
	split_sreg_range(0X7D00E86A,"T",0X1,3);
	split_sreg_range(0X7D00E896,"T",0X1,3);
	split_sreg_range(0X7D00E8BE,"T",0X1,3);
	split_sreg_range(0X7D00E8E4,"T",0X1,3);
	split_sreg_range(0X7D00E908,"T",0X1,3);
	split_sreg_range(0X7D00E922,"T",0X1,3);
	split_sreg_range(0X7D00E93C,"T",0X1,3);
	split_sreg_range(0X7D00E954,"T",0X1,3);
	split_sreg_range(0X7D00E994,"T",0X1,3);
	split_sreg_range(0X7D00E9AE,"T",0X1,3);
	split_sreg_range(0X7D00E9B6,"T",0X1,3);
	split_sreg_range(0X7D00E9BC,"T",0X1,3);
	split_sreg_range(0X7D00E9BE,"T",0X1,3);
	split_sreg_range(0X7D00E9D0,"T",0X1,3);
	split_sreg_range(0X7D00E9D8,"T",0X1,3);
	split_sreg_range(0X7D00E9E0,"T",0X1,3);
	split_sreg_range(0X7D00E9E8,"T",0X1,3);
	split_sreg_range(0X7D00E9F0,"T",0X1,3);
	split_sreg_range(0X7D00E9F2,"T",0X1,3);
	split_sreg_range(0X7D00EA30,"T",0X1,3);
	split_sreg_range(0X7D00EA6A,"T",0X1,3);
	split_sreg_range(0X7D00EB1E,"T",0X1,3);
	split_sreg_range(0X7D00EB20,"T",0X1,3);
	split_sreg_range(0X7D00EB2C,"T",0X1,3);
	split_sreg_range(0X7D00EC26,"T",0X1,3);
	split_sreg_range(0X7D00EC2A,"T",0X1,3);
	split_sreg_range(0X7D00EC2E,"T",0X1,3);
	split_sreg_range(0X7D00EC34,"T",0X1,3);
	split_sreg_range(0X7D00EC44,"T",0X1,3);
	split_sreg_range(0X7D00EC4E,"T",0X1,3);
	split_sreg_range(0X7D00EC56,"T",0X1,3);
	split_sreg_range(0X7D00EC5E,"T",0X1,3);
	split_sreg_range(0X7D00EC66,"T",0X1,3);
	split_sreg_range(0X7D00EC72,"T",0X1,3);
	split_sreg_range(0X7D00EC7E,"T",0X1,3);
	split_sreg_range(0X7D00EC86,"T",0X1,3);
	split_sreg_range(0X7D00EC8A,"T",0X1,3);
	split_sreg_range(0X7D00EC9A,"T",0X1,3);
	split_sreg_range(0X7D00ECA6,"T",0X1,3);
	split_sreg_range(0X7D00ECB0,"T",0X1,3);
	split_sreg_range(0X7D00ECB8,"T",0X1,3);
	split_sreg_range(0X7D00ECBE,"T",0X1,3);
	split_sreg_range(0X7D00ECC0,"T",0X1,3);
	split_sreg_range(0X7D00ECC6,"T",0X1,3);
	split_sreg_range(0X7D00ECE4,"T",0X1,3);
	split_sreg_range(0X7D00ED12,"T",0X1,3);
	split_sreg_range(0X7D00ED1A,"T",0X1,3);
	split_sreg_range(0X7D00ED30,"T",0X1,3);
	split_sreg_range(0X7D00ED38,"T",0X1,3);
	split_sreg_range(0X7D00ED4E,"T",0X1,3);
	split_sreg_range(0X7D00ED5A,"T",0X1,3);
	split_sreg_range(0X7D00ED5E,"T",0X1,3);
	split_sreg_range(0X7D00ED6C,"T",0X1,3);
	split_sreg_range(0X7D00ED78,"T",0X1,3);
	split_sreg_range(0X7D00ED84,"T",0X1,3);
	split_sreg_range(0X7D00EDA8,"T",0X1,3);
	split_sreg_range(0X7D00EDC6,"T",0X1,3);
	split_sreg_range(0X7D00EDCA,"T",0X1,3);
	split_sreg_range(0X7D00EDCC,"T",0X1,3);
	split_sreg_range(0X7D00EDF0,"T",0X1,3);
	split_sreg_range(0X7D00EE22,"T",0X1,3);
	split_sreg_range(0X7D00EE3C,"T",0X1,3);
	split_sreg_range(0X7D00EE40,"T",0X1,3);
	split_sreg_range(0X7D00EE4E,"T",0X1,3);
	split_sreg_range(0X7D00EE58,"T",0X1,3);
	split_sreg_range(0X7D00EE62,"T",0X1,3);
	split_sreg_range(0X7D00EE68,"T",0X1,3);
	split_sreg_range(0X7D00EE82,"T",0X1,3);
	split_sreg_range(0X7D00EE8E,"T",0X1,3);
	split_sreg_range(0X7D00EE98,"T",0X1,3);
	split_sreg_range(0X7D00EEB0,"T",0X1,3);
	split_sreg_range(0X7D00EF20,"T",0X1,3);
	split_sreg_range(0X7D00EF60,"T",0X1,3);
	split_sreg_range(0X7D00EF72,"T",0X1,3);
	split_sreg_range(0X7D00EF82,"T",0X1,3);
	split_sreg_range(0X7D00EFA2,"T",0X1,3);
	split_sreg_range(0X7D00EFAE,"T",0X1,3);
	split_sreg_range(0X7D00EFBA,"T",0X1,3);
	split_sreg_range(0X7D00EFBE,"T",0X1,3);
	split_sreg_range(0X7D00EFC2,"T",0X1,3);
	split_sreg_range(0X7D00EFC4,"T",0X1,3);
	split_sreg_range(0X7D00EFF0,"T",0X1,3);
	split_sreg_range(0X7D00F002,"T",0X1,3);
	split_sreg_range(0X7D00F024,"T",0X1,3);
	split_sreg_range(0X7D00F04E,"T",0X1,3);
	split_sreg_range(0X7D00F052,"T",0X1,3);
	split_sreg_range(0X7D00F07A,"T",0X1,3);
	split_sreg_range(0X7D00F098,"T",0X1,3);
	split_sreg_range(0X7D00F0A6,"T",0X1,3);
	split_sreg_range(0X7D00F0C0,"T",0X1,3);
	split_sreg_range(0X7D00F0D2,"T",0X1,3);
	split_sreg_range(0X7D00F0D6,"T",0X1,3);
	split_sreg_range(0X7D00F0DA,"T",0X1,3);
	split_sreg_range(0X7D00F0DE,"T",0X1,3);
	split_sreg_range(0X7D00F0E0,"T",0X1,3);
	split_sreg_range(0X7D00F0EA,"T",0X1,3);
	split_sreg_range(0X7D00F0EE,"T",0X1,3);
	split_sreg_range(0X7D00F0F2,"T",0X1,3);
	split_sreg_range(0X7D00F0F4,"T",0X1,3);
	split_sreg_range(0X7D00F100,"T",0X1,3);
	split_sreg_range(0X7D00F116,"T",0X1,3);
	split_sreg_range(0X7D00F12C,"T",0X1,3);
	split_sreg_range(0X7D00F13C,"T",0X1,3);
	split_sreg_range(0X7D00F146,"T",0X1,3);
	split_sreg_range(0X7D00F14A,"T",0X1,3);
	split_sreg_range(0X7D00F15C,"T",0X1,3);
	split_sreg_range(0X7D00F17C,"T",0X1,3);
	split_sreg_range(0X7D00F190,"T",0X1,3);
	split_sreg_range(0X7D00F1A4,"T",0X1,3);
	split_sreg_range(0X7D00F1A6,"T",0X1,3);
	split_sreg_range(0X7D00F1C4,"T",0X1,3);
	split_sreg_range(0X7D00F208,"T",0X1,3);
	split_sreg_range(0X7D00F21C,"T",0X1,3);
	split_sreg_range(0X7D00F236,"T",0X1,3);
	split_sreg_range(0X7D00F23C,"T",0X1,3);
	split_sreg_range(0X7D00F240,"T",0X1,3);
	split_sreg_range(0X7D00F262,"T",0X1,3);
	split_sreg_range(0X7D00F270,"T",0X1,3);
	split_sreg_range(0X7D00F272,"T",0X1,3);
	split_sreg_range(0X7D00F2C8,"T",0X1,3);
	split_sreg_range(0X7D00F2E6,"T",0X1,3);
	split_sreg_range(0X7D00F2EA,"T",0X1,3);
	split_sreg_range(0X7D00F306,"T",0X1,3);
	split_sreg_range(0X7D00F30E,"T",0X1,3);
	split_sreg_range(0X7D00F324,"T",0X1,3);
	split_sreg_range(0X7D00F32C,"T",0X1,3);
	split_sreg_range(0X7D00F382,"T",0X1,3);
	split_sreg_range(0X7D00F3A0,"T",0X1,3);
	split_sreg_range(0X7D00F3B2,"T",0X1,3);
	split_sreg_range(0X7D00F3EC,"T",0X1,3);
	split_sreg_range(0X7D00F3EE,"T",0X1,3);
	split_sreg_range(0X7D00F41C,"T",0X1,3);
	split_sreg_range(0X7D00F440,"T",0X1,3);
	split_sreg_range(0X7D00F45E,"T",0X1,3);
	split_sreg_range(0X7D00F46C,"T",0X1,3);
	split_sreg_range(0X7D00F47A,"T",0X1,3);
	split_sreg_range(0X7D00F47E,"T",0X1,3);
	split_sreg_range(0X7D00F484,"T",0X1,3);
	split_sreg_range(0X7D00F4A0,"T",0X1,3);
	split_sreg_range(0X7D00F4B0,"T",0X1,3);
	split_sreg_range(0X7D00F4BC,"T",0X1,3);
	split_sreg_range(0X7D00F4DE,"T",0X1,3);
	split_sreg_range(0X7D00F4E6,"T",0X1,3);
	split_sreg_range(0X7D00F4FC,"T",0X1,3);
	split_sreg_range(0X7D00F504,"T",0X1,3);
	split_sreg_range(0X7D00F50C,"T",0X1,3);
	split_sreg_range(0X7D00F510,"T",0X1,3);
	split_sreg_range(0X7D00F516,"T",0X1,3);
	split_sreg_range(0X7D00F534,"T",0X1,3);
	split_sreg_range(0X7D00F54A,"T",0X1,3);
	split_sreg_range(0X7D00F554,"T",0X1,3);
	split_sreg_range(0X7D00F568,"T",0X1,3);
	split_sreg_range(0X7D00F582,"T",0X1,3);
	split_sreg_range(0X7D00F594,"T",0X1,3);
	split_sreg_range(0X7D00F5A4,"T",0X1,3);
	split_sreg_range(0X7D00F5B2,"T",0X1,3);
	split_sreg_range(0X7D00F5B8,"T",0X1,3);
	split_sreg_range(0X7D00F5C8,"T",0X1,3);
	split_sreg_range(0X7D00F5EC,"T",0X1,3);
	split_sreg_range(0X7D00F5EE,"T",0X1,3);
	split_sreg_range(0X7D00F5F4,"T",0X1,3);
	split_sreg_range(0X7D00F60C,"T",0X1,3);
	split_sreg_range(0X7D00F610,"T",0X1,3);
	split_sreg_range(0X7D00F614,"T",0X1,3);
	split_sreg_range(0X7D00F618,"T",0X1,3);
	split_sreg_range(0X7D00F642,"T",0X1,3);
	split_sreg_range(0X7D00F650,"T",0X1,3);
	split_sreg_range(0X7D00F694,"T",0X1,3);
	split_sreg_range(0X7D00F6AC,"T",0X1,3);
	split_sreg_range(0X7D00F6C6,"T",0X1,3);
	split_sreg_range(0X7D00F6F6,"T",0X1,3);
	split_sreg_range(0X7D00F6FE,"T",0X1,3);
	split_sreg_range(0X7D00F700,"T",0X1,3);
	split_sreg_range(0X7D00F72C,"T",0X1,3);
	split_sreg_range(0X7D00F75A,"T",0X1,3);
	split_sreg_range(0X7D00F7B2,"T",0X1,3);
	split_sreg_range(0X7D00F7B8,"T",0X1,3);
	split_sreg_range(0X7D00F7C4,"T",0X1,3);
	split_sreg_range(0X7D00F7FE,"T",0X1,3);
	split_sreg_range(0X7D00F842,"T",0X1,3);
	split_sreg_range(0X7D00F84C,"T",0X1,3);
	split_sreg_range(0X7D00F856,"T",0X1,3);
	split_sreg_range(0X7D00F85E,"T",0X1,3);
	split_sreg_range(0X7D00F860,"T",0X1,3);
	split_sreg_range(0X7D00F890,"T",0X1,3);
	split_sreg_range(0X7D00F8D2,"T",0X1,3);
	split_sreg_range(0X7D00F8F6,"T",0X1,3);
	split_sreg_range(0X7D00F918,"T",0X1,3);
	split_sreg_range(0X7D00F91A,"T",0X1,3);
	split_sreg_range(0X7D00F938,"T",0X1,3);
	split_sreg_range(0X7D00FA24,"T",0X1,3);
	split_sreg_range(0X7D00FA66,"T",0X1,3);
	split_sreg_range(0X7D00FA70,"T",0X1,3);
	split_sreg_range(0X7D00FA74,"T",0X1,3);
	split_sreg_range(0X7D00FA7E,"T",0X1,3);
	split_sreg_range(0X7D00FA86,"T",0X1,3);
	split_sreg_range(0X7D00FA8C,"T",0X1,3);
	split_sreg_range(0X7D00FA90,"T",0X1,3);
	split_sreg_range(0X7D00FA92,"T",0X1,3);
	split_sreg_range(0X7D00FAA0,"T",0X1,3);
	split_sreg_range(0X7D00FAA8,"T",0X1,3);
	split_sreg_range(0X7D00FAB4,"T",0X1,3);
	split_sreg_range(0X7D00FAC0,"T",0X1,3);
	split_sreg_range(0X7D00FAD0,"T",0X1,3);
	split_sreg_range(0X7D00FB30,"T",0X1,3);
	split_sreg_range(0X7D00FB96,"T",0X1,3);
	split_sreg_range(0X7D00FBC8,"T",0X1,3);
	split_sreg_range(0X7D00FBEA,"T",0X1,3);
	split_sreg_range(0X7D00FC00,"T",0X1,3);
	split_sreg_range(0X7D00FC08,"T",0X1,3);
	split_sreg_range(0X7D00FC0C,"T",0X1,3);
	split_sreg_range(0X7D00FC14,"T",0X1,3);
	split_sreg_range(0X7D00FC1C,"T",0X1,3);
	split_sreg_range(0X7D00FC26,"T",0X1,3);
	split_sreg_range(0X7D00FC54,"T",0X1,3);
	split_sreg_range(0X7D00FC84,"T",0X1,3);
	split_sreg_range(0X7D00FCA6,"T",0X1,3);
	split_sreg_range(0X7D00FCD4,"T",0X1,3);
	split_sreg_range(0X7D00FD00,"T",0X1,3);
	split_sreg_range(0X7D00FD2C,"T",0X1,3);
	split_sreg_range(0X7D00FD56,"T",0X1,3);
	split_sreg_range(0X7D00FD7C,"T",0X1,3);
	split_sreg_range(0X7D00FDA0,"T",0X1,3);
	split_sreg_range(0X7D00FDBA,"T",0X1,3);
	split_sreg_range(0X7D00FDD4,"T",0X1,3);
	split_sreg_range(0X7D00FE02,"T",0X1,3);
	split_sreg_range(0X7D00FE30,"T",0X1,3);
	split_sreg_range(0X7D00FE78,"T",0X1,3);
	split_sreg_range(0X7D00FE96,"T",0X1,3);
	split_sreg_range(0X7D00FEB0,"T",0X1,3);
	split_sreg_range(0X7D00FEB8,"T",0X1,3);
	split_sreg_range(0X7D00FF08,"T",0X1,3);
	split_sreg_range(0X7D00FF0A,"T",0X1,3);
	split_sreg_range(0X7D00FF18,"T",0X1,3);
	split_sreg_range(0X7D00FF20,"T",0X1,3);
	split_sreg_range(0X7D00FF2C,"T",0X1,3);
	split_sreg_range(0X7D00FF38,"T",0X1,3);
	split_sreg_range(0X7D00FF40,"T",0X1,3);
	split_sreg_range(0X7D00FF48,"T",0X1,3);
	split_sreg_range(0X7D00FF4A,"T",0X1,3);
	split_sreg_range(0X7D00FF50,"T",0X1,3);
	split_sreg_range(0X7D00FF6C,"T",0X1,3);
	split_sreg_range(0X7D00FF86,"T",0X1,3);
	split_sreg_range(0X7D00FFAE,"T",0X1,3);
	split_sreg_range(0X7D00FFB8,"T",0X1,3);
	split_sreg_range(0X7D00FFDC,"T",0X1,3);
	split_sreg_range(0X7D00FFE0,"T",0X1,3);
	split_sreg_range(0X7D00FFE8,"T",0X1,3);
	split_sreg_range(0X7D010006,"T",0X1,3);
	split_sreg_range(0X7D010032,"T",0X1,3);
	split_sreg_range(0X7D01007E,"T",0X1,3);
	split_sreg_range(0X7D010088,"T",0X1,3);
	split_sreg_range(0X7D0100A4,"T",0X1,3);
	split_sreg_range(0X7D0100A8,"T",0X1,3);
	split_sreg_range(0X7D0100D0,"T",0X1,3);
	split_sreg_range(0X7D0100DC,"T",0X1,3);
	split_sreg_range(0X7D0100F6,"T",0X1,3);
	split_sreg_range(0X7D010100,"T",0X1,3);
	split_sreg_range(0X7D01013A,"T",0X1,3);
	split_sreg_range(0X7D01015C,"T",0X1,3);
	split_sreg_range(0X7D0101CE,"T",0X1,3);
	split_sreg_range(0X7D0101E0,"T",0X1,3);
	split_sreg_range(0X7D0101E8,"T",0X1,3);
	split_sreg_range(0X7D0101EE,"T",0X1,3);
	split_sreg_range(0X7D010208,"T",0X1,3);
	split_sreg_range(0X7D010224,"T",0X1,3);
	split_sreg_range(0X7D010232,"T",0X1,3);
	split_sreg_range(0X7D010236,"T",0X1,3);
	split_sreg_range(0X7D01023A,"T",0X1,3);
	split_sreg_range(0X7D01023E,"T",0X1,3);
	split_sreg_range(0X7D010240,"T",0X1,3);
	split_sreg_range(0X7D01024E,"T",0X1,3);
	split_sreg_range(0X7D010250,"T",0X1,3);
	split_sreg_range(0X7D01028C,"T",0X1,3);
	split_sreg_range(0X7D0102C6,"T",0X1,3);
	split_sreg_range(0X7D01031A,"T",0X1,3);
	split_sreg_range(0X7D010344,"T",0X1,3);
	split_sreg_range(0X7D010356,"T",0X1,3);
	split_sreg_range(0X7D01035E,"T",0X1,3);
	split_sreg_range(0X7D010364,"T",0X1,3);
	split_sreg_range(0X7D010380,"T",0X1,3);
	split_sreg_range(0X7D01039E,"T",0X1,3);
	split_sreg_range(0X7D0103B8,"T",0X1,3);
	split_sreg_range(0X7D0103BE,"T",0X1,3);
	split_sreg_range(0X7D0103C2,"T",0X1,3);
	split_sreg_range(0X7D0103C4,"T",0X1,3);
	split_sreg_range(0X7D0103D4,"T",0X1,3);
	split_sreg_range(0X7D0103D8,"T",0X1,3);
	split_sreg_range(0X7D0103DA,"T",0X1,3);
	split_sreg_range(0X7D010410,"T",0X1,3);
	split_sreg_range(0X7D010452,"T",0X1,3);
	split_sreg_range(0X7D010490,"T",0X1,3);
	split_sreg_range(0X7D0104C4,"T",0X1,3);
	split_sreg_range(0X7D0104E6,"T",0X1,3);
	split_sreg_range(0X7D0104F0,"T",0X1,3);
	split_sreg_range(0X7D0104F4,"T",0X1,3);
	split_sreg_range(0X7D0104F8,"T",0X1,3);
	split_sreg_range(0X7D0104FA,"T",0X1,3);
	split_sreg_range(0X7D01050A,"T",0X1,3);
	split_sreg_range(0X7D01050E,"T",0X1,3);
	split_sreg_range(0X7D010510,"T",0X1,3);
	split_sreg_range(0X7D010530,"T",0X1,3);
	split_sreg_range(0X7D01056E,"T",0X1,3);
	split_sreg_range(0X7D0105CA,"T",0X1,3);
	split_sreg_range(0X7D0105CE,"T",0X1,3);
	split_sreg_range(0X7D0105F0,"T",0X1,3);
	split_sreg_range(0X7D01061C,"T",0X1,3);
	split_sreg_range(0X7D010626,"T",0X1,3);
	split_sreg_range(0X7D01062A,"T",0X1,3);
	split_sreg_range(0X7D010634,"T",0X1,3);
	split_sreg_range(0X7D010636,"T",0X1,3);
	split_sreg_range(0X7D010646,"T",0X1,3);
	split_sreg_range(0X7D01064A,"T",0X1,3);
	split_sreg_range(0X7D01064C,"T",0X1,3);
	split_sreg_range(0X7D010668,"T",0X1,3);
	split_sreg_range(0X7D010698,"T",0X1,3);
	split_sreg_range(0X7D0106C2,"T",0X1,3);
	split_sreg_range(0X7D0106C6,"T",0X1,3);
	split_sreg_range(0X7D0106F0,"T",0X1,3);
	split_sreg_range(0X7D0106F4,"T",0X1,3);
	split_sreg_range(0X7D01070C,"T",0X1,3);
	split_sreg_range(0X7D010718,"T",0X1,3);
	split_sreg_range(0X7D01071C,"T",0X1,3);
	split_sreg_range(0X7D01071E,"T",0X1,3);
	split_sreg_range(0X7D01072E,"T",0X1,3);
	split_sreg_range(0X7D010732,"T",0X1,3);
	split_sreg_range(0X7D010734,"T",0X1,3);
	split_sreg_range(0X7D01074C,"T",0X1,3);
	split_sreg_range(0X7D01077C,"T",0X1,3);
	split_sreg_range(0X7D0107A6,"T",0X1,3);
	split_sreg_range(0X7D0107AA,"T",0X1,3);
	split_sreg_range(0X7D0107D4,"T",0X1,3);
	split_sreg_range(0X7D0107D8,"T",0X1,3);
	split_sreg_range(0X7D0107F0,"T",0X1,3);
	split_sreg_range(0X7D0107FC,"T",0X1,3);
	split_sreg_range(0X7D010800,"T",0X1,3);
	split_sreg_range(0X7D010802,"T",0X1,3);
	split_sreg_range(0X7D010812,"T",0X1,3);
	split_sreg_range(0X7D010816,"T",0X1,3);
	split_sreg_range(0X7D010818,"T",0X1,3);
	split_sreg_range(0X7D010830,"T",0X1,3);
	split_sreg_range(0X7D01084C,"T",0X1,3);
	split_sreg_range(0X7D010850,"T",0X1,3);
	split_sreg_range(0X7D010870,"T",0X1,3);
	split_sreg_range(0X7D0108A0,"T",0X1,3);
	split_sreg_range(0X7D0108A4,"T",0X1,3);
	split_sreg_range(0X7D0108A8,"T",0X1,3);
	split_sreg_range(0X7D0108AA,"T",0X1,3);
	split_sreg_range(0X7D0108CC,"T",0X1,3);
	split_sreg_range(0X7D0108FE,"T",0X1,3);
	split_sreg_range(0X7D010936,"T",0X1,3);
	split_sreg_range(0X7D01093A,"T",0X1,3);
	split_sreg_range(0X7D01093E,"T",0X1,3);
	split_sreg_range(0X7D010940,"T",0X1,3);
	split_sreg_range(0X7D010960,"T",0X1,3);
	split_sreg_range(0X7D01098A,"T",0X1,3);
	split_sreg_range(0X7D01098E,"T",0X1,3);
	split_sreg_range(0X7D010994,"T",0X1,3);
	split_sreg_range(0X7D0109A6,"T",0X1,3);
	split_sreg_range(0X7D0109AA,"T",0X1,3);
	split_sreg_range(0X7D0109AC,"T",0X1,3);
	split_sreg_range(0X7D0109CC,"T",0X1,3);
	split_sreg_range(0X7D0109EC,"T",0X1,3);
	split_sreg_range(0X7D010A1E,"T",0X1,3);
	split_sreg_range(0X7D010A22,"T",0X1,3);
	split_sreg_range(0X7D010A30,"T",0X1,3);
	split_sreg_range(0X7D010A52,"T",0X1,3);
	split_sreg_range(0X7D010A56,"T",0X1,3);
	split_sreg_range(0X7D010A58,"T",0X1,3);
	split_sreg_range(0X7D010A78,"T",0X1,3);
	split_sreg_range(0X7D010AB6,"T",0X1,3);
	split_sreg_range(0X7D010B1A,"T",0X1,3);
	split_sreg_range(0X7D010B1E,"T",0X1,3);
	split_sreg_range(0X7D010B20,"T",0X1,3);
	split_sreg_range(0X7D010B54,"T",0X1,3);
	split_sreg_range(0X7D010B58,"T",0X1,3);
	split_sreg_range(0X7D010B5C,"T",0X1,3);
	split_sreg_range(0X7D010B60,"T",0X1,3);
	split_sreg_range(0X7D010B62,"T",0X1,3);
	split_sreg_range(0X7D010B88,"T",0X1,3);
	split_sreg_range(0X7D010BBA,"T",0X1,3);
	split_sreg_range(0X7D010BC2,"T",0X1,3);
	split_sreg_range(0X7D010BDA,"T",0X1,3);
	split_sreg_range(0X7D010BE2,"T",0X1,3);
	split_sreg_range(0X7D010BF6,"T",0X1,3);
	split_sreg_range(0X7D010C1A,"T",0X1,3);
	split_sreg_range(0X7D010C58,"T",0X1,3);
	split_sreg_range(0X7D010C5E,"T",0X1,3);
	split_sreg_range(0X7D010C6E,"T",0X1,3);
	split_sreg_range(0X7D010CA2,"T",0X1,3);
	split_sreg_range(0X7D010CC6,"T",0X1,3);
	split_sreg_range(0X7D010CF0,"T",0X1,3);
	split_sreg_range(0X7D010D02,"T",0X1,3);
	split_sreg_range(0X7D010D08,"T",0X1,3);
	split_sreg_range(0X7D010D0E,"T",0X1,3);
	split_sreg_range(0X7D010D30,"T",0X1,3);
	split_sreg_range(0X7D010D4E,"T",0X1,3);
	split_sreg_range(0X7D010D7E,"T",0X1,3);
	split_sreg_range(0X7D010DBC,"T",0X1,3);
	split_sreg_range(0X7D010DC2,"T",0X1,3);
	split_sreg_range(0X7D010DC8,"T",0X1,3);
	split_sreg_range(0X7D010DDC,"T",0X1,3);
	split_sreg_range(0X7D010E02,"T",0X1,3);
	split_sreg_range(0X7D010E12,"T",0X1,3);
	split_sreg_range(0X7D010E16,"T",0X1,3);
	split_sreg_range(0X7D010E38,"T",0X1,3);
	split_sreg_range(0X7D010E3A,"T",0X1,3);
	split_sreg_range(0X7D010E48,"T",0X1,3);
	split_sreg_range(0X7D010E86,"T",0X1,3);
	split_sreg_range(0X7D010E8A,"T",0X1,3);
	split_sreg_range(0X7D010E8C,"T",0X1,3);
	split_sreg_range(0X7D010E9C,"T",0X1,3);
	split_sreg_range(0X7D010EC6,"T",0X1,3);
	split_sreg_range(0X7D010EDA,"T",0X1,3);
	split_sreg_range(0X7D010EE6,"T",0X1,3);
	split_sreg_range(0X7D010EEC,"T",0X1,3);
	split_sreg_range(0X7D010F1E,"T",0X1,3);
	split_sreg_range(0X7D010F28,"T",0X1,3);
	split_sreg_range(0X7D010F38,"T",0X1,3);
	split_sreg_range(0X7D010F48,"T",0X1,3);
	split_sreg_range(0X7D010F58,"T",0X1,3);
	split_sreg_range(0X7D010F68,"T",0X1,3);
	split_sreg_range(0X7D010F90,"T",0X1,3);
	split_sreg_range(0X7D010FA4,"T",0X1,3);
	split_sreg_range(0X7D010FCA,"T",0X1,3);
	split_sreg_range(0X7D011028,"T",0X1,3);
	split_sreg_range(0X7D011032,"T",0X1,3);
	split_sreg_range(0X7D011068,"T",0X1,3);
	split_sreg_range(0X7D011082,"T",0X1,3);
	split_sreg_range(0X7D01108C,"T",0X1,3);
	split_sreg_range(0X7D011096,"T",0X1,3);
	split_sreg_range(0X7D01109C,"T",0X1,3);
	split_sreg_range(0X7D0110B0,"T",0X1,3);
	split_sreg_range(0X7D0110B6,"T",0X1,3);
	split_sreg_range(0X7D0110BC,"T",0X1,3);
	split_sreg_range(0X7D0110C2,"T",0X1,3);
	split_sreg_range(0X7D0110C6,"T",0X1,3);
	split_sreg_range(0X7D0110CC,"T",0X1,3);
	split_sreg_range(0X7D0110E4,"T",0X1,3);
	split_sreg_range(0X7D011106,"T",0X1,3);
	split_sreg_range(0X7D011116,"T",0X1,3);
	split_sreg_range(0X7D01111C,"T",0X1,3);
	split_sreg_range(0X7D011128,"T",0X1,3);
	split_sreg_range(0X7D01112E,"T",0X1,3);
	split_sreg_range(0X7D011132,"T",0X1,3);
	split_sreg_range(0X7D011138,"T",0X1,3);
	split_sreg_range(0X7D01114C,"T",0X1,3);
	split_sreg_range(0X7D011160,"T",0X1,3);
	split_sreg_range(0X7D011164,"T",0X1,3);
	split_sreg_range(0X7D01116A,"T",0X1,3);
	split_sreg_range(0X7D011178,"T",0X1,3);
	split_sreg_range(0X7D01118C,"T",0X1,3);
	split_sreg_range(0X7D0111A2,"T",0X1,3);
	split_sreg_range(0X7D0111C0,"T",0X1,3);
	split_sreg_range(0X7D0111D4,"T",0X1,3);
	split_sreg_range(0X7D0111E4,"T",0X1,3);
	split_sreg_range(0X7D0111F8,"T",0X1,3);
	split_sreg_range(0X7D011244,"T",0X1,3);
	split_sreg_range(0X7D01129A,"T",0X1,3);
	split_sreg_range(0X7D01129E,"T",0X1,3);
	split_sreg_range(0X7D0112A0,"T",0X1,3);
	split_sreg_range(0X7D0112BC,"T",0X1,3);
	split_sreg_range(0X7D011306,"T",0X1,3);
	split_sreg_range(0X7D011332,"T",0X1,3);
	split_sreg_range(0X7D01135A,"T",0X1,3);
	split_sreg_range(0X7D0113D4,"T",0X1,3);
	split_sreg_range(0X7D0113D6,"T",0X1,3);
	split_sreg_range(0X7D0113E2,"T",0X1,3);
	split_sreg_range(0X7D0113E6,"T",0X1,3);
	split_sreg_range(0X7D0113EA,"T",0X1,3);
	split_sreg_range(0X7D0113EC,"T",0X1,3);
	split_sreg_range(0X7D011414,"T",0X1,3);
	split_sreg_range(0X7D01143C,"T",0X1,3);
	split_sreg_range(0X7D011446,"T",0X1,3);
	split_sreg_range(0X7D01144C,"T",0X1,3);
	split_sreg_range(0X7D01145E,"T",0X1,3);
	split_sreg_range(0X7D01147C,"T",0X1,3);
	split_sreg_range(0X7D0114A2,"T",0X1,3);
	split_sreg_range(0X7D0114B8,"T",0X1,3);
	split_sreg_range(0X7D0114D8,"T",0X1,3);
	split_sreg_range(0X7D0114E8,"T",0X1,3);
	split_sreg_range(0X7D0114F6,"T",0X1,3);
	split_sreg_range(0X7D0114FA,"T",0X1,3);
	split_sreg_range(0X7D0114FE,"T",0X1,3);
	split_sreg_range(0X7D011502,"T",0X1,3);
	split_sreg_range(0X7D011506,"T",0X1,3);
	split_sreg_range(0X7D01150A,"T",0X1,3);
	split_sreg_range(0X7D01150C,"T",0X1,3);
	split_sreg_range(0X7D01151C,"T",0X1,3);
	split_sreg_range(0X7D011590,"T",0X1,3);
	split_sreg_range(0X7D0115DE,"T",0X1,3);
	split_sreg_range(0X7D0115E2,"T",0X1,3);
	split_sreg_range(0X7D011616,"T",0X1,3);
	split_sreg_range(0X7D011628,"T",0X1,3);
	split_sreg_range(0X7D011630,"T",0X1,3);
	split_sreg_range(0X7D011636,"T",0X1,3);
	split_sreg_range(0X7D01163A,"T",0X1,3);
	split_sreg_range(0X7D01163C,"T",0X1,3);
	split_sreg_range(0X7D011666,"T",0X1,3);
	split_sreg_range(0X7D011668,"T",0X1,3);
	split_sreg_range(0X7D011698,"T",0X1,3);
	split_sreg_range(0X7D0116C8,"T",0X1,3);
	split_sreg_range(0X7D0116CA,"T",0X1,3);
	split_sreg_range(0X7D0116DC,"T",0X1,3);
	split_sreg_range(0X7D011704,"T",0X1,3);
	split_sreg_range(0X7D011706,"T",0X1,3);
	split_sreg_range(0X7D011718,"T",0X1,3);
	split_sreg_range(0X7D011766,"T",0X1,3);
	split_sreg_range(0X7D01178C,"T",0X1,3);
	split_sreg_range(0X7D01179E,"T",0X1,3);
	split_sreg_range(0X7D0117A6,"T",0X1,3);
	split_sreg_range(0X7D0117AC,"T",0X1,3);
	split_sreg_range(0X7D0117B0,"T",0X1,3);
	split_sreg_range(0X7D0117B2,"T",0X1,3);
	split_sreg_range(0X7D0117EA,"T",0X1,3);
	split_sreg_range(0X7D01181A,"T",0X1,3);
	split_sreg_range(0X7D01181C,"T",0X1,3);
	split_sreg_range(0X7D011850,"T",0X1,3);
	split_sreg_range(0X7D011886,"T",0X1,3);
	split_sreg_range(0X7D0118CE,"T",0X1,3);
	split_sreg_range(0X7D0118D6,"T",0X1,3);
	split_sreg_range(0X7D0118DA,"T",0X1,3);
	split_sreg_range(0X7D0118F0,"T",0X1,3);
	split_sreg_range(0X7D011918,"T",0X1,3);
	split_sreg_range(0X7D011966,"T",0X1,3);
	split_sreg_range(0X7D011988,"T",0X1,3);
	split_sreg_range(0X7D0119A0,"T",0X1,3);
	split_sreg_range(0X7D0119A6,"T",0X1,3);
	split_sreg_range(0X7D0119E6,"T",0X1,3);
	split_sreg_range(0X7D0119EE,"T",0X1,3);
	split_sreg_range(0X7D011A06,"T",0X1,3);
	split_sreg_range(0X7D011A1C,"T",0X1,3);
	split_sreg_range(0X7D011A38,"T",0X1,3);
	split_sreg_range(0X7D011A3C,"T",0X1,3);
	split_sreg_range(0X7D011A4A,"T",0X1,3);
	split_sreg_range(0X7D011A52,"T",0X1,3);
	split_sreg_range(0X7D011A5A,"T",0X1,3);
	split_sreg_range(0X7D011A5C,"T",0X1,3);
	split_sreg_range(0X7D011A8C,"T",0X1,3);
	split_sreg_range(0X7D011AB6,"T",0X1,3);
	split_sreg_range(0X7D011ABA,"T",0X1,3);
	split_sreg_range(0X7D011ABE,"T",0X1,3);
	split_sreg_range(0X7D011AC0,"T",0X1,3);
	split_sreg_range(0X7D011ADE,"T",0X1,3);
	split_sreg_range(0X7D011AE2,"T",0X1,3);
	split_sreg_range(0X7D011AE6,"T",0X1,3);
	split_sreg_range(0X7D011AE8,"T",0X1,3);
	split_sreg_range(0X7D011B00,"T",0X1,3);
	split_sreg_range(0X7D011B4C,"T",0X1,3);
	split_sreg_range(0X7D011B62,"T",0X1,3);
	split_sreg_range(0X7D011B7A,"T",0X1,3);
	split_sreg_range(0X7D011B80,"T",0X1,3);
	split_sreg_range(0X7D011B84,"T",0X1,3);
	split_sreg_range(0X7D011B92,"T",0X1,3);
	split_sreg_range(0X7D011BA0,"T",0X1,3);
	split_sreg_range(0X7D011BA4,"T",0X1,3);
	split_sreg_range(0X7D011BAA,"T",0X1,3);
	split_sreg_range(0X7D011BD0,"T",0X1,3);
	split_sreg_range(0X7D011C00,"T",0X1,3);
	split_sreg_range(0X7D011C3E,"T",0X1,3);
	split_sreg_range(0X7D011C42,"T",0X1,3);
	split_sreg_range(0X7D011C7C,"T",0X1,3);
	split_sreg_range(0X7D011C82,"T",0X1,3);
	split_sreg_range(0X7D011C86,"T",0X1,3);
	split_sreg_range(0X7D011C88,"T",0X1,3);
	split_sreg_range(0X7D011C98,"T",0X1,3);
	split_sreg_range(0X7D011CDC,"T",0X1,3);
	split_sreg_range(0X7D011CDE,"T",0X1,3);
	split_sreg_range(0X7D011CF0,"T",0X1,3);
	split_sreg_range(0X7D011D12,"T",0X1,3);
	split_sreg_range(0X7D011D16,"T",0X1,3);
	split_sreg_range(0X7D011D18,"T",0X1,3);
	split_sreg_range(0X7D011D40,"T",0X1,3);
	split_sreg_range(0X7D011D72,"T",0X1,3);
	split_sreg_range(0X7D011D74,"T",0X1,3);
	split_sreg_range(0X7D011D88,"T",0X1,3);
	split_sreg_range(0X7D011DC8,"T",0X1,3);
	split_sreg_range(0X7D011E12,"T",0X1,3);
	split_sreg_range(0X7D011E14,"T",0X1,3);
	split_sreg_range(0X7D011E28,"T",0X1,3);
	split_sreg_range(0X7D011E38,"T",0X1,3);
	split_sreg_range(0X7D011E3C,"T",0X1,3);
	split_sreg_range(0X7D011E44,"T",0X1,3);
	split_sreg_range(0X7D011E6A,"T",0X1,3);
	split_sreg_range(0X7D011E7A,"T",0X1,3);
	split_sreg_range(0X7D011E7E,"T",0X1,3);
	split_sreg_range(0X7D011E94,"T",0X1,3);
	split_sreg_range(0X7D011E9E,"T",0X1,3);
	split_sreg_range(0X7D011EAE,"T",0X1,3);
	split_sreg_range(0X7D011EB0,"T",0X1,3);
	split_sreg_range(0X7D011EB8,"T",0X1,3);
	split_sreg_range(0X7D011EBC,"T",0X1,3);
	split_sreg_range(0X7D011EC0,"T",0X1,3);
	split_sreg_range(0X7D011EC4,"T",0X1,3);
	split_sreg_range(0X7D011EC6,"T",0X1,3);
	split_sreg_range(0X7D011ED6,"T",0X1,3);
	split_sreg_range(0X7D011F10,"T",0X1,3);
	split_sreg_range(0X7D011F44,"T",0X1,3);
	split_sreg_range(0X7D011F82,"T",0X1,3);
	split_sreg_range(0X7D011F86,"T",0X1,3);
	split_sreg_range(0X7D011F92,"T",0X1,3);
	split_sreg_range(0X7D011FBA,"T",0X1,3);
	split_sreg_range(0X7D011FC2,"T",0X1,3);
	split_sreg_range(0X7D011FC6,"T",0X1,3);
	split_sreg_range(0X7D011FC8,"T",0X1,3);
	split_sreg_range(0X7D011FE0,"T",0X1,3);
	split_sreg_range(0X7D011FFA,"T",0X1,3);
	split_sreg_range(0X7D011FFC,"T",0X1,3);
	split_sreg_range(0X7D012008,"T",0X1,3);
	split_sreg_range(0X7D012038,"T",0X1,3);
	split_sreg_range(0X7D01204A,"T",0X1,3);
	split_sreg_range(0X7D01205A,"T",0X1,3);
	split_sreg_range(0X7D012068,"T",0X1,3);
	split_sreg_range(0X7D01206E,"T",0X1,3);
	split_sreg_range(0X7D01207C,"T",0X1,3);
	split_sreg_range(0X7D012082,"T",0X1,3);
	split_sreg_range(0X7D012090,"T",0X1,3);
	split_sreg_range(0X7D012096,"T",0X1,3);
	split_sreg_range(0X7D0120A8,"T",0X1,3);
	split_sreg_range(0X7D0120AE,"T",0X1,3);
	split_sreg_range(0X7D0120C4,"T",0X1,3);
	split_sreg_range(0X7D0120D0,"T",0X1,3);
	split_sreg_range(0X7D0120D2,"T",0X1,3);
	split_sreg_range(0X7D0120F8,"T",0X1,3);
	split_sreg_range(0X7D01212A,"T",0X1,3);
	split_sreg_range(0X7D012144,"T",0X1,3);
	split_sreg_range(0X7D012174,"T",0X1,3);
	split_sreg_range(0X7D012184,"T",0X1,3);
	split_sreg_range(0X7D0121B4,"T",0X1,3);
	split_sreg_range(0X7D0121C4,"T",0X1,3);
	split_sreg_range(0X7D012210,"T",0X1,3);
	split_sreg_range(0X7D012220,"T",0X1,3);
	split_sreg_range(0X7D01223A,"T",0X1,3);
	split_sreg_range(0X7D01223C,"T",0X1,3);
	split_sreg_range(0X7D012250,"T",0X1,3);
	split_sreg_range(0X7D01226C,"T",0X1,3);
	split_sreg_range(0X7D012286,"T",0X1,3);
	split_sreg_range(0X7D0122AE,"T",0X1,3);
	split_sreg_range(0X7D0122B8,"T",0X1,3);
	split_sreg_range(0X7D0122D4,"T",0X1,3);
	split_sreg_range(0X7D0122E8,"T",0X1,3);
	split_sreg_range(0X7D012304,"T",0X1,3);
	split_sreg_range(0X7D01230C,"T",0X1,3);
	split_sreg_range(0X7D012328,"T",0X1,3);
	split_sreg_range(0X7D012342,"T",0X1,3);
	split_sreg_range(0X7D01236A,"T",0X1,3);
	split_sreg_range(0X7D012374,"T",0X1,3);
	split_sreg_range(0X7D012398,"T",0X1,3);
	split_sreg_range(0X7D01239C,"T",0X1,3);
	split_sreg_range(0X7D0123A4,"T",0X1,3);
	split_sreg_range(0X7D0123C2,"T",0X1,3);
	split_sreg_range(0X7D0123EE,"T",0X1,3);
	split_sreg_range(0X7D01243A,"T",0X1,3);
	split_sreg_range(0X7D012444,"T",0X1,3);
	split_sreg_range(0X7D0124C0,"T",0X1,3);
	split_sreg_range(0X7D0124C2,"T",0X1,3);
	split_sreg_range(0X7D0124D2,"T",0X1,3);
	split_sreg_range(0X7D0124D6,"T",0X1,3);
	split_sreg_range(0X7D0124D8,"T",0X1,3);
	split_sreg_range(0X7D0124F0,"T",0X1,3);
	split_sreg_range(0X7D01251E,"T",0X1,3);
	split_sreg_range(0X7D01252E,"T",0X1,3);
	split_sreg_range(0X7D012534,"T",0X1,3);
	split_sreg_range(0X7D01253C,"T",0X1,3);
	split_sreg_range(0X7D012554,"T",0X1,3);
	split_sreg_range(0X7D012556,"T",0X1,3);
	split_sreg_range(0X7D01255A,"T",0X1,3);
	split_sreg_range(0X7D01255E,"T",0X1,3);
	split_sreg_range(0X7D0125A2,"T",0X1,3);
	split_sreg_range(0X7D0125C2,"T",0X1,3);
	split_sreg_range(0X7D0125DA,"T",0X1,3);
	split_sreg_range(0X7D0125DE,"T",0X1,3);
	split_sreg_range(0X7D0125E0,"T",0X1,3);
	split_sreg_range(0X7D012600,"T",0X1,3);
	split_sreg_range(0X7D012664,"T",0X1,3);
	split_sreg_range(0X7D012674,"T",0X1,3);
	split_sreg_range(0X7D012684,"T",0X1,3);
	split_sreg_range(0X7D01268C,"T",0X1,3);
	split_sreg_range(0X7D012694,"T",0X1,3);
	split_sreg_range(0X7D0126A2,"T",0X1,3);
	split_sreg_range(0X7D0126A6,"T",0X1,3);
	split_sreg_range(0X7D0126B4,"T",0X1,3);
	split_sreg_range(0X7D0126DE,"T",0X1,3);
	split_sreg_range(0X7D0126E4,"T",0X1,3);
	split_sreg_range(0X7D01270A,"T",0X1,3);
	split_sreg_range(0X7D01274E,"T",0X1,3);
	split_sreg_range(0X7D01276E,"T",0X1,3);
	split_sreg_range(0X7D01277A,"T",0X1,3);
	split_sreg_range(0X7D01278C,"T",0X1,3);
	split_sreg_range(0X7D012798,"T",0X1,3);
	split_sreg_range(0X7D01279A,"T",0X1,3);
	split_sreg_range(0X7D0127C4,"T",0X1,3);
	split_sreg_range(0X7D0127E0,"T",0X1,3);
	split_sreg_range(0X7D0127E4,"T",0X1,3);
	split_sreg_range(0X7D0127F0,"T",0X1,3);
	split_sreg_range(0X7D012800,"T",0X1,3);
	split_sreg_range(0X7D012816,"T",0X1,3);
	split_sreg_range(0X7D012826,"T",0X1,3);
	split_sreg_range(0X7D01283A,"T",0X1,3);
	split_sreg_range(0X7D012840,"T",0X1,3);
	split_sreg_range(0X7D012846,"T",0X1,3);
	split_sreg_range(0X7D01285C,"T",0X1,3);
	split_sreg_range(0X7D01286C,"T",0X1,3);
	split_sreg_range(0X7D012872,"T",0X1,3);
	split_sreg_range(0X7D012874,"T",0X1,3);
	split_sreg_range(0X7D012888,"T",0X1,3);
	split_sreg_range(0X7D01289E,"T",0X1,3);
	split_sreg_range(0X7D0128A2,"T",0X1,3);
	split_sreg_range(0X7D0128D0,"T",0X1,3);
	split_sreg_range(0X7D0128DA,"T",0X1,3);
	split_sreg_range(0X7D0128F4,"T",0X1,3);
	split_sreg_range(0X7D0128F8,"T",0X1,3);
	split_sreg_range(0X7D0128FA,"T",0X1,3);
	split_sreg_range(0X7D012914,"T",0X1,3);
	split_sreg_range(0X7D01295C,"T",0X1,3);
	split_sreg_range(0X7D012972,"T",0X1,3);
	split_sreg_range(0X7D012978,"T",0X1,3);
	split_sreg_range(0X7D01297C,"T",0X1,3);
	split_sreg_range(0X7D012988,"T",0X1,3);
	split_sreg_range(0X7D01298C,"T",0X1,3);
	split_sreg_range(0X7D012998,"T",0X1,3);
	split_sreg_range(0X7D01299A,"T",0X1,3);
	split_sreg_range(0X7D0129B0,"T",0X1,3);
	split_sreg_range(0X7D0129E4,"T",0X1,3);
	split_sreg_range(0X7D0129F4,"T",0X1,3);
	split_sreg_range(0X7D0129FA,"T",0X1,3);
	split_sreg_range(0X7D012A0A,"T",0X1,3);
	split_sreg_range(0X7D012A12,"T",0X1,3);
	split_sreg_range(0X7D012A16,"T",0X1,3);
	split_sreg_range(0X7D012A4A,"T",0X1,3);
	split_sreg_range(0X7D012A50,"T",0X1,3);
	split_sreg_range(0X7D012A5A,"T",0X1,3);
	split_sreg_range(0X7D012A60,"T",0X1,3);
	split_sreg_range(0X7D012A84,"T",0X1,3);
	split_sreg_range(0X7D012A92,"T",0X1,3);
	split_sreg_range(0X7D012A96,"T",0X1,3);
	split_sreg_range(0X7D012A9C,"T",0X1,3);
	split_sreg_range(0X7D012AB8,"T",0X1,3);
	split_sreg_range(0X7D012ADE,"T",0X1,3);
	split_sreg_range(0X7D012AEE,"T",0X1,3);
	split_sreg_range(0X7D012AFE,"T",0X1,3);
	split_sreg_range(0X7D012B08,"T",0X1,3);
	split_sreg_range(0X7D012B10,"T",0X1,3);
	split_sreg_range(0X7D012B18,"T",0X1,3);
	split_sreg_range(0X7D012B20,"T",0X1,3);
	split_sreg_range(0X7D012B2A,"T",0X1,3);
	split_sreg_range(0X7D012B38,"T",0X1,3);
	split_sreg_range(0X7D012B64,"T",0X1,3);
	split_sreg_range(0X7D012B74,"T",0X1,3);
	split_sreg_range(0X7D012B7A,"T",0X1,3);
	split_sreg_range(0X7D012B8A,"T",0X1,3);
	split_sreg_range(0X7D012B92,"T",0X1,3);
	split_sreg_range(0X7D012B94,"T",0X1,3);
	split_sreg_range(0X7D012B98,"T",0X1,3);
	split_sreg_range(0X7D012BA4,"T",0X1,3);
	split_sreg_range(0X7D012BD2,"T",0X1,3);
	split_sreg_range(0X7D012BD6,"T",0X1,3);
	split_sreg_range(0X7D012C14,"T",0X1,3);
	split_sreg_range(0X7D012C16,"T",0X1,3);
	split_sreg_range(0X7D012C30,"T",0X1,3);
	split_sreg_range(0X7D012CBC,"T",0X1,3);
	split_sreg_range(0X7D012CC0,"T",0X1,3);
	split_sreg_range(0X7D012CD4,"T",0X1,3);
	split_sreg_range(0X7D012CDA,"T",0X1,3);
	split_sreg_range(0X7D012CDC,"T",0X1,3);
	split_sreg_range(0X7D012D2C,"T",0X1,3);
	split_sreg_range(0X7D012D5A,"T",0X1,3);
	split_sreg_range(0X7D012D6A,"T",0X1,3);
	split_sreg_range(0X7D012D84,"T",0X1,3);
	split_sreg_range(0X7D012D86,"T",0X1,3);
	split_sreg_range(0X7D012D94,"T",0X1,3);
	split_sreg_range(0X7D012DEC,"T",0X1,3);
	split_sreg_range(0X7D012DF8,"T",0X1,3);
	split_sreg_range(0X7D012DFC,"T",0X1,3);
	split_sreg_range(0X7D012DFE,"T",0X1,3);
	split_sreg_range(0X7D012E0C,"T",0X1,3);
	split_sreg_range(0X7D012E40,"T",0X1,3);
	split_sreg_range(0X7D012EB4,"T",0X1,3);
	split_sreg_range(0X7D012EB6,"T",0X1,3);
	split_sreg_range(0X7D012EC2,"T",0X1,3);
	split_sreg_range(0X7D012EC6,"T",0X1,3);
	split_sreg_range(0X7D012EC8,"T",0X1,3);
	split_sreg_range(0X7D012EE8,"T",0X1,3);
	split_sreg_range(0X7D012F24,"T",0X1,3);
	split_sreg_range(0X7D012F46,"T",0X1,3);
	split_sreg_range(0X7D012F58,"T",0X1,3);
	split_sreg_range(0X7D012FDE,"T",0X1,3);
	split_sreg_range(0X7D01301A,"T",0X1,3);
	split_sreg_range(0X7D013050,"T",0X1,3);
	split_sreg_range(0X7D013098,"T",0X1,3);
	split_sreg_range(0X7D0130FC,"T",0X1,3);
	split_sreg_range(0X7D01315E,"T",0X1,3);
	split_sreg_range(0X7D01318E,"T",0X1,3);
	split_sreg_range(0X7D013260,"T",0X1,3);
	split_sreg_range(0X7D01327E,"T",0X1,3);
	split_sreg_range(0X7D013284,"T",0X1,3);
	split_sreg_range(0X7D01328A,"T",0X1,3);
	split_sreg_range(0X7D013290,"T",0X1,3);
	split_sreg_range(0X7D0132AC,"T",0X1,3);
	split_sreg_range(0X7D01334A,"T",0X1,3);
	split_sreg_range(0X7D0134DE,"T",0X1,3);
	split_sreg_range(0X7D013610,"T",0X1,3);
	split_sreg_range(0X7D013612,"T",0X1,3);
	split_sreg_range(0X7D013638,"T",0X1,3);
	split_sreg_range(0X7D0136DE,"T",0X1,3);
	split_sreg_range(0X7D013884,"T",0X1,3);
	split_sreg_range(0X7D01399A,"T",0X1,3);
	split_sreg_range(0X7D01399C,"T",0X1,3);
	split_sreg_range(0X7D0139B8,"T",0X1,3);
	split_sreg_range(0X7D013A6C,"T",0X1,3);
	split_sreg_range(0X7D013C3C,"T",0X1,3);
	split_sreg_range(0X7D013C4C,"T",0X1,3);
	split_sreg_range(0X7D013C78,"T",0X1,3);
	split_sreg_range(0X7D013CA2,"T",0X1,3);
	split_sreg_range(0X7D013CC8,"T",0X1,3);
	split_sreg_range(0X7D013CEA,"T",0X1,3);
	split_sreg_range(0X7D013D02,"T",0X1,3);
	split_sreg_range(0X7D013D1C,"T",0X1,3);
	split_sreg_range(0X7D013D2C,"T",0X1,3);
	split_sreg_range(0X7D013D98,"T",0X1,3);
	split_sreg_range(0X7D013DAA,"T",0X1,3);
	split_sreg_range(0X7D013DB0,"T",0X1,3);
	split_sreg_range(0X7D013E02,"T",0X1,3);
	split_sreg_range(0X7D013E12,"T",0X1,3);
	split_sreg_range(0X7D013E28,"T",0X1,3);
	split_sreg_range(0X7D013E2C,"T",0X1,3);
	split_sreg_range(0X7D013E2E,"T",0X1,3);
	split_sreg_range(0X7D013E38,"T",0X1,3);
	split_sreg_range(0X7D013E98,"T",0X1,3);
	split_sreg_range(0X7D013EA8,"T",0X1,3);
	split_sreg_range(0X7D013EB2,"T",0X1,3);
	split_sreg_range(0X7D013EBC,"T",0X1,3);
	split_sreg_range(0X7D013EC2,"T",0X1,3);
	split_sreg_range(0X7D013EC8,"T",0X1,3);
	split_sreg_range(0X7D013ED0,"T",0X1,3);
	split_sreg_range(0X7D013EE2,"T",0X1,3);
	split_sreg_range(0X7D013EF4,"T",0X1,3);
	split_sreg_range(0X7D013F3E,"T",0X1,3);
	split_sreg_range(0X7D013F80,"T",0X1,3);
	split_sreg_range(0X7D013F90,"T",0X1,3);
	split_sreg_range(0X7D013FA0,"T",0X1,3);
	split_sreg_range(0X7D013FA6,"T",0X1,3);
	split_sreg_range(0X7D013FB4,"T",0X1,3);
	split_sreg_range(0X7D013FBC,"T",0X1,3);
	split_sreg_range(0X7D013FBE,"T",0X1,3);
	split_sreg_range(0X7D013FC4,"T",0X1,3);
	split_sreg_range(0X7D013FF0,"T",0X1,3);
	split_sreg_range(0X7D014010,"T",0X1,3);
	split_sreg_range(0X7D014016,"T",0X1,3);
	split_sreg_range(0X7D01401A,"T",0X1,3);
	split_sreg_range(0X7D014036,"T",0X1,3);
	split_sreg_range(0X7D014048,"T",0X1,3);
	split_sreg_range(0X7D014052,"T",0X1,3);
	split_sreg_range(0X7D01406E,"T",0X1,3);
	split_sreg_range(0X7D014074,"T",0X1,3);
	split_sreg_range(0X7D014080,"T",0X1,3);
	split_sreg_range(0X7D01408E,"T",0X1,3);
	split_sreg_range(0X7D014094,"T",0X1,3);
	split_sreg_range(0X7D0140B4,"T",0X1,3);
	split_sreg_range(0X7D0140BA,"T",0X1,3);
	split_sreg_range(0X7D0140CE,"T",0X1,3);
	split_sreg_range(0X7D0140E4,"T",0X1,3);
	split_sreg_range(0X7D0140F8,"T",0X1,3);
	split_sreg_range(0X7D014112,"T",0X1,3);
	split_sreg_range(0X7D014118,"T",0X1,3);
	split_sreg_range(0X7D01411C,"T",0X1,3);
	split_sreg_range(0X7D01413C,"T",0X1,3);
	split_sreg_range(0X7D014152,"T",0X1,3);
	split_sreg_range(0X7D014174,"T",0X1,3);
	split_sreg_range(0X7D014190,"T",0X1,3);
	split_sreg_range(0X7D014192,"T",0X1,3);
	split_sreg_range(0X7D01419C,"T",0X1,3);
	split_sreg_range(0X7D0141C4,"T",0X1,3);
	split_sreg_range(0X7D0141D2,"T",0X1,3);
	split_sreg_range(0X7D0141F0,"T",0X1,3);
	split_sreg_range(0X7D0141FE,"T",0X1,3);
	split_sreg_range(0X7D01422C,"T",0X1,3);
	split_sreg_range(0X7D014246,"T",0X1,3);
	split_sreg_range(0X7D01424E,"T",0X1,3);
	split_sreg_range(0X7D014254,"T",0X1,3);
	split_sreg_range(0X7D01425A,"T",0X1,3);
	split_sreg_range(0X7D014264,"T",0X1,3);
	split_sreg_range(0X7D014270,"T",0X1,3);
	split_sreg_range(0X7D014276,"T",0X1,3);
	split_sreg_range(0X7D0142BE,"T",0X1,3);
	split_sreg_range(0X7D01432A,"T",0X1,3);
	split_sreg_range(0X7D014368,"T",0X1,3);
	split_sreg_range(0X7D014384,"T",0X1,3);
	split_sreg_range(0X7D014396,"T",0X1,3);
	split_sreg_range(0X7D0143A0,"T",0X1,3);
	split_sreg_range(0X7D014436,"T",0X1,3);
	split_sreg_range(0X7D01443A,"T",0X1,3);
	split_sreg_range(0X7D01443C,"T",0X1,3);
	split_sreg_range(0X7D014448,"T",0X1,3);
	split_sreg_range(0X7D014456,"T",0X1,3);
	split_sreg_range(0X7D01445C,"T",0X1,3);
	split_sreg_range(0X7D014466,"T",0X1,3);
	split_sreg_range(0X7D0144A4,"T",0X1,3);
	split_sreg_range(0X7D0144A6,"T",0X1,3);
	split_sreg_range(0X7D0144BC,"T",0X1,3);
	split_sreg_range(0X7D0144E2,"T",0X1,3);
	split_sreg_range(0X7D0144F4,"T",0X1,3);
	split_sreg_range(0X7D01451A,"T",0X1,3);
	split_sreg_range(0X7D014530,"T",0X1,3);
	split_sreg_range(0X7D01454C,"T",0X1,3);
	split_sreg_range(0X7D014566,"T",0X1,3);
	split_sreg_range(0X7D014576,"T",0X1,3);
	split_sreg_range(0X7D014592,"T",0X1,3);
	split_sreg_range(0X7D014594,"T",0X1,3);
	split_sreg_range(0X7D01459C,"T",0X1,3);
	split_sreg_range(0X7D0145A6,"T",0X1,3);
	split_sreg_range(0X7D0149FC,"T",0X1,3);
	split_sreg_range(0X7D014D1A,"T",0X1,3);
	split_sreg_range(0X7D014D28,"T",0X1,3);
	split_sreg_range(0X7D014D32,"T",0X1,3);
	split_sreg_range(0X7D014D70,"T",0X1,3);
	split_sreg_range(0X7D014DA4,"T",0X1,3);
	split_sreg_range(0X7D014E50,"T",0X1,3);
	split_sreg_range(0X7D014EDE,"T",0X1,3);
	split_sreg_range(0X7D014F94,"T",0X1,3);
	split_sreg_range(0X7D014F9A,"T",0X1,3);
	split_sreg_range(0X7D015032,"T",0X1,3);
	split_sreg_range(0X7D01508E,"T",0X1,3);
	split_sreg_range(0X7D0150D2,"T",0X1,3);
	split_sreg_range(0X7D0150F8,"T",0X1,3);
	split_sreg_range(0X7D015102,"T",0X1,3);
	split_sreg_range(0X7D015118,"T",0X1,3);
	split_sreg_range(0X7D01513E,"T",0X1,3);
	split_sreg_range(0X7D01558C,"T",0X1,3);
	split_sreg_range(0X7D015FD4,"T",0X1,3);
	split_sreg_range(0X7D016402,"T",0X1,3);
	split_sreg_range(0X7D01645C,"T",0X1,3);
	split_sreg_range(0X7D01648E,"T",0X1,3);
	split_sreg_range(0X7D0164B4,"T",0X1,3);
	split_sreg_range(0X7D0164C0,"T",0X1,3);
	split_sreg_range(0X7D0164DE,"T",0X1,3);
	split_sreg_range(0X7D01657C,"T",0X1,3);
	split_sreg_range(0X7D01668C,"T",0X1,3);
	split_sreg_range(0X7D017024,"T",0X1,3);
	split_sreg_range(0X7D01706A,"T",0X1,3);
	split_sreg_range(0X7D017094,"T",0X1,3);
	split_sreg_range(0X7D0170DC,"T",0X1,3);
	split_sreg_range(0X7D0170E0,"T",0X1,3);
	split_sreg_range(0X7D0170E6,"T",0X1,3);
	split_sreg_range(0X7D0170FA,"T",0X1,3);
	split_sreg_range(0X7D017110,"T",0X1,3);
	split_sreg_range(0X7D017156,"T",0X1,3);
	split_sreg_range(0X7D01715A,"T",0X1,3);
	split_sreg_range(0X7D017160,"T",0X1,3);
	split_sreg_range(0X7D017172,"T",0X1,3);
	split_sreg_range(0X7D017186,"T",0X1,3);
	split_sreg_range(0X7D01718A,"T",0X1,3);
	split_sreg_range(0X7D01718C,"T",0X1,3);
	split_sreg_range(0X7D017198,"T",0X1,3);
	split_sreg_range(0X7D017200,"T",0X1,3);
	split_sreg_range(0X7D01720C,"T",0X1,3);
	split_sreg_range(0X7D017224,"T",0X1,3);
	split_sreg_range(0X7D01722A,"T",0X1,3);
	split_sreg_range(0X7D017242,"T",0X1,3);
	split_sreg_range(0X7D01725E,"T",0X1,3);
	split_sreg_range(0X7D017260,"T",0X1,3);
	split_sreg_range(0X7D01726A,"T",0X1,3);
	split_sreg_range(0X7D01726E,"T",0X1,3);
	split_sreg_range(0X7D017272,"T",0X1,3);
	split_sreg_range(0X7D017274,"T",0X1,3);
	split_sreg_range(0X7D017280,"T",0X1,3);
	split_sreg_range(0X7D0172AC,"T",0X1,3);
	split_sreg_range(0X7D0172AE,"T",0X1,3);
	split_sreg_range(0X7D0172B4,"T",0X1,3);
	split_sreg_range(0X7D0172C0,"T",0X1,3);
	split_sreg_range(0X7D0172C6,"T",0X1,3);
	split_sreg_range(0X7D0172F4,"T",0X1,3);
	split_sreg_range(0X7D017304,"T",0X1,3);
	split_sreg_range(0X7D017306,"T",0X1,3);
	split_sreg_range(0X7D01730E,"T",0X1,3);
	split_sreg_range(0X7D017332,"T",0X1,3);
	split_sreg_range(0X7D01735E,"T",0X1,3);
	split_sreg_range(0X7D017364,"T",0X1,3);
	split_sreg_range(0X7D01736C,"T",0X1,3);
	split_sreg_range(0X7D01737C,"T",0X1,3);
	split_sreg_range(0X7D017384,"T",0X1,3);
	split_sreg_range(0X7D0173BA,"T",0X1,3);
	split_sreg_range(0X7D0173BE,"T",0X1,3);
	split_sreg_range(0X7D0173FE,"T",0X1,3);
	split_sreg_range(0X7D017406,"T",0X1,3);
	split_sreg_range(0X7D017426,"T",0X1,3);
	split_sreg_range(0X7D017436,"T",0X1,3);
	split_sreg_range(0X7D01744E,"T",0X1,3);
	split_sreg_range(0X7D01747C,"T",0X1,3);
	split_sreg_range(0X7D01747E,"T",0X1,3);
	split_sreg_range(0X7D017488,"T",0X1,3);
	split_sreg_range(0X7D017494,"T",0X1,3);
	split_sreg_range(0X7D01749A,"T",0X1,3);
	split_sreg_range(0X7D0174C0,"T",0X1,3);
	split_sreg_range(0X7D0174CE,"T",0X1,3);
	split_sreg_range(0X7D0174E4,"T",0X1,3);
	split_sreg_range(0X7D0174FC,"T",0X1,3);
	split_sreg_range(0X7D017520,"T",0X1,3);
	split_sreg_range(0X7D017522,"T",0X1,3);
	split_sreg_range(0X7D01752C,"T",0X1,3);
	split_sreg_range(0X7D017540,"T",0X1,3);
	split_sreg_range(0X7D01754E,"T",0X1,3);
	split_sreg_range(0X7D017564,"T",0X1,3);
	split_sreg_range(0X7D017568,"T",0X1,3);
	split_sreg_range(0X7D017574,"T",0X1,3);
	split_sreg_range(0X7D017584,"T",0X1,3);
	split_sreg_range(0X7D01759C,"T",0X1,3);
	split_sreg_range(0X7D0175AE,"T",0X1,3);
	split_sreg_range(0X7D0175C4,"T",0X1,3);
	split_sreg_range(0X7D0175C8,"T",0X1,3);
	split_sreg_range(0X7D0175D4,"T",0X1,3);
	split_sreg_range(0X7D0175D6,"T",0X1,3);
	split_sreg_range(0X7D0175E4,"T",0X1,3);
	split_sreg_range(0X7D0175F2,"T",0X1,3);
	split_sreg_range(0X7D017602,"T",0X1,3);
	split_sreg_range(0X7D017610,"T",0X1,3);
	split_sreg_range(0X7D017628,"T",0X1,3);
	split_sreg_range(0X7D017630,"T",0X1,3);
	split_sreg_range(0X7D017640,"T",0X1,3);
	split_sreg_range(0X7D017650,"T",0X1,3);
	split_sreg_range(0X7D01766A,"T",0X1,3);
	split_sreg_range(0X7D01767C,"T",0X1,3);
	split_sreg_range(0X7D017688,"T",0X1,3);
	split_sreg_range(0X7D017698,"T",0X1,3);
	split_sreg_range(0X7D0176B2,"T",0X1,3);
	split_sreg_range(0X7D0176C4,"T",0X1,3);
	split_sreg_range(0X7D0176D0,"T",0X1,3);
	split_sreg_range(0X7D0176E0,"T",0X1,3);
	split_sreg_range(0X7D0176FA,"T",0X1,3);
	split_sreg_range(0X7D01770C,"T",0X1,3);
	split_sreg_range(0X7D017718,"T",0X1,3);
	split_sreg_range(0X7D017730,"T",0X1,3);
	split_sreg_range(0X7D017738,"T",0X1,3);
	split_sreg_range(0X7D017748,"T",0X1,3);
	split_sreg_range(0X7D017760,"T",0X1,3);
	split_sreg_range(0X7D017768,"T",0X1,3);
	split_sreg_range(0X7D017778,"T",0X1,3);
	split_sreg_range(0X7D017788,"T",0X1,3);
	split_sreg_range(0X7D017798,"T",0X1,3);
	split_sreg_range(0X7D0177A0,"T",0X1,3);
	split_sreg_range(0X7D0177AC,"T",0X1,3);
	split_sreg_range(0X7D0177B6,"T",0X1,3);
	split_sreg_range(0X7D0177C8,"T",0X1,3);
	split_sreg_range(0X7D0177D4,"T",0X1,3);
	split_sreg_range(0X7D0177E4,"T",0X1,3);
	split_sreg_range(0X7D0177F6,"T",0X1,3);
	split_sreg_range(0X7D017802,"T",0X1,3);
	split_sreg_range(0X7D01780C,"T",0X1,3);
	split_sreg_range(0X7D01781E,"T",0X1,3);
	split_sreg_range(0X7D01782C,"T",0X1,3);
	split_sreg_range(0X7D01783C,"T",0X1,3);
	split_sreg_range(0X7D01784E,"T",0X1,3);
	split_sreg_range(0X7D01785A,"T",0X1,3);
	split_sreg_range(0X7D017864,"T",0X1,3);
	split_sreg_range(0X7D017876,"T",0X1,3);
	split_sreg_range(0X7D017884,"T",0X1,3);
	split_sreg_range(0X7D017894,"T",0X1,3);
	split_sreg_range(0X7D017898,"T",0X1,3);
	split_sreg_range(0X7D0178DC,"T",0X1,3);
	split_sreg_range(0X7D0178EE,"T",0X1,3);
	split_sreg_range(0X7D0178F4,"T",0X1,3);
	split_sreg_range(0X7D01790A,"T",0X1,3);
	split_sreg_range(0X7D017924,"T",0X1,3);
	split_sreg_range(0X7D017926,"T",0X1,3);
	split_sreg_range(0X7D017930,"T",0X1,3);
	split_sreg_range(0X7D017952,"T",0X1,3);
	split_sreg_range(0X7D017956,"T",0X1,3);
	split_sreg_range(0X7D017960,"T",0X1,3);
	split_sreg_range(0X7D01796E,"T",0X1,3);
	split_sreg_range(0X7D017972,"T",0X1,3);
	split_sreg_range(0X7D0179B6,"T",0X1,3);
	split_sreg_range(0X7D0179C8,"T",0X1,3);
	split_sreg_range(0X7D0179CE,"T",0X1,3);
	split_sreg_range(0X7D0179D4,"T",0X1,3);
	split_sreg_range(0X7D0179EA,"T",0X1,3);
	split_sreg_range(0X7D017A00,"T",0X1,3);
	split_sreg_range(0X7D017A0E,"T",0X1,3);
	split_sreg_range(0X7D017A10,"T",0X1,3);
	split_sreg_range(0X7D017A1C,"T",0X1,3);
	split_sreg_range(0X7D017A58,"T",0X1,3);
	split_sreg_range(0X7D017A66,"T",0X1,3);
	split_sreg_range(0X7D017A6C,"T",0X1,3);
	split_sreg_range(0X7D017A6E,"T",0X1,3);
	split_sreg_range(0X7D017A78,"T",0X1,3);
	split_sreg_range(0X7D017A9A,"T",0X1,3);
	split_sreg_range(0X7D017A9E,"T",0X1,3);
	split_sreg_range(0X7D017AA8,"T",0X1,3);
	split_sreg_range(0X7D017AB6,"T",0X1,3);
	split_sreg_range(0X7D017ABA,"T",0X1,3);
	split_sreg_range(0X7D017B14,"T",0X1,3);
	split_sreg_range(0X7D017B22,"T",0X1,3);
	split_sreg_range(0X7D017B36,"T",0X1,3);
	split_sreg_range(0X7D017B4A,"T",0X1,3);
	split_sreg_range(0X7D017B62,"T",0X1,3);
	split_sreg_range(0X7D017B70,"T",0X1,3);
	split_sreg_range(0X7D017B78,"T",0X1,3);
	split_sreg_range(0X7D017B90,"T",0X1,3);
	split_sreg_range(0X7D017B92,"T",0X1,3);
	split_sreg_range(0X7D017B9C,"T",0X1,3);
	split_sreg_range(0X7D017BAC,"T",0X1,3);
	split_sreg_range(0X7D017BB0,"T",0X1,3);
	split_sreg_range(0X7D017C16,"T",0X1,3);
	split_sreg_range(0X7D017C26,"T",0X1,3);
	split_sreg_range(0X7D017C2A,"T",0X1,3);
	split_sreg_range(0X7D017C3E,"T",0X1,3);
	split_sreg_range(0X7D017C48,"T",0X1,3);
	split_sreg_range(0X7D017C5E,"T",0X1,3);
	split_sreg_range(0X7D017C6C,"T",0X1,3);
	split_sreg_range(0X7D017C74,"T",0X1,3);
	split_sreg_range(0X7D017C80,"T",0X1,3);
	split_sreg_range(0X7D017C8E,"T",0X1,3);
	split_sreg_range(0X7D017C94,"T",0X1,3);
	split_sreg_range(0X7D017CD0,"T",0X1,3);
	split_sreg_range(0X7D017CDE,"T",0X1,3);
	split_sreg_range(0X7D017CFE,"T",0X1,3);
	split_sreg_range(0X7D017D04,"T",0X1,3);
	split_sreg_range(0X7D017D0C,"T",0X1,3);
	split_sreg_range(0X7D017D2E,"T",0X1,3);
	split_sreg_range(0X7D017D32,"T",0X1,3);
	split_sreg_range(0X7D017D3C,"T",0X1,3);
	split_sreg_range(0X7D017D4A,"T",0X1,3);
	split_sreg_range(0X7D017D50,"T",0X1,3);
	split_sreg_range(0X7D017D8C,"T",0X1,3);
	split_sreg_range(0X7D017D9A,"T",0X1,3);
	split_sreg_range(0X7D017DBA,"T",0X1,3);
	split_sreg_range(0X7D017DC0,"T",0X1,3);
	split_sreg_range(0X7D017DC8,"T",0X1,3);
	split_sreg_range(0X7D017DFE,"T",0X1,3);
	split_sreg_range(0X7D017E00,"T",0X1,3);
	split_sreg_range(0X7D017E08,"T",0X1,3);
	split_sreg_range(0X7D017E10,"T",0X1,3);
	split_sreg_range(0X7D017E36,"T",0X1,3);
	split_sreg_range(0X7D017E54,"T",0X1,3);
	split_sreg_range(0X7D017E66,"T",0X1,3);
	split_sreg_range(0X7D017E6A,"T",0X1,3);
	split_sreg_range(0X7D017ED2,"T",0X1,3);
	split_sreg_range(0X7D017EE4,"T",0X1,3);
	split_sreg_range(0X7D017F02,"T",0X1,3);
	split_sreg_range(0X7D017F0C,"T",0X1,3);
	split_sreg_range(0X7D017F1A,"T",0X1,3);
	split_sreg_range(0X7D017F44,"T",0X1,3);
	split_sreg_range(0X7D017F58,"T",0X1,3);
	split_sreg_range(0X7D017F7C,"T",0X1,3);
	split_sreg_range(0X7D017F7E,"T",0X1,3);
	split_sreg_range(0X7D017F88,"T",0X1,3);
	split_sreg_range(0X7D017FAC,"T",0X1,3);
	split_sreg_range(0X7D017FB4,"T",0X1,3);
	split_sreg_range(0X7D017FBC,"T",0X1,3);
	split_sreg_range(0X7D017FE2,"T",0X1,3);
	split_sreg_range(0X7D017FF8,"T",0X1,3);
	split_sreg_range(0X7D018000,"T",0X1,3);
	split_sreg_range(0X7D018012,"T",0X1,3);
	split_sreg_range(0X7D018016,"T",0X1,3);
	split_sreg_range(0X7D018082,"T",0X1,3);
	split_sreg_range(0X7D018092,"T",0X1,3);
	split_sreg_range(0X7D0180B0,"T",0X1,3);
	split_sreg_range(0X7D0180B2,"T",0X1,3);
	split_sreg_range(0X7D0180C8,"T",0X1,3);
	split_sreg_range(0X7D0180DE,"T",0X1,3);
	split_sreg_range(0X7D0180FA,"T",0X1,3);
	split_sreg_range(0X7D018116,"T",0X1,3);
	split_sreg_range(0X7D018118,"T",0X1,3);
	split_sreg_range(0X7D018124,"T",0X1,3);
	split_sreg_range(0X7D018136,"T",0X1,3);
	split_sreg_range(0X7D01813C,"T",0X1,3);
	split_sreg_range(0X7D018182,"T",0X1,3);
	split_sreg_range(0X7D01818C,"T",0X1,3);
	split_sreg_range(0X7D01820C,"T",0X1,3);
	split_sreg_range(0X7D018216,"T",0X1,3);
	split_sreg_range(0X7D01821A,"T",0X1,3);
	split_sreg_range(0X7D018224,"T",0X1,3);
	split_sreg_range(0X7D018238,"T",0X1,3);
	split_sreg_range(0X7D01824C,"T",0X1,3);
	split_sreg_range(0X7D018324,"T",0X1,3);
	split_sreg_range(0X7D01832C,"T",0X1,3);
	split_sreg_range(0X7D0183A0,"T",0X1,3);
	split_sreg_range(0X7D0183C4,"T",0X1,3);
	split_sreg_range(0X7D0183D0,"T",0X1,3);
	split_sreg_range(0X7D018412,"T",0X1,3);
	split_sreg_range(0X7D01842A,"T",0X1,3);
	split_sreg_range(0X7D01854A,"T",0X1,3);
	split_sreg_range(0X7D018558,"T",0X1,3);
	split_sreg_range(0X7D018560,"T",0X1,3);
	split_sreg_range(0X7D018590,"T",0X1,3);
	split_sreg_range(0X7D0185F0,"T",0X1,3);
	split_sreg_range(0X7D0185F6,"T",0X1,3);
	split_sreg_range(0X7D0185FA,"T",0X1,3);
	split_sreg_range(0X7D018622,"T",0X1,3);
	split_sreg_range(0X7D01862A,"T",0X1,3);
	split_sreg_range(0X7D01862E,"T",0X1,3);
	split_sreg_range(0X7D018648,"T",0X1,3);
	split_sreg_range(0X7D01864E,"T",0X1,3);
	split_sreg_range(0X7D018654,"T",0X1,3);
	split_sreg_range(0X7D018662,"T",0X1,3);
	split_sreg_range(0X7D018676,"T",0X1,3);
	split_sreg_range(0X7D01869E,"T",0X1,3);
	split_sreg_range(0X7D0186B0,"T",0X1,3);
	split_sreg_range(0X7D0186B4,"T",0X1,3);
	split_sreg_range(0X7D0186B6,"T",0X1,3);
	split_sreg_range(0X7D0186C0,"T",0X1,3);
	split_sreg_range(0X7D0186D2,"T",0X1,3);
	split_sreg_range(0X7D0186D6,"T",0X1,3);
	split_sreg_range(0X7D01872E,"T",0X1,3);
	split_sreg_range(0X7D018810,"T",0X1,3);
	split_sreg_range(0X7D01881A,"T",0X1,3);
	split_sreg_range(0X7D018824,"T",0X1,3);
	split_sreg_range(0X7D018828,"T",0X1,3);
	split_sreg_range(0X7D01882A,"T",0X1,3);
	split_sreg_range(0X7D018834,"T",0X1,3);
	split_sreg_range(0X7D018892,"T",0X1,3);
	split_sreg_range(0X7D018896,"T",0X1,3);
	split_sreg_range(0X7D018962,"T",0X1,3);
	split_sreg_range(0X7D018972,"T",0X1,3);
	split_sreg_range(0X7D018974,"T",0X1,3);
	split_sreg_range(0X7D018980,"T",0X1,3);
	split_sreg_range(0X7D0189B2,"T",0X1,3);
	split_sreg_range(0X7D0189CC,"T",0X1,3);
	split_sreg_range(0X7D0189D8,"T",0X1,3);
	split_sreg_range(0X7D018A08,"T",0X1,3);
	split_sreg_range(0X7D018A2C,"T",0X1,3);
	split_sreg_range(0X7D018A40,"T",0X1,3);
	split_sreg_range(0X7D018A4C,"T",0X1,3);
	split_sreg_range(0X7D018A50,"T",0X1,3);
	split_sreg_range(0X7D018A54,"T",0X1,3);
	split_sreg_range(0X7D018A56,"T",0X1,3);
	split_sreg_range(0X7D018A60,"T",0X1,3);
	split_sreg_range(0X7D018AA4,"T",0X1,3);
	split_sreg_range(0X7D018ACA,"T",0X1,3);
	split_sreg_range(0X7D018AD6,"T",0X1,3);
	split_sreg_range(0X7D018AFE,"T",0X1,3);
	split_sreg_range(0X7D018B16,"T",0X1,3);
	split_sreg_range(0X7D018B2C,"T",0X1,3);
	split_sreg_range(0X7D018B2E,"T",0X1,3);
	split_sreg_range(0X7D018B38,"T",0X1,3);
	split_sreg_range(0X7D018B4C,"T",0X1,3);
	split_sreg_range(0X7D018B50,"T",0X1,3);
	split_sreg_range(0X7D018B6A,"T",0X1,3);
	split_sreg_range(0X7D018B72,"T",0X1,3);
	split_sreg_range(0X7D018BC4,"T",0X1,3);
	split_sreg_range(0X7D018BCC,"T",0X1,3);
	split_sreg_range(0X7D018BD2,"T",0X1,3);
	split_sreg_range(0X7D018BEE,"T",0X1,3);
	split_sreg_range(0X7D018BF8,"T",0X1,3);
	split_sreg_range(0X7D018C02,"T",0X1,3);
	split_sreg_range(0X7D018C34,"T",0X1,3);
	split_sreg_range(0X7D018C38,"T",0X1,3);
	split_sreg_range(0X7D018C3A,"T",0X1,3);
	split_sreg_range(0X7D018C4A,"T",0X1,3);
	split_sreg_range(0X7D018C4E,"T",0X1,3);
	split_sreg_range(0X7D018CB6,"T",0X1,3);
	split_sreg_range(0X7D018CC0,"T",0X1,3);
	split_sreg_range(0X7D018D36,"T",0X1,3);
	split_sreg_range(0X7D018D80,"T",0X1,3);
	split_sreg_range(0X7D018EBE,"T",0X1,3);
	split_sreg_range(0X7D018EDE,"T",0X1,3);
	split_sreg_range(0X7D018EF6,"T",0X1,3);
	split_sreg_range(0X7D018EFA,"T",0X1,3);
	split_sreg_range(0X7D018EFC,"T",0X1,3);
	split_sreg_range(0X7D018F08,"T",0X1,3);
	split_sreg_range(0X7D018F3E,"T",0X1,3);
	split_sreg_range(0X7D018F60,"T",0X1,3);
	split_sreg_range(0X7D018F7C,"T",0X1,3);
	split_sreg_range(0X7D018FA4,"T",0X1,3);
	split_sreg_range(0X7D019012,"T",0X1,3);
	split_sreg_range(0X7D019038,"T",0X1,3);
	split_sreg_range(0X7D01903E,"T",0X1,3);
	split_sreg_range(0X7D019044,"T",0X1,3);
	split_sreg_range(0X7D019048,"T",0X1,3);
	split_sreg_range(0X7D019060,"T",0X1,3);
	split_sreg_range(0X7D019064,"T",0X1,3);
	split_sreg_range(0X7D019066,"T",0X1,3);
	split_sreg_range(0X7D019074,"T",0X1,3);
	split_sreg_range(0X7D0190AA,"T",0X1,3);
	split_sreg_range(0X7D0190CC,"T",0X1,3);
	split_sreg_range(0X7D0190E0,"T",0X1,3);
	split_sreg_range(0X7D019114,"T",0X1,3);
	split_sreg_range(0X7D019122,"T",0X1,3);
	split_sreg_range(0X7D019156,"T",0X1,3);
	split_sreg_range(0X7D019226,"T",0X1,3);
	split_sreg_range(0X7D01922E,"T",0X1,3);
	split_sreg_range(0X7D019234,"T",0X1,3);
	split_sreg_range(0X7D019238,"T",0X1,3);
	split_sreg_range(0X7D019242,"T",0X1,3);
	split_sreg_range(0X7D019246,"T",0X1,3);
	split_sreg_range(0X7D01924A,"T",0X1,3);
	split_sreg_range(0X7D01924E,"T",0X1,3);
	split_sreg_range(0X7D019250,"T",0X1,3);
	split_sreg_range(0X7D019260,"T",0X1,3);
	split_sreg_range(0X7D019272,"T",0X1,3);
	split_sreg_range(0X7D019276,"T",0X1,3);
	split_sreg_range(0X7D01929C,"T",0X1,3);
	split_sreg_range(0X7D01929E,"T",0X1,3);
	split_sreg_range(0X7D0192C8,"T",0X1,3);
	split_sreg_range(0X7D0192D0,"T",0X1,3);
	split_sreg_range(0X7D0192D4,"T",0X1,3);
	split_sreg_range(0X7D0192D8,"T",0X1,3);
	split_sreg_range(0X7D019306,"T",0X1,3);
	split_sreg_range(0X7D019324,"T",0X1,3);
	split_sreg_range(0X7D01936A,"T",0X1,3);
	split_sreg_range(0X7D01936C,"T",0X1,3);
	split_sreg_range(0X7D01937A,"T",0X1,3);
	split_sreg_range(0X7D01937E,"T",0X1,3);
	split_sreg_range(0X7D019390,"T",0X1,3);
	split_sreg_range(0X7D01939C,"T",0X1,3);
	split_sreg_range(0X7D0193A0,"T",0X1,3);
	split_sreg_range(0X7D0193A2,"T",0X1,3);
	split_sreg_range(0X7D0193B4,"T",0X1,3);
	split_sreg_range(0X7D0193B8,"T",0X1,3);
	split_sreg_range(0X7D0193BE,"T",0X1,3);
	split_sreg_range(0X7D0193C6,"T",0X1,3);
	split_sreg_range(0X7D0193D4,"T",0X1,3);
	split_sreg_range(0X7D0193E6,"T",0X1,3);
	split_sreg_range(0X7D0193F4,"T",0X1,3);
	split_sreg_range(0X7D0193FC,"T",0X1,3);
	split_sreg_range(0X7D01941E,"T",0X1,3);
	split_sreg_range(0X7D019422,"T",0X1,3);
	split_sreg_range(0X7D01942C,"T",0X1,3);
	split_sreg_range(0X7D01952A,"T",0X1,3);
	split_sreg_range(0X7D01954A,"T",0X1,3);
	split_sreg_range(0X7D01955C,"T",0X1,3);
	split_sreg_range(0X7D019560,"T",0X1,3);
	split_sreg_range(0X7D01956E,"T",0X1,3);
	split_sreg_range(0X7D019580,"T",0X1,3);
	split_sreg_range(0X7D019584,"T",0X1,3);
	split_sreg_range(0X7D01958E,"T",0X1,3);
	split_sreg_range(0X7D019592,"T",0X1,3);
	split_sreg_range(0X7D019594,"T",0X1,3);
	split_sreg_range(0X7D0195A4,"T",0X1,3);
	split_sreg_range(0X7D0195B0,"T",0X1,3);
	split_sreg_range(0X7D0195C2,"T",0X1,3);
	split_sreg_range(0X7D0195D2,"T",0X1,3);
	split_sreg_range(0X7D0195DC,"T",0X1,3);
	split_sreg_range(0X7D0195EC,"T",0X1,3);
	split_sreg_range(0X7D0195F0,"T",0X1,3);
	split_sreg_range(0X7D01968E,"T",0X1,3);
	split_sreg_range(0X7D0196B2,"T",0X1,3);
	split_sreg_range(0X7D0196BA,"T",0X1,3);
	split_sreg_range(0X7D0196C4,"T",0X1,3);
	split_sreg_range(0X7D0196C8,"T",0X1,3);
	split_sreg_range(0X7D0196CA,"T",0X1,3);
	split_sreg_range(0X7D0196D4,"T",0X1,3);
	split_sreg_range(0X7D01975E,"T",0X1,3);
	split_sreg_range(0X7D019794,"T",0X1,3);
	split_sreg_range(0X7D0197FC,"T",0X1,3);
	split_sreg_range(0X7D019802,"T",0X1,3);
	split_sreg_range(0X7D019810,"T",0X1,3);
	split_sreg_range(0X7D019812,"T",0X1,3);
	split_sreg_range(0X7D01981C,"T",0X1,3);
	split_sreg_range(0X7D0198E2,"T",0X1,3);
	split_sreg_range(0X7D0198E6,"T",0X1,3);
	split_sreg_range(0X7D019A38,"T",0X1,3);
	split_sreg_range(0X7D019A4E,"T",0X1,3);
	split_sreg_range(0X7D019A60,"T",0X1,3);
	split_sreg_range(0X7D019A74,"T",0X1,3);
	split_sreg_range(0X7D019A76,"T",0X1,3);
	split_sreg_range(0X7D019AA8,"T",0X1,3);
	split_sreg_range(0X7D019AAC,"T",0X1,3);
	split_sreg_range(0X7D019AB0,"T",0X1,3);
	split_sreg_range(0X7D019AB2,"T",0X1,3);
	split_sreg_range(0X7D019ABC,"T",0X1,3);
	split_sreg_range(0X7D019AC4,"T",0X1,3);
	split_sreg_range(0X7D019AD0,"T",0X1,3);
	split_sreg_range(0X7D019ADC,"T",0X1,3);
	split_sreg_range(0X7D019AE4,"T",0X1,3);
	split_sreg_range(0X7D019AF4,"T",0X1,3);
	split_sreg_range(0X7D019B00,"T",0X1,3);
	split_sreg_range(0X7D019B1E,"T",0X1,3);
	split_sreg_range(0X7D019B28,"T",0X1,3);
	split_sreg_range(0X7D019B52,"T",0X1,3);
	split_sreg_range(0X7D019B5C,"T",0X1,3);
	split_sreg_range(0X7D019B90,"T",0X1,3);
	split_sreg_range(0X7D019B94,"T",0X1,3);
	split_sreg_range(0X7D019B9C,"T",0X1,3);
	split_sreg_range(0X7D019BC6,"T",0X1,3);
	split_sreg_range(0X7D019BD0,"T",0X1,3);
	split_sreg_range(0X7D019C22,"T",0X1,3);
	split_sreg_range(0X7D019C24,"T",0X1,3);
	split_sreg_range(0X7D019C2C,"T",0X1,3);
	split_sreg_range(0X7D019C48,"T",0X1,3);
	split_sreg_range(0X7D019C50,"T",0X1,3);
	split_sreg_range(0X7D019C6C,"T",0X1,3);
	split_sreg_range(0X7D019C74,"T",0X1,3);
	split_sreg_range(0X7D019C94,"T",0X1,3);
	split_sreg_range(0X7D019C96,"T",0X1,3);
	split_sreg_range(0X7D019CA0,"T",0X1,3);
	split_sreg_range(0X7D019CBA,"T",0X1,3);
	split_sreg_range(0X7D019CC4,"T",0X1,3);
	split_sreg_range(0X7D019CE0,"T",0X1,3);
	split_sreg_range(0X7D019CE8,"T",0X1,3);
	split_sreg_range(0X7D019D02,"T",0X1,3);
	split_sreg_range(0X7D019D0C,"T",0X1,3);
	split_sreg_range(0X7D019D26,"T",0X1,3);
	split_sreg_range(0X7D019D30,"T",0X1,3);
	split_sreg_range(0X7D019D4C,"T",0X1,3);
	split_sreg_range(0X7D019D54,"T",0X1,3);
	split_sreg_range(0X7D019D6E,"T",0X1,3);
	split_sreg_range(0X7D019D78,"T",0X1,3);
	split_sreg_range(0X7D019DBC,"T",0X1,3);
	split_sreg_range(0X7D019DC0,"T",0X1,3);
	split_sreg_range(0X7D019DC2,"T",0X1,3);
	split_sreg_range(0X7D019DCC,"T",0X1,3);
	split_sreg_range(0X7D019DE8,"T",0X1,3);
	split_sreg_range(0X7D019DEC,"T",0X1,3);
	split_sreg_range(0X7D019DF4,"T",0X1,3);
	split_sreg_range(0X7D019E10,"T",0X1,3);
	split_sreg_range(0X7D019E14,"T",0X1,3);
	split_sreg_range(0X7D019E1C,"T",0X1,3);
	split_sreg_range(0X7D019E3E,"T",0X1,3);
	split_sreg_range(0X7D019E42,"T",0X1,3);
	split_sreg_range(0X7D019E4C,"T",0X1,3);
	split_sreg_range(0X7D019E50,"T",0X1,3);
	split_sreg_range(0X7D019E5E,"T",0X1,3);
	split_sreg_range(0X7D019E9C,"T",0X1,3);
	split_sreg_range(0X7D019EA2,"T",0X1,3);
	split_sreg_range(0X7D019EB0,"T",0X1,3);
	split_sreg_range(0X7D019EE6,"T",0X1,3);
	split_sreg_range(0X7D019F14,"T",0X1,3);
	split_sreg_range(0X7D019F18,"T",0X1,3);
	split_sreg_range(0X7D019F1A,"T",0X1,3);
	split_sreg_range(0X7D019F28,"T",0X1,3);
	split_sreg_range(0X7D019F34,"T",0X1,3);
	split_sreg_range(0X7D019F5E,"T",0X1,3);
	split_sreg_range(0X7D019F6E,"T",0X1,3);
	split_sreg_range(0X7D019F7C,"T",0X1,3);
	split_sreg_range(0X7D019F7E,"T",0X1,3);
	split_sreg_range(0X7D019F92,"T",0X1,3);
	split_sreg_range(0X7D019FDC,"T",0X1,3);
	split_sreg_range(0X7D01A014,"T",0X1,3);
	split_sreg_range(0X7D01A04E,"T",0X1,3);
	split_sreg_range(0X7D01A05A,"T",0X1,3);
	split_sreg_range(0X7D01A060,"T",0X1,3);
	split_sreg_range(0X7D01A062,"T",0X1,3);
	split_sreg_range(0X7D01A06C,"T",0X1,3);
	split_sreg_range(0X7D01A0B8,"T",0X1,3);
	split_sreg_range(0X7D01A0D4,"T",0X1,3);
	split_sreg_range(0X7D01A110,"T",0X1,3);
	split_sreg_range(0X7D01A126,"T",0X1,3);
	split_sreg_range(0X7D01A130,"T",0X1,3);
	split_sreg_range(0X7D01A134,"T",0X1,3);
	split_sreg_range(0X7D01A138,"T",0X1,3);
	split_sreg_range(0X7D01A13A,"T",0X1,3);
	split_sreg_range(0X7D01A148,"T",0X1,3);
	split_sreg_range(0X7D01A1AC,"T",0X1,3);
	split_sreg_range(0X7D01A1AE,"T",0X1,3);
	split_sreg_range(0X7D01A1BA,"T",0X1,3);
	split_sreg_range(0X7D01A1C0,"T",0X1,3);
	split_sreg_range(0X7D01A1C2,"T",0X1,3);
	split_sreg_range(0X7D01A1FA,"T",0X1,3);
	split_sreg_range(0X7D01A204,"T",0X1,3);
	split_sreg_range(0X7D01A220,"T",0X1,3);
	split_sreg_range(0X7D01A244,"T",0X1,3);
	split_sreg_range(0X7D01A26C,"T",0X1,3);
	split_sreg_range(0X7D01A26E,"T",0X1,3);
	split_sreg_range(0X7D01A278,"T",0X1,3);
	split_sreg_range(0X7D01A28A,"T",0X1,3);
	split_sreg_range(0X7D01A29C,"T",0X1,3);
	split_sreg_range(0X7D01A2CA,"T",0X1,3);
	split_sreg_range(0X7D01A2DE,"T",0X1,3);
	split_sreg_range(0X7D01A2F4,"T",0X1,3);
	split_sreg_range(0X7D01A310,"T",0X1,3);
	split_sreg_range(0X7D01A31E,"T",0X1,3);
	split_sreg_range(0X7D01A332,"T",0X1,3);
	split_sreg_range(0X7D01A334,"T",0X1,3);
	split_sreg_range(0X7D01A340,"T",0X1,3);
	split_sreg_range(0X7D01A35E,"T",0X1,3);
	split_sreg_range(0X7D01A37E,"T",0X1,3);
	split_sreg_range(0X7D01A38E,"T",0X1,3);
	split_sreg_range(0X7D01A392,"T",0X1,3);
	split_sreg_range(0X7D01A394,"T",0X1,3);
	split_sreg_range(0X7D01A3A0,"T",0X1,3);
	split_sreg_range(0X7D01A3AE,"T",0X1,3);
	split_sreg_range(0X7D01A3B8,"T",0X1,3);
	split_sreg_range(0X7D01A3F2,"T",0X1,3);
	split_sreg_range(0X7D01A4F2,"T",0X1,3);
	split_sreg_range(0X7D01A558,"T",0X1,3);
	split_sreg_range(0X7D01A562,"T",0X1,3);
	split_sreg_range(0X7D01A56E,"T",0X1,3);
	split_sreg_range(0X7D01A570,"T",0X1,3);
	split_sreg_range(0X7D01A57C,"T",0X1,3);
	split_sreg_range(0X7D01A58A,"T",0X1,3);
	split_sreg_range(0X7D01A590,"T",0X1,3);
	split_sreg_range(0X7D01A5A0,"T",0X1,3);
	split_sreg_range(0X7D01A5B8,"T",0X1,3);
	split_sreg_range(0X7D01A5C0,"T",0X1,3);
	split_sreg_range(0X7D01A5C8,"T",0X1,3);
	split_sreg_range(0X7D01A5D2,"T",0X1,3);
	split_sreg_range(0X7D01A5DA,"T",0X1,3);
	split_sreg_range(0X7D01A5E8,"T",0X1,3);
	split_sreg_range(0X7D01A5F6,"T",0X1,3);
	split_sreg_range(0X7D01A5FC,"T",0X1,3);
	split_sreg_range(0X7D01A60A,"T",0X1,3);
	split_sreg_range(0X7D01A61E,"T",0X1,3);
	split_sreg_range(0X7D01A63E,"T",0X1,3);
	split_sreg_range(0X7D01A642,"T",0X1,3);
	split_sreg_range(0X7D01A700,"T",0X1,3);
	split_sreg_range(0X7D01A70C,"T",0X1,3);
	split_sreg_range(0X7D01A722,"T",0X1,3);
	split_sreg_range(0X7D01A738,"T",0X1,3);
	split_sreg_range(0X7D01A740,"T",0X1,3);
	split_sreg_range(0X7D01A748,"T",0X1,3);
	split_sreg_range(0X7D01A752,"T",0X1,3);
	split_sreg_range(0X7D01A75A,"T",0X1,3);
	split_sreg_range(0X7D01A762,"T",0X1,3);
	split_sreg_range(0X7D01A76C,"T",0X1,3);
	split_sreg_range(0X7D01A772,"T",0X1,3);
	split_sreg_range(0X7D01A784,"T",0X1,3);
	split_sreg_range(0X7D01A794,"T",0X1,3);
	split_sreg_range(0X7D01A798,"T",0X1,3);
	split_sreg_range(0X7D01A7AA,"T",0X1,3);
	split_sreg_range(0X7D01A7BC,"T",0X1,3);
	split_sreg_range(0X7D01A844,"T",0X1,3);
	split_sreg_range(0X7D01A84A,"T",0X1,3);
	split_sreg_range(0X7D01A852,"T",0X1,3);
	split_sreg_range(0X7D01A860,"T",0X1,3);
	split_sreg_range(0X7D01A8A4,"T",0X1,3);
	split_sreg_range(0X7D01A8BC,"T",0X1,3);
	split_sreg_range(0X7D01A8D2,"T",0X1,3);
	split_sreg_range(0X7D01A8EA,"T",0X1,3);
	split_sreg_range(0X7D01A8FC,"T",0X1,3);
	split_sreg_range(0X7D01A920,"T",0X1,3);
	split_sreg_range(0X7D01A928,"T",0X1,3);
	split_sreg_range(0X7D01A932,"T",0X1,3);
	split_sreg_range(0X7D01A93A,"T",0X1,3);
	split_sreg_range(0X7D01A94A,"T",0X1,3);
	split_sreg_range(0X7D01A94E,"T",0X1,3);
	split_sreg_range(0X7D01A976,"T",0X1,3);
	split_sreg_range(0X7D01A97A,"T",0X1,3);
	split_sreg_range(0X7D01A990,"T",0X1,3);
	split_sreg_range(0X7D01A994,"T",0X1,3);
	split_sreg_range(0X7D01A998,"T",0X1,3);
	split_sreg_range(0X7D01A99C,"T",0X1,3);
	split_sreg_range(0X7D01A99E,"T",0X1,3);
	split_sreg_range(0X7D01A9A8,"T",0X1,3);
	split_sreg_range(0X7D01AA3A,"T",0X1,3);
	split_sreg_range(0X7D01AA40,"T",0X1,3);
	split_sreg_range(0X7D01AA48,"T",0X1,3);
	split_sreg_range(0X7D01AA56,"T",0X1,3);
	split_sreg_range(0X7D01AA6A,"T",0X1,3);
	split_sreg_range(0X7D01AAC0,"T",0X1,3);
	split_sreg_range(0X7D01AAC6,"T",0X1,3);
	split_sreg_range(0X7D01AAE4,"T",0X1,3);
	split_sreg_range(0X7D01AAF4,"T",0X1,3);
	split_sreg_range(0X7D01AB0A,"T",0X1,3);
	split_sreg_range(0X7D01AB22,"T",0X1,3);
	split_sreg_range(0X7D01AB30,"T",0X1,3);
	split_sreg_range(0X7D01AB60,"T",0X1,3);
	split_sreg_range(0X7D01AB62,"T",0X1,3);
	split_sreg_range(0X7D01AB7C,"T",0X1,3);
	split_sreg_range(0X7D01AB80,"T",0X1,3);
	split_sreg_range(0X7D01AB84,"T",0X1,3);
	split_sreg_range(0X7D01AB86,"T",0X1,3);
	split_sreg_range(0X7D01AB94,"T",0X1,3);
	split_sreg_range(0X7D01AC20,"T",0X1,3);
	split_sreg_range(0X7D01AC26,"T",0X1,3);
	split_sreg_range(0X7D01AC2E,"T",0X1,3);
	split_sreg_range(0X7D01AC38,"T",0X1,3);
	split_sreg_range(0X7D01AC48,"T",0X1,3);
	split_sreg_range(0X7D01AC54,"T",0X1,3);
	split_sreg_range(0X7D01AC5A,"T",0X1,3);
	split_sreg_range(0X7D01ACB2,"T",0X1,3);
	split_sreg_range(0X7D01ACCA,"T",0X1,3);
	split_sreg_range(0X7D01ACE6,"T",0X1,3);
	split_sreg_range(0X7D01ACF8,"T",0X1,3);
	split_sreg_range(0X7D01AD74,"T",0X1,3);
	split_sreg_range(0X7D01AD90,"T",0X1,3);
	split_sreg_range(0X7D01AD94,"T",0X1,3);
	split_sreg_range(0X7D01AD98,"T",0X1,3);
	split_sreg_range(0X7D01AD9A,"T",0X1,3);
	split_sreg_range(0X7D01ADA4,"T",0X1,3);
	split_sreg_range(0X7D01AE42,"T",0X1,3);
	split_sreg_range(0X7D01AE48,"T",0X1,3);
	split_sreg_range(0X7D01AE52,"T",0X1,3);
	split_sreg_range(0X7D01AE5E,"T",0X1,3);
	split_sreg_range(0X7D01AE6E,"T",0X1,3);
	split_sreg_range(0X7D01AE74,"T",0X1,3);
	split_sreg_range(0X7D01AE8C,"T",0X1,3);
	split_sreg_range(0X7D01AEA4,"T",0X1,3);
	split_sreg_range(0X7D01AF4C,"T",0X1,3);
	split_sreg_range(0X7D01AF5E,"T",0X1,3);
	split_sreg_range(0X7D01AF6C,"T",0X1,3);
	split_sreg_range(0X7D01AFA4,"T",0X1,3);
	split_sreg_range(0X7D01AFC0,"T",0X1,3);
	split_sreg_range(0X7D01AFC4,"T",0X1,3);
	split_sreg_range(0X7D01AFC8,"T",0X1,3);
	split_sreg_range(0X7D01AFCA,"T",0X1,3);
	split_sreg_range(0X7D01AFD8,"T",0X1,3);
	split_sreg_range(0X7D01AFFA,"T",0X1,3);
	split_sreg_range(0X7D01B010,"T",0X1,3);
	split_sreg_range(0X7D01B01C,"T",0X1,3);
	split_sreg_range(0X7D01B02C,"T",0X1,3);
	split_sreg_range(0X7D01B05C,"T",0X1,3);
	split_sreg_range(0X7D01B05E,"T",0X1,3);
	split_sreg_range(0X7D01B068,"T",0X1,3);
	split_sreg_range(0X7D01B086,"T",0X1,3);
	split_sreg_range(0X7D01B08A,"T",0X1,3);
	split_sreg_range(0X7D01B092,"T",0X1,3);
	split_sreg_range(0X7D01B0B0,"T",0X1,3);
	split_sreg_range(0X7D01B0B4,"T",0X1,3);
	split_sreg_range(0X7D01B0B6,"T",0X1,3);
	split_sreg_range(0X7D01B0C0,"T",0X1,3);
	split_sreg_range(0X7D01B190,"T",0X1,3);
	split_sreg_range(0X7D01B19E,"T",0X1,3);
	split_sreg_range(0X7D01B1A2,"T",0X1,3);
	split_sreg_range(0X7D01B1A4,"T",0X1,3);
	split_sreg_range(0X7D01B1B0,"T",0X1,3);
	split_sreg_range(0X7D01B208,"T",0X1,3);
	split_sreg_range(0X7D01B214,"T",0X1,3);
	split_sreg_range(0X7D01B216,"T",0X1,3);
	split_sreg_range(0X7D01B222,"T",0X1,3);
	split_sreg_range(0X7D01B232,"T",0X1,3);
	split_sreg_range(0X7D01B246,"T",0X1,3);
	split_sreg_range(0X7D01B316,"T",0X1,3);
	split_sreg_range(0X7D01B33C,"T",0X1,3);
	split_sreg_range(0X7D01B386,"T",0X1,3);
	split_sreg_range(0X7D01B3B0,"T",0X1,3);
	split_sreg_range(0X7D01B3EE,"T",0X1,3);
	split_sreg_range(0X7D01B3F8,"T",0X1,3);
	split_sreg_range(0X7D01B438,"T",0X1,3);
	split_sreg_range(0X7D01B43A,"T",0X1,3);
	split_sreg_range(0X7D01B448,"T",0X1,3);
	split_sreg_range(0X7D01B470,"T",0X1,3);
	split_sreg_range(0X7D01B472,"T",0X1,3);
	split_sreg_range(0X7D01B47C,"T",0X1,3);
	split_sreg_range(0X7D01B4DE,"T",0X1,3);
	split_sreg_range(0X7D01B52E,"T",0X1,3);
	split_sreg_range(0X7D01B53A,"T",0X1,3);
	split_sreg_range(0X7D01B54A,"T",0X1,3);
	split_sreg_range(0X7D01B54E,"T",0X1,3);
	split_sreg_range(0X7D01B690,"T",0X1,3);
	split_sreg_range(0X7D01B696,"T",0X1,3);
	split_sreg_range(0X7D01B6EE,"T",0X1,3);
	split_sreg_range(0X7D01B70E,"T",0X1,3);
	split_sreg_range(0X7D01B738,"T",0X1,3);
	split_sreg_range(0X7D01B73C,"T",0X1,3);
	split_sreg_range(0X7D01B744,"T",0X1,3);
	split_sreg_range(0X7D01B77C,"T",0X1,3);
	split_sreg_range(0X7D01B782,"T",0X1,3);
	split_sreg_range(0X7D01B7C6,"T",0X1,3);
	split_sreg_range(0X7D01B7E8,"T",0X1,3);
	split_sreg_range(0X7D01B7F4,"T",0X1,3);
	split_sreg_range(0X7D01B800,"T",0X1,3);
	split_sreg_range(0X7D01B80E,"T",0X1,3);
	split_sreg_range(0X7D01B810,"T",0X1,3);
	split_sreg_range(0X7D01B824,"T",0X1,3);
	split_sreg_range(0X7D01B826,"T",0X1,3);
	split_sreg_range(0X7D01B83A,"T",0X1,3);
	split_sreg_range(0X7D01B83E,"T",0X1,3);
	split_sreg_range(0X7D01B840,"T",0X1,3);
	split_sreg_range(0X7D01B84C,"T",0X1,3);
	split_sreg_range(0X7D01B8D6,"T",0X1,3);
	split_sreg_range(0X7D01B8F4,"T",0X1,3);
	split_sreg_range(0X7D01B904,"T",0X1,3);
	split_sreg_range(0X7D01B942,"T",0X1,3);
	split_sreg_range(0X7D01B956,"T",0X1,3);
	split_sreg_range(0X7D01B9F0,"T",0X1,3);
	split_sreg_range(0X7D01BA98,"T",0X1,3);
	split_sreg_range(0X7D01BAAE,"T",0X1,3);
	split_sreg_range(0X7D01BAC2,"T",0X1,3);
	split_sreg_range(0X7D01BACE,"T",0X1,3);
	split_sreg_range(0X7D01BAE8,"T",0X1,3);
	split_sreg_range(0X7D01BAFC,"T",0X1,3);
	split_sreg_range(0X7D01BB08,"T",0X1,3);
	split_sreg_range(0X7D01BB1E,"T",0X1,3);
	split_sreg_range(0X7D01BB32,"T",0X1,3);
	split_sreg_range(0X7D01BB3E,"T",0X1,3);
	split_sreg_range(0X7D01BB54,"T",0X1,3);
	split_sreg_range(0X7D01BB68,"T",0X1,3);
	split_sreg_range(0X7D01BB74,"T",0X1,3);
	split_sreg_range(0X7D01BB8A,"T",0X1,3);
	split_sreg_range(0X7D01BB9E,"T",0X1,3);
	split_sreg_range(0X7D01BBAA,"T",0X1,3);
	split_sreg_range(0X7D01BBB2,"T",0X1,3);
	split_sreg_range(0X7D01BBC6,"T",0X1,3);
	split_sreg_range(0X7D01BBEC,"T",0X1,3);
	split_sreg_range(0X7D01BCEE,"T",0X1,3);
	split_sreg_range(0X7D01BD04,"T",0X1,3);
	split_sreg_range(0X7D01BD18,"T",0X1,3);
	split_sreg_range(0X7D01BD24,"T",0X1,3);
	split_sreg_range(0X7D01BD38,"T",0X1,3);
	split_sreg_range(0X7D01BD50,"T",0X1,3);
	split_sreg_range(0X7D01BD5C,"T",0X1,3);
	split_sreg_range(0X7D01BD70,"T",0X1,3);
	split_sreg_range(0X7D01BD82,"T",0X1,3);
	split_sreg_range(0X7D01BDB0,"T",0X1,3);
	split_sreg_range(0X7D01BDBE,"T",0X1,3);
	split_sreg_range(0X7D01BDD0,"T",0X1,3);
	split_sreg_range(0X7D01BDDC,"T",0X1,3);
	split_sreg_range(0X7D01BDEC,"T",0X1,3);
	split_sreg_range(0X7D01BDFC,"T",0X1,3);
	split_sreg_range(0X7D01BE24,"T",0X1,3);
	split_sreg_range(0X7D01BE38,"T",0X1,3);
	split_sreg_range(0X7D01BE3A,"T",0X1,3);
	split_sreg_range(0X7D01BE44,"T",0X1,3);
	split_sreg_range(0X7D01BE7E,"T",0X1,3);
	split_sreg_range(0X7D01BE94,"T",0X1,3);
	split_sreg_range(0X7D01BECC,"T",0X1,3);
	split_sreg_range(0X7D01BF2A,"T",0X1,3);
	split_sreg_range(0X7D01BF42,"T",0X1,3);
	split_sreg_range(0X7D01BF58,"T",0X1,3);
	split_sreg_range(0X7D01BF66,"T",0X1,3);
	split_sreg_range(0X7D01BF7E,"T",0X1,3);
	split_sreg_range(0X7D01BF94,"T",0X1,3);
	split_sreg_range(0X7D01BFA2,"T",0X1,3);
	split_sreg_range(0X7D01BFBA,"T",0X1,3);
	split_sreg_range(0X7D01BFD0,"T",0X1,3);
	split_sreg_range(0X7D01C006,"T",0X1,3);
	split_sreg_range(0X7D01C01E,"T",0X1,3);
	split_sreg_range(0X7D01C034,"T",0X1,3);
	split_sreg_range(0X7D01C042,"T",0X1,3);
	split_sreg_range(0X7D01C05A,"T",0X1,3);
	split_sreg_range(0X7D01C070,"T",0X1,3);
	split_sreg_range(0X7D01C07E,"T",0X1,3);
	split_sreg_range(0X7D01C094,"T",0X1,3);
	split_sreg_range(0X7D01C0B0,"T",0X1,3);
	split_sreg_range(0X7D01C0FA,"T",0X1,3);
	split_sreg_range(0X7D01C110,"T",0X1,3);
	split_sreg_range(0X7D01C134,"T",0X1,3);
	split_sreg_range(0X7D01C1A0,"T",0X1,3);
	split_sreg_range(0X7D01C1B4,"T",0X1,3);
	split_sreg_range(0X7D01C1C8,"T",0X1,3);
	split_sreg_range(0X7D01C1D4,"T",0X1,3);
	split_sreg_range(0X7D01C1EA,"T",0X1,3);
	split_sreg_range(0X7D01C1FC,"T",0X1,3);
	split_sreg_range(0X7D01C20A,"T",0X1,3);
	split_sreg_range(0X7D01C220,"T",0X1,3);
	split_sreg_range(0X7D01C232,"T",0X1,3);
	split_sreg_range(0X7D01C272,"T",0X1,3);
	split_sreg_range(0X7D01C284,"T",0X1,3);
	split_sreg_range(0X7D01C286,"T",0X1,3);
	split_sreg_range(0X7D01C290,"T",0X1,3);
	split_sreg_range(0X7D01C296,"T",0X1,3);
	split_sreg_range(0X7D01C2A8,"T",0X1,3);
	split_sreg_range(0X7D01C2B8,"T",0X1,3);
	split_sreg_range(0X7D01C2BC,"T",0X1,3);
	split_sreg_range(0X7D01C2CE,"T",0X1,3);
	split_sreg_range(0X7D01C2E0,"T",0X1,3);
	split_sreg_range(0X7D01C314,"T",0X1,3);
	split_sreg_range(0X7D01C32C,"T",0X1,3);
	split_sreg_range(0X7D01C33A,"T",0X1,3);
	split_sreg_range(0X7D01C348,"T",0X1,3);
	split_sreg_range(0X7D01C374,"T",0X1,3);
	split_sreg_range(0X7D01C37C,"T",0X1,3);
	split_sreg_range(0X7D01C394,"T",0X1,3);
	split_sreg_range(0X7D01C398,"T",0X1,3);
	split_sreg_range(0X7D01C39C,"T",0X1,3);
	split_sreg_range(0X7D01C3A0,"T",0X1,3);
	split_sreg_range(0X7D01C3A4,"T",0X1,3);
	split_sreg_range(0X7D01C3A6,"T",0X1,3);
	split_sreg_range(0X7D01C3B4,"T",0X1,3);
	split_sreg_range(0X7D01C3C0,"T",0X1,3);
	split_sreg_range(0X7D01C3C4,"T",0X1,3);
	split_sreg_range(0X7D01C3EC,"T",0X1,3);
	split_sreg_range(0X7D01C418,"T",0X1,3);
	split_sreg_range(0X7D01C41C,"T",0X1,3);
	split_sreg_range(0X7D01C428,"T",0X1,3);
	split_sreg_range(0X7D01C45E,"T",0X1,3);
	split_sreg_range(0X7D01C460,"T",0X1,3);
	split_sreg_range(0X7D01C472,"T",0X1,3);
	split_sreg_range(0X7D01C482,"T",0X1,3);
	split_sreg_range(0X7D01C498,"T",0X1,3);
	split_sreg_range(0X7D01C4B0,"T",0X1,3);
	split_sreg_range(0X7D01C4C0,"T",0X1,3);
	split_sreg_range(0X7D01C4DC,"T",0X1,3);
	split_sreg_range(0X7D01C524,"T",0X1,3);
	split_sreg_range(0X7D01C530,"T",0X1,3);
	split_sreg_range(0X7D01C538,"T",0X1,3);
	split_sreg_range(0X7D01C55C,"T",0X1,3);
	split_sreg_range(0X7D01C560,"T",0X1,3);
	split_sreg_range(0X7D01C564,"T",0X1,3);
	split_sreg_range(0X7D01C56C,"T",0X1,3);
	split_sreg_range(0X7D01C578,"T",0X1,3);
	split_sreg_range(0X7D01C5B2,"T",0X1,3);
	split_sreg_range(0X7D01C5B4,"T",0X1,3);
	split_sreg_range(0X7D01C5BE,"T",0X1,3);
	split_sreg_range(0X7D01C5F0,"T",0X1,3);
	split_sreg_range(0X7D01C5F2,"T",0X1,3);
	split_sreg_range(0X7D01C5FA,"T",0X1,3);
	split_sreg_range(0X7D01C602,"T",0X1,3);
	split_sreg_range(0X7D01C60C,"T",0X1,3);
	split_sreg_range(0X7D01C618,"T",0X1,3);
	split_sreg_range(0X7D01C61E,"T",0X1,3);
	split_sreg_range(0X7D01C630,"T",0X1,3);
	split_sreg_range(0X7D01C640,"T",0X1,3);
	split_sreg_range(0X7D01C644,"T",0X1,3);
	split_sreg_range(0X7D01C656,"T",0X1,3);
	split_sreg_range(0X7D01C668,"T",0X1,3);
	split_sreg_range(0X7D01C6AA,"T",0X1,3);
	split_sreg_range(0X7D01C6AE,"T",0X1,3);
	split_sreg_range(0X7D01C6B2,"T",0X1,3);
	split_sreg_range(0X7D01C6B8,"T",0X1,3);
	split_sreg_range(0X7D01C704,"T",0X1,3);
	split_sreg_range(0X7D01C712,"T",0X1,3);
	split_sreg_range(0X7D01C716,"T",0X1,3);
	split_sreg_range(0X7D01C71E,"T",0X1,3);
	split_sreg_range(0X7D01C72E,"T",0X1,3);
	split_sreg_range(0X7D01C732,"T",0X1,3);
	split_sreg_range(0X7D01C734,"T",0X1,3);
	split_sreg_range(0X7D01C742,"T",0X1,3);
	split_sreg_range(0X7D01C746,"T",0X1,3);
	split_sreg_range(0X7D01C74A,"T",0X1,3);
	split_sreg_range(0X7D01C74C,"T",0X1,3);
	split_sreg_range(0X7D01C758,"T",0X1,3);
	split_sreg_range(0X7D01C760,"T",0X1,3);
	split_sreg_range(0X7D01C7F2,"T",0X1,3);
	split_sreg_range(0X7D01C7F8,"T",0X1,3);
	split_sreg_range(0X7D01C81C,"T",0X1,3);
	split_sreg_range(0X7D01C848,"T",0X1,3);
	split_sreg_range(0X7D01C874,"T",0X1,3);
	split_sreg_range(0X7D01C8A2,"T",0X1,3);
	split_sreg_range(0X7D01C8B8,"T",0X1,3);
	split_sreg_range(0X7D01C934,"T",0X1,3);
	split_sreg_range(0X7D01C94C,"T",0X1,3);
	split_sreg_range(0X7D01C954,"T",0X1,3);
	split_sreg_range(0X7D01C97C,"T",0X1,3);
	split_sreg_range(0X7D01C9A8,"T",0X1,3);
	split_sreg_range(0X7D01C9C4,"T",0X1,3);
	split_sreg_range(0X7D01C9D2,"T",0X1,3);
	split_sreg_range(0X7D01C9D6,"T",0X1,3);
	split_sreg_range(0X7D01C9E8,"T",0X1,3);
	split_sreg_range(0X7D01CA0A,"T",0X1,3);
	split_sreg_range(0X7D01CA0C,"T",0X1,3);
	split_sreg_range(0X7D01CA12,"T",0X1,3);
	split_sreg_range(0X7D01CA22,"T",0X1,3);
	split_sreg_range(0X7D01CA42,"T",0X1,3);
	split_sreg_range(0X7D01CA54,"T",0X1,3);
	split_sreg_range(0X7D01CA58,"T",0X1,3);
	split_sreg_range(0X7D01CA5A,"T",0X1,3);
	split_sreg_range(0X7D01CA78,"T",0X1,3);
	split_sreg_range(0X7D01CA84,"T",0X1,3);
	split_sreg_range(0X7D01CAA6,"T",0X1,3);
	split_sreg_range(0X7D01CAA8,"T",0X1,3);
	split_sreg_range(0X7D01CAB2,"T",0X1,3);
	split_sreg_range(0X7D01CAB6,"T",0X1,3);
	split_sreg_range(0X7D01CADC,"T",0X1,3);
	split_sreg_range(0X7D01CB0E,"T",0X1,3);
	split_sreg_range(0X7D01CB1A,"T",0X1,3);
	split_sreg_range(0X7D01CB24,"T",0X1,3);
	split_sreg_range(0X7D01CB80,"T",0X1,3);
	split_sreg_range(0X7D01CBB8,"T",0X1,3);
	split_sreg_range(0X7D01CBC4,"T",0X1,3);
	split_sreg_range(0X7D01CC00,"T",0X1,3);
	split_sreg_range(0X7D01CC10,"T",0X1,3);
	split_sreg_range(0X7D01CC24,"T",0X1,3);
	split_sreg_range(0X7D01CC38,"T",0X1,3);
	split_sreg_range(0X7D01CC42,"T",0X1,3);
	split_sreg_range(0X7D01CC58,"T",0X1,3);
	split_sreg_range(0X7D01CC60,"T",0X1,3);
	split_sreg_range(0X7D01CC64,"T",0X1,3);
	split_sreg_range(0X7D01CC6A,"T",0X1,3);
	split_sreg_range(0X7D01CC70,"T",0X1,3);
	split_sreg_range(0X7D01CC8C,"T",0X1,3);
	split_sreg_range(0X7D01CC9A,"T",0X1,3);
	split_sreg_range(0X7D01CCA2,"T",0X1,3);
	split_sreg_range(0X7D01CCAC,"T",0X1,3);
	split_sreg_range(0X7D01CCB2,"T",0X1,3);
	split_sreg_range(0X7D01CCB6,"T",0X1,3);
	split_sreg_range(0X7D01CCC4,"T",0X1,3);
	split_sreg_range(0X7D01CCD2,"T",0X1,3);
	split_sreg_range(0X7D01CCE0,"T",0X1,3);
	split_sreg_range(0X7D01CD02,"T",0X1,3);
	split_sreg_range(0X7D01CD0A,"T",0X1,3);
	split_sreg_range(0X7D01CD10,"T",0X1,3);
	split_sreg_range(0X7D01CD2A,"T",0X1,3);
	split_sreg_range(0X7D01CD62,"T",0X1,3);
	split_sreg_range(0X7D01CD6E,"T",0X1,3);
	split_sreg_range(0X7D01CD86,"T",0X1,3);
	split_sreg_range(0X7D01CD8A,"T",0X1,3);
	split_sreg_range(0X7D01CDA4,"T",0X1,3);
	split_sreg_range(0X7D01CDB0,"T",0X1,3);
	split_sreg_range(0X7D01CDBC,"T",0X1,3);
	split_sreg_range(0X7D01CDCE,"T",0X1,3);
	split_sreg_range(0X7D01CDF0,"T",0X1,3);
	split_sreg_range(0X7D01CE08,"T",0X1,3);
	split_sreg_range(0X7D01CE0C,"T",0X1,3);
	split_sreg_range(0X7D01CE14,"T",0X1,3);
	split_sreg_range(0X7D01CE2E,"T",0X1,3);
	split_sreg_range(0X7D01CE42,"T",0X1,3);
	split_sreg_range(0X7D01CE5C,"T",0X1,3);
	split_sreg_range(0X7D01CE68,"T",0X1,3);
	split_sreg_range(0X7D01CE94,"T",0X1,3);
	split_sreg_range(0X7D01CEC0,"T",0X1,3);
	split_sreg_range(0X7D01CF04,"T",0X1,3);
	split_sreg_range(0X7D01CF22,"T",0X1,3);
	split_sreg_range(0X7D01CF24,"T",0X1,3);
	split_sreg_range(0X7D01CF72,"T",0X1,3);
	split_sreg_range(0X7D01CF86,"T",0X1,3);
	split_sreg_range(0X7D01CF8A,"T",0X1,3);
	split_sreg_range(0X7D01CF8E,"T",0X1,3);
	split_sreg_range(0X7D01CF90,"T",0X1,3);
	split_sreg_range(0X7D01CF9C,"T",0X1,3);
	split_sreg_range(0X7D01CFF6,"T",0X1,3);
	split_sreg_range(0X7D01D004,"T",0X1,3);
	split_sreg_range(0X7D01D020,"T",0X1,3);
	split_sreg_range(0X7D01D038,"T",0X1,3);
	split_sreg_range(0X7D01D03C,"T",0X1,3);
	split_sreg_range(0X7D01D040,"T",0X1,3);
	split_sreg_range(0X7D01D04C,"T",0X1,3);
	split_sreg_range(0X7D01D060,"T",0X1,3);
	split_sreg_range(0X7D01D070,"T",0X1,3);
	split_sreg_range(0X7D01D084,"T",0X1,3);
	split_sreg_range(0X7D01D0A8,"T",0X1,3);
	split_sreg_range(0X7D01D0AC,"T",0X1,3);
	split_sreg_range(0X7D01D0AE,"T",0X1,3);
	split_sreg_range(0X7D01D0C0,"T",0,3);
	split_sreg_range(0X7D01D0D8,"T",0,3);
	split_sreg_range(0X7D01D0F0,"T",0X1,3);
	split_sreg_range(0X7D01D11C,"T",0X1,3);
	split_sreg_range(0X7D01D11E,"T",0X1,3);
	split_sreg_range(0X7D01D136,"T",0X1,3);
	split_sreg_range(0X7D01D13E,"T",0X1,3);
	split_sreg_range(0X7D01D142,"T",0X1,3);
	split_sreg_range(0X7D01D174,"T",0X1,3);
	split_sreg_range(0X7D01D18E,"T",0X1,3);
	split_sreg_range(0X7D01D1AC,"T",0X1,3);
	split_sreg_range(0X7D01D1DE,"T",0X1,3);
	split_sreg_range(0X7D01D1EA,"T",0X1,3);
	split_sreg_range(0X7D01D1F6,"T",0X1,3);
	split_sreg_range(0X7D01D224,"T",0X1,3);
	split_sreg_range(0X7D01D246,"T",0X1,3);
	split_sreg_range(0X7D01D26E,"T",0X1,3);
	split_sreg_range(0X7D01D274,"T",0X1,3);
	split_sreg_range(0X7D01D286,"T",0X1,3);
	split_sreg_range(0X7D01D28E,"T",0X1,3);
	split_sreg_range(0X7D01D2BC,"T",0X1,3);
	split_sreg_range(0X7D01D2C0,"T",0X1,3);
	split_sreg_range(0X7D01D2D8,"T",0X1,3);
	split_sreg_range(0X7D01D2F0,"T",0X1,3);
	split_sreg_range(0X7D01D30E,"T",0X1,3);
	split_sreg_range(0X7D01D338,"T",0X1,3);
	split_sreg_range(0X7D01D354,"T",0X1,3);
	split_sreg_range(0X7D01D370,"T",0X1,3);
	split_sreg_range(0X7D01D388,"T",0X1,3);
	split_sreg_range(0X7D01D394,"T",0X1,3);
	split_sreg_range(0X7D01D3A2,"T",0X1,3);
	split_sreg_range(0X7D01D3A8,"T",0X1,3);
	split_sreg_range(0X7D01D3AE,"T",0X1,3);
	split_sreg_range(0X7D01D3C0,"T",0X1,3);
	split_sreg_range(0X7D01D3CC,"T",0X1,3);
	split_sreg_range(0X7D01D3E0,"T",0X1,3);
	split_sreg_range(0X7D01D3E4,"T",0X1,3);
	split_sreg_range(0X7D01D3E8,"T",0X1,3);
	split_sreg_range(0X7D01D3EE,"T",0X1,3);
	split_sreg_range(0X7D01D40E,"T",0X1,3);
	split_sreg_range(0X7D01D41C,"T",0X1,3);
	split_sreg_range(0X7D01D422,"T",0X1,3);
	split_sreg_range(0X7D01D428,"T",0X1,3);
	split_sreg_range(0X7D01D42E,"T",0X1,3);
	split_sreg_range(0X7D01D434,"T",0X1,3);
	split_sreg_range(0X7D01D44A,"T",0X1,3);
	split_sreg_range(0X7D01D44E,"T",0X1,3);
	split_sreg_range(0X7D01D45A,"T",0X1,3);
	split_sreg_range(0X7D01D462,"T",0X1,3);
	split_sreg_range(0X7D01D466,"T",0X1,3);
	split_sreg_range(0X7D01D476,"T",0X1,3);
	split_sreg_range(0X7D01D484,"T",0X1,3);
	split_sreg_range(0X7D01D48E,"T",0X1,3);
	split_sreg_range(0X7D01D492,"T",0X1,3);
	split_sreg_range(0X7D01D4AA,"T",0X1,3);
	split_sreg_range(0X7D01D4C4,"T",0X1,3);
	split_sreg_range(0X7D01D4C8,"T",0X1,3);
	split_sreg_range(0X7D01D4D8,"T",0X1,3);
	split_sreg_range(0X7D01D4E8,"T",0X1,3);
	split_sreg_range(0X7D01D4EE,"T",0X1,3);
	split_sreg_range(0X7D01D4F2,"T",0X1,3);
	split_sreg_range(0X7D01D506,"T",0X1,3);
	split_sreg_range(0X7D01D50A,"T",0X1,3);
	split_sreg_range(0X7D01D518,"T",0X1,3);
	split_sreg_range(0X7D01D526,"T",0X1,3);
	split_sreg_range(0X7D01D53C,"T",0X1,3);
	split_sreg_range(0X7D01D554,"T",0X1,3);
	split_sreg_range(0X7D01D55A,"T",0X1,3);
	split_sreg_range(0X7D01D55E,"T",0X1,3);
	split_sreg_range(0X7D01D5BC,"T",0X1,3);
	split_sreg_range(0X7D01D5D6,"T",0X1,3);
	split_sreg_range(0X7D01D60E,"T",0X1,3);
	split_sreg_range(0X7D01D61E,"T",0X1,3);
	split_sreg_range(0X7D01D622,"T",0X1,3);
	split_sreg_range(0X7D01D63A,"T",0X1,3);
	split_sreg_range(0X7D01D648,"T",0X1,3);
	split_sreg_range(0X7D01D656,"T",0X1,3);
	split_sreg_range(0X7D01D66C,"T",0X1,3);
	split_sreg_range(0X7D01D682,"T",0X1,3);
	split_sreg_range(0X7D01D688,"T",0X1,3);
	split_sreg_range(0X7D01D68E,"T",0X1,3);
	split_sreg_range(0X7D01D694,"T",0X1,3);
	split_sreg_range(0X7D01D69A,"T",0X1,3);
	split_sreg_range(0X7D01D69E,"T",0X1,3);
	split_sreg_range(0X7D01D6AA,"T",0X1,3);
	split_sreg_range(0X7D01D6B2,"T",0X1,3);
	split_sreg_range(0X7D01D6B6,"T",0X1,3);
	split_sreg_range(0X7D01D6C6,"T",0X1,3);
	split_sreg_range(0X7D01D6D8,"T",0X1,3);
	split_sreg_range(0X7D01D6DA,"T",0X1,3);
	split_sreg_range(0X7D01D6DE,"T",0X1,3);
	split_sreg_range(0X7D01D6F0,"T",0X1,3);
	split_sreg_range(0X7D01D6F4,"T",0X1,3);
	split_sreg_range(0X7D01D6F8,"T",0X1,3);
	split_sreg_range(0X7D01D6FA,"T",0X1,3);
	split_sreg_range(0X7D01D6FE,"T",0X1,3);
	split_sreg_range(0X7D01D714,"T",0X1,3);
	split_sreg_range(0X7D01D722,"T",0X1,3);
	split_sreg_range(0X7D01D728,"T",0X1,3);
	split_sreg_range(0X7D01D760,"T",0X1,3);
	split_sreg_range(0X7D01D798,"T",0X1,3);
	split_sreg_range(0X7D01D7A4,"T",0X1,3);
	split_sreg_range(0X7D01D7A8,"T",0X1,3);
	split_sreg_range(0X7D01D7CA,"T",0X1,3);
	split_sreg_range(0X7D01D7CC,"T",0X1,3);
	split_sreg_range(0X7D01D7D6,"T",0X1,3);
	split_sreg_range(0X7D01D7E8,"T",0X1,3);
	split_sreg_range(0X7D01D7EA,"T",0X1,3);
	split_sreg_range(0X7D01D7EC,"T",0X1,3);
	split_sreg_range(0X7D01D7FE,"T",0X1,3);
	split_sreg_range(0X7D01D804,"T",0X1,3);
	split_sreg_range(0X7D01D81C,"T",0X1,3);
	split_sreg_range(0X7D01D838,"T",0X1,3);
	split_sreg_range(0X7D01D83C,"T",0X1,3);
	split_sreg_range(0X7D01D848,"T",0X1,3);
	split_sreg_range(0X7D01D84E,"T",0X1,3);
	split_sreg_range(0X7D01D870,"T",0X1,3);
	split_sreg_range(0X7D01D89A,"T",0X1,3);
	split_sreg_range(0X7D01D8A6,"T",0X1,3);
	split_sreg_range(0X7D01D8BE,"T",0X1,3);
	split_sreg_range(0X7D01D8C2,"T",0X1,3);
	split_sreg_range(0X7D01D8C8,"T",0X1,3);
	split_sreg_range(0X7D01D8E0,"T",0X1,3);
	split_sreg_range(0X7D01D8E4,"T",0X1,3);
	split_sreg_range(0X7D01D8E6,"T",0X1,3);
	split_sreg_range(0X7D01D900,"T",0X1,3);
	split_sreg_range(0X7D01D904,"T",0X1,3);
	split_sreg_range(0X7D01D910,"T",0X1,3);
	split_sreg_range(0X7D01D92A,"T",0X1,3);
	split_sreg_range(0X7D01D92E,"T",0X1,3);
	split_sreg_range(0X7D01D948,"T",0X1,3);
	split_sreg_range(0X7D01D94E,"T",0X1,3);
	split_sreg_range(0X7D01D958,"T",0X1,3);
	split_sreg_range(0X7D01D97A,"T",0X1,3);
	split_sreg_range(0X7D01D982,"T",0X1,3);
	split_sreg_range(0X7D01D99C,"T",0X1,3);
	split_sreg_range(0X7D01D9B0,"T",0X1,3);
	split_sreg_range(0X7D01D9B4,"T",0X1,3);
	split_sreg_range(0X7D01D9C0,"T",0X1,3);
	split_sreg_range(0X7D01D9C4,"T",0X1,3);
	split_sreg_range(0X7D01D9EC,"T",0X1,3);
	split_sreg_range(0X7D01D9F2,"T",0X1,3);
	split_sreg_range(0X7D01D9F6,"T",0X1,3);
	split_sreg_range(0X7D01DA2A,"T",0X1,3);
	split_sreg_range(0X7D01DA2E,"T",0X1,3);
	split_sreg_range(0X7D01DA48,"T",0X1,3);
	split_sreg_range(0X7D01DA4C,"T",0X1,3);
	split_sreg_range(0X7D01DA5E,"T",0X1,3);
	split_sreg_range(0X7D01DA76,"T",0X1,3);
	split_sreg_range(0X7D01DA7A,"T",0X1,3);
	split_sreg_range(0X7D01DAD6,"T",0X1,3);
	split_sreg_range(0X7D01DADA,"T",0X1,3);
	split_sreg_range(0X7D01DAEA,"T",0X1,3);
	split_sreg_range(0X7D01DAF2,"T",0X1,3);
	split_sreg_range(0X7D01DB10,"T",0X1,3);
	split_sreg_range(0X7D01DB2C,"T",0X1,3);
	split_sreg_range(0X7D01DB64,"T",0X1,3);
	split_sreg_range(0X7D01DB88,"T",0X1,3);
	split_sreg_range(0X7D01DB96,"T",0X1,3);
	split_sreg_range(0X7D01DBAC,"T",0X1,3);
	split_sreg_range(0X7D01DBC8,"T",0X1,3);
	split_sreg_range(0X7D01DC08,"T",0X1,3);
	split_sreg_range(0X7D01DC3C,"T",0X1,3);
	split_sreg_range(0X7D01DC70,"T",0X1,3);
	split_sreg_range(0X7D01DC94,"T",0X1,3);
	split_sreg_range(0X7D01DC9E,"T",0X1,3);
	split_sreg_range(0X7D01DCB4,"T",0X1,3);
	split_sreg_range(0X7D01DCB8,"T",0X1,3);
	split_sreg_range(0X7D01DCE8,"T",0X1,3);
	split_sreg_range(0X7D01DCEC,"T",0X1,3);
	split_sreg_range(0X7D01DCF0,"T",0X1,3);
	split_sreg_range(0X7D01DD1C,"T",0X1,3);
	split_sreg_range(0X7D01DD38,"T",0X1,3);
	split_sreg_range(0X7D01DDA4,"T",0X1,3);
	split_sreg_range(0X7D01DDC2,"T",0X1,3);
	split_sreg_range(0X7D01DDCC,"T",0X1,3);
	split_sreg_range(0X7D01DDDC,"T",0X1,3);
	split_sreg_range(0X7D01DDF0,"T",0X1,3);
	split_sreg_range(0X7D01DE3C,"T",0X1,3);
	split_sreg_range(0X7D01DE40,"T",0X1,3);
	split_sreg_range(0X7D01DE4C,"T",0X1,3);
	split_sreg_range(0X7D01DE58,"T",0X1,3);
	split_sreg_range(0X7D01DE5C,"T",0X1,3);
	split_sreg_range(0X7D01DE60,"T",0X1,3);
	split_sreg_range(0X7D01DE8E,"T",0X1,3);
	split_sreg_range(0X7D01DE94,"T",0X1,3);
	split_sreg_range(0X7D01DEA0,"T",0X1,3);
	split_sreg_range(0X7D01DEB0,"T",0X1,3);
	split_sreg_range(0X7D01DEBE,"T",0X1,3);
	split_sreg_range(0X7D01DEC4,"T",0X1,3);
	split_sreg_range(0X7D01DEC8,"T",0X1,3);
	split_sreg_range(0X7D01DECC,"T",0X1,3);
	split_sreg_range(0X7D01DEDC,"T",0X1,3);
	split_sreg_range(0X7D01DEE0,"T",0X1,3);
	split_sreg_range(0X7D01DEEC,"T",0X1,3);
	split_sreg_range(0X7D01DEF8,"T",0X1,3);
	split_sreg_range(0X7D01DF04,"T",0X1,3);
	split_sreg_range(0X7D01DF10,"T",0X1,3);
	split_sreg_range(0X7D01DF14,"T",0X1,3);
	split_sreg_range(0X7D01DF18,"T",0X1,3);
	split_sreg_range(0X7D01DF26,"T",0X1,3);
	split_sreg_range(0X7D01DF32,"T",0X1,3);
	split_sreg_range(0X7D01DF38,"T",0X1,3);
	split_sreg_range(0X7D01DF44,"T",0X1,3);
	split_sreg_range(0X7D01DF5E,"T",0X1,3);
	split_sreg_range(0X7D01DF7A,"T",0X1,3);
	split_sreg_range(0X7D01DFB8,"T",0X1,3);
	split_sreg_range(0X7D01DFC4,"T",0X1,3);
	split_sreg_range(0X7D01E008,"T",0X1,3);
	split_sreg_range(0X7D01E012,"T",0X1,3);
	split_sreg_range(0X7D01E022,"T",0X1,3);
	split_sreg_range(0X7D01E02A,"T",0X1,3);
	split_sreg_range(0X7D01E042,"T",0X1,3);
	split_sreg_range(0X7D01E052,"T",0X1,3);
	split_sreg_range(0X7D01E058,"T",0X1,3);
	split_sreg_range(0X7D01E06E,"T",0X1,3);
	split_sreg_range(0X7D01E094,"T",0X1,3);
	split_sreg_range(0X7D01E0B0,"T",0X1,3);
	split_sreg_range(0X7D01E0B4,"T",0X1,3);
	split_sreg_range(0X7D01E0CE,"T",0X1,3);
	split_sreg_range(0X7D01E0D8,"T",0X1,3);
	split_sreg_range(0X7D01E0E2,"T",0X1,3);
	split_sreg_range(0X7D01E0EA,"T",0X1,3);
	split_sreg_range(0X7D01E0F2,"T",0X1,3);
	split_sreg_range(0X7D01E110,"T",0X1,3);
	split_sreg_range(0X7D01E120,"T",0X1,3);
	split_sreg_range(0X7D01E12A,"T",0X1,3);
	split_sreg_range(0X7D01E13C,"T",0X1,3);
	split_sreg_range(0X7D01E158,"T",0X1,3);
	split_sreg_range(0X7D01E188,"T",0X1,3);
	split_sreg_range(0X7D01E198,"T",0X1,3);
	split_sreg_range(0X7D01E19E,"T",0X1,3);
	split_sreg_range(0X7D01E1D8,"T",0X1,3);
	split_sreg_range(0X7D01E1EA,"T",0X1,3);
	split_sreg_range(0X7D01E1F0,"T",0X1,3);
	split_sreg_range(0X7D01E1F8,"T",0X1,3);
	split_sreg_range(0X7D01E20A,"T",0X1,3);
	split_sreg_range(0X7D01E212,"T",0X1,3);
	split_sreg_range(0X7D01E218,"T",0X1,3);
	split_sreg_range(0X7D01E220,"T",0X1,3);
	split_sreg_range(0X7D01E230,"T",0X1,3);
	split_sreg_range(0X7D01E23C,"T",0X1,3);
	split_sreg_range(0X7D01E23E,"T",0X1,3);
	split_sreg_range(0X7D01E25C,"T",0X1,3);
	split_sreg_range(0X7D01E260,"T",0X1,3);
	split_sreg_range(0X7D01E262,"T",0X1,3);
	split_sreg_range(0X7D01E270,"T",0X1,3);
	split_sreg_range(0X7D01E282,"T",0X1,3);
	split_sreg_range(0X7D01E288,"T",0X1,3);
	split_sreg_range(0X7D01E290,"T",0X1,3);
	split_sreg_range(0X7D01E298,"T",0X1,3);
	split_sreg_range(0X7D01E2BC,"T",0X1,3);
	split_sreg_range(0X7D01E2C2,"T",0X1,3);
	split_sreg_range(0X7D01E2C6,"T",0X1,3);
	split_sreg_range(0X7D01E2D2,"T",0X1,3);
	split_sreg_range(0X7D01E2D8,"T",0X1,3);
	split_sreg_range(0X7D01E302,"T",0X1,3);
	split_sreg_range(0X7D01E30A,"T",0X1,3);
	split_sreg_range(0X7D01E312,"T",0X1,3);
	split_sreg_range(0X7D01E31E,"T",0X1,3);
	split_sreg_range(0X7D01E326,"T",0X1,3);
	split_sreg_range(0X7D01E32E,"T",0X1,3);
	split_sreg_range(0X7D01E334,"T",0X1,3);
	split_sreg_range(0X7D01E34E,"T",0X1,3);
	split_sreg_range(0X7D01E35C,"T",0X1,3);
	split_sreg_range(0X7D01E364,"T",0X1,3);
	split_sreg_range(0X7D01E36C,"T",0X1,3);
	split_sreg_range(0X7D01E374,"T",0X1,3);
	split_sreg_range(0X7D01E37C,"T",0X1,3);
	split_sreg_range(0X7D01E388,"T",0X1,3);
	split_sreg_range(0X7D01E3A2,"T",0X1,3);
	split_sreg_range(0X7D01E3B4,"T",0X1,3);
	split_sreg_range(0X7D01E3BC,"T",0X1,3);
	split_sreg_range(0X7D01E3E4,"T",0X1,3);
	split_sreg_range(0X7D01E416,"T",0X1,3);
	split_sreg_range(0X7D01E42E,"T",0X1,3);
	split_sreg_range(0X7D01E450,"T",0X1,3);
	split_sreg_range(0X7D01E458,"T",0X1,3);
	split_sreg_range(0X7D01E460,"T",0X1,3);
	split_sreg_range(0X7D01E46C,"T",0X1,3);
	split_sreg_range(0X7D01E48E,"T",0X1,3);
	split_sreg_range(0X7D01E494,"T",0X1,3);
	split_sreg_range(0X7D01E4A4,"T",0X1,3);
	split_sreg_range(0X7D01E4AE,"T",0X1,3);
	split_sreg_range(0X7D01E4DE,"T",0X1,3);
	split_sreg_range(0X7D01E506,"T",0X1,3);
	split_sreg_range(0X7D01E50C,"T",0X1,3);
	split_sreg_range(0X7D01E510,"T",0X1,3);
	split_sreg_range(0X7D01E512,"T",0X1,3);
	split_sreg_range(0X7D01E528,"T",0X1,3);
	split_sreg_range(0X7D01E54A,"T",0X1,3);
	split_sreg_range(0X7D01E54E,"T",0X1,3);
	split_sreg_range(0X7D01E558,"T",0X1,3);
	split_sreg_range(0X7D01E562,"T",0X1,3);
	split_sreg_range(0X7D01E596,"T",0X1,3);
	split_sreg_range(0X7D01E5BA,"T",0X1,3);
	split_sreg_range(0X7D01E5BE,"T",0X1,3);
	split_sreg_range(0X7D01E5CC,"T",0X1,3);
	split_sreg_range(0X7D01E5F6,"T",0X1,3);
	split_sreg_range(0X7D01E600,"T",0X1,3);
	split_sreg_range(0X7D01E610,"T",0X1,3);
	split_sreg_range(0X7D01E61A,"T",0X1,3);
	split_sreg_range(0X7D01E628,"T",0X1,3);
	split_sreg_range(0X7D01E63A,"T",0X1,3);
	split_sreg_range(0X7D01E644,"T",0X1,3);
	split_sreg_range(0X7D01E660,"T",0X1,3);
	split_sreg_range(0X7D01E670,"T",0X1,3);
	split_sreg_range(0X7D01E6AA,"T",0X1,3);
	split_sreg_range(0X7D01E6B4,"T",0X1,3);
	split_sreg_range(0X7D01E6CC,"T",0X1,3);
	split_sreg_range(0X7D01E6DA,"T",0X1,3);
	split_sreg_range(0X7D01E6E8,"T",0X1,3);
	split_sreg_range(0X7D01E6F2,"T",0X1,3);
	split_sreg_range(0X7D01E720,"T",0X1,3);
	split_sreg_range(0X7D01E750,"T",0X1,3);
	split_sreg_range(0X7D01E760,"T",0X1,3);
	split_sreg_range(0X7D01E79E,"T",0X1,3);
	split_sreg_range(0X7D01E7A4,"T",0X1,3);
	split_sreg_range(0X7D01E7B2,"T",0X1,3);
	split_sreg_range(0X7D01E7BA,"T",0X1,3);
	split_sreg_range(0X7D01E7D0,"T",0X1,3);
	split_sreg_range(0X7D01E7EC,"T",0X1,3);
	split_sreg_range(0X7D01E7F2,"T",0X1,3);
	split_sreg_range(0X7D01E7FC,"T",0X1,3);
	split_sreg_range(0X7D01E818,"T",0X1,3);
	split_sreg_range(0X7D01E82A,"T",0X1,3);
	split_sreg_range(0X7D01E852,"T",0X1,3);
	split_sreg_range(0X7D01E878,"T",0X1,3);
	split_sreg_range(0X7D01E87C,"T",0X1,3);
	split_sreg_range(0X7D01E88C,"T",0X1,3);
	split_sreg_range(0X7D01E89E,"T",0X1,3);
	split_sreg_range(0X7D01E8AE,"T",0X1,3);
	split_sreg_range(0X7D01E8B8,"T",0X1,3);
	split_sreg_range(0X7D01E8D2,"T",0X1,3);
	split_sreg_range(0X7D01E8F4,"T",0X1,3);
	split_sreg_range(0X7D01E900,"T",0X1,3);
	split_sreg_range(0X7D01E922,"T",0X1,3);
	split_sreg_range(0X7D01E92C,"T",0X1,3);
	split_sreg_range(0X7D01E944,"T",0X1,3);
	split_sreg_range(0X7D01E94A,"T",0X1,3);
	split_sreg_range(0X7D01E968,"T",0X1,3);
	split_sreg_range(0X7D01E980,"T",0X1,3);
	split_sreg_range(0X7D01E986,"T",0X1,3);
	split_sreg_range(0X7D01E990,"T",0X1,3);
	split_sreg_range(0X7D01E9A8,"T",0X1,3);
	split_sreg_range(0X7D01E9D8,"T",0X1,3);
	split_sreg_range(0X7D01EA18,"T",0X1,3);
	split_sreg_range(0X7D01EA36,"T",0X1,3);
	split_sreg_range(0X7D01EA40,"T",0X1,3);
	split_sreg_range(0X7D01EA50,"T",0X1,3);
	split_sreg_range(0X7D01EA5A,"T",0X1,3);
	split_sreg_range(0X7D01EA64,"T",0X1,3);
	split_sreg_range(0X7D01EA80,"T",0X1,3);
	split_sreg_range(0X7D01EAA2,"T",0X1,3);
	split_sreg_range(0X7D01EABA,"T",0X1,3);
	split_sreg_range(0X7D01EAD2,"T",0X1,3);
	split_sreg_range(0X7D01EAE0,"T",0X1,3);
	split_sreg_range(0X7D01EB0A,"T",0X1,3);
	split_sreg_range(0X7D01EB14,"T",0X1,3);
	split_sreg_range(0X7D01EB1E,"T",0X1,3);
	split_sreg_range(0X7D01EB28,"T",0X1,3);
	split_sreg_range(0X7D01EB52,"T",0X1,3);
	split_sreg_range(0X7D01EB56,"T",0X1,3);
	split_sreg_range(0X7D01EB5C,"T",0X1,3);
	split_sreg_range(0X7D01EB6E,"T",0X1,3);
	split_sreg_range(0X7D01EB78,"T",0X1,3);
	split_sreg_range(0X7D01EB86,"T",0X1,3);
	split_sreg_range(0X7D01EB94,"T",0X1,3);
	split_sreg_range(0X7D01EBCC,"T",0X1,3);
	split_sreg_range(0X7D01EBEE,"T",0X1,3);
	split_sreg_range(0X7D01EBFA,"T",0X1,3);
	split_sreg_range(0X7D01EC06,"T",0X1,3);
	split_sreg_range(0X7D01EC12,"T",0X1,3);
	split_sreg_range(0X7D01EC66,"T",0X1,3);
	split_sreg_range(0X7D01ECD0,"T",0X1,3);
	split_sreg_range(0X7D01ECD4,"T",0X1,3);
	split_sreg_range(0X7D01ECD8,"T",0X1,3);
	split_sreg_range(0X7D01ECE4,"T",0X1,3);
	split_sreg_range(0X7D01ECE8,"T",0X1,3);
	split_sreg_range(0X7D01ECF0,"T",0X1,3);
	split_sreg_range(0X7D01ED14,"T",0X1,3);
	split_sreg_range(0X7D01ED1A,"T",0X1,3);
	split_sreg_range(0X7D01ED28,"T",0X1,3);
	split_sreg_range(0X7D01ED6E,"T",0X1,3);
	split_sreg_range(0X7D01EDA6,"T",0X1,3);
	split_sreg_range(0X7D01EDB4,"T",0X1,3);
	split_sreg_range(0X7D01EDC6,"T",0X1,3);
	split_sreg_range(0X7D01EDE4,"T",0X1,3);
	split_sreg_range(0X7D01EDEE,"T",0X1,3);
	split_sreg_range(0X7D01EDF4,"T",0X1,3);
	split_sreg_range(0X7D01EE24,"T",0X1,3);
	split_sreg_range(0X7D01EE34,"T",0X1,3);
	split_sreg_range(0X7D01EE3E,"T",0X1,3);
	split_sreg_range(0X7D01EE68,"T",0X1,3);
	split_sreg_range(0X7D01EE6C,"T",0X1,3);
	split_sreg_range(0X7D01EE6E,"T",0X1,3);
	split_sreg_range(0X7D01EE78,"T",0X1,3);
	split_sreg_range(0X7D01EE88,"T",0X1,3);
	split_sreg_range(0X7D01EEA8,"T",0X1,3);
	split_sreg_range(0X7D01EEBE,"T",0X1,3);
	split_sreg_range(0X7D01EEC8,"T",0X1,3);
	split_sreg_range(0X7D01EEF4,"T",0X1,3);
	split_sreg_range(0X7D01EEFE,"T",0X1,3);
	split_sreg_range(0X7D01EF22,"T",0X1,3);
	split_sreg_range(0X7D01EF26,"T",0X1,3);
	split_sreg_range(0X7D01EF2A,"T",0X1,3);
	split_sreg_range(0X7D01EF34,"T",0X1,3);
	split_sreg_range(0X7D01EF68,"T",0X1,3);
	split_sreg_range(0X7D01EF90,"T",0X1,3);
	split_sreg_range(0X7D01EF92,"T",0X1,3);
	split_sreg_range(0X7D01EF98,"T",0X1,3);
	split_sreg_range(0X7D01EFAC,"T",0X1,3);
	split_sreg_range(0X7D01EFBC,"T",0X1,3);
	split_sreg_range(0X7D01EFD0,"T",0X1,3);
	split_sreg_range(0X7D01EFE0,"T",0X1,3);
	split_sreg_range(0X7D01EFE2,"T",0X1,3);
	split_sreg_range(0X7D01EFE4,"T",0X1,3);
	split_sreg_range(0X7D01F014,"T",0X1,3);
	split_sreg_range(0X7D01F01A,"T",0X1,3);
	split_sreg_range(0X7D01F040,"T",0X1,3);
	split_sreg_range(0X7D01F058,"T",0X1,3);
	split_sreg_range(0X7D01F08C,"T",0X1,3);
	split_sreg_range(0X7D01F0AC,"T",0X1,3);
	split_sreg_range(0X7D01F0CC,"T",0X1,3);
	split_sreg_range(0X7D01F0E8,"T",0X1,3);
	split_sreg_range(0X7D01F0F0,"T",0X1,3);
	split_sreg_range(0X7D01F114,"T",0X1,3);
	split_sreg_range(0X7D01F138,"T",0X1,3);
	split_sreg_range(0X7D01F17A,"T",0X1,3);
	split_sreg_range(0X7D01F17E,"T",0X1,3);
	split_sreg_range(0X7D01F186,"T",0X1,3);
	split_sreg_range(0X7D01F1B8,"T",0X1,3);
	split_sreg_range(0X7D01F1D4,"T",0X1,3);
	split_sreg_range(0X7D01F1F0,"T",0X1,3);
	split_sreg_range(0X7D01F212,"T",0X1,3);
	split_sreg_range(0X7D01F21A,"T",0X1,3);
	split_sreg_range(0X7D01F25A,"T",0X1,3);
	split_sreg_range(0X7D01F268,"T",0X1,3);
	split_sreg_range(0X7D01F274,"T",0X1,3);
	split_sreg_range(0X7D01F2A8,"T",0X1,3);
	split_sreg_range(0X7D01F2B0,"T",0X1,3);
	split_sreg_range(0X7D01F2C2,"T",0X1,3);
	split_sreg_range(0X7D01F2D6,"T",0X1,3);
	split_sreg_range(0X7D01F2DE,"T",0X1,3);
	split_sreg_range(0X7D01F2F4,"T",0X1,3);
	split_sreg_range(0X7D01F310,"T",0X1,3);
	split_sreg_range(0X7D01F338,"T",0X1,3);
	split_sreg_range(0X7D01F342,"T",0X1,3);
	split_sreg_range(0X7D01F358,"T",0X1,3);
	split_sreg_range(0X7D01F378,"T",0X1,3);
	split_sreg_range(0X7D01F3D4,"T",0X1,3);
	split_sreg_range(0X7D01F3F0,"T",0X1,3);
	split_sreg_range(0X7D01F400,"T",0X1,3);
	split_sreg_range(0X7D01F404,"T",0X1,3);
	split_sreg_range(0X7D01F432,"T",0X1,3);
	split_sreg_range(0X7D01F44E,"T",0X1,3);
	split_sreg_range(0X7D01F45C,"T",0X1,3);
	split_sreg_range(0X7D01F47A,"T",0X1,3);
	split_sreg_range(0X7D01F480,"T",0X1,3);
	split_sreg_range(0X7D01F4A4,"T",0X1,3);
	split_sreg_range(0X7D01F4CA,"T",0X1,3);
	split_sreg_range(0X7D01F4DC,"T",0X1,3);
	split_sreg_range(0X7D01F4EC,"T",0X1,3);
	split_sreg_range(0X7D01F4EE,"T",0X1,3);
	split_sreg_range(0X7D01F504,"T",0X1,3);
	split_sreg_range(0X7D01F520,"T",0X1,3);
	split_sreg_range(0X7D01F540,"T",0X1,3);
	split_sreg_range(0X7D01F558,"T",0X1,3);
	split_sreg_range(0X7D01F55C,"T",0X1,3);
	split_sreg_range(0X7D01F58A,"T",0X1,3);
	split_sreg_range(0X7D01F590,"T",0X1,3);
	split_sreg_range(0X7D01F598,"T",0X1,3);
	split_sreg_range(0X7D01F5C0,"T",0X1,3);
	split_sreg_range(0X7D01F5CA,"T",0X1,3);
	split_sreg_range(0X7D01F5CE,"T",0X1,3);
	split_sreg_range(0X7D01F5F8,"T",0X1,3);
	split_sreg_range(0X7D01F61A,"T",0X1,3);
	split_sreg_range(0X7D01F62E,"T",0X1,3);
	split_sreg_range(0X7D01F642,"T",0X1,3);
	split_sreg_range(0X7D01F660,"T",0X1,3);
	split_sreg_range(0X7D01F66E,"T",0X1,3);
	split_sreg_range(0X7D01F6A0,"T",0X1,3);
	split_sreg_range(0X7D01F6A2,"T",0X1,3);
	split_sreg_range(0X7D01F6A6,"T",0X1,3);
	split_sreg_range(0X7D01F6C0,"T",0X1,3);
	split_sreg_range(0X7D01F6D4,"T",0X1,3);
	split_sreg_range(0X7D01F734,"T",0X1,3);
	split_sreg_range(0X7D01F73A,"T",0X1,3);
	split_sreg_range(0X7D01F750,"T",0X1,3);
	split_sreg_range(0X7D01F772,"T",0X1,3);
	split_sreg_range(0X7D01F786,"T",0X1,3);
	split_sreg_range(0X7D01F7B8,"T",0X1,3);
	split_sreg_range(0X7D01F7CE,"T",0X1,3);
	split_sreg_range(0X7D01F814,"T",0X1,3);
	split_sreg_range(0X7D01F83E,"T",0X1,3);
	split_sreg_range(0X7D01F8B4,"T",0X1,3);
	split_sreg_range(0X7D01F8BC,"T",0X1,3);
	split_sreg_range(0X7D01F8C2,"T",0X1,3);
	split_sreg_range(0X7D01F8DA,"T",0X1,3);
	split_sreg_range(0X7D01F8F4,"T",0X1,3);
	split_sreg_range(0X7D01F902,"T",0X1,3);
	split_sreg_range(0X7D01F918,"T",0X1,3);
	split_sreg_range(0X7D01F96C,"T",0X1,3);
	split_sreg_range(0X7D01F974,"T",0X1,3);
	split_sreg_range(0X7D01F97C,"T",0X1,3);
	split_sreg_range(0X7D01F9B8,"T",0X1,3);
	split_sreg_range(0X7D01F9E0,"T",0X1,3);
	split_sreg_range(0X7D01F9F4,"T",0X1,3);
	split_sreg_range(0X7D01FA0C,"T",0X1,3);
	split_sreg_range(0X7D01FA40,"T",0X1,3);
	split_sreg_range(0X7D01FA50,"T",0X1,3);
	split_sreg_range(0X7D01FA54,"T",0X1,3);
	split_sreg_range(0X7D01FA84,"T",0X1,3);
	split_sreg_range(0X7D01FA8C,"T",0X1,3);
	split_sreg_range(0X7D01FAA8,"T",0X1,3);
	split_sreg_range(0X7D01FAC8,"T",0X1,3);
	split_sreg_range(0X7D01FB0C,"T",0X1,3);
	split_sreg_range(0X7D01FB32,"T",0X1,3);
	split_sreg_range(0X7D01FB88,"T",0X1,3);
	split_sreg_range(0X7D01FBB0,"T",0X1,3);
	split_sreg_range(0X7D01FBB4,"T",0X1,3);
	split_sreg_range(0X7D01FBB8,"T",0X1,3);
	split_sreg_range(0X7D01FBDC,"T",0X1,3);
	split_sreg_range(0X7D01FBE8,"T",0X1,3);
	split_sreg_range(0X7D01FC16,"T",0X1,3);
	split_sreg_range(0X7D01FC24,"T",0X1,3);
	split_sreg_range(0X7D01FC52,"T",0X1,3);
	split_sreg_range(0X7D01FC60,"T",0X1,3);
	split_sreg_range(0X7D01FC76,"T",0X1,3);
	split_sreg_range(0X7D01FC7C,"T",0X1,3);
	split_sreg_range(0X7D01FC84,"T",0X1,3);
	split_sreg_range(0X7D01FCE0,"T",0X1,3);
	split_sreg_range(0X7D01FD70,"T",0X1,3);
	split_sreg_range(0X7D01FD82,"T",0X1,3);
	split_sreg_range(0X7D01FD90,"T",0X1,3);
	split_sreg_range(0X7D01FD9A,"T",0X1,3);
	split_sreg_range(0X7D01FDB2,"T",0X1,3);
	split_sreg_range(0X7D01FDBA,"T",0X1,3);
	split_sreg_range(0X7D01FDF0,"T",0X1,3);
	split_sreg_range(0X7D01FE68,"T",0X1,3);
	split_sreg_range(0X7D01FE70,"T",0X1,3);
	split_sreg_range(0X7D01FE74,"T",0X1,3);
	split_sreg_range(0X7D01FEC4,"T",0X1,3);
	split_sreg_range(0X7D01FECC,"T",0X1,3);
	split_sreg_range(0X7D01FECE,"T",0X1,3);
	split_sreg_range(0X7D01FEDC,"T",0X1,3);
	split_sreg_range(0X7D01FF00,"T",0X1,3);
	split_sreg_range(0X7D01FF0A,"T",0X1,3);
	split_sreg_range(0X7D01FF10,"T",0X1,3);
	split_sreg_range(0X7D01FF18,"T",0X1,3);
	split_sreg_range(0X7D01FF1E,"T",0X1,3);
	split_sreg_range(0X7D01FF24,"T",0X1,3);
	split_sreg_range(0X7D01FFC2,"T",0X1,3);
	split_sreg_range(0X7D01FFD6,"T",0X1,3);
	split_sreg_range(0X7D02000E,"T",0X1,3);
	split_sreg_range(0X7D020012,"T",0X1,3);
	split_sreg_range(0X7D020054,"T",0X1,3);
	split_sreg_range(0X7D0200AC,"T",0X1,3);
	split_sreg_range(0X7D020154,"T",0X1,3);
	split_sreg_range(0X7D02015E,"T",0X1,3);
	split_sreg_range(0X7D020180,"T",0X1,3);
	split_sreg_range(0X7D0201A8,"T",0X1,3);
	split_sreg_range(0X7D020214,"T",0X1,3);
	split_sreg_range(0X7D02021C,"T",0X1,3);
	split_sreg_range(0X7D020272,"T",0X1,3);
	split_sreg_range(0X7D020274,"T",0X1,3);
	split_sreg_range(0X7D020296,"T",0X1,3);
	split_sreg_range(0X7D0202A4,"T",0X1,3);
	split_sreg_range(0X7D0202F0,"T",0X1,3);
	split_sreg_range(0X7D02031A,"T",0X1,3);
	split_sreg_range(0X7D020322,"T",0X1,3);
	split_sreg_range(0X7D020358,"T",0X1,3);
	split_sreg_range(0X7D020396,"T",0X1,3);
	split_sreg_range(0X7D0203C0,"T",0X1,3);
	split_sreg_range(0X7D0203D0,"T",0X1,3);
	split_sreg_range(0X7D0203DC,"T",0X1,3);
	split_sreg_range(0X7D0203E8,"T",0X1,3);
	split_sreg_range(0X7D0203FC,"T",0X1,3);
	split_sreg_range(0X7D020420,"T",0X1,3);
	split_sreg_range(0X7D020424,"T",0X1,3);
	split_sreg_range(0X7D020448,"T",0X1,3);
	split_sreg_range(0X7D02044E,"T",0X1,3);
	split_sreg_range(0X7D020482,"T",0X1,3);
	split_sreg_range(0X7D0204B8,"T",0X1,3);
	split_sreg_range(0X7D0204D4,"T",0X1,3);
	split_sreg_range(0X7D0204D8,"T",0X1,3);
	split_sreg_range(0X7D0204E8,"T",0X1,3);
	split_sreg_range(0X7D020508,"T",0X1,3);
	split_sreg_range(0X7D020518,"T",0X1,3);
	split_sreg_range(0X7D020538,"T",0X1,3);
	split_sreg_range(0X7D02053C,"T",0X1,3);
	split_sreg_range(0X7D020544,"T",0X1,3);
	split_sreg_range(0X7D02058E,"T",0X1,3);
	split_sreg_range(0X7D020592,"T",0X1,3);
	split_sreg_range(0X7D020598,"T",0X1,3);
	split_sreg_range(0X7D02059C,"T",0X1,3);
	split_sreg_range(0X7D0205B4,"T",0X1,3);
	split_sreg_range(0X7D0205D8,"T",0X1,3);
	split_sreg_range(0X7D0205FE,"T",0X1,3);
	split_sreg_range(0X7D020630,"T",0X1,3);
	split_sreg_range(0X7D020634,"T",0X1,3);
	split_sreg_range(0X7D020638,"T",0X1,3);
	split_sreg_range(0X7D020680,"T",0X1,3);
	split_sreg_range(0X7D02068E,"T",0X1,3);
	split_sreg_range(0X7D0206B0,"T",0X1,3);
	split_sreg_range(0X7D0206E8,"T",0X1,3);
	split_sreg_range(0X7D02072E,"T",0X1,3);
	split_sreg_range(0X7D02073C,"T",0X1,3);
	split_sreg_range(0X7D02075E,"T",0X1,3);
	split_sreg_range(0X7D020794,"T",0X1,3);
	split_sreg_range(0X7D0207B2,"T",0X1,3);
	split_sreg_range(0X7D0207BC,"T",0X1,3);
	split_sreg_range(0X7D0207C8,"T",0X1,3);
	split_sreg_range(0X7D0207CC,"T",0X1,3);
	split_sreg_range(0X7D0207F0,"T",0X1,3);
	split_sreg_range(0X7D020800,"T",0X1,3);
	split_sreg_range(0X7D02083C,"T",0X1,3);
	split_sreg_range(0X7D02083E,"T",0X1,3);
	split_sreg_range(0X7D020840,"T",0X1,3);
	split_sreg_range(0X7D020858,"T",0X1,3);
	split_sreg_range(0X7D02085C,"T",0X1,3);
	split_sreg_range(0X7D020870,"T",0X1,3);
	split_sreg_range(0X7D02088E,"T",0X1,3);
	split_sreg_range(0X7D020894,"T",0X1,3);
	split_sreg_range(0X7D0208AC,"T",0X1,3);
	split_sreg_range(0X7D0208C4,"T",0X1,3);
	split_sreg_range(0X7D0208CE,"T",0X1,3);
	split_sreg_range(0X7D0208D8,"T",0X1,3);
	split_sreg_range(0X7D0208DA,"T",0X1,3);
	split_sreg_range(0X7D0208E0,"T",0X1,3);
	split_sreg_range(0X7D0208E6,"T",0X1,3);
	split_sreg_range(0X7D0208F2,"T",0X1,3);
	split_sreg_range(0X7D0208F6,"T",0X1,3);
	split_sreg_range(0X7D020906,"T",0X1,3);
	split_sreg_range(0X7D020916,"T",0X1,3);
	split_sreg_range(0X7D02091E,"T",0X1,3);
	split_sreg_range(0X7D020924,"T",0X1,3);
	split_sreg_range(0X7D020938,"T",0X1,3);
	split_sreg_range(0X7D02095A,"T",0X1,3);
	split_sreg_range(0X7D02095C,"T",0X1,3);
	split_sreg_range(0X7D02095E,"T",0X1,3);
	split_sreg_range(0X7D020968,"T",0X1,3);
	split_sreg_range(0X7D02097A,"T",0X1,3);
	split_sreg_range(0X7D020986,"T",0X1,3);
	split_sreg_range(0X7D02099E,"T",0X1,3);
	split_sreg_range(0X7D0209AA,"T",0X1,3);
	split_sreg_range(0X7D0209BC,"T",0X1,3);
	split_sreg_range(0X7D0209C6,"T",0X1,3);
	split_sreg_range(0X7D0209D2,"T",0X1,3);
	split_sreg_range(0X7D0209DE,"T",0X1,3);
	split_sreg_range(0X7D0209F8,"T",0X1,3);
	split_sreg_range(0X7D020A06,"T",0X1,3);
	split_sreg_range(0X7D020A14,"T",0X1,3);
	split_sreg_range(0X7D020A26,"T",0X1,3);
	split_sreg_range(0X7D020A38,"T",0X1,3);
	split_sreg_range(0X7D020A42,"T",0X1,3);
	split_sreg_range(0X7D020A64,"T",0X1,3);
	split_sreg_range(0X7D020A70,"T",0X1,3);
	split_sreg_range(0X7D020A7A,"T",0X1,3);
	split_sreg_range(0X7D020A84,"T",0X1,3);
	split_sreg_range(0X7D020A8C,"T",0X1,3);
	split_sreg_range(0X7D020AC8,"T",0X1,3);
	split_sreg_range(0X7D020AD6,"T",0X1,3);
	split_sreg_range(0X7D020AD8,"T",0X1,3);
	split_sreg_range(0X7D020AF8,"T",0X1,3);
	split_sreg_range(0X7D020B04,"T",0X1,3);
	split_sreg_range(0X7D020B10,"T",0X1,3);
	split_sreg_range(0X7D020B1C,"T",0X1,3);
	split_sreg_range(0X7D020B2E,"T",0X1,3);
	split_sreg_range(0X7D020B56,"T",0X1,3);
	split_sreg_range(0X7D020B5A,"T",0X1,3);
	split_sreg_range(0X7D020B70,"T",0X1,3);
	split_sreg_range(0X7D020B80,"T",0X1,3);
	split_sreg_range(0X7D020BB8,"T",0X1,3);
	split_sreg_range(0X7D020BC2,"T",0X1,3);
	split_sreg_range(0X7D020BCC,"T",0X1,3);
	split_sreg_range(0X7D020BDC,"T",0X1,3);
	split_sreg_range(0X7D020BE6,"T",0X1,3);
	split_sreg_range(0X7D020BF4,"T",0X1,3);
	split_sreg_range(0X7D020C18,"T",0X1,3);
	split_sreg_range(0X7D020C3E,"T",0X1,3);
	split_sreg_range(0X7D020C44,"T",0X1,3);
	split_sreg_range(0X7D020C52,"T",0X1,3);
	split_sreg_range(0X7D020C60,"T",0X1,3);
	split_sreg_range(0X7D020C6E,"T",0X1,3);
	split_sreg_range(0X7D020C74,"T",0X1,3);
	split_sreg_range(0X7D020C82,"T",0X1,3);
	split_sreg_range(0X7D020CE2,"T",0X1,3);
	split_sreg_range(0X7D020CF6,"T",0X1,3);
	split_sreg_range(0X7D020D2C,"T",0X1,3);
	split_sreg_range(0X7D020D36,"T",0X1,3);
	split_sreg_range(0X7D020D40,"T",0X1,3);
	split_sreg_range(0X7D020D50,"T",0X1,3);
	split_sreg_range(0X7D020D5A,"T",0X1,3);
	split_sreg_range(0X7D020D68,"T",0X1,3);
	split_sreg_range(0X7D020DA0,"T",0X1,3);
	split_sreg_range(0X7D020DB0,"T",0X1,3);
	split_sreg_range(0X7D020DE4,"T",0X1,3);
	split_sreg_range(0X7D020DE8,"T",0X1,3);
	split_sreg_range(0X7D020E1C,"T",0X1,3);
	split_sreg_range(0X7D020E2A,"T",0X1,3);
	split_sreg_range(0X7D020E32,"T",0X1,3);
	split_sreg_range(0X7D020E38,"T",0X1,3);
	split_sreg_range(0X7D020E46,"T",0X1,3);
	split_sreg_range(0X7D020E50,"T",0X1,3);
	split_sreg_range(0X7D020E5E,"T",0X1,3);
	split_sreg_range(0X7D020E6C,"T",0X1,3);
	split_sreg_range(0X7D020E76,"T",0X1,3);
	split_sreg_range(0X7D020ECA,"T",0X1,3);
	split_sreg_range(0X7D020EE4,"T",0X1,3);
	split_sreg_range(0X7D020F1C,"T",0X1,3);
	split_sreg_range(0X7D020F30,"T",0X1,3);
	split_sreg_range(0X7D020FF0,"T",0X1,3);
	split_sreg_range(0X7D020FFA,"T",0X1,3);
	split_sreg_range(0X7D021004,"T",0X1,3);
	split_sreg_range(0X7D02100E,"T",0X1,3);
	split_sreg_range(0X7D021052,"T",0X1,3);
	split_sreg_range(0X7D02105C,"T",0X1,3);
	split_sreg_range(0X7D02109C,"T",0X1,3);
	split_sreg_range(0X7D0210C0,"T",0X1,3);
	split_sreg_range(0X7D0210E0,"T",0X1,3);
	split_sreg_range(0X7D0210EA,"T",0X1,3);
	split_sreg_range(0X7D02110A,"T",0X1,3);
	split_sreg_range(0X7D021116,"T",0X1,3);
	split_sreg_range(0X7D021122,"T",0X1,3);
	split_sreg_range(0X7D021154,"T",0X1,3);
	split_sreg_range(0X7D021160,"T",0X1,3);
	split_sreg_range(0X7D021174,"T",0X1,3);
	split_sreg_range(0X7D021192,"T",0X1,3);
	split_sreg_range(0X7D021196,"T",0X1,3);
	split_sreg_range(0X7D0211B8,"T",0X1,3);
	split_sreg_range(0X7D0211D0,"T",0X1,3);
	split_sreg_range(0X7D021220,"T",0X1,3);
	split_sreg_range(0X7D02122A,"T",0X1,3);
	split_sreg_range(0X7D021234,"T",0X1,3);
	split_sreg_range(0X7D021240,"T",0X1,3);
	split_sreg_range(0X7D02124A,"T",0X1,3);
	split_sreg_range(0X7D021254,"T",0X1,3);
	split_sreg_range(0X7D021260,"T",0X1,3);
	split_sreg_range(0X7D02126C,"T",0X1,3);
	split_sreg_range(0X7D021278,"T",0X1,3);
	split_sreg_range(0X7D021284,"T",0X1,3);
	split_sreg_range(0X7D021290,"T",0X1,3);
	split_sreg_range(0X7D02129C,"T",0X1,3);
	split_sreg_range(0X7D0212B0,"T",0X1,3);
	split_sreg_range(0X7D0212DE,"T",0X1,3);
	split_sreg_range(0X7D0212FA,"T",0X1,3);
	split_sreg_range(0X7D021312,"T",0X1,3);
	split_sreg_range(0X7D02132A,"T",0X1,3);
	split_sreg_range(0X7D021342,"T",0X1,3);
	split_sreg_range(0X7D0213A0,"T",0X1,3);
	split_sreg_range(0X7D0213B6,"T",0X1,3);
	split_sreg_range(0X7D0213BE,"T",0X1,3);
	split_sreg_range(0X7D0213C4,"T",0X1,3);
	split_sreg_range(0X7D0213D2,"T",0X1,3);
	split_sreg_range(0X7D02140E,"T",0X1,3);
	split_sreg_range(0X7D02141C,"T",0X1,3);
	split_sreg_range(0X7D021468,"T",0X1,3);
	split_sreg_range(0X7D021472,"T",0X1,3);
	split_sreg_range(0X7D021482,"T",0X1,3);
	split_sreg_range(0X7D02148A,"T",0X1,3);
	split_sreg_range(0X7D021498,"T",0X1,3);
	split_sreg_range(0X7D0214C8,"T",0X1,3);
	split_sreg_range(0X7D0214DC,"T",0X1,3);
	split_sreg_range(0X7D0214EC,"T",0X1,3);
	split_sreg_range(0X7D021506,"T",0X1,3);
	split_sreg_range(0X7D021512,"T",0X1,3);
	split_sreg_range(0X7D021540,"T",0X1,3);
	split_sreg_range(0X7D02155A,"T",0X1,3);
	split_sreg_range(0X7D021562,"T",0X1,3);
	split_sreg_range(0X7D02156A,"T",0X1,3);
	split_sreg_range(0X7D02157A,"T",0X1,3);
	split_sreg_range(0X7D0215A2,"T",0X1,3);
	split_sreg_range(0X7D0215AC,"T",0X1,3);
	split_sreg_range(0X7D0215BC,"T",0X1,3);
	split_sreg_range(0X7D0215C6,"T",0X1,3);
	split_sreg_range(0X7D0215E6,"T",0X1,3);
	split_sreg_range(0X7D0215F0,"T",0X1,3);
	split_sreg_range(0X7D0215FA,"T",0X1,3);
	split_sreg_range(0X7D02161A,"T",0X1,3);
	split_sreg_range(0X7D021624,"T",0X1,3);
	split_sreg_range(0X7D021634,"T",0X1,3);
	split_sreg_range(0X7D021638,"T",0X1,3);
	split_sreg_range(0X7D021662,"T",0X1,3);
	split_sreg_range(0X7D02166A,"T",0X1,3);
	split_sreg_range(0X7D02167C,"T",0X1,3);
	split_sreg_range(0X7D021692,"T",0X1,3);
	split_sreg_range(0X7D02169C,"T",0X1,3);
	split_sreg_range(0X7D0216AA,"T",0X1,3);
	split_sreg_range(0X7D0216D2,"T",0X1,3);
	split_sreg_range(0X7D021718,"T",0X1,3);
	split_sreg_range(0X7D021730,"T",0X1,3);
	split_sreg_range(0X7D021756,"T",0X1,3);
	split_sreg_range(0X7D021762,"T",0X1,3);
	split_sreg_range(0X7D02177E,"T",0X1,3);
	split_sreg_range(0X7D02178A,"T",0X1,3);
	split_sreg_range(0X7D021796,"T",0X1,3);
	split_sreg_range(0X7D0217B4,"T",0X1,3);
	split_sreg_range(0X7D0217C8,"T",0X1,3);
	split_sreg_range(0X7D02180C,"T",0X1,3);
	split_sreg_range(0X7D021836,"T",0X1,3);
	split_sreg_range(0X7D021844,"T",0X1,3);
	split_sreg_range(0X7D02184E,"T",0X1,3);
	split_sreg_range(0X7D02185C,"T",0X1,3);
	split_sreg_range(0X7D02186C,"T",0X1,3);
	split_sreg_range(0X7D021874,"T",0X1,3);
	split_sreg_range(0X7D02187C,"T",0X1,3);
	split_sreg_range(0X7D021882,"T",0X1,3);
	split_sreg_range(0X7D02188C,"T",0X1,3);
	split_sreg_range(0X7D0218B4,"T",0X1,3);
	split_sreg_range(0X7D0218BE,"T",0X1,3);
	split_sreg_range(0X7D02191C,"T",0X1,3);
	split_sreg_range(0X7D021920,"T",0X1,3);
	split_sreg_range(0X7D021940,"T",0X1,3);
	split_sreg_range(0X7D02194A,"T",0X1,3);
	split_sreg_range(0X7D021964,"T",0X1,3);
	split_sreg_range(0X7D021970,"T",0X1,3);
	split_sreg_range(0X7D02197C,"T",0X1,3);
	split_sreg_range(0X7D021988,"T",0X1,3);
	split_sreg_range(0X7D0219BE,"T",0X1,3);
	split_sreg_range(0X7D0219C8,"T",0X1,3);
	split_sreg_range(0X7D0219DA,"T",0X1,3);
	split_sreg_range(0X7D021A1C,"T",0X1,3);
	split_sreg_range(0X7D021A3E,"T",0X1,3);
	split_sreg_range(0X7D021A48,"T",0X1,3);
	split_sreg_range(0X7D021A54,"T",0X1,3);
	split_sreg_range(0X7D021A60,"T",0X1,3);
	split_sreg_range(0X7D021A6A,"T",0X1,3);
	split_sreg_range(0X7D021A76,"T",0X1,3);
	split_sreg_range(0X7D021A82,"T",0X1,3);
	split_sreg_range(0X7D021AB6,"T",0X1,3);
	split_sreg_range(0X7D021AC0,"T",0X1,3);
	split_sreg_range(0X7D021AD2,"T",0X1,3);
	split_sreg_range(0X7D021AF0,"T",0X1,3);
	split_sreg_range(0X7D021B14,"T",0X1,3);
	split_sreg_range(0X7D021B32,"T",0X1,3);
	split_sreg_range(0X7D021B3A,"T",0X1,3);
	split_sreg_range(0X7D021B40,"T",0X1,3);
	split_sreg_range(0X7D021B4E,"T",0X1,3);
	split_sreg_range(0X7D021BC0,"T",0X1,3);
	split_sreg_range(0X7D021C1C,"T",0X1,3);
	split_sreg_range(0X7D021C2C,"T",0X1,3);
	split_sreg_range(0X7D021C3A,"T",0X1,3);
	split_sreg_range(0X7D021C40,"T",0X1,3);
	split_sreg_range(0X7D021C46,"T",0X1,3);
	split_sreg_range(0X7D021C72,"T",0X1,3);
	split_sreg_range(0X7D021C7C,"T",0X1,3);
	split_sreg_range(0X7D021C82,"T",0X1,3);
	split_sreg_range(0X7D021CC0,"T",0X1,3);
	split_sreg_range(0X7D021CE0,"T",0X1,3);
	split_sreg_range(0X7D021CEC,"T",0X1,3);
	split_sreg_range(0X7D021CF0,"T",0X1,3);
	split_sreg_range(0X7D021D34,"T",0X1,3);
	split_sreg_range(0X7D021D3E,"T",0X1,3);
	split_sreg_range(0X7D021D48,"T",0X1,3);
	split_sreg_range(0X7D021D58,"T",0X1,3);
	split_sreg_range(0X7D021D7E,"T",0X1,3);
	split_sreg_range(0X7D021D92,"T",0X1,3);
	split_sreg_range(0X7D021D9C,"T",0X1,3);
	split_sreg_range(0X7D021DA6,"T",0X1,3);
	split_sreg_range(0X7D021DE2,"T",0X1,3);
	split_sreg_range(0X7D021DF6,"T",0X1,3);
	split_sreg_range(0X7D021E0A,"T",0X1,3);
	split_sreg_range(0X7D021E14,"T",0X1,3);
	split_sreg_range(0X7D021E4C,"T",0X1,3);
	split_sreg_range(0X7D021E68,"T",0X1,3);
	split_sreg_range(0X7D021E6C,"T",0X1,3);
	split_sreg_range(0X7D021E88,"T",0X1,3);
	split_sreg_range(0X7D021EC6,"T",0X1,3);
	split_sreg_range(0X7D021EE4,"T",0X1,3);
	split_sreg_range(0X7D021EFA,"T",0X1,3);
	split_sreg_range(0X7D021F02,"T",0X1,3);
	split_sreg_range(0X7D021F0C,"T",0X1,3);
	split_sreg_range(0X7D021F12,"T",0X1,3);
	split_sreg_range(0X7D021F30,"T",0X1,3);
	split_sreg_range(0X7D021F34,"T",0X1,3);
	split_sreg_range(0X7D021F3E,"T",0X1,3);
	split_sreg_range(0X7D021F74,"T",0X1,3);
	split_sreg_range(0X7D021F7A,"T",0X1,3);
	split_sreg_range(0X7D021F84,"T",0X1,3);
	split_sreg_range(0X7D021F92,"T",0X1,3);
	split_sreg_range(0X7D021FEA,"T",0X1,3);
	split_sreg_range(0X7D022002,"T",0X1,3);
	split_sreg_range(0X7D022012,"T",0X1,3);
	split_sreg_range(0X7D022022,"T",0X1,3);
	split_sreg_range(0X7D022030,"T",0X1,3);
	split_sreg_range(0X7D02203E,"T",0X1,3);
	split_sreg_range(0X7D022100,"T",0X1,3);
	split_sreg_range(0X7D02213A,"T",0X1,3);
	split_sreg_range(0X7D022148,"T",0X1,3);
	split_sreg_range(0X7D02214C,"T",0X1,3);
	split_sreg_range(0X7D022156,"T",0X1,3);
	split_sreg_range(0X7D0221B4,"T",0X1,3);
	split_sreg_range(0X7D0221DC,"T",0X1,3);
	split_sreg_range(0X7D0221E6,"T",0X1,3);
	split_sreg_range(0X7D0221F2,"T",0X1,3);
	split_sreg_range(0X7D0221FE,"T",0X1,3);
	split_sreg_range(0X7D02220A,"T",0X1,3);
	split_sreg_range(0X7D02224E,"T",0X1,3);
	split_sreg_range(0X7D022266,"T",0X1,3);
	split_sreg_range(0X7D022276,"T",0X1,3);
	split_sreg_range(0X7D022288,"T",0X1,3);
	split_sreg_range(0X7D0223AC,"T",0X1,3);
	split_sreg_range(0X7D0223B8,"T",0X1,3);
	split_sreg_range(0X7D0223D6,"T",0X1,3);
	split_sreg_range(0X7D0223DE,"T",0X1,3);
	split_sreg_range(0X7D0223E4,"T",0X1,3);
	split_sreg_range(0X7D0223F2,"T",0X1,3);
	split_sreg_range(0X7D022430,"T",0X1,3);
	split_sreg_range(0X7D02243A,"T",0X1,3);
	split_sreg_range(0X7D0224A4,"T",0X1,3);
	split_sreg_range(0X7D0224B4,"T",0X1,3);
	split_sreg_range(0X7D0224C2,"T",0X1,3);
	split_sreg_range(0X7D0224DA,"T",0X1,3);
	split_sreg_range(0X7D0224E2,"T",0X1,3);
	split_sreg_range(0X7D022500,"T",0X1,3);
	split_sreg_range(0X7D022508,"T",0X1,3);
	split_sreg_range(0X7D022528,"T",0X1,3);
	split_sreg_range(0X7D022532,"T",0X1,3);
	split_sreg_range(0X7D02253A,"T",0X1,3);
	split_sreg_range(0X7D022544,"T",0X1,3);
	split_sreg_range(0X7D022558,"T",0X1,3);
	split_sreg_range(0X7D02257A,"T",0X1,3);
	split_sreg_range(0X7D022586,"T",0X1,3);
	split_sreg_range(0X7D02258A,"T",0X1,3);
	split_sreg_range(0X7D0225D4,"T",0X1,3);
	split_sreg_range(0X7D0225DE,"T",0X1,3);
	split_sreg_range(0X7D0225E8,"T",0X1,3);
	split_sreg_range(0X7D0225FC,"T",0X1,3);
	split_sreg_range(0X7D02262C,"T",0X1,3);
	split_sreg_range(0X7D022640,"T",0X1,3);
	split_sreg_range(0X7D02264A,"T",0X1,3);
	split_sreg_range(0X7D022672,"T",0X1,3);
	split_sreg_range(0X7D02268A,"T",0X1,3);
	split_sreg_range(0X7D022692,"T",0X1,3);
	split_sreg_range(0X7D02269C,"T",0X1,3);
	split_sreg_range(0X7D0226A6,"T",0X1,3);
	split_sreg_range(0X7D0226CC,"T",0X1,3);
	split_sreg_range(0X7D0226E0,"T",0X1,3);
	split_sreg_range(0X7D0226FC,"T",0X1,3);
	split_sreg_range(0X7D022706,"T",0X1,3);
	split_sreg_range(0X7D022720,"T",0X1,3);
	split_sreg_range(0X7D02274E,"T",0X1,3);
	split_sreg_range(0X7D022754,"T",0X1,3);
	split_sreg_range(0X7D022774,"T",0X1,3);
	split_sreg_range(0X7D0227A0,"T",0X1,3);
	split_sreg_range(0X7D0227A8,"T",0X1,3);
	split_sreg_range(0X7D0227AE,"T",0X1,3);
	split_sreg_range(0X7D0227BC,"T",0X1,3);
	split_sreg_range(0X7D022826,"T",0X1,3);
	split_sreg_range(0X7D022834,"T",0X1,3);
	split_sreg_range(0X7D02283E,"T",0X1,3);
	split_sreg_range(0X7D022850,"T",0X1,3);
	split_sreg_range(0X7D02285C,"T",0X1,3);
	split_sreg_range(0X7D022880,"T",0X1,3);
	split_sreg_range(0X7D022888,"T",0X1,3);
	split_sreg_range(0X7D0228B8,"T",0X1,3);
	split_sreg_range(0X7D0228E4,"T",0X1,3);
	split_sreg_range(0X7D022924,"T",0X1,3);
	split_sreg_range(0X7D02292C,"T",0X1,3);
	split_sreg_range(0X7D022948,"T",0X1,3);
	split_sreg_range(0X7D022954,"T",0X1,3);
	split_sreg_range(0X7D022988,"T",0X1,3);
	split_sreg_range(0X7D02299C,"T",0X1,3);
	split_sreg_range(0X7D0229A6,"T",0X1,3);
	split_sreg_range(0X7D0229B0,"T",0X1,3);
	split_sreg_range(0X7D0229E6,"T",0X1,3);
	split_sreg_range(0X7D022A1C,"T",0X1,3);
	split_sreg_range(0X7D022A26,"T",0X1,3);
	split_sreg_range(0X7D022A34,"T",0X1,3);
	split_sreg_range(0X7D022A92,"T",0X1,3);
	split_sreg_range(0X7D022A9C,"T",0X1,3);
	split_sreg_range(0X7D022AAA,"T",0X1,3);
	split_sreg_range(0X7D022B04,"T",0X1,3);
	split_sreg_range(0X7D022B1E,"T",0X1,3);
	split_sreg_range(0X7D022B26,"T",0X1,3);
	split_sreg_range(0X7D022B2C,"T",0X1,3);
	split_sreg_range(0X7D022B5E,"T",0X1,3);
	split_sreg_range(0X7D022B68,"T",0X1,3);
	split_sreg_range(0X7D022BDC,"T",0X1,3);
	split_sreg_range(0X7D022BDE,"T",0X1,3);
	split_sreg_range(0X7D022BFA,"T",0X1,3);
	split_sreg_range(0X7D022C0C,"T",0X1,3);
	split_sreg_range(0X7D022C44,"T",0X1,3);
	split_sreg_range(0X7D022C6E,"T",0X1,3);
	split_sreg_range(0X7D022C74,"T",0X1,3);
	split_sreg_range(0X7D022CC8,"T",0X1,3);
	split_sreg_range(0X7D022CD8,"T",0X1,3);
	split_sreg_range(0X7D022CE6,"T",0X1,3);
	split_sreg_range(0X7D022CF6,"T",0X1,3);
	split_sreg_range(0X7D022D00,"T",0X1,3);
	split_sreg_range(0X7D022D36,"T",0X1,3);
	split_sreg_range(0X7D022D3C,"T",0X1,3);
	split_sreg_range(0X7D022D7C,"T",0X1,3);
	split_sreg_range(0X7D022D8C,"T",0X1,3);
	split_sreg_range(0X7D022DDA,"T",0X1,3);
	split_sreg_range(0X7D022DEE,"T",0X1,3);
	split_sreg_range(0X7D022E1A,"T",0X1,3);
	split_sreg_range(0X7D022E40,"T",0X1,3);
	split_sreg_range(0X7D022E52,"T",0X1,3);
	split_sreg_range(0X7D022E62,"T",0X1,3);
	split_sreg_range(0X7D022E72,"T",0X1,3);
	split_sreg_range(0X7D022E76,"T",0X1,3);
	split_sreg_range(0X7D022EB6,"T",0X1,3);
	split_sreg_range(0X7D022EC8,"T",0X1,3);
	split_sreg_range(0X7D022EEC,"T",0X1,3);
	split_sreg_range(0X7D022F00,"T",0X1,3);
	split_sreg_range(0X7D022F18,"T",0X1,3);
	split_sreg_range(0X7D022F38,"T",0X1,3);
	split_sreg_range(0X7D022F42,"T",0X1,3);
	split_sreg_range(0X7D022F4C,"T",0X1,3);
	split_sreg_range(0X7D022F56,"T",0X1,3);
	split_sreg_range(0X7D022F62,"T",0X1,3);
	split_sreg_range(0X7D022F6E,"T",0X1,3);
	split_sreg_range(0X7D022F7A,"T",0X1,3);
	split_sreg_range(0X7D022FA4,"T",0X1,3);
	split_sreg_range(0X7D023008,"T",0X1,3);
	split_sreg_range(0X7D023050,"T",0X1,3);
	split_sreg_range(0X7D023054,"T",0X1,3);
	split_sreg_range(0X7D023058,"T",0X1,3);
	split_sreg_range(0X7D023068,"T",0X1,3);
	split_sreg_range(0X7D023076,"T",0X1,3);
	split_sreg_range(0X7D02308C,"T",0X1,3);
	split_sreg_range(0X7D0230A8,"T",0X1,3);
	split_sreg_range(0X7D0230B0,"T",0X1,3);
	split_sreg_range(0X7D0230B8,"T",0X1,3);
	split_sreg_range(0X7D0230DE,"T",0X1,3);
	split_sreg_range(0X7D0230E6,"T",0X1,3);
	split_sreg_range(0X7D0230F0,"T",0X1,3);
	split_sreg_range(0X7D023100,"T",0X1,3);
	split_sreg_range(0X7D02310A,"T",0X1,3);
	split_sreg_range(0X7D02310E,"T",0X1,3);
	split_sreg_range(0X7D023132,"T",0X1,3);
	split_sreg_range(0X7D02314C,"T",0X1,3);
	split_sreg_range(0X7D02317C,"T",0X1,3);
	split_sreg_range(0X7D0231B6,"T",0X1,3);
	split_sreg_range(0X7D0231BA,"T",0X1,3);
	split_sreg_range(0X7D0231E6,"T",0X1,3);
	split_sreg_range(0X7D0231EC,"T",0X1,3);
	split_sreg_range(0X7D0231F4,"T",0X1,3);
	split_sreg_range(0X7D023204,"T",0X1,3);
	split_sreg_range(0X7D023240,"T",0X1,3);
	split_sreg_range(0X7D023242,"T",0X1,3);
	split_sreg_range(0X7D023296,"T",0X1,3);
	split_sreg_range(0X7D0232C0,"T",0X1,3);
	split_sreg_range(0X7D0232D2,"T",0X1,3);
	split_sreg_range(0X7D0232D6,"T",0X1,3);
	split_sreg_range(0X7D0232F0,"T",0X1,3);
	split_sreg_range(0X7D0232FA,"T",0X1,3);
	split_sreg_range(0X7D023304,"T",0X1,3);
	split_sreg_range(0X7D023320,"T",0X1,3);
	split_sreg_range(0X7D023326,"T",0X1,3);
	split_sreg_range(0X7D023334,"T",0X1,3);
	split_sreg_range(0X7D023342,"T",0X1,3);
	split_sreg_range(0X7D023350,"T",0X1,3);
	split_sreg_range(0X7D02336C,"T",0X1,3);
	split_sreg_range(0X7D023376,"T",0X1,3);
	split_sreg_range(0X7D023380,"T",0X1,3);
	split_sreg_range(0X7D0233AE,"T",0X1,3);
	split_sreg_range(0X7D0233C6,"T",0X1,3);
	split_sreg_range(0X7D0233D0,"T",0X1,3);
	split_sreg_range(0X7D0233D8,"T",0X1,3);
	split_sreg_range(0X7D0233FE,"T",0X1,3);
	split_sreg_range(0X7D02340A,"T",0X1,3);
	split_sreg_range(0X7D02341E,"T",0X1,3);
	split_sreg_range(0X7D023436,"T",0X1,3);
	split_sreg_range(0X7D023440,"T",0X1,3);
	split_sreg_range(0X7D023444,"T",0X1,3);
	split_sreg_range(0X7D02344A,"T",0X1,3);
	split_sreg_range(0X7D02346C,"T",0X1,3);
	split_sreg_range(0X7D023476,"T",0X1,3);
	split_sreg_range(0X7D0234AA,"T",0X1,3);
	split_sreg_range(0X7D0234BC,"T",0X1,3);
	split_sreg_range(0X7D0234E2,"T",0X1,3);
	split_sreg_range(0X7D0234EE,"T",0X1,3);
	split_sreg_range(0X7D023504,"T",0X1,3);
	split_sreg_range(0X7D023510,"T",0X1,3);
	split_sreg_range(0X7D02351C,"T",0X1,3);
	split_sreg_range(0X7D023544,"T",0X1,3);
	split_sreg_range(0X7D023550,"T",0X1,3);
	split_sreg_range(0X7D02355C,"T",0X1,3);
	split_sreg_range(0X7D023594,"T",0X1,3);
	split_sreg_range(0X7D0235A8,"T",0X1,3);
	split_sreg_range(0X7D0235C8,"T",0X1,3);
	split_sreg_range(0X7D0235D2,"T",0X1,3);
	split_sreg_range(0X7D0235EC,"T",0X1,3);
	split_sreg_range(0X7D023602,"T",0X1,3);
	split_sreg_range(0X7D02360A,"T",0X1,3);
	split_sreg_range(0X7D023610,"T",0X1,3);
	split_sreg_range(0X7D02361A,"T",0X1,3);
	split_sreg_range(0X7D023624,"T",0X1,3);
	split_sreg_range(0X7D02362E,"T",0X1,3);
	split_sreg_range(0X7D02367A,"T",0X1,3);
	split_sreg_range(0X7D023696,"T",0X1,3);
	split_sreg_range(0X7D0236A0,"T",0X1,3);
	split_sreg_range(0X7D0236A8,"T",0X1,3);
	split_sreg_range(0X7D0236B8,"T",0X1,3);
	split_sreg_range(0X7D0236CE,"T",0X1,3);
	split_sreg_range(0X7D0236F0,"T",0X1,3);
	split_sreg_range(0X7D023708,"T",0X1,3);
	split_sreg_range(0X7D023712,"T",0X1,3);
	split_sreg_range(0X7D023728,"T",0X1,3);
	split_sreg_range(0X7D023732,"T",0X1,3);
	split_sreg_range(0X7D023770,"T",0X1,3);
	split_sreg_range(0X7D02378A,"T",0X1,3);
	split_sreg_range(0X7D023792,"T",0X1,3);
	split_sreg_range(0X7D0237B0,"T",0X1,3);
	split_sreg_range(0X7D0237D0,"T",0X1,3);
	split_sreg_range(0X7D0237DA,"T",0X1,3);
	split_sreg_range(0X7D0237F4,"T",0X1,3);
	split_sreg_range(0X7D023804,"T",0X1,3);
	split_sreg_range(0X7D02382C,"T",0X1,3);
	split_sreg_range(0X7D02383C,"T",0X1,3);
	split_sreg_range(0X7D02384A,"T",0X1,3);
	split_sreg_range(0X7D02384E,"T",0X1,3);
	split_sreg_range(0X7D023860,"T",0X1,3);
	split_sreg_range(0X7D023880,"T",0X1,3);
	split_sreg_range(0X7D023886,"T",0X1,3);
	split_sreg_range(0X7D023890,"T",0X1,3);
	split_sreg_range(0X7D0238D8,"T",0X1,3);
	split_sreg_range(0X7D02391C,"T",0X1,3);
	split_sreg_range(0X7D023966,"T",0X1,3);
	split_sreg_range(0X7D023970,"T",0X1,3);
	split_sreg_range(0X7D02397C,"T",0X1,3);
	split_sreg_range(0X7D023992,"T",0X1,3);
	split_sreg_range(0X7D023996,"T",0X1,3);
	split_sreg_range(0X7D0239B4,"T",0X1,3);
	split_sreg_range(0X7D0239CC,"T",0X1,3);
	split_sreg_range(0X7D0239D6,"T",0X1,3);
	split_sreg_range(0X7D0239EC,"T",0X1,3);
	split_sreg_range(0X7D0239F6,"T",0X1,3);
	split_sreg_range(0X7D023A34,"T",0X1,3);
	split_sreg_range(0X7D023A50,"T",0X1,3);
	split_sreg_range(0X7D023A58,"T",0X1,3);
	split_sreg_range(0X7D023A74,"T",0X1,3);
	split_sreg_range(0X7D023A98,"T",0X1,3);
	split_sreg_range(0X7D023AA4,"T",0X1,3);
	split_sreg_range(0X7D023AA8,"T",0X1,3);
	split_sreg_range(0X7D023AB2,"T",0X1,3);
	split_sreg_range(0X7D023AF0,"T",0X1,3);
	split_sreg_range(0X7D023AFA,"T",0X1,3);
	split_sreg_range(0X7D023B04,"T",0X1,3);
	split_sreg_range(0X7D023B1C,"T",0X1,3);
	split_sreg_range(0X7D023B40,"T",0X1,3);
	split_sreg_range(0X7D023B46,"T",0X1,3);
	split_sreg_range(0X7D023B50,"T",0X1,3);
	split_sreg_range(0X7D023B80,"T",0X1,3);
	split_sreg_range(0X7D023B8A,"T",0X1,3);
	split_sreg_range(0X7D023B94,"T",0X1,3);
	split_sreg_range(0X7D023B9E,"T",0X1,3);
	split_sreg_range(0X7D023BD4,"T",0X1,3);
	split_sreg_range(0X7D023BF2,"T",0X1,3);
	split_sreg_range(0X7D023BFC,"T",0X1,3);
	split_sreg_range(0X7D023C0C,"T",0X1,3);
	split_sreg_range(0X7D023C38,"T",0X1,3);
	split_sreg_range(0X7D023C8E,"T",0X1,3);
	split_sreg_range(0X7D023C98,"T",0X1,3);
	split_sreg_range(0X7D023CB6,"T",0X1,3);
	split_sreg_range(0X7D023CBA,"T",0X1,3);
	split_sreg_range(0X7D023CE0,"T",0X1,3);
	split_sreg_range(0X7D023D52,"T",0X1,3);
	split_sreg_range(0X7D023D6A,"T",0X1,3);
	split_sreg_range(0X7D023D7A,"T",0X1,3);
	split_sreg_range(0X7D023D8C,"T",0X1,3);
	split_sreg_range(0X7D023D96,"T",0X1,3);
	split_sreg_range(0X7D023DA0,"T",0X1,3);
	split_sreg_range(0X7D023DAC,"T",0X1,3);
	split_sreg_range(0X7D023DB6,"T",0X1,3);
	split_sreg_range(0X7D023DC0,"T",0X1,3);
	split_sreg_range(0X7D023DD4,"T",0X1,3);
	split_sreg_range(0X7D023DF2,"T",0X1,3);
	split_sreg_range(0X7D023DFC,"T",0X1,3);
	split_sreg_range(0X7D023E16,"T",0X1,3);
	split_sreg_range(0X7D023E22,"T",0X1,3);
	split_sreg_range(0X7D023E56,"T",0X1,3);
	split_sreg_range(0X7D023E62,"T",0X1,3);
	split_sreg_range(0X7D023E6E,"T",0X1,3);
	split_sreg_range(0X7D023E7A,"T",0X1,3);
	split_sreg_range(0X7D023E9C,"T",0X1,3);
	split_sreg_range(0X7D023EB0,"T",0X1,3);
	split_sreg_range(0X7D023EC2,"T",0X1,3);
	split_sreg_range(0X7D023ED4,"T",0X1,3);
	split_sreg_range(0X7D023F52,"T",0X1,3);
	split_sreg_range(0X7D023F5C,"T",0X1,3);
	split_sreg_range(0X7D023F66,"T",0X1,3);
	split_sreg_range(0X7D023F82,"T",0X1,3);
	split_sreg_range(0X7D023F88,"T",0X1,3);
	split_sreg_range(0X7D023F92,"T",0X1,3);
	split_sreg_range(0X7D023F9C,"T",0X1,3);
	split_sreg_range(0X7D023FA2,"T",0X1,3);
	split_sreg_range(0X7D023FB8,"T",0X1,3);
	split_sreg_range(0X7D023FBC,"T",0X1,3);
	split_sreg_range(0X7D02400E,"T",0X1,3);
	split_sreg_range(0X7D024016,"T",0X1,3);
	split_sreg_range(0X7D02408A,"T",0X1,3);
	split_sreg_range(0X7D024106,"T",0X1,3);
	split_sreg_range(0X7D02416A,"T",0X1,3);
	split_sreg_range(0X7D024178,"T",0X1,3);
	split_sreg_range(0X7D024198,"T",0X1,3);
	split_sreg_range(0X7D0241A0,"T",0X1,3);
	split_sreg_range(0X7D0241DA,"T",0X1,3);
	split_sreg_range(0X7D0241F4,"T",0X1,3);
	split_sreg_range(0X7D024224,"T",0X1,3);
	split_sreg_range(0X7D02422A,"T",0X1,3);
	split_sreg_range(0X7D024230,"T",0X1,3);
	split_sreg_range(0X7D024276,"T",0X1,3);
	split_sreg_range(0X7D0242FE,"T",0X1,3);
	split_sreg_range(0X7D02430C,"T",0X1,3);
	split_sreg_range(0X7D02431C,"T",0X1,3);
	split_sreg_range(0X7D024326,"T",0X1,3);
	split_sreg_range(0X7D024330,"T",0X1,3);
	split_sreg_range(0X7D024346,"T",0X1,3);
	split_sreg_range(0X7D024348,"T",0X1,3);
	split_sreg_range(0X7D02436A,"T",0X1,3);
	split_sreg_range(0X7D024374,"T",0X1,3);
	split_sreg_range(0X7D0243B4,"T",0X1,3);
	split_sreg_range(0X7D0243C0,"T",0X1,3);
	split_sreg_range(0X7D0243CA,"T",0X1,3);
	split_sreg_range(0X7D0243D4,"T",0X1,3);
	split_sreg_range(0X7D0243E6,"T",0X1,3);
	split_sreg_range(0X7D02441C,"T",0X1,3);
	split_sreg_range(0X7D024426,"T",0X1,3);
	split_sreg_range(0X7D02442C,"T",0X1,3);
	split_sreg_range(0X7D02443C,"T",0X1,3);
	split_sreg_range(0X7D024446,"T",0X1,3);
	split_sreg_range(0X7D024458,"T",0X1,3);
	split_sreg_range(0X7D0244D2,"T",0X1,3);
	split_sreg_range(0X7D02453A,"T",0X1,3);
	split_sreg_range(0X7D024580,"T",0X1,3);
	split_sreg_range(0X7D0245DA,"T",0X1,3);
	split_sreg_range(0X7D024604,"T",0X1,3);
	split_sreg_range(0X7D02460E,"T",0X1,3);
	split_sreg_range(0X7D024618,"T",0X1,3);
	split_sreg_range(0X7D024622,"T",0X1,3);
	split_sreg_range(0X7D02462C,"T",0X1,3);
	split_sreg_range(0X7D024636,"T",0X1,3);
	split_sreg_range(0X7D024640,"T",0X1,3);
	split_sreg_range(0X7D024656,"T",0X1,3);
	split_sreg_range(0X7D02468C,"T",0X1,3);
	split_sreg_range(0X7D0246BE,"T",0X1,3);
	split_sreg_range(0X7D0246C8,"T",0X1,3);
	split_sreg_range(0X7D0246DC,"T",0X1,3);
	split_sreg_range(0X7D0246EC,"T",0X1,3);
	split_sreg_range(0X7D02472A,"T",0X1,3);
	split_sreg_range(0X7D024734,"T",0X1,3);
	split_sreg_range(0X7D02476C,"T",0X1,3);
	split_sreg_range(0X7D024770,"T",0X1,3);
	split_sreg_range(0X7D02477C,"T",0X1,3);
	split_sreg_range(0X7D024786,"T",0X1,3);
	split_sreg_range(0X7D0247C0,"T",0X1,3);
	split_sreg_range(0X7D0247DC,"T",0X1,3);
	split_sreg_range(0X7D02480C,"T",0X1,3);
	split_sreg_range(0X7D024812,"T",0X1,3);
	split_sreg_range(0X7D024838,"T",0X1,3);
	split_sreg_range(0X7D0248A6,"T",0X1,3);
	split_sreg_range(0X7D0248B0,"T",0X1,3);
	split_sreg_range(0X7D0248BA,"T",0X1,3);
	split_sreg_range(0X7D0248C4,"T",0X1,3);
	split_sreg_range(0X7D0248D2,"T",0X1,3);
	split_sreg_range(0X7D0248F4,"T",0X1,3);
	split_sreg_range(0X7D024918,"T",0X1,3);
	split_sreg_range(0X7D02491E,"T",0X1,3);
	split_sreg_range(0X7D024980,"T",0X1,3);
	split_sreg_range(0X7D0249B0,"T",0X1,3);
	split_sreg_range(0X7D0249DA,"T",0X1,3);
	split_sreg_range(0X7D0249EC,"T",0X1,3);
	split_sreg_range(0X7D024A06,"T",0X1,3);
	split_sreg_range(0X7D024A10,"T",0X1,3);
	split_sreg_range(0X7D024A28,"T",0X1,3);
	split_sreg_range(0X7D024A3A,"T",0X1,3);
	split_sreg_range(0X7D024A3E,"T",0X1,3);
	split_sreg_range(0X7D024A48,"T",0X1,3);
	split_sreg_range(0X7D024A52,"T",0X1,3);
	split_sreg_range(0X7D024A5A,"T",0X1,3);
	split_sreg_range(0X7D024A70,"T",0X1,3);
	split_sreg_range(0X7D024A8E,"T",0X1,3);
	split_sreg_range(0X7D024AB0,"T",0X1,3);
	split_sreg_range(0X7D024ABA,"T",0X1,3);
	split_sreg_range(0X7D024ABE,"T",0X1,3);
	split_sreg_range(0X7D024AEC,"T",0X1,3);
	split_sreg_range(0X7D024AF6,"T",0X1,3);
	split_sreg_range(0X7D024B02,"T",0X1,3);
	split_sreg_range(0X7D024B3A,"T",0X1,3);
	split_sreg_range(0X7D024B48,"T",0X1,3);
	split_sreg_range(0X7D024B88,"T",0X1,3);
	split_sreg_range(0X7D024BB0,"T",0X1,3);
	split_sreg_range(0X7D024BE2,"T",0X1,3);
	split_sreg_range(0X7D024C00,"T",0X1,3);
	split_sreg_range(0X7D024CE8,"T",0X1,3);
	split_sreg_range(0X7D024E16,"T",0X1,3);
	split_sreg_range(0X7D024EF4,"T",0X1,3);
	split_sreg_range(0X7D024F10,"T",0X1,3);
	split_sreg_range(0X7D024F88,"T",0X1,3);
	split_sreg_range(0X7D024FD4,"T",0X1,3);
	split_sreg_range(0X7D024FDA,"T",0X1,3);
	split_sreg_range(0X7D024FFE,"T",0X1,3);
	split_sreg_range(0X7D02501A,"T",0X1,3);
	split_sreg_range(0X7D025048,"T",0X1,3);
	split_sreg_range(0X7D025054,"T",0X1,3);
	split_sreg_range(0X7D025058,"T",0X1,3);
	split_sreg_range(0X7D025094,"T",0X1,3);
	split_sreg_range(0X7D0250C6,"T",0X1,3);
	split_sreg_range(0X7D0250D0,"T",0X1,3);
	split_sreg_range(0X7D0250D4,"T",0X1,3);
	split_sreg_range(0X7D0250DA,"T",0X1,3);
	split_sreg_range(0X7D0250E8,"T",0X1,3);
	split_sreg_range(0X7D0250FA,"T",0X1,3);
	split_sreg_range(0X7D025106,"T",0X1,3);
	split_sreg_range(0X7D02511A,"T",0X1,3);
	split_sreg_range(0X7D025138,"T",0X1,3);
	split_sreg_range(0X7D02516C,"T",0X1,3);
	split_sreg_range(0X7D025180,"T",0X1,3);
	split_sreg_range(0X7D02518A,"T",0X1,3);
	split_sreg_range(0X7D0251A2,"T",0X1,3);
	split_sreg_range(0X7D0251B8,"T",0X1,3);
	split_sreg_range(0X7D0251BC,"T",0X1,3);
	split_sreg_range(0X7D0251D8,"T",0X1,3);
	split_sreg_range(0X7D025204,"T",0X1,3);
	split_sreg_range(0X7D025236,"T",0X1,3);
	split_sreg_range(0X7D025244,"T",0X1,3);
	split_sreg_range(0X7D0252D0,"T",0X1,3);
	split_sreg_range(0X7D0252F4,"T",0X1,3);
	split_sreg_range(0X7D02530E,"T",0X1,3);
	split_sreg_range(0X7D025322,"T",0X1,3);
	split_sreg_range(0X7D025328,"T",0X1,3);
	split_sreg_range(0X7D02533E,"T",0X1,3);
	split_sreg_range(0X7D025342,"T",0X1,3);
	split_sreg_range(0X7D025348,"T",0X1,3);
	split_sreg_range(0X7D025368,"T",0X1,3);
	split_sreg_range(0X7D025388,"T",0X1,3);
	split_sreg_range(0X7D025394,"T",0X1,3);
	split_sreg_range(0X7D025398,"T",0X1,3);
	split_sreg_range(0X7D0253A4,"T",0X1,3);
	split_sreg_range(0X7D0253AE,"T",0X1,3);
	split_sreg_range(0X7D0253F0,"T",0X1,3);
	split_sreg_range(0X7D02540C,"T",0X1,3);
	split_sreg_range(0X7D025480,"T",0X1,3);
	split_sreg_range(0X7D0254D8,"T",0X1,3);
	split_sreg_range(0X7D0254DE,"T",0X1,3);
	split_sreg_range(0X7D02550C,"T",0X1,3);
	split_sreg_range(0X7D025524,"T",0X1,3);
	split_sreg_range(0X7D025532,"T",0X1,3);
	split_sreg_range(0X7D025586,"T",0X1,3);
	split_sreg_range(0X7D02559C,"T",0X1,3);
	split_sreg_range(0X7D0255A8,"T",0X1,3);
	split_sreg_range(0X7D0255B4,"T",0X1,3);
	split_sreg_range(0X7D0255DE,"T",0X1,3);
	split_sreg_range(0X7D0255FC,"T",0X1,3);
	split_sreg_range(0X7D02562A,"T",0X1,3);
	split_sreg_range(0X7D02564C,"T",0X1,3);
	split_sreg_range(0X7D025650,"T",0X1,3);
	split_sreg_range(0X7D025664,"T",0X1,3);
	split_sreg_range(0X7D025668,"T",0X1,3);
	split_sreg_range(0X7D02568C,"T",0X1,3);
	split_sreg_range(0X7D02569E,"T",0X1,3);
	split_sreg_range(0X7D0256B2,"T",0X1,3);
	split_sreg_range(0X7D0256C4,"T",0X1,3);
	split_sreg_range(0X7D0256E0,"T",0X1,3);
	split_sreg_range(0X7D0256EC,"T",0X1,3);
	split_sreg_range(0X7D0256F2,"T",0X1,3);
	split_sreg_range(0X7D025702,"T",0X1,3);
	split_sreg_range(0X7D02571C,"T",0X1,3);
	split_sreg_range(0X7D025730,"T",0X1,3);
	split_sreg_range(0X7D02573E,"T",0X1,3);
	split_sreg_range(0X7D025762,"T",0X1,3);
	split_sreg_range(0X7D025772,"T",0X1,3);
	split_sreg_range(0X7D02579E,"T",0X1,3);
	split_sreg_range(0X7D0257A2,"T",0X1,3);
	split_sreg_range(0X7D0257A8,"T",0X1,3);
	split_sreg_range(0X7D0257B6,"T",0X1,3);
	split_sreg_range(0X7D0257BC,"T",0X1,3);
	split_sreg_range(0X7D0257D8,"T",0X1,3);
	split_sreg_range(0X7D0257F6,"T",0X1,3);
	split_sreg_range(0X7D025804,"T",0X1,3);
	split_sreg_range(0X7D025810,"T",0X1,3);
	split_sreg_range(0X7D025834,"T",0X1,3);
	split_sreg_range(0X7D025880,"T",0X1,3);
	split_sreg_range(0X7D02589E,"T",0X1,3);
	split_sreg_range(0X7D0258AE,"T",0X1,3);
	split_sreg_range(0X7D0258BA,"T",0X1,3);
	split_sreg_range(0X7D0258DE,"T",0X1,3);
	split_sreg_range(0X7D025914,"T",0X1,3);
	split_sreg_range(0X7D025926,"T",0X1,3);
	split_sreg_range(0X7D025938,"T",0X1,3);
	split_sreg_range(0X7D02595C,"T",0X1,3);
	split_sreg_range(0X7D025988,"T",0X1,3);
	split_sreg_range(0X7D025994,"T",0X1,3);
	split_sreg_range(0X7D0259AE,"T",0X1,3);
	split_sreg_range(0X7D0259C8,"T",0X1,3);
	split_sreg_range(0X7D0259E4,"T",0X1,3);
	split_sreg_range(0X7D0259EC,"T",0X1,3);
	split_sreg_range(0X7D0259FC,"T",0X1,3);
	split_sreg_range(0X7D025A08,"T",0X1,3);
	split_sreg_range(0X7D025A4C,"T",0X1,3);
	split_sreg_range(0X7D025AB2,"T",0X1,3);
	split_sreg_range(0X7D025AF0,"T",0X1,3);
	split_sreg_range(0X7D025B02,"T",0X1,3);
	split_sreg_range(0X7D025B0C,"T",0X1,3);
	split_sreg_range(0X7D025B2A,"T",0X1,3);
	split_sreg_range(0X7D025B3E,"T",0X1,3);
	split_sreg_range(0X7D025B54,"T",0X1,3);
	split_sreg_range(0X7D025B9C,"T",0X1,3);
	split_sreg_range(0X7D025BA4,"T",0X1,3);
	split_sreg_range(0X7D025C2C,"T",0X1,3);
	split_sreg_range(0X7D025C48,"T",0X1,3);
	split_sreg_range(0X7D025C6C,"T",0X1,3);
	split_sreg_range(0X7D025C8E,"T",0X1,3);
	split_sreg_range(0X7D025CEE,"T",0X1,3);
	split_sreg_range(0X7D025D06,"T",0X1,3);
	split_sreg_range(0X7D025D22,"T",0X1,3);
	split_sreg_range(0X7D025D40,"T",0X1,3);
	split_sreg_range(0X7D025D58,"T",0X1,3);
	split_sreg_range(0X7D025D96,"T",0X1,3);
	split_sreg_range(0X7D025DAC,"T",0X1,3);
	split_sreg_range(0X7D025DCA,"T",0X1,3);
	split_sreg_range(0X7D025DD8,"T",0X1,3);
	split_sreg_range(0X7D025DEE,"T",0X1,3);
	split_sreg_range(0X7D025E0C,"T",0X1,3);
	split_sreg_range(0X7D025E1E,"T",0X1,3);
	split_sreg_range(0X7D025E46,"T",0X1,3);
	split_sreg_range(0X7D025E70,"T",0X1,3);
	split_sreg_range(0X7D025EFC,"T",0X1,3);
	split_sreg_range(0X7D025F2C,"T",0X1,3);
	split_sreg_range(0X7D025F5C,"T",0X1,3);
	split_sreg_range(0X7D025F68,"T",0X1,3);
	split_sreg_range(0X7D025F88,"T",0X1,3);
	split_sreg_range(0X7D025F9A,"T",0X1,3);
	split_sreg_range(0X7D025FA6,"T",0X1,3);
	split_sreg_range(0X7D025FC4,"T",0X1,3);
	split_sreg_range(0X7D025FD4,"T",0X1,3);
	split_sreg_range(0X7D025FEC,"T",0X1,3);
	split_sreg_range(0X7D026008,"T",0X1,3);
	split_sreg_range(0X7D02604C,"T",0X1,3);
	split_sreg_range(0X7D026082,"T",0X1,3);
	split_sreg_range(0X7D026090,"T",0X1,3);
	split_sreg_range(0X7D0260B2,"T",0X1,3);
	split_sreg_range(0X7D0260C0,"T",0X1,3);
	split_sreg_range(0X7D0260DE,"T",0X1,3);
	split_sreg_range(0X7D0260EC,"T",0X1,3);
	split_sreg_range(0X7D02610A,"T",0X1,3);
	split_sreg_range(0X7D02613C,"T",0X1,3);
	split_sreg_range(0X7D026164,"T",0X1,3);
	split_sreg_range(0X7D026196,"T",0X1,3);
	split_sreg_range(0X7D0261A6,"T",0X1,3);
	split_sreg_range(0X7D0261B2,"T",0X1,3);
	split_sreg_range(0X7D0261BE,"T",0X1,3);
	split_sreg_range(0X7D0261CA,"T",0X1,3);
	split_sreg_range(0X7D0261DE,"T",0X1,3);
	split_sreg_range(0X7D0261E2,"T",0X1,3);
	split_sreg_range(0X7D02620A,"T",0X1,3);
	split_sreg_range(0X7D026266,"T",0X1,3);
	split_sreg_range(0X7D02628A,"T",0X1,3);
	split_sreg_range(0X7D02629C,"T",0X1,3);
	split_sreg_range(0X7D0262B2,"T",0X1,3);
	split_sreg_range(0X7D0262C0,"T",0X1,3);
	split_sreg_range(0X7D0262C8,"T",0X1,3);
	split_sreg_range(0X7D0262E6,"T",0X1,3);
	split_sreg_range(0X7D026304,"T",0X1,3);
	split_sreg_range(0X7D026322,"T",0X1,3);
	split_sreg_range(0X7D026374,"T",0X1,3);
	split_sreg_range(0X7D026390,"T",0X1,3);
	split_sreg_range(0X7D0263B2,"T",0X1,3);
	split_sreg_range(0X7D0263CA,"T",0X1,3);
	split_sreg_range(0X7D0263D8,"T",0X1,3);
	split_sreg_range(0X7D0263E0,"T",0X1,3);
	split_sreg_range(0X7D0263F8,"T",0X1,3);
	split_sreg_range(0X7D0263FE,"T",0X1,3);
	split_sreg_range(0X7D02641A,"T",0X1,3);
	split_sreg_range(0X7D026434,"T",0X1,3);
	split_sreg_range(0X7D026444,"T",0X1,3);
	split_sreg_range(0X7D02644C,"T",0X1,3);
	split_sreg_range(0X7D026458,"T",0X1,3);
	split_sreg_range(0X7D026474,"T",0X1,3);
	split_sreg_range(0X7D026490,"T",0X1,3);
	split_sreg_range(0X7D026498,"T",0X1,3);
	split_sreg_range(0X7D0264A4,"T",0X1,3);
	split_sreg_range(0X7D0264AE,"T",0X1,3);
	split_sreg_range(0X7D0264BA,"T",0X1,3);
	split_sreg_range(0X7D0264D8,"T",0X1,3);
	split_sreg_range(0X7D0264F0,"T",0X1,3);
	split_sreg_range(0X7D026512,"T",0X1,3);
	split_sreg_range(0X7D02652C,"T",0X1,3);
	split_sreg_range(0X7D02653A,"T",0X1,3);
	split_sreg_range(0X7D026554,"T",0X1,3);
	split_sreg_range(0X7D026574,"T",0X1,3);
	split_sreg_range(0X7D026598,"T",0X1,3);
	split_sreg_range(0X7D0265B2,"T",0X1,3);
	split_sreg_range(0X7D0265C8,"T",0X1,3);
	split_sreg_range(0X7D0265D0,"T",0X1,3);
	split_sreg_range(0X7D0265DC,"T",0X1,3);
	split_sreg_range(0X7D0265FA,"T",0X1,3);
	split_sreg_range(0X7D02660A,"T",0X1,3);
	split_sreg_range(0X7D026628,"T",0X1,3);
	split_sreg_range(0X7D02663C,"T",0X1,3);
	split_sreg_range(0X7D026644,"T",0X1,3);
	split_sreg_range(0X7D026650,"T",0X1,3);
	split_sreg_range(0X7D026660,"T",0X1,3);
	split_sreg_range(0X7D0266BA,"T",0X1,3);
	split_sreg_range(0X7D0266D0,"T",0X1,3);
	split_sreg_range(0X7D0266EC,"T",0X1,3);
	split_sreg_range(0X7D026700,"T",0X1,3);
	split_sreg_range(0X7D02670E,"T",0X1,3);
	split_sreg_range(0X7D02672A,"T",0X1,3);
	split_sreg_range(0X7D026740,"T",0X1,3);
	split_sreg_range(0X7D026762,"T",0X1,3);
	split_sreg_range(0X7D026776,"T",0X1,3);
	split_sreg_range(0X7D02677E,"T",0X1,3);
	split_sreg_range(0X7D026798,"T",0X1,3);
	split_sreg_range(0X7D0267B4,"T",0X1,3);
	split_sreg_range(0X7D0267CC,"T",0X1,3);
	split_sreg_range(0X7D0267E6,"T",0X1,3);
	split_sreg_range(0X7D0267F8,"T",0X1,3);
	split_sreg_range(0X7D026818,"T",0X1,3);
	split_sreg_range(0X7D026864,"T",0X1,3);
	split_sreg_range(0X7D0268A0,"T",0X1,3);
	split_sreg_range(0X7D0268B2,"T",0X1,3);
	split_sreg_range(0X7D0268D0,"T",0X1,3);
	split_sreg_range(0X7D0268EA,"T",0X1,3);
	split_sreg_range(0X7D0268F8,"T",0X1,3);
	split_sreg_range(0X7D0268FE,"T",0X1,3);
	split_sreg_range(0X7D026906,"T",0X1,3);
	split_sreg_range(0X7D026924,"T",0X1,3);
	split_sreg_range(0X7D02694C,"T",0X1,3);
	split_sreg_range(0X7D02695E,"T",0X1,3);
	split_sreg_range(0X7D02699A,"T",0X1,3);
	split_sreg_range(0X7D0269AC,"T",0X1,3);
	split_sreg_range(0X7D0269C8,"T",0X1,3);
	split_sreg_range(0X7D0269D4,"T",0X1,3);
	split_sreg_range(0X7D0269E2,"T",0X1,3);
	split_sreg_range(0X7D0269F2,"T",0X1,3);
	split_sreg_range(0X7D026A0E,"T",0X1,3);
	split_sreg_range(0X7D026A20,"T",0X1,3);
	split_sreg_range(0X7D026A30,"T",0X1,3);
	split_sreg_range(0X7D026A4E,"T",0X1,3);
	split_sreg_range(0X7D026A60,"T",0X1,3);
	split_sreg_range(0X7D026A7A,"T",0X1,3);
	split_sreg_range(0X7D026A9C,"T",0X1,3);
	split_sreg_range(0X7D026AAC,"T",0X1,3);
	split_sreg_range(0X7D026AB2,"T",0X1,3);
	split_sreg_range(0X7D026AC2,"T",0X1,3);
	split_sreg_range(0X7D026AD0,"T",0X1,3);
	split_sreg_range(0X7D026AFC,"T",0X1,3);
	split_sreg_range(0X7D026B16,"T",0X1,3);
	split_sreg_range(0X7D026B2C,"T",0X1,3);
	split_sreg_range(0X7D026B4A,"T",0X1,3);
	split_sreg_range(0X7D026B66,"T",0X1,3);
	split_sreg_range(0X7D026B82,"T",0X1,3);
	split_sreg_range(0X7D026BA0,"T",0X1,3);
	split_sreg_range(0X7D026BC4,"T",0X1,3);
	split_sreg_range(0X7D026BE2,"T",0X1,3);
	split_sreg_range(0X7D026BF0,"T",0X1,3);
	split_sreg_range(0X7D026C44,"T",0X1,3);
	split_sreg_range(0X7D026C54,"T",0X1,3);
	split_sreg_range(0X7D026C62,"T",0X1,3);
	split_sreg_range(0X7D026C7A,"T",0X1,3);
	split_sreg_range(0X7D026C8C,"T",0X1,3);
	split_sreg_range(0X7D026C90,"T",0X1,3);
	split_sreg_range(0X7D026C9A,"T",0X1,3);
	split_sreg_range(0X7D026CC6,"T",0X1,3);
	split_sreg_range(0X7D026CE0,"T",0X1,3);
	split_sreg_range(0X7D026CF6,"T",0X1,3);
	split_sreg_range(0X7D026D04,"T",0X1,3);
	split_sreg_range(0X7D026D1A,"T",0X1,3);
	split_sreg_range(0X7D026D28,"T",0X1,3);
	split_sreg_range(0X7D026D32,"T",0X1,3);
	split_sreg_range(0X7D026D50,"T",0X1,3);
	split_sreg_range(0X7D026D9E,"T",0X1,3);
	split_sreg_range(0X7D026DE0,"T",0X1,3);
	split_sreg_range(0X7D026E2C,"T",0X1,3);
	split_sreg_range(0X7D026E8A,"T",0X1,3);
	split_sreg_range(0X7D026E98,"T",0X1,3);
	split_sreg_range(0X7D026EBA,"T",0X1,3);
	split_sreg_range(0X7D026EC8,"T",0X1,3);
	split_sreg_range(0X7D026EE8,"T",0X1,3);
	split_sreg_range(0X7D026EF6,"T",0X1,3);
	split_sreg_range(0X7D026F0C,"T",0X1,3);
	split_sreg_range(0X7D026F2C,"T",0X1,3);
	split_sreg_range(0X7D026F6A,"T",0X1,3);
	split_sreg_range(0X7D026F76,"T",0X1,3);
	split_sreg_range(0X7D026F84,"T",0X1,3);
	split_sreg_range(0X7D026F9C,"T",0X1,3);
	split_sreg_range(0X7D026FF0,"T",0X1,3);
	split_sreg_range(0X7D027022,"T",0X1,3);
	split_sreg_range(0X7D027042,"T",0X1,3);
	split_sreg_range(0X7D027054,"T",0X1,3);
	split_sreg_range(0X7D02706A,"T",0X1,3);
	split_sreg_range(0X7D02707A,"T",0X1,3);
	split_sreg_range(0X7D027088,"T",0X1,3);
	split_sreg_range(0X7D0270A0,"T",0X1,3);
	split_sreg_range(0X7D0270AE,"T",0X1,3);
	split_sreg_range(0X7D0270BA,"T",0X1,3);
	split_sreg_range(0X7D0270CC,"T",0X1,3);
	split_sreg_range(0X7D0270DA,"T",0X1,3);
	split_sreg_range(0X7D0270F2,"T",0X1,3);
	split_sreg_range(0X7D0270F8,"T",0X1,3);
	split_sreg_range(0X7D027108,"T",0X1,3);
	split_sreg_range(0X7D02710E,"T",0X1,3);
	split_sreg_range(0X7D027124,"T",0X1,3);
	split_sreg_range(0X7D027162,"T",0X1,3);
	split_sreg_range(0X7D027174,"T",0X1,3);
	split_sreg_range(0X7D027198,"T",0X1,3);
	split_sreg_range(0X7D0271A6,"T",0X1,3);
	split_sreg_range(0X7D0271C4,"T",0X1,3);
	split_sreg_range(0X7D02721C,"T",0X1,3);
	split_sreg_range(0X7D027220,"T",0X1,3);
	split_sreg_range(0X7D027246,"T",0X1,3);
	split_sreg_range(0X7D02726A,"T",0X1,3);
	split_sreg_range(0X7D02727A,"T",0X1,3);
	split_sreg_range(0X7D02728E,"T",0X1,3);
	split_sreg_range(0X7D0272B6,"T",0X1,3);
	split_sreg_range(0X7D0272E2,"T",0X1,3);
	split_sreg_range(0X7D027328,"T",0X1,3);
	split_sreg_range(0X7D02733C,"T",0X1,3);
	split_sreg_range(0X7D02735C,"T",0X1,3);
	split_sreg_range(0X7D027392,"T",0X1,3);
	split_sreg_range(0X7D0273A6,"T",0X1,3);
	split_sreg_range(0X7D0273AC,"T",0X1,3);
	split_sreg_range(0X7D0273BE,"T",0X1,3);
	split_sreg_range(0X7D0273E8,"T",0X1,3);
	split_sreg_range(0X7D027408,"T",0X1,3);
	split_sreg_range(0X7D02741E,"T",0X1,3);
	split_sreg_range(0X7D027466,"T",0X1,3);
	split_sreg_range(0X7D027486,"T",0X1,3);
	split_sreg_range(0X7D027498,"T",0X1,3);
	split_sreg_range(0X7D0274B8,"T",0X1,3);
	split_sreg_range(0X7D02750A,"T",0X1,3);
	split_sreg_range(0X7D02751C,"T",0X1,3);
	split_sreg_range(0X7D0275BA,"T",0X1,3);
	split_sreg_range(0X7D0275E6,"T",0X1,3);
	split_sreg_range(0X7D027614,"T",0X1,3);
	split_sreg_range(0X7D027622,"T",0X1,3);
	split_sreg_range(0X7D027630,"T",0X1,3);
	split_sreg_range(0X7D027642,"T",0X1,3);
	split_sreg_range(0X7D027664,"T",0X1,3);
	split_sreg_range(0X7D027674,"T",0X1,3);
	split_sreg_range(0X7D027686,"T",0X1,3);
	split_sreg_range(0X7D0276A6,"T",0X1,3);
	split_sreg_range(0X7D0276B4,"T",0X1,3);
	split_sreg_range(0X7D0276D4,"T",0X1,3);
	split_sreg_range(0X7D0276E2,"T",0X1,3);
	split_sreg_range(0X7D0276F0,"T",0X1,3);
	split_sreg_range(0X7D02770A,"T",0X1,3);
	split_sreg_range(0X7D02772E,"T",0X1,3);
	split_sreg_range(0X7D027754,"T",0X1,3);
	split_sreg_range(0X7D02777C,"T",0X1,3);
	split_sreg_range(0X7D0277C2,"T",0X1,3);
	split_sreg_range(0X7D0277D6,"T",0X1,3);
	split_sreg_range(0X7D0277EC,"T",0X1,3);
	split_sreg_range(0X7D02780C,"T",0X1,3);
	split_sreg_range(0X7D027822,"T",0X1,3);
	split_sreg_range(0X7D02782C,"T",0X1,3);
	split_sreg_range(0X7D027844,"T",0X1,3);
	split_sreg_range(0X7D02784A,"T",0X1,3);
	split_sreg_range(0X7D02785A,"T",0X1,3);
	split_sreg_range(0X7D027860,"T",0X1,3);
	split_sreg_range(0X7D027864,"T",0X1,3);
	split_sreg_range(0X7D02787A,"T",0X1,3);
	split_sreg_range(0X7D02788E,"T",0X1,3);
	split_sreg_range(0X7D0278BC,"T",0X1,3);
	split_sreg_range(0X7D0278D0,"T",0X1,3);
	split_sreg_range(0X7D0278EE,"T",0X1,3);
	split_sreg_range(0X7D02790C,"T",0X1,3);
	split_sreg_range(0X7D027958,"T",0X1,3);
	split_sreg_range(0X7D027978,"T",0X1,3);
	split_sreg_range(0X7D0279A8,"T",0X1,3);
	split_sreg_range(0X7D0279C6,"T",0X1,3);
	split_sreg_range(0X7D0279D2,"T",0X1,3);
	split_sreg_range(0X7D0279E8,"T",0X1,3);
	split_sreg_range(0X7D027A2A,"T",0X1,3);
	split_sreg_range(0X7D027A42,"T",0X1,3);
	split_sreg_range(0X7D027A5E,"T",0X1,3);
	split_sreg_range(0X7D027A8E,"T",0X1,3);
	split_sreg_range(0X7D027AA4,"T",0X1,3);
	split_sreg_range(0X7D027AC6,"T",0X1,3);
	split_sreg_range(0X7D027AE0,"T",0X1,3);
	split_sreg_range(0X7D027AEA,"T",0X1,3);
	split_sreg_range(0X7D027AFC,"T",0X1,3);
	split_sreg_range(0X7D027B0C,"T",0X1,3);
	split_sreg_range(0X7D027B22,"T",0X1,3);
	split_sreg_range(0X7D027B3C,"T",0X1,3);
	split_sreg_range(0X7D027BA2,"T",0X1,3);
	split_sreg_range(0X7D027BA8,"T",0X1,3);
	split_sreg_range(0X7D027CCC,"T",0X1,3);
	split_sreg_range(0X7D027CFE,"T",0X1,3);
	split_sreg_range(0X7D027D30,"T",0X1,3);
	split_sreg_range(0X7D027D44,"T",0X1,3);
	split_sreg_range(0X7D027D64,"T",0X1,3);
	split_sreg_range(0X7D027D70,"T",0X1,3);
	split_sreg_range(0X7D027D8A,"T",0X1,3);
	split_sreg_range(0X7D027DA4,"T",0X1,3);
	split_sreg_range(0X7D027DB4,"T",0X1,3);
	split_sreg_range(0X7D027DDA,"T",0X1,3);
	split_sreg_range(0X7D027DEA,"T",0X1,3);
	split_sreg_range(0X7D027E04,"T",0X1,3);
	split_sreg_range(0X7D027E1E,"T",0X1,3);
	split_sreg_range(0X7D027E2A,"T",0X1,3);
	split_sreg_range(0X7D027E38,"T",0X1,3);
	split_sreg_range(0X7D027E44,"T",0X1,3);
	split_sreg_range(0X7D027E54,"T",0X1,3);
	split_sreg_range(0X7D027E68,"T",0X1,3);
	split_sreg_range(0X7D027E76,"T",0X1,3);
	split_sreg_range(0X7D027E92,"T",0X1,3);
	split_sreg_range(0X7D027EAC,"T",0X1,3);
	split_sreg_range(0X7D027EB8,"T",0X1,3);
	split_sreg_range(0X7D027ED4,"T",0X1,3);
	split_sreg_range(0X7D027EE0,"T",0X1,3);
	split_sreg_range(0X7D027EEC,"T",0X1,3);
	split_sreg_range(0X7D027EF8,"T",0X1,3);
	split_sreg_range(0X7D027F14,"T",0X1,3);
	split_sreg_range(0X7D027F20,"T",0X1,3);
	split_sreg_range(0X7D027F38,"T",0X1,3);
	split_sreg_range(0X7D027F52,"T",0X1,3);
	split_sreg_range(0X7D027F5E,"T",0X1,3);
	split_sreg_range(0X7D027F76,"T",0X1,3);
	split_sreg_range(0X7D027F82,"T",0X1,3);
	split_sreg_range(0X7D027F9A,"T",0X1,3);
	split_sreg_range(0X7D027FA6,"T",0X1,3);
	split_sreg_range(0X7D027FC2,"T",0X1,3);
	split_sreg_range(0X7D027FCE,"T",0X1,3);
	split_sreg_range(0X7D027FE0,"T",0X1,3);
	split_sreg_range(0X7D02801E,"T",0X1,3);
	split_sreg_range(0X7D02804C,"T",0X1,3);
	split_sreg_range(0X7D028070,"T",0X1,3);
	split_sreg_range(0X7D028080,"T",0X1,3);
	split_sreg_range(0X7D028094,"T",0X1,3);
	split_sreg_range(0X7D0280BE,"T",0X1,3);
	split_sreg_range(0X7D0280E6,"T",0X1,3);
	split_sreg_range(0X7D0280F4,"T",0X1,3);
	split_sreg_range(0X7D028108,"T",0X1,3);
	split_sreg_range(0X7D028132,"T",0X1,3);
	split_sreg_range(0X7D028164,"T",0X1,3);
	split_sreg_range(0X7D028172,"T",0X1,3);
	split_sreg_range(0X7D028180,"T",0X1,3);
	split_sreg_range(0X7D02818E,"T",0X1,3);
	split_sreg_range(0X7D02819C,"T",0X1,3);
	split_sreg_range(0X7D02820C,"T",0X1,3);
	split_sreg_range(0X7D02821A,"T",0X1,3);
	split_sreg_range(0X7D028240,"T",0X1,3);
	split_sreg_range(0X7D02824C,"T",0X1,3);
	split_sreg_range(0X7D028256,"T",0X1,3);
	split_sreg_range(0X7D028260,"T",0X1,3);
	split_sreg_range(0X7D028272,"T",0X1,3);
	split_sreg_range(0X7D028284,"T",0X1,3);
	split_sreg_range(0X7D028296,"T",0X1,3);
	split_sreg_range(0X7D0282AA,"T",0X1,3);
	split_sreg_range(0X7D0282BC,"T",0X1,3);
	split_sreg_range(0X7D0282C4,"T",0X1,3);
	split_sreg_range(0X7D0282F8,"T",0X1,3);
	split_sreg_range(0X7D028308,"T",0X1,3);
	split_sreg_range(0X7D028364,"T",0X1,3);
	split_sreg_range(0X7D02837E,"T",0X1,3);
	split_sreg_range(0X7D0283BC,"T",0X1,3);
	split_sreg_range(0X7D028428,"T",0X1,3);
	split_sreg_range(0X7D028500,"T",0X1,3);
	split_sreg_range(0X7D028508,"T",0X1,3);
	split_sreg_range(0X7D02850E,"T",0X1,3);
	split_sreg_range(0X7D02851C,"T",0X1,3);
	split_sreg_range(0X7D02855C,"T",0X1,3);
	split_sreg_range(0X7D02856E,"T",0X1,3);
	split_sreg_range(0X7D0285BA,"T",0X1,3);
	split_sreg_range(0X7D02861A,"T",0X1,3);
	split_sreg_range(0X7D02863C,"T",0X1,3);
	split_sreg_range(0X7D02864C,"T",0X1,3);
	split_sreg_range(0X7D028668,"T",0X1,3);
	split_sreg_range(0X7D0286A8,"T",0X1,3);
	split_sreg_range(0X7D0286B6,"T",0X1,3);
	split_sreg_range(0X7D0286C4,"T",0X1,3);
	split_sreg_range(0X7D0286D2,"T",0X1,3);
	split_sreg_range(0X7D0286E6,"T",0X1,3);
	split_sreg_range(0X7D0286F4,"T",0X1,3);
	split_sreg_range(0X7D028714,"T",0X1,3);
	split_sreg_range(0X7D028758,"T",0X1,3);
	split_sreg_range(0X7D028770,"T",0X1,3);
	split_sreg_range(0X7D028788,"T",0X1,3);
	split_sreg_range(0X7D0287AC,"T",0X1,3);
	split_sreg_range(0X7D0287BE,"T",0X1,3);
	split_sreg_range(0X7D0287E6,"T",0X1,3);
	split_sreg_range(0X7D02880C,"T",0X1,3);
	split_sreg_range(0X7D02881C,"T",0X1,3);
	split_sreg_range(0X7D028840,"T",0X1,3);
	split_sreg_range(0X7D028854,"T",0X1,3);
	split_sreg_range(0X7D028868,"T",0X1,3);
	split_sreg_range(0X7D02887E,"T",0X1,3);
	split_sreg_range(0X7D028898,"T",0X1,3);
	split_sreg_range(0X7D0288B6,"T",0X1,3);
	split_sreg_range(0X7D0288CC,"T",0X1,3);
	split_sreg_range(0X7D0288E2,"T",0X1,3);
	split_sreg_range(0X7D0288F8,"T",0X1,3);
	split_sreg_range(0X7D028926,"T",0X1,3);
	split_sreg_range(0X7D028934,"T",0X1,3);
	split_sreg_range(0X7D02893C,"T",0X1,3);
	split_sreg_range(0X7D028944,"T",0X1,3);
	split_sreg_range(0X7D028964,"T",0X1,3);
	split_sreg_range(0X7D0289A2,"T",0X1,3);
	split_sreg_range(0X7D0289B6,"T",0X1,3);
	split_sreg_range(0X7D0289FA,"T",0X1,3);
	split_sreg_range(0X7D028A0C,"T",0X1,3);
	split_sreg_range(0X7D028A70,"T",0X1,3);
	split_sreg_range(0X7D028A82,"T",0X1,3);
	split_sreg_range(0X7D028AAC,"T",0X1,3);
	split_sreg_range(0X7D028AD0,"T",0X1,3);
	split_sreg_range(0X7D028AE4,"T",0X1,3);
	split_sreg_range(0X7D028AF6,"T",0X1,3);
	split_sreg_range(0X7D028B3A,"T",0X1,3);
	split_sreg_range(0X7D028B48,"T",0X1,3);
	split_sreg_range(0X7D028B60,"T",0X1,3);
	split_sreg_range(0X7D028B7C,"T",0X1,3);
	split_sreg_range(0X7D028BA0,"T",0X1,3);
	split_sreg_range(0X7D028BA6,"T",0X1,3);
	split_sreg_range(0X7D028C20,"T",0X1,3);
	split_sreg_range(0X7D028C70,"T",0X1,3);
	split_sreg_range(0X7D028CCA,"T",0X1,3);
	split_sreg_range(0X7D028CD6,"T",0X1,3);
	split_sreg_range(0X7D028D04,"T",0X1,3);
	split_sreg_range(0X7D028D16,"T",0X1,3);
	split_sreg_range(0X7D028D36,"T",0X1,3);
	split_sreg_range(0X7D028D76,"T",0X1,3);
	split_sreg_range(0X7D028D88,"T",0X1,3);
	split_sreg_range(0X7D028DA4,"T",0X1,3);
	split_sreg_range(0X7D028DB2,"T",0X1,3);
	split_sreg_range(0X7D028DBA,"T",0X1,3);
	split_sreg_range(0X7D028E80,"T",0X1,3);
	split_sreg_range(0X7D028EA6,"T",0X1,3);
	split_sreg_range(0X7D028F0A,"T",0X1,3);
	split_sreg_range(0X7D028F18,"T",0X1,3);
	split_sreg_range(0X7D028F66,"T",0X1,3);
	split_sreg_range(0X7D028F86,"T",0X1,3);
	split_sreg_range(0X7D028FAA,"T",0X1,3);
	split_sreg_range(0X7D028FF0,"T",0X1,3);
	split_sreg_range(0X7D029004,"T",0X1,3);
	split_sreg_range(0X7D029024,"T",0X1,3);
	split_sreg_range(0X7D029032,"T",0X1,3);
	split_sreg_range(0X7D029044,"T",0X1,3);
	split_sreg_range(0X7D029072,"T",0X1,3);
	split_sreg_range(0X7D02908A,"T",0X1,3);
	split_sreg_range(0X7D029090,"T",0X1,3);
	split_sreg_range(0X7D029094,"T",0X1,3);
	split_sreg_range(0X7D0290BA,"T",0X1,3);
	split_sreg_range(0X7D0290C0,"T",0X1,3);
	split_sreg_range(0X7D029122,"T",0X1,3);
	split_sreg_range(0X7D029138,"T",0X1,3);
	split_sreg_range(0X7D02914E,"T",0X1,3);
	split_sreg_range(0X7D029164,"T",0X1,3);
	split_sreg_range(0X7D029198,"T",0X1,3);
	split_sreg_range(0X7D0291AE,"T",0X1,3);
	split_sreg_range(0X7D0291C8,"T",0X1,3);
	split_sreg_range(0X7D0291E8,"T",0X1,3);
	split_sreg_range(0X7D0291F2,"T",0X1,3);
	split_sreg_range(0X7D02920C,"T",0X1,3);
	split_sreg_range(0X7D029230,"T",0X1,3);
	split_sreg_range(0X7D02925C,"T",0X1,3);
	split_sreg_range(0X7D029272,"T",0X1,3);
	split_sreg_range(0X7D02928C,"T",0X1,3);
	split_sreg_range(0X7D0292C2,"T",0X1,3);
	split_sreg_range(0X7D0292C6,"T",0X1,3);
	split_sreg_range(0X7D0292DC,"T",0X1,3);
	split_sreg_range(0X7D0292F8,"T",0X1,3);
	split_sreg_range(0X7D029338,"T",0X1,3);
	split_sreg_range(0X7D02934C,"T",0X1,3);
	split_sreg_range(0X7D029356,"T",0X1,3);
	split_sreg_range(0X7D029360,"T",0X1,3);
	split_sreg_range(0X7D029380,"T",0X1,3);
	split_sreg_range(0X7D0294A0,"T",0X1,3);
	split_sreg_range(0X7D0294B0,"T",0X1,3);
	split_sreg_range(0X7D0294C2,"T",0X1,3);
	split_sreg_range(0X7D0294CA,"T",0X1,3);
	split_sreg_range(0X7D0294D0,"T",0X1,3);
	split_sreg_range(0X7D029504,"T",0X1,3);
	split_sreg_range(0X7D029512,"T",0X1,3);
	split_sreg_range(0X7D029546,"T",0X1,3);
	split_sreg_range(0X7D029570,"T",0X1,3);
	split_sreg_range(0X7D029584,"T",0X1,3);
	split_sreg_range(0X7D0295A0,"T",0X1,3);
	split_sreg_range(0X7D0295AA,"T",0X1,3);
	split_sreg_range(0X7D0295FE,"T",0X1,3);
	split_sreg_range(0X7D02965C,"T",0X1,3);
	split_sreg_range(0X7D029690,"T",0X1,3);
	split_sreg_range(0X7D02969A,"T",0X1,3);
	split_sreg_range(0X7D0296B4,"T",0X1,3);
	split_sreg_range(0X7D0296C8,"T",0X1,3);
	split_sreg_range(0X7D0296D4,"T",0X1,3);
	split_sreg_range(0X7D029742,"T",0X1,3);
	split_sreg_range(0X7D029750,"T",0X1,3);
	split_sreg_range(0X7D0297BC,"T",0X1,3);
	split_sreg_range(0X7D0297D4,"T",0X1,3);
	split_sreg_range(0X7D029804,"T",0X1,3);
	split_sreg_range(0X7D029808,"T",0X1,3);
	split_sreg_range(0X7D029810,"T",0X1,3);
	split_sreg_range(0X7D029818,"T",0X1,3);
	split_sreg_range(0X7D02989E,"T",0X1,3);
	split_sreg_range(0X7D0298B4,"T",0X1,3);
	split_sreg_range(0X7D0298C6,"T",0X1,3);
	split_sreg_range(0X7D0298E6,"T",0X1,3);
	split_sreg_range(0X7D029904,"T",0X1,3);
	split_sreg_range(0X7D02991C,"T",0X1,3);
	split_sreg_range(0X7D02992A,"T",0X1,3);
	split_sreg_range(0X7D029956,"T",0X1,3);
	split_sreg_range(0X7D029970,"T",0X1,3);
	split_sreg_range(0X7D029990,"T",0X1,3);
	split_sreg_range(0X7D0299A6,"T",0X1,3);
	split_sreg_range(0X7D0299BC,"T",0X1,3);
	split_sreg_range(0X7D0299CA,"T",0X1,3);
	split_sreg_range(0X7D0299FC,"T",0X1,3);
	split_sreg_range(0X7D029A24,"T",0X1,3);
	split_sreg_range(0X7D029A50,"T",0X1,3);
	split_sreg_range(0X7D029A66,"T",0X1,3);
	split_sreg_range(0X7D029A7C,"T",0X1,3);
	split_sreg_range(0X7D029A92,"T",0X1,3);
	split_sreg_range(0X7D029ABA,"T",0X1,3);
	split_sreg_range(0X7D029AD6,"T",0X1,3);
	split_sreg_range(0X7D029AF6,"T",0X1,3);
	split_sreg_range(0X7D029B12,"T",0X1,3);
	split_sreg_range(0X7D029B28,"T",0X1,3);
	split_sreg_range(0X7D029B42,"T",0X1,3);
	split_sreg_range(0X7D029B50,"T",0X1,3);
	split_sreg_range(0X7D029B5E,"T",0X1,3);
	split_sreg_range(0X7D029BA8,"T",0X1,3);
	split_sreg_range(0X7D029BBA,"T",0X1,3);
	split_sreg_range(0X7D029BE0,"T",0X1,3);
	split_sreg_range(0X7D029BF2,"T",0X1,3);
	split_sreg_range(0X7D029C16,"T",0X1,3);
	split_sreg_range(0X7D029C28,"T",0X1,3);
	split_sreg_range(0X7D029C34,"T",0X1,3);
	split_sreg_range(0X7D029C46,"T",0X1,3);
	split_sreg_range(0X7D029C4E,"T",0X1,3);
	split_sreg_range(0X7D029C54,"T",0X1,3);
	split_sreg_range(0X7D029C90,"T",0X1,3);
	split_sreg_range(0X7D029CC6,"T",0X1,3);
	split_sreg_range(0X7D029CDC,"T",0X1,3);
	split_sreg_range(0X7D029CFA,"T",0X1,3);
	split_sreg_range(0X7D029D00,"T",0X1,3);
	split_sreg_range(0X7D029D1C,"T",0X1,3);
	split_sreg_range(0X7D029D24,"T",0X1,3);
	split_sreg_range(0X7D029DC2,"T",0X1,3);
	split_sreg_range(0X7D029E4E,"T",0X1,3);
	split_sreg_range(0X7D029E6C,"T",0X1,3);
	split_sreg_range(0X7D029EB8,"T",0X1,3);
	split_sreg_range(0X7D029ED8,"T",0X1,3);
	split_sreg_range(0X7D029EFA,"T",0X1,3);
	split_sreg_range(0X7D029F12,"T",0X1,3);
	split_sreg_range(0X7D029F1C,"T",0X1,3);
	split_sreg_range(0X7D029F4E,"T",0X1,3);
	split_sreg_range(0X7D029F54,"T",0X1,3);
	split_sreg_range(0X7D029F6C,"T",0X1,3);
	split_sreg_range(0X7D029F8C,"T",0X1,3);
	split_sreg_range(0X7D029FA6,"T",0X1,3);
	split_sreg_range(0X7D029FB8,"T",0X1,3);
	split_sreg_range(0X7D029FD0,"T",0X1,3);
	split_sreg_range(0X7D029FE8,"T",0X1,3);
	split_sreg_range(0X7D02A000,"T",0X1,3);
	split_sreg_range(0X7D02A022,"T",0X1,3);
	split_sreg_range(0X7D02A024,"T",0X1,3);
	split_sreg_range(0X7D02A038,"T",0X1,3);
	split_sreg_range(0X7D02A044,"T",0X1,3);
	split_sreg_range(0X7D02A06E,"T",0X1,3);
	split_sreg_range(0X7D02A086,"T",0X1,3);
	split_sreg_range(0X7D02A0A0,"T",0X1,3);
	split_sreg_range(0X7D02A0C2,"T",0X1,3);
	split_sreg_range(0X7D02A0C8,"T",0X1,3);
	split_sreg_range(0X7D02A0D6,"T",0X1,3);
	split_sreg_range(0X7D02A0E8,"T",0X1,3);
	split_sreg_range(0X7D02A164,"T",0X1,3);
	split_sreg_range(0X7D02A166,"T",0X1,3);
	split_sreg_range(0X7D02A16C,"T",0X1,3);
	split_sreg_range(0X7D02A188,"T",0X1,3);
	split_sreg_range(0X7D02A198,"T",0X1,3);
	split_sreg_range(0X7D02A1AE,"T",0X1,3);
	split_sreg_range(0X7D02A1DE,"T",0X1,3);
	split_sreg_range(0X7D02A1EC,"T",0X1,3);
	split_sreg_range(0X7D02A1FE,"T",0X1,3);
	split_sreg_range(0X7D02A204,"T",0X1,3);
	split_sreg_range(0X7D02A23A,"T",0X1,3);
	split_sreg_range(0X7D02A27A,"T",0X1,3);
	split_sreg_range(0X7D02A2BA,"T",0X1,3);
	split_sreg_range(0X7D02A2FE,"T",0X1,3);
	split_sreg_range(0X7D02A352,"T",0X1,3);
	split_sreg_range(0X7D02A362,"T",0X1,3);
	split_sreg_range(0X7D02A374,"T",0X1,3);
	split_sreg_range(0X7D02A38A,"T",0X1,3);
	split_sreg_range(0X7D02A3D2,"T",0X1,3);
	split_sreg_range(0X7D02A3F8,"T",0X1,3);
	split_sreg_range(0X7D02A42C,"T",0X1,3);
	split_sreg_range(0X7D02A44A,"T",0X1,3);
	split_sreg_range(0X7D02A464,"T",0X1,3);
	split_sreg_range(0X7D02A486,"T",0X1,3);
	split_sreg_range(0X7D02A4A0,"T",0X1,3);
	split_sreg_range(0X7D02A500,"T",0X1,3);
	split_sreg_range(0X7D02A53A,"T",0X1,3);
	split_sreg_range(0X7D02A5A2,"T",0X1,3);
	split_sreg_range(0X7D02A5BC,"T",0X1,3);
	split_sreg_range(0X7D02A61E,"T",0X1,3);
	split_sreg_range(0X7D02A63C,"T",0X1,3);
	split_sreg_range(0X7D02A64C,"T",0X1,3);
	split_sreg_range(0X7D02A66C,"T",0X1,3);
	split_sreg_range(0X7D02A684,"T",0X1,3);
	split_sreg_range(0X7D02A6D2,"T",0X1,3);
	split_sreg_range(0X7D02A6E8,"T",0X1,3);
	split_sreg_range(0X7D02A720,"T",0X1,3);
	split_sreg_range(0X7D02A798,"T",0X1,3);
	split_sreg_range(0X7D02A7B0,"T",0X1,3);
	split_sreg_range(0X7D02A7F4,"T",0X1,3);
	split_sreg_range(0X7D02A81A,"T",0X1,3);
	split_sreg_range(0X7D02A828,"T",0X1,3);
	split_sreg_range(0X7D02A82E,"T",0X1,3);
	split_sreg_range(0X7D02A860,"T",0X1,3);
	split_sreg_range(0X7D02A87C,"T",0X1,3);
	split_sreg_range(0X7D02A8BA,"T",0X1,3);
	split_sreg_range(0X7D02A8D4,"T",0X1,3);
	split_sreg_range(0X7D02A90A,"T",0X1,3);
	split_sreg_range(0X7D02A91C,"T",0X1,3);
	split_sreg_range(0X7D02A94A,"T",0X1,3);
	split_sreg_range(0X7D02A97C,"T",0X1,3);
	split_sreg_range(0X7D02A9AC,"T",0X1,3);
	split_sreg_range(0X7D02A9BE,"T",0X1,3);
	split_sreg_range(0X7D02A9E0,"T",0X1,3);
	split_sreg_range(0X7D02A9EA,"T",0X1,3);
	split_sreg_range(0X7D02A9FA,"T",0X1,3);
	split_sreg_range(0X7D02AA12,"T",0X1,3);
	split_sreg_range(0X7D02AA20,"T",0X1,3);
	split_sreg_range(0X7D02AA32,"T",0X1,3);
	split_sreg_range(0X7D02AA66,"T",0X1,3);
	split_sreg_range(0X7D02AA78,"T",0X1,3);
	split_sreg_range(0X7D02AABA,"T",0X1,3);
	split_sreg_range(0X7D02AAC4,"T",0X1,3);
	split_sreg_range(0X7D02AAEE,"T",0X1,3);
	split_sreg_range(0X7D02AB3A,"T",0X1,3);
	split_sreg_range(0X7D02AB72,"T",0X1,3);
	split_sreg_range(0X7D02AB92,"T",0X1,3);
	split_sreg_range(0X7D02ABB0,"T",0X1,3);
	split_sreg_range(0X7D02ABB6,"T",0X1,3);
	split_sreg_range(0X7D02ABC4,"T",0X1,3);
	split_sreg_range(0X7D02ABD2,"T",0X1,3);
	split_sreg_range(0X7D02ABE4,"T",0X1,3);
	split_sreg_range(0X7D02ABF8,"T",0X1,3);
	split_sreg_range(0X7D02AC0A,"T",0X1,3);
	split_sreg_range(0X7D02AC14,"T",0X1,3);
	split_sreg_range(0X7D02AC68,"T",0X1,3);
	split_sreg_range(0X7D02AC76,"T",0X1,3);
	split_sreg_range(0X7D02AC86,"T",0X1,3);
	split_sreg_range(0X7D02AC98,"T",0X1,3);
	split_sreg_range(0X7D02ACA2,"T",0X1,3);
	split_sreg_range(0X7D02ACA4,"T",0X1,3);
	split_sreg_range(0X7D02ACAA,"T",0X1,3);
	split_sreg_range(0X7D02ACC0,"T",0X1,3);
	split_sreg_range(0X7D02ACD4,"T",0X1,3);
	split_sreg_range(0X7D02ACF6,"T",0X1,3);
	split_sreg_range(0X7D02AD20,"T",0X1,3);
	split_sreg_range(0X7D02AD22,"T",0X1,3);
	split_sreg_range(0X7D02AD28,"T",0X1,3);
	split_sreg_range(0X7D02AD38,"T",0X1,3);
	split_sreg_range(0X7D02AD90,"T",0X1,3);
	split_sreg_range(0X7D02AD9E,"T",0X1,3);
	split_sreg_range(0X7D02ADE4,"T",0X1,3);
	split_sreg_range(0X7D02AE0C,"T",0X1,3);
	split_sreg_range(0X7D02AE10,"T",0X1,3);
	split_sreg_range(0X7D02AE24,"T",0X1,3);
	split_sreg_range(0X7D02AE66,"T",0X1,3);
	split_sreg_range(0X7D02AEBE,"T",0X1,3);
	split_sreg_range(0X7D02AEE6,"T",0X1,3);
	split_sreg_range(0X7D02AF20,"T",0X1,3);
	split_sreg_range(0X7D02AF34,"T",0X1,3);
	split_sreg_range(0X7D02AF48,"T",0X1,3);
	split_sreg_range(0X7D02AF64,"T",0X1,3);
	split_sreg_range(0X7D02AF76,"T",0X1,3);
	split_sreg_range(0X7D02AF94,"T",0X1,3);
	split_sreg_range(0X7D02AFA6,"T",0X1,3);
	split_sreg_range(0X7D02AFC4,"T",0X1,3);
	split_sreg_range(0X7D02AFD0,"T",0X1,3);
	split_sreg_range(0X7D02AFE8,"T",0X1,3);
	split_sreg_range(0X7D02B004,"T",0X1,3);
	split_sreg_range(0X7D02B00A,"T",0X1,3);
	split_sreg_range(0X7D02B0A8,"T",0X1,3);
	split_sreg_range(0X7D02B0DA,"T",0X1,3);
	split_sreg_range(0X7D02B13C,"T",0X1,3);
	split_sreg_range(0X7D02B154,"T",0X1,3);
	split_sreg_range(0X7D02B158,"T",0X1,3);
	split_sreg_range(0X7D02B1D0,"T",0X1,3);
	split_sreg_range(0X7D02B20A,"T",0X1,3);
	split_sreg_range(0X7D02B26E,"T",0X1,3);
	split_sreg_range(0X7D02B2F2,"T",0X1,3);
	split_sreg_range(0X7D02B348,"T",0X1,3);
	split_sreg_range(0X7D02B350,"T",0X1,3);
	split_sreg_range(0X7D02B35A,"T",0X1,3);
	split_sreg_range(0X7D02B368,"T",0X1,3);
	split_sreg_range(0X7D02B392,"T",0X1,3);
	split_sreg_range(0X7D02B398,"T",0X1,3);
	split_sreg_range(0X7D02B3C0,"T",0X1,3);
	split_sreg_range(0X7D02B3C4,"T",0X1,3);
	split_sreg_range(0X7D02B400,"T",0X1,3);
	split_sreg_range(0X7D02B440,"T",0X1,3);
	split_sreg_range(0X7D02B456,"T",0X1,3);
	split_sreg_range(0X7D02B466,"T",0X1,3);
	split_sreg_range(0X7D02B47E,"T",0X1,3);
	split_sreg_range(0X7D02B4AE,"T",0X1,3);
	split_sreg_range(0X7D02B4B4,"T",0X1,3);
	split_sreg_range(0X7D02B4E4,"T",0X1,3);
	split_sreg_range(0X7D02B502,"T",0X1,3);
	split_sreg_range(0X7D02B508,"T",0X1,3);
	split_sreg_range(0X7D02B538,"T",0X1,3);
	split_sreg_range(0X7D02B69E,"T",0X1,3);
	split_sreg_range(0X7D02B6C0,"T",0X1,3);
	split_sreg_range(0X7D02B6DA,"T",0X1,3);
	split_sreg_range(0X7D02B6E2,"T",0X1,3);
	split_sreg_range(0X7D02B71E,"T",0X1,3);
	split_sreg_range(0X7D02B776,"T",0X1,3);
	split_sreg_range(0X7D02B784,"T",0X1,3);
	split_sreg_range(0X7D02B79C,"T",0X1,3);
	split_sreg_range(0X7D02B7A2,"T",0X1,3);
	split_sreg_range(0X7D02B7E4,"T",0X1,3);
	split_sreg_range(0X7D02B862,"T",0X1,3);
	split_sreg_range(0X7D02B884,"T",0X1,3);
	split_sreg_range(0X7D02B8BA,"T",0X1,3);
	split_sreg_range(0X7D02B8EC,"T",0X1,3);
	split_sreg_range(0X7D02B8F6,"T",0X1,3);
	split_sreg_range(0X7D02B8FA,"T",0X1,3);
	split_sreg_range(0X7D02B906,"T",0X1,3);
	split_sreg_range(0X7D02B932,"T",0X1,3);
	split_sreg_range(0X7D02B938,"T",0X1,3);
	split_sreg_range(0X7D02B93C,"T",0X1,3);
	split_sreg_range(0X7D02B964,"T",0X1,3);
	split_sreg_range(0X7D02B968,"T",0X1,3);
	split_sreg_range(0X7D02B990,"T",0X1,3);
	split_sreg_range(0X7D02BA10,"T",0X1,3);
	split_sreg_range(0X7D02BA20,"T",0X1,3);
	split_sreg_range(0X7D02BA5C,"T",0X1,3);
	split_sreg_range(0X7D02BAC0,"T",0X1,3);
	split_sreg_range(0X7D02BADC,"T",0X1,3);
	split_sreg_range(0X7D02BB02,"T",0X1,3);
	split_sreg_range(0X7D02BB2C,"T",0X1,3);
	split_sreg_range(0X7D02BB70,"T",0X1,3);
	split_sreg_range(0X7D02BB7E,"T",0X1,3);
	split_sreg_range(0X7D02BBC6,"T",0X1,3);
	split_sreg_range(0X7D02BBD6,"T",0X1,3);
	split_sreg_range(0X7D02BBDE,"T",0X1,3);
	split_sreg_range(0X7D02BBEA,"T",0X1,3);
	split_sreg_range(0X7D02BBEE,"T",0X1,3);
	split_sreg_range(0X7D02BBFA,"T",0X1,3);
	split_sreg_range(0X7D02BC06,"T",0X1,3);
	split_sreg_range(0X7D02BC54,"T",0X1,3);
	split_sreg_range(0X7D02BC5E,"T",0X1,3);
	split_sreg_range(0X7D02BC62,"T",0X1,3);
	split_sreg_range(0X7D02BC78,"T",0X1,3);
	split_sreg_range(0X7D02BC7E,"T",0X1,3);
	split_sreg_range(0X7D02BC8E,"T",0X1,3);
	split_sreg_range(0X7D02BC98,"T",0X1,3);
	split_sreg_range(0X7D02BD02,"T",0X1,3);
	split_sreg_range(0X7D02BD26,"T",0X1,3);
	split_sreg_range(0X7D02BD28,"T",0X1,3);
	split_sreg_range(0X7D02BD54,"T",0X1,3);
	split_sreg_range(0X7D02BE66,"T",0X1,3);
	split_sreg_range(0X7D02BEA2,"T",0X1,3);
	split_sreg_range(0X7D02BEF4,"T",0X1,3);
	split_sreg_range(0X7D02BF5E,"T",0X1,3);
	split_sreg_range(0X7D02C01A,"T",0X1,3);
	split_sreg_range(0X7D02C02E,"T",0X1,3);
	split_sreg_range(0X7D02C034,"T",0X1,3);
	split_sreg_range(0X7D02C040,"T",0X1,3);
	split_sreg_range(0X7D02C052,"T",0X1,3);
	split_sreg_range(0X7D02C078,"T",0X1,3);
	split_sreg_range(0X7D02C092,"T",0X1,3);
	split_sreg_range(0X7D02C09A,"T",0X1,3);
	split_sreg_range(0X7D02C0A6,"T",0X1,3);
	split_sreg_range(0X7D02C0B4,"T",0X1,3);
	split_sreg_range(0X7D02C0BC,"T",0X1,3);
	split_sreg_range(0X7D02C0CE,"T",0X1,3);
	split_sreg_range(0X7D02C0F8,"T",0X1,3);
	split_sreg_range(0X7D02C104,"T",0X1,3);
	split_sreg_range(0X7D02C116,"T",0X1,3);
	split_sreg_range(0X7D02C124,"T",0X1,3);
	split_sreg_range(0X7D02C128,"T",0X1,3);
	split_sreg_range(0X7D02C16A,"T",0X1,3);
	split_sreg_range(0X7D02C190,"T",0X1,3);
	split_sreg_range(0X7D02C1AA,"T",0X1,3);
	split_sreg_range(0X7D02C1B0,"T",0X1,3);
	split_sreg_range(0X7D02C1C6,"T",0X1,3);
	split_sreg_range(0X7D02C202,"T",0X1,3);
	split_sreg_range(0X7D02C2BE,"T",0X1,3);
	split_sreg_range(0X7D02C2D8,"T",0X1,3);
	split_sreg_range(0X7D02C2F4,"T",0X1,3);
	split_sreg_range(0X7D02C358,"T",0X1,3);
	split_sreg_range(0X7D02C392,"T",0X1,3);
	split_sreg_range(0X7D02C39A,"T",0X1,3);
	split_sreg_range(0X7D02C3A8,"T",0X1,3);
	split_sreg_range(0X7D02C3B6,"T",0X1,3);
	split_sreg_range(0X7D02C3C4,"T",0X1,3);
	split_sreg_range(0X7D02C3DA,"T",0X1,3);
	split_sreg_range(0X7D02C414,"T",0X1,3);
	split_sreg_range(0X7D02C41A,"T",0X1,3);
	split_sreg_range(0X7D02C444,"T",0X1,3);
	split_sreg_range(0X7D02C464,"T",0X1,3);
	split_sreg_range(0X7D02C498,"T",0X1,3);
	split_sreg_range(0X7D02C4A2,"T",0X1,3);
	split_sreg_range(0X7D02C4AE,"T",0X1,3);
	split_sreg_range(0X7D02C4E8,"T",0X1,3);
	split_sreg_range(0X7D02C504,"T",0X1,3);
	split_sreg_range(0X7D02C50A,"T",0X1,3);
	split_sreg_range(0X7D02C518,"T",0X1,3);
	split_sreg_range(0X7D02C51C,"T",0X1,3);
	split_sreg_range(0X7D02C522,"T",0X1,3);
	split_sreg_range(0X7D02C536,"T",0X1,3);
	split_sreg_range(0X7D02C54E,"T",0X1,3);
	split_sreg_range(0X7D02C55A,"T",0X1,3);
	split_sreg_range(0X7D02C560,"T",0X1,3);
	split_sreg_range(0X7D02C564,"T",0X1,3);
	split_sreg_range(0X7D02C568,"T",0X1,3);
	split_sreg_range(0X7D02C578,"T",0X1,3);
	split_sreg_range(0X7D02C57E,"T",0X1,3);
	split_sreg_range(0X7D02C586,"T",0X1,3);
	split_sreg_range(0X7D02C590,"T",0X1,3);
	split_sreg_range(0X7D02C596,"T",0X1,3);
	split_sreg_range(0X7D02C59E,"T",0X1,3);
	split_sreg_range(0X7D02C5A0,"T",0X1,3);
	split_sreg_range(0X7D02C5A8,"T",0X1,3);
	split_sreg_range(0X7D02C5B2,"T",0X1,3);
	split_sreg_range(0X7D02C5B4,"T",0X1,3);
	split_sreg_range(0X7D02C5CA,"T",0X1,3);
	split_sreg_range(0X7D02C5D0,"T",0X1,3);
	split_sreg_range(0X7D02C5D4,"T",0X1,3);
	split_sreg_range(0X7D02C5EC,"T",0X1,3);
	split_sreg_range(0X7D02C5F6,"T",0X1,3);
	split_sreg_range(0X7D02C5FA,"T",0X1,3);
	split_sreg_range(0X7D02C5FE,"T",0X1,3);
	split_sreg_range(0X7D02C604,"T",0X1,3);
	split_sreg_range(0X7D02C612,"T",0X1,3);
	split_sreg_range(0X7D02C620,"T",0X1,3);
	split_sreg_range(0X7D02C624,"T",0X1,3);
	split_sreg_range(0X7D02C626,"T",0X1,3);
	split_sreg_range(0X7D02C62A,"T",0X1,3);
	split_sreg_range(0X7D02C62C,"T",0X1,3);
	split_sreg_range(0X7D02C630,"T",0X1,3);
	split_sreg_range(0X7D02C63E,"T",0X1,3);
	split_sreg_range(0X7D02C64C,"T",0X1,3);
	split_sreg_range(0X7D02C678,"T",0X1,3);
	split_sreg_range(0X7D02C67E,"T",0X1,3);
	split_sreg_range(0X7D02C682,"T",0X1,3);
	split_sreg_range(0X7D02C69A,"T",0X1,3);
	split_sreg_range(0X7D02C6A6,"T",0X1,3);
	split_sreg_range(0X7D02C6AA,"T",0X1,3);
	split_sreg_range(0X7D02C6B0,"T",0X1,3);
	split_sreg_range(0X7D02C6C6,"T",0X1,3);
	split_sreg_range(0X7D02C6CC,"T",0X1,3);
	split_sreg_range(0X7D02C6D0,"T",0X1,3);
	split_sreg_range(0X7D02C6D6,"T",0X1,3);
	split_sreg_range(0X7D02C6E8,"T",0X1,3);
	split_sreg_range(0X7D02C6EE,"T",0X1,3);
	split_sreg_range(0X7D02C6F2,"T",0X1,3);
	split_sreg_range(0X7D02C70A,"T",0X1,3);
	split_sreg_range(0X7D02C70E,"T",0X1,3);
	split_sreg_range(0X7D02C714,"T",0X1,3);
	split_sreg_range(0X7D02C72E,"T",0X1,3);
	split_sreg_range(0X7D02C734,"T",0X1,3);
	split_sreg_range(0X7D02C738,"T",0X1,3);
	split_sreg_range(0X7D02C750,"T",0X1,3);
	split_sreg_range(0X7D02C75C,"T",0X1,3);
	split_sreg_range(0X7D02C760,"T",0X1,3);
	split_sreg_range(0X7D02C764,"T",0X1,3);
	split_sreg_range(0X7D02C770,"T",0X1,3);
	split_sreg_range(0X7D02C77E,"T",0X1,3);
	split_sreg_range(0X7D02C782,"T",0X1,3);
	split_sreg_range(0X7D02C784,"T",0X1,3);
	split_sreg_range(0X7D02C78A,"T",0X1,3);
	split_sreg_range(0X7D02C79C,"T",0X1,3);
	split_sreg_range(0X7D02C7A0,"T",0X1,3);
	split_sreg_range(0X7D02C7B8,"T",0X1,3);
	split_sreg_range(0X7D02C7BE,"T",0X1,3);
	split_sreg_range(0X7D02C7C2,"T",0X1,3);
	split_sreg_range(0X7D02C7C8,"T",0X1,3);
	split_sreg_range(0X7D02C7D2,"T",0X1,3);
	split_sreg_range(0X7D02C7DA,"T",0X1,3);
	split_sreg_range(0X7D02C7E0,"T",0X1,3);
	split_sreg_range(0X7D02C7EE,"T",0X1,3);
	split_sreg_range(0X7D02C7F2,"T",0X1,3);
	split_sreg_range(0X7D02C80A,"T",0X1,3);
	split_sreg_range(0X7D02C82E,"T",0X1,3);
	split_sreg_range(0X7D02C856,"T",0X1,3);
	split_sreg_range(0X7D02C87A,"T",0X1,3);
	split_sreg_range(0X7D02C87C,"T",0X1,3);
	split_sreg_range(0X7D02C89A,"T",0X1,3);
	split_sreg_range(0X7D02C8BE,"T",0X1,3);
	split_sreg_range(0X7D02C8C0,"T",0X1,3);
	split_sreg_range(0X7D02C8C8,"T",0X1,3);
	split_sreg_range(0X7D02C8DA,"T",0X1,3);
	split_sreg_range(0X7D02C912,"T",0X1,3);
	split_sreg_range(0X7D02C928,"T",0X1,3);
	split_sreg_range(0X7D02C950,"T",0X1,3);
	split_sreg_range(0X7D02C954,"T",0X1,3);
	split_sreg_range(0X7D02C96C,"T",0X1,3);
	split_sreg_range(0X7D02C99C,"T",0X1,3);
	split_sreg_range(0X7D02C9A8,"T",0X1,3);
	split_sreg_range(0X7D02C9AC,"T",0X1,3);
	split_sreg_range(0X7D02C9BC,"T",0X1,3);
	split_sreg_range(0X7D02C9F4,"T",0X1,3);
	split_sreg_range(0X7D02CA08,"T",0X1,3);
	split_sreg_range(0X7D02CA28,"T",0X1,3);
	split_sreg_range(0X7D02CA2E,"T",0X1,3);
	split_sreg_range(0X7D02CA3C,"T",0X1,3);
	split_sreg_range(0X7D02CA74,"T",0X1,3);
	split_sreg_range(0X7D02CA7C,"T",0X1,3);
	split_sreg_range(0X7D02CA84,"T",0X1,3);
	split_sreg_range(0X7D02CB00,"T",0X1,3);
	split_sreg_range(0X7D02CBA6,"T",0X1,3);
	split_sreg_range(0X7D02CBB8,"T",0X1,3);
	split_sreg_range(0X7D02CBE0,"T",0X1,3);
	split_sreg_range(0X7D02CC1A,"T",0X1,3);
	split_sreg_range(0X7D02CC28,"T",0X1,3);
	split_sreg_range(0X7D02CC56,"T",0X1,3);
	split_sreg_range(0X7D02CC60,"T",0X1,3);
	split_sreg_range(0X7D02CC78,"T",0X1,3);
	split_sreg_range(0X7D02CC8A,"T",0X1,3);
	split_sreg_range(0X7D02CC90,"T",0X1,3);
	split_sreg_range(0X7D02CCC2,"T",0X1,3);
	split_sreg_range(0X7D02CD0C,"T",0X1,3);
	split_sreg_range(0X7D02CD62,"T",0X1,3);
	split_sreg_range(0X7D02CD74,"T",0X1,3);
	split_sreg_range(0X7D02CD90,"T",0X1,3);
	split_sreg_range(0X7D02CDAE,"T",0X1,3);
	split_sreg_range(0X7D02CDB6,"T",0X1,3);
	split_sreg_range(0X7D02CDC4,"T",0X1,3);
	split_sreg_range(0X7D02CDC8,"T",0X1,3);
	split_sreg_range(0X7D02CDD2,"T",0X1,3);
	split_sreg_range(0X7D02CDFE,"T",0X1,3);
	split_sreg_range(0X7D02CE32,"T",0X1,3);
	split_sreg_range(0X7D02CE3C,"T",0X1,3);
	split_sreg_range(0X7D02CE6E,"T",0X1,3);
	split_sreg_range(0X7D02CE74,"T",0X1,3);
	split_sreg_range(0X7D02CE80,"T",0X1,3);
	split_sreg_range(0X7D02CEBC,"T",0X1,3);
	split_sreg_range(0X7D02CEC4,"T",0X1,3);
	split_sreg_range(0X7D02CECA,"T",0X1,3);
	split_sreg_range(0X7D02CF3C,"T",0X1,3);
	split_sreg_range(0X7D02CF4E,"T",0X1,3);
	split_sreg_range(0X7D02CF84,"T",0X1,3);
	split_sreg_range(0X7D02CF8C,"T",0X1,3);
	split_sreg_range(0X7D02CF92,"T",0X1,3);
	split_sreg_range(0X7D02D004,"T",0X1,3);
	split_sreg_range(0X7D02D00A,"T",0X1,3);
	split_sreg_range(0X7D02D014,"T",0X1,3);
	split_sreg_range(0X7D02D034,"T",0X1,3);
	split_sreg_range(0X7D02D038,"T",0X1,3);
	split_sreg_range(0X7D02D0D8,"T",0X1,3);
	split_sreg_range(0X7D02D0DE,"T",0X1,3);
	split_sreg_range(0X7D02D0EC,"T",0X1,3);
	split_sreg_range(0X7D02D0F6,"T",0X1,3);
	split_sreg_range(0X7D02D1AE,"T",0X1,3);
	split_sreg_range(0X7D02D1C0,"T",0X1,3);
	split_sreg_range(0X7D02D1F8,"T",0X1,3);
	split_sreg_range(0X7D02D1FC,"T",0X1,3);
	split_sreg_range(0X7D02D212,"T",0X1,3);
	split_sreg_range(0X7D02D230,"T",0X1,3);
	split_sreg_range(0X7D02D24E,"T",0X1,3);
	split_sreg_range(0X7D02D262,"T",0X1,3);
	split_sreg_range(0X7D02D2B6,"T",0X1,3);
	split_sreg_range(0X7D02D2B8,"T",0X1,3);
	split_sreg_range(0X7D02D2D6,"T",0X1,3);
	split_sreg_range(0X7D02D302,"T",0X1,3);
	split_sreg_range(0X7D02D318,"T",0X1,3);
	split_sreg_range(0X7D02D31E,"T",0X1,3);
	split_sreg_range(0X7D02D32A,"T",0X1,3);
	split_sreg_range(0X7D02D332,"T",0X1,3);
	split_sreg_range(0X7D02D336,"T",0X1,3);
	split_sreg_range(0X7D02D354,"T",0X1,3);
	split_sreg_range(0X7D02D38E,"T",0X1,3);
	split_sreg_range(0X7D02D396,"T",0X1,3);
	split_sreg_range(0X7D02D39E,"T",0X1,3);
	split_sreg_range(0X7D02D3B0,"T",0X1,3);
	split_sreg_range(0X7D02D3BE,"T",0X1,3);
	split_sreg_range(0X7D02D3CC,"T",0X1,3);
	split_sreg_range(0X7D02D3DA,"T",0X1,3);
	split_sreg_range(0X7D02D3F2,"T",0X1,3);
	split_sreg_range(0X7D02D406,"T",0X1,3);
	split_sreg_range(0X7D02D40E,"T",0X1,3);
	split_sreg_range(0X7D02D422,"T",0X1,3);
	split_sreg_range(0X7D02D432,"T",0X1,3);
	split_sreg_range(0X7D02D458,"T",0X1,3);
	split_sreg_range(0X7D02D474,"T",0X1,3);
	split_sreg_range(0X7D02D48E,"T",0X1,3);
	split_sreg_range(0X7D02D4A2,"T",0X1,3);
	split_sreg_range(0X7D02D4C8,"T",0X1,3);
	split_sreg_range(0X7D02D502,"T",0X1,3);
	split_sreg_range(0X7D02D518,"T",0X1,3);
	split_sreg_range(0X7D02D53E,"T",0X1,3);
	split_sreg_range(0X7D02D56C,"T",0X1,3);
	split_sreg_range(0X7D02D588,"T",0X1,3);
	split_sreg_range(0X7D02D5A6,"T",0X1,3);
	split_sreg_range(0X7D02D5D0,"T",0X1,3);
	split_sreg_range(0X7D02D5E6,"T",0X1,3);
	split_sreg_range(0X7D02D5EC,"T",0X1,3);
	split_sreg_range(0X7D02D602,"T",0X1,3);
	split_sreg_range(0X7D02D618,"T",0X1,3);
	split_sreg_range(0X7D02D62E,"T",0X1,3);
	split_sreg_range(0X7D02D630,"T",0X1,3);
	split_sreg_range(0X7D02D64C,"T",0X1,3);
	split_sreg_range(0X7D02D664,"T",0X1,3);
	split_sreg_range(0X7D02D67C,"T",0X1,3);
	split_sreg_range(0X7D02D69A,"T",0X1,3);
	split_sreg_range(0X7D02D6A8,"T",0X1,3);
	split_sreg_range(0X7D02D6B0,"T",0X1,3);
	split_sreg_range(0X7D02D6B2,"T",0X1,3);
	split_sreg_range(0X7D02D6CE,"T",0X1,3);
	split_sreg_range(0X7D02D6DA,"T",0X1,3);
	split_sreg_range(0X7D02D6EE,"T",0X1,3);
	split_sreg_range(0X7D02D718,"T",0X1,3);
	split_sreg_range(0X7D02D72A,"T",0X1,3);
	split_sreg_range(0X7D02D736,"T",0X1,3);
	split_sreg_range(0X7D02D756,"T",0X1,3);
	split_sreg_range(0X7D02D75E,"T",0X1,3);
	split_sreg_range(0X7D02D778,"T",0X1,3);
	split_sreg_range(0X7D02D78C,"T",0X1,3);
	split_sreg_range(0X7D02D79E,"T",0X1,3);
	split_sreg_range(0X7D02D7B2,"T",0X1,3);
	split_sreg_range(0X7D02D7C6,"T",0X1,3);
	split_sreg_range(0X7D02D80C,"T",0X1,3);
	split_sreg_range(0X7D02D80E,"T",0X1,3);
	split_sreg_range(0X7D02D822,"T",0X1,3);
	split_sreg_range(0X7D02D838,"T",0X1,3);
	split_sreg_range(0X7D02D844,"T",0X1,3);
	split_sreg_range(0X7D02D858,"T",0X1,3);
	split_sreg_range(0X7D02D866,"T",0X1,3);
	split_sreg_range(0X7D02D88C,"T",0X1,3);
	split_sreg_range(0X7D02D8A0,"T",0X1,3);
	split_sreg_range(0X7D02D8C0,"T",0X1,3);
	split_sreg_range(0X7D02D8E2,"T",0X1,3);
	split_sreg_range(0X7D02D8FC,"T",0X1,3);
	split_sreg_range(0X7D02D91A,"T",0X1,3);
	split_sreg_range(0X7D02D930,"T",0X1,3);
	split_sreg_range(0X7D02D944,"T",0X1,3);
	split_sreg_range(0X7D02D94C,"T",0X1,3);
	split_sreg_range(0X7D02D96A,"T",0X1,3);
	split_sreg_range(0X7D02D982,"T",0X1,3);
	split_sreg_range(0X7D02D9A8,"T",0X1,3);
	split_sreg_range(0X7D02D9B0,"T",0X1,3);
	split_sreg_range(0X7D02D9C6,"T",0X1,3);
	split_sreg_range(0X7D02D9DC,"T",0X1,3);
	split_sreg_range(0X7D02D9F2,"T",0X1,3);
	split_sreg_range(0X7D02DA0C,"T",0X1,3);
	split_sreg_range(0X7D02DA20,"T",0X1,3);
	split_sreg_range(0X7D02DA36,"T",0X1,3);
	split_sreg_range(0X7D02DA4A,"T",0X1,3);
	split_sreg_range(0X7D02DA60,"T",0X1,3);
	split_sreg_range(0X7D02DA76,"T",0X1,3);
	split_sreg_range(0X7D02DA8C,"T",0X1,3);
	split_sreg_range(0X7D02DAA2,"T",0X1,3);
	split_sreg_range(0X7D02DAB8,"T",0X1,3);
	split_sreg_range(0X7D02DAD0,"T",0X1,3);
	split_sreg_range(0X7D02DAD4,"T",0X1,3);
	split_sreg_range(0X7D02DAE8,"T",0X1,3);
	split_sreg_range(0X7D02DB18,"T",0X1,3);
	split_sreg_range(0X7D02DB38,"T",0X1,3);
	split_sreg_range(0X7D02DB50,"T",0X1,3);
	split_sreg_range(0X7D02DB6E,"T",0X1,3);
	split_sreg_range(0X7D02DB7C,"T",0X1,3);
	split_sreg_range(0X7D02DB9E,"T",0X1,3);
	split_sreg_range(0X7D02DBB4,"T",0X1,3);
	split_sreg_range(0X7D02DBCE,"T",0X1,3);
	split_sreg_range(0X7D02DBEC,"T",0X1,3);
	split_sreg_range(0X7D02DC06,"T",0X1,3);
	split_sreg_range(0X7D02DC14,"T",0X1,3);
	split_sreg_range(0X7D02DC36,"T",0X1,3);
	split_sreg_range(0X7D02DC50,"T",0X1,3);
	split_sreg_range(0X7D02DC68,"T",0X1,3);
	split_sreg_range(0X7D02DC76,"T",0X1,3);
	split_sreg_range(0X7D02DC9A,"T",0X1,3);
	split_sreg_range(0X7D02DCAC,"T",0X1,3);
	split_sreg_range(0X7D02DCBA,"T",0X1,3);
	split_sreg_range(0X7D02DCD0,"T",0X1,3);
	split_sreg_range(0X7D02DCEA,"T",0X1,3);
	split_sreg_range(0X7D02DD02,"T",0X1,3);
	split_sreg_range(0X7D02DD1A,"T",0X1,3);
	split_sreg_range(0X7D02DD32,"T",0X1,3);
	split_sreg_range(0X7D02DD50,"T",0X1,3);
	split_sreg_range(0X7D02DD76,"T",0X1,3);
	split_sreg_range(0X7D02DD94,"T",0X1,3);
	split_sreg_range(0X7D02DDAC,"T",0X1,3);
	split_sreg_range(0X7D02DDC8,"T",0X1,3);
	split_sreg_range(0X7D02DDD6,"T",0X1,3);
	split_sreg_range(0X7D02DDF6,"T",0X1,3);
	split_sreg_range(0X7D02DE0C,"T",0X1,3);
	split_sreg_range(0X7D02DE26,"T",0X1,3);
	split_sreg_range(0X7D02DE42,"T",0X1,3);
	split_sreg_range(0X7D02DE5E,"T",0X1,3);
	split_sreg_range(0X7D02DE6C,"T",0X1,3);
	split_sreg_range(0X7D02DE8E,"T",0X1,3);
	split_sreg_range(0X7D02DEA8,"T",0X1,3);
	split_sreg_range(0X7D02DEC0,"T",0X1,3);
	split_sreg_range(0X7D02DECE,"T",0X1,3);
	split_sreg_range(0X7D02DEEE,"T",0X1,3);
	split_sreg_range(0X7D02DF00,"T",0X1,3);
	split_sreg_range(0X7D02DF0E,"T",0X1,3);
	split_sreg_range(0X7D02DF26,"T",0X1,3);
	split_sreg_range(0X7D02DF3E,"T",0X1,3);
	split_sreg_range(0X7D02DF5C,"T",0X1,3);
	split_sreg_range(0X7D02DF8A,"T",0X1,3);
	split_sreg_range(0X7D02DFA8,"T",0X1,3);
	split_sreg_range(0X7D02DFCA,"T",0X1,3);
	split_sreg_range(0X7D02DFE4,"T",0X1,3);
	split_sreg_range(0X7D02E000,"T",0X1,3);
	split_sreg_range(0X7D02E016,"T",0X1,3);
	split_sreg_range(0X7D02E032,"T",0X1,3);
	split_sreg_range(0X7D02E050,"T",0X1,3);
	split_sreg_range(0X7D02E05E,"T",0X1,3);
	split_sreg_range(0X7D02E074,"T",0X1,3);
	split_sreg_range(0X7D02E08A,"T",0X1,3);
	split_sreg_range(0X7D02E0B4,"T",0X1,3);
	split_sreg_range(0X7D02E0CE,"T",0X1,3);
	split_sreg_range(0X7D02E0EE,"T",0X1,3);
	split_sreg_range(0X7D02E108,"T",0X1,3);
	split_sreg_range(0X7D02E116,"T",0X1,3);
	split_sreg_range(0X7D02E12C,"T",0X1,3);
	split_sreg_range(0X7D02E14A,"T",0X1,3);
	split_sreg_range(0X7D02E166,"T",0X1,3);
	split_sreg_range(0X7D02E17A,"T",0X1,3);
	split_sreg_range(0X7D02E190,"T",0X1,3);
	split_sreg_range(0X7D02E1AC,"T",0X1,3);
	split_sreg_range(0X7D02E1BE,"T",0X1,3);
	split_sreg_range(0X7D02E1DE,"T",0X1,3);
	split_sreg_range(0X7D02E1FA,"T",0X1,3);
	split_sreg_range(0X7D02E208,"T",0X1,3);
	split_sreg_range(0X7D02E22C,"T",0X1,3);
	split_sreg_range(0X7D02E23A,"T",0X1,3);
	split_sreg_range(0X7D02E24C,"T",0X1,3);
	split_sreg_range(0X7D02E25E,"T",0X1,3);
	split_sreg_range(0X7D02E27C,"T",0X1,3);
	split_sreg_range(0X7D02E29E,"T",0X1,3);
	split_sreg_range(0X7D02E2BE,"T",0X1,3);
	split_sreg_range(0X7D02E2D8,"T",0X1,3);
	split_sreg_range(0X7D02E2F0,"T",0X1,3);
	split_sreg_range(0X7D02E2FE,"T",0X1,3);
	split_sreg_range(0X7D02E314,"T",0X1,3);
	split_sreg_range(0X7D02E32A,"T",0X1,3);
	split_sreg_range(0X7D02E34E,"T",0X1,3);
	split_sreg_range(0X7D02E364,"T",0X1,3);
	split_sreg_range(0X7D02E37E,"T",0X1,3);
	split_sreg_range(0X7D02E398,"T",0X1,3);
	split_sreg_range(0X7D02E3A6,"T",0X1,3);
	split_sreg_range(0X7D02E3BC,"T",0X1,3);
	split_sreg_range(0X7D02E3D4,"T",0X1,3);
	split_sreg_range(0X7D02E3FC,"T",0X1,3);
	split_sreg_range(0X7D02E422,"T",0X1,3);
	split_sreg_range(0X7D02E436,"T",0X1,3);
	split_sreg_range(0X7D02E460,"T",0X1,3);
	split_sreg_range(0X7D02E470,"T",0X1,3);
	split_sreg_range(0X7D02E48E,"T",0X1,3);
	split_sreg_range(0X7D02E494,"T",0X1,3);
	split_sreg_range(0X7D02E52C,"T",0X1,3);
	split_sreg_range(0X7D02E54E,"T",0X1,3);
	split_sreg_range(0X7D02E558,"T",0X1,3);
	split_sreg_range(0X7D02E55C,"T",0X1,3);
	split_sreg_range(0X7D02E570,"T",0X1,3);
	split_sreg_range(0X7D02E584,"T",0X1,3);
	split_sreg_range(0X7D02E598,"T",0X1,3);
	split_sreg_range(0X7D02E5A4,"T",0X1,3);
	split_sreg_range(0X7D02E5E0,"T",0X1,3);
	split_sreg_range(0X7D02E5F0,"T",0X1,3);
	split_sreg_range(0X7D02E61E,"T",0X1,3);
	split_sreg_range(0X7D02E62A,"T",0X1,3);
	split_sreg_range(0X7D02E63A,"T",0X1,3);
	split_sreg_range(0X7D02E648,"T",0X1,3);
	split_sreg_range(0X7D02E666,"T",0X1,3);
	split_sreg_range(0X7D02E67A,"T",0X1,3);
	split_sreg_range(0X7D02E696,"T",0X1,3);
	split_sreg_range(0X7D02E6A2,"T",0X1,3);
	split_sreg_range(0X7D02E6BA,"T",0X1,3);
	split_sreg_range(0X7D02E6DC,"T",0X1,3);
	split_sreg_range(0X7D02E6F0,"T",0X1,3);
	split_sreg_range(0X7D02E70C,"T",0X1,3);
	split_sreg_range(0X7D02E722,"T",0X1,3);
	split_sreg_range(0X7D02E73C,"T",0X1,3);
	split_sreg_range(0X7D02E74E,"T",0X1,3);
	split_sreg_range(0X7D02E764,"T",0X1,3);
	split_sreg_range(0X7D02E78C,"T",0X1,3);
	split_sreg_range(0X7D02E790,"T",0X1,3);
	split_sreg_range(0X7D02E7A6,"T",0X1,3);
	split_sreg_range(0X7D02E7B8,"T",0X1,3);
	split_sreg_range(0X7D02E7CE,"T",0X1,3);
	split_sreg_range(0X7D02E7F6,"T",0X1,3);
	split_sreg_range(0X7D02E80C,"T",0X1,3);
	split_sreg_range(0X7D02E822,"T",0X1,3);
	split_sreg_range(0X7D02E838,"T",0X1,3);
	split_sreg_range(0X7D02E84E,"T",0X1,3);
	split_sreg_range(0X7D02E864,"T",0X1,3);
	split_sreg_range(0X7D02E87A,"T",0X1,3);
	split_sreg_range(0X7D02E890,"T",0X1,3);
	split_sreg_range(0X7D02E8A6,"T",0X1,3);
	split_sreg_range(0X7D02E8B4,"T",0X1,3);
	split_sreg_range(0X7D02E8CA,"T",0X1,3);
	split_sreg_range(0X7D02E8DE,"T",0X1,3);
	split_sreg_range(0X7D02E8F4,"T",0X1,3);
	split_sreg_range(0X7D02E908,"T",0X1,3);
	split_sreg_range(0X7D02E91E,"T",0X1,3);
	split_sreg_range(0X7D02E934,"T",0X1,3);
	split_sreg_range(0X7D02E94A,"T",0X1,3);
	split_sreg_range(0X7D02E98A,"T",0X1,3);
	split_sreg_range(0X7D02E99C,"T",0X1,3);
	split_sreg_range(0X7D02E9B2,"T",0X1,3);
	split_sreg_range(0X7D02E9C8,"T",0X1,3);
	split_sreg_range(0X7D02EA98,"T",0X1,3);
	split_sreg_range(0X7D02EA9A,"T",0X1,3);
	split_sreg_range(0X7D02EABA,"T",0X1,3);
	split_sreg_range(0X7D02EAD6,"T",0X1,3);
	split_sreg_range(0X7D02EAF0,"T",0X1,3);
	split_sreg_range(0X7D02EAF8,"T",0X1,3);
	split_sreg_range(0X7D02EAFC,"T",0,3);
	split_sreg_range(0X7D02EB34,"T",0,3);
	split_sreg_range(0X7D02EB7C,"T",0,3);
	split_sreg_range(0X7D02EB88,"T",0,3);
	split_sreg_range(0X7D02EB98,"T",0,3);
	split_sreg_range(0X7D02EBA4,"T",0,3);
	split_sreg_range(0X7D02EBC4,"T",0,3);
	split_sreg_range(0X7D02EBC8,"T",0X1,2);
	split_sreg_range(0X7D02EC02,"T",0X1,3);
	split_sreg_range(0X7D02EC30,"T",0X1,3);
	split_sreg_range(0X7D02EC34,"T",0X1,3);
	split_sreg_range(0X7D02EC44,"T",0X1,3);
	split_sreg_range(0X7D02EC72,"T",0X1,3);
	split_sreg_range(0X7D02EC96,"T",0X1,3);
	split_sreg_range(0X7D02ECAE,"T",0X1,3);
	split_sreg_range(0X7D02ECCC,"T",0X1,3);
	split_sreg_range(0X7D02ECF0,"T",0X1,3);
	split_sreg_range(0X7D02ECF8,"T",0X1,3);
	split_sreg_range(0X7D02ED20,"T",0X1,3);
	split_sreg_range(0X7D02ED2E,"T",0X1,3);
	split_sreg_range(0X7D02ED42,"T",0X1,3);
	split_sreg_range(0X7D02ED50,"T",0X1,3);
	split_sreg_range(0X7D02ED5A,"T",0X1,3);
	split_sreg_range(0X7D02ED84,"T",0X1,3);
	split_sreg_range(0X7D02ED9A,"T",0X1,3);
	split_sreg_range(0X7D02EDA4,"T",0X1,3);
	split_sreg_range(0X7D02EDC2,"T",0X1,3);
	split_sreg_range(0X7D02EDEA,"T",0X1,3);
	split_sreg_range(0X7D02EDEC,"T",0X1,3);
	split_sreg_range(0X7D02EE1A,"T",0X1,3);
	split_sreg_range(0X7D02EE64,"T",0X1,3);
	split_sreg_range(0X7D02EE6E,"T",0X1,3);
	split_sreg_range(0X7D02EE84,"T",0X1,3);
	split_sreg_range(0X7D02EE9C,"T",0X1,3);
	split_sreg_range(0X7D02EEA4,"T",0X1,3);
	split_sreg_range(0X7D02EEA8,"T",0X1,3);
	split_sreg_range(0X7D02EEAC,"T",0X1,3);
	split_sreg_range(0X7D02EEBE,"T",0X1,3);
	split_sreg_range(0X7D02EECA,"T",0X1,3);
	split_sreg_range(0X7D02EEDC,"T",0X1,3);
	split_sreg_range(0X7D02EEEE,"T",0X1,3);
	split_sreg_range(0X7D02EF04,"T",0X1,3);
	split_sreg_range(0X7D02EF34,"T",0X1,3);
	split_sreg_range(0X7D02EF36,"T",0X1,3);
	split_sreg_range(0X7D02EF56,"T",0X1,3);
	split_sreg_range(0X7D02EF60,"T",0X1,3);
	split_sreg_range(0X7D02EF6A,"T",0X1,3);
	split_sreg_range(0X7D02EF76,"T",0X1,3);
	split_sreg_range(0X7D02EF7E,"T",0X1,3);
	split_sreg_range(0X7D02EF82,"T",0X1,3);
	split_sreg_range(0X7D02EF86,"T",0X1,3);
	split_sreg_range(0X7D02EFC2,"T",0X1,3);
	split_sreg_range(0X7D02EFC6,"T",0X1,3);
	split_sreg_range(0X7D02EFDA,"T",0X1,3);
	split_sreg_range(0X7D02EFE6,"T",0X1,3);
	split_sreg_range(0X7D02F008,"T",0X1,3);
	split_sreg_range(0X7D02F010,"T",0X1,3);
	split_sreg_range(0X7D02F036,"T",0X1,3);
	split_sreg_range(0X7D02F03C,"T",0X1,3);
	split_sreg_range(0X7D02F044,"T",0X1,3);
	split_sreg_range(0X7D02F04A,"T",0X1,3);
	split_sreg_range(0X7D02F050,"T",0X1,3);
	split_sreg_range(0X7D02F088,"T",0X1,3);
	split_sreg_range(0X7D02F098,"T",0X1,3);
	split_sreg_range(0X7D02F0D2,"T",0X1,3);
	split_sreg_range(0X7D02F0F4,"T",0X1,3);
	split_sreg_range(0X7D02F0FA,"T",0X1,3);
	split_sreg_range(0X7D02F0FC,"T",0X1,3);
	split_sreg_range(0X7D02F0FE,"T",0X1,3);
	split_sreg_range(0X7D02F10A,"T",0X1,3);
	split_sreg_range(0X7D02F118,"T",0X1,3);
	split_sreg_range(0X7D02F12E,"T",0X1,3);
	split_sreg_range(0X7D02F134,"T",0X1,3);
	split_sreg_range(0X7D02F16C,"T",0X1,3);
	split_sreg_range(0X7D02F170,"T",0X1,3);
	split_sreg_range(0X7D02F190,"T",0X1,3);
	split_sreg_range(0X7D02F192,"T",0X1,3);
	split_sreg_range(0X7D02F194,"T",0X1,3);
	split_sreg_range(0X7D02F1A0,"T",0X1,3);
	split_sreg_range(0X7D02F1AC,"T",0X1,3);
	split_sreg_range(0X7D02F1C6,"T",0X1,3);
	split_sreg_range(0X7D02F1C8,"T",0X1,3);
	split_sreg_range(0X7D02F1DE,"T",0X1,3);
	split_sreg_range(0X7D02F1E0,"T",0X1,3);
	split_sreg_range(0X7D02F1E2,"T",0X1,3);
	split_sreg_range(0X7D02F1F0,"T",0X1,3);
	split_sreg_range(0X7D02F20A,"T",0X1,3);
	split_sreg_range(0X7D02F22C,"T",0X1,3);
	split_sreg_range(0X7D02F248,"T",0X1,3);
	split_sreg_range(0X7D02F24C,"T",0X1,3);
	split_sreg_range(0X7D02F27A,"T",0X1,3);
	split_sreg_range(0X7D02F27C,"T",0X1,3);
	split_sreg_range(0X7D02F28A,"T",0X1,3);
	split_sreg_range(0X7D02F2A8,"T",0X1,3);
	split_sreg_range(0X7D02F2AC,"T",0X1,3);
	split_sreg_range(0X7D02F2AE,"T",0X1,3);
	split_sreg_range(0X7D02F2D2,"T",0X1,3);
	split_sreg_range(0X7D02F2E0,"T",0X1,3);
	split_sreg_range(0X7D02F30C,"T",0X1,3);
	split_sreg_range(0X7D02F340,"T",0X1,3);
	split_sreg_range(0X7D02F354,"T",0X1,3);
	split_sreg_range(0X7D02F380,"T",0X1,3);
	split_sreg_range(0X7D02F3A2,"T",0X1,3);
	split_sreg_range(0X7D02F3B2,"T",0X1,3);
	split_sreg_range(0X7D02F3B6,"T",0X1,3);
	split_sreg_range(0X7D02F3BC,"T",0X1,3);
	split_sreg_range(0X7D02F3D4,"T",0X1,3);
	split_sreg_range(0X7D02F3D8,"T",0X1,3);
	split_sreg_range(0X7D02F3F0,"T",0X1,3);
	split_sreg_range(0X7D02F3FC,"T",0X1,3);
	split_sreg_range(0X7D02F400,"T",0X1,3);
	split_sreg_range(0X7D02F40A,"T",0X1,3);
	split_sreg_range(0X7D02F430,"T",0X1,3);
	split_sreg_range(0X7D02F43E,"T",0X1,3);
	split_sreg_range(0X7D02F458,"T",0X1,3);
	split_sreg_range(0X7D02F472,"T",0X1,3);
	split_sreg_range(0X7D02F490,"T",0X1,3);
	split_sreg_range(0X7D02F4B0,"T",0X1,3);
	split_sreg_range(0X7D02F4B6,"T",0X1,3);
	split_sreg_range(0X7D02F4C0,"T",0X1,3);
	split_sreg_range(0X7D02F4D4,"T",0X1,3);
	split_sreg_range(0X7D02F4DC,"T",0X1,3);
	split_sreg_range(0X7D02F4E0,"T",0X1,3);
	split_sreg_range(0X7D02F4F8,"T",0X1,3);
	split_sreg_range(0X7D02F500,"T",0X1,3);
	split_sreg_range(0X7D02F508,"T",0X1,3);
	split_sreg_range(0X7D02F50A,"T",0X1,3);
	split_sreg_range(0X7D02F518,"T",0X1,3);
	split_sreg_range(0X7D02F546,"T",0X1,3);
	split_sreg_range(0X7D02F54E,"T",0X1,3);
	split_sreg_range(0X7D02F564,"T",0X1,3);
	split_sreg_range(0X7D02F574,"T",0X1,3);
	split_sreg_range(0X7D02F580,"T",0X1,3);
	split_sreg_range(0X7D02F59C,"T",0X1,3);
	split_sreg_range(0X7D02F5AC,"T",0X1,3);
	split_sreg_range(0X7D02F5BC,"T",0X1,3);
	split_sreg_range(0X7D02F5C0,"T",0X1,3);
	split_sreg_range(0X7D02F5CC,"T",0X1,3);
	split_sreg_range(0X7D02F5D0,"T",0X1,3);
	split_sreg_range(0X7D02F5D4,"T",0X1,3);
	split_sreg_range(0X7D02F5D8,"T",0X1,3);
	split_sreg_range(0X7D02F5EE,"T",0X1,3);
	split_sreg_range(0X7D02F600,"T",0X1,3);
	split_sreg_range(0X7D02F60C,"T",0X1,3);
	split_sreg_range(0X7D02F612,"T",0X1,3);
	split_sreg_range(0X7D02F652,"T",0X1,3);
	split_sreg_range(0X7D02F65E,"T",0X1,3);
	split_sreg_range(0X7D02F6B4,"T",0X1,3);
	split_sreg_range(0X7D02F6D0,"T",0X1,3);
	split_sreg_range(0X7D02F6DA,"T",0X1,3);
	split_sreg_range(0X7D02F6E6,"T",0X1,3);
	split_sreg_range(0X7D02F700,"T",0X1,3);
	split_sreg_range(0X7D02F708,"T",0X1,3);
	split_sreg_range(0X7D02F71A,"T",0X1,3);
	split_sreg_range(0X7D02F71E,"T",0X1,3);
	split_sreg_range(0X7D02F742,"T",0X1,3);
	split_sreg_range(0X7D02F74A,"T",0X1,3);
	split_sreg_range(0X7D02F758,"T",0X1,3);
	split_sreg_range(0X7D02F75E,"T",0X1,3);
	split_sreg_range(0X7D02F76A,"T",0X1,3);
	split_sreg_range(0X7D02F778,"T",0X1,3);
	split_sreg_range(0X7D02F77E,"T",0X1,3);
	split_sreg_range(0X7D02F780,"T",0X1,3);
	split_sreg_range(0X7D02F78E,"T",0X1,3);
	split_sreg_range(0X7D02F790,"T",0X1,3);
	split_sreg_range(0X7D02F792,"T",0X1,3);
	split_sreg_range(0X7D02F7A6,"T",0X1,3);
	split_sreg_range(0X7D02F7A8,"T",0X1,3);
	split_sreg_range(0X7D02F7AE,"T",0X1,3);
	split_sreg_range(0X7D02F7D4,"T",0X1,3);
	split_sreg_range(0X7D02F7D6,"T",0X1,3);
	split_sreg_range(0X7D02F7E2,"T",0X1,3);
	split_sreg_range(0X7D02F7E6,"T",0X1,3);
	split_sreg_range(0X7D02F7F4,"T",0X1,3);
	split_sreg_range(0X7D02F7FC,"T",0X1,3);
	split_sreg_range(0X7D02F82C,"T",0X1,3);
	split_sreg_range(0X7D02F834,"T",0X1,3);
	split_sreg_range(0X7D02F836,"T",0X1,3);
	split_sreg_range(0X7D02F84C,"T",0X1,3);
	split_sreg_range(0X7D02F8AE,"T",0X1,3);
	split_sreg_range(0X7D02F8BC,"T",0X1,3);
	split_sreg_range(0X7D02F8C6,"T",0X1,3);
	split_sreg_range(0X7D02F8CE,"T",0X1,3);
	split_sreg_range(0X7D02F8EA,"T",0X1,3);
	split_sreg_range(0X7D02F90E,"T",0X1,3);
	split_sreg_range(0X7D02F910,"T",0X1,3);
	split_sreg_range(0X7D02F916,"T",0X1,3);
	split_sreg_range(0X7D02F91C,"T",0X1,3);
	split_sreg_range(0X7D02F926,"T",0X1,3);
	split_sreg_range(0X7D02F930,"T",0X1,3);
	split_sreg_range(0X7D02F934,"T",0X1,3);
	split_sreg_range(0X7D02F936,"T",0X1,3);
	split_sreg_range(0X7D02F93A,"T",0X1,3);
	split_sreg_range(0X7D02F93C,"T",0X1,3);
	split_sreg_range(0X7D02F942,"T",0X1,3);
	split_sreg_range(0X7D02F944,"T",0X1,3);
	split_sreg_range(0X7D02F954,"T",0X1,3);
	split_sreg_range(0X7D02F95E,"T",0X1,3);
	split_sreg_range(0X7D02F98C,"T",0X1,3);
	split_sreg_range(0X7D02F996,"T",0X1,3);
	split_sreg_range(0X7D02F9A8,"T",0X1,3);
	split_sreg_range(0X7D02F9AE,"T",0X1,3);
	split_sreg_range(0X7D02F9B8,"T",0X1,3);
	split_sreg_range(0X7D02F9C0,"T",0X1,3);
	split_sreg_range(0X7D02F9EC,"T",0X1,3);
	split_sreg_range(0X7D02F9F4,"T",0X1,3);
	split_sreg_range(0X7D02F9FE,"T",0X1,3);
	split_sreg_range(0X7D02FA02,"T",0X1,3);
	split_sreg_range(0X7D02FA08,"T",0X1,3);
	split_sreg_range(0X7D02FA0C,"T",0X1,3);
	split_sreg_range(0X7D02FA1C,"T",0X1,3);
	split_sreg_range(0X7D02FA26,"T",0X1,3);
	split_sreg_range(0X7D02FA38,"T",0X1,3);
	split_sreg_range(0X7D02FA3E,"T",0X1,3);
	split_sreg_range(0X7D02FA54,"T",0X1,3);
	split_sreg_range(0X7D02FA56,"T",0X1,3);
	split_sreg_range(0X7D02FA62,"T",0X1,3);
	split_sreg_range(0X7D02FA76,"T",0X1,3);
	split_sreg_range(0X7D02FA78,"T",0X1,3);
	split_sreg_range(0X7D02FA80,"T",0X1,3);
	split_sreg_range(0X7D02FA84,"T",0X1,3);
	split_sreg_range(0X7D02FA90,"T",0X1,3);
	split_sreg_range(0X7D02FA92,"T",0X1,3);
	split_sreg_range(0X7D02FAAA,"T",0X1,3);
	split_sreg_range(0X7D02FAAE,"T",0X1,3);
	split_sreg_range(0X7D02FAB2,"T",0X1,3);
	split_sreg_range(0X7D02FAC0,"T",0X1,3);
	split_sreg_range(0X7D02FAEA,"T",0X1,3);
	split_sreg_range(0X7D02FAF4,"T",0X1,3);
	split_sreg_range(0X7D02FAF8,"T",0X1,3);
	split_sreg_range(0X7D02FB02,"T",0X1,3);
	split_sreg_range(0X7D02FB06,"T",0X1,3);
	split_sreg_range(0X7D02FB0A,"T",0X1,3);
	split_sreg_range(0X7D02FB30,"T",0X1,3);
	split_sreg_range(0X7D02FB32,"T",0X1,3);
	split_sreg_range(0X7D02FB50,"T",0X1,3);
	split_sreg_range(0X7D02FB5C,"T",0X1,3);
	split_sreg_range(0X7D02FB82,"T",0X1,3);
	split_sreg_range(0X7D02FB84,"T",0X1,3);
	split_sreg_range(0X7D02FB86,"T",0X1,3);
	split_sreg_range(0X7D02FBA8,"T",0X1,3);
	split_sreg_range(0X7D02FBAA,"T",0X1,3);
	split_sreg_range(0X7D02FBAC,"T",0X1,3);
	split_sreg_range(0X7D02FBB4,"T",0X1,3);
	split_sreg_range(0X7D02FBBA,"T",0X1,3);
	split_sreg_range(0X7D02FBC2,"T",0X1,3);
	split_sreg_range(0X7D02FBD6,"T",0X1,3);
	split_sreg_range(0X7D02FBDA,"T",0X1,3);
	split_sreg_range(0X7D02FBE0,"T",0X1,3);
	split_sreg_range(0X7D02FBE2,"T",0X1,3);
	split_sreg_range(0X7D02FC08,"T",0X1,3);
	split_sreg_range(0X7D02FC0C,"T",0X1,3);
	split_sreg_range(0X7D02FC28,"T",0X1,3);
	split_sreg_range(0X7D02FC2C,"T",0X1,3);
	split_sreg_range(0X7D02FC2E,"T",0X1,3);
	split_sreg_range(0X7D02FC30,"T",0X1,3);
	split_sreg_range(0X7D02FC44,"T",0X1,3);
	split_sreg_range(0X7D02FC46,"T",0X1,3);
	split_sreg_range(0X7D02FC48,"T",0X1,3);
	split_sreg_range(0X7D02FC6A,"T",0X1,3);
	split_sreg_range(0X7D02FC6E,"T",0X1,3);
	split_sreg_range(0X7D02FC9E,"T",0X1,3);
	split_sreg_range(0X7D02FCA0,"T",0X1,3);
	split_sreg_range(0X7D02FCA4,"T",0X1,3);
	split_sreg_range(0X7D02FCD4,"T",0X1,3);
	split_sreg_range(0X7D02FCD6,"T",0X1,3);
	split_sreg_range(0X7D02FCDA,"T",0X1,3);
	split_sreg_range(0X7D02FCF8,"T",0X1,3);
	split_sreg_range(0X7D02FD2E,"T",0X1,3);
	split_sreg_range(0X7D02FD58,"T",0X1,3);
	split_sreg_range(0X7D02FD5A,"T",0X1,3);
	split_sreg_range(0X7D02FD60,"T",0X1,3);
	split_sreg_range(0X7D02FD72,"T",0X1,3);
	split_sreg_range(0X7D02FD78,"T",0X1,3);
	split_sreg_range(0X7D02FDA2,"T",0X1,3);
	split_sreg_range(0X7D02FDA6,"T",0X1,3);
	split_sreg_range(0X7D02FDD4,"T",0X1,3);
	split_sreg_range(0X7D02FDD8,"T",0X1,3);
	split_sreg_range(0X7D02FE06,"T",0X1,3);
	split_sreg_range(0X7D02FE0A,"T",0X1,3);
	split_sreg_range(0X7D02FE32,"T",0X1,3);
	split_sreg_range(0X7D02FE44,"T",0X1,3);
	split_sreg_range(0X7D02FE4C,"T",0X1,3);
	split_sreg_range(0X7D02FE60,"T",0X1,3);
	split_sreg_range(0X7D02FE64,"T",0X1,3);
	split_sreg_range(0X7D02FE6A,"T",0X1,3);
	split_sreg_range(0X7D02FE94,"T",0X1,3);
	split_sreg_range(0X7D02FE96,"T",0X1,3);
	split_sreg_range(0X7D02FE9E,"T",0X1,3);
	split_sreg_range(0X7D02FEDC,"T",0X1,3);
	split_sreg_range(0X7D02FEDE,"T",0X1,3);
	split_sreg_range(0X7D02FEE6,"T",0X1,3);
	split_sreg_range(0X7D02FF06,"T",0X1,3);
	split_sreg_range(0X7D02FF16,"T",0X1,3);
	split_sreg_range(0X7D02FF3C,"T",0X1,3);
	split_sreg_range(0X7D02FF54,"T",0X1,3);
	split_sreg_range(0X7D02FF6C,"T",0X1,3);
	split_sreg_range(0X7D02FF80,"T",0X1,3);
	split_sreg_range(0X7D02FF8A,"T",0X1,3);
	split_sreg_range(0X7D02FF8C,"T",0X1,3);
	split_sreg_range(0X7D02FF9A,"T",0X1,3);
	split_sreg_range(0X7D02FFAC,"T",0X1,3);
	split_sreg_range(0X7D02FFCC,"T",0X1,3);
	split_sreg_range(0X7D02FFF0,"T",0X1,3);
	split_sreg_range(0X7D02FFFE,"T",0X1,3);
	split_sreg_range(0X7D030000,"T",0X1,3);
	split_sreg_range(0X7D030004,"T",0X1,3);
	split_sreg_range(0X7D030008,"T",0X1,3);
	split_sreg_range(0X7D030014,"T",0X1,3);
	split_sreg_range(0X7D030016,"T",0X1,3);
	split_sreg_range(0X7D030030,"T",0X1,3);
	split_sreg_range(0X7D03004A,"T",0X1,3);
	split_sreg_range(0X7D030076,"T",0X1,3);
	split_sreg_range(0X7D030078,"T",0X1,3);
	split_sreg_range(0X7D03007C,"T",0X1,3);
	split_sreg_range(0X7D030094,"T",0X1,3);
	split_sreg_range(0X7D03009A,"T",0X1,3);
	split_sreg_range(0X7D0300CA,"T",0X1,3);
	split_sreg_range(0X7D0300D2,"T",0X1,3);
	split_sreg_range(0X7D0300EA,"T",0X1,3);
	split_sreg_range(0X7D0300EC,"T",0X1,3);
	split_sreg_range(0X7D03011E,"T",0X1,3);
	split_sreg_range(0X7D03012A,"T",0X1,3);
	split_sreg_range(0X7D030130,"T",0X1,3);
	split_sreg_range(0X7D030150,"T",0X1,3);
	split_sreg_range(0X7D030154,"T",0X1,3);
	split_sreg_range(0X7D030158,"T",0X1,3);
	split_sreg_range(0X7D030164,"T",0X1,3);
	split_sreg_range(0X7D030166,"T",0X1,3);
	split_sreg_range(0X7D03016A,"T",0X1,3);
	split_sreg_range(0X7D030176,"T",0X1,3);
	split_sreg_range(0X7D03018C,"T",0X1,3);
	split_sreg_range(0X7D03018E,"T",0X1,3);
	split_sreg_range(0X7D030194,"T",0X1,3);
	split_sreg_range(0X7D030198,"T",0X1,3);
	split_sreg_range(0X7D0301B2,"T",0X1,3);
	split_sreg_range(0X7D0301B4,"T",0X1,3);
	split_sreg_range(0X7D0301C4,"T",0X1,3);
	split_sreg_range(0X7D0301C8,"T",0X1,3);
	split_sreg_range(0X7D030226,"T",0X1,3);
	split_sreg_range(0X7D03024E,"T",0X1,3);
	split_sreg_range(0X7D030250,"T",0X1,3);
	split_sreg_range(0X7D030270,"T",0X1,3);
	split_sreg_range(0X7D030274,"T",0X1,3);
	split_sreg_range(0X7D03027C,"T",0X1,3);
	split_sreg_range(0X7D030282,"T",0X1,3);
	split_sreg_range(0X7D03028C,"T",0X1,3);
	split_sreg_range(0X7D030294,"T",0X1,3);
	split_sreg_range(0X7D0302A2,"T",0X1,3);
	split_sreg_range(0X7D0302AA,"T",0X1,3);
	split_sreg_range(0X7D0302C4,"T",0X1,3);
	split_sreg_range(0X7D0302C6,"T",0X1,3);
	split_sreg_range(0X7D0302D4,"T",0X1,3);
	split_sreg_range(0X7D0302D6,"T",0X1,3);
	split_sreg_range(0X7D0302F4,"T",0X1,3);
	split_sreg_range(0X7D0302FE,"T",0X1,3);
	split_sreg_range(0X7D030302,"T",0X1,3);
	split_sreg_range(0X7D03030E,"T",0X1,3);
	split_sreg_range(0X7D030310,"T",0X1,3);
	split_sreg_range(0X7D03032A,"T",0X1,3);
	split_sreg_range(0X7D03032E,"T",0X1,3);
	split_sreg_range(0X7D030344,"T",0X1,3);
	split_sreg_range(0X7D030358,"T",0X1,3);
	split_sreg_range(0X7D030376,"T",0X1,3);
	split_sreg_range(0X7D030378,"T",0X1,3);
	split_sreg_range(0X7D03037E,"T",0X1,3);
	split_sreg_range(0X7D03038E,"T",0X1,3);
	split_sreg_range(0X7D03039A,"T",0X1,3);
	split_sreg_range(0X7D0303AC,"T",0X1,3);
	split_sreg_range(0X7D0303B0,"T",0X1,3);
	split_sreg_range(0X7D0303B4,"T",0X1,3);
	split_sreg_range(0X7D0303C4,"T",0X1,3);
	split_sreg_range(0X7D0303D0,"T",0X1,3);
	split_sreg_range(0X7D0303E2,"T",0X1,3);
	split_sreg_range(0X7D0303E6,"T",0X1,3);
	split_sreg_range(0X7D0303F8,"T",0X1,3);
	split_sreg_range(0X7D0303FC,"T",0X1,3);
	split_sreg_range(0X7D030404,"T",0X1,3);
	split_sreg_range(0X7D030408,"T",0X1,3);
	split_sreg_range(0X7D03041E,"T",0X1,3);
	split_sreg_range(0X7D030420,"T",0X1,3);
	split_sreg_range(0X7D030436,"T",0X1,3);
	split_sreg_range(0X7D030438,"T",0X1,3);
	split_sreg_range(0X7D030440,"T",0X1,3);
	split_sreg_range(0X7D030442,"T",0X1,3);
	split_sreg_range(0X7D03045A,"T",0X1,3);
	split_sreg_range(0X7D03045C,"T",0X1,3);
	split_sreg_range(0X7D030472,"T",0X1,3);
	split_sreg_range(0X7D03048C,"T",0X1,3);
	split_sreg_range(0X7D030490,"T",0X1,3);
	split_sreg_range(0X7D0304A0,"T",0X1,3);
	split_sreg_range(0X7D0304B6,"T",0X1,3);
	split_sreg_range(0X7D0304B8,"T",0X1,3);
	split_sreg_range(0X7D0304CE,"T",0X1,3);
	split_sreg_range(0X7D0304D0,"T",0X1,3);
	split_sreg_range(0X7D0304E8,"T",0X1,3);
	split_sreg_range(0X7D0304EA,"T",0X1,3);
	split_sreg_range(0X7D030500,"T",0X1,3);
	split_sreg_range(0X7D030532,"T",0X1,3);
	split_sreg_range(0X7D030576,"T",0X1,3);
	split_sreg_range(0X7D03058A,"T",0X1,3);
	split_sreg_range(0X7D0305A0,"T",0X1,3);
	split_sreg_range(0X7D0305B0,"T",0X1,3);
	split_sreg_range(0X7D0305B6,"T",0X1,3);
	split_sreg_range(0X7D0305C6,"T",0X1,3);
	split_sreg_range(0X7D0305FA,"T",0X1,3);
	split_sreg_range(0X7D030604,"T",0X1,3);
	split_sreg_range(0X7D030608,"T",0X1,3);
	split_sreg_range(0X7D03061A,"T",0X1,3);
	split_sreg_range(0X7D030622,"T",0X1,3);
	split_sreg_range(0X7D030628,"T",0X1,3);
	split_sreg_range(0X7D03062C,"T",0X1,3);
	split_sreg_range(0X7D030630,"T",0X1,3);
	split_sreg_range(0X7D030634,"T",0X1,3);
	split_sreg_range(0X7D030638,"T",0X1,3);
	split_sreg_range(0X7D03063A,"T",0X1,3);
	split_sreg_range(0X7D03064C,"T",0X1,3);
	split_sreg_range(0X7D030650,"T",0X1,3);
	split_sreg_range(0X7D030664,"T",0X1,3);
	split_sreg_range(0X7D030668,"T",0X1,3);
	split_sreg_range(0X7D03066C,"T",0X1,3);
	split_sreg_range(0X7D0306CE,"T",0X1,3);
	split_sreg_range(0X7D0306D0,"T",0X1,3);
	split_sreg_range(0X7D0306D4,"T",0X1,3);
	split_sreg_range(0X7D030738,"T",0X1,3);
	split_sreg_range(0X7D03073A,"T",0X1,3);
	split_sreg_range(0X7D03073E,"T",0X1,3);
	split_sreg_range(0X7D0307BC,"T",0X1,3);
	split_sreg_range(0X7D0307BE,"T",0X1,3);
	split_sreg_range(0X7D0307C2,"T",0X1,3);
	split_sreg_range(0X7D030842,"T",0X1,3);
	split_sreg_range(0X7D030844,"T",0X1,3);
	split_sreg_range(0X7D030848,"T",0X1,3);
	split_sreg_range(0X7D030876,"T",0X1,3);
	split_sreg_range(0X7D03087A,"T",0X1,3);
	split_sreg_range(0X7D03087C,"T",0X1,3);
	split_sreg_range(0X7D030880,"T",0X1,3);
	split_sreg_range(0X7D0308F6,"T",0X1,3);
	split_sreg_range(0X7D0308FA,"T",0X1,3);
	split_sreg_range(0X7D0308FE,"T",0X1,3);
	split_sreg_range(0X7D030900,"T",0X1,3);
	split_sreg_range(0X7D030906,"T",0X1,3);
	split_sreg_range(0X7D03093A,"T",0X1,3);
	split_sreg_range(0X7D03093E,"T",0X1,3);
	split_sreg_range(0X7D03094A,"T",0X1,3);
	split_sreg_range(0X7D030950,"T",0X1,3);
	split_sreg_range(0X7D030956,"T",0X1,3);
	split_sreg_range(0X7D030984,"T",0X1,3);
	split_sreg_range(0X7D030988,"T",0X1,3);
	split_sreg_range(0X7D0309A2,"T",0X1,3);
	split_sreg_range(0X7D0309C0,"T",0X1,3);
	split_sreg_range(0X7D030A02,"T",0X1,3);
	split_sreg_range(0X7D030A3C,"T",0X1,3);
	split_sreg_range(0X7D030A5A,"T",0X1,3);
	split_sreg_range(0X7D030A8A,"T",0X1,3);
	split_sreg_range(0X7D030AA8,"T",0X1,3);
	split_sreg_range(0X7D030AEA,"T",0X1,3);
	split_sreg_range(0X7D030AEC,"T",0X1,3);
	split_sreg_range(0X7D030AF0,"T",0X1,3);
	split_sreg_range(0X7D030B04,"T",0X1,3);
	split_sreg_range(0X7D030B36,"T",0X1,3);
	split_sreg_range(0X7D030B42,"T",0X1,3);
	split_sreg_range(0X7D030B62,"T",0X1,3);
	split_sreg_range(0X7D030B98,"T",0X1,3);
	split_sreg_range(0X7D030B9C,"T",0X1,3);
	split_sreg_range(0X7D030B9E,"T",0X1,3);
	split_sreg_range(0X7D030BA4,"T",0X1,3);
	split_sreg_range(0X7D030BC0,"T",0X1,3);
	split_sreg_range(0X7D030BFE,"T",0X1,3);
	split_sreg_range(0X7D030C02,"T",0X1,3);
	split_sreg_range(0X7D030C06,"T",0X1,3);
	split_sreg_range(0X7D030C3A,"T",0X1,3);
	split_sreg_range(0X7D030C4A,"T",0X1,3);
	split_sreg_range(0X7D030C58,"T",0X1,3);
	split_sreg_range(0X7D030C5A,"T",0X1,3);
	split_sreg_range(0X7D030C6A,"T",0X1,3);
	split_sreg_range(0X7D030CA8,"T",0X1,3);
	split_sreg_range(0X7D030CCA,"T",0X1,3);
	split_sreg_range(0X7D030CCE,"T",0X1,3);
	split_sreg_range(0X7D030CD2,"T",0X1,3);
	split_sreg_range(0X7D030CEE,"T",0X1,3);
	split_sreg_range(0X7D030D24,"T",0X1,3);
	split_sreg_range(0X7D030D68,"T",0X1,3);
	split_sreg_range(0X7D030D6E,"T",0X1,3);
	split_sreg_range(0X7D030D70,"T",0X1,3);
	split_sreg_range(0X7D030D74,"T",0X1,3);
	split_sreg_range(0X7D030D78,"T",0X1,3);
	split_sreg_range(0X7D030DAE,"T",0X1,3);
	split_sreg_range(0X7D030DC0,"T",0X1,3);
	split_sreg_range(0X7D030DCE,"T",0X1,3);
	split_sreg_range(0X7D030DD0,"T",0X1,3);
	split_sreg_range(0X7D030DE2,"T",0X1,3);
	split_sreg_range(0X7D030E20,"T",0X1,3);
	split_sreg_range(0X7D030E4A,"T",0X1,3);
	split_sreg_range(0X7D030E4E,"T",0X1,3);
	split_sreg_range(0X7D030E52,"T",0X1,3);
	split_sreg_range(0X7D030E6E,"T",0X1,3);
	split_sreg_range(0X7D030EA4,"T",0X1,3);
	split_sreg_range(0X7D030EE8,"T",0X1,3);
	split_sreg_range(0X7D030EEE,"T",0X1,3);
	split_sreg_range(0X7D030EF0,"T",0X1,3);
	split_sreg_range(0X7D030EF4,"T",0X1,3);
	split_sreg_range(0X7D030EF8,"T",0X1,3);
	split_sreg_range(0X7D030F18,"T",0X1,3);
	split_sreg_range(0X7D030F1A,"T",0X1,3);
	split_sreg_range(0X7D030F1E,"T",0X1,3);
	split_sreg_range(0X7D030F22,"T",0X1,3);
	split_sreg_range(0X7D030F58,"T",0X1,3);
	split_sreg_range(0X7D030F6A,"T",0X1,3);
	split_sreg_range(0X7D030F78,"T",0X1,3);
	split_sreg_range(0X7D030F7A,"T",0X1,3);
	split_sreg_range(0X7D030F8C,"T",0X1,3);
	split_sreg_range(0X7D030FCA,"T",0X1,3);
	split_sreg_range(0X7D030FF4,"T",0X1,3);
	split_sreg_range(0X7D030FF8,"T",0X1,3);
	split_sreg_range(0X7D030FFC,"T",0X1,3);
	split_sreg_range(0X7D031018,"T",0X1,3);
	split_sreg_range(0X7D03104E,"T",0X1,3);
	split_sreg_range(0X7D031092,"T",0X1,3);
	split_sreg_range(0X7D031098,"T",0X1,3);
	split_sreg_range(0X7D03109A,"T",0X1,3);
	split_sreg_range(0X7D03109E,"T",0X1,3);
	split_sreg_range(0X7D0310A2,"T",0X1,3);
	split_sreg_range(0X7D0310C6,"T",0X1,3);
	split_sreg_range(0X7D0310C8,"T",0X1,3);
	split_sreg_range(0X7D0310CC,"T",0X1,3);
	split_sreg_range(0X7D0310D0,"T",0X1,3);
	split_sreg_range(0X7D031104,"T",0X1,3);
	split_sreg_range(0X7D031116,"T",0X1,3);
	split_sreg_range(0X7D031124,"T",0X1,3);
	split_sreg_range(0X7D031126,"T",0X1,3);
	split_sreg_range(0X7D031138,"T",0X1,3);
	split_sreg_range(0X7D031178,"T",0X1,3);
	split_sreg_range(0X7D0311BE,"T",0X1,3);
	split_sreg_range(0X7D0311C2,"T",0X1,3);
	split_sreg_range(0X7D0311C6,"T",0X1,3);
	split_sreg_range(0X7D0311E2,"T",0X1,3);
	split_sreg_range(0X7D031218,"T",0X1,3);
	split_sreg_range(0X7D03125C,"T",0X1,3);
	split_sreg_range(0X7D031262,"T",0X1,3);
	split_sreg_range(0X7D031264,"T",0X1,3);
	split_sreg_range(0X7D031268,"T",0X1,3);
	split_sreg_range(0X7D03126E,"T",0X1,3);
	split_sreg_range(0X7D031278,"T",0X1,3);
	split_sreg_range(0X7D03127A,"T",0X1,3);
	split_sreg_range(0X7D03128A,"T",0X1,3);
	split_sreg_range(0X7D03128E,"T",0X1,3);
	split_sreg_range(0X7D031294,"T",0X1,3);
	split_sreg_range(0X7D0312AA,"T",0X1,3);
	split_sreg_range(0X7D0312B6,"T",0X1,3);
	split_sreg_range(0X7D0312B8,"T",0X1,3);
	split_sreg_range(0X7D0312CC,"T",0X1,3);
	split_sreg_range(0X7D0312D2,"T",0X1,3);
	split_sreg_range(0X7D0312F6,"T",0X1,3);
	split_sreg_range(0X7D0312FC,"T",0X1,3);
	split_sreg_range(0X7D03130C,"T",0X1,3);
	split_sreg_range(0X7D031312,"T",0X1,3);
	split_sreg_range(0X7D031340,"T",0X1,3);
	split_sreg_range(0X7D031342,"T",0X1,3);
	split_sreg_range(0X7D031346,"T",0X1,3);
	split_sreg_range(0X7D03135E,"T",0X1,3);
	split_sreg_range(0X7D031360,"T",0X1,3);
	split_sreg_range(0X7D031366,"T",0X1,3);
	split_sreg_range(0X7D031376,"T",0X1,3);
	split_sreg_range(0X7D031378,"T",0X1,3);
	split_sreg_range(0X7D03137C,"T",0X1,3);
	split_sreg_range(0X7D0313BA,"T",0X1,3);
	split_sreg_range(0X7D0313C4,"T",0X1,3);
	split_sreg_range(0X7D0313E4,"T",0X1,3);
	split_sreg_range(0X7D031406,"T",0X1,3);
	split_sreg_range(0X7D031412,"T",0X1,3);
	split_sreg_range(0X7D03142A,"T",0X1,3);
	split_sreg_range(0X7D031454,"T",0X1,3);
	split_sreg_range(0X7D031456,"T",0X1,3);
	split_sreg_range(0X7D031460,"T",0X1,3);
	split_sreg_range(0X7D031472,"T",0X1,3);
	split_sreg_range(0X7D031482,"T",0X1,3);
	split_sreg_range(0X7D031494,"T",0X1,3);
	split_sreg_range(0X7D031498,"T",0X1,3);
	split_sreg_range(0X7D0314DC,"T",0X1,3);
	split_sreg_range(0X7D0314EE,"T",0X1,3);
	split_sreg_range(0X7D0314FE,"T",0X1,3);
	split_sreg_range(0X7D031502,"T",0X1,3);
	split_sreg_range(0X7D031504,"T",0X1,3);
	split_sreg_range(0X7D03150A,"T",0X1,3);
	split_sreg_range(0X7D031520,"T",0X1,3);
	split_sreg_range(0X7D031534,"T",0X1,3);
	split_sreg_range(0X7D03153E,"T",0X1,3);
	split_sreg_range(0X7D031540,"T",0X1,3);
	split_sreg_range(0X7D031544,"T",0X1,3);
	split_sreg_range(0X7D03156E,"T",0X1,3);
	split_sreg_range(0X7D03159C,"T",0X1,3);
	split_sreg_range(0X7D0315B8,"T",0X1,3);
	split_sreg_range(0X7D0315C2,"T",0X1,3);
	split_sreg_range(0X7D0315D6,"T",0X1,3);
	split_sreg_range(0X7D0315D8,"T",0X1,3);
	split_sreg_range(0X7D0315DE,"T",0X1,3);
	split_sreg_range(0X7D0315F8,"T",0X1,3);
	split_sreg_range(0X7D03160E,"T",0X1,3);
	split_sreg_range(0X7D031610,"T",0X1,3);
	split_sreg_range(0X7D031612,"T",0X1,3);
	split_sreg_range(0X7D031648,"T",0X1,3);
	split_sreg_range(0X7D031654,"T",0X1,3);
	split_sreg_range(0X7D031660,"T",0X1,3);
	split_sreg_range(0X7D03167E,"T",0X1,3);
	split_sreg_range(0X7D0316A4,"T",0X1,3);
	split_sreg_range(0X7D0316D8,"T",0X1,3);
	split_sreg_range(0X7D0316E2,"T",0X1,3);
	split_sreg_range(0X7D0316EC,"T",0X1,3);
	split_sreg_range(0X7D0316EE,"T",0X1,3);
	split_sreg_range(0X7D0316F4,"T",0X1,3);
	split_sreg_range(0X7D03172E,"T",0X1,3);
	split_sreg_range(0X7D031742,"T",0X1,3);
	split_sreg_range(0X7D031748,"T",0X1,3);
	split_sreg_range(0X7D031794,"T",0X1,3);
	split_sreg_range(0X7D0317A8,"T",0X1,3);
	split_sreg_range(0X7D0317AA,"T",0X1,3);
	split_sreg_range(0X7D0317B0,"T",0X1,3);
	split_sreg_range(0X7D0317C6,"T",0X1,3);
	split_sreg_range(0X7D0317CA,"T",0X1,3);
	split_sreg_range(0X7D0317CE,"T",0X1,3);
	split_sreg_range(0X7D0317DA,"T",0X1,3);
	split_sreg_range(0X7D0317DE,"T",0X1,3);
	split_sreg_range(0X7D0317E2,"T",0X1,3);
	split_sreg_range(0X7D0317F6,"T",0X1,3);
	split_sreg_range(0X7D0317FA,"T",0X1,3);
	split_sreg_range(0X7D03180A,"T",0X1,3);
	split_sreg_range(0X7D031810,"T",0X1,3);
	split_sreg_range(0X7D031822,"T",0X1,3);
	split_sreg_range(0X7D03182A,"T",0X1,3);
	split_sreg_range(0X7D031832,"T",0X1,3);
	split_sreg_range(0X7D031836,"T",0X1,3);
	split_sreg_range(0X7D03183A,"T",0X1,3);
	split_sreg_range(0X7D031850,"T",0X1,3);
	split_sreg_range(0X7D031854,"T",0X1,3);
	split_sreg_range(0X7D031864,"T",0X1,3);
	split_sreg_range(0X7D031868,"T",0X1,3);
	split_sreg_range(0X7D03187A,"T",0X1,3);
	split_sreg_range(0X7D03187E,"T",0X1,3);
	split_sreg_range(0X7D031882,"T",0X1,3);
	split_sreg_range(0X7D031888,"T",0X1,3);
	split_sreg_range(0X7D03188C,"T",0X1,3);
	split_sreg_range(0X7D031898,"T",0X1,3);
	split_sreg_range(0X7D03189C,"T",0X1,3);
	split_sreg_range(0X7D0318B0,"T",0X1,3);
	split_sreg_range(0X7D0318B4,"T",0X1,3);
	split_sreg_range(0X7D0318CC,"T",0X1,3);
	split_sreg_range(0X7D0318DA,"T",0X1,3);
	split_sreg_range(0X7D0318EE,"T",0X1,3);
	split_sreg_range(0X7D0318F2,"T",0X1,3);
	split_sreg_range(0X7D0318F6,"T",0X1,3);
	split_sreg_range(0X7D03190E,"T",0X1,3);
	split_sreg_range(0X7D031912,"T",0X1,3);
	split_sreg_range(0X7D03192C,"T",0X1,3);
	split_sreg_range(0X7D031930,"T",0X1,3);
	split_sreg_range(0X7D03193C,"T",0X1,3);
	split_sreg_range(0X7D031948,"T",0X1,3);
	split_sreg_range(0X7D03194A,"T",0X1,3);
	split_sreg_range(0X7D031958,"T",0X1,3);
	split_sreg_range(0X7D03195C,"T",0X1,3);
	split_sreg_range(0X7D03195E,"T",0X1,3);
	split_sreg_range(0X7D031960,"T",0X1,3);
	split_sreg_range(0X7D03196C,"T",0X1,3);
	split_sreg_range(0X7D031970,"T",0X1,3);
	split_sreg_range(0X7D031994,"T",0X1,3);
	split_sreg_range(0X7D031996,"T",0X1,3);
	split_sreg_range(0X7D031998,"T",0X1,3);
	split_sreg_range(0X7D0319B8,"T",0X1,3);
	split_sreg_range(0X7D0319BA,"T",0X1,3);
	split_sreg_range(0X7D0319BE,"T",0X1,3);
	split_sreg_range(0X7D0319D4,"T",0X1,3);
	split_sreg_range(0X7D0319DA,"T",0X1,3);
	split_sreg_range(0X7D0319DE,"T",0X1,3);
	split_sreg_range(0X7D031A1A,"T",0X1,3);
	split_sreg_range(0X7D031A22,"T",0X1,3);
	split_sreg_range(0X7D031A26,"T",0X1,3);
	split_sreg_range(0X7D031A28,"T",0X1,3);
	split_sreg_range(0X7D031A2E,"T",0X1,3);
	split_sreg_range(0X7D031A62,"T",0X1,3);
	split_sreg_range(0X7D031A6C,"T",0X1,3);
	split_sreg_range(0X7D031A70,"T",0X1,3);
	split_sreg_range(0X7D031A72,"T",0X1,3);
	split_sreg_range(0X7D031A76,"T",0X1,3);
	split_sreg_range(0X7D031A8E,"T",0X1,3);
	split_sreg_range(0X7D031A92,"T",0X1,3);
	split_sreg_range(0X7D031AC8,"T",0X1,3);
	split_sreg_range(0X7D031AE6,"T",0X1,3);
	split_sreg_range(0X7D031AF4,"T",0X1,3);
	split_sreg_range(0X7D031B00,"T",0X1,3);
	split_sreg_range(0X7D031B10,"T",0X1,3);
	split_sreg_range(0X7D031B14,"T",0X1,3);
	split_sreg_range(0X7D031B40,"T",0X1,3);
	split_sreg_range(0X7D031B42,"T",0X1,3);
	split_sreg_range(0X7D031B46,"T",0X1,3);
	split_sreg_range(0X7D031BE6,"T",0X1,3);
	split_sreg_range(0X7D031C2C,"T",0X1,3);
	split_sreg_range(0X7D031C34,"T",0X1,3);
	split_sreg_range(0X7D031D06,"T",0X1,3);
	split_sreg_range(0X7D031D0A,"T",0X1,3);
	split_sreg_range(0X7D031D18,"T",0X1,3);
	split_sreg_range(0X7D031D1E,"T",0X1,3);
	split_sreg_range(0X7D031D34,"T",0X1,3);
	split_sreg_range(0X7D031D44,"T",0X1,3);
	split_sreg_range(0X7D031D46,"T",0X1,3);
	split_sreg_range(0X7D031D4A,"T",0X1,3);
	split_sreg_range(0X7D031D5E,"T",0X1,3);
	split_sreg_range(0X7D031D64,"T",0X1,3);
	split_sreg_range(0X7D031D6E,"T",0X1,3);
	split_sreg_range(0X7D031D78,"T",0X1,3);
	split_sreg_range(0X7D031D7C,"T",0X1,3);
	split_sreg_range(0X7D031D7E,"T",0X1,3);
	split_sreg_range(0X7D031D84,"T",0X1,3);
	split_sreg_range(0X7D031DAA,"T",0X1,3);
	split_sreg_range(0X7D031DB6,"T",0X1,3);
	split_sreg_range(0X7D031DC0,"T",0X1,3);
	split_sreg_range(0X7D031E0E,"T",0X1,3);
	split_sreg_range(0X7D031E58,"T",0X1,3);
	split_sreg_range(0X7D031E60,"T",0X1,3);
	split_sreg_range(0X7D031E68,"T",0X1,3);
	split_sreg_range(0X7D031E72,"T",0X1,3);
	split_sreg_range(0X7D031E7C,"T",0X1,3);
	split_sreg_range(0X7D031E88,"T",0X1,3);
	split_sreg_range(0X7D031EA4,"T",0X1,3);
	split_sreg_range(0X7D031EB4,"T",0X1,3);
	split_sreg_range(0X7D031ECA,"T",0X1,3);
	split_sreg_range(0X7D031EE2,"T",0X1,3);
	split_sreg_range(0X7D031EF6,"T",0X1,3);
	split_sreg_range(0X7D032020,"T",0X1,3);
	split_sreg_range(0X7D03202E,"T",0X1,3);
	split_sreg_range(0X7D032036,"T",0X1,3);
	split_sreg_range(0X7D03203E,"T",0X1,3);
	split_sreg_range(0X7D032040,"T",0X1,3);
	split_sreg_range(0X7D032046,"T",0X1,3);
	split_sreg_range(0X7D03205C,"T",0X1,3);
	split_sreg_range(0X7D032068,"T",0X1,3);
	split_sreg_range(0X7D032070,"T",0X1,3);
	split_sreg_range(0X7D0320F4,"T",0X1,3);
	split_sreg_range(0X7D0320FA,"T",0X1,3);
	split_sreg_range(0X7D032100,"T",0X1,3);
	split_sreg_range(0X7D032108,"T",0X1,3);
	split_sreg_range(0X7D032112,"T",0X1,3);
	split_sreg_range(0X7D03211A,"T",0X1,3);
	split_sreg_range(0X7D032120,"T",0X1,3);
	split_sreg_range(0X7D032122,"T",0X1,3);
	split_sreg_range(0X7D032128,"T",0X1,3);
	split_sreg_range(0X7D03214A,"T",0X1,3);
	split_sreg_range(0X7D032156,"T",0X1,3);
	split_sreg_range(0X7D032162,"T",0X1,3);
	split_sreg_range(0X7D032166,"T",0X1,3);
	split_sreg_range(0X7D03216A,"T",0X1,3);
	split_sreg_range(0X7D03216C,"T",0X1,3);
	split_sreg_range(0X7D03218C,"T",0X1,3);
	split_sreg_range(0X7D03219A,"T",0X1,3);
	split_sreg_range(0X7D0321A0,"T",0X1,3);
	split_sreg_range(0X7D0321A4,"T",0X1,3);
	split_sreg_range(0X7D0321A8,"T",0X1,3);
	split_sreg_range(0X7D0321CC,"T",0X1,3);
	split_sreg_range(0X7D0321D2,"T",0X1,3);
	split_sreg_range(0X7D0321DA,"T",0X1,3);
	split_sreg_range(0X7D0321F6,"T",0X1,3);
	split_sreg_range(0X7D032200,"T",0X1,3);
	split_sreg_range(0X7D032214,"T",0X1,3);
	split_sreg_range(0X7D032218,"T",0X1,3);
	split_sreg_range(0X7D032226,"T",0X1,3);
	split_sreg_range(0X7D03222E,"T",0X1,3);
	split_sreg_range(0X7D032230,"T",0X1,3);
	split_sreg_range(0X7D032234,"T",0X1,3);
	split_sreg_range(0X7D03223C,"T",0X1,3);
	split_sreg_range(0X7D032244,"T",0X1,3);
	split_sreg_range(0X7D03225E,"T",0X1,3);
	split_sreg_range(0X7D032262,"T",0X1,3);
	split_sreg_range(0X7D032284,"T",0X1,3);
	split_sreg_range(0X7D032288,"T",0X1,3);
	split_sreg_range(0X7D032296,"T",0X1,3);
	split_sreg_range(0X7D0322B0,"T",0X1,3);
	split_sreg_range(0X7D032360,"T",0X1,3);
	split_sreg_range(0X7D032398,"T",0X1,3);
	split_sreg_range(0X7D0323B8,"T",0X1,3);
	split_sreg_range(0X7D0323BC,"T",0X1,3);
	split_sreg_range(0X7D0323C6,"T",0X1,3);
	split_sreg_range(0X7D0323FC,"T",0X1,3);
	split_sreg_range(0X7D03240E,"T",0X1,3);
	split_sreg_range(0X7D032410,"T",0X1,3);
	split_sreg_range(0X7D032414,"T",0X1,3);
	split_sreg_range(0X7D032426,"T",0X1,3);
	split_sreg_range(0X7D03242E,"T",0X1,3);
	split_sreg_range(0X7D032432,"T",0X1,3);
	split_sreg_range(0X7D032446,"T",0X1,3);
	split_sreg_range(0X7D03244C,"T",0X1,3);
	split_sreg_range(0X7D032472,"T",0X1,3);
	split_sreg_range(0X7D032482,"T",0X1,3);
	split_sreg_range(0X7D032486,"T",0X1,3);
	split_sreg_range(0X7D032488,"T",0X1,3);
	split_sreg_range(0X7D032490,"T",0X1,3);
	split_sreg_range(0X7D03249C,"T",0X1,3);
	split_sreg_range(0X7D0324AE,"T",0X1,3);
	split_sreg_range(0X7D0324C8,"T",0X1,3);
	split_sreg_range(0X7D0324E6,"T",0X1,3);
	split_sreg_range(0X7D0324F4,"T",0X1,3);
	split_sreg_range(0X7D0324FC,"T",0X1,3);
	split_sreg_range(0X7D032504,"T",0X1,3);
	split_sreg_range(0X7D03250A,"T",0X1,3);
	split_sreg_range(0X7D032520,"T",0X1,3);
	split_sreg_range(0X7D032524,"T",0X1,3);
	split_sreg_range(0X7D032528,"T",0X1,3);
	split_sreg_range(0X7D032532,"T",0X1,3);
	split_sreg_range(0X7D032538,"T",0X1,3);
	split_sreg_range(0X7D03256A,"T",0X1,3);
	split_sreg_range(0X7D03257A,"T",0X1,3);
	split_sreg_range(0X7D03257E,"T",0X1,3);
	split_sreg_range(0X7D032580,"T",0X1,3);
	split_sreg_range(0X7D03258E,"T",0X1,3);
	split_sreg_range(0X7D03259A,"T",0X1,3);
	split_sreg_range(0X7D0325B0,"T",0X1,3);
	split_sreg_range(0X7D0325B8,"T",0X1,3);
	split_sreg_range(0X7D0325BE,"T",0X1,3);
	split_sreg_range(0X7D0325CC,"T",0X1,3);
	split_sreg_range(0X7D0325DE,"T",0X1,3);
	split_sreg_range(0X7D0325E6,"T",0X1,3);
	split_sreg_range(0X7D0325EE,"T",0X1,3);
	split_sreg_range(0X7D0325F8,"T",0X1,3);
	split_sreg_range(0X7D032600,"T",0X1,3);
	split_sreg_range(0X7D032606,"T",0X1,3);
	split_sreg_range(0X7D03260A,"T",0X1,3);
	split_sreg_range(0X7D03263C,"T",0X1,3);
	split_sreg_range(0X7D03263E,"T",0X1,3);
	split_sreg_range(0X7D032648,"T",0X1,3);
	split_sreg_range(0X7D03264E,"T",0X1,3);
	split_sreg_range(0X7D032654,"T",0X1,3);
	split_sreg_range(0X7D032660,"T",0X1,3);
	split_sreg_range(0X7D032668,"T",0X1,3);
	split_sreg_range(0X7D03266C,"T",0X1,3);
	split_sreg_range(0X7D032676,"T",0X1,3);
	split_sreg_range(0X7D03269A,"T",0X1,3);
	split_sreg_range(0X7D03269E,"T",0X1,3);
	split_sreg_range(0X7D0326A2,"T",0X1,3);
	split_sreg_range(0X7D0326A6,"T",0X1,3);
	split_sreg_range(0X7D0326D8,"T",0X1,3);
	split_sreg_range(0X7D0326E8,"T",0X1,3);
	split_sreg_range(0X7D0326EC,"T",0X1,3);
	split_sreg_range(0X7D0326EE,"T",0X1,3);
	split_sreg_range(0X7D03270E,"T",0X1,3);
	split_sreg_range(0X7D032714,"T",0X1,3);
	split_sreg_range(0X7D03273A,"T",0X1,3);
	split_sreg_range(0X7D032740,"T",0X1,3);
	split_sreg_range(0X7D032744,"T",0X1,3);
	split_sreg_range(0X7D032748,"T",0X1,3);
	split_sreg_range(0X7D03277A,"T",0X1,3);
	split_sreg_range(0X7D032796,"T",0X1,3);
	split_sreg_range(0X7D0327A2,"T",0X1,3);
	split_sreg_range(0X7D0327B6,"T",0X1,3);
	split_sreg_range(0X7D0327B8,"T",0X1,3);
	split_sreg_range(0X7D0327C6,"T",0X1,3);
	split_sreg_range(0X7D0327F4,"T",0X1,3);
	split_sreg_range(0X7D0327F8,"T",0X1,3);
	split_sreg_range(0X7D032800,"T",0X1,3);
	split_sreg_range(0X7D032806,"T",0X1,3);
	split_sreg_range(0X7D032808,"T",0X1,3);
	split_sreg_range(0X7D03280E,"T",0X1,3);
	split_sreg_range(0X7D032826,"T",0X1,3);
	split_sreg_range(0X7D03282E,"T",0X1,3);
	split_sreg_range(0X7D032836,"T",0X1,3);
	split_sreg_range(0X7D03283C,"T",0X1,3);
	split_sreg_range(0X7D032840,"T",0X1,3);
	split_sreg_range(0X7D032874,"T",0X1,3);
	split_sreg_range(0X7D032884,"T",0X1,3);
	split_sreg_range(0X7D032888,"T",0X1,3);
	split_sreg_range(0X7D03288A,"T",0X1,3);
	split_sreg_range(0X7D0328AE,"T",0X1,3);
	split_sreg_range(0X7D0328B6,"T",0X1,3);
	split_sreg_range(0X7D0328D4,"T",0X1,3);
	split_sreg_range(0X7D0328E0,"T",0X1,3);
	split_sreg_range(0X7D0328EC,"T",0X1,3);
	split_sreg_range(0X7D0328F2,"T",0X1,3);
	split_sreg_range(0X7D0328F8,"T",0X1,3);
	split_sreg_range(0X7D03292A,"T",0X1,3);
	split_sreg_range(0X7D032946,"T",0X1,3);
	split_sreg_range(0X7D032952,"T",0X1,3);
	split_sreg_range(0X7D032966,"T",0X1,3);
	split_sreg_range(0X7D032968,"T",0X1,3);
	split_sreg_range(0X7D032978,"T",0X1,3);
	split_sreg_range(0X7D0329BC,"T",0X1,3);
	split_sreg_range(0X7D0329C0,"T",0X1,3);
	split_sreg_range(0X7D0329C8,"T",0X1,3);
	split_sreg_range(0X7D0329CE,"T",0X1,3);
	split_sreg_range(0X7D0329D0,"T",0X1,3);
	split_sreg_range(0X7D0329D6,"T",0X1,3);
	split_sreg_range(0X7D032A02,"T",0X1,3);
	split_sreg_range(0X7D032A06,"T",0X1,3);
	split_sreg_range(0X7D032A1A,"T",0X1,3);
	split_sreg_range(0X7D032A2E,"T",0X1,3);
	split_sreg_range(0X7D032A32,"T",0X1,3);
	split_sreg_range(0X7D032A3C,"T",0X1,3);
	split_sreg_range(0X7D032A40,"T",0X1,3);
	split_sreg_range(0X7D032A66,"T",0X1,3);
	split_sreg_range(0X7D032A72,"T",0X1,3);
	split_sreg_range(0X7D032A76,"T",0X1,3);
	split_sreg_range(0X7D032A7A,"T",0X1,3);
	split_sreg_range(0X7D032A88,"T",0X1,3);
	split_sreg_range(0X7D032B24,"T",0X1,3);
	split_sreg_range(0X7D032BF2,"T",0X1,3);
	split_sreg_range(0X7D032C28,"T",0X1,3);
	split_sreg_range(0X7D032C2E,"T",0X1,3);
	split_sreg_range(0X7D032C34,"T",0X1,3);
	split_sreg_range(0X7D032C3C,"T",0X1,3);
	split_sreg_range(0X7D032C3E,"T",0X1,3);
	split_sreg_range(0X7D032C44,"T",0X1,3);
	split_sreg_range(0X7D032C4E,"T",0X1,3);
	split_sreg_range(0X7D032C54,"T",0X1,3);
	split_sreg_range(0X7D032C86,"T",0X1,3);
	split_sreg_range(0X7D032C96,"T",0X1,3);
	split_sreg_range(0X7D032C9A,"T",0X1,3);
	split_sreg_range(0X7D032C9C,"T",0X1,3);
	split_sreg_range(0X7D032CAA,"T",0X1,3);
	split_sreg_range(0X7D032CB6,"T",0X1,3);
	split_sreg_range(0X7D032CCC,"T",0X1,3);
	split_sreg_range(0X7D032CD4,"T",0X1,3);
	split_sreg_range(0X7D032CDA,"T",0X1,3);
	split_sreg_range(0X7D032CE8,"T",0X1,3);
	split_sreg_range(0X7D032CEC,"T",0X1,3);
	split_sreg_range(0X7D032D0E,"T",0X1,3);
	split_sreg_range(0X7D032D1C,"T",0X1,3);
	split_sreg_range(0X7D032D22,"T",0X1,3);
	split_sreg_range(0X7D032D30,"T",0X1,3);
	split_sreg_range(0X7D032D44,"T",0X1,3);
	split_sreg_range(0X7D032D5C,"T",0X1,3);
	split_sreg_range(0X7D032D6E,"T",0X1,3);
	split_sreg_range(0X7D032D76,"T",0X1,3);
	split_sreg_range(0X7D032D7C,"T",0X1,3);
	split_sreg_range(0X7D032D8A,"T",0X1,3);
	split_sreg_range(0X7D032D9C,"T",0X1,3);
	split_sreg_range(0X7D032DA4,"T",0X1,3);
	split_sreg_range(0X7D032DAC,"T",0X1,3);
	split_sreg_range(0X7D032DB6,"T",0X1,3);
	split_sreg_range(0X7D032DBE,"T",0X1,3);
	split_sreg_range(0X7D032DC4,"T",0X1,3);
	split_sreg_range(0X7D032DC8,"T",0X1,3);
	split_sreg_range(0X7D032DDC,"T",0X1,3);
	split_sreg_range(0X7D032DE2,"T",0X1,3);
	split_sreg_range(0X7D032DF6,"T",0X1,3);
	split_sreg_range(0X7D032E0A,"T",0X1,3);
	split_sreg_range(0X7D032E1A,"T",0X1,3);
	split_sreg_range(0X7D032E1C,"T",0X1,3);
	split_sreg_range(0X7D032E26,"T",0X1,3);
	split_sreg_range(0X7D032E2C,"T",0X1,3);
	split_sreg_range(0X7D032E32,"T",0X1,3);
	split_sreg_range(0X7D032E3E,"T",0X1,3);
	split_sreg_range(0X7D032E6A,"T",0X1,3);
	split_sreg_range(0X7D032E72,"T",0X1,3);
	split_sreg_range(0X7D032E80,"T",0X1,3);
	split_sreg_range(0X7D032E90,"T",0X1,3);
	split_sreg_range(0X7D032E94,"T",0X1,3);
	split_sreg_range(0X7D032EBA,"T",0X1,3);
	split_sreg_range(0X7D032ED2,"T",0X1,3);
	split_sreg_range(0X7D032F0C,"T",0X1,3);
	split_sreg_range(0X7D032F1E,"T",0X1,3);
	split_sreg_range(0X7D032F2E,"T",0X1,3);
	split_sreg_range(0X7D032F42,"T",0X1,3);
	split_sreg_range(0X7D032F54,"T",0X1,3);
	split_sreg_range(0X7D032F62,"T",0X1,3);
	split_sreg_range(0X7D032F7C,"T",0X1,3);
	split_sreg_range(0X7D032F92,"T",0X1,3);
	split_sreg_range(0X7D032F96,"T",0X1,3);
	split_sreg_range(0X7D032F9A,"T",0X1,3);
	split_sreg_range(0X7D032FAC,"T",0X1,3);
	split_sreg_range(0X7D032FB2,"T",0X1,3);
	split_sreg_range(0X7D032FB8,"T",0X1,3);
	split_sreg_range(0X7D032FBA,"T",0X1,3);
	split_sreg_range(0X7D032FC2,"T",0X1,3);
	split_sreg_range(0X7D032FC6,"T",0X1,3);
	split_sreg_range(0X7D032FEC,"T",0X1,3);
	split_sreg_range(0X7D033000,"T",0X1,3);
	split_sreg_range(0X7D033040,"T",0X1,3);
	split_sreg_range(0X7D033048,"T",0X1,3);
	split_sreg_range(0X7D033050,"T",0X1,3);
	split_sreg_range(0X7D03305A,"T",0X1,3);
	split_sreg_range(0X7D033060,"T",0X1,3);
	split_sreg_range(0X7D033092,"T",0X1,3);
	split_sreg_range(0X7D0330A2,"T",0X1,3);
	split_sreg_range(0X7D0330A6,"T",0X1,3);
	split_sreg_range(0X7D0330A8,"T",0X1,3);
	split_sreg_range(0X7D0330B4,"T",0X1,3);
	split_sreg_range(0X7D0330BE,"T",0X1,3);
	split_sreg_range(0X7D0330CA,"T",0X1,3);
	split_sreg_range(0X7D0330D0,"T",0X1,3);
	split_sreg_range(0X7D0330D4,"T",0X1,3);
	split_sreg_range(0X7D0330D8,"T",0X1,3);
	split_sreg_range(0X7D0330E4,"T",0X1,3);
	split_sreg_range(0X7D0330E8,"T",0X1,3);
	split_sreg_range(0X7D033108,"T",0X1,3);
	split_sreg_range(0X7D033116,"T",0X1,3);
	split_sreg_range(0X7D03311C,"T",0X1,3);
	split_sreg_range(0X7D03312A,"T",0X1,3);
	split_sreg_range(0X7D03313C,"T",0X1,3);
	split_sreg_range(0X7D033154,"T",0X1,3);
	split_sreg_range(0X7D033160,"T",0X1,3);
	split_sreg_range(0X7D033166,"T",0X1,3);
	split_sreg_range(0X7D03316A,"T",0X1,3);
	split_sreg_range(0X7D033174,"T",0X1,3);
	split_sreg_range(0X7D03317C,"T",0X1,3);
	split_sreg_range(0X7D033186,"T",0X1,3);
	split_sreg_range(0X7D03318E,"T",0X1,3);
	split_sreg_range(0X7D033194,"T",0X1,3);
	split_sreg_range(0X7D033198,"T",0X1,3);
	split_sreg_range(0X7D0331A2,"T",0X1,3);
	split_sreg_range(0X7D0331A8,"T",0X1,3);
	split_sreg_range(0X7D0331DA,"T",0X1,3);
	split_sreg_range(0X7D0331EA,"T",0X1,3);
	split_sreg_range(0X7D0331EE,"T",0X1,3);
	split_sreg_range(0X7D0331F0,"T",0X1,3);
	split_sreg_range(0X7D0331FE,"T",0X1,3);
	split_sreg_range(0X7D03320A,"T",0X1,3);
	split_sreg_range(0X7D033220,"T",0X1,3);
	split_sreg_range(0X7D033228,"T",0X1,3);
	split_sreg_range(0X7D03322E,"T",0X1,3);
	split_sreg_range(0X7D03323C,"T",0X1,3);
	split_sreg_range(0X7D033240,"T",0X1,3);
	split_sreg_range(0X7D033262,"T",0X1,3);
	split_sreg_range(0X7D033270,"T",0X1,3);
	split_sreg_range(0X7D033276,"T",0X1,3);
	split_sreg_range(0X7D033284,"T",0X1,3);
	split_sreg_range(0X7D033298,"T",0X1,3);
	split_sreg_range(0X7D0332B0,"T",0X1,3);
	split_sreg_range(0X7D0332C2,"T",0X1,3);
	split_sreg_range(0X7D0332CA,"T",0X1,3);
	split_sreg_range(0X7D0332D0,"T",0X1,3);
	split_sreg_range(0X7D0332DE,"T",0X1,3);
	split_sreg_range(0X7D0332F0,"T",0X1,3);
	split_sreg_range(0X7D0332F8,"T",0X1,3);
	split_sreg_range(0X7D033300,"T",0X1,3);
	split_sreg_range(0X7D03330A,"T",0X1,3);
	split_sreg_range(0X7D033312,"T",0X1,3);
	split_sreg_range(0X7D033318,"T",0X1,3);
	split_sreg_range(0X7D03331C,"T",0X1,3);
	split_sreg_range(0X7D033336,"T",0X1,3);
	split_sreg_range(0X7D03334C,"T",0X1,3);
	split_sreg_range(0X7D03336C,"T",0X1,3);
	split_sreg_range(0X7D03336E,"T",0X1,3);
	split_sreg_range(0X7D033382,"T",0X1,3);
	split_sreg_range(0X7D03338C,"T",0X1,3);
	split_sreg_range(0X7D033392,"T",0X1,3);
	split_sreg_range(0X7D033398,"T",0X1,3);
	split_sreg_range(0X7D0333C0,"T",0X1,3);
	split_sreg_range(0X7D0333C4,"T",0X1,3);
	split_sreg_range(0X7D0333CC,"T",0X1,3);
	split_sreg_range(0X7D0333DE,"T",0X1,3);
	split_sreg_range(0X7D033408,"T",0X1,3);
	split_sreg_range(0X7D03341C,"T",0X1,3);
	split_sreg_range(0X7D033428,"T",0X1,3);
	split_sreg_range(0X7D03342C,"T",0X1,3);
	split_sreg_range(0X7D033436,"T",0X1,3);
	split_sreg_range(0X7D03345C,"T",0X1,3);
	split_sreg_range(0X7D033470,"T",0X1,3);
	split_sreg_range(0X7D033476,"T",0X1,3);
	split_sreg_range(0X7D033488,"T",0X1,3);
	split_sreg_range(0X7D03348A,"T",0X1,3);
	split_sreg_range(0X7D0334A4,"T",0X1,3);
	split_sreg_range(0X7D0334C8,"T",0X1,3);
	split_sreg_range(0X7D0334F6,"T",0X1,3);
	split_sreg_range(0X7D033506,"T",0X1,3);
	split_sreg_range(0X7D033512,"T",0X1,3);
	split_sreg_range(0X7D03352C,"T",0X1,3);
	split_sreg_range(0X7D033532,"T",0X1,3);
	split_sreg_range(0X7D033570,"T",0X1,3);
	split_sreg_range(0X7D033580,"T",0X1,3);
	split_sreg_range(0X7D033582,"T",0X1,3);
	split_sreg_range(0X7D03358C,"T",0X1,3);
	split_sreg_range(0X7D033598,"T",0X1,3);
	split_sreg_range(0X7D0335A0,"T",0X1,3);
	split_sreg_range(0X7D0335A4,"T",0X1,3);
	split_sreg_range(0X7D0335B8,"T",0X1,3);
	split_sreg_range(0X7D0335CE,"T",0X1,3);
	split_sreg_range(0X7D0335D2,"T",0X1,3);
	split_sreg_range(0X7D0335EC,"T",0X1,3);
	split_sreg_range(0X7D0335FA,"T",0X1,3);
	split_sreg_range(0X7D033604,"T",0X1,3);
	split_sreg_range(0X7D033608,"T",0X1,3);
	split_sreg_range(0X7D03363E,"T",0X1,3);
	split_sreg_range(0X7D033674,"T",0X1,3);
	split_sreg_range(0X7D0336A0,"T",0X1,3);
	split_sreg_range(0X7D0336B2,"T",0X1,3);
	split_sreg_range(0X7D0336C2,"T",0X1,3);
	split_sreg_range(0X7D0336C6,"T",0X1,3);
	split_sreg_range(0X7D0336CC,"T",0X1,3);
	split_sreg_range(0X7D0336EA,"T",0X1,3);
	split_sreg_range(0X7D033728,"T",0X1,3);
	split_sreg_range(0X7D033736,"T",0X1,3);
	split_sreg_range(0X7D03379A,"T",0X1,3);
	split_sreg_range(0X7D0337A8,"T",0X1,3);
	split_sreg_range(0X7D0337C0,"T",0X1,3);
	split_sreg_range(0X7D033800,"T",0X1,3);
	split_sreg_range(0X7D03384C,"T",0X1,3);
	split_sreg_range(0X7D03386E,"T",0X1,3);
	split_sreg_range(0X7D033894,"T",0X1,3);
	split_sreg_range(0X7D0338E6,"T",0X1,3);
	split_sreg_range(0X7D03391A,"T",0X1,3);
	split_sreg_range(0X7D033924,"T",0X1,3);
	split_sreg_range(0X7D0339D2,"T",0X1,3);
	split_sreg_range(0X7D0339E8,"T",0X1,3);
	split_sreg_range(0X7D0339FC,"T",0X1,3);
	split_sreg_range(0X7D033A08,"T",0X1,3);
	split_sreg_range(0X7D033A4C,"T",0X1,3);
	split_sreg_range(0X7D033A58,"T",0X1,3);
	split_sreg_range(0X7D033A64,"T",0X1,3);
	split_sreg_range(0X7D033A6A,"T",0X1,3);
	split_sreg_range(0X7D033A9C,"T",0X1,3);
	split_sreg_range(0X7D033AAA,"T",0X1,3);
	split_sreg_range(0X7D033ABC,"T",0X1,3);
	split_sreg_range(0X7D033AF6,"T",0X1,3);
	split_sreg_range(0X7D033AFC,"T",0X1,3);
	split_sreg_range(0X7D033B04,"T",0X1,3);
	split_sreg_range(0X7D033B0C,"T",0X1,3);
	split_sreg_range(0X7D033B12,"T",0X1,3);
	split_sreg_range(0X7D033B2A,"T",0X1,3);
	split_sreg_range(0X7D033B38,"T",0X1,3);
	split_sreg_range(0X7D033B3E,"T",0X1,3);
	split_sreg_range(0X7D033B48,"T",0X1,3);
	split_sreg_range(0X7D033B56,"T",0X1,3);
	split_sreg_range(0X7D033B5C,"T",0X1,3);
	split_sreg_range(0X7D033B74,"T",0X1,3);
	split_sreg_range(0X7D033B82,"T",0X1,3);
	split_sreg_range(0X7D033B8C,"T",0X1,3);
	split_sreg_range(0X7D033B9A,"T",0X1,3);
	split_sreg_range(0X7D033BA0,"T",0X1,3);
	split_sreg_range(0X7D033BC6,"T",0X1,3);
	split_sreg_range(0X7D033BE0,"T",0X1,3);
	split_sreg_range(0X7D033BEC,"T",0X1,3);
	split_sreg_range(0X7D033BEE,"T",0X1,3);
	split_sreg_range(0X7D033C1C,"T",0X1,3);
	split_sreg_range(0X7D033C24,"T",0X1,3);
	split_sreg_range(0X7D033C2E,"T",0X1,3);
	split_sreg_range(0X7D033C48,"T",0X1,3);
	split_sreg_range(0X7D033C7A,"T",0X1,3);
	split_sreg_range(0X7D033C80,"T",0X1,3);
	split_sreg_range(0X7D033C90,"T",0X1,3);
	split_sreg_range(0X7D033CA2,"T",0X1,3);
	split_sreg_range(0X7D033CC8,"T",0X1,3);
	split_sreg_range(0X7D033CEC,"T",0X1,3);
	split_sreg_range(0X7D033CF6,"T",0X1,3);
	split_sreg_range(0X7D033D00,"T",0X1,3);
	split_sreg_range(0X7D033D24,"T",0X1,3);
	split_sreg_range(0X7D033D2C,"T",0X1,3);
	split_sreg_range(0X7D033D86,"T",0X1,3);
	split_sreg_range(0X7D033DA2,"T",0X1,3);
	split_sreg_range(0X7D033DB2,"T",0X1,3);
	split_sreg_range(0X7D033DCA,"T",0X1,3);
	split_sreg_range(0X7D033DD6,"T",0X1,3);
	split_sreg_range(0X7D033DE0,"T",0X1,3);
	split_sreg_range(0X7D033E12,"T",0X1,3);
	split_sreg_range(0X7D033E18,"T",0X1,3);
	split_sreg_range(0X7D033E22,"T",0X1,3);
	split_sreg_range(0X7D033E2E,"T",0X1,3);
	split_sreg_range(0X7D033E3E,"T",0X1,3);
	split_sreg_range(0X7D033E58,"T",0X1,3);
	split_sreg_range(0X7D033E62,"T",0X1,3);
	split_sreg_range(0X7D033E70,"T",0X1,3);
	split_sreg_range(0X7D033E90,"T",0X1,3);
	split_sreg_range(0X7D033E9A,"T",0X1,3);
	split_sreg_range(0X7D033EA4,"T",0X1,3);
	split_sreg_range(0X7D033EE6,"T",0X1,3);
	split_sreg_range(0X7D033EEC,"T",0X1,3);
	split_sreg_range(0X7D033F32,"T",0X1,3);
	split_sreg_range(0X7D033F38,"T",0X1,3);
	split_sreg_range(0X7D033F42,"T",0X1,3);
	split_sreg_range(0X7D033F48,"T",0X1,3);
	split_sreg_range(0X7D033F4C,"T",0X1,3);
	split_sreg_range(0X7D033F58,"T",0X1,3);
	split_sreg_range(0X7D033F5E,"T",0X1,3);
	split_sreg_range(0X7D033F8A,"T",0X1,3);
	split_sreg_range(0X7D033FB4,"T",0X1,3);
	split_sreg_range(0X7D033FFC,"T",0X1,3);
	split_sreg_range(0X7D034006,"T",0X1,3);
	split_sreg_range(0X7D034012,"T",0X1,3);
	split_sreg_range(0X7D034020,"T",0X1,3);
	split_sreg_range(0X7D034030,"T",0X1,3);
	split_sreg_range(0X7D034040,"T",0X1,3);
	split_sreg_range(0X7D034052,"T",0X1,3);
	split_sreg_range(0X7D03405E,"T",0X1,3);
	split_sreg_range(0X7D034094,"T",0X1,3);
	split_sreg_range(0X7D0340A4,"T",0X1,3);
	split_sreg_range(0X7D0340B2,"T",0X1,3);
	split_sreg_range(0X7D0340BC,"T",0X1,3);
	split_sreg_range(0X7D0340C2,"T",0X1,3);
	split_sreg_range(0X7D0340D8,"T",0X1,3);
	split_sreg_range(0X7D0340E8,"T",0X1,3);
	split_sreg_range(0X7D0340F4,"T",0X1,3);
	split_sreg_range(0X7D0340F8,"T",0X1,3);
	split_sreg_range(0X7D034124,"T",0X1,3);
	split_sreg_range(0X7D03413A,"T",0X1,3);
	split_sreg_range(0X7D03414A,"T",0X1,3);
	split_sreg_range(0X7D03414E,"T",0X1,3);
	split_sreg_range(0X7D03415A,"T",0X1,3);
	split_sreg_range(0X7D034170,"T",0X1,3);
	split_sreg_range(0X7D03417C,"T",0X1,3);
	split_sreg_range(0X7D034186,"T",0X1,3);
	split_sreg_range(0X7D034188,"T",0X1,3);
	split_sreg_range(0X7D034198,"T",0X1,3);
	split_sreg_range(0X7D0341B0,"T",0X1,3);
	split_sreg_range(0X7D0341D2,"T",0X1,3);
	split_sreg_range(0X7D0341F4,"T",0X1,3);
	split_sreg_range(0X7D034202,"T",0X1,3);
	split_sreg_range(0X7D034206,"T",0X1,3);
	split_sreg_range(0X7D034232,"T",0X1,3);
	split_sreg_range(0X7D034250,"T",0X1,3);
	split_sreg_range(0X7D03427E,"T",0X1,3);
	split_sreg_range(0X7D034286,"T",0X1,3);
	split_sreg_range(0X7D03428C,"T",0X1,3);
	split_sreg_range(0X7D034298,"T",0X1,3);
	split_sreg_range(0X7D03429E,"T",0X1,3);
	split_sreg_range(0X7D0342B2,"T",0X1,3);
	split_sreg_range(0X7D0342BC,"T",0X1,3);
	split_sreg_range(0X7D0342C8,"T",0X1,3);
	split_sreg_range(0X7D0342CA,"T",0X1,3);
	split_sreg_range(0X7D0342DA,"T",0X1,3);
	split_sreg_range(0X7D0342DC,"T",0X1,3);
	split_sreg_range(0X7D03430A,"T",0X1,3);
	split_sreg_range(0X7D034320,"T",0X1,3);
	split_sreg_range(0X7D034326,"T",0X1,3);
	split_sreg_range(0X7D034338,"T",0X1,3);
	split_sreg_range(0X7D034342,"T",0X1,3);
	split_sreg_range(0X7D034360,"T",0X1,3);
	split_sreg_range(0X7D034362,"T",0X1,3);
	split_sreg_range(0X7D03437A,"T",0X1,3);
	split_sreg_range(0X7D03438C,"T",0X1,3);
	split_sreg_range(0X7D034392,"T",0X1,3);
	split_sreg_range(0X7D0343B4,"T",0X1,3);
	split_sreg_range(0X7D0343CA,"T",0X1,3);
	split_sreg_range(0X7D0343E4,"T",0X1,3);
	split_sreg_range(0X7D0343E6,"T",0X1,3);
	split_sreg_range(0X7D034404,"T",0X1,3);
	split_sreg_range(0X7D03440E,"T",0X1,3);
	split_sreg_range(0X7D03441E,"T",0X1,3);
	split_sreg_range(0X7D03442A,"T",0X1,3);
	split_sreg_range(0X7D03442C,"T",0X1,3);
	split_sreg_range(0X7D034466,"T",0X1,3);
	split_sreg_range(0X7D03447C,"T",0X1,3);
	split_sreg_range(0X7D034480,"T",0X1,3);
	split_sreg_range(0X7D0344C0,"T",0X1,3);
	split_sreg_range(0X7D0344EC,"T",0X1,3);
	split_sreg_range(0X7D03451E,"T",0X1,3);
	split_sreg_range(0X7D03453E,"T",0X1,3);
	split_sreg_range(0X7D034542,"T",0X1,3);
	split_sreg_range(0X7D03457E,"T",0X1,3);
	split_sreg_range(0X7D0345A6,"T",0X1,3);
	split_sreg_range(0X7D0345AA,"T",0X1,3);
	split_sreg_range(0X7D0345BC,"T",0X1,3);
	split_sreg_range(0X7D0345FA,"T",0X1,3);
	split_sreg_range(0X7D03460C,"T",0X1,3);
	split_sreg_range(0X7D034636,"T",0X1,3);
	split_sreg_range(0X7D03463C,"T",0X1,3);
	split_sreg_range(0X7D034654,"T",0X1,3);
	split_sreg_range(0X7D03466C,"T",0X1,3);
	split_sreg_range(0X7D03468C,"T",0X1,3);
	split_sreg_range(0X7D034692,"T",0X1,3);
	split_sreg_range(0X7D0346BC,"T",0X1,3);
	split_sreg_range(0X7D0346C8,"T",0X1,3);
	split_sreg_range(0X7D0346EC,"T",0X1,3);
	split_sreg_range(0X7D034704,"T",0X1,3);
	split_sreg_range(0X7D03470A,"T",0X1,3);
	split_sreg_range(0X7D034718,"T",0X1,3);
	split_sreg_range(0X7D03471C,"T",0X1,3);
	split_sreg_range(0X7D034732,"T",0X1,3);
	split_sreg_range(0X7D03474E,"T",0X1,3);
	split_sreg_range(0X7D03475A,"T",0X1,3);
	split_sreg_range(0X7D034778,"T",0X1,3);
	split_sreg_range(0X7D034790,"T",0X1,3);
	split_sreg_range(0X7D034798,"T",0X1,3);
	split_sreg_range(0X7D03479C,"T",0X1,3);
	split_sreg_range(0X7D0347A6,"T",0X1,3);
	split_sreg_range(0X7D0347E8,"T",0X1,3);
	split_sreg_range(0X7D0347F4,"T",0X1,3);
	split_sreg_range(0X7D0347F8,"T",0X1,3);
	split_sreg_range(0X7D034822,"T",0X1,3);
	split_sreg_range(0X7D034848,"T",0X1,3);
	split_sreg_range(0X7D034856,"T",0X1,3);
	split_sreg_range(0X7D03485A,"T",0X1,3);
	split_sreg_range(0X7D034864,"T",0X1,3);
	split_sreg_range(0X7D03487E,"T",0X1,3);
	split_sreg_range(0X7D03488C,"T",0X1,3);
	split_sreg_range(0X7D034890,"T",0X1,3);
	split_sreg_range(0X7D0348A4,"T",0X1,3);
	split_sreg_range(0X7D0348AA,"T",0X1,3);
	split_sreg_range(0X7D0348E6,"T",0X1,3);
	split_sreg_range(0X7D0348FA,"T",0X1,3);
	split_sreg_range(0X7D034926,"T",0X1,3);
	split_sreg_range(0X7D034936,"T",0X1,3);
	split_sreg_range(0X7D03494C,"T",0X1,3);
	split_sreg_range(0X7D034952,"T",0X1,3);
	split_sreg_range(0X7D034960,"T",0X1,3);
	split_sreg_range(0X7D034966,"T",0X1,3);
	split_sreg_range(0X7D034982,"T",0X1,3);
	split_sreg_range(0X7D034986,"T",0X1,3);
	split_sreg_range(0X7D03498E,"T",0X1,3);
	split_sreg_range(0X7D0349A6,"T",0X1,3);
	split_sreg_range(0X7D0349AE,"T",0X1,3);
	split_sreg_range(0X7D0349B4,"T",0X1,3);
	split_sreg_range(0X7D0349C4,"T",0X1,3);
	split_sreg_range(0X7D0349DA,"T",0X1,3);
	split_sreg_range(0X7D0349E8,"T",0X1,3);
	split_sreg_range(0X7D034A12,"T",0X1,3);
	split_sreg_range(0X7D034A14,"T",0X1,3);
	split_sreg_range(0X7D034A32,"T",0X1,3);
	split_sreg_range(0X7D034A46,"T",0X1,3);
	split_sreg_range(0X7D034A68,"T",0X1,3);
	split_sreg_range(0X7D034A74,"T",0X1,3);
	split_sreg_range(0X7D034A8A,"T",0X1,3);
	split_sreg_range(0X7D034A90,"T",0X1,3);
	split_sreg_range(0X7D034AA6,"T",0X1,3);
	split_sreg_range(0X7D034AB6,"T",0X1,3);
	split_sreg_range(0X7D034ADA,"T",0X1,3);
	split_sreg_range(0X7D034ADC,"T",0X1,3);
	split_sreg_range(0X7D034AF8,"T",0X1,3);
	split_sreg_range(0X7D034B12,"T",0X1,3);
	split_sreg_range(0X7D034B22,"T",0X1,3);
	split_sreg_range(0X7D034B42,"T",0X1,3);
	split_sreg_range(0X7D034B54,"T",0X1,3);
	split_sreg_range(0X7D034B5A,"T",0X1,3);
	split_sreg_range(0X7D034B7C,"T",0X1,3);
	split_sreg_range(0X7D034B80,"T",0X1,3);
	split_sreg_range(0X7D034B8C,"T",0X1,3);
	split_sreg_range(0X7D034BA4,"T",0X1,3);
	split_sreg_range(0X7D034BA8,"T",0X1,3);
	split_sreg_range(0X7D034BB0,"T",0X1,3);
	split_sreg_range(0X7D034BB2,"T",0X1,3);
	split_sreg_range(0X7D034BB6,"T",0X1,3);
	split_sreg_range(0X7D034BC6,"T",0X1,3);
	split_sreg_range(0X7D034BF2,"T",0X1,3);
	split_sreg_range(0X7D034BFE,"T",0X1,3);
	split_sreg_range(0X7D034C02,"T",0X1,3);
	split_sreg_range(0X7D034C06,"T",0X1,3);
	split_sreg_range(0X7D034C08,"T",0X1,3);
	split_sreg_range(0X7D034C0A,"T",0X1,3);
	split_sreg_range(0X7D034C26,"T",0X1,3);
	split_sreg_range(0X7D034C28,"T",0X1,3);
	split_sreg_range(0X7D034C44,"T",0X1,3);
	split_sreg_range(0X7D034C48,"T",0X1,3);
	split_sreg_range(0X7D034C4C,"T",0X1,3);
	split_sreg_range(0X7D034C50,"T",0X1,3);
	split_sreg_range(0X7D034C58,"T",0X1,3);
	split_sreg_range(0X7D034C5E,"T",0X1,3);
	split_sreg_range(0X7D034C60,"T",0X1,3);
	split_sreg_range(0X7D034C70,"T",0X1,3);
	split_sreg_range(0X7D034C72,"T",0X1,3);
	split_sreg_range(0X7D034CAA,"T",0X1,3);
	split_sreg_range(0X7D034CAE,"T",0X1,3);
	split_sreg_range(0X7D034CC2,"T",0X1,3);
	split_sreg_range(0X7D034CC8,"T",0X1,3);
	split_sreg_range(0X7D034CCC,"T",0X1,3);
	split_sreg_range(0X7D034CD4,"T",0X1,3);
	split_sreg_range(0X7D034CF2,"T",0X1,3);
	split_sreg_range(0X7D034D02,"T",0X1,3);
	split_sreg_range(0X7D034D10,"T",0X1,3);
	split_sreg_range(0X7D034D14,"T",0X1,3);
	split_sreg_range(0X7D034D24,"T",0X1,3);
	split_sreg_range(0X7D034D2C,"T",0X1,3);
	split_sreg_range(0X7D034D42,"T",0X1,3);
	split_sreg_range(0X7D034D58,"T",0X1,3);
	split_sreg_range(0X7D034D6A,"T",0X1,3);
	split_sreg_range(0X7D034D70,"T",0X1,3);
	split_sreg_range(0X7D034D8E,"T",0X1,3);
	split_sreg_range(0X7D034D92,"T",0X1,3);
	split_sreg_range(0X7D034DB0,"T",0X1,3);
	split_sreg_range(0X7D034DB2,"T",0X1,3);
	split_sreg_range(0X7D034DBA,"T",0X1,3);
	split_sreg_range(0X7D034DBE,"T",0X1,3);
	split_sreg_range(0X7D034DC8,"T",0X1,3);
	split_sreg_range(0X7D034DDA,"T",0X1,3);
	split_sreg_range(0X7D034DE6,"T",0X1,3);
	split_sreg_range(0X7D034DFE,"T",0X1,3);
	split_sreg_range(0X7D034E1C,"T",0X1,3);
	split_sreg_range(0X7D034E3C,"T",0X1,3);
	split_sreg_range(0X7D034E44,"T",0X1,3);
	split_sreg_range(0X7D034E4A,"T",0X1,3);
	split_sreg_range(0X7D034E52,"T",0X1,3);
	split_sreg_range(0X7D034E76,"T",0X1,3);
	split_sreg_range(0X7D034E80,"T",0X1,3);
	split_sreg_range(0X7D034E82,"T",0X1,3);
	split_sreg_range(0X7D034E8C,"T",0X1,3);
	split_sreg_range(0X7D034E8E,"T",0X1,3);
	split_sreg_range(0X7D034EAE,"T",0X1,3);
	split_sreg_range(0X7D034ECC,"T",0X1,3);
	split_sreg_range(0X7D034EE4,"T",0X1,3);
	split_sreg_range(0X7D034EEA,"T",0X1,3);
	split_sreg_range(0X7D034EF4,"T",0X1,3);
	split_sreg_range(0X7D034F06,"T",0X1,3);
	split_sreg_range(0X7D034F18,"T",0X1,3);
	split_sreg_range(0X7D034F20,"T",0X1,3);
	split_sreg_range(0X7D034F24,"T",0X1,3);
	split_sreg_range(0X7D034F2A,"T",0X1,3);
	split_sreg_range(0X7D034F44,"T",0X1,3);
	split_sreg_range(0X7D034F82,"T",0X1,3);
	split_sreg_range(0X7D034FA4,"T",0X1,3);
	split_sreg_range(0X7D034FB6,"T",0X1,3);
	split_sreg_range(0X7D034FB8,"T",0X1,3);
	split_sreg_range(0X7D034FF2,"T",0X1,3);
	split_sreg_range(0X7D034FFC,"T",0X1,3);
	split_sreg_range(0X7D035016,"T",0X1,3);
	split_sreg_range(0X7D03501A,"T",0X1,3);
	split_sreg_range(0X7D03501E,"T",0X1,3);
	split_sreg_range(0X7D035026,"T",0X1,3);
	split_sreg_range(0X7D035040,"T",0X1,3);
	split_sreg_range(0X7D035042,"T",0X1,3);
	split_sreg_range(0X7D03504A,"T",0X1,3);
	split_sreg_range(0X7D03504E,"T",0X1,3);
	split_sreg_range(0X7D03507C,"T",0X1,3);
	split_sreg_range(0X7D035080,"T",0X1,3);
	split_sreg_range(0X7D03509E,"T",0X1,3);
	split_sreg_range(0X7D0350AE,"T",0X1,3);
	split_sreg_range(0X7D0350B6,"T",0X1,3);
	split_sreg_range(0X7D0350DA,"T",0X1,3);
	split_sreg_range(0X7D0350DC,"T",0X1,3);
	split_sreg_range(0X7D0350E4,"T",0X1,3);
	split_sreg_range(0X7D035106,"T",0X1,3);
	split_sreg_range(0X7D03510E,"T",0X1,3);
	split_sreg_range(0X7D035122,"T",0X1,3);
	split_sreg_range(0X7D035124,"T",0X1,3);
	split_sreg_range(0X7D035136,"T",0X1,3);
	split_sreg_range(0X7D035160,"T",0X1,3);
	split_sreg_range(0X7D035176,"T",0X1,3);
	split_sreg_range(0X7D03517A,"T",0X1,3);
	split_sreg_range(0X7D035188,"T",0X1,3);
	split_sreg_range(0X7D035198,"T",0X1,3);
	split_sreg_range(0X7D03519A,"T",0X1,3);
	split_sreg_range(0X7D0351AC,"T",0X1,3);
	split_sreg_range(0X7D0351B4,"T",0X1,3);
	split_sreg_range(0X7D0351D8,"T",0X1,3);
	split_sreg_range(0X7D0351E4,"T",0X1,3);
	split_sreg_range(0X7D0351E8,"T",0X1,3);
	split_sreg_range(0X7D0351EC,"T",0X1,3);
	split_sreg_range(0X7D035258,"T",0X1,3);
	split_sreg_range(0X7D03525A,"T",0X1,3);
	split_sreg_range(0X7D035268,"T",0X1,3);
	split_sreg_range(0X7D035274,"T",0X1,3);
	split_sreg_range(0X7D035280,"T",0X1,3);
	split_sreg_range(0X7D035290,"T",0X1,3);
	split_sreg_range(0X7D0352B6,"T",0X1,3);
	split_sreg_range(0X7D0352C2,"T",0X1,3);
	split_sreg_range(0X7D0352C6,"T",0X1,3);
	split_sreg_range(0X7D0352CA,"T",0X1,3);
	split_sreg_range(0X7D0352DC,"T",0X1,3);
	split_sreg_range(0X7D0352E0,"T",0X1,3);
	split_sreg_range(0X7D0352E6,"T",0X1,3);
	split_sreg_range(0X7D0352FA,"T",0X1,3);
	split_sreg_range(0X7D035306,"T",0X1,3);
	split_sreg_range(0X7D03530E,"T",0X1,3);
	split_sreg_range(0X7D03531E,"T",0X1,3);
	split_sreg_range(0X7D03532A,"T",0X1,3);
	split_sreg_range(0X7D035334,"T",0X1,3);
	split_sreg_range(0X7D03533C,"T",0X1,3);
	split_sreg_range(0X7D035344,"T",0X1,3);
	split_sreg_range(0X7D035368,"T",0X1,3);
	split_sreg_range(0X7D035374,"T",0X1,3);
	split_sreg_range(0X7D035378,"T",0X1,3);
	split_sreg_range(0X7D035380,"T",0X1,3);
	split_sreg_range(0X7D0353A6,"T",0X1,3);
	split_sreg_range(0X7D0353CE,"T",0X1,3);
	split_sreg_range(0X7D0353E0,"T",0X1,3);
	split_sreg_range(0X7D0353EE,"T",0X1,3);
	split_sreg_range(0X7D0353F4,"T",0X1,3);
	split_sreg_range(0X7D0353F8,"T",0X1,3);
	split_sreg_range(0X7D03540E,"T",0X1,3);
	split_sreg_range(0X7D035412,"T",0X1,3);
	split_sreg_range(0X7D035416,"T",0X1,3);
	split_sreg_range(0X7D035422,"T",0X1,3);
	split_sreg_range(0X7D035424,"T",0X1,3);
	split_sreg_range(0X7D03542A,"T",0X1,3);
	split_sreg_range(0X7D03542E,"T",0X1,3);
	split_sreg_range(0X7D03543C,"T",0X1,3);
	split_sreg_range(0X7D035448,"T",0X1,3);
	split_sreg_range(0X7D03544A,"T",0X1,3);
	split_sreg_range(0X7D035456,"T",0X1,3);
	split_sreg_range(0X7D035458,"T",0X1,3);
	split_sreg_range(0X7D03545C,"T",0X1,3);
	split_sreg_range(0X7D035466,"T",0X1,3);
	split_sreg_range(0X7D035468,"T",0X1,3);
	split_sreg_range(0X7D03546C,"T",0X1,3);
	split_sreg_range(0X7D03547C,"T",0X1,3);
	split_sreg_range(0X7D035482,"T",0X1,3);
	split_sreg_range(0X7D035484,"T",0X1,3);
	split_sreg_range(0X7D035492,"T",0X1,3);
	split_sreg_range(0X7D0354A8,"T",0X1,3);
	split_sreg_range(0X7D0354BE,"T",0X1,3);
	split_sreg_range(0X7D0354C2,"T",0X1,3);
	split_sreg_range(0X7D0354E4,"T",0X1,3);
	split_sreg_range(0X7D0354F2,"T",0X1,3);
	split_sreg_range(0X7D0354FE,"T",0X1,3);
	split_sreg_range(0X7D03550A,"T",0X1,3);
	split_sreg_range(0X7D035538,"T",0X1,3);
	split_sreg_range(0X7D035548,"T",0X1,3);
	split_sreg_range(0X7D035556,"T",0X1,3);
	split_sreg_range(0X7D035568,"T",0X1,3);
	split_sreg_range(0X7D035580,"T",0X1,3);
	split_sreg_range(0X7D035584,"T",0X1,3);
	split_sreg_range(0X7D0355A4,"T",0X1,3);
	split_sreg_range(0X7D0355B4,"T",0X1,3);
	split_sreg_range(0X7D0355BC,"T",0X1,3);
	split_sreg_range(0X7D0355C8,"T",0X1,3);
	split_sreg_range(0X7D0355D0,"T",0X1,3);
	split_sreg_range(0X7D0355DC,"T",0X1,3);
	split_sreg_range(0X7D0355F0,"T",0X1,3);
	split_sreg_range(0X7D035604,"T",0X1,3);
	split_sreg_range(0X7D035606,"T",0X1,3);
	split_sreg_range(0X7D03560C,"T",0X1,3);
	split_sreg_range(0X7D03561E,"T",0X1,3);
	split_sreg_range(0X7D035622,"T",0X1,3);
	split_sreg_range(0X7D03562A,"T",0X1,3);
	split_sreg_range(0X7D035630,"T",0X1,3);
	split_sreg_range(0X7D035636,"T",0X1,3);
	split_sreg_range(0X7D035646,"T",0X1,3);
	split_sreg_range(0X7D035658,"T",0X1,3);
	split_sreg_range(0X7D035666,"T",0X1,3);
	split_sreg_range(0X7D035680,"T",0X1,3);
	split_sreg_range(0X7D035686,"T",0X1,3);
	split_sreg_range(0X7D035698,"T",0X1,3);
	split_sreg_range(0X7D0356A0,"T",0X1,3);
	split_sreg_range(0X7D0356A4,"T",0,3);
	split_sreg_range(0X7D0356A8,"T",0,3);
	split_sreg_range(0X7D0356B0,"T",0X1,3);
	split_sreg_range(0X7D0356B4,"T",0,3);
	split_sreg_range(0X7D0356B8,"T",0X1,3);
	split_sreg_range(0X7D0356BC,"T",0,3);
	split_sreg_range(0X7D0356C0,"T",0X1,3);
	split_sreg_range(0X7D0356C4,"T",0,3);
	split_sreg_range(0X7D0356C8,"T",0X1,3);
	split_sreg_range(0X7D0356CC,"T",0,3);
	split_sreg_range(0X7D0356D0,"T",0X1,3);
	split_sreg_range(0X7D0356D4,"T",0,3);
	split_sreg_range(0X7D0356D8,"T",0X1,3);
	split_sreg_range(0X7D0356DC,"T",0,3);
	split_sreg_range(0X7D0356E0,"T",0,3);
	split_sreg_range(0X7D04F380,"T",0,3);
	split_sreg_range(0X7D0F1900,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0X7D000000,"DS",0X4,3);
	split_sreg_range(0X7D0356E0,"DS",0X4,3);
	split_sreg_range(0X7D04F380,"DS",0X4,3);
	split_sreg_range(0X7D0F1900,"DS",0X4,3);
	split_sreg_range(0XA0001020,"DS",0X4,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
	Bytes_6();
	Bytes_7();
	Bytes_8();
	Bytes_9();
        end_type_updating(UTP_STRUCT);
}

// End of file.
