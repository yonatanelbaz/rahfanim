//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	set_selector(0X8,0);
	set_selector(0X9,0);
	set_selector(0XA,0);
	set_selector(0XB,0);
	set_selector(0XC,0);
	set_selector(0XD,0);
	set_selector(0XE,0);
	set_selector(0XF,0);
	set_selector(0X10,0);
	set_selector(0X11,0);
	set_selector(0X12,0);
	set_selector(0X13,0);
	set_selector(0X14,0);
	set_selector(0X15,0);
	set_selector(0X16,0);
	set_selector(0X17,0);
	set_selector(0X18,0);
	set_selector(0X19,0);
	set_selector(0X1A,0);
	set_selector(0X1B,0);
	set_selector(0X1C,0);
	set_selector(0X1D,0);
	set_selector(0X1E,0);
	set_selector(0X1F,0);
	set_selector(0X20,0);
	;
	add_segm_ex(0X202000,0X202020,0XF,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X202000,".bss1");
	SegClass (0X202000,"BSS");
	SegDefReg(0x202000,"T",0x0);
	SegDefReg(0x202000,"DS",0x5);
	set_segm_type(0X202000,9);
	add_segm_ex(0X402020,0X402040,0X10,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X402020,".bss2");
	SegClass (0X402020,"BSS");
	SegDefReg(0x402020,"T",0x0);
	SegDefReg(0x402020,"DS",0x5);
	set_segm_type(0X402020,9);
	add_segm_ex(0XB00000,0XB00040,0X11,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XB00000,".bss3");
	SegClass (0XB00000,"BSS");
	SegDefReg(0xB00000,"T",0x0);
	SegDefReg(0xB00000,"DS",0x5);
	set_segm_type(0XB00000,9);
	add_segm_ex(0X2700000,0X2700040,0X12,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X2700000,".bss4");
	SegClass (0X2700000,"BSS");
	SegDefReg(0x2700000,"T",0x0);
	SegDefReg(0x2700000,"DS",0x5);
	set_segm_type(0X2700000,9);
	add_segm_ex(0X9000000,0X9000020,0X13,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X9000000,".bss5");
	SegClass (0X9000000,"BSS");
	SegDefReg(0x9000000,"T",0x0);
	SegDefReg(0x9000000,"DS",0x5);
	set_segm_type(0X9000000,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x5);
	set_segm_type(0XA0001020,3);
	add_segm_ex(0XF0440000,0XF0444500,0X14,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0440000,".bss6");
	SegClass (0XF0440000,"BSS");
	SegDefReg(0xF0440000,"T",0x0);
	SegDefReg(0xF0440000,"DS",0x5);
	set_segm_type(0XF0440000,9);
	add_segm_ex(0XF0501200,0XF0501400,0X15,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0501200,".bss7");
	SegClass (0XF0501200,"BSS");
	SegDefReg(0xF0501200,"T",0x0);
	SegDefReg(0xF0501200,"DS",0x5);
	set_segm_type(0XF0501200,9);
	add_segm_ex(0XF0A09000,0XF0A09020,0X16,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0A09000,".bss8");
	SegClass (0XF0A09000,"BSS");
	SegDefReg(0xF0A09000,"T",0x0);
	SegDefReg(0xF0A09000,"DS",0x5);
	set_segm_type(0XF0A09000,9);
	add_segm_ex(0XF0A40000,0XF0A41100,0X17,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0A40000,".bss9");
	SegClass (0XF0A40000,"BSS");
	SegDefReg(0xF0A40000,"T",0x0);
	SegDefReg(0xF0A40000,"DS",0x5);
	set_segm_type(0XF0A40000,9);
	add_segm_ex(0XF0A4D000,0XF0A4F100,0X18,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0A4D000,".bss10");
	SegClass (0XF0A4D000,"BSS");
	SegDefReg(0xF0A4D000,"T",0x0);
	SegDefReg(0xF0A4D000,"DS",0x5);
	set_segm_type(0XF0A4D000,9);
	add_segm_ex(0XF0A61000,0XF0A62200,0X19,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0A61000,".bss11");
	SegClass (0XF0A61000,"BSS");
	SegDefReg(0xF0A61000,"T",0x0);
	SegDefReg(0xF0A61000,"DS",0x5);
	set_segm_type(0XF0A61000,9);
	add_segm_ex(0XF0A72000,0XF0A72020,0X1A,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0A72000,".bss12");
	SegClass (0XF0A72000,"BSS");
	SegDefReg(0xF0A72000,"T",0x0);
	SegDefReg(0xF0A72000,"DS",0x5);
	set_segm_type(0XF0A72000,9);
	add_segm_ex(0XF0D02000,0XF0D02020,0X1B,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0D02000,".bss13");
	SegClass (0XF0D02000,"BSS");
	SegDefReg(0xF0D02000,"T",0x0);
	SegDefReg(0xF0D02000,"DS",0x5);
	set_segm_type(0XF0D02000,9);
	add_segm_ex(0XF0E00A00,0XF0E00AC0,0X1C,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0E00A00,".bss14");
	SegClass (0XF0E00A00,"BSS");
	SegDefReg(0xF0E00A00,"T",0x0);
	SegDefReg(0xF0E00A00,"DS",0x5);
	set_segm_type(0XF0E00A00,9);
	add_segm_ex(0XF0E08000,0XF0E08020,0X1D,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF0E08000,".bss15");
	SegClass (0XF0E08000,"BSS");
	SegDefReg(0xF0E08000,"T",0x0);
	SegDefReg(0xF0E08000,"DS",0x5);
	set_segm_type(0XF0E08000,9);
	add_segm_ex(0XF5001000,0XF5001040,0X1E,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF5001000,".bss16");
	SegClass (0XF5001000,"BSS");
	SegDefReg(0xF5001000,"T",0x0);
	SegDefReg(0xF5001000,"DS",0x5);
	set_segm_type(0XF5001000,9);
	add_segm_ex(0XF6409000,0XF6409100,0X1F,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF6409000,".bss17");
	SegClass (0XF6409000,"BSS");
	SegDefReg(0xF6409000,"T",0x0);
	SegDefReg(0xF6409000,"DS",0x5);
	set_segm_type(0XF6409000,9);
	add_segm_ex(0XF6800000,0XF6801100,0X20,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XF6800000,".bss18");
	SegClass (0XF6800000,"BSS");
	SegDefReg(0xF6800000,"T",0x0);
	SegDefReg(0xF6800000,"DS",0x5);
	set_segm_type(0XF6800000,9);
	add_segm_ex(0XFA800000,0XFA800100,0XE,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFA800000,".bss29");
	SegClass (0XFA800000,"BSS");
	SegDefReg(0xFA800000,"T",0x0);
	SegDefReg(0xFA800000,"DS",0x5);
	set_segm_type(0XFA800000,9);
	add_segm_ex(0XFAF01000,0XFAF04500,0X7,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFAF01000,".bss20");
	SegClass (0XFAF01000,"BSS");
	SegDefReg(0xFAF01000,"T",0x0);
	SegDefReg(0xFAF01000,"DS",0x5);
	set_segm_type(0XFAF01000,9);
	add_segm_ex(0XFB001000,0XFB003900,0X8,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFB001000,".bss21");
	SegClass (0XFB001000,"BSS");
	SegDefReg(0xFB001000,"T",0x0);
	SegDefReg(0xFB001000,"DS",0x5);
	set_segm_type(0XFB001000,9);
	add_segm_ex(0XFCC01000,0XFCC03400,0X9,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFCC01000,".bss22");
	SegClass (0XFCC01000,"BSS");
	SegDefReg(0xFCC01000,"T",0x0);
	SegDefReg(0xFCC01000,"DS",0x5);
	set_segm_type(0XFCC01000,9);
	add_segm_ex(0XFD001000,0XFD003D00,0XA,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFD001000,".bss23");
	SegClass (0XFD001000,"BSS");
	SegDefReg(0xFD001000,"T",0x0);
	SegDefReg(0xFD001000,"DS",0x5);
	set_segm_type(0XFD001000,9);
	add_segm_ex(0XFD400000,0XFD400020,0XB,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFD400000,".bss24");
	SegClass (0XFD400000,"BSS");
	SegDefReg(0xFD400000,"T",0x0);
	SegDefReg(0xFD400000,"DS",0x5);
	set_segm_type(0XFD400000,9);
	add_segm_ex(0XFD501000,0XFD503400,0XC,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFD501000,".bss25");
	SegClass (0XFD501000,"BSS");
	SegDefReg(0xFD501000,"T",0x0);
	SegDefReg(0xFD501000,"DS",0x5);
	set_segm_type(0XFD501000,9);
	add_segm_ex(0XFF001000,0XFF002100,0XD,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFF001000,".bss26");
	SegClass (0XFF001000,"BSS");
	SegDefReg(0xFF001000,"T",0x0);
	SegDefReg(0xFF001000,"DS",0x5);
	set_segm_type(0XFF001000,9);
	add_segm_ex(0XFFFC0000,0XFFFDA540,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0XFFFC0000,".text");
	SegClass (0XFFFC0000,"CODE");
	SegDefReg(0xFFFC0000,"T",0x0);
	SegDefReg(0xFFFC0000,"DS",0x5);
	set_segm_type(0XFFFC0000,2);
	add_segm_ex(0XFFFDA540,0XFFFDA560,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0XFFFDA540,".ARM.exidx");
	SegClass (0XFFFDA540,"CONST");
	SegDefReg(0xFFFDA540,"T",0x0);
	SegDefReg(0xFFFDA540,"DS",0x5);
	set_segm_type(0XFFFDA540,3);
	add_segm_ex(0XFFFDA560,0XFFFE14D0,0X5,1,8,2,ADDSEG_NOSREG);
	SegRename(0XFFFDA560,".data");
	SegClass (0XFFFDA560,"DATA");
	SegDefReg(0xFFFDA560,"T",0x0);
	SegDefReg(0xFFFDA560,"DS",0x5);
	set_segm_type(0XFFFDA560,3);
	add_segm_ex(0XFFFE14D0,0XFFFE5780,0X6,1,3,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0XFFFE14D0,".bss");
	SegClass (0XFFFE14D0,"BSS");
	SegDefReg(0xFFFE14D0,"T",0x0);
	SegDefReg(0xFFFE14D0,"DS",0x5);
	set_segm_type(0XFFFE14D0,9);
	set_inf_attr(INF_LOW_OFF, 0x202000);
	set_inf_attr(INF_HIGH_OFF, 0xFFFE5780);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("mmc_config_data");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"mmc_config_data",0);
	
	id = get_struc_id("mmc_config_data");
	mid = add_struc_member(id,"slot",	0,	0x005400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	3);
	mid = add_struc_member(id,"pwr_irq",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"sdhc_base",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"pwrctl_base",	0XC,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"bus_width",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_12",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"max_clk_rate",	0X14,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X202000,	E_PREV + 0,	"; File Name   : wm230_0801_v10.00.07.12_20180126.pro.fw_0801.bootarea_p0_BLLK.elf");
	update_extra_cmt		(0X202000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0X202000,	E_PREV + 2,	"; Imagebase   : 202000");
	update_extra_cmt		(0X202000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0X202000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0X202000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0X202000,	E_PREV + 6,	"; ");
	create_dword	(0X202008);
	make_array	(0X20200C,	0X14);
	create_dword	(0X402024);
	make_array	(0X402028,	0X18);
	create_dword	(0XB00008);
	create_dword	(0XB0000C);
	create_dword	(0XB00014);
	create_dword	(0XB00018);
	create_dword	(0XB0001C);
	create_dword	(0XB00020);
	make_array	(0XB00024,	0X1C);
	create_dword	(0X2700000);
	create_dword	(0X2700004);
	create_dword	(0X2700008);
	create_dword	(0X270000C);
	create_dword	(0X2700014);
	create_dword	(0X2700018);
	create_dword	(0X270001C);
	create_dword	(0X2700020);
	make_array	(0X2700024,	0X1C);
	create_dword	(0X9000008);
	make_array	(0X900000C,	0X14);
	create_dword	(0XF0440250);
	create_dword	(0XF0440254);
	create_dword	(0XF044025C);
	create_dword	(0XF0440264);
	create_dword	(0XF044026C);
	create_dword	(0XF0440400);
	create_dword	(0XF0440404);
	create_dword	(0XF0440408);
	create_dword	(0XF0440494);
	create_dword	(0XF0440498);
	create_dword	(0XF044049C);
	create_dword	(0XF04404A0);
	create_dword	(0XF04404B8);
	create_dword	(0XF0440544);
	create_dword	(0XF0440548);
	make_array	(0XF044054C,	0X4);
	create_dword	(0XF0440550);
	create_dword	(0XF0440564);
	create_dword	(0XF0440568);
	create_dword	(0XF04405F4);
	create_dword	(0XF04405F8);
	make_array	(0XF04405FC,	0X4);
	create_dword	(0XF0440600);
	create_dword	(0XF0440614);
	create_dword	(0XF0440618);
	create_dword	(0XF04406B0);
	create_dword	(0XF04406C4);
	create_dword	(0XF0440754);
	create_dword	(0XF044075C);
	create_dword	(0XF0440760);
	create_dword	(0XF0440778);
	create_dword	(0XF0440804);
	create_dword	(0XF0440808);
	create_dword	(0XF044080C);
	create_dword	(0XF0440810);
	create_dword	(0XF0440828);
	create_dword	(0XF04408B4);
	create_dword	(0XF04408B8);
	create_dword	(0XF04408BC);
	create_dword	(0XF04408C0);
	create_dword	(0XF0444004);
	make_array	(0XF0444008,	0X8);
	create_dword	(0XF0444010);
	create_dword	(0XF0444014);
	create_dword	(0XF0444034);
	create_dword	(0XF0444168);
	create_dword	(0XF044416C);
	create_dword	(0XF0444400);
	create_dword	(0XF044440C);
	create_dword	(0XF0444418);
	create_dword	(0XF044441C);
	create_dword	(0XF0444420);
	create_dword	(0XF0444424);
	create_dword	(0XF0444428);
	create_dword	(0XF044442C);
	create_dword	(0XF0444430);
	create_dword	(0XF0501208);
	create_dword	(0XF050120C);
	make_array	(0XF0501210,	0X1F0);
	create_dword	(0XF0A09004);
	create_dword	(0XF0A09008);
	make_array	(0XF0A0900C,	0X14);
	create_dword	(0XF0A40010);
	create_dword	(0XF0A40030);
	create_dword	(0XF0A40034);
	create_dword	(0XF0A40050);
	create_dword	(0XF0A40054);
	create_dword	(0XF0A40068);
	create_dword	(0XF0A400EC);
	create_dword	(0XF0A400FC);
	create_dword	(0XF0A40104);
	create_dword	(0XF0A40114);
	create_dword	(0XF0A4011C);
	create_dword	(0XF0A40120);
	create_dword	(0XF0A40124);
	create_dword	(0XF0A4012C);
	create_dword	(0XF0A40134);
	create_dword	(0XF0A40138);
	create_dword	(0XF0A4013C);
	create_dword	(0XF0A40140);
	create_dword	(0XF0A40144);
	create_dword	(0XF0A40148);
	create_dword	(0XF0A4014C);
	create_dword	(0XF0A40150);
	create_dword	(0XF0A40154);
	create_dword	(0XF0A40164);
	create_dword	(0XF0A40168);
	create_dword	(0XF0A4016C);
	create_dword	(0XF0A401E0);
	create_dword	(0XF0A40210);
	create_dword	(0XF0A4040C);
	create_dword	(0XF0A40410);
	create_dword	(0XF0A404BC);
	create_dword	(0XF0A404C4);
	create_dword	(0XF0A40504);
	create_dword	(0XF0A40508);
	make_array	(0XF0A4050C,	0XAF4);
	create_dword	(0XF0A41084);
	create_dword	(0XF0A410CC);
	create_dword	(0XF0A410F4);
	create_dword	(0XF0A4D008);
	create_dword	(0XF0A4D00C);
	make_array	(0XF0A4D010,	0X10);
	create_dword	(0XF0A4D020);
	make_array	(0XF0A4D024,	0X4);
	create_dword	(0XF0A4D028);
	create_dword	(0XF0A4E008);
	create_dword	(0XF0A4E00C);
	make_array	(0XF0A4E010,	0X10);
	create_dword	(0XF0A4E020);
	make_array	(0XF0A4E024,	0X4);
	create_dword	(0XF0A4E028);
	create_dword	(0XF0A4F008);
	create_dword	(0XF0A4F00C);
	make_array	(0XF0A4F010,	0X10);
	create_dword	(0XF0A4F020);
	make_array	(0XF0A4F024,	0X4);
	create_dword	(0XF0A4F028);
	make_array	(0XF0A4F02C,	0XD4);
	create_dword	(0XF0A6100C);
	create_dword	(0XF0A61108);
	create_dword	(0XF0A6110C);
	create_dword	(0XF0A62108);
	make_array	(0XF0A6210C,	0XF4);
	create_dword	(0XF0A72004);
	create_dword	(0XF0A72008);
	create_dword	(0XF0A7200C);
	create_dword	(0XF0A72010);
	make_array	(0XF0A72014,	0XC);
	create_dword	(0XF0D02000);
	create_dword	(0XF0D02004);
	create_dword	(0XF0D02008);
	create_dword	(0XF0D0200C);
	create_dword	(0XF0D02018);
	make_array	(0XF0D0201C,	0X4);
	create_dword	(0XF0E00AA4);
	create_dword	(0XF0E00AA8);
	create_dword	(0XF0E00AAC);
	create_dword	(0XF0E00AB0);
	create_dword	(0XF0E00AB4);
	make_array	(0XF0E00AB8,	0X8);
	create_dword	(0XF0E08000);
	make_array	(0XF0E08004,	0X1C);
	create_dword	(0XF5001020);
	create_byte	(0XF5001024);
	create_byte	(0XF5001025);
	make_array	(0XF5001026,	0X1A);
	create_dword	(0XF6409044);
	create_dword	(0XF6409048);
	make_array	(0XF640904C,	0X4);
	create_dword	(0XF6409050);
	create_dword	(0XF6409054);
	create_dword	(0XF64090D0);
	create_dword	(0XF64090D4);
	create_dword	(0XF64090D8);
	create_dword	(0XF64090DC);
	make_array	(0XF64090E0,	0X20);
	create_dword	(0XF6800000);
	create_dword	(0XF680000C);
	make_array	(0XF6800010,	0X10);
	create_dword	(0XF6800020);
	create_dword	(0XF6800024);
	create_dword	(0XF6800028);
	make_array	(0XF680002C,	0X4);
	create_dword	(0XF6800030);
	create_dword	(0XF680003C);
	create_dword	(0XF6800044);
	create_dword	(0XF6800048);
	create_dword	(0XF680004C);
	create_dword	(0XF68000F0);
	make_array	(0XF68000F4,	0XF0C);
	create_dword	(0XF6801078);
	create_dword	(0XFA8000A4);
	make_array	(0XFA8000A8,	0X8);
	create_dword	(0XFA8000B0);
	make_array	(0XFA8000B4,	0X4C);
	create_dword	(0XFAF0100C);
	create_dword	(0XFAF0110C);
	create_dword	(0XFAF01208);
	create_dword	(0XFAF0120C);
	create_dword	(0XFAF01308);
	create_dword	(0XFAF01508);
	create_dword	(0XFAF01608);
	create_dword	(0XFAF01708);
	create_dword	(0XFAF0170C);
	create_dword	(0XFAF01808);
	create_dword	(0XFAF01908);
	create_dword	(0XFAF03008);
	create_dword	(0XFAF03108);
	create_dword	(0XFAF03208);
	create_dword	(0XFAF03308);
	create_dword	(0XFAF03408);
	create_dword	(0XFB001008);
	create_dword	(0XFB00100C);
	create_dword	(0XFB001108);
	create_dword	(0XFB00110C);
	create_dword	(0XFB001208);
	create_dword	(0XFB001308);
	create_dword	(0XFB001408);
	create_dword	(0XFB001508);
	create_dword	(0XFB001608);
	create_dword	(0XFB00160C);
	create_dword	(0XFB001708);
	create_dword	(0XFB00170C);
	create_dword	(0XFB001808);
	create_dword	(0XFB00180C);
	create_dword	(0XFB003008);
	create_dword	(0XFB003408);
	create_dword	(0XFB003608);
	create_dword	(0XFB003708);
	create_dword	(0XFB003808);
	make_array	(0XFB00380C,	0XF4);
	create_dword	(0XFCC01008);
	create_dword	(0XFCC0100C);
	create_dword	(0XFCC01208);
	create_dword	(0XFCC0120C);
	create_dword	(0XFCC01308);
	create_dword	(0XFCC0130C);
	create_dword	(0XFCC03208);
	make_array	(0XFCC0320C,	0X1F4);
	create_dword	(0XFD001008);
	create_dword	(0XFD00100C);
	create_dword	(0XFD001108);
	create_dword	(0XFD00110C);
	create_dword	(0XFD001208);
	create_dword	(0XFD00120C);
	create_dword	(0XFD00130C);
	create_dword	(0XFD001408);
	create_dword	(0XFD00140C);
	create_dword	(0XFD001508);
	create_dword	(0XFD00150C);
	create_dword	(0XFD001608);
	create_dword	(0XFD00160C);
	create_dword	(0XFD001708);
	create_dword	(0XFD00170C);
	create_dword	(0XFD00180C);
	create_dword	(0XFD00190C);
	create_dword	(0XFD001A08);
	create_dword	(0XFD001A0C);
	create_dword	(0XFD003008);
	create_dword	(0XFD003108);
	create_dword	(0XFD003908);
	create_dword	(0XFD003C08);
	make_array	(0XFD003C0C,	0XF4);
	create_dword	(0XFD400008);
	make_array	(0XFD40000C,	0X14);
	create_dword	(0XFD501208);
	create_dword	(0XFD501308);
	create_dword	(0XFD503008);
	create_dword	(0XFD503108);
	create_dword	(0XFD503208);
	create_dword	(0XFD503308);
	make_array	(0XFD50330C,	0XF4);
	create_dword	(0XFF001000);
	create_dword	(0XFF001004);
	make_array	(0XFF001008,	0XFF8);
	create_dword	(0XFF002000);
	create_dword	(0XFF002004);
	create_dword	(0XFF00200C);
	create_dword	(0XFF002010);
	make_array	(0XFF002014,	0XEC);
	create_insn	(0XFFFC0000);
	create_insn	(0XFFFC0004);
	create_insn	(0XFFFC0008);
	create_insn	(0XFFFC000C);
	create_insn	(0XFFFC0010);
	create_insn	(0XFFFC0014);
	create_insn	(0XFFFC0018);
	create_insn	(0XFFFC001C);
	create_insn	(0XFFFC0020);
	create_insn	(x=0XFFFC0024);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0028);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0034);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC006C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC007C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC009C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC00A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC00B8);
	create_dword	(x=0XFFFC00BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFC00D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFC00D8);
	set_name	(0XFFFC00D8,	"nullsub_1");
	make_array	(0XFFFC00DA,	0X2);
	create_insn	(0XFFFC00DC);
	set_name	(0XFFFC00DC,	"get_board_id");
	set_cmt	(0XFFFC00F0,	"void *",	0);
	create_insn	(x=0XFFFC00F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC00FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC013A);
	create_insn	(x=0XFFFC013E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC0150);
	create_insn	(x=0XFFFC0162);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0166);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC016A);
	op_hex		(x,	1);
	create_insn	(0XFFFC0176);
	create_insn	(x=0XFFFC0190);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0194);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0198);
	op_hex		(x,	1);
	create_insn	(0XFFFC01A2);
	create_insn	(0XFFFC01B0);
	create_insn	(x=0XFFFC01C2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC01C6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC01CA);
	op_hex		(x,	1);
	create_insn	(0XFFFC01D6);
	create_insn	(0XFFFC01E4);
	create_insn	(x=0XFFFC0212);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC021C);
	op_plain_offset	(x,	1,	0XFFFE1600);
	op_plain_offset	(x,	129,	0XFFFE1600);
	create_insn	(x=0XFFFC021E);
	op_plain_offset	(x,	1,	0XFFFE1600);
	op_plain_offset	(x,	129,	0XFFFE1600);
	create_insn	(x=0XFFFC0220);
	op_plain_offset	(x,	1,	0XFFFE1600);
	op_plain_offset	(x,	129,	0XFFFE1600);
	create_insn	(0XFFFC0228);
	create_insn	(0XFFFC0246);
	create_insn	(0XFFFC0264);
	create_insn	(x=0XFFFC0328);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC032C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0354);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC036E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC0392);
	create_insn	(0XFFFC03BA);
	create_insn	(0XFFFC043E);
	create_insn	(0XFFFC0468);
	create_insn	(0XFFFC046C);
	create_insn	(0XFFFC04D2);
	create_insn	(0XFFFC04D4);
	create_insn	(0XFFFC04FC);
	make_array	(0XFFFC0516,	0X2);
	create_insn	(0XFFFC0518);
	make_array	(0XFFFC0532,	0X2);
	create_insn	(0XFFFC0534);
	create_insn	(0XFFFC0548);
	create_insn	(0XFFFC055C);
	make_array	(0XFFFC0576,	0X2);
	create_insn	(0XFFFC0578);
	set_name	(0XFFFC0578,	"nullsub_2");
	make_array	(0XFFFC057A,	0X2);
	create_insn	(0XFFFC057C);
	set_cmt	(0XFFFC0580,	"int",	0);
	set_cmt	(0XFFFC0582,	"unsigned int",	0);
	set_cmt	(0XFFFC0584,	"void *",	0);
	create_insn	(x=0XFFFC0584);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC058E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0590);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC05B8);
	op_hex		(x,	1);
	set_cmt	(0XFFFC05FC,	"_DWORD",	0);
	create_insn	(x=0XFFFC05FC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0602,	"_DWORD",	0);
	set_cmt	(0XFFFC0604,	"_DWORD",	0);
	create_insn	(x=0XFFFC0604);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0612);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC061E,	"char *",	0);
	create_insn	(x=0XFFFC061E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0636,	"void *",	0);
	create_insn	(x=0XFFFC0648);
	op_plain_offset	(x,	1,	0XFFFE3FA0);
	op_plain_offset	(x,	129,	0XFFFE3FA0);
	create_insn	(x=0XFFFC064E);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0652,	"_DWORD",	0);
	create_insn	(x=0XFFFC0652);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0654);
	op_hex		(x,	1);
	set_cmt	(0XFFFC065A,	"_DWORD",	0);
	create_insn	(x=0XFFFC065A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0664);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0680);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC06AC,	"_DWORD",	0);
	set_cmt	(0XFFFC06B4,	"_DWORD",	0);
	create_insn	(x=0XFFFC06C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC06CE);
	create_insn	(x=0XFFFC06D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC06E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC06F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC06FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC070C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0716);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC071C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC072E,	0X2);
	create_insn	(0XFFFC0730);
	create_insn	(x=0XFFFC0732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC073A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC0788);
	set_name	(0XFFFC0788,	"nullsub_3");
	make_array	(0XFFFC078A,	0X2);
	create_insn	(0XFFFC078C);
	create_insn	(x=0XFFFC0790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC07B2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC07B8);
	create_insn	(x=0XFFFC07BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC07E0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC07E6);
	make_array	(0XFFFC07FA,	0X2);
	create_insn	(0XFFFC07FC);
	create_insn	(0XFFFC080E);
	create_insn	(0XFFFC0820);
	create_insn	(x=0XFFFC0834);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFC0834,	"platform_halt");
	create_insn	(0XFFFC0848);
	create_insn	(x=0XFFFC0856);
	op_hex		(x,	1);
	make_array	(0XFFFC087E,	0X2);
	create_insn	(0XFFFC0880);
	create_insn	(x=0XFFFC088C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0892);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC089A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC08A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC08B0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC08B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC08C0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC08C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC08EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC08FE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC090A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0912);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0916);
	op_hex		(x,	1);
	create_insn	(0XFFFC0920);
	make_array	(0XFFFC0932,	0X2);
	create_insn	(0XFFFC0934);
	create_insn	(x=0XFFFC093A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0942);
	op_hex		(x,	1);
	make_array	(0XFFFC094A,	0X2);
	create_insn	(0XFFFC094C);
	create_insn	(x=0XFFFC0950);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0962);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0966);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0972);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC098C,	"int",	0);
	create_insn	(x=0XFFFC0996);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC09A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC09DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC09F0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A00,	"unsigned int",	0);
	set_cmt	(0XFFFC0A06,	"void *",	0);
	create_insn	(x=0XFFFC0A06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0A10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0A1E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A24,	"_DWORD",	0);
	set_cmt	(0XFFFC0A2A,	"_DWORD",	0);
	create_insn	(x=0XFFFC0A2A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A2C,	"_DWORD",	0);
	create_insn	(x=0XFFFC0A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0A36);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A42,	"char *",	0);
	create_insn	(x=0XFFFC0A42);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A54,	"int",	0);
	create_insn	(x=0XFFFC0A56);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A58,	"unsigned int",	0);
	set_cmt	(0XFFFC0A5A,	"void *",	0);
	create_insn	(x=0XFFFC0A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0A60);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A66,	"_DWORD",	0);
	set_cmt	(0XFFFC0A6C,	"_DWORD",	0);
	create_insn	(x=0XFFFC0A6C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A6E,	"_DWORD",	0);
	create_insn	(x=0XFFFC0A6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0A7C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A88,	"char *",	0);
	create_insn	(x=0XFFFC0A88);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A9A,	"int",	0);
	create_insn	(x=0XFFFC0A9C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0A9E,	"unsigned int",	0);
	set_cmt	(0XFFFC0AA0,	"void *",	0);
	create_insn	(x=0XFFFC0AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0AA6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AAC,	"_DWORD",	0);
	set_cmt	(0XFFFC0AB2,	"_DWORD",	0);
	create_insn	(x=0XFFFC0AB2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AB4,	"_DWORD",	0);
	create_insn	(x=0XFFFC0AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0AC2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0ACE,	"char *",	0);
	create_insn	(x=0XFFFC0ACE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AE0,	"int",	0);
	create_insn	(x=0XFFFC0AE2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AE4,	"unsigned int",	0);
	set_cmt	(0XFFFC0AE6,	"void *",	0);
	create_insn	(x=0XFFFC0AE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0AEC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AF2,	"_DWORD",	0);
	set_cmt	(0XFFFC0AF8,	"_DWORD",	0);
	create_insn	(x=0XFFFC0AF8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0AFA,	"_DWORD",	0);
	create_insn	(x=0XFFFC0AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0B08);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B14,	"char *",	0);
	create_insn	(x=0XFFFC0B14);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B26,	"int",	0);
	create_insn	(x=0XFFFC0B28);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B2A,	"unsigned int",	0);
	set_cmt	(0XFFFC0B2C,	"void *",	0);
	create_insn	(x=0XFFFC0B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0B32);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B38,	"_DWORD",	0);
	set_cmt	(0XFFFC0B3E,	"_DWORD",	0);
	create_insn	(x=0XFFFC0B3E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B40,	"_DWORD",	0);
	create_insn	(x=0XFFFC0B40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0B4E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B5A,	"char *",	0);
	create_insn	(x=0XFFFC0B5A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B6C,	"int",	0);
	create_insn	(x=0XFFFC0B6E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B70,	"unsigned int",	0);
	set_cmt	(0XFFFC0B72,	"void *",	0);
	create_insn	(x=0XFFFC0B72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0B78);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B7E,	"_DWORD",	0);
	set_cmt	(0XFFFC0B84,	"_DWORD",	0);
	create_insn	(x=0XFFFC0B84);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0B86,	"_DWORD",	0);
	create_insn	(x=0XFFFC0B86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0B94);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BA0,	"char *",	0);
	create_insn	(x=0XFFFC0BA0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BB0,	"int",	0);
	create_insn	(x=0XFFFC0BB2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BB4,	"unsigned int",	0);
	set_cmt	(0XFFFC0BB6,	"void *",	0);
	create_insn	(x=0XFFFC0BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0BBC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BC2,	"_DWORD",	0);
	set_cmt	(0XFFFC0BC8,	"_DWORD",	0);
	create_insn	(x=0XFFFC0BC8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BCA,	"_DWORD",	0);
	create_insn	(x=0XFFFC0BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0BD8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0BE4,	"char *",	0);
	create_insn	(x=0XFFFC0BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0BF2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC0C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0C70);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC0C8C);
	create_insn	(x=0XFFFC0C8E);
	op_hex		(x,	1);
	create_insn	(0XFFFC0C96);
	create_insn	(0XFFFC0CAA);
	create_insn	(x=0XFFFC0CAC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0CB0);
	op_hex		(x,	1);
	create_insn	(0XFFFC0CB8);
	create_insn	(x=0XFFFC0CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0CD8);
	op_hex		(x,	1);
	create_insn	(0XFFFC0CF2);
	create_insn	(x=0XFFFC0D08);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0D10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0D18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0D24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC0D34);
	op_stkvar	(x,	1);
	make_array	(0XFFFC0D3E,	0X2);
	create_insn	(0XFFFC0D40);
	set_name	(0XFFFC0D40,	"sdhci_reset");
	create_insn	(0XFFFC0D5C);
	create_insn	(0XFFFC0D74);
	create_insn	(0XFFFC0D86);
	create_insn	(0XFFFC0D88);
	set_name	(0XFFFC0D88,	"sdhci_clk_supply");
	create_insn	(x=0XFFFC0DA2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0DA6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0DAE);
	op_hex		(x,	1);
	create_insn	(0XFFFC0DC6);
	create_insn	(x=0XFFFC0DDC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0DFA);
	op_hex		(x,	1);
	create_insn	(0XFFFC0E06);
	create_insn	(x=0XFFFC0E24);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0E28);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0E30);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0E34);
	op_hex		(x,	1);
	create_insn	(0XFFFC0E3C);
	make_array	(0XFFFC0E42,	0X2);
	create_insn	(0XFFFC0E44);
	set_name	(0XFFFC0E44,	"sdhci_set_uhs_mode");
	create_insn	(x=0XFFFC0E4E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0E5A);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0E62,	"switch 5 cases ",	0);
	set_cmt	(0XFFFC0E66,	"switch jump",	0);
	set_cmt	(0XFFFC0E6A,	"jump table for switch statement",	0);
	create_byte	(0XFFFC0E6A);
	set_name	(0XFFFC0E6A,	"jpt_FFFC0E66");
	create_byte	(0XFFFC0E6B);
	create_byte	(0XFFFC0E6C);
	create_byte	(0XFFFC0E6D);
	create_byte	(0XFFFC0E6E);
	set_cmt	(0XFFFC0E70,	"jumptable FFFC0E66 case 0",	1);
	create_insn	(0XFFFC0E70);
	set_cmt	(0XFFFC0E84,	"jumptable FFFC0E66 case 4",	1);
	create_insn	(x=0XFFFC0E84);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0E9C,	"jumptable FFFC0E66 case 1",	1);
	create_insn	(x=0XFFFC0E9C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0EB4,	"jumptable FFFC0E66 case 2",	1);
	create_insn	(x=0XFFFC0EB4);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0ECC,	"jumptable FFFC0E66 case 3",	1);
	create_insn	(x=0XFFFC0ECC);
	op_hex		(x,	1);
	set_cmt	(0XFFFC0EE4,	"jumptable FFFC0E66 default case",	1);
	create_insn	(0XFFFC0EE4);
	set_name	(0XFFFC0EE4,	"def_FFFC0E66");
	set_cmt	(0XFFFC0F00,	"void *",	0);
	create_insn	(x=0XFFFC0F00);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC0F02,	"_DWORD",	0);
	set_cmt	(0XFFFC0F08,	"_DWORD",	0);
	create_insn	(0XFFFC0F14);
	set_name	(0XFFFC0F14,	"sdhci_set_bus_width");
	create_insn	(0XFFFC0F34);
	create_insn	(0XFFFC0F44);
	create_insn	(0XFFFC0F50);
	create_insn	(0XFFFC0F5C);
	set_name	(0XFFFC0F5C,	"sdhci_send_command");
	create_insn	(x=0XFFFC0F90);
	op_hex		(x,	1);
	create_insn	(0XFFFC0FAA);
	create_insn	(x=0XFFFC0FCE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC0FD2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1008);
	op_hex		(x,	1);
	create_insn	(0XFFFC1042);
	create_insn	(x=0XFFFC106C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1072);
	op_hex		(x,	1);
	create_insn	(0XFFFC1080);
	set_cmt	(0XFFFC1098,	"void *",	0);
	create_insn	(x=0XFFFC1098);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC109A,	"_DWORD",	0);
	set_cmt	(0XFFFC10A0,	"_DWORD",	0);
	create_insn	(0XFFFC10AC);
	create_insn	(x=0XFFFC10B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC10C8);
	create_insn	(x=0XFFFC10DE);
	op_hex		(x,	1);
	create_insn	(0XFFFC10F8);
	create_insn	(0XFFFC1126);
	create_insn	(0XFFFC1160);
	create_insn	(0XFFFC116A);
	create_insn	(x=0XFFFC116E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC11A2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC11B0);
	op_hex		(x,	1);
	create_insn	(0XFFFC11E4);
	create_insn	(x=0XFFFC11E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC11F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC11FE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1212);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(x=0XFFFC1218);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(x=0XFFFC1224);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1226);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC122A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC124A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC1252);
	create_insn	(0XFFFC1260);
	create_insn	(0XFFFC1264);
	create_insn	(x=0XFFFC126A);
	op_hex		(x,	1);
	create_insn	(0XFFFC127E);
	create_insn	(0XFFFC12D4);
	create_insn	(x=0XFFFC12DE);
	op_hex		(x,	1);
	create_insn	(0XFFFC12E6);
	create_insn	(x=0XFFFC12EA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC12FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1306);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1316);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC131C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1324);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC132A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1332);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC133E,	"unsigned int",	0);
	create_insn	(x=0XFFFC133E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1340,	"int",	0);
	create_insn	(x=0XFFFC1342);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC134A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC134C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC1364);
	create_insn	(x=0XFFFC137C);
	op_hex		(x,	1);
	create_insn	(0XFFFC13BC);
	create_insn	(0XFFFC13CC);
	create_insn	(x=0XFFFC13E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC13EA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC13FE);
	create_insn	(0XFFFC1404);
	create_insn	(x=0XFFFC1408);
	op_hex		(x,	1);
	create_insn	(0XFFFC140E);
	create_insn	(0XFFFC141A);
	create_insn	(0XFFFC1432);
	create_insn	(0XFFFC1438);
	create_insn	(x=0XFFFC1448);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(x=0XFFFC144C);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(x=0XFFFC1452);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1454);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(x=0XFFFC1458);
	op_plain_offset	(x,	1,	0XFFFE1640);
	op_plain_offset	(x,	129,	0XFFFE1640);
	create_insn	(0XFFFC145C);
	create_insn	(0XFFFC1466);
	create_insn	(x=0XFFFC146A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC146C);
	op_hex		(x,	1);
	create_insn	(0XFFFC14A8);
	create_insn	(0XFFFC14B6);
	create_insn	(0XFFFC14C4);
	create_insn	(0XFFFC14D2);
	create_insn	(0XFFFC14E0);
	create_insn	(0XFFFC14EE);
	create_insn	(0XFFFC14FC);
	create_insn	(0XFFFC150A);
	create_insn	(0XFFFC1518);
	create_insn	(0XFFFC1526);
	set_cmt	(0XFFFC1542,	"void *",	0);
	create_insn	(x=0XFFFC1542);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1544,	"_DWORD",	0);
	set_cmt	(0XFFFC154A,	"_DWORD",	0);
	create_insn	(0XFFFC1556);
	set_cmt	(0XFFFC1566,	"void *",	0);
	create_insn	(x=0XFFFC1566);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1568,	"_DWORD",	0);
	set_cmt	(0XFFFC156E,	"_DWORD",	0);
	make_array	(0XFFFC157A,	0X2);
	create_insn	(0XFFFC157C);
	set_name	(0XFFFC157C,	"sdhci_init");
	create_insn	(x=0XFFFC15CE);
	op_hex		(x,	1);
	set_cmt	(0XFFFC15D6,	"host",	0);
	set_cmt	(0XFFFC15DC,	"width",	0);
	create_insn	(0XFFFC1604);
	set_name	(0XFFFC1604,	"mmc_boot_get_card_status");
	set_cmt	(0XFFFC160C,	"int",	0);
	set_cmt	(0XFFFC1610,	"void *",	0);
	set_cmt	(0XFFFC1612,	"unsigned int",	0);
	create_insn	(x=0XFFFC161C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1620,	"host",	0);
	set_cmt	(0XFFFC1622,	"cmd",	0);
	create_insn	(x=0XFFFC1628);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC162A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1634);
	op_stkvar	(x,	1);
	make_array	(0XFFFC1642,	0X2);
	create_insn	(0XFFFC1644);
	set_name	(0XFFFC1644,	"mmc_send_app_cmd");
	set_cmt	(0XFFFC164C,	"int",	0);
	set_cmt	(0XFFFC164E,	"void *",	0);
	set_cmt	(0XFFFC1650,	"unsigned int",	0);
	create_insn	(x=0XFFFC165C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC165E,	"host",	0);
	create_insn	(x=0XFFFC1660);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1664,	"cmd",	0);
	create_insn	(x=0XFFFC1666);
	op_stkvar	(x,	1);
	make_array	(0XFFFC1682,	0X2);
	create_insn	(0XFFFC1684);
	set_name	(0XFFFC1684,	"mmc_parse_response");
	create_insn	(x=0XFFFC169A);
	op_hex		(x,	1);
	create_insn	(0XFFFC16B8);
	create_insn	(0XFFFC16C8);
	create_insn	(0XFFFC16CC);
	create_insn	(0XFFFC16DC);
	create_insn	(0XFFFC16EC);
	create_insn	(0XFFFC16FC);
	create_insn	(0XFFFC170C);
	create_insn	(0XFFFC171C);
	set_name	(0XFFFC171C,	"mmc_stop_command");
	set_cmt	(0XFFFC1722,	"int",	0);
	set_cmt	(0XFFFC1724,	"unsigned int",	0);
	set_cmt	(0XFFFC1726,	"void *",	0);
	set_cmt	(0XFFFC172E,	"host",	0);
	set_cmt	(0XFFFC1732,	"cmd",	0);
	create_insn	(x=0XFFFC1738);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC173A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC173E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC174A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC1754);
	make_array	(0XFFFC1766,	0X2);
	create_insn	(0XFFFC1768);
	set_name	(0XFFFC1768,	"mmc_get_ext_csd");
	set_cmt	(0XFFFC176C,	"unsigned int",	0);
	set_cmt	(0XFFFC177A,	"int",	0);
	set_cmt	(0XFFFC1780,	"void *",	0);
	create_insn	(x=0XFFFC178A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC178E,	"host",	0);
	create_insn	(x=0XFFFC1790);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1792,	"cmd",	0);
	create_insn	(x=0XFFFC1796);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC179A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC179C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC17A0);
	op_stkvar	(x,	1);
	make_array	(0XFFFC17AA,	0X2);
	create_insn	(0XFFFC17AC);
	set_name	(0XFFFC17AC,	"mmc_switch_cmd");
	create_insn	(x=0XFFFC17B6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC17BA,	"unsigned int",	0);
	set_cmt	(0XFFFC17C0,	"int",	0);
	set_cmt	(0XFFFC17C6,	"void *",	0);
	create_insn	(x=0XFFFC17C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC17D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC17D6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC17DA,	"cmd",	0);
	create_insn	(x=0XFFFC17DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC17DC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC17E0,	"host",	0);
	set_cmt	(0XFFFC17EA,	"card",	0);
	set_cmt	(0XFFFC17EC,	"prg_enabled",	0);
	set_cmt	(0XFFFC17EE,	"status",	0);
	create_insn	(x=0XFFFC17EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC17F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1810);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC181E);
	create_insn	(0XFFFC1832);
	create_insn	(0XFFFC1840);
	create_insn	(0XFFFC1850);
	set_name	(0XFFFC1850,	"mmc_set_hs_interface");
	create_insn	(x=0XFFFC1852);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC185E,	"access",	0);
	set_cmt	(0XFFFC1860,	"value",	0);
	create_insn	(x=0XFFFC1860);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1862,	"host",	0);
	set_cmt	(0XFFFC1864,	"card",	0);
	set_cmt	(0XFFFC1868,	"index",	0);
	create_insn	(x=0XFFFC1872);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1874,	"host",	0);
	set_cmt	(0XFFFC1876,	"mode",	0);
	create_insn	(0XFFFC1882);
	create_insn	(0XFFFC1898);
	set_name	(0XFFFC1898,	"mmc_sd_card_init");
	set_cmt	(0XFFFC18A2,	"int",	0);
	set_cmt	(0XFFFC18A4,	"void *",	0);
	set_cmt	(0XFFFC18A6,	"unsigned int",	0);
	create_insn	(x=0XFFFC18BE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC18C2,	"host",	0);
	create_insn	(x=0XFFFC18C4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC18C8,	"cmd",	0);
	create_insn	(x=0XFFFC18CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC18CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC18DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC18EC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC18F2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC190C,	"card",	0);
	set_cmt	(0XFFFC190E,	"host",	0);
	set_cmt	(0XFFFC1916,	"host",	0);
	create_insn	(x=0XFFFC191A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC191E,	"cmd",	0);
	create_insn	(x=0XFFFC1920);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1922);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1926);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1930);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1940);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1946);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1960);
	op_hex		(x,	1);
	create_insn	(0XFFFC1972);
	create_insn	(0XFFFC1986);
	create_insn	(0XFFFC199A);
	create_insn	(0XFFFC19AE);
	make_array	(0XFFFC19BE,	0X2);
	create_insn	(0XFFFC19C0);
	set_name	(0XFFFC19C0,	"mmc_sd_set_bus_width");
	set_cmt	(0XFFFC19C8,	"int",	0);
	set_cmt	(0XFFFC19CC,	"void *",	0);
	set_cmt	(0XFFFC19CE,	"unsigned int",	0);
	set_cmt	(0XFFFC19D4,	"card",	0);
	set_cmt	(0XFFFC19D6,	"host",	0);
	create_insn	(x=0XFFFC19E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC19EE,	"host",	0);
	create_insn	(x=0XFFFC19F0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC19F4,	"cmd",	0);
	create_insn	(x=0XFFFC19F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC19FA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC1A0C);
	make_array	(0XFFFC1A1E,	0X2);
	create_insn	(0XFFFC1A20);
	set_name	(0XFFFC1A20,	"mmc_sd_set_hs");
	set_cmt	(0XFFFC1A2A,	"int",	0);
	set_cmt	(0XFFFC1A2C,	"unsigned int",	0);
	set_cmt	(0XFFFC1A2E,	"void *",	0);
	create_insn	(x=0XFFFC1A30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A3C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC1A44,	"cmd",	0);
	create_insn	(x=0XFFFC1A46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A4A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1A4C,	"host",	0);
	create_insn	(x=0XFFFC1A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A5C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1A68,	"host",	0);
	set_cmt	(0XFFFC1A6A,	"mode",	0);
	create_insn	(0XFFFC1A78);
	set_name	(0XFFFC1A78,	"mmc_init");
	create_insn	(x=0XFFFC1A84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1A88);
	op_hex		(x,	1);
	set_cmt	(0XFFFC1AB2,	"int",	0);
	set_cmt	(0XFFFC1AB6,	"unsigned int",	0);
	set_cmt	(0XFFFC1ABC,	"void *",	0);
	create_insn	(x=0XFFFC1AD0);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1AD4);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1AD8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1ADE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1AE4);
	op_plain_offset	(x,	1,	0XFFFE1B08);
	op_plain_offset	(x,	129,	0XFFFE1B08);
	create_insn	(x=0XFFFC1AE8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1AEC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1AF0);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1AF8,	"config",	0);
	set_cmt	(0XFFFC1AFA,	"host",	0);
	create_insn	(x=0XFFFC1B1E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1B26);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1B30,	"unsigned int",	0);
	create_insn	(x=0XFFFC1B32);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1B34,	"void *",	0);
	set_cmt	(0XFFFC1B3C,	"host",	0);
	set_cmt	(0XFFFC1B3E,	"cmd",	0);
	set_cmt	(0XFFFC1B5C,	"unsigned int",	0);
	set_cmt	(0XFFFC1B5E,	"void *",	0);
	set_cmt	(0XFFFC1B62,	"int",	0);
	create_insn	(x=0XFFFC1B68);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1B72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1B76);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1B7E,	"cmd",	0);
	set_cmt	(0XFFFC1B86,	"host",	0);
	create_insn	(x=0XFFFC1B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1BBC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1BC6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1BCE,	"int",	0);
	set_cmt	(0XFFFC1BD0,	"unsigned int",	0);
	set_cmt	(0XFFFC1BD6,	"void *",	0);
	set_cmt	(0XFFFC1BE4,	"host",	0);
	create_insn	(x=0XFFFC1BE6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1BEA,	"cmd",	0);
	create_insn	(x=0XFFFC1BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1C0A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1C2E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1C36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1C46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1C48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1C52);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1C84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D12);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1D1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D2E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1D38,	"unsigned int",	0);
	set_cmt	(0XFFFC1D3A,	"void *",	0);
	set_cmt	(0XFFFC1D3E,	"int",	0);
	create_insn	(x=0XFFFC1D44);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1D5A);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1D60);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1D64,	"host",	0);
	set_cmt	(0XFFFC1D66,	"cmd",	0);
	create_insn	(0XFFFC1D80);
	set_cmt	(0XFFFC1D98,	"host",	0);
	create_insn	(x=0XFFFC1D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC1DA0,	"card",	0);
	create_insn	(0XFFFC1DBE);
	create_insn	(x=0XFFFC1DC0);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1DC6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1DCA,	"int",	0);
	set_cmt	(0XFFFC1DCC,	"unsigned int",	0);
	set_cmt	(0XFFFC1DCE,	"void *",	0);
	set_cmt	(0XFFFC1DE2,	"host",	0);
	create_insn	(x=0XFFFC1DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1DEA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1DEE,	"cmd",	0);
	create_insn	(x=0XFFFC1DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1E10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1E16);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1E1A,	"host",	0);
	set_cmt	(0XFFFC1E1C,	"cmd",	0);
	create_insn	(x=0XFFFC1E28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1E2C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC1E34);
	set_cmt	(0XFFFC1E42,	"unsigned int",	0);
	set_cmt	(0XFFFC1E44,	"int",	0);
	set_cmt	(0XFFFC1E46,	"void *",	0);
	create_insn	(x=0XFFFC1E4E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1E52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1E58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1E5E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1E68);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1E70,	"cmd",	0);
	set_cmt	(0XFFFC1E78,	"host",	0);
	create_insn	(x=0XFFFC1E84);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC1E96);
	create_insn	(0XFFFC1EAC);
	create_insn	(x=0XFFFC1EC4);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1EEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1EF8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1F22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1F52);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1F58);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1F6E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC1F80,	"int",	0);
	set_cmt	(0XFFFC1F82,	"void *",	0);
	set_cmt	(0XFFFC1F86,	"unsigned int",	0);
	set_cmt	(0XFFFC1F8C,	"card",	0);
	create_insn	(x=0XFFFC1F8C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC1F8E,	"host",	0);
	create_insn	(x=0XFFFC1F98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FAC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1FB0,	"host",	0);
	create_insn	(x=0XFFFC1FB2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1FB6,	"cmd",	0);
	create_insn	(x=0XFFFC1FBA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC1FC6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC1FD6,	"int",	0);
	set_cmt	(0XFFFC1FDA,	"void *",	0);
	set_cmt	(0XFFFC1FE2,	"unsigned int",	0);
	create_insn	(x=0XFFFC1FE6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC1FF6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1FF8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC1FFC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2000);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2004);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2008);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC2010,	"card",	0);
	create_insn	(x=0XFFFC2010);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC2012,	"host",	0);
	create_insn	(x=0XFFFC2020);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2026);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC202A,	"host",	0);
	create_insn	(x=0XFFFC202C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2032);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2036,	"cmd",	0);
	create_insn	(x=0XFFFC203A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC203E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2042);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2046);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC204A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2090);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2096);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC20AA);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC20AE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC20B2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC20B8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC20C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC20F2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC20F8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2102);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC2112);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC211C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2120);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC212A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC213A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC213C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2140);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2146);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2150);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2152);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2164);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC217A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2186);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2188);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC218A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2194);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC219A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC219C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21C2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21C8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21CE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21DE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21E8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC21F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC21FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2200);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2202);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2206);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC220A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC220C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2210);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2212);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC221C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2220);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2224);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2228);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC222C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2230);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2232);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC223A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC223C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2240);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2244);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC224C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2256);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2260);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2266);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC227E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2280);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC229A);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC22A8);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC22B6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC22C0);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC22C4,	"host",	0);
	set_cmt	(0XFFFC22C6,	"card",	0);
	set_cmt	(0XFFFC22CE,	"width",	0);
	set_cmt	(0XFFFC22DC,	"host",	0);
	set_cmt	(0XFFFC22DE,	"width",	0);
	create_insn	(x=0XFFFC22EC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC22EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC22FE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2328);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC2344,	"host",	0);
	create_insn	(0XFFFC2344);
	set_cmt	(0XFFFC2346,	"card",	0);
	create_insn	(0XFFFC2364);
	set_cmt	(0XFFFC237E,	"host",	0);
	create_insn	(0XFFFC237E);
	set_cmt	(0XFFFC2380,	"card",	0);
	create_insn	(0XFFFC239E);
	create_insn	(x=0XFFFC23A4);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC23A8);
	create_insn	(0XFFFC23B6);
	create_insn	(x=0XFFFC23BC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC23BE);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC23D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC23DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC23E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC23F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC23FA);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC241A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC241C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC2430);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2436);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2438);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2450);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2454);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC245E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2462);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2466);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2478);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC247C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2484);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC248A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC249A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC24F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2502);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC2508);
	create_insn	(0XFFFC2518);
	create_insn	(x=0XFFFC2524);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC2528);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2540);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2546);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2558);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2562);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC256A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC256C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2574);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2580);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2596);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC259A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25C0);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC25C2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC25C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25CC);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC25D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25E4);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC25E6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC25EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC25F2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC2602,	"width",	0);
	create_insn	(x=0XFFFC2606);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC260E,	"host",	0);
	create_insn	(x=0XFFFC261A);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2622);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC262A);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2630);
	op_hex		(x,	1);
	set_cmt	(0XFFFC2644,	"host",	0);
	set_cmt	(0XFFFC2646,	"value",	0);
	create_insn	(x=0XFFFC2646);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2648,	"card",	0);
	set_cmt	(0XFFFC264C,	"access",	0);
	set_cmt	(0XFFFC264E,	"index",	0);
	set_cmt	(0XFFFC265E,	"host",	0);
	create_insn	(x=0XFFFC265E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC2666,	"mode",	0);
	create_insn	(x=0XFFFC2668);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC2670);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC269C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC269E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC26A2);
	set_cmt	(0XFFFC26B8,	"value",	0);
	create_insn	(x=0XFFFC26B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC26BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC26C4,	"access",	0);
	set_cmt	(0XFFFC26C6,	"host",	0);
	set_cmt	(0XFFFC26C8,	"card",	0);
	set_cmt	(0XFFFC26CC,	"index",	0);
	create_insn	(x=0XFFFC26E6);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	set_cmt	(0XFFFC26F8,	"access",	0);
	create_insn	(0XFFFC26F8);
	set_cmt	(0XFFFC26FA,	"host",	0);
	set_cmt	(0XFFFC26FC,	"value",	0);
	create_insn	(x=0XFFFC26FC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC26FE,	"card",	0);
	set_cmt	(0XFFFC2702,	"index",	0);
	create_insn	(x=0XFFFC270C);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC2710);
	create_insn	(0XFFFC271E);
	create_insn	(x=0XFFFC272E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2732);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC273E);
	create_insn	(x=0XFFFC274E);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC2760);
	create_insn	(0XFFFC2770);
	create_insn	(0XFFFC2780);
	create_insn	(x=0XFFFC278C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC2794);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(x=0XFFFC27A2);
	op_plain_offset	(x,	1,	0XFFFE1A00);
	op_plain_offset	(x,	129,	0XFFFE1A00);
	create_insn	(0XFFFC27B4);
	set_cmt	(0XFFFC27C4,	"void *",	0);
	create_insn	(x=0XFFFC27C4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC27C6,	"_DWORD",	0);
	set_cmt	(0XFFFC27CC,	"_DWORD",	0);
	create_insn	(0XFFFC27D8);
	set_name	(0XFFFC27D8,	"mmc_sdhci_read");
	create_insn	(x=0XFFFC27E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC27E4,	"void *",	0);
	set_cmt	(0XFFFC27E6,	"int",	0);
	set_cmt	(0XFFFC27E8,	"unsigned int",	0);
	create_insn	(x=0XFFFC27FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2800);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2806);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC280A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC280C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2814);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2816);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2818,	"cmd",	0);
	create_insn	(x=0XFFFC281A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC281C,	"host",	0);
	create_insn	(x=0XFFFC282A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2834);
	create_insn	(x=0XFFFC2838);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC283C,	"dev",	0);
	create_insn	(0XFFFC283C);
	create_insn	(0XFFFC2846);
	create_insn	(x=0XFFFC284A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2852);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2854);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2856);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC285C);
	set_name	(0XFFFC285C,	"mmc_sdhci_write");
	create_insn	(x=0XFFFC2864);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2868,	"void *",	0);
	set_cmt	(0XFFFC286A,	"int",	0);
	set_cmt	(0XFFFC286C,	"unsigned int",	0);
	create_insn	(x=0XFFFC287A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2884);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC288A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2892);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2894);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2898);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC289A,	"cmd",	0);
	create_insn	(x=0XFFFC289C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC28A0,	"host",	0);
	create_insn	(x=0XFFFC28AE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC28B8);
	create_insn	(x=0XFFFC28BC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC28C0,	"dev",	0);
	create_insn	(0XFFFC28C0);
	create_insn	(0XFFFC28CA);
	create_insn	(x=0XFFFC28CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC28D6);
	op_stkvar	(x,	1);
	make_array	(0XFFFC28DA,	0X2);
	create_insn	(0XFFFC28DC);
	set_name	(0XFFFC28DC,	"mmc_send_erase_grp_start");
	set_cmt	(0XFFFC2934,	"int",	0);
	set_cmt	(0XFFFC2936,	"void *",	0);
	create_insn	(x=0XFFFC2936);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2938,	"unsigned int",	0);
	create_insn	(x=0XFFFC2946);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC294E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2952,	"host",	0);
	create_insn	(x=0XFFFC2954);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2958,	"cmd",	0);
	create_insn	(x=0XFFFC2958);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2962);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2968,	"int",	0);
	set_cmt	(0XFFFC296A,	"unsigned int",	0);
	set_cmt	(0XFFFC296C,	"void *",	0);
	create_insn	(x=0XFFFC296C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC297C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2984);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2988,	"host",	0);
	create_insn	(x=0XFFFC298A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC298E,	"cmd",	0);
	create_insn	(x=0XFFFC298E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC299A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC29AA,	"int",	0);
	set_cmt	(0XFFFC29B0,	"void *",	0);
	create_insn	(x=0XFFFC29B0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC29B2,	"unsigned int",	0);
	create_insn	(x=0XFFFC29C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC29C4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC29C8,	"cmd",	0);
	create_insn	(x=0XFFFC29C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC29CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC29CE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC29D2,	"host",	0);
	set_cmt	(0XFFFC29E2,	"card",	0);
	set_cmt	(0XFFFC29E4,	"prg_enabled",	0);
	set_cmt	(0XFFFC29E6,	"status",	0);
	create_insn	(x=0XFFFC29E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC29EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2A00);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2A12);
	create_insn	(0XFFFC2A32);
	create_insn	(0XFFFC2A52);
	create_insn	(0XFFFC2A60);
	create_insn	(0XFFFC2A72);
	create_insn	(0XFFFC2A92);
	create_insn	(0XFFFC2AAA);
	create_insn	(x=0XFFFC2AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2ABE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2AC2);
	create_insn	(0XFFFC2AD6);
	create_insn	(0XFFFC2AE8);
	create_insn	(x=0XFFFC2AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2AFC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2B00);
	make_array	(0XFFFC2B0E,	0X2);
	create_insn	(0XFFFC2B10);
	set_name	(0XFFFC2B10,	"mmc_sdhci_switch_part");
	set_cmt	(0XFFFC2B12,	"access",	0);
	set_cmt	(0XFFFC2B1E,	"card",	0);
	set_cmt	(0XFFFC2B22,	"index",	0);
	create_insn	(x=0XFFFC2B24);
	op_hex		(x,	1);
	set_cmt	(0XFFFC2B2C,	"value",	0);
	create_insn	(x=0XFFFC2B2C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2B3E);
	make_array	(0XFFFC2B52,	0X2);
	create_insn	(0XFFFC2B54);
	set_name	(0XFFFC2B54,	"mmc_sdhci_rpmb_send");
	set_cmt	(0XFFFC2B62,	"type",	0);
	create_insn	(x=0XFFFC2B7C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2B88,	"int",	0);
	set_cmt	(0XFFFC2B8E,	"void *",	0);
	create_insn	(x=0XFFFC2B8E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2B9A,	"unsigned int",	0);
	set_cmt	(0XFFFC2BA8,	"host",	0);
	create_insn	(x=0XFFFC2BAA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2BAE,	"cmd",	0);
	create_insn	(x=0XFFFC2BAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2BB2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2BBC,	"host",	0);
	set_cmt	(0XFFFC2BBE,	"cmd",	0);
	set_cmt	(0XFFFC2BC8,	"card",	0);
	set_cmt	(0XFFFC2BCA,	"prg_enabled",	0);
	set_cmt	(0XFFFC2BCC,	"status",	0);
	create_insn	(x=0XFFFC2BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2BEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2BF4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2BFC);
	set_cmt	(0XFFFC2C12,	"dev",	0);
	set_cmt	(0XFFFC2C14,	"type",	0);
	create_insn	(0XFFFC2C28);
	create_insn	(0XFFFC2C30);
	create_insn	(0XFFFC2C40);
	create_insn	(0XFFFC2C50);
	create_insn	(0XFFFC2C54);
	set_cmt	(0XFFFC2C64,	"void *",	0);
	create_insn	(x=0XFFFC2C64);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2C66,	"_DWORD",	0);
	set_cmt	(0XFFFC2C6C,	"_DWORD",	0);
	create_insn	(0XFFFC2C78);
	set_name	(0XFFFC2C78,	"mmc_zero_out");
	set_cmt	(0XFFFC2C9E,	"unsigned int",	0);
	set_cmt	(0XFFFC2CA0,	"int",	0);
	set_cmt	(0XFFFC2CAE,	"num_blocks",	0);
	create_insn	(x=0XFFFC2CAE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2CB0,	"src",	0);
	set_cmt	(0XFFFC2CB2,	"dev",	0);
	set_cmt	(0XFFFC2CB4,	"blk_addr",	0);
	set_cmt	(0XFFFC2CB6,	"blk_addr",	0);
	create_insn	(0XFFFC2CC4);
	create_insn	(0XFFFC2CDA);
	make_array	(0XFFFC2CEE,	0X2);
	create_insn	(0XFFFC2CF0);
	set_name	(0XFFFC2CF0,	"mmc_write");
	create_insn	(x=0XFFFC2D50);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2D54);
	set_cmt	(0XFFFC2D84,	"blk_addr",	0);
	create_insn	(x=0XFFFC2D88);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2D8A,	"blk_addr",	0);
	set_cmt	(0XFFFC2D8C,	"dev",	0);
	set_cmt	(0XFFFC2D8E,	"num_blocks",	0);
	create_insn	(x=0XFFFC2D8E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2D90,	"src",	0);
	create_insn	(x=0XFFFC2DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2DAC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2DB6);
	set_cmt	(0XFFFC2DCC,	"num_blocks",	0);
	create_insn	(x=0XFFFC2DCC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2DD0,	"blk_addr",	0);
	set_cmt	(0XFFFC2DD2,	"dev",	0);
	set_cmt	(0XFFFC2DD4,	"src",	0);
	set_cmt	(0XFFFC2DD6,	"blk_addr",	0);
	create_insn	(x=0XFFFC2DE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2DF2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2DFC);
	set_cmt	(0XFFFC2E0C,	"void *",	0);
	create_insn	(x=0XFFFC2E0C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2E0E,	"_DWORD",	0);
	set_cmt	(0XFFFC2E14,	"_DWORD",	0);
	make_array	(0XFFFC2E1E,	0X2);
	create_insn	(0XFFFC2E20);
	set_name	(0XFFFC2E20,	"mmc_read");
	create_insn	(x=0XFFFC2E74);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2E78);
	set_cmt	(0XFFFC2EA8,	"blk_addr",	0);
	create_insn	(x=0XFFFC2EAC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2EAE,	"blk_addr",	0);
	set_cmt	(0XFFFC2EB0,	"dev",	0);
	set_cmt	(0XFFFC2EB2,	"num_blocks",	0);
	create_insn	(x=0XFFFC2EB2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2EB4,	"dest",	0);
	create_insn	(x=0XFFFC2ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2ED0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2EDA);
	set_cmt	(0XFFFC2EF0,	"num_blocks",	0);
	create_insn	(x=0XFFFC2EF0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2EF4,	"blk_addr",	0);
	set_cmt	(0XFFFC2EF6,	"dev",	0);
	set_cmt	(0XFFFC2EF8,	"dest",	0);
	set_cmt	(0XFFFC2EFA,	"blk_addr",	0);
	create_insn	(x=0XFFFC2F06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC2F16);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC2F20);
	set_cmt	(0XFFFC2F30,	"void *",	0);
	create_insn	(x=0XFFFC2F30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2F32,	"_DWORD",	0);
	set_cmt	(0XFFFC2F38,	"_DWORD",	0);
	create_insn	(0XFFFC2F42);
	set_cmt	(0XFFFC2F52,	"void *",	0);
	create_insn	(x=0XFFFC2F52);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2F54,	"_DWORD",	0);
	set_cmt	(0XFFFC2F5A,	"_DWORD",	0);
	create_insn	(0XFFFC2F64);
	set_name	(0XFFFC2F64,	"switch_partition");
	set_cmt	(0XFFFC2F6C,	"type",	0);
	make_array	(0XFFFC2F76,	0X2);
	create_insn	(0XFFFC2F78);
	make_array	(0XFFFC2F96,	0X2);
	create_insn	(0XFFFC2F98);
	create_insn	(x=0XFFFC2FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC2FC2);
	set_cmt	(0XFFFC2FD8,	"host",	0);
	set_cmt	(0XFFFC2FE2,	"value",	0);
	create_insn	(x=0XFFFC2FE2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2FE4,	"card",	0);
	set_cmt	(0XFFFC2FE6,	"access",	0);
	set_cmt	(0XFFFC2FE8,	"index",	0);
	set_cmt	(0XFFFC2FF4,	"card",	0);
	create_insn	(x=0XFFFC2FF6);
	op_hex		(x,	1);
	set_cmt	(0XFFFC2FFA,	"host",	0);
	set_cmt	(0XFFFC2FFC,	"value",	0);
	create_insn	(x=0XFFFC2FFC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC2FFE,	"access",	0);
	set_cmt	(0XFFFC3000,	"index",	0);
	create_insn	(x=0XFFFC300C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3012);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC301C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC302C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC303C);
	create_insn	(x=0XFFFC3056);
	op_hex		(x,	1);
	set_cmt	(0XFFFC306E,	"value",	0);
	create_insn	(x=0XFFFC306E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3070,	"card",	0);
	set_cmt	(0XFFFC3074,	"access",	0);
	set_cmt	(0XFFFC3076,	"index",	0);
	create_insn	(x=0XFFFC308A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC309E);
	create_insn	(0XFFFC30B2);
	create_insn	(0XFFFC30C4);
	create_insn	(0XFFFC30E0);
	create_insn	(0XFFFC30F0);
	create_insn	(0XFFFC3100);
	set_cmt	(0XFFFC3190,	"dev",	0);
	set_cmt	(0XFFFC3192,	"blk_addr",	0);
	set_cmt	(0XFFFC3194,	"num_blks",	0);
	set_cmt	(0XFFFC31B6,	"dev",	0);
	set_cmt	(0XFFFC31BC,	"erase_start",	0);
	set_cmt	(0XFFFC31D4,	"blk_addr",	0);
	create_insn	(0XFFFC31D4);
	set_cmt	(0XFFFC31D6,	"dev",	0);
	set_cmt	(0XFFFC31D8,	"num_blks",	0);
	create_insn	(0XFFFC31EA);
	create_insn	(0XFFFC31F2);
	set_cmt	(0XFFFC3206,	"dev",	0);
	create_insn	(0XFFFC3206);
	set_cmt	(0XFFFC3208,	"blk_addr",	0);
	set_cmt	(0XFFFC320A,	"num_blks",	0);
	create_insn	(0XFFFC3216);
	set_cmt	(0XFFFC3226,	"void *",	0);
	create_insn	(x=0XFFFC3226);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3228,	"_DWORD",	0);
	set_cmt	(0XFFFC322E,	"_DWORD",	0);
	create_insn	(0XFFFC323A);
	set_cmt	(0XFFFC324A,	"void *",	0);
	create_insn	(x=0XFFFC324A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC324C,	"_DWORD",	0);
	set_cmt	(0XFFFC3252,	"_DWORD",	0);
	make_array	(0XFFFC325E,	0X2);
	create_insn	(0XFFFC3260);
	create_insn	(0XFFFC326C);
	make_array	(0XFFFC3276,	0X2);
	create_insn	(0XFFFC3278);
	make_array	(0XFFFC328A,	0X2);
	create_insn	(0XFFFC328C);
	set_name	(0XFFFC328C,	"target_sdc_init");
	create_insn	(x=0XFFFC328E);
	op_dec		(x,	1);
	create_insn	(x=0XFFFC32AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC32B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC32B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC32BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC32C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC330C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3314);
	op_hex		(x,	1);
	set_cmt	(0XFFFC3322,	"data",	0);
	create_insn	(x=0XFFFC3322);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3324);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC332E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC333E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC337C,	"void *",	0);
	create_insn	(x=0XFFFC337C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC337E,	"_DWORD",	0);
	set_cmt	(0XFFFC3384,	"_DWORD",	0);
	make_array	(0XFFFC338E,	0X2);
	create_insn	(x=0XFFFC3390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFC3390,	"get_mmc_dev");
	create_insn	(0XFFFC339C);
	set_name	(0XFFFC339C,	"target_get_max_flash_size");
	make_array	(0XFFFC33A2,	0X2);
	create_insn	(0XFFFC33A4);
	set_name	(0XFFFC33A4,	"target_get_scratch_address");
	make_array	(0XFFFC33AA,	0X2);
	create_insn	(0XFFFC33AC);
	set_name	(0XFFFC33AC,	"clock_init_mmc");
	make_array	(0XFFFC33AE,	0X2);
	create_insn	(0XFFFC33B0);
	set_name	(0XFFFC33B0,	"sdhci_msm_init");
	make_array	(0XFFFC33C6,	0X2);
	create_insn	(0XFFFC33C8);
	create_insn	(0XFFFC33E0);
	create_insn	(0XFFFC343C);
	create_insn	(x=0XFFFC344C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3454);
	create_insn	(x=0XFFFC3464);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3470);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3478);
	op_hex		(x,	1);
	create_insn	(0XFFFC3488);
	create_insn	(x=0XFFFC348C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3498);
	op_hex		(x,	1);
	create_insn	(0XFFFC34B0);
	create_insn	(x=0XFFFC34C0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC34CC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC34DC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC34E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC34F8);
	op_hex		(x,	1);
	create_insn	(0XFFFC350C);
	create_insn	(x=0XFFFC3514);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC352C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3544);
	op_hex		(x,	1);
	create_insn	(0XFFFC35A0);
	create_insn	(x=0XFFFC35A8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC35C0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC35D8);
	op_hex		(x,	1);
	create_insn	(0XFFFC3634);
	create_insn	(x=0XFFFC363C);
	op_hex		(x,	1);
	create_insn	(0XFFFC3658);
	set_name	(0XFFFC3658,	"arch_clean_invalidate_cache_range");
	create_insn	(x=0XFFFC3660);
	op_hex		(x,	1);
	create_insn	(0XFFFC367C);
	set_name	(0XFFFC367C,	"arch_invalidate_cache_range");
	create_insn	(x=0XFFFC3684);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC36A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC36B0);
	op_stkvar	(x,	1);
	create_dword	(0XFFFC36B4);
	create_dword	(0XFFFC36B8);
	create_insn	(0XFFFC36BC);
	create_insn	(x=0XFFFC36C0);
	op_hex		(x,	1);
	create_insn	(0XFFFC36CC);
	create_insn	(x=0XFFFC36D0);
	op_hex		(x,	1);
	create_insn	(0XFFFC36DC);
	create_insn	(0XFFFC36F4);
	create_insn	(0XFFFC3710);
	create_insn	(0XFFFC372C);
	create_insn	(0XFFFC3748);
	create_insn	(0XFFFC3764);
	create_insn	(0XFFFC3768);
	create_insn	(0XFFFC3788);
	create_insn	(0XFFFC37A0);
	create_insn	(0XFFFC37A8);
	create_insn	(0XFFFC37B4);
	create_insn	(x=0XFFFC37CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC37D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC37DC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC37E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC37EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC37F4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC380C);
	create_insn	(x=0XFFFC3824);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3828);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3834);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC383C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3844);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC384C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3864);
	create_insn	(x=0XFFFC3880);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3884);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3890);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3898);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC38A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC38A8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC38C0);
	create_insn	(x=0XFFFC38DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC38E0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC38EC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC38F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC38FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3904);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC391C);
	create_insn	(0XFFFC3920);
	create_insn	(x=0XFFFC393C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3940);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC394C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3954);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC396C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3984);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC398C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC39A4);
	create_insn	(x=0XFFFC39C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC39C4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC39D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC39D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC39E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC39E8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3A00);
	set_name	(0XFFFC3A00,	"dump_mode_regs");
	create_insn	(x=0XFFFC3A06);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3A94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3AAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3ACA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3AD8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3AE0,	"switch 15 cases ",	0);
	create_insn	(x=0XFFFC3AE2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3AEC,	"switch jump",	0);
	set_cmt	(0XFFFC3AF0,	"jump table for switch statement",	0);
	create_byte	(0XFFFC3AF0);
	set_name	(0XFFFC3AF0,	"jpt_FFFC3AEC");
	create_byte	(0XFFFC3AF1);
	create_byte	(0XFFFC3AF2);
	create_byte	(0XFFFC3AF3);
	create_byte	(0XFFFC3AF4);
	create_byte	(0XFFFC3AF5);
	create_byte	(0XFFFC3AF6);
	create_byte	(0XFFFC3AF7);
	create_byte	(0XFFFC3AF8);
	create_byte	(0XFFFC3AF9);
	create_byte	(0XFFFC3AFA);
	create_byte	(0XFFFC3AFB);
	create_byte	(0XFFFC3AFC);
	create_byte	(0XFFFC3AFD);
	create_byte	(0XFFFC3AFE);
	create_insn	(0XFFFC3B00);
	create_insn	(x=0XFFFC3B06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3B94);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3B9A,	"jumptable FFFC3AEC case 31",	1);
	create_insn	(x=0XFFFC3B9A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3B9C,	"jumptable FFFC3AEC case 19",	1);
	set_cmt	(0XFFFC3BB4,	"jumptable FFFC3AEC default case",	1);
	set_name	(0XFFFC3BB4,	"def_FFFC3AEC");
	create_insn	(x=0XFFFC3BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3BBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3BC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3BCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3BD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3BE2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3BE8,	"jumptable FFFC3AEC case 18",	1);
	create_insn	(x=0XFFFC3BE8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3BEC,	"jumptable FFFC3AEC case 17",	1);
	create_insn	(x=0XFFFC3BEC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3BF0);
	create_insn	(x=0XFFFC3BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3BFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3C0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3C26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C2E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3C34,	"jumptable FFFC3AEC case 27",	1);
	create_insn	(x=0XFFFC3C34);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3C38);
	create_insn	(x=0XFFFC3C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3C52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3C9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3CB0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC3CB8);
	set_name	(0XFFFC3CB8,	"dump_fault_frame");
	create_insn	(x=0XFFFC3CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3D02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3D18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3D36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3D42,	"spsr",	0);
	set_cmt	(0XFFFC3D44,	"svc_r13",	0);
	set_cmt	(0XFFFC3D48,	"svc_r14",	0);
	create_insn	(x=0XFFFC3D56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC3D60);
	make_array	(0XFFFC3D6E,	0X2);
	create_insn	(0XFFFC3D70);
	create_insn	(x=0XFFFC3D96);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3DA6);
	op_hex		(x,	1);
	create_insn	(0XFFFC3DCA);
	create_insn	(x=0XFFFC3DEA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3E02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC3E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC3E2E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC3E48,	"spsr",	0);
	set_cmt	(0XFFFC3E4A,	"svc_r13",	0);
	set_cmt	(0XFFFC3E4E,	"svc_r14",	0);
	create_insn	(0XFFFC3E5C);
	create_insn	(x=0XFFFC3E76);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC3E9A);
	op_hex		(x,	1);
	create_insn	(0XFFFC3EB6);
	create_insn	(0XFFFC3EBA);
	create_insn	(x=0XFFFC3ECC);
	op_hex		(x,	1);
	set_cmt	(0XFFFC3ED4,	"switch 22 cases ",	0);
	set_cmt	(0XFFFC3EDA,	"switch jump",	0);
	set_cmt	(0XFFFC3EDE,	"jump table for switch statement",	0);
	create_byte	(0XFFFC3EDE);
	set_name	(0XFFFC3EDE,	"jpt_FFFC3EDA");
	create_byte	(0XFFFC3EDF);
	create_byte	(0XFFFC3EE0);
	create_byte	(0XFFFC3EE1);
	create_byte	(0XFFFC3EE2);
	create_byte	(0XFFFC3EE3);
	create_byte	(0XFFFC3EE4);
	create_byte	(0XFFFC3EE5);
	create_byte	(0XFFFC3EE6);
	create_byte	(0XFFFC3EE7);
	create_byte	(0XFFFC3EE8);
	create_byte	(0XFFFC3EE9);
	create_byte	(0XFFFC3EEA);
	create_byte	(0XFFFC3EEB);
	create_byte	(0XFFFC3EEC);
	create_byte	(0XFFFC3EED);
	create_byte	(0XFFFC3EEE);
	create_byte	(0XFFFC3EEF);
	create_byte	(0XFFFC3EF0);
	create_byte	(0XFFFC3EF1);
	create_byte	(0XFFFC3EF2);
	create_byte	(0XFFFC3EF3);
	set_cmt	(0XFFFC3EF4,	"jumptable FFFC3EDA default case",	1);
	create_insn	(x=0XFFFC3EF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFC3EF4,	"def_FFFC3EDA");
	set_cmt	(0XFFFC3F20,	"frame",	0);
	set_cmt	(0XFFFC3F2A,	"jumptable FFFC3EDA case 22",	1);
	create_insn	(0XFFFC3F2A);
	create_insn	(x=0XFFFC3F2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3F4E,	"jumptable FFFC3EDA cases 13,15",	1);
	create_insn	(0XFFFC3F4E);
	create_insn	(x=0XFFFC3F52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3F72,	"jumptable FFFC3EDA cases 9,11",	1);
	create_insn	(0XFFFC3F72);
	create_insn	(x=0XFFFC3F76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3F84,	"jumptable FFFC3EDA case 8",	1);
	create_insn	(0XFFFC3F84);
	create_insn	(x=0XFFFC3F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3FA8,	"jumptable FFFC3EDA cases 5,7",	1);
	create_insn	(0XFFFC3FA8);
	create_insn	(x=0XFFFC3FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3FCC,	"jumptable FFFC3EDA cases 3,6",	1);
	create_insn	(0XFFFC3FCC);
	create_insn	(x=0XFFFC3FD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3FF0,	"jumptable FFFC3EDA case 2",	1);
	create_insn	(x=0XFFFC3FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC3FFE,	"jumptable FFFC3EDA case 1",	1);
	create_insn	(0XFFFC3FFE);
	create_insn	(x=0XFFFC4002);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC4022,	0X2);
	create_insn	(0XFFFC4024);
	create_insn	(x=0XFFFC4030);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC4034);
	op_hex		(x,	1);
	set_cmt	(0XFFFC404E,	"switch 22 cases ",	0);
	set_cmt	(0XFFFC4054,	"switch jump",	0);
	set_cmt	(0XFFFC4058,	"jump table for switch statement",	0);
	create_byte	(0XFFFC4058);
	set_name	(0XFFFC4058,	"jpt_FFFC4054");
	create_byte	(0XFFFC4059);
	create_byte	(0XFFFC405A);
	create_byte	(0XFFFC405B);
	create_byte	(0XFFFC405C);
	create_byte	(0XFFFC405D);
	create_byte	(0XFFFC405E);
	create_byte	(0XFFFC405F);
	create_byte	(0XFFFC4060);
	create_byte	(0XFFFC4061);
	create_byte	(0XFFFC4062);
	create_byte	(0XFFFC4063);
	create_byte	(0XFFFC4064);
	create_byte	(0XFFFC4065);
	create_byte	(0XFFFC4066);
	create_byte	(0XFFFC4067);
	create_byte	(0XFFFC4068);
	create_byte	(0XFFFC4069);
	create_byte	(0XFFFC406A);
	create_byte	(0XFFFC406B);
	create_byte	(0XFFFC406C);
	create_byte	(0XFFFC406D);
	set_cmt	(0XFFFC406E,	"jumptable FFFC4054 case 22",	1);
	create_insn	(x=0XFFFC406E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC409A,	"frame",	0);
	set_cmt	(0XFFFC40A4,	"jumptable FFFC4054 case 1",	1);
	create_insn	(x=0XFFFC40A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40B2,	"jumptable FFFC4054 case 2",	1);
	create_insn	(x=0XFFFC40B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40C0,	"jumptable FFFC4054 cases 3,6",	1);
	create_insn	(x=0XFFFC40C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40CE,	"jumptable FFFC4054 cases 5,7",	1);
	create_insn	(x=0XFFFC40CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40DC,	"jumptable FFFC4054 case 8",	1);
	create_insn	(x=0XFFFC40DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40EA,	"jumptable FFFC4054 cases 9,11",	1);
	create_insn	(0XFFFC40EA);
	create_insn	(x=0XFFFC40EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC40FC,	"jumptable FFFC4054 cases 13,15",	1);
	create_insn	(x=0XFFFC40FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC410A,	"jumptable FFFC4054 default case",	1);
	create_insn	(x=0XFFFC410A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFC410A,	"def_FFFC4054");
	create_insn	(0XFFFC4118);
	create_insn	(0XFFFC4128);
	set_cmt	(0XFFFC412A,	"unsigned int",	0);
	set_cmt	(0XFFFC4130,	"int",	0);
	set_cmt	(0XFFFC4132,	"void *",	0);
	create_insn	(0XFFFC4148);
	create_insn	(x=0XFFFC4170);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC41A6);
	op_hex		(x,	1);
	create_insn	(0XFFFC41BE);
	set_cmt	(0XFFFC41C4,	"void *",	0);
	create_insn	(0XFFFC41C4);
	set_cmt	(0XFFFC41CC,	"_DWORD",	0);
	create_insn	(x=0XFFFC41CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC41E4);
	op_hex		(x,	1);
	set_cmt	(0XFFFC41EC,	"void *",	0);
	create_insn	(0XFFFC41EC);
	create_insn	(x=0XFFFC41EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC41F6,	"_DWORD",	0);
	create_insn	(0XFFFC41FC);
	create_insn	(x=0XFFFC41FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC421E,	0X2);
	create_insn	(0XFFFC4220);
	create_insn	(x=0XFFFC4236);
	op_hex		(x,	1);
	make_array	(0XFFFC426A,	0X2);
	create_insn	(0XFFFC426C);
	create_insn	(0XFFFC4284);
	create_insn	(x=0XFFFC4294);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC4298);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC429C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC42B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC42BC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC42D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC42E0);
	op_hex		(x,	1);
	create_insn	(0XFFFC430C);
	set_name	(0XFFFC430C,	"nullsub_11");
	create_insn	(0XFFFC4310);
	create_insn	(x=0XFFFC4320);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4344);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC4360);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC4378);
	set_cmt	(0XFFFC4384,	"_DWORD",	0);
	create_insn	(x=0XFFFC43A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC43F6);
	create_insn	(x=0XFFFC43FC);
	op_hex		(x,	1);
	create_insn	(0XFFFC4408);
	create_insn	(0XFFFC440E);
	set_cmt	(0XFFFC441E,	"void *",	0);
	create_insn	(x=0XFFFC441E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4420,	"_DWORD",	0);
	make_array	(0XFFFC442E,	0X2);
	create_dword	(x=0XFFFC4430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFC4434);
	set_name	(0XFFFC4434,	"bootstrap2_func");
	create_insn	(0XFFFC44A0);
	set_cmt	(0XFFFC4554,	"a5",	0);
	create_insn	(x=0XFFFC4554);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4556,	"a2",	0);
	create_insn	(x=0XFFFC4556);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC455E,	"a3",	0);
	set_cmt	(0XFFFC4564,	"a4",	0);
	make_array	(0XFFFC457A,	0X2);
	create_insn	(0XFFFC457C);
	create_insn	(0XFFFC4588);
	create_insn	(0XFFFC45B8);
	set_cmt	(0XFFFC45DA,	"a3",	0);
	set_cmt	(0XFFFC45E2,	"a5",	0);
	create_insn	(x=0XFFFC45E2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC45E4,	"a4",	0);
	make_array	(0XFFFC4602,	0X2);
	create_insn	(0XFFFC4604);
	create_insn	(x=0XFFFC4612);
	op_hex		(x,	1);
	set_cmt	(0XFFFC462E,	"out",	0);
	set_cmt	(0XFFFC4630,	"data_addr",	0);
	set_cmt	(0XFFFC4632,	"data_addr",	0);
	set_cmt	(0XFFFC4634,	"data_len",	0);
	create_insn	(0XFFFC4648);
	create_insn	(0XFFFC464E);
	create_insn	(0XFFFC4660);
	make_array	(0XFFFC4672,	0X2);
	create_insn	(0XFFFC4674);
	set_cmt	(0XFFFC4688,	"_DWORD",	0);
	create_insn	(0XFFFC46A2);
	set_cmt	(0XFFFC46AE,	"_DWORD",	0);
	make_array	(0XFFFC46BE,	0X2);
	create_insn	(0XFFFC46C0);
	set_cmt	(0XFFFC46E2,	"data_len",	0);
	set_cmt	(0XFFFC46EA,	"data_addr",	0);
	set_cmt	(0XFFFC46EC,	"data_addr",	0);
	set_cmt	(0XFFFC46F6,	"in",	0);
	create_insn	(x=0XFFFC46F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC46FE,	"len",	0);
	set_cmt	(0XFFFC470E,	"in",	0);
	create_insn	(x=0XFFFC470E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4716,	"len",	0);
	set_cmt	(0XFFFC4726,	"size",	0);
	create_insn	(x=0XFFFC4774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4778,	"int",	0);
	set_cmt	(0XFFFC477C,	"unsigned int",	0);
	set_cmt	(0XFFFC477E,	"void *",	0);
	create_insn	(x=0XFFFC477E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4854,	"int",	0);
	set_cmt	(0XFFFC4856,	"unsigned int",	0);
	set_cmt	(0XFFFC4858,	"void *",	0);
	create_insn	(x=0XFFFC4858);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC485E,	"_DWORD",	0);
	set_cmt	(0XFFFC4864,	"_DWORD",	0);
	create_insn	(x=0XFFFC4864);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC486E,	"_DWORD",	0);
	create_insn	(x=0XFFFC486E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4878);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC48A6,	"_DWORD",	0);
	set_cmt	(0XFFFC48AE,	"_DWORD",	0);
	set_cmt	(0XFFFC48B8,	"size",	0);
	set_cmt	(0XFFFC48BC,	"base",	0);
	create_insn	(x=0XFFFC48BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC48CE);
	create_insn	(0XFFFC48D8);
	set_cmt	(0XFFFC48DE,	"_DWORD",	0);
	create_insn	(x=0XFFFC48DE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC48E4,	"_DWORD",	0);
	set_cmt	(0XFFFC48EE,	"_DWORD",	0);
	create_insn	(x=0XFFFC48EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC48F8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4904,	"_DWORD",	0);
	set_cmt	(0XFFFC490A,	"_DWORD",	0);
	create_insn	(x=0XFFFC490A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4922);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC494A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC495E);
	create_insn	(x=0XFFFC496C);
	op_stkvar	(x,	1);
	make_array	(0XFFFC4976,	0X2);
	create_dword	(x=0XFFFC4978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFC497C);
	create_insn	(x=0XFFFC49D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC49E6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC49FA,	"_DWORD",	0);
	create_insn	(x=0XFFFC49FC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC49FE,	"_DWORD",	0);
	create_insn	(x=0XFFFC4A00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4A1E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4A50,	"data_addr",	0);
	set_cmt	(0XFFFC4A54,	"data_addr",	0);
	set_cmt	(0XFFFC4A56,	"out",	0);
	create_insn	(x=0XFFFC4A56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4A5A,	"data_len",	0);
	create_insn	(x=0XFFFC4A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4A9C,	"data_addr",	0);
	set_cmt	(0XFFFC4AA2,	"out",	0);
	set_cmt	(0XFFFC4AA4,	"data_len",	0);
	set_cmt	(0XFFFC4AAE,	"data_addr",	0);
	set_cmt	(0XFFFC4AB4,	"data_addr",	0);
	create_insn	(x=0XFFFC4ABC);
	op_plain_offset	(x,	1,	0X202000);
	op_plain_offset	(x,	129,	0X202000);
	create_insn	(x=0XFFFC4AC4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC4AC8);
	op_hex		(x,	1);
	set_cmt	(0XFFFC4AD2,	"data_addr",	0);
	set_cmt	(0XFFFC4AD4,	"out",	0);
	set_cmt	(0XFFFC4AD6,	"data_len",	0);
	set_cmt	(0XFFFC4AE4,	"a1",	0);
	set_cmt	(0XFFFC4AEA,	"a2",	0);
	set_cmt	(0XFFFC4AEC,	"a4",	0);
	create_insn	(0XFFFC4B0E);
	create_insn	(0XFFFC4B1C);
	create_insn	(x=0XFFFC4B20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4B32);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC4B4A);
	create_insn	(0XFFFC4B60);
	create_insn	(0XFFFC4B6E);
	create_insn	(0XFFFC4B7C);
	create_insn	(0XFFFC4B8C);
	create_insn	(0XFFFC4B9E);
	create_insn	(0XFFFC4BB0);
	create_insn	(0XFFFC4BC2);
	create_insn	(0XFFFC4BD4);
	create_insn	(0XFFFC4BE6);
	create_insn	(0XFFFC4BF8);
	make_array	(0XFFFC4C0A,	0X2);
	create_insn	(0XFFFC4C0C);
	create_insn	(x=0XFFFC4C30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4C50,	"a2",	0);
	set_cmt	(0XFFFC4C52,	"a1",	0);
	create_insn	(x=0XFFFC4C52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4C56,	"a3",	0);
	set_cmt	(0XFFFC4C58,	"a4",	0);
	create_insn	(x=0XFFFC4C58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4C62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4C96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC4CAC);
	set_cmt	(0XFFFC4CB4,	"a1",	0);
	set_cmt	(0XFFFC4CD8,	"data_addr",	0);
	set_cmt	(0XFFFC4CDA,	"data_addr",	0);
	set_cmt	(0XFFFC4CDC,	"out",	0);
	create_insn	(x=0XFFFC4CDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4CE0,	"data_len",	0);
	set_cmt	(0XFFFC4CEC,	"out",	0);
	create_insn	(x=0XFFFC4CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4CF2);
	op_plain_offset	(x,	1,	0X9000000);
	op_plain_offset	(x,	129,	0X9000000);
	create_insn	(x=0XFFFC4CF8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC4CFC);
	op_hex		(x,	1);
	set_cmt	(0XFFFC4D10,	"data_addr",	0);
	set_cmt	(0XFFFC4D12,	"data_addr",	0);
	set_cmt	(0XFFFC4D14,	"data_len",	0);
	create_insn	(0XFFFC4D2C);
	create_insn	(0XFFFC4D3A);
	create_insn	(0XFFFC4D52);
	set_cmt	(0XFFFC4D56,	"len",	0);
	set_cmt	(0XFFFC4D5E,	"out",	0);
	create_insn	(x=0XFFFC4D5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4D66);
	op_plain_offset	(x,	1,	0X402000);
	op_plain_offset	(x,	129,	0X402000);
	set_cmt	(0XFFFC4D6C,	"in",	0);
	create_insn	(0XFFFC4D76);
	create_insn	(0XFFFC4D84);
	create_insn	(0XFFFC4D92);
	create_insn	(0XFFFC4DA0);
	create_insn	(0XFFFC4DAE);
	create_insn	(x=0XFFFC4DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4DDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4DEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4DF4);
	op_chr		(x,	1);
	create_insn	(x=0XFFFC4DFC);
	op_chr		(x,	1);
	create_insn	(x=0XFFFC4E16);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4E20,	"int",	0);
	set_cmt	(0XFFFC4E22,	"unsigned int",	0);
	set_cmt	(0XFFFC4E24,	"void *",	0);
	create_insn	(x=0XFFFC4E24);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4E2A,	"_DWORD",	0);
	set_cmt	(0XFFFC4E30,	"_DWORD",	0);
	create_insn	(x=0XFFFC4E30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4E32,	"void *",	0);
	create_insn	(x=0XFFFC4E32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4E3A,	"_DWORD",	0);
	create_insn	(x=0XFFFC4E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4E40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4E5A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4E60,	"_DWORD",	0);
	create_insn	(x=0XFFFC4E6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4E74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4E7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC4E8E,	"int",	0);
	set_cmt	(0XFFFC4E90,	"unsigned int",	0);
	set_cmt	(0XFFFC4E92,	"void *",	0);
	create_insn	(x=0XFFFC4E92);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4E98,	"_DWORD",	0);
	set_cmt	(0XFFFC4E9E,	"_DWORD",	0);
	create_insn	(x=0XFFFC4E9E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4EAA,	"_DWORD",	0);
	create_insn	(x=0XFFFC4EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4EB4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4EC0,	"char *",	0);
	create_insn	(x=0XFFFC4EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4ED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4EE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4EF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC4F04);
	create_insn	(x=0XFFFC4F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4F1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4F24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4F2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4F3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC4F46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC4F9C);
	create_insn	(0XFFFC4FB0);
	create_insn	(x=0XFFFC4FD2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC4FDE,	"_DWORD",	0);
	create_insn	(x=0XFFFC4FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC4FF2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC5006);
	create_insn	(0XFFFC502C);
	create_insn	(x=0XFFFC5034);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5046);
	make_array	(0XFFFC504E,	0X2);
	create_insn	(0XFFFC5050);
	set_name	(0XFFFC5050,	"node_cb");
	create_insn	(0XFFFC5054);
	create_insn	(x=0XFFFC5056);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC5062,	0X2);
	create_insn	(x=0XFFFC5064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5076);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5078,	"_DWORD",	0);
	create_insn	(x=0XFFFC507A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC507E,	"char *",	0);
	create_insn	(0XFFFC508E);
	set_cmt	(0XFFFC5092,	"_DWORD",	0);
	make_array	(0XFFFC50BE,	0X2);
	create_insn	(0XFFFC50C0);
	set_name	(0XFFFC50C0,	"prop_cb");
	set_cmt	(0XFFFC50D0,	"_DWORD",	0);
	create_insn	(0XFFFC50E2);
	set_cmt	(0XFFFC5104,	"_DWORD",	0);
	create_insn	(x=0XFFFC512E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5130);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5132);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5134);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5136);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC513A,	"_DWORD",	0);
	create_insn	(x=0XFFFC513A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC513C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC513E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC515C,	"_DWORD",	0);
	set_cmt	(0XFFFC516E,	"unsigned int",	0);
	set_cmt	(0XFFFC5170,	"int",	0);
	set_cmt	(0XFFFC5172,	"void *",	0);
	create_insn	(x=0XFFFC5172);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5174);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC517C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC517E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC518C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC5194,	"_DWORD",	0);
	create_insn	(x=0XFFFC519A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC519E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC51A0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC51A4,	"_DWORD",	0);
	create_insn	(x=0XFFFC51A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC51B0,	"_DWORD",	0);
	create_insn	(x=0XFFFC51C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5242);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5250);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC525E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC52B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC52BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC52CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC52D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC52E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC52F4);
	set_name	(0XFFFC52F4,	"dtb_proc");
	set_cmt	(0XFFFC5306,	"len",	0);
	set_cmt	(0XFFFC530C,	"dt",	0);
	create_insn	(x=0XFFFC530C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC530E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5310,	"data",	0);
	set_cmt	(0XFFFC5316,	"cookie",	0);
	set_cmt	(0XFFFC532E,	"dtree",	0);
	create_insn	(x=0XFFFC532E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5352);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5364);
	set_name	(0XFFFC5364,	"req_complete");
	create_insn	(x=0XFFFC5366);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC536E,	"void *",	0);
	create_insn	(x=0XFFFC536E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5376,	"_DWORD",	0);
	make_array	(0XFFFC537E,	0X2);
	create_insn	(0XFFFC5380);
	set_name	(0XFFFC5380,	"usb_write");
	create_insn	(x=0XFFFC5390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC53A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC53A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC53AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC53B4,	"req",	0);
	create_insn	(x=0XFFFC53B4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC53B6,	"ept",	0);
	create_insn	(x=0XFFFC53B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC53BA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC53C8,	"_DWORD",	0);
	create_insn	(x=0XFFFC53D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC53E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC53EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC540E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC541C);
	set_cmt	(0XFFFC542C,	"void *",	0);
	create_insn	(x=0XFFFC542C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC542E,	"_DWORD",	0);
	set_cmt	(0XFFFC5434,	"_DWORD",	0);
	create_insn	(0XFFFC5440);
	set_cmt	(0XFFFC5450,	"void *",	0);
	create_insn	(x=0XFFFC5450);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5452,	"_DWORD",	0);
	set_cmt	(0XFFFC5458,	"_DWORD",	0);
	create_insn	(0XFFFC5464);
	set_name	(0XFFFC5464,	"usb_read");
	create_insn	(x=0XFFFC546C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC547E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5486);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC54B0,	"req",	0);
	create_insn	(x=0XFFFC54B0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC54B2,	"ept",	0);
	create_insn	(x=0XFFFC54B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC54B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC54BC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC54CA,	"_DWORD",	0);
	create_insn	(x=0XFFFC54DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC54F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5512);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC553E);
	create_insn	(0XFFFC5542);
	set_cmt	(0XFFFC5552,	"void *",	0);
	create_insn	(x=0XFFFC5552);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5554,	"_DWORD",	0);
	set_cmt	(0XFFFC555A,	"_DWORD",	0);
	create_insn	(0XFFFC5564);
	set_cmt	(0XFFFC5574,	"void *",	0);
	create_insn	(x=0XFFFC5574);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5576,	"_DWORD",	0);
	set_cmt	(0XFFFC557C,	"_DWORD",	0);
	make_array	(0XFFFC5586,	0X2);
	create_insn	(0XFFFC5588);
	create_insn	(0XFFFC558E);
	set_cmt	(0XFFFC5592,	"_DWORD",	0);
	create_insn	(0XFFFC559C);
	set_name	(0XFFFC559C,	"fastboot_ack");
	create_insn	(x=0XFFFC55A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC55B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC55BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC55BC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC55EC);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	make_array	(0XFFFC55F6,	0X2);
	create_insn	(0XFFFC55F8);
	set_name	(0XFFFC55F8,	"fastboot_handler");
	create_insn	(x=0XFFFC561E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5626,	"_DWORD",	0);
	create_insn	(x=0XFFFC5644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC564C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5652,	"unsigned int",	0);
	set_cmt	(0XFFFC5654,	"int",	0);
	set_cmt	(0XFFFC5656,	"void *",	0);
	create_insn	(x=0XFFFC5664);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	set_cmt	(0XFFFC5686,	"_DWORD",	0);
	set_cmt	(0XFFFC5688,	"void *",	0);
	set_cmt	(0XFFFC568A,	"_DWORD",	0);
	create_insn	(x=0XFFFC56C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC56C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC56D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC56FE);
	create_insn	(x=0XFFFC570A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5716,	"_DWORD",	0);
	create_insn	(x=0XFFFC5716);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5724,	"void *",	0);
	create_insn	(x=0XFFFC5724);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC572E,	"_DWORD",	0);
	make_array	(0XFFFC573A,	0X2);
	create_insn	(0XFFFC573C);
	set_name	(0XFFFC573C,	"cmd_download");
	create_insn	(x=0XFFFC5746);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC574C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC5758,	"switch 55 cases ",	0);
	set_cmt	(0XFFFC5760,	"switch jump",	0);
	set_cmt	(0XFFFC5764,	"jump table for switch statement",	0);
	create_byte	(0XFFFC5764);
	set_name	(0XFFFC5764,	"jpt_FFFC5760");
	create_byte	(0XFFFC5765);
	create_byte	(0XFFFC5766);
	create_byte	(0XFFFC5767);
	create_byte	(0XFFFC5768);
	create_byte	(0XFFFC5769);
	create_byte	(0XFFFC576A);
	create_byte	(0XFFFC576B);
	create_byte	(0XFFFC576C);
	create_byte	(0XFFFC576D);
	create_byte	(0XFFFC576E);
	create_byte	(0XFFFC576F);
	create_byte	(0XFFFC5770);
	create_byte	(0XFFFC5771);
	create_byte	(0XFFFC5772);
	create_byte	(0XFFFC5773);
	create_byte	(0XFFFC5774);
	create_byte	(0XFFFC5775);
	create_byte	(0XFFFC5776);
	create_byte	(0XFFFC5777);
	create_byte	(0XFFFC5778);
	create_byte	(0XFFFC5779);
	create_byte	(0XFFFC577A);
	create_byte	(0XFFFC577B);
	create_byte	(0XFFFC577C);
	create_byte	(0XFFFC577D);
	create_byte	(0XFFFC577E);
	create_byte	(0XFFFC577F);
	create_byte	(0XFFFC5780);
	create_byte	(0XFFFC5781);
	create_byte	(0XFFFC5782);
	create_byte	(0XFFFC5783);
	create_byte	(0XFFFC5784);
	create_byte	(0XFFFC5785);
	create_byte	(0XFFFC5786);
	create_byte	(0XFFFC5787);
	create_byte	(0XFFFC5788);
	create_byte	(0XFFFC5789);
	create_byte	(0XFFFC578A);
	create_byte	(0XFFFC578B);
	create_byte	(0XFFFC578C);
	create_byte	(0XFFFC578D);
	create_byte	(0XFFFC578E);
	create_byte	(0XFFFC578F);
	create_byte	(0XFFFC5790);
	create_byte	(0XFFFC5791);
	create_byte	(0XFFFC5792);
	create_byte	(0XFFFC5793);
	create_byte	(0XFFFC5794);
	create_byte	(0XFFFC5795);
	create_byte	(0XFFFC5796);
	create_byte	(0XFFFC5797);
	create_byte	(0XFFFC5798);
	create_byte	(0XFFFC5799);
	create_byte	(0XFFFC579A);
	set_cmt	(0XFFFC579C,	"jumptable FFFC5760 cases 97-102",	1);
	create_insn	(0XFFFC579C);
	set_cmt	(0XFFFC57AA,	"jumptable FFFC5760 default case",	1);
	set_name	(0XFFFC57AA,	"def_FFFC5760");
	create_insn	(x=0XFFFC57C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC57D8,	"jumptable FFFC5760 cases 65-70",	1);
	create_insn	(0XFFFC57D8);
	set_cmt	(0XFFFC57E0,	"jumptable FFFC5760 cases 48-57",	1);
	create_insn	(0XFFFC57E0);
	create_insn	(0XFFFC57E6);
	create_insn	(x=0XFFFC5800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5812);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5830);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC5854);
	create_insn	(0XFFFC586A);
	create_insn	(x=0XFFFC586C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5890);
	create_insn	(x=0XFFFC5896);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC589E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC58A2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC58C0);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC58DE);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC58FE);
	make_array	(0XFFFC591E,	0X2);
	create_insn	(0XFFFC5920);
	set_name	(0XFFFC5920,	"fastboot_register");
	create_insn	(x=0XFFFC593A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC594C);
	set_name	(0XFFFC594C,	"fastboot_publish");
	create_insn	(x=0XFFFC595C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC596E,	0X2);
	create_insn	(0XFFFC5970);
	set_name	(0XFFFC5970,	"fastboot_info");
	create_insn	(x=0XFFFC5972);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5980);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5984);
	op_hex		(x,	1);
	create_insn	(0XFFFC5990);
	create_insn	(x=0XFFFC59B8);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC59C0);
	set_name	(0XFFFC59C0,	"cmd_getvar");
	set_cmt	(0XFFFC59CA,	"unsigned int",	0);
	create_insn	(x=0XFFFC59CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC59D4,	"char *",	0);
	create_insn	(x=0XFFFC59DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC59E8,	"char *",	0);
	set_cmt	(0XFFFC59EA,	"char *",	0);
	create_insn	(x=0XFFFC59F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5A0A);
	set_cmt	(0XFFFC5A38,	"void *",	0);
	set_cmt	(0XFFFC5A3A,	"int",	0);
	set_cmt	(0XFFFC5A3C,	"unsigned int",	0);
	set_cmt	(0XFFFC5A46,	"reason",	0);
	create_insn	(0XFFFC5A46);
	create_insn	(x=0XFFFC5A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5A56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5A64);
	create_insn	(0XFFFC5A7C);
	set_name	(0XFFFC5A7C,	"fastboot_fail");
	set_cmt	(0XFFFC5A80,	"reason",	0);
	create_insn	(x=0XFFFC5A8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC5A9A,	0X2);
	create_insn	(0XFFFC5A9C);
	set_name	(0XFFFC5A9C,	"fastboot_okay");
	set_cmt	(0XFFFC5AA0,	"reason",	0);
	create_insn	(x=0XFFFC5AAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC5ABA,	0X2);
	create_insn	(0XFFFC5ABC);
	set_name	(0XFFFC5ABC,	"fastboot_init");
	create_insn	(x=0XFFFC5AD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5B12);
	op_plain_offset	(x,	1,	0XFFFE0E38);
	op_plain_offset	(x,	129,	0XFFFE0E38);
	create_insn	(x=0XFFFC5B18);
	op_plain_offset	(x,	1,	0XFFFE0E38);
	op_plain_offset	(x,	129,	0XFFFE0E38);
	create_insn	(x=0XFFFC5B20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5B2E);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5B52);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B56);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B5A);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B60);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B66);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B6A);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B6C);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5B76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5B96);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5BA6);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5BA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5BCC);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5BCE);
	op_plain_offset	(x,	1,	0XFFFE1B24);
	op_plain_offset	(x,	129,	0XFFFE1B24);
	create_insn	(x=0XFFFC5BE0);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5BE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5C4A,	"a5",	0);
	create_insn	(x=0XFFFC5C4A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC5C54,	"a3",	0);
	set_cmt	(0XFFFC5C5A,	"a4",	0);
	create_insn	(x=0XFFFC5C66);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC5C72);
	create_insn	(x=0XFFFC5C76);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5C7C);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(x=0XFFFC5C80);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC5C8C);
	make_array	(0XFFFC5C92,	0X2);
	create_insn	(0XFFFC5C94);
	create_insn	(x=0XFFFC5C96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5C9E);
	op_plain_offset	(x,	1,	0XFFFE4FD4);
	op_plain_offset	(x,	129,	0XFFFE4FD4);
	create_insn	(0XFFFC5CA4);
	make_array	(0XFFFC5CBE,	0X2);
	set_cmt	(0XFFFC5CC0,	"info",	0);
	create_insn	(x=0XFFFC5CC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC5CD6,	0X2);
	set_cmt	(0XFFFC5CD8,	"info",	0);
	create_insn	(x=0XFFFC5CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC5CEE,	0X2);
	create_insn	(0XFFFC5CF0);
	make_array	(0XFFFC5D06,	0X2);
	create_insn	(0XFFFC5D08);
	create_insn	(x=0XFFFC5D3A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC5D40);
	op_hex		(x,	1);
	set_cmt	(0XFFFC5D5C,	"info",	0);
	create_insn	(x=0XFFFC5D5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC5D8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5D9C);
	create_insn	(0XFFFC5DA0);
	set_name	(0XFFFC5DA0,	"imah_check_board_sec_id_match");
	create_insn	(x=0XFFFC5DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC5DBE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC5DC2);
	set_cmt	(0XFFFC5DC6,	"char *",	0);
	set_cmt	(0XFFFC5DCC,	"unsigned int",	0);
	create_insn	(x=0XFFFC5DDA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC5DDE);
	set_cmt	(0XFFFC5DE2,	"char *",	0);
	set_cmt	(0XFFFC5DE8,	"unsigned int",	0);
	create_insn	(x=0XFFFC5DF6);
	op_stkvar	(x,	1);
	make_array	(0XFFFC5DFA,	0X2);
	create_insn	(0XFFFC5DFC);
	set_name	(0XFFFC5DFC,	"cmd_flash_mmc_img");
	set_cmt	(0XFFFC5E16,	"_DWORD",	0);
	set_cmt	(0XFFFC5E24,	"char *",	0);
	create_insn	(x=0XFFFC5E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5E3A,	"char *",	0);
	set_cmt	(0XFFFC5E4E,	"char *",	0);
	set_cmt	(0XFFFC5E62,	"char *",	0);
	set_cmt	(0XFFFC5E76,	"char *",	0);
	set_cmt	(0XFFFC5E8A,	"char *",	0);
	set_cmt	(0XFFFC5E9E,	"char *",	0);
	set_cmt	(0XFFFC5EB4,	"char *",	0);
	set_cmt	(0XFFFC5EC6,	"a1",	0);
	create_insn	(x=0XFFFC5EEA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC5EEE);
	op_hex		(x,	1);
	set_cmt	(0XFFFC5F48,	"reason",	0);
	create_insn	(x=0XFFFC5F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC5F66,	"size",	0);
	create_insn	(0XFFFC5F66);
	set_cmt	(0XFFFC5F68,	"partition",	0);
	set_cmt	(0XFFFC5F72,	"info",	0);
	create_insn	(x=0XFFFC5F72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5F84);
	create_insn	(0XFFFC5F9C);
	set_cmt	(0XFFFC5FB0,	"data_addr",	0);
	set_cmt	(0XFFFC5FB4,	"data_addr",	0);
	set_cmt	(0XFFFC5FB6,	"data_len",	0);
	set_cmt	(0XFFFC5FB8,	"in",	0);
	create_insn	(0XFFFC5FC6);
	create_insn	(0XFFFC5FDE);
	set_cmt	(0XFFFC5FE2,	"reason",	0);
	create_insn	(x=0XFFFC5FE2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC5FF0);
	create_insn	(x=0XFFFC6002);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6004);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6006);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6008);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC600E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6020,	"reason",	0);
	create_insn	(x=0XFFFC6020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC6034);
	create_insn	(0XFFFC6038);
	create_insn	(0XFFFC6042);
	set_cmt	(0XFFFC604C,	"reason",	0);
	create_insn	(x=0XFFFC604C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6060,	"reason",	0);
	create_insn	(x=0XFFFC6060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC606E,	"reason",	0);
	create_insn	(x=0XFFFC606E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC607C,	"reason",	0);
	create_insn	(x=0XFFFC607C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC608A,	"reason",	0);
	create_insn	(x=0XFFFC608A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6098,	"data_addr",	0);
	create_insn	(0XFFFC6098);
	set_cmt	(0XFFFC609A,	"data_addr",	0);
	set_cmt	(0XFFFC609C,	"data_len",	0);
	set_cmt	(0XFFFC609E,	"in",	0);
	set_cmt	(0XFFFC60AA,	"reason",	0);
	create_insn	(x=0XFFFC60AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC60B8,	"reason",	0);
	create_insn	(x=0XFFFC60B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC60C6,	"reason",	0);
	create_insn	(x=0XFFFC60C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC60D4);
	set_name	(0XFFFC60D4,	"cmd_flash_mmc_sparse_img");
	create_insn	(x=0XFFFC6108);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC610C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC615A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6162);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6168);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6178);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC618E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC61BA,	"switch 4 cases ",	0);
	set_cmt	(0XFFFC61C6,	"switch jump",	0);
	set_cmt	(0XFFFC61CA,	"jump table for switch statement",	0);
	create_byte	(0XFFFC61CA);
	set_name	(0XFFFC61CA,	"jpt_FFFC61C6");
	create_byte	(0XFFFC61CB);
	create_byte	(0XFFFC61CC);
	create_byte	(0XFFFC61CD);
	set_cmt	(0XFFFC61CE,	"jumptable FFFC61C6 case 51908",	1);
	create_insn	(0XFFFC61CE);
	create_insn	(x=0XFFFC61DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC61E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC61E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC61EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC61F2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC620A,	"reason",	0);
	create_insn	(x=0XFFFC620A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC621C,	"jumptable FFFC61C6 case 51907",	1);
	create_insn	(0XFFFC621C);
	create_insn	(x=0XFFFC6226);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC622A,	"jumptable FFFC61C6 case 51906",	1);
	create_insn	(0XFFFC622A);
	create_insn	(x=0XFFFC623A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6242);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC624A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC624C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC625A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6294);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6298);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC629E);
	set_cmt	(0XFFFC62A2,	"data_len",	0);
	set_cmt	(0XFFFC62CC,	"in",	0);
	set_cmt	(0XFFFC62D2,	"data_addr",	0);
	set_cmt	(0XFFFC62E4,	"reason",	0);
	create_insn	(x=0XFFFC62E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC62F0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC62FC,	"jumptable FFFC61C6 case 51905",	1);
	create_insn	(0XFFFC62FC);
	set_cmt	(0XFFFC6308,	"in",	0);
	create_insn	(x=0XFFFC6308);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC630A,	"data_len",	0);
	set_cmt	(0XFFFC630C,	"data_addr",	0);
	create_insn	(x=0XFFFC6322);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6324);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC632C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6330,	"jumptable FFFC61C6 default case",	1);
	create_insn	(0XFFFC6330);
	set_name	(0XFFFC6330,	"def_FFFC61C6");
	set_cmt	(0XFFFC633C,	"reason",	0);
	create_insn	(x=0XFFFC633C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC634E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6350);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6356);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC635C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC6360);
	create_insn	(0XFFFC636A);
	create_insn	(0XFFFC6374);
	create_insn	(x=0XFFFC6376);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6382,	"reason",	0);
	create_insn	(x=0XFFFC6382);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC638E,	"info",	0);
	create_insn	(x=0XFFFC638E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC63A0);
	create_insn	(0XFFFC63AA);
	create_insn	(0XFFFC63AE);
	create_insn	(0XFFFC63B8);
	create_insn	(0XFFFC63C2);
	create_insn	(0XFFFC63CC);
	create_insn	(0XFFFC63D6);
	create_insn	(0XFFFC63E0);
	create_insn	(0XFFFC63EA);
	create_insn	(0XFFFC63F4);
	make_array	(0XFFFC63FE,	0X2);
	create_insn	(0XFFFC6400);
	set_name	(0XFFFC6400,	"cmd_flash_mmc");
	create_insn	(x=0XFFFC6410);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6418);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC6420);
	set_name	(0XFFFC6420,	"j_cmd_flash_mmc");
	create_insn	(0XFFFC6424);
	make_array	(0XFFFC649A,	0X2);
	create_insn	(0XFFFC649C);
	set_name	(0XFFFC649C,	"get_board_security_id");
	create_insn	(x=0XFFFC64AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC64AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC64B8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC64CC);
	create_insn	(0XFFFC64DC);
	set_name	(0XFFFC64DC,	"board_is_not_242");
	make_array	(0XFFFC64EA,	0X2);
	create_insn	(0XFFFC64EC);
	set_name	(0XFFFC64EC,	"boot_verify_init");
	create_insn	(x=0XFFFC64FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC64FC);
	op_plain_offset	(x,	1,	0XFFFDC0A4);
	op_plain_offset	(x,	129,	0XFFFDC0A4);
	create_insn	(x=0XFFFC6500);
	op_plain_offset	(x,	1,	0XFFFDC0A4);
	op_plain_offset	(x,	129,	0XFFFDC0A4);
	create_insn	(x=0XFFFC6502);
	op_plain_offset	(x,	1,	0XFFFDC0A4);
	op_plain_offset	(x,	129,	0XFFFDC0A4);
	create_insn	(x=0XFFFC650E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6524);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6532);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC653E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6540,	"switch 8 cases ",	0);
	set_cmt	(0XFFFC6544,	"switch jump",	0);
	set_cmt	(0XFFFC6548,	"jump table for switch statement",	0);
	create_byte	(0XFFFC6548);
	set_name	(0XFFFC6548,	"jpt_FFFC6544");
	create_byte	(0XFFFC6549);
	create_byte	(0XFFFC654A);
	create_byte	(0XFFFC654B);
	create_byte	(0XFFFC654C);
	create_byte	(0XFFFC654D);
	create_byte	(0XFFFC654E);
	create_byte	(0XFFFC654F);
	set_cmt	(0XFFFC6550,	"jumptable FFFC6544 cases 0,1,3,7",	1);
	create_insn	(0XFFFC6550);
	create_insn	(x=0XFFFC655A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC656E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC658A);
	create_insn	(x=0XFFFC658C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC65A8);
	create_insn	(x=0XFFFC65AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC65C2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC65D0);
	set_cmt	(0XFFFC65E2,	"jumptable FFFC6544 case 5",	1);
	create_insn	(0XFFFC65E2);
	create_insn	(x=0XFFFC6600);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC661C);
	set_cmt	(0XFFFC662C,	"jumptable FFFC6544 default case",	1);
	create_insn	(x=0XFFFC662C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFC662C,	"def_FFFC6544");
	create_insn	(0XFFFC663C);
	create_insn	(x=0XFFFC663E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC665C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC666E,	0X2);
	create_insn	(0XFFFC6670);
	create_insn	(x=0XFFFC66A8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66B8,	"void *",	0);
	create_insn	(x=0XFFFC66B8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66BE,	"_DWORD",	0);
	set_cmt	(0XFFFC66D0,	"tbie_len",	0);
	set_cmt	(0XFFFC66D6,	"rrak",	0);
	create_insn	(x=0XFFFC66D6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66D8,	"rrak_len",	0);
	set_cmt	(0XFFFC66E0,	"a6",	0);
	create_insn	(x=0XFFFC66E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66E6,	"flags",	0);
	create_insn	(x=0XFFFC66E6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66E8,	"dt_ptr",	0);
	set_cmt	(0XFFFC66EA,	"a7",	0);
	create_insn	(x=0XFFFC66EA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66EC,	"img_size",	0);
	create_insn	(x=0XFFFC66EE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC66F0,	"expect_type",	0);
	set_cmt	(0XFFFC66F2,	"expect_name",	0);
	set_cmt	(0XFFFC6700,	"a6",	0);
	create_insn	(x=0XFFFC6700);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6706,	"a7",	0);
	create_insn	(x=0XFFFC6706);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6708,	"expect_type",	0);
	create_insn	(x=0XFFFC670A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC670C,	"expect_name",	0);
	set_cmt	(0XFFFC670E,	"flags",	0);
	create_insn	(x=0XFFFC670E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC671C);
	create_insn	(x=0XFFFC6728);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6736,	"void *",	0);
	create_insn	(x=0XFFFC6736);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC673C,	"_DWORD",	0);
	set_cmt	(0XFFFC674C,	"tbie_len",	0);
	set_cmt	(0XFFFC6752,	"rrak",	0);
	create_insn	(x=0XFFFC6752);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6754,	"rrak_len",	0);
	create_insn	(x=0XFFFC675C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6764);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC6776);
	make_array	(0XFFFC678A,	0X2);
	create_insn	(0XFFFC678C);
	create_insn	(0XFFFC6796);
	make_array	(0XFFFC679E,	0X2);
	create_insn	(0XFFFC67A0);
	create_insn	(0XFFFC67AA);
	make_array	(0XFFFC67B2,	0X2);
	create_insn	(0XFFFC67B4);
	set_name	(0XFFFC67B4,	"dwc_print_current_state");
	create_insn	(x=0XFFFC67C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC67D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC67E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC67EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC67FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC681A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6836);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6886);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC68AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC68BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC68CA,	0X2);
	create_insn	(0XFFFC68CC);
	create_insn	(x=0XFFFC690A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC690E);
	set_cmt	(0XFFFC691E,	"void *",	0);
	create_insn	(x=0XFFFC691E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6920,	"_DWORD",	0);
	set_cmt	(0XFFFC6928,	"_DWORD",	0);
	create_insn	(0XFFFC6932);
	set_cmt	(0XFFFC6942,	"void *",	0);
	create_insn	(x=0XFFFC6942);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6944,	"_DWORD",	0);
	set_cmt	(0XFFFC694C,	"_DWORD",	0);
	make_array	(0XFFFC6956,	0X2);
	create_insn	(0XFFFC6958);
	create_insn	(x=0XFFFC695C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC696C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC69A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC69B2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC69BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC69CE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC69DA);
	create_insn	(x=0XFFFC69DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC69E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC6A24);
	create_insn	(0XFFFC6A64);
	set_cmt	(0XFFFC6A74,	"void *",	0);
	create_insn	(x=0XFFFC6A74);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6A76,	"_DWORD",	0);
	set_cmt	(0XFFFC6A7C,	"_DWORD",	0);
	create_insn	(0XFFFC6A88);
	set_name	(0XFFFC6A88,	"dwc_request_queue");
	create_insn	(x=0XFFFC6A90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6A92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6A94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6A96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6B12);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC6B2A);
	create_insn	(x=0XFFFC6B3A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6B60);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6B6A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6B72);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6B76);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6B7C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC6B98,	"unsigned int",	0);
	set_cmt	(0XFFFC6B9A,	"void *",	0);
	set_cmt	(0XFFFC6B9E,	"int",	0);
	create_insn	(0XFFFC6BC6);
	create_insn	(0XFFFC6BCE);
	create_insn	(x=0XFFFC6BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6BE8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6BEC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6BF0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6C28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6C2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6C30);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC6C52);
	set_cmt	(0XFFFC6C64,	"int",	0);
	set_cmt	(0XFFFC6C66,	"unsigned int",	0);
	set_cmt	(0XFFFC6C6C,	"void *",	0);
	set_cmt	(0XFFFC6C72,	"int",	0);
	set_cmt	(0XFFFC6C74,	"unsigned int",	0);
	set_cmt	(0XFFFC6C78,	"void *",	0);
	create_insn	(x=0XFFFC6C8C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6C90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6C92);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6CA6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6CAC);
	op_hex		(x,	1);
	create_insn	(0XFFFC6CCA);
	set_cmt	(0XFFFC6CD2,	"int",	0);
	create_insn	(0XFFFC6CD2);
	set_cmt	(0XFFFC6CD4,	"unsigned int",	0);
	set_cmt	(0XFFFC6CD6,	"void *",	0);
	create_insn	(x=0XFFFC6CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6CE6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6CF2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6CFA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC6D04);
	op_hex		(x,	1);
	create_insn	(0XFFFC6D24);
	create_insn	(0XFFFC6D28);
	create_insn	(0XFFFC6D2E);
	create_insn	(x=0XFFFC6D46);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6D4C,	"_DWORD",	0);
	create_insn	(x=0XFFFC6D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6D4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6D5A,	"void *",	0);
	create_insn	(x=0XFFFC6D5A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6D64,	"_DWORD",	0);
	set_cmt	(0XFFFC6D70,	"_DWORD",	0);
	create_insn	(x=0XFFFC6D70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6D72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6D7E,	"void *",	0);
	create_insn	(x=0XFFFC6D7E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6D88,	"_DWORD",	0);
	create_insn	(0XFFFC6D94);
	set_cmt	(0XFFFC6DA4,	"void *",	0);
	create_insn	(x=0XFFFC6DA4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6DA6,	"_DWORD",	0);
	set_cmt	(0XFFFC6DAC,	"_DWORD",	0);
	set_cmt	(0XFFFC6DB8,	"_DWORD",	0);
	create_insn	(x=0XFFFC6DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6DBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6DC6,	"void *",	0);
	create_insn	(x=0XFFFC6DC6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6DD0,	"_DWORD",	0);
	create_insn	(x=0XFFFC6DDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6DE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6DFA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E06,	"_DWORD",	0);
	create_insn	(x=0XFFFC6E06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6E14,	"void *",	0);
	create_insn	(x=0XFFFC6E14);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E1E,	"_DWORD",	0);
	set_cmt	(0XFFFC6E2A,	"_DWORD",	0);
	create_insn	(x=0XFFFC6E2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC6E38,	"void *",	0);
	create_insn	(x=0XFFFC6E38);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E42,	"_DWORD",	0);
	make_array	(0XFFFC6E4E,	0X2);
	create_insn	(0XFFFC6E50);
	create_insn	(x=0XFFFC6E8A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E8C,	"dev",	0);
	create_insn	(x=0XFFFC6E8E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E90,	"ep_phy_num",	0);
	create_insn	(x=0XFFFC6E92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6E96);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC6E98,	"req",	0);
	create_insn	(x=0XFFFC6E98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6E9A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC6EA8);
	create_insn	(x=0XFFFC6EAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC6EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC6EEC);
	op_plain_offset	(x,	1,	0XFFFE5174);
	op_plain_offset	(x,	129,	0XFFFE5174);
	create_insn	(x=0XFFFC6F28);
	op_plain_offset	(x,	1,	0XFFFE5174);
	op_plain_offset	(x,	129,	0XFFFE5174);
	create_insn	(x=0XFFFC6F2E);
	op_plain_offset	(x,	1,	0XFFFE5174);
	op_plain_offset	(x,	129,	0XFFFE5174);
	create_insn	(x=0XFFFC6F36);
	op_plain_offset	(x,	1,	0XFFFE5174);
	op_plain_offset	(x,	129,	0XFFFE5174);
	create_insn	(x=0XFFFC6F3C);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F44);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F4C);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F54);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F88);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F8E);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F96);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6F9C);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6FA2);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6FAA);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6FB2);
	op_plain_offset	(x,	1,	0XFFFE5030);
	op_plain_offset	(x,	129,	0XFFFE5030);
	create_insn	(x=0XFFFC6FF4);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC6FFC);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC7002);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC7008);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC7010);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC7018);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC7020);
	op_plain_offset	(x,	1,	0XFFFE5264);
	op_plain_offset	(x,	129,	0XFFFE5264);
	create_insn	(x=0XFFFC705A);
	op_plain_offset	(x,	1,	0XFFFE5124);
	op_plain_offset	(x,	129,	0XFFFE5124);
	create_insn	(x=0XFFFC7060);
	op_plain_offset	(x,	1,	0XFFFE5124);
	op_plain_offset	(x,	129,	0XFFFE5124);
	create_insn	(x=0XFFFC7068);
	op_plain_offset	(x,	1,	0XFFFE5124);
	op_plain_offset	(x,	129,	0XFFFE5124);
	create_insn	(x=0XFFFC7074);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC707C);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC7084);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC708C);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC7094);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC709A);
	op_plain_offset	(x,	1,	0XFFFE5084);
	op_plain_offset	(x,	129,	0XFFFE5084);
	create_insn	(x=0XFFFC709C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC70B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70C4);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC70CE);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC70D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70E4);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC70E8);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC70EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70F0);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC70F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC70F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7124);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC712A);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC7132);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC713A);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC7142);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC714A);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC7150);
	op_plain_offset	(x,	1,	0XFFFE50D4);
	op_plain_offset	(x,	129,	0XFFFE50D4);
	create_insn	(x=0XFFFC715E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7164);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC71BC);
	set_cmt	(0XFFFC71D4,	"int",	0);
	set_cmt	(0XFFFC71D6,	"unsigned int",	0);
	create_insn	(x=0XFFFC7236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC7252);
	set_cmt	(0XFFFC7262,	"void *",	0);
	create_insn	(x=0XFFFC7262);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7264,	"_DWORD",	0);
	set_cmt	(0XFFFC726A,	"_DWORD",	0);
	create_insn	(0XFFFC7274);
	set_cmt	(0XFFFC7284,	"void *",	0);
	create_insn	(x=0XFFFC7284);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7286,	"_DWORD",	0);
	set_cmt	(0XFFFC728C,	"_DWORD",	0);
	make_array	(0XFFFC7296,	0X2);
	create_insn	(0XFFFC7298);
	create_insn	(x=0XFFFC72CE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC72D8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC72EC);
	op_hex		(x,	1);
	create_insn	(0XFFFC731C);
	set_cmt	(0XFFFC732C,	"void *",	0);
	create_insn	(x=0XFFFC732C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC732E,	"_DWORD",	0);
	set_cmt	(0XFFFC7334,	"_DWORD",	0);
	create_insn	(0XFFFC7340);
	set_cmt	(0XFFFC7350,	"void *",	0);
	create_insn	(x=0XFFFC7350);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7352,	"_DWORD",	0);
	set_cmt	(0XFFFC7358,	"_DWORD",	0);
	create_insn	(0XFFFC7364);
	set_cmt	(0XFFFC7374,	"void *",	0);
	create_insn	(x=0XFFFC7374);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7376,	"_DWORD",	0);
	set_cmt	(0XFFFC737C,	"_DWORD",	0);
	create_insn	(0XFFFC7388);
	create_insn	(x=0XFFFC7392);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7396);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7398);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC73C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC73D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC740A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7416);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7432,	"void *",	0);
	create_insn	(x=0XFFFC7432);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7434,	"_DWORD",	0);
	set_cmt	(0XFFFC743A,	"_DWORD",	0);
	create_insn	(0XFFFC7446);
	set_cmt	(0XFFFC744A,	"switch 13 cases ",	0);
	set_cmt	(0XFFFC7450,	"switch jump",	0);
	set_cmt	(0XFFFC7454,	"jump table for switch statement",	0);
	create_word	(0XFFFC7454);
	set_name	(0XFFFC7454,	"jpt_FFFC7450");
	create_word	(0XFFFC7456);
	create_word	(0XFFFC7458);
	create_word	(0XFFFC745A);
	create_word	(0XFFFC745C);
	create_word	(0XFFFC745E);
	create_word	(0XFFFC7460);
	create_word	(0XFFFC7462);
	create_word	(0XFFFC7464);
	create_word	(0XFFFC7466);
	create_word	(0XFFFC7468);
	create_word	(0XFFFC746A);
	create_word	(0XFFFC746C);
	set_cmt	(0XFFFC746E,	"jumptable FFFC74D2 case 5",	1);
	create_insn	(0XFFFC746E);
	create_insn	(x=0XFFFC749C);
	op_hex		(x,	1);
	set_cmt	(0XFFFC74B2,	"jumptable FFFC7450 cases 3-7,9-12",	1);
	create_insn	(0XFFFC74BC);
	set_cmt	(0XFFFC74CA,	"switch 7 cases ",	0);
	create_insn	(x=0XFFFC74D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC74D2,	"switch jump",	0);
	make_array	(0XFFFC74D6,	0X2);
	set_cmt	(0XFFFC74D8,	"jump table for switch statement",	0);
	create_dword	(x=0XFFFC74D8);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFC74F4);
	create_insn	(x=0XFFFC7504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC750C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7518);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC752E);
	create_insn	(x=0XFFFC7546);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC754E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC7558);
	create_insn	(x=0XFFFC756A);
	op_hex		(x,	1);
	create_insn	(0XFFFC7596);
	set_cmt	(0XFFFC75A8,	"jumptable FFFC7450 case 2",	1);
	create_insn	(0XFFFC75A8);
	set_cmt	(0XFFFC75AE,	"switch 5 cases ",	0);
	set_cmt	(0XFFFC75B4,	"switch jump",	0);
	set_cmt	(0XFFFC75B8,	"jump table for switch statement",	0);
	create_word	(0XFFFC75B8);
	set_name	(0XFFFC75B8,	"jpt_FFFC75B4");
	create_word	(0XFFFC75BA);
	create_word	(0XFFFC75BC);
	create_word	(0XFFFC75BE);
	create_word	(0XFFFC75C0);
	set_cmt	(0XFFFC75C2,	"jumptable FFFC7450 case 0",	1);
	create_insn	(0XFFFC75C2);
	set_cmt	(0XFFFC75E2,	"jumptable FFFC7450 case 1",	1);
	create_insn	(0XFFFC75E2);
	create_insn	(x=0XFFFC75EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC75F4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7646,	"jumptable FFFC7450 default case",	1);
	create_insn	(0XFFFC7646);
	set_name	(0XFFFC7646,	"def_FFFC7450");
	create_insn	(x=0XFFFC764A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC7686,	"void *",	0);
	create_insn	(x=0XFFFC7686);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7688,	"_DWORD",	0);
	set_cmt	(0XFFFC768E,	"_DWORD",	0);
	set_cmt	(0XFFFC769A,	"jumptable FFFC74D2 case 6",	1);
	create_insn	(0XFFFC769A);
	set_cmt	(0XFFFC76CA,	"jumptable FFFC74D2 case 0",	1);
	create_insn	(0XFFFC76CA);
	create_insn	(x=0XFFFC76F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC76F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC7702,	"jumptable FFFC74D2 case 1",	1);
	create_insn	(0XFFFC7702);
	create_insn	(x=0XFFFC772C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7734);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC773E,	"jumptable FFFC74D2 case 2",	1);
	create_insn	(0XFFFC773E);
	create_insn	(x=0XFFFC7752);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC775A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC7764,	"jumptable FFFC74D2 case 3",	1);
	create_insn	(0XFFFC7764);
	create_insn	(x=0XFFFC7778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC778A,	"jumptable FFFC74D2 case 4",	1);
	create_insn	(0XFFFC778A);
	create_insn	(x=0XFFFC77BA);
	op_hex		(x,	1);
	set_cmt	(0XFFFC77D2,	"void *",	0);
	create_insn	(x=0XFFFC77D2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC77D4,	"_DWORD",	0);
	set_cmt	(0XFFFC77DA,	"_DWORD",	0);
	create_insn	(0XFFFC77E6);
	create_insn	(x=0XFFFC77E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC77EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7802);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7816);
	create_insn	(x=0XFFFC781A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7820);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7824);
	create_insn	(x=0XFFFC7828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC783A);
	set_cmt	(0XFFFC7846,	"jumptable FFFC74D2 default case",	1);
	create_insn	(x=0XFFFC7846);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0XFFFC7852);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC786E,	"void *",	0);
	create_insn	(x=0XFFFC786E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7870,	"_DWORD",	0);
	set_cmt	(0XFFFC7876,	"_DWORD",	0);
	set_cmt	(0XFFFC7882,	"jumptable FFFC75B4 case 0",	1);
	create_insn	(0XFFFC7882);
	set_cmt	(0XFFFC78C0,	"jumptable FFFC75B4 case 4",	1);
	create_insn	(0XFFFC78C0);
	set_cmt	(0XFFFC78C8,	"jumptable FFFC75B4 case 2",	1);
	create_insn	(0XFFFC78C8);
	set_cmt	(0XFFFC78CE,	"jumptable FFFC75B4 cases 1,3",	1);
	create_insn	(0XFFFC78CE);
	create_insn	(0XFFFC78D4);
	create_insn	(x=0XFFFC78E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC78E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC78EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC78F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC78F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7902);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC790C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7918);
	create_insn	(x=0XFFFC792C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7930);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7932,	"ep_phy_num",	0);
	create_insn	(x=0XFFFC7934);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7936,	"dev",	0);
	create_insn	(x=0XFFFC7938);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC793A,	"req",	0);
	create_insn	(x=0XFFFC793A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC793C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC793E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7946);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7952);
	create_insn	(x=0XFFFC796A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC796C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC797A);
	create_insn	(x=0XFFFC798A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7990);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7992,	"ep_phy_num",	0);
	create_insn	(x=0XFFFC7994);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7998);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC799A,	"dev",	0);
	create_insn	(x=0XFFFC799C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC799E,	"req",	0);
	create_insn	(x=0XFFFC799E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC79A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC79A6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC79B2);
	create_insn	(x=0XFFFC79C6);
	op_hex		(x,	1);
	set_cmt	(0XFFFC79DE,	"void *",	0);
	create_insn	(x=0XFFFC79DE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC79E0,	"_DWORD",	0);
	set_cmt	(0XFFFC79E6,	"_DWORD",	0);
	create_insn	(0XFFFC79F2);
	set_cmt	(0XFFFC7A1C,	"void *",	0);
	create_insn	(x=0XFFFC7A1C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7A1E,	"_DWORD",	0);
	set_cmt	(0XFFFC7A24,	"_DWORD",	0);
	create_insn	(0XFFFC7A30);
	set_cmt	(0XFFFC7A40,	"jumptable FFFC75B4 default case",	1);
	create_insn	(0XFFFC7A40);
	set_name	(0XFFFC7A40,	"def_FFFC75B4");
	set_cmt	(0XFFFC7A50,	"void *",	0);
	create_insn	(x=0XFFFC7A50);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7A52,	"_DWORD",	0);
	set_cmt	(0XFFFC7A58,	"_DWORD",	0);
	create_insn	(0XFFFC7A64);
	create_insn	(x=0XFFFC7A68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC7A7A);
	create_insn	(x=0XFFFC7A7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC7A86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC7A90);
	create_insn	(0XFFFC7A98);
	create_insn	(x=0XFFFC7A9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7ACA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AD6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B04);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC7B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B1E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC7B32);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7B3E);
	create_insn	(x=0XFFFC7B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B5C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7B68);
	set_cmt	(0XFFFC7B6C,	"ep_phy_num",	0);
	create_insn	(x=0XFFFC7B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B88);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7B8A,	"dev",	0);
	create_insn	(x=0XFFFC7B8C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7B8E,	"req",	0);
	create_insn	(x=0XFFFC7B8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7B98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC7BA4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC7BAC);
	set_cmt	(0XFFFC7BBC,	"void *",	0);
	create_insn	(x=0XFFFC7BBC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7BBE,	"_DWORD",	0);
	set_cmt	(0XFFFC7BC4,	"_DWORD",	0);
	create_insn	(0XFFFC7BD0);
	set_cmt	(0XFFFC7BE0,	"void *",	0);
	create_insn	(x=0XFFFC7BE0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7BE2,	"_DWORD",	0);
	set_cmt	(0XFFFC7BE8,	"_DWORD",	0);
	create_insn	(0XFFFC7BF4);
	set_cmt	(0XFFFC7C04,	"void *",	0);
	create_insn	(x=0XFFFC7C04);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7C06,	"_DWORD",	0);
	set_cmt	(0XFFFC7C0C,	"_DWORD",	0);
	create_insn	(0XFFFC7C18);
	set_cmt	(0XFFFC7C28,	"void *",	0);
	create_insn	(x=0XFFFC7C28);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7C2A,	"_DWORD",	0);
	set_cmt	(0XFFFC7C30,	"_DWORD",	0);
	create_insn	(0XFFFC7C3C);
	set_cmt	(0XFFFC7C4C,	"void *",	0);
	create_insn	(x=0XFFFC7C4C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7C4E,	"_DWORD",	0);
	set_cmt	(0XFFFC7C54,	"_DWORD",	0);
	create_insn	(0XFFFC7C60);
	set_cmt	(0XFFFC7C70,	"void *",	0);
	create_insn	(x=0XFFFC7C70);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7C72,	"_DWORD",	0);
	set_cmt	(0XFFFC7C78,	"_DWORD",	0);
	create_insn	(0XFFFC7C84);
	set_cmt	(0XFFFC7C94,	"void *",	0);
	create_insn	(x=0XFFFC7C94);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7C96,	"_DWORD",	0);
	set_cmt	(0XFFFC7C9C,	"_DWORD",	0);
	create_insn	(0XFFFC7CA8);
	set_cmt	(0XFFFC7CB8,	"void *",	0);
	create_insn	(x=0XFFFC7CB8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7CBA,	"_DWORD",	0);
	set_cmt	(0XFFFC7CC0,	"_DWORD",	0);
	create_insn	(0XFFFC7CCC);
	set_cmt	(0XFFFC7CDC,	"void *",	0);
	create_insn	(x=0XFFFC7CDC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7CDE,	"_DWORD",	0);
	set_cmt	(0XFFFC7CE4,	"_DWORD",	0);
	create_insn	(0XFFFC7CF0);
	set_cmt	(0XFFFC7D00,	"void *",	0);
	create_insn	(x=0XFFFC7D00);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7D02,	"_DWORD",	0);
	set_cmt	(0XFFFC7D08,	"_DWORD",	0);
	create_insn	(0XFFFC7D14);
	set_cmt	(0XFFFC7D24,	"void *",	0);
	create_insn	(x=0XFFFC7D24);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7D26,	"_DWORD",	0);
	set_cmt	(0XFFFC7D2C,	"_DWORD",	0);
	create_insn	(0XFFFC7D38);
	set_cmt	(0XFFFC7D48,	"void *",	0);
	create_insn	(x=0XFFFC7D48);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7D4A,	"_DWORD",	0);
	set_cmt	(0XFFFC7D50,	"_DWORD",	0);
	create_insn	(0XFFFC7D5C);
	set_cmt	(0XFFFC7D6C,	"void *",	0);
	create_insn	(x=0XFFFC7D6C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7D6E,	"_DWORD",	0);
	set_cmt	(0XFFFC7D74,	"_DWORD",	0);
	create_insn	(0XFFFC7D80);
	set_cmt	(0XFFFC7D90,	"void *",	0);
	create_insn	(x=0XFFFC7D90);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7D92,	"_DWORD",	0);
	set_cmt	(0XFFFC7D98,	"_DWORD",	0);
	create_insn	(0XFFFC7DA4);
	set_cmt	(0XFFFC7DB4,	"void *",	0);
	create_insn	(x=0XFFFC7DB4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7DB6,	"_DWORD",	0);
	set_cmt	(0XFFFC7DBC,	"_DWORD",	0);
	create_insn	(0XFFFC7DC8);
	set_cmt	(0XFFFC7DD8,	"void *",	0);
	create_insn	(x=0XFFFC7DD8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7DDA,	"_DWORD",	0);
	set_cmt	(0XFFFC7DE0,	"_DWORD",	0);
	create_insn	(0XFFFC7DEC);
	set_cmt	(0XFFFC7DFC,	"void *",	0);
	create_insn	(x=0XFFFC7DFC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7DFE,	"_DWORD",	0);
	set_cmt	(0XFFFC7E04,	"_DWORD",	0);
	create_insn	(0XFFFC7E10);
	set_cmt	(0XFFFC7E20,	"void *",	0);
	create_insn	(x=0XFFFC7E20);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7E22,	"_DWORD",	0);
	set_cmt	(0XFFFC7E28,	"_DWORD",	0);
	create_insn	(0XFFFC7E34);
	create_insn	(0XFFFC7EFC);
	set_cmt	(0XFFFC7F0C,	"void *",	0);
	create_insn	(x=0XFFFC7F0C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7F0E,	"_DWORD",	0);
	set_cmt	(0XFFFC7F14,	"_DWORD",	0);
	create_insn	(0XFFFC7F20);
	set_cmt	(0XFFFC7F30,	"void *",	0);
	create_insn	(x=0XFFFC7F30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC7F32,	"_DWORD",	0);
	set_cmt	(0XFFFC7F38,	"_DWORD",	0);
	create_insn	(0XFFFC7F44);
	set_cmt	(0XFFFC7F70,	"int",	0);
	set_cmt	(0XFFFC7F72,	"unsigned int",	0);
	set_cmt	(0XFFFC7F76,	"void *",	0);
	set_cmt	(0XFFFC7F94,	"void *",	0);
	set_cmt	(0XFFFC7FB8,	"int",	0);
	create_insn	(0XFFFC7FF0);
	set_cmt	(0XFFFC8000,	"void *",	0);
	create_insn	(x=0XFFFC8000);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8002,	"_DWORD",	0);
	set_cmt	(0XFFFC8008,	"_DWORD",	0);
	create_insn	(0XFFFC8014);
	set_cmt	(0XFFFC8024,	"void *",	0);
	create_insn	(x=0XFFFC8024);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8026,	"_DWORD",	0);
	set_cmt	(0XFFFC802C,	"_DWORD",	0);
	create_insn	(0XFFFC8038);
	set_cmt	(0XFFFC8048,	"void *",	0);
	create_insn	(x=0XFFFC8048);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC804A,	"_DWORD",	0);
	set_cmt	(0XFFFC8050,	"_DWORD",	0);
	create_insn	(0XFFFC805C);
	create_insn	(0XFFFC807E);
	create_insn	(0XFFFC80A4);
	create_insn	(x=0XFFFC80AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80BC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC80C2,	"req",	0);
	create_insn	(x=0XFFFC80C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80C4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC80CE);
	set_cmt	(0XFFFC80D0,	"req",	0);
	create_insn	(x=0XFFFC80D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC80D2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC80DC);
	create_insn	(x=0XFFFC812C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8156);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC815E);
	op_hex		(x,	1);
	create_insn	(0XFFFC8170);
	set_cmt	(0XFFFC8180,	"void *",	0);
	create_insn	(x=0XFFFC8180);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8182,	"_DWORD",	0);
	set_cmt	(0XFFFC8188,	"_DWORD",	0);
	make_array	(0XFFFC8192,	0X2);
	create_insn	(0XFFFC8194);
	set_name	(0XFFFC8194,	"dwc_ep_cmd_start_transfer");
	create_insn	(x=0XFFFC81A4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC81AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81B6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC81C0);
	set_cmt	(0XFFFC81D0,	"void *",	0);
	create_insn	(x=0XFFFC81D0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC81D2,	"_DWORD",	0);
	set_cmt	(0XFFFC81D8,	"_DWORD",	0);
	make_array	(0XFFFC81E2,	0X2);
	create_insn	(0XFFFC81E4);
	create_insn	(x=0XFFFC81FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC81FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8202);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8204);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8206);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC8210);
	create_insn	(x=0XFFFC8218);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC821C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8220);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8222);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8224);
	op_stkvar	(x,	1);
	make_array	(0XFFFC822E,	0X2);
	create_insn	(0XFFFC8230);
	create_insn	(x=0XFFFC8264);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8270);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8276);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8278);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC827A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC827C);
	op_stkvar	(x,	1);
	make_array	(0XFFFC8286,	0X2);
	create_insn	(0XFFFC8288);
	create_insn	(x=0XFFFC8290);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8292);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8296);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8298);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC829A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82A2);
	op_stkvar	(x,	1);
	make_array	(0XFFFC82A6,	0X2);
	create_insn	(0XFFFC82A8);
	create_insn	(x=0XFFFC82B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82C2);
	op_stkvar	(x,	1);
	make_array	(0XFFFC82C6,	0X2);
	create_insn	(0XFFFC82C8);
	create_insn	(x=0XFFFC82D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC82E6);
	op_stkvar	(x,	1);
	make_array	(0XFFFC82EA,	0X2);
	create_insn	(0XFFFC82EC);
	create_insn	(x=0XFFFC8308);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC830C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC831A);
	op_hex		(x,	1);
	create_insn	(0XFFFC8324);
	set_cmt	(0XFFFC8334,	"void *",	0);
	create_insn	(x=0XFFFC8334);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8336,	"_DWORD",	0);
	set_cmt	(0XFFFC833C,	"_DWORD",	0);
	create_insn	(x=0XFFFC8348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC8364,	"void *",	0);
	create_insn	(x=0XFFFC8364);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8366,	"_DWORD",	0);
	set_cmt	(0XFFFC836C,	"_DWORD",	0);
	create_insn	(0XFFFC8378);
	create_insn	(x=0XFFFC8380);
	op_hex		(x,	1);
	create_insn	(0XFFFC838C);
	create_insn	(x=0XFFFC8396);
	op_hex		(x,	1);
	create_insn	(0XFFFC83A4);
	create_insn	(x=0XFFFC83AC);
	op_hex		(x,	1);
	create_insn	(0XFFFC83B8);
	set_name	(0XFFFC83B8,	"dwc_device_run_status");
	create_insn	(0XFFFC83C4);
	create_insn	(x=0XFFFC83DA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC83E4);
	create_insn	(x=0XFFFC8430);
	op_hex		(x,	1);
	create_insn	(0XFFFC843C);
	create_insn	(0XFFFC8442);
	create_insn	(0XFFFC848E);
	set_cmt	(0XFFFC849E,	"void *",	0);
	create_insn	(x=0XFFFC849E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC84A0,	"_DWORD",	0);
	set_cmt	(0XFFFC84A6,	"_DWORD",	0);
	create_insn	(0XFFFC84B2);
	set_cmt	(0XFFFC84CE,	"void *",	0);
	create_insn	(x=0XFFFC84CE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC84D0,	"_DWORD",	0);
	set_cmt	(0XFFFC84D6,	"_DWORD",	0);
	make_array	(0XFFFC84E2,	0X2);
	create_insn	(0XFFFC84E4);
	make_array	(0XFFFC84EE,	0X2);
	create_insn	(0XFFFC84F0);
	make_array	(0XFFFC84FA,	0X2);
	create_insn	(0XFFFC84FC);
	create_insn	(x=0XFFFC8508);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8526);
	op_hex		(x,	1);
	make_array	(0XFFFC853E,	0X2);
	create_insn	(0XFFFC8540);
	set_name	(0XFFFC8540,	"nullsub_10");
	make_array	(0XFFFC8542,	0X2);
	create_insn	(0XFFFC8544);
	make_array	(0XFFFC854E,	0X2);
	create_insn	(0XFFFC8550);
	create_insn	(x=0XFFFC8558);
	op_hex		(x,	1);
	make_array	(0XFFFC855E,	0X2);
	create_insn	(0XFFFC8560);
	create_insn	(x=0XFFFC8568);
	op_hex		(x,	1);
	create_insn	(0XFFFC8570);
	create_insn	(x=0XFFFC857E);
	op_hex		(x,	1);
	create_insn	(0XFFFC8588);
	create_insn	(x=0XFFFC8592);
	op_hex		(x,	1);
	make_array	(0XFFFC85AE,	0X2);
	create_insn	(0XFFFC85B0);
	create_insn	(x=0XFFFC85B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC85C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC85D4);
	create_insn	(0XFFFC860E);
	create_insn	(x=0XFFFC861E);
	op_hex		(x,	1);
	create_insn	(0XFFFC864E);
	create_insn	(x=0XFFFC865E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC8682);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC86A6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC86C2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC86DE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC86F6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC86FE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8712);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC871A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8734);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC8738);
	op_hex		(x,	1);
	create_insn	(0XFFFC875C);
	create_insn	(x=0XFFFC876A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC877E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC8792,	0X2);
	create_insn	(0XFFFC8794);
	create_insn	(x=0XFFFC87A4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87B4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87C0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87C8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87D4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87DC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC87EC);
	op_hex		(x,	1);
	create_insn	(0XFFFC87F4);
	make_array	(0XFFFC8806,	0X2);
	create_insn	(0XFFFC8808);
	create_insn	(0XFFFC8850);
	create_insn	(0XFFFC8856);
	make_array	(0XFFFC885A,	0X2);
	create_insn	(0XFFFC885C);
	create_insn	(x=0XFFFC88B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC88CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC88D0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC88E6);
	create_insn	(0XFFFC8904);
	create_insn	(x=0XFFFC8932);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8936);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC893A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC894A);
	create_insn	(x=0XFFFC8954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC895E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8964);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8968);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC8978);
	create_insn	(0XFFFC897E);
	set_cmt	(0XFFFC8998,	"in",	0);
	set_cmt	(0XFFFC899A,	"out",	0);
	set_cmt	(0XFFFC89A4,	"len",	0);
	create_insn	(x=0XFFFC89BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC89BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC89C0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC89CA);
	create_insn	(0XFFFC89D0);
	create_insn	(x=0XFFFC89DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC89F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC89F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC89FA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC8A0A);
	create_insn	(0XFFFC8A1A);
	create_insn	(x=0XFFFC8A1E);
	op_hex		(x,	1);
	create_insn	(0XFFFC8A34);
	create_insn	(0XFFFC8A3E);
	create_insn	(0XFFFC8A96);
	create_insn	(x=0XFFFC8A9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC8ABA);
	set_cmt	(0XFFFC8ACA,	"void *",	0);
	create_insn	(x=0XFFFC8ACA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8ACC,	"_DWORD",	0);
	set_cmt	(0XFFFC8AD2,	"_DWORD",	0);
	create_insn	(0XFFFC8ADE);
	set_cmt	(0XFFFC8AEE,	"void *",	0);
	create_insn	(x=0XFFFC8AEE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8AF0,	"_DWORD",	0);
	set_cmt	(0XFFFC8AF6,	"_DWORD",	0);
	create_insn	(0XFFFC8B02);
	set_cmt	(0XFFFC8B20,	"void *",	0);
	create_insn	(x=0XFFFC8B20);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8B22,	"_DWORD",	0);
	set_cmt	(0XFFFC8B28,	"_DWORD",	0);
	create_insn	(x=0XFFFC8B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC8B50,	"void *",	0);
	create_insn	(x=0XFFFC8B50);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8B52,	"_DWORD",	0);
	set_cmt	(0XFFFC8B58,	"_DWORD",	0);
	create_insn	(0XFFFC8B64);
	set_cmt	(0XFFFC8B74,	"void *",	0);
	create_insn	(x=0XFFFC8B74);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8B76,	"_DWORD",	0);
	set_cmt	(0XFFFC8B7C,	"_DWORD",	0);
	create_insn	(0XFFFC8B88);
	set_cmt	(0XFFFC8B98,	"void *",	0);
	create_insn	(x=0XFFFC8B98);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8B9A,	"_DWORD",	0);
	set_cmt	(0XFFFC8BA0,	"_DWORD",	0);
	create_insn	(0XFFFC8BAC);
	create_insn	(0XFFFC8C00);
	create_insn	(0XFFFC8C04);
	make_array	(0XFFFC8C1A,	0X2);
	create_insn	(0XFFFC8C1C);
	create_insn	(x=0XFFFC8C54);
	op_stkvar	(x,	1);
	make_array	(0XFFFC8C5A,	0X2);
	create_insn	(0XFFFC8C5C);
	set_cmt	(0XFFFC8C62,	"_DWORD",	0);
	set_cmt	(0XFFFC8C64,	"switch 6 cases ",	0);
	set_cmt	(0XFFFC8C68,	"switch jump",	0);
	set_cmt	(0XFFFC8C6C,	"jump table for switch statement",	0);
	create_byte	(0XFFFC8C6C);
	set_name	(0XFFFC8C6C,	"jpt_FFFC8C68");
	create_byte	(0XFFFC8C6D);
	create_byte	(0XFFFC8C6E);
	create_byte	(0XFFFC8C6F);
	create_byte	(0XFFFC8C70);
	create_byte	(0XFFFC8C71);
	set_cmt	(0XFFFC8C72,	"jumptable FFFC8C68 case 4",	1);
	create_insn	(0XFFFC8C72);
	create_insn	(x=0XFFFC8C82);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8C8A,	"jumptable FFFC8C68 cases 0,5",	1);
	create_insn	(0XFFFC8C8A);
	create_insn	(x=0XFFFC8C9E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8CA2,	"jumptable FFFC8C68 case 1",	1);
	create_insn	(0XFFFC8CA2);
	create_insn	(x=0XFFFC8CA8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8CAC,	"jumptable FFFC8C68 case 2",	1);
	create_insn	(0XFFFC8CAC);
	create_insn	(x=0XFFFC8CBA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8CC2,	"jumptable FFFC8C68 case 3",	1);
	create_insn	(0XFFFC8CC2);
	create_insn	(x=0XFFFC8CD2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8CDA,	"jumptable FFFC8C68 default case",	1);
	create_insn	(0XFFFC8CDA);
	set_name	(0XFFFC8CDA,	"def_FFFC8C68");
	set_cmt	(0XFFFC8CEA,	"void *",	0);
	create_insn	(x=0XFFFC8CEA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8CEC,	"_DWORD",	0);
	create_insn	(0XFFFC8CFC);
	create_insn	(x=0XFFFC8D00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC8D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC8DB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC8DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC8DD0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC8F56);
	set_cmt	(0XFFFC8F66,	"void *",	0);
	create_insn	(x=0XFFFC8F66);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8F68,	"_DWORD",	0);
	set_cmt	(0XFFFC8F6E,	"_DWORD",	0);
	create_insn	(0XFFFC8F7A);
	set_cmt	(0XFFFC8F8A,	"void *",	0);
	create_insn	(x=0XFFFC8F8A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8F8C,	"_DWORD",	0);
	set_cmt	(0XFFFC8F92,	"_DWORD",	0);
	create_insn	(0XFFFC8F9C);
	set_cmt	(0XFFFC8FAC,	"void *",	0);
	create_insn	(x=0XFFFC8FAC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8FAE,	"_DWORD",	0);
	set_cmt	(0XFFFC8FB4,	"_DWORD",	0);
	create_insn	(0XFFFC8FBE);
	set_cmt	(0XFFFC8FCE,	"void *",	0);
	create_insn	(x=0XFFFC8FCE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8FD0,	"_DWORD",	0);
	set_cmt	(0XFFFC8FD6,	"_DWORD",	0);
	create_insn	(0XFFFC8FE2);
	set_cmt	(0XFFFC8FF2,	"void *",	0);
	create_insn	(x=0XFFFC8FF2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC8FF4,	"_DWORD",	0);
	set_cmt	(0XFFFC8FFA,	"_DWORD",	0);
	make_array	(0XFFFC9006,	0X2);
	create_insn	(0XFFFC9008);
	create_insn	(x=0XFFFC9016);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC91FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9210);
	set_cmt	(0XFFFC9220,	"void *",	0);
	create_insn	(x=0XFFFC9220);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9222,	"_DWORD",	0);
	set_cmt	(0XFFFC9228,	"_DWORD",	0);
	create_insn	(0XFFFC9234);
	create_insn	(x=0XFFFC9236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC924C);
	set_name	(0XFFFC924C,	"udc_request_queue");
	set_cmt	(0XFFFC9256,	"_DWORD",	0);
	create_insn	(x=0XFFFC9286);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC9294);
	create_insn	(0XFFFC929C);
	set_cmt	(0XFFFC92AC,	"void *",	0);
	create_insn	(x=0XFFFC92AC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC92AE,	"_DWORD",	0);
	make_array	(0XFFFC92BE,	0X2);
	create_insn	(0XFFFC92C0);
	create_insn	(x=0XFFFC92C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9312);
	create_insn	(0XFFFC935E);
	create_insn	(0XFFFC9364);
	create_insn	(0XFFFC9368);
	create_insn	(0XFFFC936C);
	set_cmt	(0XFFFC937C,	"void *",	0);
	create_insn	(x=0XFFFC937C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC937E,	"_DWORD",	0);
	set_cmt	(0XFFFC9384,	"_DWORD",	0);
	create_insn	(0XFFFC9390);
	set_cmt	(0XFFFC93A0,	"void *",	0);
	create_insn	(x=0XFFFC93A0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC93A2,	"_DWORD",	0);
	set_cmt	(0XFFFC93A8,	"_DWORD",	0);
	create_insn	(0XFFFC93B4);
	create_insn	(0XFFFC93D0);
	set_cmt	(0XFFFC93E0,	"void *",	0);
	create_insn	(x=0XFFFC93E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC93E2,	"_DWORD",	0);
	set_cmt	(0XFFFC93E8,	"_DWORD",	0);
	create_insn	(0XFFFC93F4);
	set_name	(0XFFFC93F4,	"j_free");
	create_insn	(0XFFFC93F8);
	create_insn	(x=0XFFFC93FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9410);
	set_name	(0XFFFC9410,	"arm_gic_init_percpu");
	make_array	(0XFFFC942A,	0X2);
	create_insn	(0XFFFC942C);
	set_name	(0XFFFC942C,	"arm_gic_suspend_cpu");
	make_array	(0XFFFC942E,	0X2);
	set_cmt	(0XFFFC9430,	"_DWORD",	0);
	create_insn	(0XFFFC9430);
	set_cmt	(0XFFFC9432,	"_DWORD",	0);
	set_cmt	(0XFFFC9438,	"void *",	0);
	create_insn	(x=0XFFFC9468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC947A);
	create_insn	(0XFFFC9480);
	set_cmt	(0XFFFC9484,	"void *",	0);
	make_array	(0XFFFC948E,	0X2);
	create_insn	(0XFFFC9490);
	create_insn	(x=0XFFFC94BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC94C4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFC9514);
	op_stkvar	(x,	1);
	make_array	(0XFFFC951A,	0X2);
	create_insn	(0XFFFC951C);
	set_name	(0XFFFC951C,	"arm_gic_resume_cpu");
	create_insn	(0XFFFC9568);
	make_array	(0XFFFC956E,	0X2);
	create_insn	(0XFFFC9570);
	create_insn	(x=0XFFFC9578);
	op_hex		(x,	1);
	create_insn	(0XFFFC9592);
	create_insn	(0XFFFC9598);
	create_insn	(x=0XFFFC95D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC95E2);
	make_array	(0XFFFC95E6,	0X2);
	create_insn	(0XFFFC95E8);
	set_name	(0XFFFC95E8,	"platform_fiq");
	set_cmt	(0XFFFC95F0,	"void *",	0);
	set_cmt	(0XFFFC95F2,	"_DWORD",	0);
	create_insn	(0XFFFC9600);
	create_insn	(x=0XFFFC9614);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC962E);
	create_insn	(x=0XFFFC963A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC9666);
	create_insn	(x=0XFFFC966C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC968A);
	create_insn	(x=0XFFFC968E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC96A2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC96B2);
	make_array	(0XFFFC96B6,	0X2);
	create_insn	(0XFFFC96B8);
	set_cmt	(0XFFFC96DA,	"out",	0);
	set_cmt	(0XFFFC96E2,	"len",	0);
	set_cmt	(0XFFFC96EA,	"in",	0);
	create_insn	(x=0XFFFC96F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC96F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC970C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9710);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC972A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC972E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9746);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC974A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC974E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9758);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9776);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9778);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC97BA);
	create_insn	(0XFFFC97FA);
	create_insn	(x=0XFFFC9800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9808);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC980C);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9828);
	create_insn	(0XFFFC9838);
	set_cmt	(0XFFFC9860,	"out",	0);
	set_cmt	(0XFFFC9866,	"in",	0);
	set_cmt	(0XFFFC9878,	"out",	0);
	set_cmt	(0XFFFC9884,	"in",	0);
	create_insn	(x=0XFFFC9886);
	op_hex		(x,	1);
	set_cmt	(0XFFFC988C,	"len",	0);
	create_insn	(0XFFFC9896);
	create_insn	(x=0XFFFC98AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC98BC);
	create_insn	(x=0XFFFC98D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC98E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC98F4);
	set_cmt	(0XFFFC98F8,	"out",	0);
	set_cmt	(0XFFFC98FA,	"len",	0);
	set_cmt	(0XFFFC9900,	"in",	0);
	create_insn	(0XFFFC9908);
	set_name	(0XFFFC9908,	"rpmb_req_pack");
	create_insn	(x=0XFFFC9916);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC993E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9954);
	create_insn	(x=0XFFFC997A);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	set_cmt	(0XFFFC99CC,	"in",	0);
	set_cmt	(0XFFFC99D0,	"len",	0);
	set_cmt	(0XFFFC99D4,	"out",	0);
	set_cmt	(0XFFFC9A0C,	"out",	0);
	create_insn	(x=0XFFFC9A0C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9A0E,	"in",	0);
	create_insn	(x=0XFFFC9A26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9A2E);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(0XFFFC9A4A);
	create_insn	(0XFFFC9A50);
	create_insn	(0XFFFC9A5A);
	create_insn	(0XFFFC9A64);
	create_insn	(x=0XFFFC9A6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC9A86,	0X2);
	create_insn	(0XFFFC9A88);
	set_name	(0XFFFC9A88,	"rpmb_read");
	create_insn	(0XFFFC9AA6);
	create_insn	(x=0XFFFC9ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9AC4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9AEC,	"int",	0);
	set_cmt	(0XFFFC9AEE,	"unsigned int",	0);
	set_cmt	(0XFFFC9AF2,	"void *",	0);
	set_cmt	(0XFFFC9AF8,	"int",	0);
	set_cmt	(0XFFFC9AFA,	"unsigned int",	0);
	set_cmt	(0XFFFC9AFC,	"void *",	0);
	create_insn	(x=0XFFFC9B02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B16);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B2C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9B36,	"blk_cnt",	0);
	create_insn	(x=0XFFFC9B36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9B42);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9B44,	"resp_len",	0);
	create_insn	(x=0XFFFC9B44);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9B46,	"req_buf",	0);
	set_cmt	(0XFFFC9B48,	"dev",	0);
	set_cmt	(0XFFFC9B4A,	"resp_buf",	0);
	create_insn	(x=0XFFFC9B78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9B86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BBA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFC9BD6,	0X2);
	create_insn	(0XFFFC9BD8);
	set_name	(0XFFFC9BD8,	"rpmb_write_counter_sync");
	set_cmt	(0XFFFC9C14,	"int",	0);
	set_cmt	(0XFFFC9C16,	"unsigned int",	0);
	set_cmt	(0XFFFC9C18,	"void *",	0);
	set_cmt	(0XFFFC9C1E,	"int",	0);
	set_cmt	(0XFFFC9C20,	"unsigned int",	0);
	set_cmt	(0XFFFC9C22,	"void *",	0);
	create_insn	(x=0XFFFC9C28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C4E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC9C6E);
	create_insn	(x=0XFFFC9C72);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9C78,	"req_buf",	0);
	set_cmt	(0XFFFC9C7A,	"resp_len",	0);
	create_insn	(x=0XFFFC9C7A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9C7C,	"blk_cnt",	0);
	set_cmt	(0XFFFC9C7E,	"dev",	0);
	set_cmt	(0XFFFC9C80,	"resp_buf",	0);
	create_insn	(x=0XFFFC9C8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9C98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9CC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9CD8);
	make_array	(0XFFFC9CDE,	0X2);
	create_insn	(0XFFFC9CE0);
	create_insn	(x=0XFFFC9CEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D08);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9D0E);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	set_cmt	(0XFFFC9D18,	"void *",	0);
	set_cmt	(0XFFFC9D1C,	"a2",	0);
	create_insn	(x=0XFFFC9D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D28);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(0XFFFC9D32);
	create_insn	(0XFFFC9D46);
	create_insn	(x=0XFFFC9D54);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	make_array	(0XFFFC9D5E,	0X2);
	create_insn	(0XFFFC9D60);
	create_insn	(x=0XFFFC9D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9DB0);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DE6);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9DEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9DFE);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9E02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9E12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9E38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E48);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9E4A,	"resp_len",	0);
	create_insn	(x=0XFFFC9E4A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9E4E,	"blk_cnt",	0);
	create_insn	(x=0XFFFC9E4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E56);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9E58,	"dev",	0);
	create_insn	(x=0XFFFC9E58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E7A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9ECA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9ECC,	"int",	0);
	set_cmt	(0XFFFC9ED4,	"unsigned int",	0);
	create_insn	(x=0XFFFC9ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EE6);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	set_cmt	(0XFFFC9EEA,	"void *",	0);
	create_insn	(x=0XFFFC9EF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9EFA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9F00,	"int",	0);
	set_cmt	(0XFFFC9F02,	"unsigned int",	0);
	set_cmt	(0XFFFC9F06,	"void *",	0);
	create_insn	(x=0XFFFC9F0C);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9F12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F16);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F48);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFC9F52,	"req_buf",	0);
	set_cmt	(0XFFFC9F54,	"resp_buf",	0);
	create_insn	(x=0XFFFC9F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F78);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9F80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFC9F90,	"void *",	0);
	set_cmt	(0XFFFC9F94,	"a2",	0);
	create_insn	(x=0XFFFC9F94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9FA0);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9FA4);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(0XFFFC9FAA);
	create_insn	(x=0XFFFC9FB0);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9FB6);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFC9FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFC9FCE);
	op_plain_offset	(x,	1,	0XFFFE2520);
	op_plain_offset	(x,	129,	0XFFFE2520);
	create_insn	(x=0XFFFC9FD2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFC9FD8);
	create_insn	(x=0XFFFC9FDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFC9FF0);
	create_insn	(x=0XFFFCA00A);
	op_hex		(x,	1);
	set_cmt	(0XFFFCA03C,	"out",	0);
	create_insn	(0XFFFCA03C);
	set_cmt	(0XFFFCA03E,	"in",	0);
	set_cmt	(0XFFFCA040,	"len",	0);
	create_insn	(0XFFFCA05E);
	create_insn	(0XFFFCA074);
	make_array	(0XFFFCA07A,	0X2);
	create_insn	(0XFFFCA07C);
	set_name	(0XFFFCA07C,	"rpmb_write_emmc");
	create_insn	(x=0XFFFCA086);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA08A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA08E,	"void *",	0);
	create_insn	(x=0XFFFCA08E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA090,	"int",	0);
	set_cmt	(0XFFFCA092,	"unsigned int",	0);
	create_insn	(x=0XFFFCA0AA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA0BA);
	create_insn	(x=0XFFFCA0C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA0D6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA0E6);
	create_insn	(x=0XFFFCA0EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA100);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA104);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA108);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA10A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA10E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA112);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA114);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA118);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA11C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA120);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA12C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA130);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA132);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA134,	"cmd",	0);
	create_insn	(x=0XFFFCA134);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA13E,	"dev",	0);
	create_insn	(x=0XFFFCA13E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA140);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA144);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA148);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA14A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA14E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA152);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA154);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA158);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA15A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA15C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA160);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA164);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA16A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA16E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA174);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA178);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA19E);
	create_insn	(0XFFFCA1B8);
	set_name	(0XFFFCA1B8,	"rpmb_read_emmc");
	set_cmt	(0XFFFCA1C2,	"int",	0);
	set_cmt	(0XFFFCA1C4,	"void *",	0);
	set_cmt	(0XFFFCA1C6,	"unsigned int",	0);
	create_insn	(x=0XFFFCA1CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1DC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA1DE,	"dev",	0);
	create_insn	(x=0XFFFCA1E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA1E4,	"cmd",	0);
	create_insn	(x=0XFFFCA1E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA208);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA214);
	create_insn	(x=0XFFFCA22E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA240);
	create_insn	(x=0XFFFCA260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA280);
	create_insn	(x=0XFFFCA284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA28E);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA348);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCA370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA37C);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA39C);
	create_insn	(x=0XFFFCA3A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA3C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA3D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA3E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA3EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCA402,	0X2);
	create_insn	(0XFFFCA404);
	create_insn	(x=0XFFFCA408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA49E);
	create_insn	(0XFFFCA4B2);
	create_insn	(x=0XFFFCA4E0);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA4E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA4FC);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA502);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA50C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA514);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA516);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA518);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA51A);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA51E);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA520);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA522);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(0XFFFCA526);
	create_insn	(0XFFFCA53A);
	create_insn	(0XFFFCA550);
	create_insn	(x=0XFFFCA558);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA55C);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(x=0XFFFCA560);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA56A);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	create_insn	(0XFFFCA588);
	create_insn	(0XFFFCA59E);
	create_insn	(x=0XFFFCA5AE);
	op_plain_offset	(x,	1,	0XFFFE2550);
	op_plain_offset	(x,	129,	0XFFFE2550);
	make_array	(0XFFFCA5B2,	0X2);
	create_insn	(0XFFFCA5B4);
	create_insn	(x=0XFFFCA604);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCA620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA632);
	create_insn	(0XFFFCA638);
	make_array	(0XFFFCA63E,	0X2);
	create_insn	(0XFFFCA640);
	create_insn	(0XFFFCA65C);
	create_insn	(x=0XFFFCA664);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA666);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA672);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA676);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA67A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA684);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA686);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA692);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCA6A4);
	make_array	(0XFFFCA6B6,	0X2);
	create_insn	(0XFFFCA6B8);
	create_insn	(x=0XFFFCA6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA6EA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA6F6);
	create_insn	(x=0XFFFCA708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCA71A,	0X2);
	create_insn	(0XFFFCA71C);
	create_insn	(x=0XFFFCA720);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA722);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA72C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA730);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA732,	"_DWORD",	0);
	create_insn	(x=0XFFFCA734);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA736,	"_DWORD",	0);
	create_insn	(x=0XFFFCA738);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA73A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA748);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA75C,	"_DWORD",	0);
	create_insn	(0XFFFCA77C);
	create_insn	(0XFFFCA790);
	make_array	(0XFFFCA796,	0X2);
	create_insn	(0XFFFCA798);
	create_insn	(x=0XFFFCA79A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA7A8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA7AA,	"_DWORD",	0);
	create_insn	(x=0XFFFCA7AC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA7AE,	"_DWORD",	0);
	create_insn	(x=0XFFFCA7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA7B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA7C0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA7D4,	"_DWORD",	0);
	create_insn	(0XFFFCA7F6);
	create_insn	(0XFFFCA80A);
	create_insn	(0XFFFCA810);
	create_insn	(x=0XFFFCA814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA820);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA828);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA844,	"_DWORD",	0);
	create_insn	(0XFFFCA868);
	set_cmt	(0XFFFCA86C,	"_DWORD",	0);
	set_cmt	(0XFFFCA872,	"_DWORD",	0);
	create_insn	(x=0XFFFCA87C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA890);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA89C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA89E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA8AE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA8B4);
	make_array	(0XFFFCA8BA,	0X2);
	create_insn	(0XFFFCA8BC);
	create_insn	(x=0XFFFCA8C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA8C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA8CC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA8E6,	"_DWORD",	0);
	create_insn	(0XFFFCA90A);
	set_cmt	(0XFFFCA90E,	"_DWORD",	0);
	set_cmt	(0XFFFCA914,	"_DWORD",	0);
	create_insn	(x=0XFFFCA91E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA932);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA93E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCA94C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA950);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCA956);
	create_dword	(x=0XFFFCA95C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFCA960);
	create_insn	(x=0XFFFCA966);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCA968,	"_DWORD",	0);
	create_insn	(x=0XFFFCA96A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA96C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA980);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA982);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA984);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA986);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA988);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA98A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA98C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA998);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA99C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCA9BE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCA9C4,	"_DWORD",	0);
	create_insn	(0XFFFCA9C4);
	set_cmt	(0XFFFCA9CC,	"_DWORD",	0);
	set_cmt	(0XFFFCA9D8,	"_DWORD",	0);
	set_cmt	(0XFFFCA9F6,	"_DWORD",	0);
	create_insn	(0XFFFCAA1A);
	create_insn	(x=0XFFFCAA30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCAA44);
	make_array	(0XFFFCAA4A,	0X2);
	create_dword	(x=0XFFFCAA4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFCAA50);
	set_name	(0XFFFCAA50,	"se_sbrom_init");
	make_array	(0XFFFCAA5A,	0X2);
	create_insn	(0XFFFCAA5C);
	set_name	(0XFFFCAA5C,	"se_lcs_get");
	create_insn	(0XFFFCAA68);
	set_name	(0XFFFCAA68,	"se_kcst_koem_compute");
	create_insn	(x=0XFFFCAA78);
	op_hex		(x,	1);
	create_insn	(0XFFFCAAAC);
	set_cmt	(0XFFFCAAAE,	"void *",	0);
	set_cmt	(0XFFFCAAB2,	"int",	0);
	set_cmt	(0XFFFCAAB4,	"unsigned int",	0);
	create_insn	(0XFFFCAABE);
	create_insn	(0XFFFCAAD4);
	make_array	(0XFFFCAADA,	0X2);
	create_insn	(0XFFFCAADC);
	set_name	(0XFFFCAADC,	"se_key_derivation");
	create_insn	(x=0XFFFCAAEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAAF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAB18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCAB34,	"signed int",	0);
	create_insn	(x=0XFFFCAB34);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB38,	"int *",	0);
	create_insn	(x=0XFFFCAB38);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB3C,	"signed int",	0);
	set_cmt	(0XFFFCAB3E,	"signed int",	0);
	create_insn	(x=0XFFFCAB3E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB42,	"_DWORD",	0);
	create_insn	(x=0XFFFCAB44);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB46,	"char *",	0);
	create_insn	(x=0XFFFCAB48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAB4A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCAB5A);
	set_cmt	(0XFFFCAB64,	"signed int",	0);
	create_insn	(x=0XFFFCAB64);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB68,	"int *",	0);
	create_insn	(x=0XFFFCAB68);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB6C,	"_DWORD",	0);
	set_cmt	(0XFFFCAB6E,	"signed int",	0);
	create_insn	(x=0XFFFCAB6E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB72,	"char *",	0);
	create_insn	(x=0XFFFCAB74);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAB76,	"signed int",	0);
	create_insn	(x=0XFFFCAB78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAB7C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCAB8C);
	set_name	(0XFFFCAB8C,	"se_get_pubkey_hash");
	create_insn	(0XFFFCABA2);
	create_insn	(0XFFFCABA8);
	set_name	(0XFFFCABA8,	"se_verify_pubkey");
	create_insn	(x=0XFFFCABAE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCABB0,	"_DWORD",	0);
	create_insn	(x=0XFFFCABB0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCABB4,	"_DWORD",	0);
	create_insn	(x=0XFFFCABB4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCABBC,	"_DWORD",	0);
	set_cmt	(0XFFFCABBE,	"_DWORD",	0);
	set_cmt	(0XFFFCABC6,	"_DWORD",	0);
	set_cmt	(0XFFFCABC8,	"void *",	0);
	set_cmt	(0XFFFCABCA,	"_DWORD",	0);
	create_insn	(x=0XFFFCABDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCABEC);
	op_plain_offset	(x,	1,	0XFFFDE694);
	op_plain_offset	(x,	129,	0XFFFDE694);
	create_insn	(x=0XFFFCABEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCABF0);
	op_plain_offset	(x,	1,	0XFFFDE694);
	op_plain_offset	(x,	129,	0XFFFDE694);
	create_insn	(x=0XFFFCABF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCABFA);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC04,	"_DWORD",	0);
	create_insn	(x=0XFFFCAC06);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC0A,	"_DWORD",	0);
	create_insn	(x=0XFFFCAC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC14);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC1E,	"out",	0);
	set_cmt	(0XFFFCAC20,	"in",	0);
	create_insn	(x=0XFFFCAC20);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC22,	"len",	0);
	set_cmt	(0XFFFCAC28,	"int *",	0);
	create_insn	(x=0XFFFCAC28);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC2A,	"_DWORD",	0);
	create_insn	(x=0XFFFCAC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC34,	"signed int",	0);
	create_insn	(x=0XFFFCAC34);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC38,	"signed int",	0);
	create_insn	(x=0XFFFCAC38);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC3A,	"signed int",	0);
	create_insn	(x=0XFFFCAC3C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC3E,	"char *",	0);
	create_insn	(x=0XFFFCAC3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFCAC4C,	"rpmb_key_derive");
	create_insn	(x=0XFFFCAC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC62);
	op_plain_offset	(x,	1,	0XFFFDE694);
	op_plain_offset	(x,	129,	0XFFFDE694);
	create_insn	(x=0XFFFCAC66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC68);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC6A,	"int *",	0);
	create_insn	(x=0XFFFCAC6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC6C);
	op_plain_offset	(x,	1,	0XFFFDE69C);
	op_plain_offset	(x,	129,	0XFFFDE69C);
	set_cmt	(0XFFFCAC6E,	"signed int",	0);
	create_insn	(x=0XFFFCAC6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC74);
	op_plain_offset	(x,	1,	0XFFFDE694);
	op_plain_offset	(x,	129,	0XFFFDE694);
	set_cmt	(0XFFFCAC76,	"_DWORD",	0);
	set_cmt	(0XFFFCAC78,	"signed int",	0);
	create_insn	(x=0XFFFCAC78);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC7A,	"signed int",	0);
	create_insn	(x=0XFFFCAC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAC80);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCAC82,	"char *",	0);
	create_insn	(x=0XFFFCAC82);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCAC90);
	create_insn	(x=0XFFFCAC94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCACA6);
	op_plain_offset	(x,	1,	0XFFFE52C0);
	op_plain_offset	(x,	129,	0XFFFE52C0);
	create_insn	(x=0XFFFCACB2);
	op_plain_offset	(x,	1,	0XFFFE52C0);
	op_plain_offset	(x,	129,	0XFFFE52C0);
	create_insn	(x=0XFFFCACCC);
	op_stkvar	(x,	1);
	make_array	(0XFFFCACFA,	0X2);
	create_insn	(0XFFFCACFC);
	create_insn	(x=0XFFFCAD0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCAD26);
	make_array	(0XFFFCAD2A,	0X2);
	create_insn	(0XFFFCAD2C);
	set_name	(0XFFFCAD2C,	"arm_generic_timer_resume_cpu");
	make_array	(0XFFFCAD42,	0X2);
	create_insn	(0XFFFCAD44);
	create_insn	(0XFFFCADC0);
	create_insn	(0XFFFCADE0);
	make_array	(0XFFFCADFE,	0X2);
	create_insn	(0XFFFCAE00);
	set_name	(0XFFFCAE00,	"arm_generic_timer_init_secondary_cpu");
	create_insn	(x=0XFFFCAE02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCAE0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCAE24);
	create_insn	(x=0XFFFCAE28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCAE38);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(x=0XFFFCAE3C);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(0XFFFCAEAE);
	make_array	(0XFFFCAECE,	0X2);
	create_insn	(0XFFFCAED0);
	create_insn	(x=0XFFFCAED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCAEE6);
	op_plain_offset	(x,	1,	0XFFFE52B4);
	op_plain_offset	(x,	129,	0XFFFE52B4);
	create_insn	(x=0XFFFCAF02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCAF92);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCAFEE);
	make_array	(0XFFFCB00E,	0X2);
	create_insn	(x=0XFFFCB010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB01E);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(x=0XFFFCB024);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(x=0XFFFCB03A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB05A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB06C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB09E);
	create_insn	(0XFFFCB0A8);
	set_cmt	(0XFFFCB0B8,	"void *",	0);
	create_insn	(x=0XFFFCB0B8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCB0BA,	"_DWORD",	0);
	set_cmt	(0XFFFCB0C0,	"_DWORD",	0);
	make_array	(0XFFFCB0CA,	0X2);
	create_insn	(0XFFFCB0CC);
	create_insn	(0XFFFCB0D8);
	create_insn	(x=0XFFFCB128);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB15C);
	op_stkvar	(x,	1);
	make_array	(0XFFFCB18E,	0X2);
	create_insn	(0XFFFCB190);
	create_insn	(0XFFFCB198);
	set_name	(0XFFFCB198,	"udelay");
	make_array	(0XFFFCB1BC,	0X4);
	create_insn	(0XFFFCB1C0);
	create_insn	(x=0XFFFCB1F2);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(x=0XFFFCB1FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB218);
	op_plain_offset	(x,	1,	0XFFFE52CC);
	op_plain_offset	(x,	129,	0XFFFE52CC);
	create_insn	(x=0XFFFCB224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB238);
	op_plain_offset	(x,	1,	0XFFFE52C0);
	op_plain_offset	(x,	129,	0XFFFE52C0);
	create_insn	(x=0XFFFCB252);
	op_plain_offset	(x,	1,	0XFFFE52C0);
	op_plain_offset	(x,	129,	0XFFFE52C0);
	create_insn	(x=0XFFFCB276);
	op_plain_offset	(x,	1,	0XFFFE52B4);
	op_plain_offset	(x,	129,	0XFFFE52B4);
	create_insn	(x=0XFFFCB28C);
	op_plain_offset	(x,	1,	0XFFFE52B4);
	op_plain_offset	(x,	129,	0XFFFE52B4);
	create_insn	(x=0XFFFCB33A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB346);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB350);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB372);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB382);
	create_insn	(0XFFFCB38C);
	create_dword	(0XFFFCB3A8);
	make_array	(0XFFFCB3A8,	0X2);
	create_dword	(0XFFFCB3B0);
	make_array	(0XFFFCB3B0,	0X2);
	create_dword	(0XFFFCB3B8);
	make_array	(0XFFFCB3B8,	0X2);
	create_insn	(0XFFFCB3C0);
	create_insn	(x=0XFFFCB3C2);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCB3CA);
	op_chr		(x,	1);
	make_array	(0XFFFCB3EA,	0X2);
	create_insn	(0XFFFCB3EC);
	set_name	(0XFFFCB3EC,	"event_wait");
	create_insn	(x=0XFFFCB400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB422);
	create_insn	(0XFFFCB42A);
	make_array	(0XFFFCB432,	0X2);
	create_insn	(0XFFFCB434);
	create_insn	(x=0XFFFCB448);
	op_plain_offset	(x,	1,	0XFFFE1B60);
	op_plain_offset	(x,	129,	0XFFFE1B60);
	create_insn	(x=0XFFFCB44A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB458);
	op_plain_offset	(x,	1,	0XFFFE1B60);
	op_plain_offset	(x,	129,	0XFFFE1B60);
	create_insn	(x=0XFFFCB46C);
	op_plain_offset	(x,	1,	0XFFFE1B60);
	op_plain_offset	(x,	129,	0XFFFE1B60);
	create_insn	(x=0XFFFCB47A);
	op_plain_offset	(x,	1,	0XFFFE1B60);
	op_plain_offset	(x,	129,	0XFFFE1B60);
	make_array	(0XFFFCB486,	0X2);
	create_insn	(0XFFFCB488);
	make_array	(0XFFFCB49A,	0X2);
	create_insn	(0XFFFCB49C);
	make_array	(0XFFFCB4C2,	0X2);
	create_insn	(0XFFFCB4C4);
	set_name	(0XFFFCB4C4,	"mutex_acquire");
	create_insn	(0XFFFCB502);
	create_insn	(0XFFFCB51C);
	set_name	(0XFFFCB51C,	"mutex_release");
	create_insn	(x=0XFFFCB534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB556);
	make_array	(0XFFFCB55E,	0X2);
	create_insn	(0XFFFCB560);
	create_insn	(x=0XFFFCB566);
	op_hex		(x,	1);
	create_insn	(0XFFFCB57C);
	create_insn	(0XFFFCB580);
	set_cmt	(0XFFFCB582,	"unsigned int",	0);
	set_cmt	(0XFFFCB588,	"int",	0);
	make_array	(0XFFFCB5AA,	0X2);
	create_insn	(0XFFFCB5AC);
	set_name	(0XFFFCB5AC,	"thread_exit");
	create_insn	(x=0XFFFCB5B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB5D4);
	create_insn	(x=0XFFFCB62A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB648);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCB652);
	op_hex		(x,	1);
	create_insn	(0XFFFCB66C);
	create_insn	(x=0XFFFCB670);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCB676);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB684);
	create_insn	(0XFFFCB69C);
	create_insn	(x=0XFFFCB6B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB70C);
	create_insn	(x=0XFFFCB716);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB726);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB728);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCB762);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB790);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCB79A);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(0XFFFCB7A4);
	create_insn	(x=0XFFFCB7BA);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCB7C2);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCB7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB7DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB7F4);
	op_hex		(x,	1);
	create_insn	(0XFFFCB7FA);
	create_insn	(0XFFFCB808);
	set_name	(0XFFFCB808,	"thread_create");
	create_insn	(x=0XFFFCB810);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB814);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB818);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCB81C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCB828);
	create_insn	(x=0XFFFCB85A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB862);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCB8A2,	0X2);
	create_insn	(0XFFFCB8A4);
	set_name	(0XFFFCB8A4,	"thread_resume");
	create_insn	(x=0XFFFCB8BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB8CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB8DE);
	op_hex		(x,	1);
	create_insn	(0XFFFCB920);
	create_insn	(0XFFFCB924);
	create_insn	(x=0XFFFCB93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB956);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCB996);
	create_insn	(x=0XFFFCB998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCB9A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCB9D2,	0X2);
	create_insn	(0XFFFCB9D4);
	create_insn	(x=0XFFFCB9DE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCB9FA,	"_DWORD",	0);
	set_cmt	(0XFFFCBA00,	"void *",	0);
	create_insn	(x=0XFFFCBA00);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCBA02,	"_DWORD",	0);
	create_insn	(0XFFFCBA1E);
	set_cmt	(0XFFFCBA2A,	"_DWORD",	0);
	set_cmt	(0XFFFCBA30,	"void *",	0);
	create_insn	(x=0XFFFCBA30);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCBA32,	"_DWORD",	0);
	create_insn	(0XFFFCBA4C);
	create_insn	(x=0XFFFCBA4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBA68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBA7E);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCBA86);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCBA88);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCBA92);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBA98);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBA9C);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAA0);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAA4);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAAC);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAB0);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAB2);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBAB6);
	op_plain_offset	(x,	1,	0XFFFE2570);
	op_plain_offset	(x,	129,	0XFFFE2570);
	create_insn	(x=0XFFFCBABC);
	op_plain_offset	(x,	1,	0XFFFE281C);
	op_plain_offset	(x,	129,	0XFFFE281C);
	create_insn	(x=0XFFFCBAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCBAD4);
	create_insn	(x=0XFFFCBAF6);
	op_hex		(x,	1);
	create_insn	(0XFFFCBB08);
	create_insn	(x=0XFFFCBB40);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCBB4A,	"void *",	0);
	create_insn	(x=0XFFFCBB4A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCBB50,	"_DWORD",	0);
	set_cmt	(0XFFFCBB52,	"_DWORD",	0);
	create_insn	(x=0XFFFCBB5C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCBB68);
	create_insn	(0XFFFCBB6E);
	create_insn	(0XFFFCBB74);
	create_insn	(x=0XFFFCBB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBBE6);
	op_hex		(x,	1);
	create_insn	(0XFFFCBBF0);
	create_insn	(0XFFFCBBFC);
	create_insn	(0XFFFCBC0A);
	create_insn	(0XFFFCBC1A);
	create_insn	(0XFFFCBC20);
	create_insn	(x=0XFFFCBC64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCBCC0);
	create_insn	(x=0XFFFCBCC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCBCF2);
	create_insn	(0XFFFCBCF8);
	create_insn	(x=0XFFFCBCFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBD00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBD10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBD6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBD76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBD88);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCBD8C);
	create_insn	(x=0XFFFCBDA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBDDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBDE4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCBDF0);
	create_insn	(0XFFFCBDFC);
	create_insn	(x=0XFFFCBE06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCBE08);
	op_stkvar	(x,	1);
	make_array	(0XFFFCBE12,	0X2);
	create_insn	(0XFFFCBE14);
	create_insn	(x=0XFFFCBE2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBE4E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCBE5C);
	op_hex		(x,	1);
	set_cmt	(0XFFFCBE74,	"void *",	0);
	create_insn	(0XFFFCBE74);
	create_insn	(x=0XFFFCBE92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBEC4);
	op_hex		(x,	1);
	set_cmt	(0XFFFCBED6,	"_DWORD",	0);
	create_insn	(0XFFFCBEE0);
	create_insn	(0XFFFCBEEC);
	create_insn	(0XFFFCBEF4);
	create_insn	(0XFFFCBF76);
	create_insn	(0XFFFCBF7C);
	create_insn	(x=0XFFFCBF7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCBF9E,	0X2);
	create_insn	(0XFFFCBFA0);
	create_insn	(x=0XFFFCBFA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCBFAA);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	create_insn	(0XFFFCBFC0);
	create_insn	(0XFFFCBFE2);
	create_insn	(0XFFFCBFF4);
	create_insn	(x=0XFFFCC004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC014);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	create_insn	(0XFFFCC02C);
	set_cmt	(0XFFFCC038,	"a1",	0);
	create_insn	(x=0XFFFCC038);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCC040,	"a2",	0);
	set_cmt	(0XFFFCC042,	"a3",	0);
	create_insn	(0XFFFCC04A);
	make_array	(0XFFFCC0AE,	0X2);
	create_insn	(0XFFFCC0B0);
	set_cmt	(0XFFFCC0B6,	"void *",	0);
	set_cmt	(0XFFFCC0C0,	"_DWORD",	0);
	set_cmt	(0XFFFCC0C6,	"void *",	0);
	create_insn	(0XFFFCC0CC);
	create_insn	(x=0XFFFCC0D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC0DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC10C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC114);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	create_insn	(0XFFFCC12E);
	set_cmt	(0XFFFCC132,	"a3",	0);
	set_cmt	(0XFFFCC138,	"a2",	0);
	create_insn	(0XFFFCC140);
	make_array	(0XFFFCC15A,	0X2);
	create_insn	(0XFFFCC15C);
	create_insn	(x=0XFFFCC166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC172);
	op_stkvar	(x,	1);
	make_array	(0XFFFCC176,	0X2);
	create_insn	(0XFFFCC178);
	create_insn	(x=0XFFFCC182);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC18E);
	op_stkvar	(x,	1);
	make_array	(0XFFFCC192,	0X2);
	create_insn	(0XFFFCC194);
	create_insn	(x=0XFFFCC1B8);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	create_insn	(x=0XFFFCC1DE);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	set_cmt	(0XFFFCC200,	"a2",	0);
	create_insn	(0XFFFCC21E);
	create_insn	(0XFFFCC220);
	create_insn	(0XFFFCC226);
	create_insn	(0XFFFCC22C);
	create_insn	(x=0XFFFCC230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC23E);
	op_plain_offset	(x,	1,	0XFFFE2840);
	op_plain_offset	(x,	129,	0XFFFE2840);
	make_array	(0XFFFCC246,	0X2);
	create_insn	(x=0XFFFCC248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC250);
	op_plain_offset	(x,	1,	0XFFFE2880);
	op_plain_offset	(x,	129,	0XFFFE2880);
	make_array	(0XFFFCC256,	0X2);
	create_insn	(0XFFFCC258);
	make_array	(0XFFFCC27A,	0X2);
	create_insn	(0XFFFCC27C);
	make_array	(0XFFFCC292,	0X2);
	create_insn	(0XFFFCC294);
	create_insn	(x=0XFFFCC2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC360);
	op_hex		(x,	1);
	create_insn	(0XFFFCC390);
	create_insn	(0XFFFCC398);
	set_name	(0XFFFCC398,	"su32");
	make_array	(0XFFFCC3CA,	0X2);
	create_insn	(0XFFFCC3CC);
	make_array	(0XFFFCC3E2,	0X2);
	create_insn	(0XFFFCC3E4);
	set_name	(0XFFFCC3E4,	"dt_init");
	create_insn	(x=0XFFFCC456);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC468);
	create_insn	(x=0XFFFCC46C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC47E);
	create_insn	(x=0XFFFCC492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC4A2);
	create_insn	(x=0XFFFCC4A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC4B8);
	create_insn	(0XFFFCC4EC);
	create_insn	(x=0XFFFCC4F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCC502,	0X2);
	create_insn	(0XFFFCC504);
	set_name	(0XFFFCC504,	"dt_walk");
	create_insn	(x=0XFFFCC516);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC524);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCC530,	"switch 9 cases ",	0);
	set_cmt	(0XFFFCC536,	"switch jump",	0);
	set_cmt	(0XFFFCC53A,	"jump table for switch statement",	0);
	create_byte	(0XFFFCC53A);
	set_name	(0XFFFCC53A,	"jpt_FFFCC536");
	create_byte	(0XFFFCC53B);
	create_byte	(0XFFFCC53C);
	create_byte	(0XFFFCC53D);
	create_byte	(0XFFFCC53E);
	create_byte	(0XFFFCC53F);
	create_byte	(0XFFFCC540);
	create_byte	(0XFFFCC541);
	create_byte	(0XFFFCC542);
	set_cmt	(0XFFFCC544,	"jumptable FFFCC536 case 9",	1);
	create_insn	(0XFFFCC544);
	create_insn	(x=0XFFFCC54E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCC562,	"jumptable FFFCC536 case 3",	1);
	create_insn	(0XFFFCC562);
	create_insn	(x=0XFFFCC570);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC576);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC578);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC580);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC586);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC594);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC596);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC5AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCC5B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC5B6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCC5CC,	"jumptable FFFCC536 case 2",	1);
	create_insn	(0XFFFCC5CC);
	set_cmt	(0XFFFCC5D4,	"jumptable FFFCC536 case 1",	1);
	create_insn	(x=0XFFFCC5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC5D8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCC5E0);
	create_insn	(x=0XFFFCC5F8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCC606,	"jumptable FFFCC536 default case",	1);
	create_insn	(0XFFFCC606);
	set_name	(0XFFFCC606,	"def_FFFCC536");
	create_insn	(x=0XFFFCC60A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC61E);
	create_insn	(x=0XFFFCC626);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC63A);
	create_insn	(x=0XFFFCC64C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC64E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCC652);
	create_insn	(0XFFFCC656);
	create_insn	(x=0XFFFCC65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC66C);
	create_insn	(x=0XFFFCC672);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCC682,	0X2);
	create_insn	(0XFFFCC684);
	create_insn	(x=0XFFFCC696);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC6AA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC6BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC6D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCC6FA,	0X2);
	create_insn	(0XFFFCC6FC);
	make_array	(0XFFFCC706,	0X2);
	create_insn	(0XFFFCC708);
	set_name	(0XFFFCC708,	"nullsub_5");
	make_array	(0XFFFCC70A,	0X2);
	create_insn	(0XFFFCC70C);
	create_insn	(x=0XFFFCC716);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC720);
	create_insn	(x=0XFFFCC73A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC74A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC75A);
	op_hex		(x,	1);
	create_insn	(0XFFFCC764);
	make_array	(0XFFFCC76A,	0X2);
	create_insn	(0XFFFCC76C);
	create_insn	(x=0XFFFCC776);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC77C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC784);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCC7C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC7EE);
	op_hex		(x,	1);
	create_insn	(0XFFFCC7F6);
	create_insn	(x=0XFFFCC810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC818);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC83A);
	op_hex		(x,	1);
	create_insn	(0XFFFCC842);
	create_insn	(x=0XFFFCC85E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC868);
	op_hex		(x,	1);
	create_insn	(0XFFFCC872);
	create_insn	(x=0XFFFCC88E);
	op_hex		(x,	1);
	create_insn	(0XFFFCC89E);
	create_insn	(0XFFFCC8C8);
	create_insn	(x=0XFFFCC8E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC8F2);
	create_insn	(0XFFFCC8F6);
	create_insn	(0XFFFCC8FA);
	create_insn	(0XFFFCC900);
	create_insn	(0XFFFCC906);
	create_insn	(0XFFFCC90C);
	create_insn	(x=0XFFFCC90E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCC948);
	op_hex		(x,	1);
	create_insn	(0XFFFCC950);
	create_insn	(0XFFFCC976);
	create_insn	(x=0XFFFCC98C);
	op_hex		(x,	1);
	create_insn	(0XFFFCC998);
	create_insn	(x=0XFFFCC9BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCC9C8);
	create_insn	(0XFFFCC9CE);
	create_insn	(0XFFFCC9D2);
	create_insn	(0XFFFCC9D8);
	create_insn	(x=0XFFFCC9EE);
	op_hex		(x,	1);
	create_insn	(0XFFFCC9F8);
	create_insn	(x=0XFFFCCA02);
	op_hex		(x,	1);
	create_insn	(0XFFFCCA0C);
	set_name	(0XFFFCCA0C,	"write_efuse");
	create_insn	(0XFFFCCA18);
	create_insn	(x=0XFFFCCA24);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCA3A);
	create_insn	(0XFFFCCA3E);
	create_insn	(x=0XFFFCCA4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCA58);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCA68);
	create_insn	(x=0XFFFCCA72);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCCA76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCA9C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCAA0);
	create_insn	(x=0XFFFCCAB2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCAD0);
	create_insn	(0XFFFCCADE);
	create_insn	(x=0XFFFCCAEA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCAFE);
	create_insn	(x=0XFFFCCB0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCB14);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCB26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCB28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCCB44);
	create_insn	(x=0XFFFCCB46);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCB4A);
	create_insn	(x=0XFFFCCB5C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCB6C);
	make_array	(0XFFFCCB72,	0X2);
	create_insn	(0XFFFCCB74);
	set_name	(0XFFFCCB74,	"nullsub_13");
	make_array	(0XFFFCCB76,	0X2);
	create_insn	(0XFFFCCB78);
	set_name	(0XFFFCCB78,	"nullsub_14");
	make_array	(0XFFFCCB7A,	0X2);
	create_insn	(0XFFFCCB7C);
	create_insn	(x=0XFFFCCB7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCCB86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCCB8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCCB98);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCB9C);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBA0);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCCBAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCBB2);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBB6);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBBA);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBBC);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCBBE);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(0XFFFCCBCA);
	create_insn	(x=0XFFFCCBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCBEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCC00);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCC08);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(x=0XFFFCCC10);
	op_plain_offset	(x,	1,	0XFFFE2890);
	op_plain_offset	(x,	129,	0XFFFE2890);
	create_insn	(0XFFFCCC20);
	create_insn	(x=0XFFFCCC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCCC30,	"char *",	0);
	set_cmt	(0XFFFCCC32,	"char *",	0);
	create_insn	(x=0XFFFCCC44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCCC52);
	create_insn	(0XFFFCCC5E);
	make_array	(0XFFFCCC62,	0X2);
	create_insn	(0XFFFCCC64);
	create_insn	(x=0XFFFCCC72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCC76);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCC82);
	create_insn	(x=0XFFFCCC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCC90);
	op_stkvar	(x,	1);
	make_array	(0XFFFCCC9A,	0X2);
	create_insn	(0XFFFCCC9C);
	create_insn	(x=0XFFFCCCA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCCAC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCCB8);
	create_insn	(x=0XFFFCCCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCCC8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCCD4);
	make_array	(0XFFFCCCDE,	0X2);
	create_insn	(0XFFFCCCE0);
	create_insn	(x=0XFFFCCCEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCCF8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCD06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD1A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCD1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD36);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCD44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD58);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCD5C);
	op_stkvar	(x,	1);
	make_array	(0XFFFCCD66,	0X2);
	create_insn	(0XFFFCCD68);
	create_insn	(x=0XFFFCCD70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCD9E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCDAC);
	create_insn	(x=0XFFFCCDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCDFE);
	op_stkvar	(x,	1);
	make_array	(0XFFFCCE02,	0X2);
	create_insn	(0XFFFCCE04);
	create_insn	(x=0XFFFCCE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE1C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCE28);
	create_insn	(x=0XFFFCCE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCE84);
	op_hex		(x,	1);
	make_array	(0XFFFCCEAA,	0X2);
	create_insn	(0XFFFCCEAC);
	create_insn	(0XFFFCCEC2);
	create_insn	(x=0XFFFCCEC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCED6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCEF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF00);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCCF0C);
	create_insn	(x=0XFFFCCF12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF62);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCF7A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCCFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCFB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCCFBA);
	op_hex		(x,	1);
	create_insn	(0XFFFCCFD8);
	create_insn	(0XFFFCCFE2);
	make_array	(0XFFFCD002,	0X2);
	create_insn	(0XFFFCD004);
	create_insn	(0XFFFCD01A);
	create_insn	(x=0XFFFCD01E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD02C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCD038);
	create_insn	(x=0XFFFCD03E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD04A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD058);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD066);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD074);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD080);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD084);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD08A);
	op_hex		(x,	1);
	create_insn	(0XFFFCD0BC);
	make_array	(0XFFFCD0E2,	0X2);
	create_insn	(0XFFFCD0E4);
	create_insn	(x=0XFFFCD0FE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCD102);
	op_stkvar	(x,	1);
	make_array	(0XFFFCD10E,	0X2);
	create_insn	(0XFFFCD110);
	create_insn	(x=0XFFFCD12A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCD12E);
	op_stkvar	(x,	1);
	make_array	(0XFFFCD13A,	0X2);
	create_insn	(0XFFFCD13C);
	create_insn	(0XFFFCD14E);
	create_insn	(x=0XFFFCD150);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD164);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD1B2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCD1BE);
	make_array	(0XFFFCD1C6,	0X2);
	create_insn	(0XFFFCD1C8);
	create_insn	(x=0XFFFCD1D4);
	op_hex		(x,	1);
	create_insn	(0XFFFCD1FE);
	create_insn	(0XFFFCD20C);
	create_insn	(0XFFFCD220);
	create_insn	(0XFFFCD222);
	create_insn	(0XFFFCD224);
	create_insn	(x=0XFFFCD22C);
	op_hex		(x,	1);
	create_insn	(0XFFFCD25A);
	create_insn	(0XFFFCD268);
	create_insn	(0XFFFCD27C);
	create_insn	(0XFFFCD27E);
	create_insn	(0XFFFCD280);
	create_insn	(x=0XFFFCD298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD2C4);
	make_array	(0XFFFCD2DA,	0X2);
	create_dword	(x=0XFFFCD2DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFFFCD2E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD306);
	create_insn	(0XFFFCD34A);
	make_array	(0XFFFCD37E,	0X2);
	create_dword	(x=0XFFFCD380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFCD384);
	set_name	(0XFFFCD384,	"bp_fc_init");
	create_insn	(0XFFFCD392);
	create_insn	(0XFFFCD3AC);
	set_name	(0XFFFCD3AC,	"bp_fc_write_sn");
	create_insn	(x=0XFFFCD3BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD3D6,	"_DWORD",	0);
	create_insn	(0XFFFCD3FC);
	create_insn	(x=0XFFFCD400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD416);
	create_insn	(x=0XFFFCD426);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD438);
	create_insn	(0XFFFCD446);
	create_insn	(0XFFFCD454);
	make_array	(0XFFFCD462,	0X2);
	create_insn	(0XFFFCD464);
	set_name	(0XFFFCD464,	"bp_find");
	create_insn	(x=0XFFFCD46A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD476);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD492);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD4AE);
	set_cmt	(0XFFFCD4B8,	"char *",	0);
	set_cmt	(0XFFFCD4BA,	"char *",	0);
	set_cmt	(0XFFFCD4BC,	"unsigned int",	0);
	set_cmt	(0XFFFCD4C8,	"char *",	0);
	set_cmt	(0XFFFCD4CA,	"char *",	0);
	set_cmt	(0XFFFCD4CC,	"unsigned int",	0);
	create_insn	(0XFFFCD4DE);
	create_insn	(0XFFFCD4EA);
	create_insn	(x=0XFFFCD4EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD506);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCD51A,	0X2);
	create_insn	(0XFFFCD51C);
	make_array	(0XFFFCD52A,	0X2);
	create_insn	(0XFFFCD52C);
	create_insn	(x=0XFFFCD52E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD536,	"int",	0);
	create_insn	(x=0XFFFCD53A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD53E,	"unsigned int",	0);
	set_cmt	(0XFFFCD546,	"void *",	0);
	create_insn	(x=0XFFFCD570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCD582,	0X2);
	create_insn	(0XFFFCD584);
	set_name	(0XFFFCD584,	"bp_load");
	create_insn	(x=0XFFFCD592);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD5A2,	"data_addr",	0);
	set_cmt	(0XFFFCD5AE,	"out",	0);
	create_insn	(x=0XFFFCD5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD5DE);
	create_insn	(x=0XFFFCD5E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD5F8);
	create_insn	(x=0XFFFCD5FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD612);
	create_insn	(x=0XFFFCD616);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD62C);
	set_name	(0XFFFCD62C,	"bp_save");
	create_insn	(x=0XFFFCD63A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD670,	"data_len",	0);
	set_cmt	(0XFFFCD678,	"data_addr",	0);
	set_cmt	(0XFFFCD680,	"in",	0);
	create_insn	(x=0XFFFCD680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD68C);
	create_insn	(x=0XFFFCD690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD6A6);
	create_insn	(0XFFFCD6C0);
	set_name	(0XFFFCD6C0,	"bp_create");
	create_insn	(x=0XFFFCD6C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD6DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD6F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD6FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD71E);
	create_insn	(x=0XFFFCD738);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCD748,	"in",	0);
	set_cmt	(0XFFFCD74A,	"out",	0);
	set_cmt	(0XFFFCD74E,	"len",	0);
	set_cmt	(0XFFFCD758,	"len",	0);
	set_cmt	(0XFFFCD75A,	"in",	0);
	set_cmt	(0XFFFCD760,	"out",	0);
	create_insn	(0XFFFCD77C);
	create_insn	(0XFFFCD792);
	create_insn	(x=0XFFFCD796);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCD7B2);
	create_insn	(x=0XFFFCD7B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD7CC);
	create_insn	(x=0XFFFCD7D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD7E6);
	create_insn	(x=0XFFFCD7EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD7FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFCD7FC,	"bp_write_cfg");
	create_insn	(x=0XFFFCD822);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD82C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD82E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD836,	"int",	0);
	set_cmt	(0XFFFCD83E,	"unsigned int",	0);
	set_cmt	(0XFFFCD84A,	"void *",	0);
	set_cmt	(0XFFFCD850,	"in",	0);
	set_cmt	(0XFFFCD852,	"out",	0);
	set_cmt	(0XFFFCD854,	"len",	0);
	create_insn	(0XFFFCD874);
	create_insn	(0XFFFCD888);
	create_insn	(x=0XFFFCD88C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD8A2);
	create_insn	(x=0XFFFCD8A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD8BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCD8E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD8EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCD8FE,	"int",	0);
	set_cmt	(0XFFFCD902,	"unsigned int",	0);
	set_cmt	(0XFFFCD918,	"void *",	0);
	set_cmt	(0XFFFCD91E,	"in",	0);
	set_cmt	(0XFFFCD920,	"out",	0);
	set_cmt	(0XFFFCD922,	"len",	0);
	create_insn	(x=0XFFFCD92C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD942);
	create_insn	(0XFFFCD956);
	create_insn	(x=0XFFFCD95A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCD970);
	make_array	(0XFFFCD98A,	0X2);
	create_insn	(0XFFFCD98C);
	set_name	(0XFFFCD98C,	"compute_checksum");
	set_cmt	(0XFFFCD98E,	"len",	0);
	create_insn	(x=0XFFFCD99C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD9A0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCD9BE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCD9C2);
	op_hex		(x,	1);
	set_cmt	(0XFFFCD9D4,	"in",	0);
	create_insn	(0XFFFCD9D4);
	set_cmt	(0XFFFCD9D6,	"out",	0);
	create_insn	(x=0XFFFCD9D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCD9DC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCD9E6);
	set_cmt	(0XFFFCD9F6,	"void *",	0);
	create_insn	(x=0XFFFCD9F6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCD9F8,	"_DWORD",	0);
	set_cmt	(0XFFFCD9FE,	"_DWORD",	0);
	create_insn	(0XFFFCDA08);
	set_cmt	(0XFFFCDA18,	"void *",	0);
	create_insn	(x=0XFFFCDA18);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDA1A,	"_DWORD",	0);
	set_cmt	(0XFFFCDA20,	"_DWORD",	0);
	make_array	(0XFFFCDA2A,	0X2);
	create_insn	(0XFFFCDA2C);
	set_name	(0XFFFCDA2C,	"crypto_init");
	create_insn	(x=0XFFFCDA34);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDA46,	"int",	0);
	set_cmt	(0XFFFCDA48,	"unsigned int",	0);
	create_insn	(x=0XFFFCDAA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDAAC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDAC4);
	create_insn	(0XFFFCDAE2);
	create_insn	(0XFFFCDAE6);
	create_insn	(0XFFFCDAEA);
	make_array	(0XFFFCDAEE,	0X2);
	create_insn	(0XFFFCDAF0);
	set_name	(0XFFFCDAF0,	"crypto_update");
	create_insn	(x=0XFFFCDAFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDB36);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDB44);
	create_insn	(0XFFFCDB62);
	create_insn	(0XFFFCDB66);
	make_array	(0XFFFCDB6A,	0X2);
	create_insn	(0XFFFCDB6C);
	set_name	(0XFFFCDB6C,	"crypto_calc_hash");
	create_insn	(x=0XFFFCDB84);
	op_hex		(x,	1);
	create_insn	(0XFFFCDBA2);
	create_insn	(0XFFFCDBCA);
	create_insn	(0XFFFCDBD0);
	set_name	(0XFFFCDBD0,	"image_calculate_digest");
	create_insn	(x=0XFFFCDBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBE8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDBF4);
	create_insn	(x=0XFFFCDBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDBFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDC08);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDC14);
	create_insn	(x=0XFFFCDC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDC20);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDC28,	"int",	0);
	set_cmt	(0XFFFCDC2A,	"unsigned int",	0);
	set_cmt	(0XFFFCDC2C,	"void *",	0);
	create_insn	(x=0XFFFCDC2E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDC34,	"in",	0);
	set_cmt	(0XFFFCDC36,	"len",	0);
	set_cmt	(0XFFFCDC38,	"out",	0);
	create_insn	(x=0XFFFCDC3A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDC42,	"int",	0);
	set_cmt	(0XFFFCDC44,	"unsigned int",	0);
	set_cmt	(0XFFFCDC46,	"void *",	0);
	set_cmt	(0XFFFCDC4E,	"void *",	0);
	set_cmt	(0XFFFCDC50,	"int",	0);
	set_cmt	(0XFFFCDC52,	"unsigned int",	0);
	create_insn	(x=0XFFFCDC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDC7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDC94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDC9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDCFC);
	op_stkvar	(x,	1);
	make_array	(0XFFFCDD06,	0X2);
	create_insn	(0XFFFCDD08);
	create_insn	(x=0XFFFCDD0E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDD16,	"int",	0);
	set_cmt	(0XFFFCDD18,	"unsigned int",	0);
	set_cmt	(0XFFFCDD1C,	"void *",	0);
	create_insn	(x=0XFFFCDD1E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDD24,	"in",	0);
	set_cmt	(0XFFFCDD26,	"len",	0);
	set_cmt	(0XFFFCDD28,	"out",	0);
	set_cmt	(0XFFFCDD30,	"void *",	0);
	set_cmt	(0XFFFCDD32,	"int",	0);
	set_cmt	(0XFFFCDD34,	"unsigned int",	0);
	create_insn	(x=0XFFFCDD4E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDD5E,	"in",	0);
	set_cmt	(0XFFFCDD60,	"len",	0);
	set_cmt	(0XFFFCDD62,	"out",	0);
	create_insn	(x=0XFFFCDD6A);
	op_stkvar	(x,	1);
	make_array	(0XFFFCDD7E,	0X2);
	create_insn	(0XFFFCDD80);
	create_insn	(x=0XFFFCDDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDDB2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCDDC0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCDDC6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDDE2);
	set_cmt	(0XFFFCDDE6,	"in",	0);
	set_cmt	(0XFFFCDDF2,	"len",	0);
	set_cmt	(0XFFFCDDF6,	"out",	0);
	create_insn	(x=0XFFFCDE12);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCDE18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDE1C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDE30);
	set_cmt	(0XFFFCDE3A,	"unsigned int",	0);
	create_insn	(x=0XFFFCDE3C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDE40,	"void *",	0);
	set_cmt	(0XFFFCDE42,	"int",	0);
	set_cmt	(0XFFFCDE4A,	"int",	0);
	set_cmt	(0XFFFCDE4C,	"unsigned int",	0);
	set_cmt	(0XFFFCDE4E,	"void *",	0);
	set_cmt	(0XFFFCDE78,	"void *",	0);
	set_cmt	(0XFFFCDE7A,	"int",	0);
	set_cmt	(0XFFFCDE7C,	"unsigned int",	0);
	create_insn	(x=0XFFFCDE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDEBA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDECE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDEE4);
	op_stkvar	(x,	1);
	make_array	(0XFFFCDEFE,	0X2);
	create_insn	(0XFFFCDF00);
	set_name	(0XFFFCDF00,	"image_auth");
	create_insn	(x=0XFFFCDF10);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCDF16,	"in",	0);
	set_cmt	(0XFFFCDF1A,	"len",	0);
	set_cmt	(0XFFFCDF1E,	"out",	0);
	create_insn	(x=0XFFFCDF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF7A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDF7E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCDF8A);
	create_insn	(x=0XFFFCDF90);
	op_hex		(x,	1);
	set_name	(0XFFFCDF90,	"image_extract_payload");
	create_insn	(x=0XFFFCDFB6);
	op_hex		(x,	1);
	set_cmt	(0XFFFCDFC2,	"out",	0);
	set_cmt	(0XFFFCDFC4,	"len",	0);
	set_cmt	(0XFFFCDFC6,	"in",	0);
	create_insn	(x=0XFFFCDFD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCDFD6);
	op_hex		(x,	1);
	set_cmt	(0XFFFCDFE2,	"out",	0);
	set_cmt	(0XFFFCDFE6,	"in",	0);
	set_cmt	(0XFFFCDFE8,	"len",	0);
	create_insn	(0XFFFCE000);
	create_insn	(0XFFFCE008);
	create_insn	(0XFFFCE016);
	make_array	(0XFFFCE02A,	0X2);
	create_insn	(0XFFFCE02C);
	set_name	(0XFFFCE02C,	"image_verify_payload");
	create_insn	(x=0XFFFCE048);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE04E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE056);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE058);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCE068);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE06E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE082,	"out",	0);
	create_insn	(x=0XFFFCE082);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE084,	"in",	0);
	create_insn	(x=0XFFFCE094);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE09E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0C2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCE0C6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCE0CA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCE0D4);
	create_insn	(x=0XFFFCE0D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE108);
	op_hex		(x,	1);
	create_insn	(0XFFFCE11A);
	create_insn	(x=0XFFFCE122);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE128);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE12C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE12E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE138);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE13E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE140);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE146,	"_DWORD",	0);
	create_insn	(x=0XFFFCE146);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE148,	"void *",	0);
	create_insn	(x=0XFFFCE148);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE14A,	"_DWORD",	0);
	create_insn	(0XFFFCE15C);
	create_insn	(x=0XFFFCE16A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE17A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE180);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE184);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE186);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE188);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE18E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE192);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE1AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE1BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE1D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE1FE);
	create_insn	(x=0XFFFCE212);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE236);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE248);
	create_insn	(x=0XFFFCE24C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCE25E,	0X2);
	create_insn	(0XFFFCE260);
	set_name	(0XFFFCE260,	"image_verify");
	create_insn	(x=0XFFFCE278);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE27A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE2A2,	"char *",	0);
	set_cmt	(0XFFFCE2A4,	"char *",	0);
	set_cmt	(0XFFFCE2D0,	"a3",	0);
	create_insn	(x=0XFFFCE2D0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE2D2,	"dt_ptr",	0);
	set_cmt	(0XFFFCE2D6,	"a2",	0);
	create_insn	(0XFFFCE2E4);
	create_insn	(x=0XFFFCE2E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE2FA);
	create_insn	(0XFFFCE316);
	create_insn	(x=0XFFFCE330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE342);
	create_insn	(x=0XFFFCE344);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE366);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE370);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE374);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE380);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE384);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE38A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCE3AC);
	create_insn	(x=0XFFFCE3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE3C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE3DA);
	create_insn	(0XFFFCE3F0);
	create_insn	(0XFFFCE406);
	create_insn	(x=0XFFFCE41C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE42E);
	create_insn	(x=0XFFFCE430);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFCE442,	0X2);
	create_insn	(x=0XFFFCE444);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE45E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE47A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE490);
	create_insn	(0XFFFCE4A0);
	set_name	(0XFFFCE4A0,	"keymgr_add_key");
	create_insn	(x=0XFFFCE4C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE4D6);
	create_insn	(x=0XFFFCE4E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE4FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE50E);
	create_insn	(x=0XFFFCE51C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE536);
	set_cmt	(0XFFFCE53A,	"in",	0);
	set_cmt	(0XFFFCE53E,	"out",	0);
	set_cmt	(0XFFFCE55E,	"len",	0);
	set_cmt	(0XFFFCE568,	"out",	0);
	create_insn	(0XFFFCE568);
	set_cmt	(0XFFFCE56A,	"in",	0);
	set_cmt	(0XFFFCE56C,	"len",	0);
	make_array	(0XFFFCE576,	0X2);
	create_insn	(0XFFFCE578);
	set_name	(0XFFFCE578,	"get_auth_key");
	create_insn	(0XFFFCE590);
	create_insn	(0XFFFCE594);
	set_name	(0XFFFCE594,	"keymgr_inject_key");
	create_insn	(x=0XFFFCE596);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCE5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5B8);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCE5C4);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCE5D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCE5E2,	"key_head",	0);
	create_insn	(0XFFFCE5EC);
	create_insn	(x=0XFFFCE5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE5FC);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCE60C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE610);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE614);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCE618);
	set_name	(0XFFFCE618,	"keymgr_inject_lc_keys");
	set_cmt	(0XFFFCE626,	"key",	0);
	set_cmt	(0XFFFCE628,	"key_len",	0);
	set_cmt	(0XFFFCE632,	"key",	0);
	set_cmt	(0XFFFCE638,	"key_len",	0);
	make_array	(0XFFFCE642,	0X2);
	create_insn	(0XFFFCE644);
	set_name	(0XFFFCE644,	"keymgr_inject_uc_keys");
	set_cmt	(0XFFFCE652,	"key",	0);
	set_cmt	(0XFFFCE654,	"key_len",	0);
	set_cmt	(0XFFFCE65E,	"key",	0);
	set_cmt	(0XFFFCE664,	"key_len",	0);
	make_array	(0XFFFCE66E,	0X2);
	create_insn	(0XFFFCE670);
	set_name	(0XFFFCE670,	"keymgr_get_rom_pubkeyhash");
	make_array	(0XFFFCE6A2,	0X2);
	create_insn	(0XFFFCE6A4);
	set_name	(0XFFFCE6A4,	"keymgr_get_romrrpk");
	make_array	(0XFFFCE6CE,	0X2);
	create_insn	(0XFFFCE6D0);
	create_insn	(x=0XFFFCE6D2);
	op_chr		(x,	1);
	create_insn	(0XFFFCE6E6);
	make_array	(0XFFFCE6EA,	0X2);
	create_insn	(0XFFFCE6EC);
	create_insn	(0XFFFCE708);
	set_cmt	(0XFFFCE710,	"char *",	0);
	set_cmt	(0XFFFCE712,	"char *",	0);
	create_insn	(0XFFFCE720);
	create_insn	(0XFFFCE726);
	create_insn	(0XFFFCE72C);
	set_name	(0XFFFCE72C,	"write_gpt_partition_array");
	create_insn	(x=0XFFFCE75E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE79A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE7E0);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCE7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCE800);
	set_name	(0XFFFCE800,	"partition_parse_gpt_header");
	create_insn	(x=0XFFFCE842);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE846);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE894);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE8EE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCE91C);
	create_insn	(x=0XFFFCE934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE93C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE952);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCE954);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCE956);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCE958);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	make_array	(0XFFFCE95E,	0X2);
	create_insn	(0XFFFCE960);
	set_name	(0XFFFCE960,	"partition_read_table");
	create_insn	(x=0XFFFCE964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE96C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCE978);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE97A);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCE97C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE980);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE986);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE98E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE992);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9AE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCE9B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9D8);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCE9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCE9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA24);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCEA36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCEA42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA62);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCEA70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA7A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEA88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEAAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCEB28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEB96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEBC6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEBC8,	"void *",	0);
	create_insn	(x=0XFFFCEBCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEBD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEBDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEC9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECCE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCECD0,	"int",	0);
	create_insn	(x=0XFFFCECD6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCECFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED32);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCED38,	"unsigned int",	0);
	create_insn	(x=0XFFFCED3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCED98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE42);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEE4A,	"out",	0);
	set_cmt	(0XFFFCEE4C,	"in",	0);
	set_cmt	(0XFFFCEE50,	"len",	0);
	create_insn	(x=0XFFFCEE56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEE8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCEE98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCEEA6);
	set_cmt	(0XFFFCEEB6,	"_DWORD",	0);
	create_insn	(x=0XFFFCEEB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEEB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCEEC4,	"void *",	0);
	create_insn	(x=0XFFFCEEC4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEECE,	"_DWORD",	0);
	create_insn	(0XFFFCEED8);
	create_insn	(x=0XFFFCEEDC);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCEEEA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEEEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEEF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCEF10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF2E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEF38,	"_DWORD",	0);
	create_insn	(x=0XFFFCEF38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCEF46,	"void *",	0);
	create_insn	(x=0XFFFCEF46);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEF50,	"_DWORD",	0);
	create_insn	(x=0XFFFCEF5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCEF88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF8E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEF96,	"_DWORD",	0);
	create_insn	(x=0XFFFCEF96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCEF98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCEFA4,	"void *",	0);
	create_insn	(x=0XFFFCEFA4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEFAE,	"_DWORD",	0);
	create_insn	(0XFFFCEFB8);
	set_name	(0XFFFCEFB8,	"mmc_read_partition_table");
	create_insn	(x=0XFFFCEFC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCEFE4,	"void *",	0);
	create_insn	(x=0XFFFCEFE4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCEFE6,	"_DWORD",	0);
	set_cmt	(0XFFFCEFEC,	"_DWORD",	0);
	make_array	(0XFFFCEFF6,	0X2);
	create_insn	(0XFFFCEFF8);
	set_name	(0XFFFCEFF8,	"write_partition");
	create_insn	(x=0XFFFCF000);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF006);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCF012);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCF018);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCF02A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF032);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF046);
	create_insn	(x=0XFFFCF048);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCF054);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF056);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF058);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF05A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF05C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF06E);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCF072);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF074);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF096);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF0C2);
	create_insn	(0XFFFCF0DA);
	create_insn	(x=0XFFFCF0DC);
	op_chr		(x,	1);
	create_insn	(x=0XFFFCF0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF104);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF108);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF10A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF12A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF152);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF158);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF168);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF16A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF16C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF16E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF172);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF174);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF176);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF188);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF18A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF18E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF190);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF192);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF196);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF198);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF19A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF1F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF200);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF20A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF214);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF21E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF228);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF22E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF23A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF23E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF242);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF24A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF24C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF252);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF25A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF25C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF262);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF26E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF27A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF27C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF286);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF288);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF2C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF2E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF304);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF316);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF31A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF320);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF332);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF336);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF33A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF340);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF346);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF348);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF350);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF358);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF35A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF35E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF37C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF37E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF380);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF38A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF390);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF396);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF39A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF3D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF45C);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCF468);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF480);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF4A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF4BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF4C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF524);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF528);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF536);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF53A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFCF556,	"unsigned int",	0);
	create_insn	(x=0XFFFCF556);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCF558,	"void *",	0);
	set_cmt	(0XFFFCF55A,	"int",	0);
	create_insn	(x=0XFFFCF562);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF574);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF57A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF57E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF582);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF586);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF58A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF590);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF596);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF59C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF5BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCF5CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCF5DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCF5EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF5F8);
	make_array	(0XFFFCF5FE,	0X2);
	create_insn	(0XFFFCF600);
	create_insn	(0XFFFCF62C);
	set_cmt	(0XFFFCF63E,	"_DWORD",	0);
	set_cmt	(0XFFFCF640,	"void *",	0);
	set_cmt	(0XFFFCF642,	"_DWORD",	0);
	create_insn	(0XFFFCF652);
	make_array	(0XFFFCF65A,	0X2);
	create_insn	(x=0XFFFCF65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFCF65C,	"partition_get_size");
	create_insn	(x=0XFFFCF66A);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCF674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF694);
	make_array	(0XFFFCF69A,	0X2);
	create_insn	(x=0XFFFCF69C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFCF6AA);
	op_plain_offset	(x,	1,	0XFFFE52E0);
	op_plain_offset	(x,	129,	0XFFFE52E0);
	create_insn	(x=0XFFFCF6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF6D4);
	make_array	(0XFFFCF6DA,	0X2);
	create_insn	(0XFFFCF6DC);
	set_cmt	(0XFFFCF706,	"_DWORD",	0);
	create_insn	(x=0XFFFCF710);
	op_hex		(x,	1);
	set_cmt	(0XFFFCF720,	"_DWORD",	0);
	create_insn	(0XFFFCF720);
	set_cmt	(0XFFFCF724,	"void *",	0);
	make_array	(0XFFFCF732,	0X2);
	create_insn	(0XFFFCF734);
	create_insn	(0XFFFCF754);
	create_insn	(x=0XFFFCF75A);
	op_hex		(x,	1);
	create_insn	(0XFFFCF760);
	make_array	(0XFFFCF766,	0X2);
	create_insn	(0XFFFCF768);
	set_cmt	(0XFFFCF782,	"int",	0);
	set_cmt	(0XFFFCF786,	"unsigned int",	0);
	set_cmt	(0XFFFCF78A,	"void *",	0);
	set_cmt	(0XFFFCF790,	"data_addr",	0);
	set_cmt	(0XFFFCF792,	"data_addr",	0);
	set_cmt	(0XFFFCF794,	"out",	0);
	set_cmt	(0XFFFCF796,	"data_len",	0);
	create_insn	(0XFFFCF7A8);
	create_insn	(0XFFFCF7B0);
	create_insn	(0XFFFCF7B8);
	create_insn	(0XFFFCF7FC);
	create_insn	(x=0XFFFCF814);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCF818);
	op_hex		(x,	1);
	set_cmt	(0XFFFCF82C,	"data_addr",	0);
	create_insn	(0XFFFCF82C);
	set_cmt	(0XFFFCF82E,	"data_addr",	0);
	set_cmt	(0XFFFCF830,	"data_len",	0);
	set_cmt	(0XFFFCF832,	"out",	0);
	create_insn	(0XFFFCF84C);
	make_array	(0XFFFCF862,	0X2);
	create_insn	(0XFFFCF864);
	set_cmt	(0XFFFCF892,	"data_len",	0);
	set_cmt	(0XFFFCF898,	"out",	0);
	create_insn	(x=0XFFFCF8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF8EC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFCF904,	"int",	0);
	set_cmt	(0XFFFCF906,	"unsigned int",	0);
	set_cmt	(0XFFFCF908,	"void *",	0);
	set_cmt	(0XFFFCF90E,	"data_addr",	0);
	set_cmt	(0XFFFCF910,	"out",	0);
	set_cmt	(0XFFFCF914,	"data_len",	0);
	create_insn	(x=0XFFFCF920);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF926);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF928);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF92C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF92E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF930);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF932);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF934);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF936);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF938);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF95C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF962);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCF980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFCF9B6);
	create_insn	(x=0XFFFCF9BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF9C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF9DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF9E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCF9E4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCF9F6);
	create_insn	(x=0XFFFCFA16);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCFA20);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCFA26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCFA28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCFA3A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFCFA40);
	create_insn	(0XFFFCFA46);
	create_insn	(x=0XFFFCFA4C);
	op_hex		(x,	1);
	create_insn	(0XFFFCFA54);
	create_insn	(0XFFFCFA5C);
	create_insn	(x=0XFFFCFA7A);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFA86,	"in",	0);
	set_cmt	(0XFFFCFA8A,	"len",	0);
	create_insn	(0XFFFCFAAC);
	create_insn	(0XFFFCFAB6);
	create_insn	(0XFFFCFABC);
	make_array	(0XFFFCFAC2,	0X2);
	create_insn	(0XFFFCFAC4);
	create_insn	(x=0XFFFCFAC8);
	op_hex		(x,	1);
	create_insn	(0XFFFCFAE8);
	create_insn	(0XFFFCFAEC);
	create_insn	(0XFFFCFAF0);
	create_insn	(0XFFFCFAF4);
	set_cmt	(0XFFFCFB18,	"in",	0);
	create_insn	(x=0XFFFCFB20);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFB26,	"out",	0);
	create_insn	(0XFFFCFB30);
	create_insn	(0XFFFCFB36);
	create_insn	(0XFFFCFB3C);
	create_insn	(0XFFFCFB42);
	create_insn	(0XFFFCFB48);
	create_insn	(x=0XFFFCFB6C);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFB82,	"len",	0);
	set_cmt	(0XFFFCFB86,	"in",	0);
	set_cmt	(0XFFFCFB88,	"out",	0);
	create_insn	(0XFFFCFBAA);
	create_insn	(0XFFFCFBB4);
	create_insn	(0XFFFCFBBA);
	create_insn	(0XFFFCFBC0);
	make_array	(0XFFFCFBC6,	0X2);
	create_insn	(0XFFFCFBC8);
	create_insn	(x=0XFFFCFC24);
	op_hex		(x,	1);
	create_insn	(x=0XFFFCFC28);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFC34,	"data_addr",	0);
	set_cmt	(0XFFFCFC36,	"data_len",	0);
	set_cmt	(0XFFFCFC3A,	"in",	0);
	create_insn	(0XFFFCFC4C);
	create_insn	(0XFFFCFC52);
	create_insn	(0XFFFCFC58);
	make_array	(0XFFFCFC5E,	0X2);
	create_insn	(0XFFFCFC60);
	create_insn	(x=0XFFFCFC8C);
	op_hex		(x,	1);
	create_insn	(0XFFFCFC9C);
	create_insn	(0XFFFCFCBE);
	create_insn	(0XFFFCFCC4);
	create_insn	(0XFFFCFCCA);
	create_insn	(0XFFFCFCD0);
	make_array	(0XFFFCFCD6,	0X2);
	create_insn	(0XFFFCFCD8);
	create_insn	(0XFFFCFD10);
	create_insn	(x=0XFFFCFD32);
	op_hex		(x,	1);
	create_insn	(0XFFFCFD42);
	create_insn	(0XFFFCFD4C);
	make_array	(0XFFFCFD56,	0X2);
	create_insn	(0XFFFCFD58);
	create_insn	(x=0XFFFCFD60);
	op_hex		(x,	1);
	create_insn	(0XFFFCFD70);
	create_insn	(0XFFFCFD7C);
	create_insn	(0XFFFCFD88);
	create_insn	(0XFFFCFD94);
	set_name	(0XFFFCFD94,	"alloc_handle");
	set_cmt	(0XFFFCFDAA,	"char *",	0);
	set_cmt	(0XFFFCFDB0,	"unsigned int",	0);
	set_cmt	(0XFFFCFDD0,	"a1",	0);
	create_insn	(0XFFFCFDD0);
	create_insn	(0XFFFCFDDA);
	create_insn	(0XFFFCFDE6);
	create_insn	(0XFFFCFDEC);
	create_insn	(x=0XFFFCFE2E);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFE48,	"unsigned int",	0);
	set_cmt	(0XFFFCFE4A,	"int",	0);
	set_cmt	(0XFFFCFE4C,	"void *",	0);
	set_cmt	(0XFFFCFE72,	"len",	0);
	set_cmt	(0XFFFCFE74,	"in",	0);
	set_cmt	(0XFFFCFE76,	"out",	0);
	create_insn	(0XFFFCFE90);
	create_insn	(0XFFFCFEA2);
	create_insn	(0XFFFCFEA8);
	create_insn	(0XFFFCFEAE);
	create_insn	(0XFFFCFEB4);
	create_insn	(x=0XFFFCFEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCFEE8);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFF02,	"unsigned int",	0);
	set_cmt	(0XFFFCFF04,	"int",	0);
	set_cmt	(0XFFFCFF06,	"void *",	0);
	set_cmt	(0XFFFCFF38,	"out",	0);
	set_cmt	(0XFFFCFF3A,	"in",	0);
	set_cmt	(0XFFFCFF3E,	"len",	0);
	create_insn	(0XFFFCFF4E);
	create_insn	(0XFFFCFF60);
	create_insn	(0XFFFCFF66);
	create_insn	(0XFFFCFF6C);
	create_insn	(x=0XFFFCFF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFCFFAC);
	op_hex		(x,	1);
	set_cmt	(0XFFFCFFC6,	"unsigned int",	0);
	set_cmt	(0XFFFCFFC8,	"int",	0);
	set_cmt	(0XFFFCFFCA,	"void *",	0);
	set_cmt	(0XFFFCFFEC,	"in",	0);
	set_cmt	(0XFFFCFFEE,	"len",	0);
	set_cmt	(0XFFFCFFF0,	"out",	0);
	create_insn	(0XFFFD000A);
	create_insn	(0XFFFD001C);
	create_insn	(0XFFFD0022);
	create_insn	(0XFFFD0028);
	make_array	(0XFFFD002E,	0X2);
	create_insn	(0XFFFD0030);
	create_insn	(x=0XFFFD0040);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0062);
	op_hex		(x,	1);
	set_cmt	(0XFFFD007E,	"unsigned int",	0);
	set_cmt	(0XFFFD0082,	"int",	0);
	set_cmt	(0XFFFD0084,	"void *",	0);
	set_cmt	(0XFFFD00B8,	"out",	0);
	set_cmt	(0XFFFD00BA,	"in",	0);
	set_cmt	(0XFFFD00BE,	"len",	0);
	create_insn	(0XFFFD00CE);
	create_insn	(0XFFFD00E0);
	create_insn	(0XFFFD00E6);
	create_insn	(0XFFFD00EC);
	create_insn	(0XFFFD010A);
	create_insn	(0XFFFD0110);
	make_array	(0XFFFD0116,	0X2);
	create_insn	(0XFFFD0118);
	create_insn	(0XFFFD013C);
	create_insn	(0XFFFD0142);
	create_insn	(0XFFFD0148);
	create_insn	(0XFFFD0162);
	create_insn	(0XFFFD0168);
	create_insn	(x=0XFFFD0170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0174);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0196);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD019A,	"len",	0);
	create_insn	(x=0XFFFD019C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD019E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD01A4,	"out",	0);
	create_insn	(x=0XFFFD01A4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD01B2,	"in",	0);
	create_insn	(0XFFFD01D4);
	create_insn	(0XFFFD01D8);
	create_insn	(0XFFFD01E0);
	create_insn	(x=0XFFFD01E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD01EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD01F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD01F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD01FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD01FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0206);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD020C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD021C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD0220);
	make_array	(0XFFFD0226,	0X2);
	create_insn	(0XFFFD0228);
	create_insn	(x=0XFFFD0230);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0232);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD023A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD023C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD023E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0240);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0242);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0244);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD0262,	"out",	0);
	create_insn	(x=0XFFFD0262);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD0266,	"data_addr",	0);
	set_cmt	(0XFFFD0268,	"data_addr",	0);
	set_cmt	(0XFFFD026A,	"data_len",	0);
	create_insn	(x=0XFFFD027A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0280);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD0286,	"int",	0);
	set_cmt	(0XFFFD0288,	"unsigned int",	0);
	set_cmt	(0XFFFD028C,	"void *",	0);
	create_insn	(x=0XFFFD028C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD0294,	"data_addr",	0);
	set_cmt	(0XFFFD0298,	"out",	0);
	create_insn	(x=0XFFFD0298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD02A0,	"data_len",	0);
	create_insn	(x=0XFFFD02B8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD02BE,	"int",	0);
	set_cmt	(0XFFFD02C0,	"unsigned int",	0);
	set_cmt	(0XFFFD02C4,	"void *",	0);
	create_insn	(x=0XFFFD02C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD02CC,	"char *",	0);
	create_insn	(x=0XFFFD02CC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD02CE,	"char *",	0);
	create_insn	(x=0XFFFD02CE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD02D0,	"unsigned int",	0);
	set_cmt	(0XFFFD02DC,	"char *",	0);
	create_insn	(x=0XFFFD02DC);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD02DE,	"char *",	0);
	create_insn	(x=0XFFFD02DE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD02E0,	"unsigned int",	0);
	set_cmt	(0XFFFD02F2,	"data_addr",	0);
	set_cmt	(0XFFFD02F8,	"data_addr",	0);
	set_cmt	(0XFFFD02FA,	"out",	0);
	create_insn	(x=0XFFFD02FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD031E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0326);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0332);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0338);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD033E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0342);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0344);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD034E);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD0352);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD0356);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD035A);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD035E);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD0362);
	op_plain_offset	(x,	1,	0X2700000);
	op_plain_offset	(x,	129,	0X2700000);
	create_insn	(x=0XFFFD036A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0370);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0372);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0374);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD037A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD037E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0382);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD0388);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD038C);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD0390);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD0394);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD0398);
	op_plain_offset	(x,	1,	0XB00000);
	op_plain_offset	(x,	129,	0XB00000);
	create_insn	(x=0XFFFD03A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD03B2);
	create_insn	(x=0XFFFD03CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD03D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD03D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD03E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD03E6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD03F0,	"int",	0);
	set_cmt	(0XFFFD03F2,	"void *",	0);
	create_insn	(x=0XFFFD03F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD03FE,	"unsigned int",	0);
	set_cmt	(0XFFFD0404,	"len",	0);
	set_cmt	(0XFFFD0408,	"in",	0);
	set_cmt	(0XFFFD040A,	"out",	0);
	create_insn	(x=0XFFFD040A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD0416,	"in",	0);
	set_cmt	(0XFFFD0418,	"len",	0);
	set_cmt	(0XFFFD041C,	"out",	0);
	set_cmt	(0XFFFD0428,	"char *",	0);
	create_insn	(x=0XFFFD0428);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD042E,	"unsigned int",	0);
	set_cmt	(0XFFFD043A,	"char *",	0);
	create_insn	(x=0XFFFD043A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD0440,	"unsigned int",	0);
	set_cmt	(0XFFFD044C,	"char *",	0);
	create_insn	(x=0XFFFD044C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD0452,	"unsigned int",	0);
	create_insn	(x=0XFFFD045C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0460);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0464);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0476);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0478);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD0486,	"len",	0);
	set_cmt	(0XFFFD048A,	"in",	0);
	set_cmt	(0XFFFD048C,	"out",	0);
	create_insn	(x=0XFFFD049C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD04A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD04AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD04B4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD04C4);
	create_insn	(x=0XFFFD04D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD04D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD04D8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD04E4);
	set_name	(0XFFFD04E4,	"nullsub_6");
	make_array	(0XFFFD04E6,	0X2);
	create_insn	(0XFFFD04E8);
	make_array	(0XFFFD04EE,	0X2);
	create_insn	(0XFFFD04F0);
	create_insn	(0XFFFD04F4);
	set_cmt	(0XFFFD04FC,	"switch 14 cases ",	0);
	create_insn	(x=0XFFFD0506);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD050E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0516);
	op_hex		(x,	1);
	set_cmt	(0XFFFD051E,	"switch jump",	0);
	set_cmt	(0XFFFD0522,	"jump table for switch statement",	0);
	create_byte	(0XFFFD0522);
	set_name	(0XFFFD0522,	"jpt_FFFD051E");
	create_byte	(0XFFFD0523);
	create_byte	(0XFFFD0524);
	create_byte	(0XFFFD0525);
	create_byte	(0XFFFD0526);
	create_byte	(0XFFFD0527);
	create_byte	(0XFFFD0528);
	create_byte	(0XFFFD0529);
	create_byte	(0XFFFD052A);
	create_byte	(0XFFFD052B);
	create_byte	(0XFFFD052C);
	create_byte	(0XFFFD052D);
	create_byte	(0XFFFD052E);
	create_byte	(0XFFFD052F);
	set_cmt	(0XFFFD0530,	"jumptable FFFD051E case 13",	1);
	create_insn	(0XFFFD0530);
	create_insn	(x=0XFFFD0548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD055E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0566);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD056E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD059A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD05A2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD05AC,	"jumptable FFFD051E cases 1,12",	1);
	create_insn	(0XFFFD05AC);
	set_cmt	(0XFFFD05BE,	"jumptable FFFD051E case 2",	1);
	create_insn	(0XFFFD05BE);
	set_cmt	(0XFFFD05D0,	"jumptable FFFD051E cases 3,14",	1);
	create_insn	(0XFFFD05D0);
	set_cmt	(0XFFFD05E2,	"jumptable FFFD051E case 10",	1);
	create_insn	(0XFFFD05E2);
	set_cmt	(0XFFFD05F4,	"jumptable FFFD051E case 11",	1);
	create_insn	(0XFFFD05F4);
	set_cmt	(0XFFFD0606,	"jumptable FFFD051E default case",	1);
	create_insn	(0XFFFD0606);
	set_name	(0XFFFD0606,	"def_FFFD051E");
	create_insn	(x=0XFFFD0608);
	op_hex		(x,	1);
	create_insn	(0XFFFD061C);
	create_insn	(0XFFFD0638);
	create_insn	(0XFFFD0654);
	create_insn	(x=0XFFFD0656);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0662);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD06A4);
	op_hex		(x,	1);
	create_insn	(0XFFFD06AC);
	make_array	(0XFFFD06BA,	0X2);
	create_insn	(0XFFFD06BC);
	create_insn	(x=0XFFFD06BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD06C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD06CE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD06E6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD06EC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD06F2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD06F8);
	op_hex		(x,	1);
	create_insn	(0XFFFD0700);
	create_insn	(0XFFFD0712);
	create_insn	(x=0XFFFD071E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0728);
	op_hex		(x,	1);
	create_insn	(0XFFFD0734);
	create_insn	(x=0XFFFD0736);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD074C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD075C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0760);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0766);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0770);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0778);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07B4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07C4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD07D8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07E0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD07FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0806);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD080E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0818);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD081C);
	op_hex		(x,	1);
	make_array	(0XFFFD0822,	0X2);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(0XFFFD0824);
	create_insn	(x=0XFFFD0828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0838);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0860);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0876);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0894);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD08AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD08B0);
	op_hex		(x,	1);
	create_insn	(0XFFFD08C4);
	set_name	(0XFFFD08C4,	"pub_trigger_hardware_control_train_calibration");
	create_insn	(x=0XFFFD08C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD08CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD08EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD08FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0912);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD0922,	0X2);
	create_insn	(0XFFFD0924);
	create_insn	(x=0XFFFD0926);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD092E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD093A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD093E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0948);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD094A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD0960);
	op_stkvar	(x,	1);
	make_array	(0XFFFD0966,	0X2);
	create_insn	(0XFFFD0968);
	create_insn	(x=0XFFFD096C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD097E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0994);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD099C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD09A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD09BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0A34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0A40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0A5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0A78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0A80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0AB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0B6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0C04);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD0C1C);
	create_insn	(x=0XFFFD0C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0C32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0C40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0C42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0C62);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0CFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0D20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0D32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0D84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0DFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0E9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0F18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0F98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD0FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD0FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1034);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD103C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1048);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD104A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1050);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD105C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD105E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD106E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1084);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1094);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD109A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD10BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD10F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1106);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1108);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD110E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1110);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1124);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1126);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1134);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1140);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1160);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1176);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1192);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD119C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD11A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD11C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1208);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1214);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1220);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD122C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD127C);
	create_insn	(0XFFFD129C);
	create_insn	(x=0XFFFD12A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12BC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD12C0);
	create_insn	(x=0XFFFD12C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD12F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD12FA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD12FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1332);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1338);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1340);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1342);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1346);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD134C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1356);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD135C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1360);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1364);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD136C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1380);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1388);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD138A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1398);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD13B2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD13B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD13CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD13D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD13D4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD13D8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD13E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD13F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD140C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1418);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1422);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD142C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1430);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1436);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD143A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD143C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1448);
	create_insn	(0XFFFD145A);
	create_insn	(0XFFFD145E);
	create_insn	(0XFFFD1466);
	create_insn	(0XFFFD1476);
	create_insn	(0XFFFD147C);
	create_insn	(0XFFFD1484);
	create_insn	(0XFFFD149E);
	create_insn	(x=0XFFFD14A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD14AE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD14B2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD14B6);
	op_stkvar	(x,	1);
	make_array	(0XFFFD14BA,	0X2);
	create_insn	(0XFFFD14BC);
	create_insn	(x=0XFFFD14C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD14D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD14FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD153C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD15BC);
	create_insn	(x=0XFFFD15F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD1606);
	create_insn	(x=0XFFFD1608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD161C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD1642);
	create_insn	(x=0XFFFD1656);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD166E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD1686,	0X2);
	create_dword	(x=0XFFFD1688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFD168C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD1690);
	create_insn	(x=0XFFFD169E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD16E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD16F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD16FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD16FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1702);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1712);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1714);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1718);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD171C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1724);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD174C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD174E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1756);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1762);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1764);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD176C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD176E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD178A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1790);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1794);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD179E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17B6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17BE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD17C8);
	create_insn	(x=0XFFFD17D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD17DE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD17FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1806);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD180C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1816);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD181C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD182E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1832);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1842);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1846);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1854);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1868);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD187E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1882);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1888);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD188C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1892);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1894);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD189A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD189C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD18AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD18B8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD18BC);
	create_insn	(x=0XFFFD18C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD18C6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD18CA);
	create_insn	(x=0XFFFD18D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD18DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD18E4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD18EA);
	create_insn	(x=0XFFFD18F4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD18FA);
	create_insn	(x=0XFFFD190A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD190C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1912);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1914);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD191A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1924);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD192E);
	create_insn	(x=0XFFFD1936);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1944);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1968);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD196A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1970);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1988);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD198C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD199E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19B0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD19D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD19F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1A46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1A8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1ABA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1ABE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1ACE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1AD4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1ADA);
	create_insn	(x=0XFFFD1AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1AE4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1AE8);
	create_insn	(x=0XFFFD1AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1AFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B04);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1B0C);
	create_insn	(0XFFFD1B16);
	create_insn	(x=0XFFFD1B1C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1B24);
	create_insn	(x=0XFFFD1B28);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1B2C);
	create_insn	(x=0XFFFD1B40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1B4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B7A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1B94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1B9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD1BAE);
	create_insn	(x=0XFFFD1BB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD1BC4);
	create_insn	(x=0XFFFD1BD4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1BD8);
	create_insn	(0XFFFD1BF8);
	create_insn	(x=0XFFFD1BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1C12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1C1A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1C20);
	set_name	(0XFFFD1C20,	"host_vref_training_by_software");
	create_insn	(x=0XFFFD1C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CD2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1CEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1D44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD1D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1D9E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DE0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1DE6);
	create_insn	(x=0XFFFD1DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1DFA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1E8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1EDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F18);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD1F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F62);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F7A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FBE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FD2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD1FDA);
	create_insn	(x=0XFFFD1FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD1FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD200C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2012);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2018);
	create_insn	(x=0XFFFD2028);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD202A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD203A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD203C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2040);
	create_insn	(x=0XFFFD2044);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD204A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD206E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2070);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2072);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2076);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2080);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2090);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20CA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD20FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD210A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2110);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2114);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2116);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD211A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2122);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2126);
	create_insn	(x=0XFFFD2130);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2132);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2138);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD213A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2140);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2142);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2148);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD214A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2150);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2152);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2158);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD215A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD216A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD216C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2170);
	create_insn	(x=0XFFFD217A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD218A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD21B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD21F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2206);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD220C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2220);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD222E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2238);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2240);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2252);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2276);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2278);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD227A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2282);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2284);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2286);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD228C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD228E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2290);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2294);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD22A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD22F8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2316);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD231A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2328);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD232A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2330);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2332);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2338);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD233A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2340);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2342);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2356);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD235C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2364);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2372);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD238E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2390);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2396);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2398);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD239E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD23CE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD23D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD23F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD23FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2400);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2404);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2408);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2410);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2422);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD242E);
	create_insn	(x=0XFFFD2430);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2434);
	create_insn	(x=0XFFFD243E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2440);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2446);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2464);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2470);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2474);
	create_insn	(x=0XFFFD2484);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2486);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD248A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD249A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD249C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24A4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD24AA);
	create_insn	(x=0XFFFD24B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD24F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2500);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2506);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2508);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2518);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD251A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD251E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2528);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD252C);
	create_insn	(x=0XFFFD2538);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD254A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD254E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2556);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD256C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2570);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2576);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD257C);
	create_insn	(0XFFFD2580);
	create_insn	(x=0XFFFD2584);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2588);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD258C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD258E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD259C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD259E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD25A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD25C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD25E2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD25EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD2600);
	create_insn	(x=0XFFFD2608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD2616);
	create_insn	(x=0XFFFD261C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD261E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2622);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD263E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD264A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD264C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2652);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD2658);
	create_insn	(0XFFFD265E);
	create_insn	(x=0XFFFD2662);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD266C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD268A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD269E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD26AC);
	create_insn	(x=0XFFFD26BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD26BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD26C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD26D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD26E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD26E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD26F0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD26F6);
	create_insn	(x=0XFFFD26FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD2712,	0X2);
	create_insn	(0XFFFD2714);
	create_insn	(x=0XFFFD2726);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2746);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2754);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD27BA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD27BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD27CC);
	make_array	(0XFFFD27FE,	0X2);
	create_insn	(0XFFFD2800);
	create_insn	(x=0XFFFD2806);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD281A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD281C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2824);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2828);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD283C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD283E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2846);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD284A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD286E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2878);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD287C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2890);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2892);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD289A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD289E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD28A8);
	create_insn	(0XFFFD28B6);
	create_insn	(x=0XFFFD28C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD28C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD28CE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD28D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD28E6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD28E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD28F0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD28F4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD28FC);
	create_insn	(x=0XFFFD2902);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD290C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2912);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2916);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD294E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2958);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD295A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2962);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2966);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2970);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD298C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2996);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD29A0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD29A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD29C2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD29C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD29E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD29E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD29FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2A06);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2A0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2A28);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2A4A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2A4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A62);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2A6C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2A70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A7A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2A86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2A8E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2A92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2ADE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2AE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2AE8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2AF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2B0A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2B0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2B2C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2B30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2B4E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2B52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2B70);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2B74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2B8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2B92);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2B96);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2BB4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2BCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2BD6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2BDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2C1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2C2E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2C32);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C46);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2C50);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2C54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2C72);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2C76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2C8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2C94);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2C98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2CB6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2CBA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2CD8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2CF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2CFA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2CFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2D1C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2D20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2D3E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2D42);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD2D5A);
	create_insn	(0XFFFD2D70);
	create_insn	(x=0XFFFD2D76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2D80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2D8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2DCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2DD6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2DDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2E14);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E2E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2E36);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2E58);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E66);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2E7A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2E7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2E94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2E9C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2EBE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2EC2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2ED6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2ED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2EE0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2EFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2F02);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2F06);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2F30);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2F34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F3E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2F52);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2F56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2F74);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2F78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2F8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2F96);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2F9A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2FB8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2FDA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD2FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD2FF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD2FFC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3000);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD300A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3014);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3016);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD301E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3022);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3044);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3046);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3056);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3060);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3062);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD306A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD306E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3078);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3082);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD308C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3090);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD309A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD30AE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD30B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD30D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD30D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD30EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD30F2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD30F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3100);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD310A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD310C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3114);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3118);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3122);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD312C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD312E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3136);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD313A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3144);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD314E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3158);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD315C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3166);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3172);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD317A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD317E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3184);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD3196);
	create_insn	(0XFFFD31AC);
	create_insn	(x=0XFFFD31B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD31BC,	"unsigned int",	0);
	set_cmt	(0XFFFD31C2,	"void *",	0);
	create_insn	(x=0XFFFD31C2);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD31C4,	"int",	0);
	set_cmt	(0XFFFD31CA,	"_DWORD",	0);
	set_cmt	(0XFFFD31D0,	"_DWORD",	0);
	create_insn	(x=0XFFFD31D0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD31DA,	"_DWORD",	0);
	create_insn	(x=0XFFFD31DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD31E4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD31F0,	"char *",	0);
	create_insn	(x=0XFFFD31F0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD320E,	"int",	0);
	set_cmt	(0XFFFD3210,	"unsigned int",	0);
	set_cmt	(0XFFFD3212,	"void *",	0);
	create_insn	(x=0XFFFD3212);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD3218,	"_DWORD",	0);
	set_cmt	(0XFFFD321E,	"_DWORD",	0);
	create_insn	(x=0XFFFD321E);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD3228,	"_DWORD",	0);
	create_insn	(x=0XFFFD3228);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3232);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD323E,	"char *",	0);
	create_insn	(x=0XFFFD323E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3280);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD328A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD328C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3290);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD32B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3A98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3AA2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3AA4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3AAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3AB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3ABE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3C72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3C7E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3C82);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD3C90);
	create_insn	(0XFFFD3CB2);
	set_cmt	(0XFFFD3CB6,	"char *",	0);
	create_insn	(x=0XFFFD3CB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3CC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD3CD4);
	create_insn	(x=0XFFFD3D18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3D22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3D2C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3D30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3D54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3D56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD3D5E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD3D62);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD3D70);
	create_insn	(x=0XFFFD3D74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD3E0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD3E1C);
	create_insn	(0XFFFD3E2C);
	create_insn	(0XFFFD3E5A);
	create_insn	(0XFFFD3E68);
	set_cmt	(0XFFFD3E78,	"void *",	0);
	create_insn	(x=0XFFFD3E78);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD3E7A,	"_DWORD",	0);
	set_cmt	(0XFFFD3E80,	"_DWORD",	0);
	make_array	(0XFFFD3E8A,	0X2);
	create_insn	(0XFFFD3E8C);
	create_insn	(0XFFFD3EBA);
	create_insn	(0XFFFD3EC8);
	set_cmt	(0XFFFD3ED8,	"void *",	0);
	create_insn	(x=0XFFFD3ED8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD3EDA,	"_DWORD",	0);
	set_cmt	(0XFFFD3EE0,	"_DWORD",	0);
	make_array	(0XFFFD3EEA,	0X2);
	create_insn	(0XFFFD3EEC);
	make_array	(0XFFFD3EF6,	0X2);
	create_insn	(0XFFFD3EF8);
	make_array	(0XFFFD3F02,	0X2);
	create_insn	(0XFFFD3F04);
	create_insn	(0XFFFD3F08);
	make_array	(0XFFFD3F22,	0X2);
	create_insn	(0XFFFD3F24);
	set_cmt	(0XFFFD3F8A,	"switch 4 cases ",	0);
	set_cmt	(0XFFFD3F8E,	"switch jump",	0);
	set_cmt	(0XFFFD3F92,	"jump table for switch statement",	0);
	create_byte	(0XFFFD3F92);
	set_name	(0XFFFD3F92,	"jpt_FFFD3F8E");
	create_byte	(0XFFFD3F93);
	create_byte	(0XFFFD3F94);
	create_byte	(0XFFFD3F95);
	create_insn	(0XFFFD3F96);
	set_cmt	(0XFFFD3FA6,	"jumptable FFFD3F8E default case",	1);
	set_name	(0XFFFD3FA6,	"def_FFFD3F8E");
	set_cmt	(0XFFFD3FB0,	"jumptable FFFD3F8E case 3",	1);
	create_insn	(0XFFFD3FB0);
	set_cmt	(0XFFFD3FBC,	"jumptable FFFD3F8E case 0",	1);
	create_insn	(0XFFFD3FBC);
	set_cmt	(0XFFFD3FC8,	"jumptable FFFD3F8E cases 1,2",	1);
	create_insn	(0XFFFD3FC8);
	create_insn	(0XFFFD3FD2);
	create_insn	(0XFFFD3FD8);
	make_array	(0XFFFD3FDE,	0X2);
	create_insn	(0XFFFD3FE0);
	create_insn	(0XFFFD3FEC);
	create_insn	(0XFFFD4006);
	create_insn	(0XFFFD4010);
	create_insn	(x=0XFFFD4020);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4082);
	op_hex		(x,	1);
	create_insn	(0XFFFD40A8);
	create_insn	(x=0XFFFD40B0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD40BA);
	op_hex		(x,	1);
	create_insn	(0XFFFD40C0);
	create_insn	(0XFFFD40C8);
	create_insn	(x=0XFFFD40DE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4118);
	create_insn	(0XFFFD4128);
	create_insn	(0XFFFD4160);
	create_insn	(0XFFFD4166);
	create_insn	(0XFFFD419A);
	create_insn	(0XFFFD41A0);
	create_insn	(x=0XFFFD41A6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD41DC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD41E0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4204);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4214);
	create_insn	(x=0XFFFD421A);
	op_hex		(x,	1);
	create_insn	(0XFFFD4226);
	create_insn	(x=0XFFFD4234);
	op_hex		(x,	1);
	create_insn	(0XFFFD423C);
	make_array	(0XFFFD4242,	0X2);
	create_insn	(0XFFFD4244);
	create_insn	(x=0XFFFD424C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4256);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4264);
	create_insn	(x=0XFFFD426E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4272);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4282);
	op_stkvar	(x,	1);
	make_array	(0XFFFD4292,	0X2);
	create_insn	(0XFFFD4294);
	create_insn	(x=0XFFFD429E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD42A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD42B2);
	op_stkvar	(x,	1);
	make_array	(0XFFFD42C2,	0X2);
	create_insn	(0XFFFD42C4);
	create_insn	(x=0XFFFD4300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4320);
	op_hex		(x,	1);
	create_insn	(0XFFFD4328);
	create_insn	(x=0XFFFD4334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD433E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD434E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4366);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD436A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4392);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD439A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD43A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD43BA,	0X2);
	create_insn	(0XFFFD43BC);
	create_insn	(x=0XFFFD43EE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD43F8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4400);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4406);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4434);
	op_hex		(x,	1);
	create_insn	(0XFFFD443C);
	create_insn	(x=0XFFFD449E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD44B2,	0X2);
	create_insn	(0XFFFD44B4);
	create_insn	(x=0XFFFD44C2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD44C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD44D8);
	make_array	(0XFFFD44DE,	0X2);
	create_insn	(0XFFFD44E0);
	create_insn	(x=0XFFFD44E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD44F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD450A);
	create_insn	(x=0XFFFD4540);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD454C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD458A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD459A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD459E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD45AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD45C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD45CE);
	create_insn	(x=0XFFFD45D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD45E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD45EE,	0X2);
	create_insn	(0XFFFD45F0);
	create_insn	(x=0XFFFD4600);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4602);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4608);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD460C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4610);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4612);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4626);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD462C);
	set_name	(0XFFFD462C,	"nullsub_7");
	make_array	(0XFFFD462E,	0X2);
	create_insn	(0XFFFD4630);
	create_insn	(x=0XFFFD463A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD463E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4642);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4646);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4648);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD464C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD466C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4690);
	op_hex		(x,	1);
	set_cmt	(0XFFFD46A8,	"void *",	0);
	set_cmt	(0XFFFD46AE,	"int",	0);
	set_cmt	(0XFFFD46B0,	"unsigned int",	0);
	create_insn	(0XFFFD46C6);
	create_insn	(0XFFFD46D4);
	create_insn	(x=0XFFFD46F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD46FC);
	op_stkvar	(x,	1);
	make_array	(0XFFFD470E,	0X2);
	create_insn	(0XFFFD4710);
	create_insn	(x=0XFFFD4712);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD471A,	"void *",	0);
	set_cmt	(0XFFFD471E,	"_DWORD",	0);
	create_insn	(x=0XFFFD4720);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	create_insn	(x=0XFFFD4724);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	set_cmt	(0XFFFD472C,	"_DWORD",	0);
	create_insn	(0XFFFD4736);
	create_insn	(x=0XFFFD473E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4742);
	op_stkvar	(x,	1);
	make_array	(0XFFFD4752,	0X2);
	create_insn	(0XFFFD4754);
	create_insn	(x=0XFFFD4768);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD477A,	"unsigned int",	0);
	create_insn	(x=0XFFFD477A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4786,	"void *",	0);
	create_insn	(0XFFFD4798);
	set_cmt	(0XFFFD47A8,	"int",	0);
	create_insn	(0XFFFD47C2);
	create_insn	(0XFFFD47DA);
	make_array	(0XFFFD47E2,	0X2);
	create_insn	(0XFFFD47E4);
	create_insn	(x=0XFFFD47EE);
	op_hex		(x,	1);
	create_insn	(0XFFFD47F8);
	create_insn	(x=0XFFFD480C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XFFFD4818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFFFD481C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4828);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	create_insn	(x=0XFFFD482C);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	create_insn	(x=0XFFFD4832);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	create_insn	(x=0XFFFD4834);
	op_plain_offset	(x,	1,	0XFFFE5708);
	op_plain_offset	(x,	129,	0XFFFE5708);
	create_insn	(x=0XFFFD4836);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD483C);
	create_insn	(x=0XFFFD4848);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4850);
	create_insn	(0XFFFD4868);
	create_insn	(x=0XFFFD486C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4896);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD48BA,	0X2);
	create_insn	(0XFFFD48BC);
	make_array	(0XFFFD48C2,	0X2);
	create_insn	(0XFFFD48C4);
	make_array	(0XFFFD48CA,	0X2);
	create_insn	(0XFFFD48CC);
	create_insn	(x=0XFFFD48D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD48D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD48FC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4902);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD493E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD4954);
	create_insn	(x=0XFFFD4958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD495A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD496E);
	set_cmt	(0XFFFD4974,	"switch 4 cases ",	0);
	set_cmt	(0XFFFD497E,	"switch jump",	0);
	set_cmt	(0XFFFD4982,	"jump table for switch statement",	0);
	create_byte	(0XFFFD4982);
	set_name	(0XFFFD4982,	"jpt_FFFD497E");
	create_byte	(0XFFFD4983);
	create_byte	(0XFFFD4984);
	create_byte	(0XFFFD4985);
	set_cmt	(0XFFFD4986,	"jumptable FFFD497E case 68",	1);
	create_insn	(0XFFFD4986);
	create_insn	(x=0XFFFD4994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4996);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD49AA,	"jumptable FFFD497E case 67",	1);
	create_insn	(0XFFFD49AA);
	set_cmt	(0XFFFD49BE,	"jumptable FFFD497E cases 65,66",	1);
	create_insn	(0XFFFD49BE);
	create_insn	(x=0XFFFD49C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD49E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD4A16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4A22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD4A3A);
	create_insn	(x=0XFFFD4A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4A64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4A7A);
	op_hex		(x,	1);
	set_cmt	(0XFFFD4A7E,	"char *",	0);
	set_cmt	(0XFFFD4A80,	"char *",	0);
	create_insn	(x=0XFFFD4A8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4A92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD4AA2);
	create_insn	(0XFFFD4AAE);
	create_insn	(0XFFFD4AB2);
	create_insn	(x=0XFFFD4AC2);
	op_hex		(x,	1);
	create_insn	(0XFFFD4ACA);
	create_insn	(0XFFFD4AD4);
	create_insn	(0XFFFD4ADE);
	create_insn	(x=0XFFFD4AF2);
	op_hex		(x,	1);
	create_insn	(0XFFFD4B02);
	set_cmt	(0XFFFD4B06,	"jumptable FFFD497E default case",	1);
	create_insn	(0XFFFD4B06);
	set_name	(0XFFFD4B06,	"def_FFFD497E");
	make_array	(0XFFFD4B0A,	0X2);
	create_dword	(x=0XFFFD4B0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFFFD4B10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD4B38,	"char *",	0);
	set_cmt	(0XFFFD4B44,	"char *",	0);
	make_array	(0XFFFD4B66,	0X2);
	create_insn	(0XFFFD4B68);
	create_insn	(0XFFFD4B82);
	set_cmt	(0XFFFD4B86,	"char *",	0);
	set_cmt	(0XFFFD4B96,	"char *",	0);
	set_cmt	(0XFFFD4BA6,	"char *",	0);
	set_cmt	(0XFFFD4BEE,	"char *",	0);
	create_insn	(0XFFFD4C0E);
	create_insn	(0XFFFD4C14);
	create_insn	(x=0XFFFD4C1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4C68);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4C7E,	"switch 9 cases ",	0);
	set_cmt	(0XFFFD4C82,	"switch jump",	0);
	set_cmt	(0XFFFD4C86,	"jump table for switch statement",	0);
	create_byte	(0XFFFD4C86);
	set_name	(0XFFFD4C86,	"jpt_FFFD4C82");
	create_byte	(0XFFFD4C87);
	create_byte	(0XFFFD4C88);
	create_byte	(0XFFFD4C89);
	create_byte	(0XFFFD4C8A);
	create_byte	(0XFFFD4C8B);
	create_byte	(0XFFFD4C8C);
	create_byte	(0XFFFD4C8D);
	create_byte	(0XFFFD4C8E);
	set_cmt	(0XFFFD4C90,	"jumptable FFFD4C82 case 0",	1);
	create_insn	(0XFFFD4C90);
	set_cmt	(0XFFFD4C94,	"jumptable FFFD4C82 default case",	1);
	create_insn	(0XFFFD4C94);
	set_name	(0XFFFD4C94,	"def_FFFD4C82");
	set_cmt	(0XFFFD4CB0,	"jumptable FFFD4C82 case 7",	1);
	create_insn	(0XFFFD4CB0);
	set_cmt	(0XFFFD4CD6,	"jumptable FFFD4C82 case 4",	1);
	create_insn	(x=0XFFFD4CD6);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4CF4,	"jumptable FFFD4C82 case 6",	1);
	create_insn	(x=0XFFFD4CF4);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4D12,	"jumptable FFFD4C82 case 5",	1);
	create_insn	(0XFFFD4D12);
	set_cmt	(0XFFFD4D34,	"jumptable FFFD4C82 case 2",	1);
	create_insn	(0XFFFD4D34);
	create_insn	(x=0XFFFD4D4A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4D58,	"jumptable FFFD4C82 case 1",	1);
	create_insn	(0XFFFD4D58);
	set_cmt	(0XFFFD4D74,	"jumptable FFFD4C82 case 3",	1);
	create_insn	(0XFFFD4D74);
	create_insn	(x=0XFFFD4DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DAE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DB8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4DBE,	"jumptable FFFD4C82 case 8",	1);
	create_insn	(0XFFFD4DBE);
	create_insn	(x=0XFFFD4DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E02);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E16);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4E24);
	create_insn	(0XFFFD4E50);
	create_insn	(x=0XFFFD4E6C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD4E72,	"m",	0);
	create_insn	(x=0XFFFD4E78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E82);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E86);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E8A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4E90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4EA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4EA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD4EB6);
	create_insn	(0XFFFD4EBA);
	create_insn	(x=0XFFFD4EC6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4ECE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4EDC);
	op_stkvar	(x,	1);
	create_dword	(x=0XFFFD4EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD4EEC);
	create_insn	(x=0XFFFD4EF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4F2A);
	op_hex		(x,	1);
	create_insn	(0XFFFD4F68);
	create_insn	(x=0XFFFD4F6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD4F9A,	0X2);
	create_insn	(0XFFFD4F9C);
	set_name	(0XFFFD4F9C,	"ASSERT");
	create_insn	(x=0XFFFD4FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4FA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4FB6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD4FC8);
	create_insn	(x=0XFFFD4FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4FDA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD4FDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD4FF6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD5054);
	create_insn	(x=0XFFFD509A);
	op_stkvar	(x,	1);
	make_array	(0XFFFD50A6,	0X2);
	create_insn	(0XFFFD50A8);
	create_insn	(x=0XFFFD50AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD50AE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD50B0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD50C4);
	create_insn	(x=0XFFFD50DE);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD50EC);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD50EE);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD50F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD50F4);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD50F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD50FA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD50FE);
	create_insn	(x=0XFFFD5108);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5122);
	create_insn	(0XFFFD5124);
	create_insn	(0XFFFD5128);
	create_insn	(x=0XFFFD512C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5132);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD513A);
	op_stkvar	(x,	1);
	make_array	(0XFFFD513E,	0X2);
	create_insn	(x=0XFFFD5140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD514C);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD5156);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD515E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5164);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFD5168,	"memalign");
	create_insn	(x=0XFFFD5174);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD518A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5190);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFD5194,	"calloc");
	create_insn	(x=0XFFFD51A0);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	set_cmt	(0XFFFD51B6,	"unsigned int",	0);
	set_cmt	(0XFFFD51B8,	"int",	0);
	create_insn	(x=0XFFFD51C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD51C6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD51CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD51CE);
	op_stkvar	(x,	1);
	make_array	(0XFFFD51D2,	0X2);
	create_insn	(0XFFFD51D4);
	set_name	(0XFFFD51D4,	"free");
	create_insn	(0XFFFD51D8);
	create_insn	(x=0XFFFD51F6);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD51FC);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD5200);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD5206);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD520C);
	create_insn	(x=0XFFFD521E);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD5224);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD522A);
	op_plain_offset	(x,	1,	0XFFFE1470);
	op_plain_offset	(x,	129,	0XFFFE1470);
	create_insn	(x=0XFFFD522C);
	op_stkvar	(x,	1);
	make_array	(0XFFFD5232,	0X2);
	create_insn	(0XFFFD5234);
	set_name	(0XFFFD5234,	"page_alloc");
	create_insn	(0XFFFD5238);
	create_insn	(0XFFFD523C);
	create_insn	(0XFFFD5248);
	set_name	(0XFFFD5248,	"memcpy");
	create_insn	(x=0XFFFD5270);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5278);
	op_hex		(x,	1);
	create_insn	(0XFFFD52E8);
	create_insn	(0XFFFD5324);
	create_insn	(0XFFFD5348);
	create_insn	(0XFFFD5350);
	set_name	(0XFFFD5350,	"memset");
	create_insn	(x=0XFFFD5364);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5370);
	op_hex		(x,	1);
	create_insn	(0XFFFD53BC);
	create_insn	(0XFFFD53E4);
	create_insn	(0XFFFD5408);
	create_insn	(0XFFFD540C);
	create_insn	(0XFFFD5410);
	create_insn	(0XFFFD5434);
	create_insn	(0XFFFD5458);
	create_insn	(0XFFFD546C);
	create_insn	(0XFFFD548A);
	create_insn	(0XFFFD548E);
	make_array	(0XFFFD5492,	0X2);
	create_insn	(0XFFFD5494);
	create_insn	(0XFFFD54B0);
	create_insn	(0XFFFD54D0);
	create_insn	(0XFFFD54E0);
	create_insn	(0XFFFD54FE);
	make_array	(0XFFFD5502,	0X2);
	create_insn	(0XFFFD5504);
	create_insn	(0XFFFD5508);
	create_insn	(0XFFFD5518);
	create_insn	(0XFFFD551C);
	create_insn	(x=0XFFFD5524);
	op_hex		(x,	1);
	create_insn	(0XFFFD5534);
	create_insn	(0XFFFD5538);
	create_insn	(0XFFFD5544);
	create_insn	(0XFFFD5570);
	create_insn	(x=0XFFFD5576);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD557C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5580);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD55EA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD55F0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD55F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD55FA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5608);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5612);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD561C);
	create_insn	(0XFFFD5628);
	create_insn	(0XFFFD5680);
	make_array	(0XFFFD568A,	0X2);
	create_insn	(0XFFFD568C);
	create_insn	(0XFFFD56F6);
	create_insn	(x=0XFFFD570C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5714);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD572E);
	create_insn	(x=0XFFFD5744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD5772);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD57B6);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD57E2);
	create_insn	(0XFFFD5814);
	create_insn	(0XFFFD583E);
	create_insn	(0XFFFD5852);
	create_insn	(0XFFFD5872);
	create_insn	(0XFFFD589C);
	create_insn	(0XFFFD58A0);
	create_insn	(0XFFFD58B2);
	create_insn	(0XFFFD58C8);
	create_insn	(0XFFFD58F0);
	create_insn	(0XFFFD5918);
	create_insn	(0XFFFD5940);
	create_insn	(x=0XFFFD5946);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5954);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5964);
	op_hex		(x,	1);
	make_array	(0XFFFD5986,	0X2);
	create_insn	(0XFFFD5988);
	create_insn	(x=0XFFFD59C6);
	op_hex		(x,	1);
	create_insn	(0XFFFD5A08);
	create_insn	(0XFFFD5A26);
	create_insn	(0XFFFD5A4A);
	create_insn	(0XFFFD5A6E);
	create_insn	(0XFFFD5A86);
	create_insn	(0XFFFD5A9C);
	create_insn	(0XFFFD5AB4);
	create_insn	(x=0XFFFD5AEE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5B12);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5B1A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5B1E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5BA2);
	create_insn	(0XFFFD5BBC);
	create_insn	(0XFFFD5BD4);
	create_insn	(0XFFFD5C02);
	create_insn	(0XFFFD5C18);
	create_insn	(0XFFFD5C30);
	create_insn	(0XFFFD5C46);
	create_insn	(0XFFFD5C5E);
	create_insn	(0XFFFD5C6C);
	make_array	(0XFFFD5C72,	0X2);
	create_dword	(0XFFFD5C74);
	create_double	(0XFFFD5C78);
	create_double	(0XFFFD5C80);
	create_insn	(0XFFFD5C88);
	create_insn	(x=0XFFFD5CA0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5CB2);
	set_cmt	(0XFFFD5CD8,	"jumptable FFFD5CEE case 14",	1);
	set_cmt	(0XFFFD5CE6,	"switch 91 cases ",	0);
	create_insn	(x=0XFFFD5CEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD5CEE,	"switch jump",	0);
	make_array	(0XFFFD5CF2,	0X2);
	set_cmt	(0XFFFD5CF4,	"jump table for switch statement",	0);
	create_dword	(x=0XFFFD5CF4);
	make_array	(x,	0X5B);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD5E60);
	set_cmt	(0XFFFD5E68,	"jumptable FFFD5CEE case 80",	1);
	create_insn	(x=0XFFFD5E68);
	op_hex		(x,	1);
	set_cmt	(0XFFFD5E6C,	"jumptable FFFD5CEE case 88",	1);
	create_insn	(x=0XFFFD5E6C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5E74);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5E7C);
	op_hex		(x,	1);
	set_cmt	(0XFFFD5E90,	"jumptable FFFD5CEE case 38",	1);
	create_insn	(x=0XFFFD5E90);
	op_hex		(x,	1);
	set_cmt	(0XFFFD5E94,	"jumptable FFFD5CEE case 70",	1);
	create_insn	(x=0XFFFD5E9A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5E9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5EAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5EB2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5EBE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5ECC);
	op_hex		(x,	1);
	create_insn	(0XFFFD5ED8);
	create_insn	(x=0XFFFD5EE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5EE8);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD5EFC,	"jumptable FFFD5CEE case 33",	1);
	create_insn	(x=0XFFFD5EFC);
	op_hex		(x,	1);
	set_cmt	(0XFFFD5F00,	"jumptable FFFD5CEE case 65",	1);
	create_insn	(x=0XFFFD5F06);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F16);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F1E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F28);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5F30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F36);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F52);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F54);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5F70);
	create_insn	(x=0XFFFD5F76);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5F80);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5F94);
	create_insn	(x=0XFFFD5F9E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FA8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD5FBA);
	create_insn	(x=0XFFFD5FBE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5FCA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FDA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD5FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FE6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD5FEE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD5FF8,	"jumptable FFFD5CEE case 85",	1);
	create_insn	(x=0XFFFD5FF8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6000);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6008);
	op_hex		(x,	1);
	set_cmt	(0XFFFD601C,	"jumptable FFFD5CEE case 67",	1);
	create_insn	(0XFFFD601C);
	create_insn	(x=0XFFFD6020);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6026);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD603A,	"jumptable FFFD5CEE case 11",	1);
	create_insn	(x=0XFFFD603A);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6040,	"jumptable FFFD5CEE case 13",	1);
	create_insn	(x=0XFFFD6040);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6046,	"jumptable FFFD5CEE cases 16-25",	1);
	create_insn	(0XFFFD6046);
	create_insn	(x=0XFFFD6058);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6062,	"jumptable FFFD5CEE case 90",	1);
	create_insn	(x=0XFFFD6062);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6068,	"jumptable FFFD5CEE case 0",	1);
	create_insn	(x=0XFFFD6068);
	op_hex		(x,	1);
	set_cmt	(0XFFFD606E,	"jumptable FFFD5CEE case 3",	1);
	create_insn	(x=0XFFFD606E);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6074,	"jumptable FFFD5CEE case 5",	1);
	create_insn	(0XFFFD6074);
	create_insn	(x=0XFFFD6078);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD607A);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD608A,	"jumptable FFFD5CEE cases 68,73",	1);
	create_insn	(x=0XFFFD608A);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6092);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD609A);
	op_hex		(x,	1);
	set_cmt	(0XFFFD60AE,	"jumptable FFFD5CEE case 72",	1);
	create_insn	(x=0XFFFD60AE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD60B4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD60B8);
	op_hex		(x,	1);
	set_cmt	(0XFFFD60BE,	"jumptable FFFD5CEE case 74",	1);
	create_insn	(x=0XFFFD60BE);
	op_hex		(x,	1);
	set_cmt	(0XFFFD60C4,	"jumptable FFFD5CEE case 76",	1);
	create_insn	(x=0XFFFD60C4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD60CA);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD60CE);
	op_hex		(x,	1);
	set_cmt	(0XFFFD60D4,	"jumptable FFFD5CEE case 78",	1);
	create_insn	(0XFFFD60D4);
	create_insn	(x=0XFFFD60D8);
	op_hex		(x,	1);
	set_cmt	(0XFFFD60EC,	"jumptable FFFD5CEE case 83",	1);
	create_insn	(0XFFFD60EC);
	create_insn	(x=0XFFFD60F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD60FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6106);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD610C);
	op_hex		(x,	1);
	set_cmt	(0XFFFD6114,	"jumptable FFFD5CEE case 56",	1);
	create_insn	(x=0XFFFD6114);
	op_hex		(x,	1);
	set_cmt	(0XFFFD611A,	"jumptable FFFD5CEE case 84",	1);
	create_insn	(x=0XFFFD611A);
	op_hex		(x,	1);
	create_insn	(0XFFFD6120);
	set_cmt	(0XFFFD612C,	"jumptable FFFD5CEE default case",	1);
	create_insn	(0XFFFD612C);
	create_insn	(x=0XFFFD6130);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6132);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6144);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6148);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD615A);
	create_insn	(x=0XFFFD615C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD615E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6170);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD617A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD617C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD618E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6194);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD619E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61A2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD61B4);
	create_insn	(0XFFFD61B8);
	create_insn	(0XFFFD61BC);
	create_insn	(x=0XFFFD61C0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD61CE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD61D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61EA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD61F0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD61F8);
	create_insn	(x=0XFFFD61FC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6208);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD620E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6210);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6216);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD621C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6228);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6238);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD623E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6246);
	op_hex		(x,	1);
	create_insn	(0XFFFD625A);
	create_insn	(0XFFFD6266);
	create_insn	(0XFFFD6272);
	create_insn	(0XFFFD627E);
	create_insn	(x=0XFFFD628A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD628E);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD62A0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD62B2);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD62B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD62CC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD62D2);
	op_hex		(x,	1);
	create_insn	(0XFFFD62E4);
	create_insn	(0XFFFD62E8);
	create_insn	(x=0XFFFD62F2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD62FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD62FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6300);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6306);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6318);
	set_name	(0XFFFD6318,	"snprintf");
	create_insn	(x=0XFFFD631E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6324);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD632C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6334);
	create_insn	(x=0XFFFD633E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6344);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD634C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6354);
	create_insn	(x=0XFFFD635E);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6368);
	create_insn	(x=0XFFFD636A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD6374);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD637C);
	op_plain_offset	(x,	1,	0XFFFE1478);
	op_plain_offset	(x,	129,	0XFFFE1478);
	create_insn	(x=0XFFFD6384);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6388);
	create_insn	(0XFFFD63A0);
	create_insn	(0XFFFD63BC);
	create_insn	(0XFFFD63C0);
	make_array	(0XFFFD63CE,	0X2);
	create_insn	(0XFFFD63D0);
	create_insn	(x=0XFFFD63D6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD63E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD63EA);
	op_stkvar	(x,	1);
	make_array	(0XFFFD63EE,	0X2);
	create_insn	(0XFFFD63F0);
	create_insn	(0XFFFD63FC);
	set_name	(0XFFFD63FC,	"dprintf");
	create_insn	(x=0XFFFD6406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD6408);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6412);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD641A);
	op_stkvar	(x,	1);
	make_array	(0XFFFD6422,	0X2);
	create_dword	(x=0XFFFD6424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD6428);
	create_insn	(x=0XFFFD6436);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD643E,	0X2);
	create_dword	(x=0XFFFD6440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD6444);
	create_insn	(0XFFFD6448);
	set_name	(0XFFFD6448,	"memcmp");
	create_insn	(x=0XFFFD6452);
	op_hex		(x,	1);
	create_insn	(0XFFFD645E);
	create_insn	(x=0XFFFD6468);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6474);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD647A);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6482);
	make_array	(0XFFFD6486,	0X2);
	create_insn	(0XFFFD6488);
	set_name	(0XFFFD6488,	"strcmp");
	create_insn	(0XFFFD648C);
	create_insn	(x=0XFFFD6498);
	op_hex		(x,	1);
	create_insn	(0XFFFD64A2);
	make_array	(0XFFFD64A6,	0X2);
	create_insn	(0XFFFD64A8);
	create_insn	(0XFFFD64B8);
	set_name	(0XFFFD64B8,	"strlcat");
	create_insn	(0XFFFD64E0);
	create_insn	(0XFFFD6504);
	create_insn	(0XFFFD6510);
	create_insn	(0XFFFD6516);
	create_insn	(0XFFFD651C);
	set_name	(0XFFFD651C,	"strlcpy");
	create_insn	(0XFFFD6534);
	create_insn	(0XFFFD6552);
	create_insn	(0XFFFD655C);
	make_array	(0XFFFD6562,	0X2);
	create_insn	(0XFFFD6564);
	set_name	(0XFFFD6564,	"strlen");
	create_insn	(0XFFFD6578);
	create_insn	(0XFFFD657C);
	create_insn	(0XFFFD6584);
	create_insn	(x=0XFFFD6592);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6598);
	set_name	(0XFFFD6598,	"strncmp");
	create_insn	(x=0XFFFD65A2);
	op_hex		(x,	1);
	create_insn	(0XFFFD65B4);
	create_insn	(x=0XFFFD65BE);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD65CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD65D2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD65DA);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD65E2);
	make_array	(0XFFFD65E6,	0X2);
	create_insn	(0XFFFD65E8);
	create_insn	(0XFFFD65F8);
	create_insn	(0XFFFD660E);
	create_insn	(0XFFFD6614);
	create_insn	(0XFFFD6618);
	create_insn	(0XFFFD662A);
	create_insn	(0XFFFD6644);
	create_insn	(0XFFFD665A);
	create_insn	(0XFFFD666A);
	create_insn	(0XFFFD6678);
	create_insn	(0XFFFD667C);
	create_insn	(0XFFFD6680);
	create_insn	(0XFFFD669E);
	set_cmt	(0XFFFD66A6,	"_DWORD",	0);
	set_cmt	(0XFFFD66A8,	"void *",	0);
	set_cmt	(0XFFFD66AA,	"_DWORD",	0);
	create_insn	(0XFFFD66BA);
	create_insn	(0XFFFD66BC);
	create_insn	(0XFFFD66C0);
	set_name	(0XFFFD66C0,	"strtok_r");
	create_insn	(x=0XFFFD66C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD66FA);
	create_insn	(0XFFFD6704);
	make_array	(0XFFFD670A,	0X2);
	create_insn	(0XFFFD670C);
	set_name	(0XFFFD670C,	"heap_insert_free_chunk");
	create_insn	(x=0XFFFD670E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0XFFFD671C,	"m",	0);
	create_insn	(x=0XFFFD6724);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD672A);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6732);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(0XFFFD6738);
	create_insn	(x=0XFFFD6774);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD677E);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6784);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6788);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	make_array	(0XFFFD67B2,	0X2);
	create_dword	(x=0XFFFD67B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFD67B8);
	create_insn	(x=0XFFFD67D6);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD67E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD67EC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD67F0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD67FE);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD6800,	"m",	0);
	create_insn	(x=0XFFFD6800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD680A);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(0XFFFD6812);
	create_insn	(x=0XFFFD6856);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD685C);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD686E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD6870);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6874);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6882);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD6884);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6890);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD68B0);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD68BE);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(0XFFFD68CA);
	create_insn	(0XFFFD68D0);
	create_insn	(0XFFFD68F2);
	create_insn	(0XFFFD68FE);
	create_insn	(x=0XFFFD6906);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD690E);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6916);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(0XFFFD691A);
	create_insn	(x=0XFFFD691E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0XFFFD6936,	0X2);
	create_dword	(x=0XFFFD6938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XFFFD6938,	"m");
	create_insn	(0XFFFD693C);
	create_insn	(0XFFFD694E);
	create_insn	(0XFFFD6950);
	create_insn	(x=0XFFFD6952);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD696C);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6970);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6972);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6974);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(x=0XFFFD6976);
	op_plain_offset	(x,	1,	0XFFFE3F68);
	op_plain_offset	(x,	129,	0XFFFE3F68);
	create_insn	(0XFFFD697C);
	create_insn	(0XFFFD6988);
	create_insn	(0XFFFD6990);
	make_array	(0XFFFD69A2,	0X2);
	create_insn	(0XFFFD69A4);
	create_insn	(x=0XFFFD69A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD69B4);
	op_plain_offset	(x,	1,	0XFFFE148C);
	op_plain_offset	(x,	129,	0XFFFE148C);
	create_insn	(x=0XFFFD69CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0XFFFD6A14);
	create_insn	(x=0XFFFD6A16);
	op_plain_offset	(x,	1,	0XFFFE148C);
	op_plain_offset	(x,	129,	0XFFFE148C);
	make_array	(0XFFFD6A1E,	0X2);
	create_insn	(0XFFFD6A20);
	create_insn	(0XFFFD6A2C);
	make_array	(0XFFFD6A32,	0X2);
	create_insn	(0XFFFD6A34);
	create_insn	(0XFFFD6A40);
	make_array	(0XFFFD6A46,	0X2);
	create_insn	(0XFFFD6A48);
	create_insn	(x=0XFFFD6A60);
	op_hex		(x,	1);
	create_insn	(0XFFFD6A84);
	create_insn	(0XFFFD6AA4);
	create_insn	(0XFFFD6AB4);
	create_insn	(x=0XFFFD6AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6AD8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6B08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6B10);
	op_hex		(x,	1);
	create_insn	(0XFFFD6B30);
	create_insn	(0XFFFD6B40);
	create_insn	(x=0XFFFD6B54);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6B70);
	op_hex		(x,	1);
	create_insn	(0XFFFD6B80);
	create_insn	(0XFFFD6B9C);
	create_insn	(x=0XFFFD6BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6BB0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6BE0);
	create_insn	(x=0XFFFD6C08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6C80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6CD4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6D0C);
	create_insn	(0XFFFD6D18);
	create_insn	(0XFFFD6D20);
	create_insn	(x=0XFFFD6D38);
	op_plain_offset	(x,	1,	0XFFFE03E4);
	op_plain_offset	(x,	129,	0XFFFE03E4);
	create_insn	(x=0XFFFD6D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6D44);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6D50);
	op_plain_offset	(x,	1,	0XFFFE03E4);
	op_plain_offset	(x,	129,	0XFFFE03E4);
	create_insn	(x=0XFFFD6D58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6D5C);
	op_plain_offset	(x,	1,	0XFFFE03EC);
	op_plain_offset	(x,	129,	0XFFFE03EC);
	create_insn	(x=0XFFFD6D60);
	op_plain_offset	(x,	1,	0XFFFE03EC);
	op_plain_offset	(x,	129,	0XFFFE03EC);
	create_insn	(x=0XFFFD6D64);
	op_plain_offset	(x,	1,	0XFFFE03EC);
	op_plain_offset	(x,	129,	0XFFFE03EC);
	create_insn	(x=0XFFFD6D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6D9C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6DC4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6DE4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E64);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E84);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6E98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6ECC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD6EE4);
	create_insn	(0XFFFD6EF8);
	create_insn	(x=0XFFFD6F0C);
	op_plain_offset	(x,	1,	0XFFFE03E4);
	op_plain_offset	(x,	129,	0XFFFE03E4);
	create_insn	(x=0XFFFD6F18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6F40);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6F54);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6F70);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6F88);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD6F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD6FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7008);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7028);
	op_hex		(x,	1);
	create_insn	(0XFFFD7050);
	create_insn	(x=0XFFFD7064);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD706C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7090);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD70E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7128);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD713C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD715C);
	create_insn	(0XFFFD7174);
	set_cmt	(0XFFFD7184,	"unsigned int",	0);
	set_cmt	(0XFFFD7188,	"int",	0);
	set_cmt	(0XFFFD7194,	"void *",	0);
	create_insn	(x=0XFFFD7194);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD719C,	"void *",	0);
	create_insn	(x=0XFFFD719C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD71A0,	"unsigned int",	0);
	set_cmt	(0XFFFD71A4,	"int",	0);
	create_insn	(x=0XFFFD71B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD71C4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD71E0);
	create_insn	(x=0XFFFD71E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD71FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7200);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7204);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD720C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7214);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7218);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD721C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7224);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7244);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7248);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD724C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD725C);
	create_insn	(x=0XFFFD726C);
	op_hex		(x,	1);
	create_insn	(0XFFFD72AC);
	create_insn	(x=0XFFFD72BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD72E8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7300);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7318);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7354);
	create_insn	(0XFFFD7364);
	create_insn	(0XFFFD736C);
	create_insn	(0XFFFD7384);
	create_insn	(0XFFFD73B4);
	create_insn	(0XFFFD7404);
	create_insn	(0XFFFD7410);
	create_insn	(x=0XFFFD7418);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7420);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7438);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD745C);
	create_insn	(x=0XFFFD7478);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7484);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD748C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD74A0);
	create_insn	(0XFFFD74AC);
	create_insn	(x=0XFFFD74E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7528);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD753C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7548);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7554);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7594);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD75AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD75B8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD75BC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD75CC);
	create_insn	(x=0XFFFD75DC);
	op_hex		(x,	1);
	create_insn	(0XFFFD75F4);
	create_insn	(x=0XFFFD7604);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7610);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7620);
	op_hex		(x,	1);
	create_insn	(0XFFFD7638);
	create_insn	(0XFFFD764C);
	create_insn	(x=0XFFFD765C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD766C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7670);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD767C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7688);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD769C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD76AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD76BC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD76DC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD76E0);
	create_insn	(x=0XFFFD76F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7700);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7708);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD770C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7710);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7714);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7724);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7734);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7738);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD773C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7744);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7748);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD774C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7758);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD775C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7760);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7764);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7768);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7770);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7774);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7778);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7780);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7784);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD778C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD77A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD77D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD77E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD77F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7800);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7810);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7818);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD781C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7820);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7828);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD782C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7844);
	create_insn	(0XFFFD7874);
	create_insn	(x=0XFFFD788C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7894);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD789C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD78A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD78A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD78AC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD78C4);
	create_insn	(x=0XFFFD78CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD78D4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD78EC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7904);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7908);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD790C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7910);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7914);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7918);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD791C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7920);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7934);
	create_insn	(x=0XFFFD7944);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD794C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7950);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7954);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7960);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7964);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD796C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7970);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7974);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7978);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD797C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7994);
	create_insn	(x=0XFFFD79A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD79FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A40);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7A48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A54);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7A58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7A90);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7AA8);
	create_insn	(x=0XFFFD7AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7AD8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7AF0);
	create_insn	(x=0XFFFD7B10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B30);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7B40);
	create_insn	(x=0XFFFD7B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C34);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C6C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7C78);
	create_insn	(x=0XFFFD7C90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7C98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D50);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD7D64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7D78);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7D8C);
	create_insn	(x=0XFFFD7DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DC4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7DD4);
	create_insn	(x=0XFFFD7DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E14);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E30);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E38);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7E54);
	create_insn	(x=0XFFFD7E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7E94);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7EAC);
	create_insn	(x=0XFFFD7EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F0C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7F28);
	create_insn	(0XFFFD7F3C);
	create_insn	(x=0XFFFD7F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7F94);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD7FB0);
	create_insn	(0XFFFD7FC4);
	create_insn	(x=0XFFFD7FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD7FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8004);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8018);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8020);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8024);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8028);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8030);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8034);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8044);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8060);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8068);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8074);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8084);
	create_insn	(x=0XFFFD808C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8094);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8098);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD809C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD80A8);
	create_insn	(x=0XFFFD80B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD80B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD80C4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD80D0);
	create_insn	(x=0XFFFD80D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD80E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD80E8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD80F8);
	create_insn	(x=0XFFFD8100);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8108);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD810C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8110);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD811C);
	create_insn	(x=0XFFFD8124);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD812C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8134);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8144);
	create_insn	(x=0XFFFD815C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD816C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8174);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8178);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8180);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8194);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD819C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD81F4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8208);
	create_insn	(x=0XFFFD8210);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8214);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8218);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8220);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD822C);
	create_insn	(x=0XFFFD8234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD823C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8248);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8254);
	create_insn	(x=0XFFFD825C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8264);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD826C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD827C);
	create_insn	(x=0XFFFD8284);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD828C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8290);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8294);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD82A0);
	create_insn	(x=0XFFFD82A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD82B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD82B8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD82C8);
	set_cmt	(0XFFFD82DC,	"void *",	0);
	create_insn	(x=0XFFFD82DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD82E0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD82E4,	"unsigned int",	0);
	set_cmt	(0XFFFD82E8,	"int",	0);
	set_cmt	(0XFFFD82F4,	"switch 7 cases ",	0);
	set_cmt	(0XFFFD82F8,	"switch jump",	0);
	set_cmt	(0XFFFD8300,	"jump table for switch statement",	0);
	create_dword	(x=0XFFFD8300);
	make_array	(x,	0X7);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XFFFD831C,	"jumptable FFFD82F8 default case",	1);
	create_insn	(0XFFFD831C);
	set_cmt	(0XFFFD832C,	"jumptable FFFD82F8 cases 0-3,5,6",	1);
	create_insn	(x=0XFFFD832C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8330);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8348);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8364);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8368);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8378);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8384);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8390);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8394);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD83FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8418);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD842C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8438);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD843C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8444);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8448);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD844C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8454);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD845C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8464);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD846C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8488);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD84FC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8508);
	create_insn	(x=0XFFFD8524);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8528);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8530);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8548);
	create_insn	(x=0XFFFD8558);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8570);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8574);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8584);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD858C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8594);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD85B0);
	create_insn	(x=0XFFFD85C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD85C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD85E8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD85F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD85F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8608);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD860C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8610);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD862C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8638);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD863C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8654);
	create_insn	(x=0XFFFD8660);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8674);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8678);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8688);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD868C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8694);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD869C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD86F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8704);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8710);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8714);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8718);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8720);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8730);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8738);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8740);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8754);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8764);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD876C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8774);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8788);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8790);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8794);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD879C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD87D8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD87E8);
	create_insn	(x=0XFFFD8808);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD880C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8810);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8814);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8818);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8830);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8838);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD883C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8840);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8844);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8848);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD884C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8878);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8880);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD888C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD88A0);
	create_insn	(x=0XFFFD88A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD88B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD88B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD88BC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD88C8);
	create_insn	(x=0XFFFD88D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD88D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD88E4);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD88F0);
	create_insn	(x=0XFFFD88F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8900);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8908);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8918);
	create_insn	(x=0XFFFD8920);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8928);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8930);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8934);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8940);
	create_insn	(x=0XFFFD8948);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8950);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8958);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8968);
	create_insn	(0XFFFD8974);
	create_insn	(x=0XFFFD8978);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD897C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8988);
	create_insn	(0XFFFD898C);
	create_insn	(0XFFFD8990);
	create_insn	(x=0XFFFD89A4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD89B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD89B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD89D0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD89D4);
	create_insn	(x=0XFFFD89E0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8A10);
	create_insn	(0XFFFD8A1C);
	create_insn	(x=0XFFFD8A20);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A24);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8A30);
	create_insn	(x=0XFFFD8A38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8A98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B04);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B34);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8B38);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8B40);
	create_insn	(x=0XFFFD8B54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B78);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B80);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8BB8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8BE0);
	create_insn	(0XFFFD8BE8);
	create_insn	(x=0XFFFD8BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8C98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8CB8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8CDC);
	create_insn	(0XFFFD8D08);
	create_insn	(0XFFFD8D60);
	create_insn	(0XFFFD8DD0);
	create_insn	(0XFFFD8DDC);
	create_insn	(x=0XFFFD8DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E00);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E38);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E40);
	op_hex		(x,	1);
	create_insn	(0XFFFD8E58);
	create_insn	(x=0XFFFD8E60);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E70);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8E74);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8EAC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8ECC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8EDC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8F2C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8F54);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8F64);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8F68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8F6C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD8F90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8F94);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD8FA8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD8FAC);
	create_insn	(0XFFFD8FB4);
	set_name	(0XFFFD8FB4,	"nullsub_8");
	create_insn	(0XFFFD8FB8);
	create_insn	(0XFFFD8FF0);
	create_insn	(0XFFFD9020);
	create_insn	(0XFFFD9044);
	create_insn	(0XFFFD9068);
	create_insn	(0XFFFD9084);
	create_insn	(0XFFFD90A8);
	create_insn	(0XFFFD90C8);
	create_insn	(0XFFFD90D0);
	create_insn	(0XFFFD9120);
	create_insn	(x=0XFFFD918C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD91B8);
	op_hex		(x,	1);
	create_insn	(0XFFFD91EC);
	create_insn	(0XFFFD91F0);
	create_insn	(x=0XFFFD91FC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0XFFFD9254);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD925C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9270);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD927C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9284);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9288);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD928C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9290);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD929C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD92AC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD92D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD92DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD92E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD92E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD92F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9300);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9308);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9310);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9314);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9318);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9320);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9328);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD932C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9334);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD933C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9344);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD934C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9354);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9358);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD935C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9374);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD937C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD938C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9390);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9394);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD939C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93C8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD93FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9400);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9408);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9410);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9418);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9420);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9428);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9430);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9434);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9438);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9440);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD944C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD945C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9464);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD946C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9474);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9478);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD947C);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9488);
	create_insn	(x=0XFFFD9498);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94D4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94E4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD94EC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD94F8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD94FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9500);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9504);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9508);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD950C,	"switch 5 cases ",	0);
	set_cmt	(0XFFFD9510,	"switch jump",	0);
	set_cmt	(0XFFFD9518,	"jump table for switch statement",	0);
	create_dword	(x=0XFFFD9518);
	make_array	(x,	0X5);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XFFFD952C,	"jumptable FFFD9510 case 0",	1);
	create_insn	(x=0XFFFD952C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9538);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9540);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD954C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9550);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9554);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9558);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD955C);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD9560,	"jumptable FFFD9510 default case",	1);
	set_cmt	(0XFFFD956C,	"switch 4 cases ",	0);
	set_cmt	(0XFFFD9570,	"switch jump",	0);
	set_cmt	(0XFFFD9578,	"jump table for switch statement",	0);
	create_dword	(x=0XFFFD9578);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0XFFFD9588,	"jumptable FFFD9570 cases 1,2",	1);
	create_insn	(0XFFFD9588);
	set_cmt	(0XFFFD9590,	"jumptable FFFD9570 case 3",	1);
	create_insn	(x=0XFFFD95A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD95A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD95AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD95B0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD95C8,	"jumptable FFFD9570 case 0",	1);
	create_insn	(0XFFFD95C8);
	set_cmt	(0XFFFD95D0,	"jumptable FFFD9510 cases 1,3,4",	1);
	create_insn	(x=0XFFFD95D0);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD95E0,	"jumptable FFFD9510 case 2",	1);
	create_insn	(x=0XFFFD95E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD95F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD95F4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD95FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9604);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD960C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9610);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD961C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9624);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD962C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9630);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9634);
	op_stkvar	(x,	1);
	set_cmt	(0XFFFD9640,	"jumptable FFFD9570 default case",	1);
	create_insn	(0XFFFD9640);
	create_insn	(0XFFFD964C);
	create_insn	(0XFFFD9668);
	create_insn	(0XFFFD9678);
	create_insn	(x=0XFFFD9688);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9690);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9698);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96AC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD96C0);
	create_insn	(x=0XFFFD96D0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96DC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD96FC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9700);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9704);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9708);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9718);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD971C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9720);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9730);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9734);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9738);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9740);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD974C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9750);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9758);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9760);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9764);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9768);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9770);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9778);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD977C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9780);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9784);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9788);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97A0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97B0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD97B8);
	create_insn	(0XFFFD97BC);
	create_insn	(x=0XFFFD97CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97E8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97F0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD97F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9800);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9808);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9818);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9820);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9828);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9830);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9834);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9838);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD983C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD984C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9874);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9878);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD987C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9880);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD989C);
	create_insn	(x=0XFFFD98AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD98B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD98B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD98BC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD98D8);
	create_insn	(0XFFFD98E4);
	create_insn	(x=0XFFFD98F8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9900);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9960);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD997C);
	op_hex		(x,	1);
	create_insn	(0XFFFD99C0);
	create_insn	(x=0XFFFD99D0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD99DC);
	op_hex		(x,	1);
	create_insn	(0XFFFD9A34);
	create_insn	(x=0XFFFD9A40);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9A4C);
	op_hex		(x,	1);
	create_insn	(0XFFFD9A88);
	create_insn	(0XFFFD9AD8);
	create_insn	(0XFFFD9AF0);
	create_insn	(x=0XFFFD9AFC);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9B00);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9B04);
	op_hex		(x,	1);
	create_insn	(0XFFFD9B14);
	create_insn	(0XFFFD9B3C);
	create_insn	(x=0XFFFD9B5C);
	op_hex		(x,	1);
	create_insn	(0XFFFD9B64);
	create_insn	(x=0XFFFD9B70);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9B74);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9B78);
	op_hex		(x,	1);
	create_insn	(0XFFFD9B84);
	create_insn	(x=0XFFFD9BA8);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9BB0);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9BD4);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9BEC);
	op_hex		(x,	1);
	create_insn	(0XFFFD9BFC);
	create_insn	(x=0XFFFD9C0C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C10);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C14);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C1C);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C20);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C30);
	op_hex		(x,	1);
	create_insn	(x=0XFFFD9C34);
	op_hex		(x,	1);
	create_insn	(0XFFFD9C3C);
	create_insn	(0XFFFD9C50);
	create_insn	(x=0XFFFD9C5C);
	op_hex		(x,	1);
	create_insn	(0XFFFD9CB0);
	set_name	(0XFFFD9CB0,	"mmc_get_device_capacity");
	create_insn	(0XFFFD9CD0);
	create_insn	(x=0XFFFD9CDC);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9CEC);
	create_insn	(x=0XFFFD9CF2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D12);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9D20);
	create_insn	(x=0XFFFD9D26);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D42);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9D50);
	set_name	(0XFFFD9D50,	"nullsub_9");
	make_array	(0XFFFD9D52,	0X2);
	create_insn	(0XFFFD9D54);
	create_insn	(x=0XFFFD9D56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D58);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D5A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9D96);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9DAA);
	create_insn	(x=0XFFFD9DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DDE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9DE8);
	create_insn	(x=0XFFFD9DF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9DFE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E08);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E18);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E22);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E2A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E48);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E50);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E56);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9E62);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9E86);
	create_insn	(x=0XFFFD9EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EB6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9ECA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9ED2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EE2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9EFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F0A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F10);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F16);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F24);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F28);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F3A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F40);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F4E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F5E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F62);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F68);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F6E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F72);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F74);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F7E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F88);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F8E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F90);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F92);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F98);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9F9E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FAA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FD0);
	op_stkvar	(x,	1);
	create_insn	(0XFFFD9FD8);
	create_insn	(x=0XFFFD9FDE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FF6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FFA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFD9FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA00C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA012);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA014);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA026);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA034);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA036);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA040);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA042);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA04A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA05C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA062);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA066);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA072);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA076);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA07C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA082);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA098);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA0A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA0E2);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA0F2);
	create_insn	(x=0XFFFDA0F8);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA10E);
	create_insn	(x=0XFFFDA112);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA114);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA116);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA118);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA120);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA122);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA12A);
	create_insn	(x=0XFFFDA13A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA13E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA148);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA14A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA150);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA156);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA168);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA16A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA170);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA172);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA176);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA186);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA194);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA196);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA19A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA1AA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA1CE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA1D6);
	create_insn	(x=0XFFFDA1EE);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA1F6);
	create_insn	(x=0XFFFDA1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA1FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA200);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA202);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA20E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA216);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA218);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA21A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA22C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA22E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA234);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA236);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA23A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA24A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA258);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA25A);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA25E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA26E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA274);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA294);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2A2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2BE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2DA);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2EE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2F6);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA300);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA302);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA30C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA31E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA328);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA330);
	create_insn	(x=0XFFFDA336);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA33C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA348);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA34E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA352);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA354);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA366);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA368);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA370);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA37C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA382);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA392);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA396);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA39C);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA39E);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3B2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3C2);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3DE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA3FE);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA404);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA444);
	op_stkvar	(x,	1);
	create_insn	(x=0XFFFDA446);
	op_stkvar	(x,	1);
	create_insn	(0XFFFDA454);
	create_insn	(0XFFFDA460);
	create_insn	(0XFFFDA464);
	create_insn	(0XFFFDA480);
	create_insn	(0XFFFDA490);
	create_insn	(0XFFFDA4C8);
	create_insn	(0XFFFDA4CE);
	make_array	(0XFFFDA4D2,	0X2);
	create_insn	(0XFFFDA4D4);
	create_insn	(0XFFFDA4E0);
	make_array	(0XFFFDA4F2,	0X2);
	create_insn	(0XFFFDA4F4);
	make_array	(0XFFFDA4FC,	0X4);
	create_insn	(x=0XFFFDA500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0XFFFDA504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFDA508);
	make_array	(0XFFFDA50A,	0X2);
	create_insn	(0XFFFDA50C);
	create_insn	(x=0XFFFDA510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFDA510,	"j_nullsub_9");
	create_dword	(x=0XFFFDA514);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFDA518);
	make_array	(0XFFFDA51A,	0X2);
	create_insn	(0XFFFDA51C);
	create_insn	(x=0XFFFDA520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0XFFFDA520,	"j_nullsub_9_0");
	create_dword	(x=0XFFFDA524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFFDA528);
	make_array	(0XFFFDA52A,	0X2);
	create_insn	(0XFFFDA52C);
	create_insn	(0XFFFDA530);
	make_array	(0XFFFDA532,	0X2);
	create_insn	(0XFFFDA534);
	create_dword	(0XFFFDA538);
	make_array	(0XFFFDA538,	0X2);
	create_dword	(0XFFFDA540);
	create_dword	(0XFFFDA544);
	create_dword	(0XFFFDA548);
	create_dword	(0XFFFDA54C);
	create_dword	(0XFFFDA550);
	create_dword	(0XFFFDA554);
	create_dword	(0XFFFDA558);
	create_dword	(0XFFFDA55C);
	create_strlit	(0XFFFDA560,	0XFFFDA56D);
	set_name	(0XFFFDA560,	"aGetBoardId");
	make_array	(0XFFFDA56D,	0X3);
	create_strlit	(0XFFFDA570,	0XFFFDA579);
	set_name	(0XFFFDA570,	"aTps65961");
	make_array	(0XFFFDA579,	0X3);
	create_strlit	(0XFFFDA57C,	0XFFFDA595);
	set_name	(0XFFFDA57C,	"aSPmicIsEmptyEx");
	make_array	(0XFFFDA595,	0X3);
	create_strlit	(0XFFFDA798,	0XFFFDA79E);
	set_name	(0XFFFDA798,	"aStack");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	make_array	(0XFFFDA79E,	0X2);
	create_strlit	(0XFFFDA7A0,	0XFFFDA7B2);
	set_name	(0XFFFDA7A0,	"aAllocHandleErr");
	make_array	(0XFFFDA7B2,	0X2);
	create_strlit	(0XFFFDA7B4,	0XFFFDA7BF);
	set_name	(0XFFFDA7B4,	"aClkUnused");
	create_strlit	(0XFFFDA7C0,	0XFFFDA7C7);
	set_name	(0XFFFDA7C0,	"aEnable");
	create_strlit	(0XFFFDA7C8,	0XFFFDA7DB);
	set_name	(0XFFFDA7C8,	"aGetHwVerFailed");
	create_strlit	(0XFFFDA7DC,	0XFFFDA7E5);
	set_name	(0XFFFDA7DC,	"aDDD");
	make_array	(0XFFFDA7E5,	0X3);
	create_strlit	(0XFFFDA7E8,	0XFFFDA7F3);
	set_name	(0XFFFDA7E8,	"aHwVerS");
	create_strlit	(0XFFFDA7F4,	0XFFFDA7FB);
	set_name	(0XFFFDA7F4,	"aHwVer");
	create_strlit	(0XFFFDA7FC,	0XFFFDA807);
	set_name	(0XFFFDA7FC,	"aFlushErr");
	create_strlit	(0XFFFDA808,	0XFFFDA811);
	set_name	(0XFFFDA808,	"aDdrHeap");
	make_array	(0XFFFDA811,	0X3);
	create_strlit	(0XFFFDA814,	0XFFFDA82D);
	set_name	(0XFFFDA814,	"aSeSbromInitFai");
	make_array	(0XFFFDA82D,	0X3);
	create_strlit	(0XFFFDA830,	0XFFFDA835);
	set_name	(0XFFFDA830,	"aDram");
	make_array	(0XFFFDA835,	0X3);
	create_strlit	(0XFFFDA838,	0XFFFDA83F);
	set_name	(0XFFFDA838,	"aMemory");
	create_strlit	(0XFFFDA840,	0XFFFDA84C);
	set_name	(0XFFFDA840,	"aPeripherals");
	create_strlit	(0XFFFDA84C,	0XFFFDA875);
	set_name	(0XFFFDA84C,	"aHaltSpinningFo");
	make_array	(0XFFFDA875,	0X3);
	create_strlit	(0XFFFDA878,	0XFFFDA8A2);
	set_name	(0XFFFDA878,	"aAcpuPllSelectA");
	make_array	(0XFFFDA8A2,	0X2);
	create_strlit	(0XFFFDA8A4,	0XFFFDA8B6);
	set_name	(0XFFFDA8A4,	"aDdrSubsysGatin");
	make_array	(0XFFFDA8B6,	0X2);
	create_strlit	(0XFFFDA8B8,	0XFFFDA8BC);
	set_name	(0XFFFDA8B8,	"aOff");
	create_strlit	(0XFFFDA8BC,	0XFFFDA8CF);
	set_name	(0XFFFDA8BC,	"aPeriSubsysGati");
	create_strlit	(0XFFFDA8D0,	0XFFFDA8E1);
	set_name	(0XFFFDA8D0,	"aM7SubsysGating");
	make_array	(0XFFFDA8E1,	0X3);
	create_strlit	(0XFFFDA8E4,	0XFFFDA8F9);
	set_name	(0XFFFDA8E4,	"aVisionSubsysGa");
	make_array	(0XFFFDA8F9,	0X3);
	create_strlit	(0XFFFDA8FC,	0XFFFDA910);
	set_name	(0XFFFDA8FC,	"aCodecSubsysGat");
	create_strlit	(0XFFFDA910,	0XFFFDA922);
	set_name	(0XFFFDA910,	"aIspSubsysGatin");
	make_array	(0XFFFDA922,	0X2);
	create_strlit	(0XFFFDA924,	0XFFFDA935);
	set_name	(0XFFFDA924,	"a2dSubsysGating");
	make_array	(0XFFFDA935,	0X3);
	create_strlit	(0XFFFDA938,	0XFFFDA95B);
	set_name	(0XFFFDA938,	"aErrorSdhciRese");
	create_strlit	(0XFFFDA95C,	0XFFFDA979);
	set_name	(0XFFFDA95C,	"aErrorInvalidUh");
	make_array	(0XFFFDA979,	0X3);
	create_strlit	(0XFFFDA97C,	0XFFFDA99A);
	set_name	(0XFFFDA97C,	"aAssertFailedAt");
	make_array	(0XFFFDA99A,	0X2);
	create_strlit	(0XFFFDA99C,	0XFFFDA9AC);
	set_name	(0XFFFDA99C,	"aDevMmcSdhciC");
	create_strlit	(0XFFFDA9AC,	0XFFFDA9C6);
	set_name	(0XFFFDA9AC,	"aBusWidthIsInva");
	make_array	(0XFFFDA9C6,	0X2);
	create_strlit	(0XFFFDA9C8,	0XFFFDA9DB);
	set_name	(0XFFFDA9C8,	"aCmdDataDataPtr");
	create_strlit	(0XFFFDA9DC,	0XFFFDAA06);
	set_name	(0XFFFDA9DC,	"aIsCacheLineAli");
	make_array	(0XFFFDAA06,	0X2);
	create_strlit	(0XFFFDAA08,	0XFFFDAA32);
	set_name	(0XFFFDAA08,	"aErrorCmdOrDatL");
	make_array	(0XFFFDAA32,	0X2);
	create_strlit	(0XFFFDAA34,	0XFFFDAA5B);
	set_name	(0XFFFDAA34,	"aInvalidRespons");
	create_strlit	(0XFFFDAA5C,	0XFFFDAA75);
	set_name	(0XFFFDAA5C,	"aErrorAllocatin");
	make_array	(0XFFFDAA75,	0X3);
	create_strlit	(0XFFFDAA78,	0XFFFDAA98);
	set_name	(0XFFFDAA78,	"aErrorCommandNe");
	create_strlit	(0XFFFDAA98,	0XFFFDAAB9);
	set_name	(0XFFFDAA98,	"aErrorTransferN");
	make_array	(0XFFFDAAB9,	0X3);
	create_strlit	(0XFFFDAABC,	0XFFFDAADA);
	set_name	(0XFFFDAABC,	"aErrorCommandTi");
	make_array	(0XFFFDAADA,	0X2);
	create_strlit	(0XFFFDAADC,	0XFFFDAAF6);
	set_name	(0XFFFDAADC,	"aErrorCommandCr");
	make_array	(0XFFFDAAF6,	0X2);
	create_strlit	(0XFFFDAAF8,	0XFFFDAB12);
	set_name	(0XFFFDAAF8,	"aErrorCmdEndBit");
	make_array	(0XFFFDAB12,	0X2);
	create_strlit	(0XFFFDAB14,	0XFFFDAB30);
	set_name	(0XFFFDAB14,	"aErrorCommandIn");
	create_strlit	(0XFFFDAB30,	0XFFFDAB4C);
	set_name	(0XFFFDAB30,	"aErrorDataTimeO");
	create_strlit	(0XFFFDAB4C,	0XFFFDAB63);
	set_name	(0XFFFDAB4C,	"aErrorDataCrcEr");
	create_strlit	(0XFFFDAB64,	0XFFFDAB7F);
	set_name	(0XFFFDAB64,	"aErrorDataEndBi");
	create_strlit	(0XFFFDAB80,	0XFFFDAB9C);
	set_name	(0XFFFDAB80,	"aErrorCurrentLi");
	create_strlit	(0XFFFDAB9C,	0XFFFDABB5);
	set_name	(0XFFFDAB9C,	"aErrorAutoCmd12");
	make_array	(0XFFFDABB5,	0X3);
	create_strlit	(0XFFFDABB8,	0XFFFDABCB);
	set_name	(0XFFFDABB8,	"aErrorAdmaError");
	create_strlit	(0XFFFDABCC,	0XFFFDABE2);
	set_name	(0XFFFDABCC,	"aFailedSendingC");
	make_array	(0XFFFDABE2,	0X2);
	create_strlit	(0XFFFDABE4,	0XFFFDAC1C);
	set_name	(0XFFFDABE4,	"aAttemptingToRe");
	create_strlit	(0XFFFDAC1C,	0XFFFDAC58);
	set_name	(0XFFFDAC1C,	"aTheMisalignedA");
	create_strlit	(0XFFFDAC58,	0XFFFDAC8F);
	set_name	(0XFFFDAC58,	"aTheTransferred");
	create_strlit	(0XFFFDAC90,	0XFFFDACBC);
	set_name	(0XFFFDAC90,	"aAttemptToProgr");
	create_strlit	(0XFFFDACBC,	0XFFFDACFD);
	set_name	(0XFFFDACBC,	"aDeviceErrorOcc");
	make_array	(0XFFFDACFD,	0X3);
	create_strlit	(0XFFFDAD00,	0XFFFDAD18);
	set_name	(0XFFFDAD00,	"aAGenericDevice");
	create_strlit	(0XFFFDAD18,	0XFFFDAD37);
	set_name	(0XFFFDAD18,	"aMmcCardIsNotIn");
	create_strlit	(0XFFFDAD38,	0XFFFDAD55);
	set_name	(0XFFFDAD38,	"aFailedToSendSt");
	make_array	(0XFFFDAD55,	0X3);
	create_strlit	(0XFFFDAD58,	0XFFFDAD6A);
	set_name	(0XFFFDAD58,	"aCmd6SendFailed");
	make_array	(0XFFFDAD6A,	0X2);
	create_strlit	(0XFFFDAD6C,	0XFFFDAD84);
	set_name	(0XFFFDAD6C,	"aGetCardStatusF");
	create_strlit	(0XFFFDAD84,	0XFFFDADB2);
	set_name	(0XFFFDAD84,	"aSwitchCmdFaile_0");
	make_array	(0XFFFDADB2,	0X2);
	create_strlit	(0XFFFDADB4,	0XFFFDADD6);
	set_name	(0XFFFDADB4,	"aSwitchCmdFaile_1");
	make_array	(0XFFFDADD6,	0X2);
	create_strlit	(0XFFFDADD8,	0XFFFDADF8);
	set_name	(0XFFFDADD8,	"aSwitchCmdRetur");
	create_strlit	(0XFFFDADF8,	0XFFFDAE31);
	set_name	(0XFFFDADF8,	"aTheResponseFor");
	make_array	(0XFFFDAE31,	0X3);
	create_strlit	(0XFFFDAE34,	0XFFFDAE54);
	set_name	(0XFFFDAE34,	"aErrorCmd8Respo");
	create_strlit	(0XFFFDAE54,	0XFFFDAE70);
	set_name	(0XFFFDAE54,	"aFailedSendingA");
	create_strlit	(0XFFFDAE70,	0XFFFDAE88);
	set_name	(0XFFFDAE70,	"aFailureSending");
	create_strlit	(0XFFFDAE88,	0XFFFDAEAA);
	set_name	(0XFFFDAE88,	"aErrorAcmd41Res");
	make_array	(0XFFFDAEAA,	0X2);
	create_strlit	(0XFFFDAEAC,	0XFFFDAEC0);
	set_name	(0XFFFDAEAC,	"aDevMmcMmcSdhci");
	create_strlit	(0XFFFDAEC0,	0XFFFDAEC5);
	set_name	(0XFFFDAEC0,	"aData");
	make_array	(0XFFFDAEC5,	0X3);
	create_strlit	(0XFFFDAEC8,	0XFFFDAEFA);
	set_name	(0XFFFDAEC8,	"aInitializingMm");
	make_array	(0XFFFDAEFA,	0X2);
	create_strlit	(0XFFFDAEFC,	0XFFFDAF1E);
	set_name	(0XFFFDAEFC,	"aErrorInitializ");
	make_array	(0XFFFDAF1E,	0X2);
	create_strlit	(0XFFFDAF20,	0XFFFDAF3E);
	set_name	(0XFFFDAF20,	"aFailureResetti");
	make_array	(0XFFFDAF3E,	0X2);
	create_strlit	(0XFFFDAF40,	0XFFFDAF5E);
	set_name	(0XFFFDAF40,	"aFailedToInitia");
	make_array	(0XFFFDAF5E,	0X2);
	create_strlit	(0XFFFDAF60,	0XFFFDAF75);
	set_name	(0XFFFDAF60,	"aDecodedCidFiel");
	make_array	(0XFFFDAF75,	0X3);
	create_strlit	(0XFFFDAF78,	0XFFFDAF8D);
	set_name	(0XFFFDAF78,	"aManufacturerId");
	make_array	(0XFFFDAF8D,	0X3);
	create_strlit	(0XFFFDAF90,	0XFFFDAF9E);
	set_name	(0XFFFDAF90,	"aOemId0xX");
	make_array	(0XFFFDAF9E,	0X2);
	create_strlit	(0XFFFDAFA0,	0XFFFDAFB2);
	set_name	(0XFFFDAFA0,	"aProductNameS");
	make_array	(0XFFFDAFB2,	0X2);
	create_strlit	(0XFFFDAFB4,	0XFFFDAFCD);
	set_name	(0XFFFDAFB4,	"aProductRevisio");
	make_array	(0XFFFDAFCD,	0X3);
	create_strlit	(0XFFFDAFD0,	0XFFFDAFEB);
	set_name	(0XFFFDAFD0,	"aProductSerialN");
	create_strlit	(0XFFFDAFEC,	0XFFFDB007);
	set_name	(0XFFFDAFEC,	"aManufacturingD");
	create_strlit	(0XFFFDB008,	0XFFFDB026);
	set_name	(0XFFFDB008,	"aFailedToSetHsF");
	make_array	(0XFFFDB026,	0X2);
	create_strlit	(0XFFFDB028,	0XFFFDB04A);
	set_name	(0XFFFDB028,	"aErrorAdjusting");
	make_array	(0XFFFDB04A,	0X2);
	create_strlit	(0XFFFDB04C,	0XFFFDB078);
	set_name	(0XFFFDB04C,	"aFailureGetting");
	create_strlit	(0XFFFDB078,	0XFFFDB08D);
	set_name	(0XFFFDB078,	"aDecodedCsdFiel");
	make_array	(0XFFFDB08D,	0X3);
	create_strlit	(0XFFFDB090,	0XFFFDB0AB);
	set_name	(0XFFFDB090,	"aCardCapacityLl");
	create_strlit	(0XFFFDB0AC,	0XFFFDB0C3);
	set_name	(0XFFFDB0AC,	"aRpmbSize0xXByt");
	create_strlit	(0XFFFDB0C4,	0XFFFDB0D6);
	set_name	(0XFFFDB0C4,	"aRelWrCountU");
	make_array	(0XFFFDB0D6,	0X2);
	create_strlit	(0XFFFDB0D8,	0XFFFDB105);
	set_name	(0XFFFDB0D8,	"aFailedToSetBus");
	make_array	(0XFFFDB105,	0X3);
	create_strlit	(0XFFFDB108,	0XFFFDB11B);
	set_name	(0XFFFDB108,	"aSwitchCmdFaile");
	create_strlit	(0XFFFDB11C,	0XFFFDB146);
	set_name	(0XFFFDB11C,	"aFailureToSetDd");
	make_array	(0XFFFDB146,	0X2);
	create_strlit	(0XFFFDB148,	0XFFFDB169);
	set_name	(0XFFFDB148,	"aSdhcRunningInH");
	make_array	(0XFFFDB169,	0X3);
	create_strlit	(0XFFFDB16C,	0XFFFDB198);
	set_name	(0XFFFDB16C,	"aFailureToEnalb");
	create_strlit	(0XFFFDB198,	0XFFFDB1C2);
	set_name	(0XFFFDB198,	"aFailureToSetWi");
	make_array	(0XFFFDB1C2,	0X2);
	create_strlit	(0XFFFDB1C4,	0XFFFDB1EA);
	set_name	(0XFFFDB1C4,	"aFailedToSetBus_0");
	make_array	(0XFFFDB1EA,	0X2);
	create_strlit	(0XFFFDB1EC,	0XFFFDB20D);
	set_name	(0XFFFDB1EC,	"aFailedToEnable");
	make_array	(0XFFFDB20D,	0X3);
	create_strlit	(0XFFFDB210,	0XFFFDB223);
	set_name	(0XFFFDB210,	"aBootBusWidth1");
	create_strlit	(0XFFFDB224,	0XFFFDB237);
	set_name	(0XFFFDB224,	"aBootBusWidth8");
	create_strlit	(0XFFFDB238,	0XFFFDB254);
	set_name	(0XFFFDB238,	"aBootBusWidthIs");
	create_strlit	(0XFFFDB254,	0XFFFDB276);
	set_name	(0XFFFDB254,	"aBootPartitionD_0");
	make_array	(0XFFFDB276,	0X2);
	create_strlit	(0XFFFDB278,	0XFFFDB29B);
	set_name	(0XFFFDB278,	"aFailedDetectin");
	create_strlit	(0XFFFDB29C,	0XFFFDB2BD);
	set_name	(0XFFFDB29C,	"aDoneInitializa");
	make_array	(0XFFFDB2BD,	0X3);
	create_strlit	(0XFFFDB2C0,	0XFFFDB2EC);
	set_name	(0XFFFDB2C0,	"aFailureGetting_0");
	create_strlit	(0XFFFDB2EC,	0XFFFDB319);
	set_name	(0XFFFDB2EC,	"aMmcCardFailedT");
	make_array	(0XFFFDB319,	0X3);
	create_strlit	(0XFFFDB31C,	0XFFFDB340);
	set_name	(0XFFFDB31C,	"aFailureGetting_1");
	create_strlit	(0XFFFDB340,	0XFFFDB35D);
	set_name	(0XFFFDB340,	"aFailureGetting_2");
	make_array	(0XFFFDB35D,	0X3);
	create_strlit	(0XFFFDB360,	0XFFFDB389);
	set_name	(0XFFFDB360,	"aFailureGetting_3");
	make_array	(0XFFFDB389,	0X3);
	create_strlit	(0XFFFDB38C,	0XFFFDB3B5);
	set_name	(0XFFFDB38C,	"aFailureSelecti");
	make_array	(0XFFFDB3B5,	0X3);
	create_strlit	(0XFFFDB3B8,	0XFFFDB3DD);
	set_name	(0XFFFDB3B8,	"aFailureGetting_4");
	make_array	(0XFFFDB3DD,	0X3);
	create_strlit	(0XFFFDB3E0,	0XFFFDB401);
	set_name	(0XFFFDB3E0,	"aFailedToGetSsr");
	make_array	(0XFFFDB401,	0X3);
	create_strlit	(0XFFFDB404,	0XFFFDB41E);
	set_name	(0XFFFDB404,	"aSdhcRunningInD");
	make_array	(0XFFFDB41E,	0X2);
	create_strlit	(0XFFFDB420,	0XFFFDB451);
	set_name	(0XFFFDB420,	"aCardHasBusySta");
	make_array	(0XFFFDB451,	0X3);
	create_strlit	(0XFFFDB454,	0XFFFDB488);
	set_name	(0XFFFDB454,	"aRequestedLengt");
	create_strlit	(0XFFFDB488,	0XFFFDB4BE);
	set_name	(0XFFFDB488,	"aTheEraseGroupO");
	make_array	(0XFFFDB4BE,	0X2);
	create_strlit	(0XFFFDB4C0,	0XFFFDB4E3);
	set_name	(0XFFFDB4C0,	"aAddressForCmd3");
	create_strlit	(0XFFFDB4E4,	0XFFFDB507);
	set_name	(0XFFFDB4E4,	"aAddressForCmd3_0");
	create_strlit	(0XFFFDB508,	0XFFFDB52F);
	set_name	(0XFFFDB508,	"aFailedToGetCar");
	create_strlit	(0XFFFDB530,	0XFFFDB571);
	set_name	(0XFFFDB530,	"aWriteProtectSe");
	make_array	(0XFFFDB571,	0X3);
	create_strlit	(0XFFFDB574,	0XFFFDB5AD);
	set_name	(0XFFFDB574,	"aCardStatusChec");
	make_array	(0XFFFDB5AD,	0X3);
	create_strlit	(0XFFFDB5B0,	0XFFFDB5D8);
	set_name	(0XFFFDB5B0,	"aFailedToSendEr");
	create_strlit	(0XFFFDB5D8,	0XFFFDB5FE);
	set_name	(0XFFFDB5D8,	"aFailedToSendEr_0");
	make_array	(0XFFFDB5FE,	0X2);
	create_strlit	(0XFFFDB600,	0XFFFDB629);
	set_name	(0XFFFDB600,	"aFailedToEraseT");
	make_array	(0XFFFDB629,	0X3);
	create_strlit	(0XFFFDB62C,	0XFFFDB658);
	set_name	(0XFFFDB62C,	"aFailedToGetSta");
	create_strlit	(0XFFFDB658,	0XFFFDB673);
	set_name	(0XFFFDB658,	"aFailedToDisabl");
	create_strlit	(0XFFFDB674,	0XFFFDB699);
	set_name	(0XFFFDB674,	"aFailedToReadEx");
	make_array	(0XFFFDB699,	0X3);
	create_strlit	(0XFFFDB69C,	0XFFFDB6CC);
	set_name	(0XFFFDB69C,	"aPowerOnProtect");
	create_strlit	(0XFFFDB6CC,	0XFFFDB6FD);
	set_name	(0XFFFDB6CC,	"aLengthIsLessTh");
	make_array	(0XFFFDB6FD,	0X3);
	create_strlit	(0XFFFDB700,	0XFFFDB724);
	set_name	(0XFFFDB700,	"aFailedToSetPow");
	create_strlit	(0XFFFDB724,	0XFFFDB74A);
	set_name	(0XFFFDB724,	"aAddressForCmd2");
	make_array	(0XFFFDB74A,	0X2);
	create_strlit	(0XFFFDB74C,	0XFFFDB783);
	set_name	(0XFFFDB74C,	"aFailedToGetCar_0");
	create_strlit	(0XFFFDB784,	0XFFFDB7BF);
	set_name	(0XFFFDB784,	"aCardStatusTime");
	create_strlit	(0XFFFDB7C0,	0XFFFDB7D9);
	set_name	(0XFFFDB7C0,	"aCardDeselectEr");
	make_array	(0XFFFDB7D9,	0X3);
	create_strlit	(0XFFFDB7DC,	0XFFFDB7F2);
	set_name	(0XFFFDB7DC,	"aCardSleepError");
	make_array	(0XFFFDB7F2,	0X2);
	create_strlit	(0XFFFDB7F4,	0XFFFDB81C);
	set_name	(0XFFFDB7F4,	"aFailedToSwitch");
	create_strlit	(0XFFFDB81C,	0XFFFDB820);
	set_name	(0XFFFDB81C,	"aCmd");
	create_strlit	(0XFFFDB820,	0XFFFDB83C);
	set_name	(0XFFFDB820,	"aSetBlockCountF");
	create_strlit	(0XFFFDB83C,	0XFFFDB86D);
	set_name	(0XFFFDB83C,	"aFailedToGetCar_1");
	make_array	(0XFFFDB86D,	0X3);
	create_strlit	(0XFFFDB870,	0XFFFDB8A3);
	set_name	(0XFFFDB870,	"aCardStatusChec_0");
	create_strlit	(0XFFFDB8A4,	0XFFFDB8DE);
	set_name	(0XFFFDB8A4,	"aEraseFailErase");
	make_array	(0XFFFDB8DE,	0X2);
	create_strlit	(0XFFFDB8E0,	0XFFFDB903);
	set_name	(0XFFFDB8E0,	"aFailedToEraseT_0");
	create_strlit	(0XFFFDB904,	0XFFFDB91A);
	set_name	(0XFFFDB904,	"aDevMmcMmcWrapp");
	make_array	(0XFFFDB91A,	0X2);
	create_strlit	(0XFFFDB91C,	0XFFFDB936);
	set_name	(0XFFFDB91C,	"aDataAddrBlockS");
	make_array	(0XFFFDB936,	0X2);
	create_strlit	(0XFFFDB938,	0XFFFDB953);
	set_name	(0XFFFDB938,	"aFailedWritingB");
	create_strlit	(0XFFFDB954,	0XFFFDB96D);
	set_name	(0XFFFDB954,	"aDataLenBlockSi");
	make_array	(0XFFFDB96D,	0X3);
	create_strlit	(0XFFFDB970,	0XFFFDB98B);
	set_name	(0XFFFDB970,	"aFailedReadingB");
	create_strlit	(0XFFFDB98C,	0XFFFDB9B0);
	set_name	(0XFFFDB98C,	"aWrongPartNumbe");
	create_strlit	(0XFFFDB9B0,	0XFFFDB9D6);
	set_name	(0XFFFDB9B0,	"aFailedToClearM");
	make_array	(0XFFFDB9D6,	0X2);
	create_strlit	(0XFFFDB9D8,	0XFFFDB9FC);
	set_name	(0XFFFDB9D8,	"aFailedToSetMmc");
	create_strlit	(0XFFFDB9FC,	0XFFFDBA1F);
	set_name	(0XFFFDB9FC,	"aWrongWidthValu");
	create_strlit	(0XFFFDBA20,	0XFFFDBA43);
	set_name	(0XFFFDBA20,	"aBootBusWidthIs_0");
	create_strlit	(0XFFFDBA44,	0XFFFDBA6F);
	set_name	(0XFFFDBA44,	"aFailedToSetBoo");
	create_strlit	(0XFFFDBA70,	0XFFFDBA85);
	set_name	(0XFFFDBA70,	"aAddrBlockSize");
	make_array	(0XFFFDBA85,	0X3);
	create_strlit	(0XFFFDBA88,	0XFFFDBA9C);
	set_name	(0XFFFDBA88,	"aLenBlockSize");
	create_strlit	(0XFFFDBA9C,	0XFFFDBAAE);
	set_name	(0XFFFDBA9C,	"aMmcEraseFailed");
	make_array	(0XFFFDBAAE,	0X2);
	create_strlit	(0XFFFDBAB0,	0XFFFDBAC1);
	set_name	(0XFFFDBAB0,	"aMmcInitFailed");
	make_array	(0XFFFDBAC1,	0X3);
	create_strlit	(0XFFFDBAC4,	0XFFFDBAE7);
	set_name	(0XFFFDBAC4,	"aPlatformDjiDev");
	create_dword	(0XFFFDBAE8);
	create_dword	(0XFFFDBAEC);
	create_dword	(0XFFFDBAF0);
	create_dword	(0XFFFDBAF4);
	create_dword	(0XFFFDBAF8);
	create_dword	(0XFFFDBAFC);
	create_dword	(0XFFFDBB00);
	create_dword	(0XFFFDBB04);
	create_dword	(0XFFFDBB08);
	create_dword	(0XFFFDBB0C);
	create_dword	(0XFFFDBB10);
	create_dword	(0XFFFDBB14);
	create_dword	(0XFFFDBB18);
	create_dword	(0XFFFDBB1C);
	create_dword	(0XFFFDBB20);
	create_dword	(0XFFFDBB24);
	create_dword	(0XFFFDBB28);
	create_dword	(0XFFFDBB2C);
	create_dword	(0XFFFDBB30);
	create_dword	(0XFFFDBB34);
	create_dword	(0XFFFDBB38);
	create_dword	(0XFFFDBB3C);
	create_dword	(0XFFFDBB40);
	create_dword	(0XFFFDBB44);
	create_dword	(0XFFFDBB48);
	create_dword	(0XFFFDBB4C);
	create_dword	(0XFFFDBB50);
	create_dword	(0XFFFDBB54);
	create_dword	(0XFFFDBB58);
	create_dword	(0XFFFDBB5C);
	create_dword	(0XFFFDBB60);
	create_dword	(0XFFFDBB64);
	create_dword	(0XFFFDBB68);
	create_dword	(0XFFFDBB6C);
	create_dword	(0XFFFDBB70);
	create_dword	(0XFFFDBB74);
	create_dword	(0XFFFDBB78);
	create_dword	(0XFFFDBB7C);
	create_dword	(0XFFFDBB80);
	create_dword	(0XFFFDBB84);
	create_dword	(0XFFFDBB88);
	create_dword	(0XFFFDBB8C);
	create_dword	(0XFFFDBB90);
	create_dword	(0XFFFDBB94);
	create_dword	(0XFFFDBB98);
	create_dword	(0XFFFDBB9C);
	create_dword	(0XFFFDBBA0);
	create_dword	(0XFFFDBBA4);
	create_dword	(0XFFFDBBA8);
	create_dword	(0XFFFDBBAC);
	create_dword	(0XFFFDBBB0);
	create_dword	(0XFFFDBBB4);
	create_dword	(0XFFFDBBB8);
	create_dword	(0XFFFDBBBC);
	create_dword	(0XFFFDBBC0);
	create_dword	(0XFFFDBBC4);
	create_dword	(0XFFFDBBC8);
	create_dword	(0XFFFDBBCC);
	create_dword	(0XFFFDBBD0);
	create_dword	(0XFFFDBBD4);
	create_dword	(0XFFFDBBD8);
	create_dword	(0XFFFDBBDC);
	create_dword	(0XFFFDBBE0);
	create_dword	(0XFFFDBBE4);
	create_dword	(0XFFFDBBE8);
	create_dword	(0XFFFDBBEC);
	create_dword	(0XFFFDBBF0);
	create_dword	(0XFFFDBBF4);
	create_dword	(0XFFFDBBF8);
	create_dword	(0XFFFDBBFC);
	create_dword	(0XFFFDBC00);
	create_dword	(0XFFFDBC04);
	create_dword	(0XFFFDBC08);
	create_dword	(0XFFFDBC0C);
	create_dword	(0XFFFDBC10);
	create_dword	(0XFFFDBC14);
	create_dword	(0XFFFDBC18);
	create_dword	(0XFFFDBC1C);
	create_dword	(0XFFFDBC20);
	create_dword	(0XFFFDBC24);
	create_strlit	(0XFFFDBC28,	0XFFFDBC3E);
	set_name	(0XFFFDBC28,	"aMmcSdhciSetBlk");
	create_strlit	(0XFFFDBC40,	0XFFFDBC4B);
	set_name	(0XFFFDBC40,	"aDccWorker");
	create_strlit	(0XFFFDBC4C,	0XFFFDBC68);
	set_name	(0XFFFDBC4C,	"aCSR130x08xR140");
	create_strlit	(0XFFFDBC68,	0XFFFDBC6C);
	set_name	(0XFFFDBC68,	"aUsr");
	create_strlit	(0XFFFDBC6C,	0XFFFDBC70);
	set_name	(0XFFFDBC6C,	"aFiq");
	create_strlit	(0XFFFDBC70,	0XFFFDBC74);
	set_name	(0XFFFDBC70,	"aIrq");
	create_strlit	(0XFFFDBC74,	0XFFFDBC78);
	set_name	(0XFFFDBC74,	"aSvc");
	create_strlit	(0XFFFDBC78,	0XFFFDBC7C);
	set_name	(0XFFFDBC78,	"aUnd");
	create_strlit	(0XFFFDBC7C,	0XFFFDBC80);
	set_name	(0XFFFDBC7C,	"aSys");
	create_strlit	(0XFFFDBC80,	0XFFFDBC9C);
	set_name	(0XFFFDBC80,	"aBottomOfStackA");
	create_strlit	(0XFFFDBC9C,	0XFFFDBCB8);
	set_name	(0XFFFDBC9C,	"aCurrentThreadP");
	create_strlit	(0XFFFDBCB8,	0XFFFDBCE5);
	set_name	(0XFFFDBCB8,	"aR00x08xR10x08x");
	create_strlit	(0XFFFDBCE8,	0XFFFDBD15);
	set_name	(0XFFFDBCE8,	"aR40x08xR50x08x");
	create_strlit	(0XFFFDBD18,	0XFFFDBD45);
	set_name	(0XFFFDBD18,	"aR80x08xR90x08x");
	create_strlit	(0XFFFDBD48,	0XFFFDBD75);
	set_name	(0XFFFDBD48,	"aR120x08xUsp0x0");
	create_strlit	(0XFFFDBD78,	0XFFFDBD85);
	set_name	(0XFFFDBD78,	"aSpsr0x08x");
	make_array	(0XFFFDBD85,	0X3);
	create_strlit	(0XFFFDBD88,	0XFFFDBDA4);
	set_name	(0XFFFDBD88,	"aUnhandledSysca");
	create_strlit	(0XFFFDBDA4,	0XFFFDBDBE);
	set_name	(0XFFFDBDA4,	"aUndefinedAbort");
	make_array	(0XFFFDBDBE,	0X2);
	create_strlit	(0XFFFDBDC0,	0XFFFDBDC6);
	set_name	(0XFFFDBDC0,	"aWrite");
	make_array	(0XFFFDBDC6,	0X2);
	create_strlit	(0XFFFDBDC8,	0XFFFDBDCD);
	set_name	(0XFFFDBDC8,	"aRead");
	make_array	(0XFFFDBDCD,	0X3);
	create_strlit	(0XFFFDBDD2,	0XFFFDBDE6);
	set_name	(0XFFFDBDD2,	"aCpuUDataAbort");
	make_array	(0XFFFDBDE6,	0X2);
	create_strlit	(0XFFFDBDE8,	0XFFFDBDFF);
	set_name	(0XFFFDBDE8,	"aAlignmentFault_0");
	create_strlit	(0XFFFDBE00,	0XFFFDBE19);
	set_name	(0XFFFDBE00,	"aTranslationFau_0");
	make_array	(0XFFFDBE19,	0X3);
	create_strlit	(0XFFFDBE1C,	0XFFFDBE35);
	set_name	(0XFFFDBE1C,	"aAccessFlagFaul_0");
	make_array	(0XFFFDBE35,	0X3);
	create_strlit	(0XFFFDBE38,	0XFFFDBE52);
	set_name	(0XFFFDBE38,	"aDomainFaultDom");
	make_array	(0XFFFDBE52,	0X2);
	create_strlit	(0XFFFDBE54,	0XFFFDBE6C);
	set_name	(0XFFFDBE54,	"aPermissionFaul_0");
	create_strlit	(0XFFFDBE6C,	0XFFFDBE79);
	set_name	(0XFFFDBE6C,	"aDebugEvent");
	make_array	(0XFFFDBE79,	0X3);
	create_strlit	(0XFFFDBE7C,	0XFFFDBE9E);
	set_name	(0XFFFDBE7C,	"aSynchronousExt_0");
	make_array	(0XFFFDBE9E,	0X2);
	create_strlit	(0XFFFDBEA0,	0XFFFDBEC3);
	set_name	(0XFFFDBEA0,	"aAsynchronousEx");
	create_strlit	(0XFFFDBEC4,	0XFFFDBED5);
	set_name	(0XFFFDBEC4,	"aUnhandledFault");
	make_array	(0XFFFDBED5,	0X3);
	create_strlit	(0XFFFDBED8,	0XFFFDBEF3);
	set_name	(0XFFFDBED8,	"aDfar0xXFaultAd");
	create_strlit	(0XFFFDBEF4,	0XFFFDBF17);
	set_name	(0XFFFDBEF4,	"aDfsr0xXFaultSt");
	create_strlit	(0XFFFDBF18,	0XFFFDBF21);
	set_name	(0XFFFDBF18,	"aHalting");
	make_array	(0XFFFDBF21,	0X3);
	create_strlit	(0XFFFDBF24,	0XFFFDBF3E);
	set_name	(0XFFFDBF24,	"aCpuUPrefetchAb");
	make_array	(0XFFFDBF3E,	0X2);
	create_strlit	(0XFFFDBF40,	0XFFFDBF51);
	set_name	(0XFFFDBF40,	"aAlignmentFault");
	make_array	(0XFFFDBF51,	0X3);
	create_strlit	(0XFFFDBF54,	0XFFFDBF67);
	set_name	(0XFFFDBF54,	"aTranslationFau");
	create_strlit	(0XFFFDBF68,	0XFFFDBF7B);
	set_name	(0XFFFDBF68,	"aAccessFlagFaul");
	create_strlit	(0XFFFDBF7C,	0XFFFDBF8E);
	set_name	(0XFFFDBF7C,	"aPermissionFaul");
	make_array	(0XFFFDBF8E,	0X2);
	create_strlit	(0XFFFDBF90,	0XFFFDBFAC);
	set_name	(0XFFFDBF90,	"aSynchronousExt");
	create_strlit	(0XFFFDBFAC,	0XFFFDBFC9);
	set_name	(0XFFFDBFAC,	"aAsynchronousEx_0");
	make_array	(0XFFFDBFC9,	0X3);
	create_strlit	(0XFFFDBFCC,	0XFFFDBFE7);
	set_name	(0XFFFDBFCC,	"aIfar0xXFaultAd");
	create_strlit	(0XFFFDBFE8,	0XFFFDC00B);
	set_name	(0XFFFDBFE8,	"aIfsr0xXFaultSt");
	create_strlit	(0XFFFDC00C,	0XFFFDC039);
	set_name	(0XFFFDC00C,	"aFloatingPointC");
	make_array	(0XFFFDC039,	0X3);
	create_strlit	(0XFFFDC03C,	0XFFFDC047);
	set_name	(0XFFFDC03C,	"aTopInitC");
	create_strlit	(0XFFFDC048,	0XFFFDC058);
	set_name	(0XFFFDC048,	"aStartLevel0");
	create_strlit	(0XFFFDC058,	0XFFFDC063);
	set_name	(0XFFFDC058,	"aBootstrap2");
	create_strlit	(0XFFFDC064,	0XFFFDC06A);
	set_name	(0XFFFDC064,	"aQuiet");
	make_array	(0XFFFDC06A,	0X2);
	create_dword	(x=0XFFFDC06C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFDC070);
	create_dword	(x=0XFFFDC074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC07C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC08C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC09C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDC0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XFFFDC0A4,	0XFFFDC0B2);
	set_name	(0XFFFDC0A4,	"aImageEncKey");
	make_array	(0XFFFDC0B2,	0X2);
	create_strlit	(0XFFFDC0B4,	0XFFFDC0B8);
	set_name	(0XFFFDC0B4,	"aZzzz");
	create_strlit	(0XFFFDC0BC,	0XFFFDC0D5);
	set_name	(0XFFFDC0BC,	"aBootPartitionD");
	make_array	(0XFFFDC0D5,	0X3);
	create_strlit	(0XFFFDC0D8,	0XFFFDC0F1);
	set_name	(0XFFFDC0D8,	"aReadEmmcPubKey");
	make_array	(0XFFFDC0F1,	0X3);
	create_strlit	(0XFFFDC0F4,	0XFFFDC10B);
	set_name	(0XFFFDC0F4,	"aStartIDTcmVeri");
	create_strlit	(0XFFFDC10C,	0XFFFDC131);
	set_name	(0XFFFDC10C,	"aDtcmFaddr0xXPt");
	make_array	(0XFFFDC131,	0X3);
	create_strlit	(0XFFFDC134,	0XFFFDC159);
	set_name	(0XFFFDC134,	"aItcmFaddr0xXPt");
	make_array	(0XFFFDC159,	0X3);
	create_strlit	(0XFFFDC15C,	0XFFFDC174);
	set_name	(0XFFFDC15C,	"aFinishIDTcmVer");
	create_strlit	(0XFFFDC174,	0XFFFDC182);
	set_name	(0XFFFDC174,	"aTcmErrCount");
	make_array	(0XFFFDC182,	0X2);
	create_strlit	(0XFFFDC184,	0XFFFDC187);
	set_name	(0XFFFDC184,	"aU");
	create_strlit	(0XFFFDC188,	0XFFFDC18E);
	set_name	(0XFFFDC188,	"aDelay");
	make_array	(0XFFFDC18E,	0X2);
	create_strlit	(0XFFFDC190,	0XFFFDC1AC);
	set_name	(0XFFFDC190,	"aInfoFcUnrdLoad");
	create_strlit	(0XFFFDC1AC,	0XFFFDC1BD);
	set_name	(0XFFFDC1AC,	"aNoActiveState");
	make_array	(0XFFFDC1BD,	0X3);
	create_strlit	(0XFFFDC1C0,	0XFFFDC1CA);
	set_name	(0XFFFDC1C0,	"aProductsn");
	make_array	(0XFFFDC1CA,	0X2);
	create_strlit	(0XFFFDC1CC,	0XFFFDC1DE);
	set_name	(0XFFFDC1CC,	"aNoProductionSn");
	make_array	(0XFFFDC1DE,	0X2);
	create_strlit	(0XFFFDC1E0,	0XFFFDC1FB);
	set_name	(0XFFFDC1E0,	"aFcProductionSn");
	create_strlit	(0XFFFDC1FC,	0XFFFDC213);
	set_name	(0XFFFDC1FC,	"aErrorPliInfoFa");
	create_strlit	(0XFFFDC214,	0XFFFDC232);
	set_name	(0XFFFDC214,	"aErrorVerifyPli");
	make_array	(0XFFFDC232,	0X2);
	create_strlit	(0XFFFDC234,	0XFFFDC23A);
	set_name	(0XFFFDC234,	"aFcFw");
	make_array	(0XFFFDC23A,	0X2);
	create_strlit	(0XFFFDC23C,	0XFFFDC260);
	set_name	(0XFFFDC23C,	"aErrorGetFcPart");
	create_strlit	(0XFFFDC260,	0XFFFDC286);
	set_name	(0XFFFDC260,	"aErrorReadFlyct");
	make_array	(0XFFFDC286,	0X2);
	create_strlit	(0XFFFDC288,	0XFFFDC2A4);
	set_name	(0XFFFDC288,	"aErrFctrlImgSiz");
	create_strlit	(0XFFFDC2A4,	0XFFFDC2C3);
	set_name	(0XFFFDC2A4,	"aErrorReadFcFir");
	create_strlit	(0XFFFDC2C4,	0XFFFDC2CC);
	set_name	(0XFFFDC2C4,	"aFlyctrl");
	create_strlit	(0XFFFDC2CC,	0XFFFDC2EA);
	set_name	(0XFFFDC2CC,	"aErrorFcImageVe");
	make_array	(0XFFFDC2EA,	0X2);
	create_strlit	(0XFFFDC2EC,	0XFFFDC2F5);
	set_name	(0XFFFDC2EC,	"aRecovery");
	make_array	(0XFFFDC2F5,	0X3);
	create_strlit	(0XFFFDC2F8,	0XFFFDC2FF);
	set_name	(0XFFFDC2F8,	"aNormal");
	create_strlit	(0XFFFDC300,	0XFFFDC327);
	set_name	(0XFFFDC300,	"aErrorBootParti");
	create_strlit	(0XFFFDC328,	0XFFFDC349);
	set_name	(0XFFFDC328,	"aErrorPartition");
	make_array	(0XFFFDC349,	0X3);
	create_strlit	(0XFFFDC34C,	0XFFFDC36D);
	set_name	(0XFFFDC34C,	"aErrorReadNorma");
	make_array	(0XFFFDC36D,	0X3);
	create_strlit	(0XFFFDC370,	0XFFFDC38F);
	set_name	(0XFFFDC370,	"aErrorPartition_0");
	create_strlit	(0XFFFDC390,	0XFFFDC3BD);
	set_name	(0XFFFDC390,	"aErrNormalImgOr");
	make_array	(0XFFFDC3BD,	0X3);
	create_strlit	(0XFFFDC3C0,	0XFFFDC3DF);
	set_name	(0XFFFDC3C0,	"aErrorCannotRea");
	create_strlit	(0XFFFDC3E0,	0XFFFDC40D);
	set_name	(0XFFFDC3E0,	"aSImgVerifyFail");
	make_array	(0XFFFDC40D,	0X3);
	create_strlit	(0XFFFDC410,	0XFFFDC420);
	set_name	(0XFFFDC410,	"aDtbProcFail");
	create_strlit	(0XFFFDC420,	0XFFFDC431);
	set_name	(0XFFFDC420,	"aBootFcFailed");
	make_array	(0XFFFDC431,	0X3);
	create_strlit	(0XFFFDC434,	0XFFFDC442);
	set_name	(0XFFFDC434,	"aCrashCounter");
	make_array	(0XFFFDC442,	0X2);
	create_strlit	(0XFFFDC444,	0XFFFDC44E);
	set_name	(0XFFFDC444,	"aBootMode");
	make_array	(0XFFFDC44E,	0X2);
	create_strlit	(0XFFFDC450,	0XFFFDC452);
	set_name	(0XFFFDC450,	"a1");
	make_array	(0XFFFDC452,	0X2);
	create_strlit	(0XFFFDC454,	0XFFFDC45E);
	set_name	(0XFFFDC454,	"aForceOta");
	make_array	(0XFFFDC45E,	0X2);
	create_strlit	(0XFFFDC460,	0XFFFDC464);
	set_name	(0XFFFDC460,	"aYes");
	create_strlit	(0XFFFDC464,	0XFFFDC475);
	set_name	(0XFFFDC464,	"aBootSFailed");
	make_array	(0XFFFDC475,	0X3);
	create_strlit	(0XFFFDC478,	0XFFFDC47E);
	set_name	(0XFFFDC478,	"aAboot");
	make_array	(0XFFFDC47E,	0X2);
	create_strlit	(0XFFFDC480,	0XFFFDC48B);
	set_name	(0XFFFDC480,	"aErrorS");
	create_byte	(0XFFFDC48C);
	create_strlit	(0XFFFDC48D,	0XFFFDC498);
	set_name	(0XFFFDC48D,	"aActory");
	create_byte	(0XFFFDC498);
	create_strlit	(0XFFFDC499,	0XFFFDC4A4);
	set_name	(0XFFFDC499,	"aRoduction");
	create_strlit	(0XFFFDC4A4,	0XFFFDC4AD);
	set_name	(0XFFFDC4A4,	"aBootargs");
	make_array	(0XFFFDC4AD,	0X3);
	create_strlit	(0XFFFDC4B0,	0XFFFDC4BA);
	set_name	(0XFFFDC4B0,	"aMpState");
	make_array	(0XFFFDC4BA,	0X2);
	create_strlit	(0XFFFDC4BC,	0XFFFDC4CC);
	set_name	(0XFFFDC4BC,	"aEfuseReadErr");
	create_strlit	(0XFFFDC4CC,	0XFFFDC4D5);
	set_name	(0XFFFDC4CC,	"aChipSn");
	make_array	(0XFFFDC4D5,	0X3);
	create_strlit	(0XFFFDC4D8,	0XFFFDC4DB);
	set_name	(0XFFFDC4D8,	"aX");
	create_strlit	(0XFFFDC4DC,	0XFFFDC4F6);
	set_name	(0XFFFDC4DC,	"aProductSnCallB");
	make_array	(0XFFFDC4F6,	0X2);
	create_strlit	(0XFFFDC4F8,	0XFFFDC510);
	set_name	(0XFFFDC4F8,	"aBoardSnCallBac");
	create_strlit	(0XFFFDC510,	0XFFFDC52C);
	set_name	(0XFFFDC510,	"aVerityDebugCal");
	create_strlit	(0XFFFDC52C,	0XFFFDC548);
	set_name	(0XFFFDC52C,	"aSecureDebugCal");
	create_strlit	(0XFFFDC548,	0XFFFDC560);
	set_name	(0XFFFDC548,	"aWifiKeyCallBac");
	create_strlit	(0XFFFDC560,	0XFFFDC57C);
	set_name	(0XFFFDC560,	"aKernelQuietCal");
	create_strlit	(0XFFFDC57C,	0XFFFDC58E);
	set_name	(0XFFFDC57C,	"aMpCallBackErr");
	make_array	(0XFFFDC58E,	0X2);
	create_strlit	(0XFFFDC590,	0XFFFDC5A0);
	set_name	(0XFFFDC590,	"aHexToStrErr");
	create_strlit	(0XFFFDC5A0,	0XFFFDC5B7);
	set_name	(0XFFFDC5A0,	"aChipSnCallBack");
	create_strlit	(0XFFFDC5B8,	0XFFFDC5C7);
	set_name	(0XFFFDC5B8,	"aDtInitFail");
	create_strlit	(0XFFFDC5C8,	0XFFFDC5D7);
	set_name	(0XFFFDC5C8,	"aDtWalkFail");
	create_strlit	(0XFFFDC5D8,	0XFFFDC5ED);
	set_name	(0XFFFDC5D8,	"aAppAbootFastbo");
	make_array	(0XFFFDC5ED,	0X3);
	create_strlit	(0XFFFDC5F0,	0XFFFDC5F4);
	set_name	(0XFFFDC5F0,	"aBuf");
	create_strlit	(0XFFFDC5F4,	0XFFFDC616);
	set_name	(0XFFFDC5F4,	"aUsbWriteQueueF");
	make_array	(0XFFFDC616,	0X2);
	create_strlit	(0XFFFDC618,	0XFFFDC649);
	set_name	(0XFFFDC618,	"aUsbWriteTransa");
	make_array	(0XFFFDC649,	0X3);
	create_strlit	(0XFFFDC64C,	0XFFFDC670);
	set_name	(0XFFFDC64C,	"aUsbWriteDoneEr");
	create_strlit	(0XFFFDC670,	0XFFFDC691);
	set_name	(0XFFFDC670,	"aUsbReadQueueFa");
	make_array	(0XFFFDC691,	0X3);
	create_strlit	(0XFFFDC694,	0XFFFDC6C4);
	set_name	(0XFFFDC694,	"aUsbReadTransac");
	create_strlit	(0XFFFDC6C4,	0XFFFDC6E7);
	set_name	(0XFFFDC6C4,	"aUsbReadDoneErr");
	create_strlit	(0XFFFDC6E8,	0XFFFDC6ED);
	set_name	(0XFFFDC6E8,	"aSS");
	make_array	(0XFFFDC6ED,	0X3);
	create_strlit	(0XFFFDC6F0,	0XFFFDC720);
	set_name	(0XFFFDC6F0,	"aCouldNotAlloca");
	create_strlit	(0XFFFDC720,	0XFFFDC725);
	set_name	(0XFFFDC720,	"aFail");
	make_array	(0XFFFDC725,	0X3);
	create_strlit	(0XFFFDC728,	0XFFFDC737);
	set_name	(0XFFFDC728,	"aUnknownReason");
	create_strlit	(0XFFFDC738,	0XFFFDC748);
	set_name	(0XFFFDC738,	"aUnknownCommand");
	create_strlit	(0XFFFDC748,	0XFFFDC757);
	set_name	(0XFFFDC748,	"aDataTooLarge");
	create_strlit	(0XFFFDC758,	0XFFFDC761);
	set_name	(0XFFFDC758,	"aData08x");
	make_array	(0XFFFDC761,	0X3);
	create_strlit	(0XFFFDC764,	0XFFFDC769);
	set_name	(0XFFFDC764,	"aOkay");
	make_array	(0XFFFDC769,	0X3);
	create_strlit	(0XFFFDC76C,	0XFFFDC773);
	set_name	(0XFFFDC76C,	"aInfoS");
	create_strlit	(0XFFFDC774,	0XFFFDC778);
	set_name	(0XFFFDC774,	"aAll");
	create_strlit	(0XFFFDC778,	0XFFFDC781);
	set_name	(0XFFFDC778,	"a0x123456");
	make_array	(0XFFFDC781,	0X3);
	create_strlit	(0XFFFDC784,	0XFFFDC78E);
	set_name	(0XFFFDC784,	"aDownload");
	make_array	(0XFFFDC78E,	0X2);
	create_strlit	(0XFFFDC790,	0XFFFDC798);
	set_name	(0XFFFDC790,	"aGetvar");
	create_strlit	(0XFFFDC798,	0XFFFDC7A0);
	set_name	(0XFFFDC798,	"aUpload");
	create_strlit	(0XFFFDC7A0,	0XFFFDC7A8);
	set_name	(0XFFFDC7A0,	"aVersion");
	create_strlit	(0XFFFDC7A8,	0XFFFDC7AC);
	set_name	(0XFFFDC7A8,	"a05");
	create_strlit	(0XFFFDC7AC,	0XFFFDC7B5);
	set_name	(0XFFFDC7AC,	"aFastboot");
	make_array	(0XFFFDC7B5,	0X3);
	create_strlit	(0XFFFDC7B8,	0XFFFDC7BF);
	set_name	(0XFFFDC7B8,	"aGoogle");
	create_strlit	(0XFFFDC7C0,	0XFFFDC7C8);
	set_name	(0XFFFDC7C0,	"aAndroid");
	create_strlit	(0XFFFDC7C8,	0XFFFDC7E6);
	set_name	(0XFFFDC7C8,	"aPartitionTable");
	make_array	(0XFFFDC7E6,	0X2);
	create_strlit	(0XFFFDC7E8,	0XFFFDC7F7);
	set_name	(0XFFFDC7E8,	"aSizeTooLarge");
	create_strlit	(0XFFFDC7F8,	0XFFFDC80C);
	set_name	(0XFFFDC7F8,	"aFlashEraseFail");
	create_strlit	(0XFFFDC80C,	0XFFFDC811);
	set_name	(0XFFFDC80C,	"aRrak");
	make_array	(0XFFFDC811,	0X3);
	create_strlit	(0XFFFDC814,	0XFFFDC819);
	set_name	(0XFFFDC814,	"aPrak");
	make_array	(0XFFFDC819,	0X3);
	create_strlit	(0XFFFDC81C,	0XFFFDC836);
	set_name	(0XFFFDC81C,	"aFailedToWriteP");
	make_array	(0XFFFDC836,	0X2);
	create_strlit	(0XFFFDC838,	0XFFFDC83E);
	set_name	(0XFFFDC838,	"aEfuse");
	make_array	(0XFFFDC83E,	0X2);
	create_strlit	(0XFFFDC840,	0XFFFDC853);
	set_name	(0XFFFDC840,	"aEfuseWriteFail");
	create_strlit	(0XFFFDC854,	0XFFFDC868);
	set_name	(0XFFFDC854,	"aEfuseVerifyFai");
	create_strlit	(0XFFFDC868,	0XFFFDC873);
	set_name	(0XFFFDC868,	"aBootloader");
	create_strlit	(0XFFFDC874,	0XFFFDC899);
	set_name	(0XFFFDC874,	"aTheBootareaImg");
	make_array	(0XFFFDC899,	0X3);
	create_strlit	(0XFFFDC89C,	0XFFFDC8A8);
	set_name	(0XFFFDC89C,	"aBootloader2");
	create_strlit	(0XFFFDC8A8,	0XFFFDC8CC);
	set_name	(0XFFFDC8A8,	"aTheFlyctrlImgI");
	create_strlit	(0XFFFDC8CC,	0XFFFDC8D5);
	set_name	(0XFFFDC8CC,	"aFlyctrl2");
	make_array	(0XFFFDC8D5,	0X3);
	create_strlit	(0XFFFDC8D8,	0XFFFDC8E4);
	set_name	(0XFFFDC8D8,	"aEfuseGroup");
	create_strlit	(0XFFFDC8E4,	0XFFFDC8FC);
	set_name	(0XFFFDC8E4,	"aEfuseGroupTest");
	create_strlit	(0XFFFDC8FC,	0XFFFDC907);
	set_name	(0XFFFDC8FC,	"aProductSn");
	create_strlit	(0XFFFDC908,	0XFFFDC924);
	set_name	(0XFFFDC908,	"aBurnSerialNumb");
	create_strlit	(0XFFFDC924,	0XFFFDC947);
	set_name	(0XFFFDC924,	"aTheNormalImgIs");
	create_strlit	(0XFFFDC948,	0XFFFDC96D);
	set_name	(0XFFFDC948,	"aTheRecoveryImg");
	make_array	(0XFFFDC96D,	0X3);
	create_strlit	(0XFFFDC970,	0XFFFDC984);
	set_name	(0XFFFDC970,	"aFlashWriteFail");
	create_strlit	(0XFFFDC984,	0XFFFDC9A7);
	set_name	(0XFFFDC984,	"aBogusSizeSpars");
	create_strlit	(0XFFFDC9A8,	0XFFFDC9CF);
	set_name	(0XFFFDC9A8,	"aChunkDataSizeE");
	create_strlit	(0XFFFDC9D0,	0XFFFDC9F4);
	set_name	(0XFFFDC9D0,	"aBogusChunkSize");
	create_strlit	(0XFFFDC9F4,	0XFFFDCA12);
	set_name	(0XFFFDC9F4,	"aBogusSizeForRa");
	make_array	(0XFFFDCA12,	0X2);
	create_strlit	(0XFFFDCA14,	0XFFFDCA39);
	set_name	(0XFFFDCA14,	"aBogusChunkSize_0");
	make_array	(0XFFFDCA39,	0X3);
	create_strlit	(0XFFFDCA3C,	0XFFFDCA5F);
	set_name	(0XFFFDCA3C,	"aMallocFailedFo");
	create_strlit	(0XFFFDCA60,	0XFFFDCA95);
	set_name	(0XFFFDCA60,	"aChunkDataSizeF");
	make_array	(0XFFFDCA95,	0X3);
	create_strlit	(0XFFFDCA98,	0XFFFDCABC);
	set_name	(0XFFFDCA98,	"aBogusSizeForCh");
	create_strlit	(0XFFFDCABC,	0XFFFDCAE6);
	set_name	(0XFFFDCABC,	"aBogusChunkSize_1");
	make_array	(0XFFFDCAE6,	0X2);
	create_strlit	(0XFFFDCAE8,	0XFFFDCB06);
	set_name	(0XFFFDCAE8,	"aBogusSizeForCh_0");
	make_array	(0XFFFDCB06,	0X2);
	create_strlit	(0XFFFDCB08,	0XFFFDCB1F);
	set_name	(0XFFFDCB08,	"aUnkownChunkTyp");
	create_strlit	(0XFFFDCB20,	0XFFFDCB33);
	set_name	(0XFFFDCB20,	"aUnknownChunkTy");
	create_strlit	(0XFFFDCB34,	0XFFFDCB4F);
	set_name	(0XFFFDCB34,	"aSparseImageWri");
	create_strlit	(0XFFFDCB50,	0XFFFDCB58);
	set_name	(0XFFFDCB50,	"aProduct");
	create_strlit	(0XFFFDCB58,	0XFFFDCB63);
	set_name	(0XFFFDCB58,	"aEagleFpga");
	create_strlit	(0XFFFDCB64,	0XFFFDCB6B);
	set_name	(0XFFFDCB64,	"aKernel");
	create_strlit	(0XFFFDCB6C,	0XFFFDCB6F);
	set_name	(0XFFFDCB6C,	"aLk");
	create_strlit	(0XFFFDCB70,	0XFFFDCB79);
	set_name	(0XFFFDCB70,	"aSerialno");
	make_array	(0XFFFDCB79,	0X3);
	create_strlit	(0XFFFDCB7C,	0XFFFDCB83);
	set_name	(0XFFFDCB7C,	"aFlash");
	create_strlit	(0XFFFDCB84,	0XFFFDCB8B);
	set_name	(0XFFFDCB84,	"aErase");
	create_strlit	(0XFFFDCB8C,	0XFFFDCB95);
	set_name	(0XFFFDCB8C,	"aContinue");
	make_array	(0XFFFDCB95,	0X3);
	create_strlit	(0XFFFDCB98,	0XFFFDCB9F);
	set_name	(0XFFFDCB98,	"aReboot");
	create_strlit	(0XFFFDCBA0,	0XFFFDCBB2);
	set_name	(0XFFFDCBA0,	"aRebootBootload");
	make_array	(0XFFFDCBB2,	0X2);
	create_strlit	(0XFFFDCBB4,	0XFFFDCBCA);
	set_name	(0XFFFDCBB4,	"aSeLcsGetFail0x");
	make_array	(0XFFFDCBCA,	0X2);
	create_strlit	(0XFFFDCBCC,	0XFFFDCBEA);
	set_name	(0XFFFDCBCC,	"aBootVerifyInit");
	make_array	(0XFFFDCBEA,	0X2);
	create_strlit	(0XFFFDCBEC,	0XFFFDCBFA);
	set_name	(0XFFFDCBEC,	"aLcsErrorD");
	make_array	(0XFFFDCBFA,	0X2);
	create_strlit	(0XFFFDCBFC,	0XFFFDCC1A);
	set_name	(0XFFFDCBFC,	"aSeGetPubkeyHas");
	make_array	(0XFFFDCC1A,	0X2);
	create_strlit	(0XFFFDCC1C,	0XFFFDCC3C);
	set_name	(0XFFFDCC1C,	"aSeKcstKoemComp");
	create_strlit	(0XFFFDCC3C,	0XFFFDCC59);
	set_name	(0XFFFDCC3C,	"aSeKeyDerivatio");
	make_array	(0XFFFDCC59,	0X3);
	create_strlit	(0XFFFDCC5C,	0XFFFDCC81);
	set_name	(0XFFFDCC5C,	"aKeymgrGetRomPu");
	make_array	(0XFFFDCC81,	0X3);
	create_strlit	(0XFFFDCC84,	0XFFFDCCA2);
	set_name	(0XFFFDCC84,	"aKeymgrGetRomrr");
	make_array	(0XFFFDCCA2,	0X2);
	create_strlit	(0XFFFDCCA4,	0XFFFDCCC1);
	set_name	(0XFFFDCCA4,	"aGBootPubkeyFun");
	make_array	(0XFFFDCCC1,	0X3);
	create_strlit	(0XFFFDCCC4,	0XFFFDCCE0);
	set_name	(0XFFFDCCC4,	"aSeVerifyPubkey");
	create_strlit	(0XFFFDCCE0,	0XFFFDCCE6);
	set_name	(0XFFFDCCE0,	"aShell");
	make_array	(0XFFFDCCE6,	0X2);
	create_strlit	(0XFFFDCCE8,	0XFFFDCD2B);
	set_name	(0XFFFDCCE8,	"aSDDriverInitFa");
	create_strlit	(0XFFFDCD2C,	0XFFFDCD6F);
	set_name	(0XFFFDCD2C,	"aSDDriverFiniFa");
	create_strlit	(0XFFFDCD70,	0XFFFDCD81);
	set_name	(0XFFFDCD70,	"aDwcCore0xX");
	make_array	(0XFFFDCD81,	0X3);
	create_strlit	(0XFFFDCD84,	0XFFFDCD99);
	set_name	(0XFFFDCD84,	"aCtrlStateDS");
	make_array	(0XFFFDCD99,	0X3);
	create_strlit	(0XFFFDCD9C,	0XFFFDCDB7);
	set_name	(0XFFFDCD9C,	"aEpIndexDStatus");
	create_strlit	(0XFFFDCDB8,	0XFFFDCDCC);
	set_name	(0XFFFDCDB8,	"aPhyNumD");
	create_strlit	(0XFFFDCDCC,	0XFFFDCDE0);
	set_name	(0XFFFDCDCC,	"aUsbEpNumD");
	create_strlit	(0XFFFDCDE0,	0XFFFDCDF4);
	set_name	(0XFFFDCDE0,	"aDirD");
	create_strlit	(0XFFFDCDF4,	0XFFFDCE08);
	set_name	(0XFFFDCDF4,	"aTypeD");
	create_strlit	(0XFFFDCE08,	0XFFFDCE1C);
	set_name	(0XFFFDCE08,	"aResourceIdxD");
	create_strlit	(0XFFFDCE1C,	0XFFFDCE30);
	set_name	(0XFFFDCE1C,	"aTrbQueuedD");
	create_strlit	(0XFFFDCE30,	0XFFFDCE44);
	set_name	(0XFFFDCE30,	"aBytesQueuedD");
	create_strlit	(0XFFFDCE44,	0XFFFDCE5C);
	set_name	(0XFFFDCE44,	"aStateDS");
	create_strlit	(0XFFFDCE5C,	0XFFFDCE7B);
	set_name	(0XFFFDCE5C,	"aEpReqLenDTrbct");
	create_strlit	(0XFFFDCE7C,	0XFFFDCE94);
	set_name	(0XFFFDCE7C,	"aDevUsbDwcUsb30");
	create_strlit	(0XFFFDCE94,	0XFFFDCEC8);
	set_name	(0XFFFDCE94,	"aDwcEpPhyToInde");
	create_strlit	(0XFFFDCEC8,	0XFFFDCED3);
	set_name	(0XFFFDCEC8,	"aEpNull");
	create_strlit	(0XFFFDCED4,	0XFFFDCED7);
	create_strlit	(0XFFFDCED8,	0XFFFDCEF1);
	set_name	(0XFFFDCED8,	"aEpEvent0xXDeta");
	make_array	(0XFFFDCEF1,	0X3);
	create_strlit	(0XFFFDCEF4,	0XFFFDCF0F);
	set_name	(0XFFFDCEF4,	"aEventIdDS");
	create_strlit	(0XFFFDCF10,	0XFFFDCF27);
	set_name	(0XFFFDCF10,	"aEpPhyNumD");
	create_strlit	(0XFFFDCF28,	0XFFFDCF43);
	set_name	(0XFFFDCF28,	"aEventCtrlStage");
	create_strlit	(0XFFFDCF44,	0XFFFDCF5B);
	set_name	(0XFFFDCF44,	"aEventStatusD");
	create_strlit	(0XFFFDCF5C,	0XFFFDCF73);
	set_name	(0XFFFDCF5C,	"aXferResIdxD");
	create_strlit	(0XFFFDCF74,	0XFFFDCF8B);
	set_name	(0XFFFDCF74,	"aEventParamD");
	create_strlit	(0XFFFDCF8C,	0XFFFDCFA7);
	set_name	(0XFFFDCF8C,	"aEventCmdTypeDS");
	create_strlit	(0XFFFDCFA8,	0XFFFDCFC2);
	set_name	(0XFFFDCFA8,	"aIndexDwcMaxNum");
	make_array	(0XFFFDCFC2,	0X2);
	create_strlit	(0XFFFDCFC4,	0XFFFDCFD8);
	set_name	(0XFFFDCFC4,	"aEpTrbQueued0");
	create_strlit	(0XFFFDCFD8,	0XFFFDD012);
	set_name	(0XFFFDCFD8,	"aErrorEnoughTrb");
	make_array	(0XFFFDD012,	0X2);
	create_strlit	(0XFFFDD014,	0XFFFDD03D);
	set_name	(0XFFFDD014,	"aErrorIncreaseT");
	make_array	(0XFFFDD03D,	0X3);
	create_strlit	(0XFFFDD040,	0XFFFDD068);
	set_name	(0XFFFDD040,	"aErrorPhyEpNumD");
	create_strlit	(0XFFFDD068,	0XFFFDD0A3);
	set_name	(0XFFFDD068,	"aAttemptingStar");
	create_strlit	(0XFFFDD0A4,	0XFFFDD0C2);
	set_name	(0XFFFDD0A4,	"aDwcEventEpCmdC");
	make_array	(0XFFFDD0C2,	0X2);
	create_strlit	(0XFFFDD0C4,	0XFFFDD0E2);
	set_name	(0XFFFDD0C4,	"aDwcEventEpXfer");
	make_array	(0XFFFDD0E2,	0X2);
	create_strlit	(0XFFFDD0E4,	0XFFFDD102);
	set_name	(0XFFFDD0E4,	"aDwcEventEpXfer_0");
	make_array	(0XFFFDD102,	0X2);
	create_strlit	(0XFFFDD104,	0XFFFDD122);
	set_name	(0XFFFDD104,	"aDwcEventEpXfer_1");
	make_array	(0XFFFDD122,	0X2);
	create_strlit	(0XFFFDD124,	0XFFFDD155);
	set_name	(0XFFFDD124,	"aDwcEventDevice");
	make_array	(0XFFFDD155,	0X3);
	create_strlit	(0XFFFDD158,	0XFFFDD189);
	set_name	(0XFFFDD158,	"aDwcEventDevice_0");
	make_array	(0XFFFDD189,	0X3);
	create_strlit	(0XFFFDD18C,	0XFFFDD1BD);
	set_name	(0XFFFDD18C,	"aDwcEventDevice_1");
	make_array	(0XFFFDD1BD,	0X3);
	create_strlit	(0XFFFDD1C0,	0XFFFDD1F1);
	set_name	(0XFFFDD1C0,	"aDwcEventDevice_2");
	make_array	(0XFFFDD1F1,	0X3);
	create_strlit	(0XFFFDD1F4,	0XFFFDD225);
	set_name	(0XFFFDD1F4,	"aDwcEventDevice_3");
	make_array	(0XFFFDD225,	0X3);
	create_strlit	(0XFFFDD228,	0XFFFDD259);
	set_name	(0XFFFDD228,	"aDwcEventDevice_4");
	make_array	(0XFFFDD259,	0X3);
	create_strlit	(0XFFFDD25C,	0XFFFDD28D);
	set_name	(0XFFFDD25C,	"aDwcEventDevice_5");
	make_array	(0XFFFDD28D,	0X3);
	create_strlit	(0XFFFDD290,	0XFFFDD2C1);
	set_name	(0XFFFDD290,	"aDwcEventDevice_6");
	make_array	(0XFFFDD2C1,	0X3);
	create_strlit	(0XFFFDD2C4,	0XFFFDD2F5);
	set_name	(0XFFFDD2C4,	"aDwcEventDevice_7");
	make_array	(0XFFFDD2F5,	0X3);
	create_strlit	(0XFFFDD2F8,	0XFFFDD329);
	set_name	(0XFFFDD2F8,	"aDwcEventDevice_8");
	make_array	(0XFFFDD329,	0X3);
	create_strlit	(0XFFFDD32C,	0XFFFDD35D);
	set_name	(0XFFFDD32C,	"aDwcEventDevice_9");
	make_array	(0XFFFDD35D,	0X3);
	create_strlit	(0XFFFDD360,	0XFFFDD391);
	set_name	(0XFFFDD360,	"aDwcEventDevice_10");
	make_array	(0XFFFDD391,	0X3);
	create_strlit	(0XFFFDD394,	0XFFFDD3AB);
	set_name	(0XFFFDD394,	"aEpFsmInit");
	create_strlit	(0XFFFDD3AC,	0XFFFDD3C3);
	set_name	(0XFFFDD3AC,	"aEpFsmSetup");
	create_strlit	(0XFFFDD3C4,	0XFFFDD3DB);
	set_name	(0XFFFDD3C4,	"aEpFsmCtrlData");
	create_strlit	(0XFFFDD3DC,	0XFFFDD3F3);
	set_name	(0XFFFDD3DC,	"aEpFsmWaitForHo");
	create_strlit	(0XFFFDD3F4,	0XFFFDD40B);
	set_name	(0XFFFDD3F4,	"aEpFsmWaitForHo_0");
	create_strlit	(0XFFFDD40C,	0XFFFDD423);
	set_name	(0XFFFDD40C,	"aEpFsmStatus2");
	create_strlit	(0XFFFDD424,	0XFFFDD43B);
	set_name	(0XFFFDD424,	"aEpFsmStatus3");
	create_strlit	(0XFFFDD43C,	0XFFFDD453);
	set_name	(0XFFFDD43C,	"aEpFsmStall");
	create_strlit	(0XFFFDD454,	0XFFFDD462);
	set_name	(0XFFFDD454,	"aEpStateInit");
	make_array	(0XFFFDD462,	0X2);
	create_strlit	(0XFFFDD464,	0XFFFDD476);
	set_name	(0XFFFDD464,	"aEpStateInactiv");
	make_array	(0XFFFDD476,	0X2);
	create_strlit	(0XFFFDD478,	0XFFFDD490);
	set_name	(0XFFFDD478,	"aEpStateStartTr");
	create_strlit	(0XFFFDD490,	0XFFFDD4A6);
	set_name	(0XFFFDD490,	"aEpStateXferInP");
	make_array	(0XFFFDD4A6,	0X2);
	create_strlit	(0XFFFDD4A8,	0XFFFDD4B6);
	set_name	(0XFFFDD4A8,	"aOn");
	make_array	(0XFFFDD4B6,	0X2);
	create_strlit	(0XFFFDD4B8,	0XFFFDD4C6);
	set_name	(0XFFFDD4B8,	"aL1");
	make_array	(0XFFFDD4C6,	0X2);
	create_strlit	(0XFFFDD4C8,	0XFFFDD4D6);
	set_name	(0XFFFDD4C8,	"aL2");
	make_array	(0XFFFDD4D6,	0X2);
	create_strlit	(0XFFFDD4D8,	0XFFFDD4E6);
	set_name	(0XFFFDD4D8,	"aDisconnected");
	make_array	(0XFFFDD4E6,	0X2);
	create_strlit	(0XFFFDD4E8,	0XFFFDD4F6);
	set_name	(0XFFFDD4E8,	"aEarlySuspend");
	make_array	(0XFFFDD4F6,	0X2);
	create_strlit	(0XFFFDD4F8,	0XFFFDD506);
	set_name	(0XFFFDD4F8,	"aReset");
	make_array	(0XFFFDD506,	0X2);
	create_strlit	(0XFFFDD508,	0XFFFDD516);
	set_name	(0XFFFDD508,	"aResume");
	make_array	(0XFFFDD516,	0X2);
	create_strlit	(0XFFFDD518,	0XFFFDD525);
	set_name	(0XFFFDD518,	"aU0");
	make_array	(0XFFFDD525,	0X3);
	create_strlit	(0XFFFDD528,	0XFFFDD535);
	set_name	(0XFFFDD528,	"aU1");
	make_array	(0XFFFDD535,	0X3);
	create_strlit	(0XFFFDD538,	0XFFFDD545);
	set_name	(0XFFFDD538,	"aU2");
	make_array	(0XFFFDD545,	0X3);
	create_strlit	(0XFFFDD548,	0XFFFDD555);
	set_name	(0XFFFDD548,	"aU3");
	make_array	(0XFFFDD555,	0X3);
	create_strlit	(0XFFFDD558,	0XFFFDD565);
	set_name	(0XFFFDD558,	"aSsDis");
	make_array	(0XFFFDD565,	0X3);
	create_strlit	(0XFFFDD568,	0XFFFDD575);
	set_name	(0XFFFDD568,	"aRxDet");
	make_array	(0XFFFDD575,	0X3);
	create_strlit	(0XFFFDD578,	0XFFFDD585);
	set_name	(0XFFFDD578,	"aSsInact");
	make_array	(0XFFFDD585,	0X3);
	create_strlit	(0XFFFDD588,	0XFFFDD595);
	set_name	(0XFFFDD588,	"aPoll");
	make_array	(0XFFFDD595,	0X3);
	create_strlit	(0XFFFDD598,	0XFFFDD5A5);
	set_name	(0XFFFDD598,	"aRecov");
	make_array	(0XFFFDD5A5,	0X3);
	create_strlit	(0XFFFDD5A8,	0XFFFDD5B5);
	set_name	(0XFFFDD5A8,	"aHreset");
	make_array	(0XFFFDD5B5,	0X3);
	create_strlit	(0XFFFDD5B8,	0XFFFDD5C5);
	set_name	(0XFFFDD5B8,	"aCmply");
	make_array	(0XFFFDD5C5,	0X3);
	create_strlit	(0XFFFDD5C8,	0XFFFDD5D5);
	set_name	(0XFFFDD5C8,	"aLpbk");
	make_array	(0XFFFDD5D5,	0X3);
	create_strlit	(0XFFFDD5D8,	0XFFFDD5E5);
	set_name	(0XFFFDD5D8,	"aResumeReset");
	make_array	(0XFFFDD5E5,	0X3);
	create_strlit	(0XFFFDD5E8,	0XFFFDD5FC);
	set_name	(0XFFFDD5E8,	"aDstsConnectspd");
	create_strlit	(0XFFFDD5FC,	0XFFFDD610);
	set_name	(0XFFFDD5FC,	"aDstsConnectspd_0");
	create_strlit	(0XFFFDD610,	0XFFFDD624);
	set_name	(0XFFFDD610,	"aDstsConnectspd_1");
	create_strlit	(0XFFFDD624,	0XFFFDD638);
	set_name	(0XFFFDD624,	"aDstsConnectspd_2");
	create_strlit	(0XFFFDD638,	0XFFFDD653);
	set_name	(0XFFFDD638,	"aDepcmdCmdSetEp");
	create_strlit	(0XFFFDD654,	0XFFFDD66F);
	set_name	(0XFFFDD654,	"aDepcmdCmdSetTr");
	create_strlit	(0XFFFDD670,	0XFFFDD68B);
	set_name	(0XFFFDD670,	"aDepcmdCmdGetEp");
	create_strlit	(0XFFFDD68C,	0XFFFDD6A7);
	set_name	(0XFFFDD68C,	"aDepcmdCmdSetSt");
	create_strlit	(0XFFFDD6A8,	0XFFFDD6C3);
	set_name	(0XFFFDD6A8,	"aDepcmdCmdClear");
	create_strlit	(0XFFFDD6C4,	0XFFFDD6DF);
	set_name	(0XFFFDD6C4,	"aDepcmdCmdStart");
	create_strlit	(0XFFFDD6E0,	0XFFFDD6FB);
	set_name	(0XFFFDD6E0,	"aDepcmdCmdUpdat");
	create_strlit	(0XFFFDD6FC,	0XFFFDD717);
	set_name	(0XFFFDD6FC,	"aDepcmdCmdEndTr");
	create_strlit	(0XFFFDD718,	0XFFFDD733);
	set_name	(0XFFFDD718,	"aDepcmdCmdStart_0");
	create_strlit	(0XFFFDD734,	0XFFFDD743);
	set_name	(0XFFFDD734,	"aDevSetupPkt");
	create_strlit	(0XFFFDD744,	0XFFFDD74F);
	set_name	(0XFFFDD744,	"aNumOfTrb");
	create_strlit	(0XFFFDD750,	0XFFFDD774);
	set_name	(0XFFFDD750,	"aUnhandledDevic");
	create_strlit	(0XFFFDD774,	0XFFFDD799);
	set_name	(0XFFFDD774,	"aEpStateEpState");
	make_array	(0XFFFDD799,	0X3);
	create_strlit	(0XFFFDD79C,	0XFFFDD7AE);
	set_name	(0XFFFDD79C,	"aEventStatus0");
	make_array	(0XFFFDD7AE,	0X2);
	create_strlit	(0XFFFDD7B0,	0XFFFDD7C0);
	set_name	(0XFFFDD7B0,	"aEpPhyNum0");
	create_strlit	(0XFFFDD7C0,	0XFFFDD7E3);
	set_name	(0XFFFDD7C0,	"aEpStateEpState_0");
	create_strlit	(0XFFFDD7E4,	0XFFFDD80E);
	set_name	(0XFFFDD7E4,	"aSIgnoreTheUnex");
	make_array	(0XFFFDD80E,	0X2);
	create_strlit	(0XFFFDD810,	0XFFFDD839);
	set_name	(0XFFFDD810,	"aEventCtrlStage_0");
	make_array	(0XFFFDD839,	0X3);
	create_strlit	(0XFFFDD83C,	0XFFFDD84C);
	set_name	(0XFFFDD83C,	"aEpPhyNum1");
	create_strlit	(0XFFFDD84C,	0XFFFDD865);
	set_name	(0XFFFDD84C,	"aInvalidCtrlSta");
	make_array	(0XFFFDD865,	0X3);
	create_strlit	(0XFFFDD868,	0XFFFDD88D);
	set_name	(0XFFFDD868,	"aEpStateIsInval");
	make_array	(0XFFFDD88D,	0X3);
	create_strlit	(0XFFFDD890,	0XFFFDD8A3);
	set_name	(0XFFFDD890,	"aDevEpIndexTrb");
	create_strlit	(0XFFFDD8A4,	0XFFFDD8AC);
	set_name	(0XFFFDD8A4,	"aEpTrb");
	create_strlit	(0XFFFDD8AC,	0XFFFDD8C7);
	set_name	(0XFFFDD8AC,	"aDevUsbDwcUsb30_0");
	create_strlit	(0XFFFDD8C8,	0XFFFDD8E1);
	set_name	(0XFFFDD8C8,	"aTdAddrLow0xf0");
	make_array	(0XFFFDD8E1,	0X3);
	create_strlit	(0XFFFDD8E4,	0XFFFDD8EB);
	set_name	(0XFFFDD8E4,	"aActive");
	create_strlit	(0XFFFDD8EC,	0XFFFDD909);
	set_name	(0XFFFDD8EC,	"aDeviceCommandF");
	make_array	(0XFFFDD909,	0X3);
	create_strlit	(0XFFFDD90C,	0XFFFDD917);
	set_name	(0XFFFDD90C,	"aCount4");
	create_strlit	(0XFFFDD918,	0XFFFDD948);
	set_name	(0XFFFDD918,	"aEventBufferIsF");
	create_strlit	(0XFFFDD948,	0XFFFDD961);
	set_name	(0XFFFDD948,	"aDwcUsbCrtInitF");
	make_array	(0XFFFDD961,	0X3);
	create_strlit	(0XFFFDD964,	0XFFFDD96E);
	set_name	(0XFFFDD964,	"aUnknown");
	make_array	(0XFFFDD96E,	0X2);
	create_strlit	(0XFFFDD970,	0XFFFDD988);
	set_name	(0XFFFDD970,	"aDevUsbDwcUsb30_1");
	create_strlit	(0XFFFDD988,	0XFFFDD98C);
	set_name	(0XFFFDD988,	"aUdc");
	create_strlit	(0XFFFDD98C,	0XFFFDD990);
	set_name	(0XFFFDD98C,	"aDwc");
	create_strlit	(0XFFFDD990,	0XFFFDD9D9);
	set_name	(0XFFFDD990,	"aUdcHandleSetup");
	make_array	(0XFFFDD9D9,	0X3);
	create_strlit	(0XFFFDD9DC,	0XFFFDD9F9);
	set_name	(0XFFFDD9DC,	"aConfigDNotSupp");
	make_array	(0XFFFDD9F9,	0X3);
	create_strlit	(0XFFFDD9FC,	0XFFFDDA2E);
	set_name	(0XFFFDD9FC,	"aStallUnsupport");
	make_array	(0XFFFDDA2E,	0X2);
	create_strlit	(0XFFFDDA30,	0XFFFDDA38);
	set_name	(0XFFFDDA30,	"aUdcDev");
	create_strlit	(0XFFFDDA38,	0XFFFDDA4D);
	set_name	(0XFFFDDA38,	"aUdcDevCtrlRxBu");
	make_array	(0XFFFDDA4D,	0X3);
	create_strlit	(0XFFFDDA50,	0XFFFDDA65);
	set_name	(0XFFFDDA50,	"aUdcDevCtrlTxBu");
	make_array	(0XFFFDDA65,	0X3);
	create_strlit	(0XFFFDDA68,	0XFFFDDA7D);
	set_name	(0XFFFDDA68,	"aDwcConfigEvent");
	make_array	(0XFFFDDA7D,	0X3);
	create_strlit	(0XFFFDDA80,	0XFFFDDA87);
	set_name	(0XFFFDDA80,	"aGadget");
	create_strlit	(0XFFFDDA88,	0XFFFDDAA4);
	set_name	(0XFFFDDA88,	"aOnlyOneGadgetS");
	create_strlit	(0XFFFDDAA4,	0XFFFDDAAC);
	set_name	(0XFFFDDAA4,	"aDwcDev");
	create_strlit	(0XFFFDDAAC,	0XFFFDDAB0);
	set_name	(0XFFFDDAAC,	"aEpt");
	create_strlit	(0XFFFDDAB0,	0XFFFDDAB9);
	set_name	(0XFFFDDAB0,	"aEptTrb");
	make_array	(0XFFFDDAB9,	0X3);
	create_strlit	(0XFFFDDABC,	0XFFFDDAC0);
	set_name	(0XFFFDDABC,	"aReq");
	create_strlit	(0XFFFDDAC0,	0XFFFDDACB);
	set_name	(0XFFFDDAC0,	"aGetStatus");
	create_strlit	(0XFFFDDACC,	0XFFFDDADA);
	set_name	(0XFFFDDACC,	"aClearFeature");
	make_array	(0XFFFDDADA,	0X2);
	create_strlit	(0XFFFDDADC,	0XFFFDDAE8);
	set_name	(0XFFFDDADC,	"aSetFeature");
	create_strlit	(0XFFFDDAE8,	0XFFFDDAF4);
	set_name	(0XFFFDDAE8,	"aSetAddress");
	create_strlit	(0XFFFDDAF4,	0XFFFDDB03);
	set_name	(0XFFFDDAF4,	"aGetDescriptor");
	create_strlit	(0XFFFDDB04,	0XFFFDDB13);
	set_name	(0XFFFDDB04,	"aSetDescriptor");
	create_strlit	(0XFFFDDB14,	0XFFFDDB26);
	set_name	(0XFFFDDB14,	"aGetConfigurati");
	make_array	(0XFFFDDB26,	0X2);
	create_strlit	(0XFFFDDB28,	0XFFFDDB3A);
	set_name	(0XFFFDDB28,	"aSetConfigurati");
	make_array	(0XFFFDDB3A,	0X2);
	create_strlit	(0XFFFDDB3C,	0XFFFDDB4A);
	set_name	(0XFFFDDB3C,	"aGetInterface");
	make_array	(0XFFFDDB4A,	0X2);
	create_strlit	(0XFFFDDB4C,	0XFFFDDB5A);
	set_name	(0XFFFDDB4C,	"aSetInterface");
	make_array	(0XFFFDDB5A,	0X2);
	create_strlit	(0XFFFDDB5C,	0XFFFDDB64);
	set_name	(0XFFFDDB5C,	"aSetSel");
	create_strlit	(0XFFFDDB64,	0XFFFDDB93);
	set_name	(0XFFFDDB64,	"aDwcEventHandle");
	create_strlit	(0XFFFDDB94,	0XFFFDDBBD);
	set_name	(0XFFFDDB94,	"aDwcEventHandle_0");
	make_array	(0XFFFDDBBD,	0X3);
	create_strlit	(0XFFFDDBC0,	0XFFFDDBE5);
	set_name	(0XFFFDDBC0,	"aDwcEventHandle_1");
	make_array	(0XFFFDDBE5,	0X3);
	create_strlit	(0XFFFDDBE8,	0XFFFDDC11);
	set_name	(0XFFFDDBE8,	"aDwcEventHandle_2");
	make_array	(0XFFFDDC11,	0X3);
	create_strlit	(0XFFFDDC14,	0XFFFDDC41);
	set_name	(0XFFFDDC14,	"aDwcEventHandle_3");
	make_array	(0XFFFDDC41,	0X3);
	create_strlit	(0XFFFDDC44,	0XFFFDDC74);
	set_name	(0XFFFDDC44,	"aDwcEventHandle_4");
	create_strlit	(0XFFFDDC74,	0XFFFDDCA4);
	set_name	(0XFFFDDC74,	"aDwcEventHandle_5");
	create_strlit	(0XFFFDDCA4,	0XFFFDDCCA);
	set_name	(0XFFFDDCA4,	"aDwcEventHandle_6");
	make_array	(0XFFFDDCCA,	0X2);
	create_strlit	(0XFFFDDCCC,	0XFFFDDCF5);
	set_name	(0XFFFDDCCC,	"aDwcEventHandle_7");
	make_array	(0XFFFDDCF5,	0X3);
	create_dword	(x=0XFFFDDCF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDCFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDD9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDB4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDDDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0XFFFDDDBC,	0X4);
	create_strlit	(0XFFFDDEE8,	0XFFFDDF16);
	set_name	(0XFFFDDEE8,	"aRegisterIntHan");
	create_strlit	(0XFFFDDF18,	0XFFFDDF2A);
	set_name	(0XFFFDDF18,	"aSUnimplemented");
	create_strlit	(0XFFFDDF2C,	0XFFFDDF3F);
	set_name	(0XFFFDDF2C,	"aArmGicResumeCp");
	create_strlit	(0XFFFDDF40,	0XFFFDDF54);
	set_name	(0XFFFDDF40,	"aArmGicSuspendC");
	create_strlit	(0XFFFDDF54,	0XFFFDDF68);
	set_name	(0XFFFDDF54,	"aArmGicInitPerc");
	create_strlit	(0XFFFDDF68,	0XFFFDDF75);
	set_name	(0XFFFDDF68,	"aPlatformFiq");
	create_strlit	(0XFFFDDF78,	0XFFFDDF93);
	set_name	(0XFFFDDF78,	"aAndroidbootSec");
	create_strlit	(0XFFFDDF94,	0XFFFDDFA9);
	set_name	(0XFFFDDF94,	"aAndroidbootVer");
	make_array	(0XFFFDDFA9,	0X3);
	create_strlit	(0XFFFDDFAC,	0XFFFDDFBE);
	set_name	(0XFFFDDFAC,	"aWifiKey0000000");
	make_array	(0XFFFDDFBE,	0X2);
	create_strlit	(0XFFFDDFC0,	0XFFFDDFDC);
	set_name	(0XFFFDDFC0,	"aRpmbMacCalcFai");
	create_strlit	(0XFFFDDFDC,	0XFFFDDFF9);
	set_name	(0XFFFDDFDC,	"aUnexpectedOpRe");
	make_array	(0XFFFDDFF9,	0X3);
	create_strlit	(0XFFFDDFFC,	0XFFFDE024);
	set_name	(0XFFFDDFFC,	"aUnexpectedMsgT");
	create_strlit	(0XFFFDE024,	0XFFFDE04F);
	set_name	(0XFFFDE024,	"aUnexpectedBloc");
	create_strlit	(0XFFFDE050,	0XFFFDE074);
	set_name	(0XFFFDE050,	"aCounterMismatc");
	create_strlit	(0XFFFDE074,	0XFFFDE085);
	set_name	(0XFFFDE074,	"aNonceMismatche");
	make_array	(0XFFFDE085,	0X3);
	create_strlit	(0XFFFDE088,	0XFFFDE09A);
	set_name	(0XFFFDE088,	"aMacMismatched");
	make_array	(0XFFFDE09A,	0X2);
	create_strlit	(0XFFFDE09C,	0XFFFDE0BD);
	set_name	(0XFFFDE09C,	"aWrBlkcntDRelWr");
	make_array	(0XFFFDE0BD,	0X3);
	create_strlit	(0XFFFDE0C0,	0XFFFDE0DB);
	set_name	(0XFFFDE0C0,	"aAllocRpmbDataf");
	create_strlit	(0XFFFDE0DC,	0XFFFDE0FF);
	set_name	(0XFFFDE0DC,	"aAllocRpmbReqRe");
	create_strlit	(0XFFFDE100,	0XFFFDE116);
	set_name	(0XFFFDE100,	"aRpmbReqPackFai");
	make_array	(0XFFFDE116,	0X2);
	create_strlit	(0XFFFDE118,	0XFFFDE137);
	set_name	(0XFFFDE118,	"aRpmbRead0xP0xX");
	create_strlit	(0XFFFDE138,	0XFFFDE152);
	set_name	(0XFFFDE138,	"aRpmbReadCntVal");
	make_array	(0XFFFDE152,	0X2);
	create_strlit	(0XFFFDE154,	0XFFFDE174);
	set_name	(0XFFFDE154,	"aRpmbKeyDerivat");
	create_strlit	(0XFFFDE174,	0XFFFDE19A);
	set_name	(0XFFFDE174,	"aRpmbWriteCount");
	make_array	(0XFFFDE19A,	0X2);
	create_strlit	(0XFFFDE19C,	0XFFFDE1B9);
	set_name	(0XFFFDE19C,	"aWriteUBlockSAt");
	make_array	(0XFFFDE1B9,	0X3);
	create_strlit	(0XFFFDE1BC,	0XFFFDE1EF);
	set_name	(0XFFFDE1BC,	"aFailedToSendTh");
	create_strlit	(0XFFFDE1F0,	0XFFFDE20D);
	set_name	(0XFFFDE1F0,	"aMaxWriteCounte");
	make_array	(0XFFFDE20D,	0X3);
	create_strlit	(0XFFFDE210,	0XFFFDE243);
	set_name	(0XFFFDE210,	"aFailedToSendTh_0");
	create_strlit	(0XFFFDE244,	0XFFFDE251);
	set_name	(0XFFFDE244,	"aOperationOk");
	make_array	(0XFFFDE251,	0X3);
	create_strlit	(0XFFFDE254,	0XFFFDE264);
	set_name	(0XFFFDE254,	"aGeneralFailure");
	create_strlit	(0XFFFDE264,	0XFFFDE2B0);
	set_name	(0XFFFDE264,	"aAuthentication");
	create_strlit	(0XFFFDE2B0,	0XFFFDE304);
	set_name	(0XFFFDE2B0,	"aCounterFailure");
	create_strlit	(0XFFFDE304,	0XFFFDE344);
	set_name	(0XFFFDE304,	"aAddressFailure");
	create_strlit	(0XFFFDE344,	0XFFFDE376);
	set_name	(0XFFFDE344,	"aWriteFailureDa");
	make_array	(0XFFFDE376,	0X2);
	create_strlit	(0XFFFDE378,	0XFFFDE3A8);
	set_name	(0XFFFDE378,	"aReadFailureDat");
	create_strlit	(0XFFFDE3A8,	0XFFFDE3CE);
	set_name	(0XFFFDE3A8,	"aAuthentication_0");
	make_array	(0XFFFDE3CE,	0X2);
	create_strlit	(0XFFFDE3D0,	0XFFFDE3DE);
	set_name	(0XFFFDE3D0,	"aHeadIsNull");
	make_array	(0XFFFDE3DE,	0X2);
	create_strlit	(0XFFFDE3E0,	0XFFFDE3F0);
	set_name	(0XFFFDE3E0,	"aHeaderCrcErr");
	create_strlit	(0XFFFDE3F0,	0XFFFDE3F9);
	set_name	(0XFFFDE3F0,	"aCurErr");
	make_array	(0XFFFDE3F9,	0X3);
	create_strlit	(0XFFFDE3FC,	0XFFFDE407);
	set_name	(0XFFFDE3FC,	"aBufEmpty");
	create_strlit	(0XFFFDE408,	0XFFFDE418);
	set_name	(0XFFFDE408,	"aReadHeadFail");
	create_strlit	(0XFFFDE418,	0XFFFDE427);
	set_name	(0XFFFDE418,	"aContextEmpty");
	create_strlit	(0XFFFDE428,	0XFFFDE436);
	set_name	(0XFFFDE428,	"aSizeTooBig");
	make_array	(0XFFFDE436,	0X2);
	create_strlit	(0XFFFDE438,	0XFFFDE44B);
	set_name	(0XFFFDE438,	"aReadContextFai");
	create_strlit	(0XFFFDE44C,	0XFFFDE45A);
	set_name	(0XFFFDE44C,	"aItemCrcErr");
	make_array	(0XFFFDE45A,	0X2);
	create_strlit	(0XFFFDE45C,	0XFFFDE477);
	set_name	(0XFFFDE45C,	"aContextDItemsI");
	create_strlit	(0XFFFDE478,	0XFFFDE498);
	set_name	(0XFFFDE478,	"aCallocUnrdHead");
	create_strlit	(0XFFFDE498,	0XFFFDE4C5);
	set_name	(0XFFFDE498,	"aRpmbReadHead1F");
	make_array	(0XFFFDE4C5,	0X3);
	create_strlit	(0XFFFDE4C8,	0XFFFDE4F5);
	set_name	(0XFFFDE4C8,	"aRpmbReadHead2F");
	make_array	(0XFFFDE4F5,	0X3);
	create_strlit	(0XFFFDE4F8,	0XFFFDE50F);
	set_name	(0XFFFDE4F8,	"aContext0HeadIn");
	create_strlit	(0XFFFDE510,	0XFFFDE527);
	set_name	(0XFFFDE510,	"aContext1HeadIn");
	create_strlit	(0XFFFDE528,	0XFFFDE54B);
	set_name	(0XFFFDE528,	"aNonContextIsVa");
	create_strlit	(0XFFFDE54C,	0XFFFDE566);
	set_name	(0XFFFDE54C,	"aNoUnrdInTwoDat");
	make_array	(0XFFFDE566,	0X2);
	create_strlit	(0XFFFDE568,	0XFFFDE587);
	set_name	(0XFFFDE568,	"aRpmbAllocUnrdH");
	create_strlit	(0XFFFDE588,	0XFFFDE59B);
	set_name	(0XFFFDE588,	"aGetSFailedD");
	create_strlit	(0XFFFDE59C,	0XFFFDE5AB);
	set_name	(0XFFFDE59C,	"aGetSFailed");
	create_strlit	(0XFFFDE5AC,	0XFFFDE5BB);
	set_name	(0XFFFDE5AC,	"aProductionSn");
	create_strlit	(0XFFFDE5BC,	0XFFFDE5C4);
	set_name	(0XFFFDE5BC,	"aBoardsn");
	create_strlit	(0XFFFDE5C4,	0XFFFDE5CE);
	set_name	(0XFFFDE5C4,	"aBoardSn");
	make_array	(0XFFFDE5CE,	0X2);
	create_strlit	(0XFFFDE5D0,	0XFFFDE5DC);
	set_name	(0XFFFDE5D0,	"aSecuredebug");
	create_strlit	(0XFFFDE5DC,	0XFFFDE5EB);
	set_name	(0XFFFDE5DC,	"aGetDFailed");
	create_strlit	(0XFFFDE5EC,	0XFFFDE607);
	create_strlit	(0XFFFDE608,	0XFFFDE614);
	set_name	(0XFFFDE608,	"aDmveritydis");
	create_strlit	(0XFFFDE614,	0XFFFDE629);
	make_array	(0XFFFDE629,	0X3);
	create_strlit	(0XFFFDE62C,	0XFFFDE641);
	set_name	(0XFFFDE62C,	"aGetWifiKeyFail");
	make_array	(0XFFFDE641,	0X3);
	create_strlit	(0XFFFDE644,	0XFFFDE649);
	set_name	(0XFFFDE644,	"a02x");
	make_array	(0XFFFDE649,	0X3);
	create_strlit	(0XFFFDE64C,	0XFFFDE65E);
	make_array	(0XFFFDE65E,	0X2);
	create_strlit	(0XFFFDE660,	0XFFFDE673);
	set_name	(0XFFFDE660,	"aStrToHexstrErr");
	create_dword	(x=0XFFFDE674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE67C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE68C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDE694);
	op_chr		(x,	0);
	create_word	(x=0XFFFDE698);
	op_chr		(x,	0);
	create_byte	(x=0XFFFDE69A);
	op_chr		(x,	0);
	create_strlit	(0XFFFDE69C,	0XFFFDE6A4);
	set_name	(0XFFFDE69C,	"aRpmbKeysasites");
	create_strlit	(0XFFFDE6A4,	0XFFFDE6CA);
	set_name	(0XFFFDE6A4,	"aSasitestTimeCo");
	make_array	(0XFFFDE6CA,	0X2);
	create_strlit	(0XFFFDE6CC,	0XFFFDE6E6);
	set_name	(0XFFFDE6CC,	"aSDFailOffByLlu");
	make_array	(0XFFFDE6E6,	0X2);
	create_strlit	(0XFFFDE6E8,	0XFFFDE712);
	set_name	(0XFFFDE6E8,	"aDevTimerArmGen");
	make_array	(0XFFFDE712,	0X2);
	create_strlit	(0XFFFDE714,	0XFFFDE720);
	set_name	(0XFFFDE714,	"aArgNull");
	create_strlit	(0XFFFDE720,	0XFFFDE753);
	set_name	(0XFFFDE720,	"aSDFailedToInit");
	create_strlit	(0XFFFDE754,	0XFFFDE771);
	set_name	(0XFFFDE754,	"aArmGenericTime");
	make_array	(0XFFFDE771,	0X3);
	create_strlit	(0XFFFDE774,	0XFFFDE799);
	set_name	(0XFFFDE774,	"aArmGenericTime_0");
	make_array	(0XFFFDE799,	0X3);
	create_strlit	(0XFFFDE79C,	0XFFFDE7B3);
	set_name	(0XFFFDE79C,	"aArmGenericTime_1");
	create_strlit	(0XFFFDE7B4,	0XFFFDE7BE);
	set_name	(0XFFFDE7B4,	"aBootstrap");
	make_array	(0XFFFDE7BE,	0X2);
	create_strlit	(0XFFFDE7C0,	0XFFFDE7C5);
	set_name	(0XFFFDE7C0,	"aIdle");
	make_array	(0XFFFDE7C5,	0X3);
	create_strlit	(0XFFFDE7C8,	0XFFFDE7D0);
	set_name	(0XFFFDE7C8,	"aIdleU");
	create_strlit	(0XFFFDE7D0,	0XFFFDE7F4);
	set_name	(0XFFFDE7D0,	"aSomehowFellThr");
	create_strlit	(0XFFFDE7F4,	0XFFFDE80E);
	set_name	(0XFFFDE7F4,	"aTimerPAlreadyI");
	create_dword	(0XFFFDE810);
	create_strlit	(0XFFFDEC10,	0XFFFDEC1A);
	set_name	(0XFFFDEC10,	"aBadMagic");
	create_strlit	(0XFFFDEC1C,	0XFFFDEC2D);
	set_name	(0XFFFDEC1C,	"aBogusSizeField");
	create_strlit	(0XFFFDEC30,	0XFFFDEC3E);
	set_name	(0XFFFDEC30,	"aVersion17");
	create_strlit	(0XFFFDEC40,	0XFFFDEC5A);
	set_name	(0XFFFDEC40,	"aInvalidStructu");
	create_strlit	(0XFFFDEC5C,	0XFFFDEC74);
	set_name	(0XFFFDEC5C,	"aInvalidStrings");
	create_strlit	(0XFFFDEC74,	0XFFFDEC86);
	set_name	(0XFFFDEC74,	"aUnexpectedDtEn");
	create_strlit	(0XFFFDEC88,	0XFFFDEC9C);
	set_name	(0XFFFDEC88,	"aUnexpectedNode");
	create_strlit	(0XFFFDEC9C,	0XFFFDECB1);
	set_name	(0XFFFDEC9C,	"aPropOutsideOfN");
	create_strlit	(0XFFFDECB4,	0XFFFDECC6);
	set_name	(0XFFFDECB4,	"aInvalidNodeTyp");
	create_strlit	(0XFFFDECC8,	0XFFFDECD8);
	set_name	(0XFFFDECC8,	"aIncompleteTree");
	create_strlit	(0XFFFDECD8,	0XFFFDECE2);
	set_name	(0XFFFDECD8,	"aVersion_0");
	create_strlit	(0XFFFDECE5,	0XFFFDECF3);
	set_name	(0XFFFDECE5,	"aArchS");
	create_strlit	(0XFFFDECF4,	0XFFFDECF8);
	set_name	(0XFFFDECF4,	"aArm");
	create_strlit	(0XFFFDECF9,	0XFFFDED07);
	set_name	(0XFFFDECF9,	"aPlatformS");
	create_strlit	(0XFFFDED08,	0XFFFDED0E);
	set_name	(0XFFFDED08,	"aEagle");
	create_strlit	(0XFFFDED11,	0XFFFDED1F);
	set_name	(0XFFFDED11,	"aTargetS");
	create_strlit	(0XFFFDED20,	0XFFFDED2C);
	set_name	(0XFFFDED20,	"aEagleWm230");
	create_strlit	(0XFFFDED2D,	0XFFFDED3B);
	set_name	(0XFFFDED2D,	"aProjectS");
	create_strlit	(0XFFFDED3C,	0XFFFDED4D);
	set_name	(0XFFFDED3C,	"aEagleWm230Test");
	create_strlit	(0XFFFDED51,	0XFFFDED5F);
	set_name	(0XFFFDED51,	"aBuildidS");
	create_strlit	(0XFFFDED60,	0XFFFDED6C);
	set_name	(0XFFFDED60,	"aH1pfkLocal");
	create_strlit	(0XFFFDED6C,	0XFFFDED7A);
	set_name	(0XFFFDED6C,	"aPrintVersion");
	create_dword	(x=0XFFFDED7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDED80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFDED84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XFFFDED8C,	0XFFFDEDA8);
	set_name	(0XFFFDED8C,	"aEfuseGroupDVal");
	create_strlit	(0XFFFDEDA8,	0XFFFDEDE9);
	set_name	(0XFFFDEDA8,	"aEfuseVerifyFai_0");
	create_dword	(0XFFFDEDEC);
	make_array	(0XFFFDEDEC,	0X7);
	create_strlit	(0XFFFDEE08,	0XFFFDEE13);
	set_name	(0XFFFDEE08,	"aBpFcInit");
	create_strlit	(0XFFFDEE14,	0XFFFDEE23);
	set_name	(0XFFFDEE14,	"aBpFcWriteSn");
	create_strlit	(0XFFFDEE24,	0XFFFDEE42);
	set_name	(0XFFFDEE24,	"aSErrCanTLoadFc");
	create_strlit	(0XFFFDEE44,	0XFFFDEE61);
	set_name	(0XFFFDEE44,	"aSErrReadAttrDF");
	create_strlit	(0XFFFDEE64,	0XFFFDEE81);
	set_name	(0XFFFDEE64,	"aSErrReadDataDF");
	create_strlit	(0XFFFDEE84,	0XFFFDEEA6);
	set_name	(0XFFFDEE84,	"aInfoLoadFcBoot");
	create_strlit	(0XFFFDEEA8,	0XFFFDEEC0);
	set_name	(0XFFFDEEA8,	"aSErrInvalidPar");
	create_strlit	(0XFFFDEEC0,	0XFFFDEEC5);
	set_name	(0XFFFDEEC0,	"aEep3");
	make_array	(0XFFFDEEC5,	0X3);
	create_strlit	(0XFFFDEEC8,	0XFFFDEEE3);
	set_name	(0XFFFDEEC8,	"aSErrCreateSFai");
	create_strlit	(0XFFFDEEE4,	0XFFFDEF02);
	set_name	(0XFFFDEEE4,	"aSErrWriteCfgSF");
	make_array	(0XFFFDEF02,	0X2);
	create_strlit	(0XFFFDEF04,	0XFFFDEF23);
	set_name	(0XFFFDEF04,	"aSErrWriteDataS");
	create_strlit	(0XFFFDEF24,	0XFFFDEF40);
	set_name	(0XFFFDEF24,	"aSErrSaveBpSFai");
	create_strlit	(0XFFFDEF40,	0XFFFDEF58);
	set_name	(0XFFFDEF40,	"aErrorInvalidPa");
	create_strlit	(0XFFFDEF58,	0XFFFDEF77);
	set_name	(0XFFFDEF58,	"aSErrPleaseInit");
	create_strlit	(0XFFFDEF78,	0XFFFDEF7C);
	set_name	(0XFFFDEF78,	"aEnv");
	create_strlit	(0XFFFDEF7C,	0XFFFDEFA1);
	set_name	(0XFFFDEF7C,	"aSErrReadEnvPar");
	make_array	(0XFFFDEFA1,	0X3);
	create_strlit	(0XFFFDEFA4,	0XFFFDEFBF);
	set_name	(0XFFFDEFA4,	"aSErrCrcCheckFa");
	create_strlit	(0XFFFDEFC0,	0XFFFDEFE6);
	set_name	(0XFFFDEFC0,	"aSErrWriteEnvPa");
	make_array	(0XFFFDEFE6,	0X2);
	create_strlit	(0XFFFDEFE8,	0XFFFDF000);
	set_name	(0XFFFDEFE8,	"aSErrAttrDUnuse");
	create_strlit	(0XFFFDF000,	0XFFFDF01D);
	set_name	(0XFFFDF000,	"aSErrAttrDLenIn");
	make_array	(0XFFFDF01D,	0X3);
	create_strlit	(0XFFFDF020,	0XFFFDF03B);
	set_name	(0XFFFDF020,	"aSErrDataDIsUnu");
	create_strlit	(0XFFFDF03C,	0XFFFDF059);
	set_name	(0XFFFDF03C,	"aSErrDataDLenIn");
	make_array	(0XFFFDF059,	0X3);
	create_strlit	(0XFFFDF05C,	0XFFFDF07D);
	set_name	(0XFFFDF05C,	"aSErrorInvalidI");
	make_array	(0XFFFDF07D,	0X3);
	create_strlit	(0XFFFDF080,	0XFFFDF0A6);
	set_name	(0XFFFDF080,	"aInfoSNotExistW");
	make_array	(0XFFFDF0A6,	0X2);
	create_strlit	(0XFFFDF0A8,	0XFFFDF0C7);
	set_name	(0XFFFDF0A8,	"aInfoCreateNewK");
	create_strlit	(0XFFFDF0C8,	0XFFFDF0E5);
	set_name	(0XFFFDF0C8,	"aInfoKeySAlread");
	make_array	(0XFFFDF0E5,	0X3);
	create_strlit	(0XFFFDF0E8,	0XFFFDF118);
	set_name	(0XFFFDF0E8,	"aErrorNewCreate");
	create_strlit	(0XFFFDF118,	0XFFFDF132);
	set_name	(0XFFFDF118,	"aSErrorInvalidP");
	make_array	(0XFFFDF132,	0X2);
	create_strlit	(0XFFFDF134,	0XFFFDF156);
	set_name	(0XFFFDF134,	"aInfoSExistWrit");
	make_array	(0XFFFDF156,	0X2);
	create_strlit	(0XFFFDF158,	0XFFFDF183);
	set_name	(0XFFFDF158,	"aErrorSNotExist");
	create_strlit	(0XFFFDF184,	0XFFFDF1A7);
	set_name	(0XFFFDF184,	"aInfoSExistWrit_0");
	create_strlit	(0XFFFDF1A8,	0XFFFDF1B0);
	set_name	(0XFFFDF1A8,	"aBpFind");
	create_strlit	(0XFFFDF1B0,	0XFFFDF1BA);
	set_name	(0XFFFDF1B0,	"aBpUnused");
	make_array	(0XFFFDF1BA,	0X2);
	create_strlit	(0XFFFDF1BC,	0XFFFDF1C6);
	set_name	(0XFFFDF1BC,	"aBpCreate");
	make_array	(0XFFFDF1C6,	0X2);
	create_strlit	(0XFFFDF1C8,	0XFFFDF1D0);
	set_name	(0XFFFDF1C8,	"aBpLoad");
	create_strlit	(0XFFFDF1D0,	0XFFFDF1DD);
	set_name	(0XFFFDF1D0,	"aBpWriteCfg");
	make_array	(0XFFFDF1DD,	0X3);
	create_strlit	(0XFFFDF1E0,	0XFFFDF1E8);
	set_name	(0XFFFDF1E0,	"aBpSave");
	create_strlit	(0XFFFDF1E8,	0XFFFDF1F1);
	set_name	(0XFFFDF1E8,	"aBpWrite");
	make_array	(0XFFFDF1F1,	0X3);
	create_strlit	(0XFFFDF1F4,	0XFFFDF216);
	set_name	(0XFFFDF1F4,	"aPlatformDjiLib");
	make_array	(0XFFFDF216,	0X2);
	create_strlit	(0XFFFDF218,	0XFFFDF226);
	set_name	(0XFFFDF218,	"aBufLength");
	make_array	(0XFFFDF226,	0X2);
	create_strlit	(0XFFFDF228,	0XFFFDF252);
	set_name	(0XFFFDF228,	"aUint32TU32Size");
	make_array	(0XFFFDF252,	0X2);
	create_strlit	(0XFFFDF254,	0XFFFDF276);
	set_name	(0XFFFDF254,	"aTooManyChunksD");
	make_array	(0XFFFDF276,	0X2);
	create_strlit	(0XFFFDF278,	0XFFFDF29A);
	set_name	(0XFFFDF278,	"aFailedToGetEnc");
	make_array	(0XFFFDF29A,	0X2);
	create_strlit	(0XFFFDF29C,	0XFFFDF2B1);
	set_name	(0XFFFDF29C,	"aNotSupportRomK");
	make_array	(0XFFFDF2B1,	0X3);
	create_strlit	(0XFFFDF2B4,	0XFFFDF2D4);
	set_name	(0XFFFDF2B4,	"aFailedToDecryp");
	create_strlit	(0XFFFDF2D4,	0XFFFDF2F1);
	set_name	(0XFFFDF2D4,	"aFailedToInitia_0");
	make_array	(0XFFFDF2F1,	0X3);
	create_strlit	(0XFFFDF2F4,	0XFFFDF320);
	set_name	(0XFFFDF2F4,	"aFailedToDecryp_0");
	create_strlit	(0XFFFDF320,	0XFFFDF33A);
	set_name	(0XFFFDF320,	"aFailedToCalcul");
	make_array	(0XFFFDF33A,	0X2);
	create_strlit	(0XFFFDF33C,	0XFFFDF369);
	set_name	(0XFFFDF33C,	"aFailedToVerify");
	make_array	(0XFFFDF369,	0X3);
	create_strlit	(0XFFFDF36C,	0XFFFDF396);
	set_name	(0XFFFDF36C,	"aFailedPayloadD");
	make_array	(0XFFFDF396,	0X2);
	create_strlit	(0XFFFDF398,	0XFFFDF3C4);
	set_name	(0XFFFDF398,	"aMagicNumberChe");
	create_strlit	(0XFFFDF3C4,	0XFFFDF3DE);
	set_name	(0XFFFDF3C4,	"aTooShortImageS");
	make_array	(0XFFFDF3DE,	0X2);
	create_strlit	(0XFFFDF3E0,	0XFFFDF402);
	set_name	(0XFFFDF3E0,	"aTypeDoesTMatch");
	make_array	(0XFFFDF402,	0X2);
	create_strlit	(0XFFFDF404,	0XFFFDF426);
	set_name	(0XFFFDF404,	"aNameDoesTMatch");
	make_array	(0XFFFDF426,	0X2);
	create_strlit	(0XFFFDF428,	0XFFFDF451);
	set_name	(0XFFFDF428,	"aCanNotSupportC");
	make_array	(0XFFFDF451,	0X3);
	create_strlit	(0XFFFDF454,	0XFFFDF47C);
	set_name	(0XFFFDF454,	"aCanNotSupportP");
	create_strlit	(0XFFFDF47C,	0XFFFDF494);
	set_name	(0XFFFDF47C,	"aChecksumVerify");
	create_strlit	(0XFFFDF494,	0XFFFDF4B4);
	set_name	(0XFFFDF494,	"aFailedToGetAut");
	create_strlit	(0XFFFDF4B4,	0XFFFDF4D4);
	set_name	(0XFFFDF4B4,	"aFailedToCalcul_0");
	create_strlit	(0XFFFDF4D4,	0XFFFDF4F2);
	set_name	(0XFFFDF4D4,	"aFailedToAuthTh");
	make_array	(0XFFFDF4F2,	0X2);
	create_strlit	(0XFFFDF4F4,	0XFFFDF511);
	set_name	(0XFFFDF4F4,	"aInvalidKeyKeyI");
	make_array	(0XFFFDF511,	0X3);
	create_strlit	(0XFFFDF514,	0XFFFDF52F);
	set_name	(0XFFFDF514,	"aNoKeySlotForId");
	create_strlit	(0XFFFDF560,	0XFFFDF590);
	set_name	(0XFFFDF560,	"aGptFailedToWri");
	create_strlit	(0XFFFDF590,	0XFFFDF5BE);
	set_name	(0XFFFDF590,	"aPlatformDjiLib_0");
	create_strlit	(0XFFFDF5C0,	0XFFFDF5D2);
	set_name	(0XFFFDF5C0,	"aPartitionEntri");
	create_strlit	(0XFFFDF5D4,	0XFFFDF607);
	set_name	(0XFFFDF5D4,	"aFailedToAlloca");
	create_strlit	(0XFFFDF608,	0XFFFDF63B);
	set_name	(0XFFFDF608,	"aGptCouldNotRea");
	create_strlit	(0XFFFDF63C,	0XFFFDF64E);
	set_name	(0XFFFDF63C,	"aCardSizeSec0");
	create_strlit	(0XFFFDF650,	0XFFFDF682);
	set_name	(0XFFFDF650,	"aGptCouldNotRea_0");
	create_strlit	(0XFFFDF684,	0XFFFDF6B0);
	set_name	(0XFFFDF684,	"aGptPrimaryAndB");
	create_strlit	(0XFFFDF6B0,	0XFFFDF6D1);
	set_name	(0XFFFDF6B0,	"aPartitionCount");
	create_strlit	(0XFFFDF6D4,	0XFFFDF701);
	set_name	(0XFFFDF6D4,	"aGptReadFailedR");
	create_strlit	(0XFFFDF704,	0XFFFDF71C);
	set_name	(0XFFFDF704,	"aBootGptReadFai");
	create_strlit	(0XFFFDF71C,	0XFFFDF744);
	set_name	(0XFFFDF71C,	"aErrorReadingTh");
	create_strlit	(0XFFFDF744,	0XFFFDF754);
	set_name	(0XFFFDF744,	"aNullPartition");
	create_strlit	(0XFFFDF754,	0XFFFDF785);
	set_name	(0XFFFDF754,	"aGptPrimarySign");
	create_strlit	(0XFFFDF788,	0XFFFDF7B8);
	set_name	(0XFFFDF788,	"aGptBackupSigna");
	create_strlit	(0XFFFDF7B8,	0XFFFDF7D8);
	set_name	(0XFFFDF7B8,	"aFailedToWriteP_0");
	create_strlit	(0XFFFDF7D8,	0XFFFDF7F4);
	set_name	(0XFFFDF7D8,	"aFailedToWriteG");
	create_strlit	(0XFFFDF7F4,	0XFFFDF817);
	set_name	(0XFFFDF7F4,	"aFailedToWriteG_0");
	create_strlit	(0XFFFDF818,	0XFFFDF84A);
	set_name	(0XFFFDF818,	"aGptCouldNotWri");
	create_strlit	(0XFFFDF84C,	0XFFFDF86B);
	set_name	(0XFFFDF84C,	"aInvalidPartiti");
	create_strlit	(0XFFFDF86C,	0XFFFDF893);
	set_name	(0XFFFDF86C,	"aErrorUnableToF");
	create_strlit	(0XFFFDF894,	0XFFFDF899);
	set_name	(0XFFFDF894,	"aUnr0");
	create_strlit	(0XFFFDF89C,	0XFFFDF8A0);
	set_name	(0XFFFDF89C,	"aS");
	create_strlit	(0XFFFDF8A4,	0XFFFDF8AA);
	set_name	(0XFFFDF8A4,	"a02x_0");
	create_strlit	(0XFFFDF8AC,	0XFFFDF8B1);
	set_name	(0XFFFDF8AC,	"aImu0");
	create_strlit	(0XFFFDF8B4,	0XFFFDF8B9);
	set_name	(0XFFFDF8B4,	"aImu1");
	create_strlit	(0XFFFDF8BC,	0XFFFDF8EB);
	set_name	(0XFFFDF8BC,	"aPubTriggerHard");
	create_strlit	(0XFFFDF8EC,	0XFFFDF917);
	set_name	(0XFFFDF8EC,	"aSDPgsr0X");
	create_strlit	(0XFFFDF918,	0XFFFDF92F);
	set_name	(0XFFFDF918,	"aLpEntryPwrctlW");
	create_strlit	(0XFFFDF930,	0XFFFDF936);
	set_name	(0XFFFDF930,	"aRX");
	create_strlit	(0XFFFDF938,	0XFFFDF945);
	set_name	(0XFFFDF938,	"aDdr424ghz");
	make_array	(0XFFFDF945,	0X3);
	create_strlit	(0XFFFDF94A,	0XFFFDF980);
	set_name	(0XFFFDF94A,	"aCenterDLeftMed");
	create_strlit	(0XFFFDF980,	0XFFFDF9B9);
	set_name	(0XFFFDF980,	"aCenterDRightMe");
	make_array	(0XFFFDF9B9,	0X3);
	create_strlit	(0XFFFDF9BC,	0XFFFDF9D4);
	set_name	(0XFFFDF9BC,	"aValidRangeBitm");
	create_strlit	(0XFFFDF9D4,	0XFFFDF9F1);
	set_name	(0XFFFDF9D4,	"aBestPosLeftDWi");
	make_array	(0XFFFDF9F1,	0X3);
	create_strlit	(0XFFFDF9F4,	0XFFFDFA12);
	set_name	(0XFFFDF9F4,	"aSearchWindow1L");
	make_array	(0XFFFDFA12,	0X2);
	create_strlit	(0XFFFDFA18,	0XFFFDFA79);
	set_name	(0XFFFDFA18,	"aSDBistTraining");
	make_array	(0XFFFDFA79,	0X3);
	create_strlit	(0XFFFDFA7C,	0XFFFDFA96);
	set_name	(0XFFFDFA7C,	"a02d02x02x02x02");
	make_array	(0XFFFDFA96,	0X2);
	create_strlit	(0XFFFDFA98,	0XFFFDFA9A);
	make_array	(0XFFFDFA9A,	0X2);
	create_strlit	(0XFFFDFA9C,	0XFFFDFAB6);
	set_name	(0XFFFDFA9C,	"aSdramDBestVref");
	make_array	(0XFFFDFAB6,	0X2);
	create_strlit	(0XFFFDFAB8,	0XFFFDFACB);
	set_name	(0XFFFDFAB8,	"aTrainingCntD");
	create_strlit	(0XFFFDFAD0,	0XFFFDFB31);
	set_name	(0XFFFDFAD0,	"aSDBistTraining_0");
	make_array	(0XFFFDFB31,	0X3);
	create_strlit	(0XFFFDFB34,	0XFFFDFB4E);
	set_name	(0XFFFDFB34,	"aHostDBestVrefD");
	make_array	(0XFFFDFB4E,	0X2);
	create_strlit	(0XFFFDFB50,	0XFFFDFB5B);
	set_name	(0XFFFDFB50,	"aDdrSearch");
	create_strlit	(0XFFFDFB5C,	0XFFFDFB63);
	set_name	(0XFFFDFB5C,	"aBinary");
	create_strlit	(0XFFFDFB64,	0XFFFDFB6B);
	set_name	(0XFFFDFB64,	"aLinear");
	create_strlit	(0XFFFDFB6C,	0XFFFDFB79);
	set_name	(0XFFFDFB6C,	"aDdrEyechart");
	make_array	(0XFFFDFB79,	0X3);
	create_strlit	(0XFFFDFB7C,	0XFFFDFB91);
	set_name	(0XFFFDFB7C,	"aSDInitRank0");
	make_array	(0XFFFDFB91,	0X3);
	create_strlit	(0XFFFDFB94,	0XFFFDFBB1);
	set_name	(0XFFFDFB94,	"aSDInitRank0Ran");
	make_array	(0XFFFDFBB1,	0X3);
	create_strlit	(0XFFFDFBB4,	0XFFFDFBCE);
	set_name	(0XFFFDFBB4,	"aUnsupportedDen");
	make_array	(0XFFFDFBCE,	0X2);
	create_strlit	(0XFFFDFBD0,	0XFFFDFBDF);
	set_name	(0XFFFDFBD0,	"aSDBypass");
	create_strlit	(0XFFFDFBE0,	0XFFFDFBF4);
	set_name	(0XFFFDFBE0,	"aSDCaTraining");
	create_strlit	(0XFFFDFBF4,	0XFFFDFBFC);
	set_name	(0XFFFDFBF4,	"aSamsung");
	create_strlit	(0XFFFDFBFC,	0XFFFDFC02);
	set_name	(0XFFFDFBFC,	"aHynix");
	make_array	(0XFFFDFC02,	0X2);
	create_strlit	(0XFFFDFC04,	0XFFFDFC0B);
	set_name	(0XFFFDFC04,	"aMicron");
	create_strlit	(0XFFFDFC0C,	0XFFFDFC14);
	set_name	(0XFFFDFC0C,	"aUnknown_0");
	create_strlit	(0XFFFDFC14,	0XFFFDFC26);
	set_name	(0XFFFDFC14,	"aInvalidMr80xX");
	make_array	(0XFFFDFC26,	0X2);
	create_strlit	(0XFFFDFC28,	0XFFFDFC37);
	set_name	(0XFFFDFC28,	"aDeviceInfo");
	create_strlit	(0XFFFDFC38,	0XFFFDFC69);
	set_name	(0XFFFDFC38,	"aPerRankVendorS");
	make_array	(0XFFFDFC69,	0X3);
	create_strlit	(0XFFFDFC6C,	0XFFFDFC81);
	set_name	(0XFFFDFC6C,	"aTotalDrankDgb");
	make_array	(0XFFFDFC81,	0X3);
	create_strlit	(0XFFFDFC84,	0XFFFDFC98);
	set_name	(0XFFFDFC84,	"aSDWlTraining");
	create_strlit	(0XFFFDFC98,	0XFFFDFCB7);
	set_name	(0XFFFDFC98,	"aSDWlTrainingWo");
	create_strlit	(0XFFFDFCB8,	0XFFFDFCD7);
	set_name	(0XFFFDFCB8,	"aSDReadDqsGateT");
	create_strlit	(0XFFFDFCD8,	0XFFFDFD02);
	set_name	(0XFFFDFCD8,	"aSDReadDqsGateT_0");
	make_array	(0XFFFDFD02,	0X2);
	create_strlit	(0XFFFDFD04,	0XFFFDFD1F);
	set_name	(0XFFFDFD04,	"aSDWlAdjustTrai");
	create_strlit	(0XFFFDFD20,	0XFFFDFD46);
	set_name	(0XFFFDFD20,	"aSDReadDataBitD");
	make_array	(0XFFFDFD46,	0X2);
	create_strlit	(0XFFFDFD48,	0XFFFDFD6F);
	set_name	(0XFFFDFD48,	"aSDWriteDataBit");
	create_strlit	(0XFFFDFD70,	0XFFFDFD8F);
	set_name	(0XFFFDFD70,	"aSDReadDataEyeT");
	create_strlit	(0XFFFDFD90,	0XFFFDFDB0);
	set_name	(0XFFFDFD90,	"aSDWriteDataEye");
	create_strlit	(0XFFFDFDB0,	0XFFFDFDBA);
	set_name	(0XFFFDFDB0,	"aRankD");
	make_array	(0XFFFDFDBA,	0X2);
	create_strlit	(0XFFFDFDBC,	0XFFFDFDCA);
	set_name	(0XFFFDFDBC,	"aMr0R0xX");
	make_array	(0XFFFDFDCA,	0X2);
	create_strlit	(0XFFFDFDCC,	0XFFFDFDDA);
	set_name	(0XFFFDFDCC,	"aMr1W0xX");
	make_array	(0XFFFDFDDA,	0X2);
	create_strlit	(0XFFFDFDDC,	0XFFFDFDEA);
	set_name	(0XFFFDFDDC,	"aMr2W0xX");
	make_array	(0XFFFDFDEA,	0X2);
	create_strlit	(0XFFFDFDEC,	0XFFFDFDFA);
	set_name	(0XFFFDFDEC,	"aMr3W0xX");
	make_array	(0XFFFDFDFA,	0X2);
	create_strlit	(0XFFFDFDFC,	0XFFFDFE0A);
	set_name	(0XFFFDFDFC,	"aMr4R0xX");
	make_array	(0XFFFDFE0A,	0X2);
	create_strlit	(0XFFFDFE0C,	0XFFFDFE1A);
	set_name	(0XFFFDFE0C,	"aMr5R0xX");
	make_array	(0XFFFDFE1A,	0X2);
	create_strlit	(0XFFFDFE1C,	0XFFFDFE2A);
	set_name	(0XFFFDFE1C,	"aMr6R0xX");
	make_array	(0XFFFDFE2A,	0X2);
	create_strlit	(0XFFFDFE2C,	0XFFFDFE3A);
	set_name	(0XFFFDFE2C,	"aMr7R0xX");
	make_array	(0XFFFDFE3A,	0X2);
	create_strlit	(0XFFFDFE3C,	0XFFFDFE4A);
	set_name	(0XFFFDFE3C,	"aMr8R0xX");
	make_array	(0XFFFDFE4A,	0X2);
	create_strlit	(0XFFFDFE4C,	0XFFFDFE5B);
	set_name	(0XFFFDFE4C,	"aMr11W0xX");
	create_strlit	(0XFFFDFE5C,	0XFFFDFE74);
	set_name	(0XFFFDFE5C,	"aLpddr3InitD0xX");
	create_strlit	(0XFFFDFE74,	0XFFFDFE85);
	set_name	(0XFFFDFE74,	"aPubInitDone");
	make_array	(0XFFFDFE85,	0X3);
	create_dword	(0XFFFDFE88);
	make_array	(0XFFFDFE88,	0X3F);
	create_strlit	(0XFFFDFF84,	0XFFFDFFA4);
	set_name	(0XFFFDFF84,	"aSdramVrefTrain");
	create_strlit	(0XFFFDFFC0,	0XFFFDFFDF);
	set_name	(0XFFFDFFC0,	"aHostVrefTraini");
	create_strlit	(0XFFFE0030,	0XFFFE004B);
	set_name	(0XFFFE0030,	"aPlatformEagleG");
	create_strlit	(0XFFFE004C,	0XFFFE005A);
	set_name	(0XFFFE004C,	"aGpioNum32");
	create_strlit	(0XFFFE005C,	0XFFFE0068);
	set_name	(0XFFFE005C,	"aGpioNum32_0");
	create_strlit	(0XFFFE00DC,	0XFFFE00F6);
	set_name	(0XFFFE00DC,	"aWaitAdccResetT");
	create_strlit	(0XFFFE00F8,	0XFFFE0113);
	set_name	(0XFFFE00F8,	"aWaitSampleDone");
	create_strlit	(0XFFFE0114,	0XFFFE012B);
	set_name	(0XFFFE0114,	"aOmcErrInitFail");
	create_strlit	(0XFFFE012C,	0XFFFE0147);
	set_name	(0XFFFE012C,	"aOmcErrVolReadF");
	create_strlit	(0XFFFE0148,	0XFFFE016E);
	set_name	(0XFFFE0148,	"aOmcErrGetChnlD");
	create_strlit	(0XFFFE0170,	0XFFFE0198);
	set_name	(0XFFFE0170,	"aOmcErrTransVol");
	create_strlit	(0XFFFE0198,	0XFFFE01B6);
	set_name	(0XFFFE0198,	"aHardwareVersio");
	create_strlit	(0XFFFE01B8,	0XFFFE01BD);
	set_name	(0XFFFE01B8,	"aMain");
	create_strlit	(0XFFFE01C0,	0XFFFE01FE);
	set_name	(0XFFFE01C0,	"aNovmAddArenaTo");
	create_strlit	(0XFFFE0200,	0XFFFE0205);
	set_name	(0XFFFE0200,	"aNovm");
	create_dword	(x=0XFFFE0208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XFFFE0238,	0XFFFE0247);
	set_name	(0XFFFE0238,	"aCommandList");
	create_strlit	(0XFFFE0248,	0XFFFE0254);
	set_name	(0XFFFE0248,	"a16sS");
	create_strlit	(0XFFFE0254,	0XFFFE0258);
	create_strlit	(0XFFFE0258,	0XFFFE026F);
	set_name	(0XFFFE0258,	"aErrorLineTooLo");
	create_strlit	(0XFFFE0270,	0XFFFE0275);
	set_name	(0XFFFE0270,	"aTrue");
	make_array	(0XFFFE0275,	0X3);
	create_strlit	(0XFFFE0278,	0XFFFE027E);
	set_name	(0XFFFE0278,	"aFalse");
	make_array	(0XFFFE027E,	0X2);
	create_strlit	(0XFFFE0280,	0XFFFE0283);
	create_strlit	(0XFFFE0284,	0XFFFE0297);
	set_name	(0XFFFE0284,	"aCommandNotFoun");
	create_strlit	(0XFFFE0298,	0XFFFE029B);
	create_strlit	(0XFFFE029C,	0XFFFE029F);
	create_strlit	(0XFFFE02A0,	0XFFFE02A5);
	set_name	(0XFFFE02A0,	"aHelp");
	make_array	(0XFFFE02A5,	0X3);
	create_strlit	(0XFFFE02A8,	0XFFFE02B2);
	set_name	(0XFFFE02A8,	"aThisList");
	make_array	(0XFFFE02B2,	0X2);
	create_strlit	(0XFFFE02B4,	0XFFFE02B9);
	set_name	(0XFFFE02B4,	"aEcho");
	make_array	(0XFFFE02B9,	0X3);
	create_strlit	(0XFFFE02BC,	0XFFFE02D0);
	set_name	(0XFFFE02BC,	"aPanicCallerP");
	create_strlit	(0XFFFE02D0,	0XFFFE02DA);
	set_name	(0XFFFE02D0,	"a0x08lx");
	make_array	(0XFFFE02DA,	0X2);
	create_strlit	(0XFFFE02DC,	0XFFFE02E2);
	set_name	(0XFFFE02DC,	"a08x");
	make_array	(0XFFFE02E2,	0X2);
	create_strlit	(0XFFFE02E4,	0XFFFE02E6);
	make_array	(0XFFFE02E6,	0X2);
	create_strlit	(0XFFFE02E8,	0XFFFE02EB);
	set_name	(0XFFFE02E8,	"aC");
	create_strlit	(0XFFFE02EC,	0XFFFE02EE);
	make_array	(0XFFFE02EE,	0X2);
	create_strlit	(0XFFFE02F0,	0XFFFE02F3);
	create_strlit	(0XFFFE02F4,	0XFFFE0300);
	set_name	(0XFFFE02F4,	"a0x016llx");
	create_strlit	(0XFFFE0300,	0XFFFE030B);
	set_name	(0XFFFE0300,	"a0x08llx");
	create_strlit	(0XFFFE030C,	0XFFFE0314);
	set_name	(0XFFFE030C,	"a02hhx");
	create_strlit	(0XFFFE0314,	0XFFFE0318);
	set_name	(0XFFFE0314,	"aInf");
	create_strlit	(0XFFFE0318,	0XFFFE031C);
	set_name	(0XFFFE0318,	"aInf_0");
	create_strlit	(0XFFFE031C,	0XFFFE0320);
	set_name	(0XFFFE031C,	"aNan");
	create_strlit	(0XFFFE0320,	0XFFFE0324);
	set_name	(0XFFFE0320,	"aNan_0");
	create_strlit	(0XFFFE0324,	0XFFFE032B);
	set_name	(0XFFFE0324,	"a0x0p0");
	create_strlit	(0XFFFE032C,	0XFFFE0333);
	set_name	(0XFFFE032C,	"a0x0p0_0");
	create_strlit	(0XFFFE0334,	0XFFFE0338);
	set_name	(0XFFFE0334,	"aDen");
	create_strlit	(0XFFFE0338,	0XFFFE033C);
	set_name	(0XFFFE0338,	"aDen_0");
	create_strlit	(0XFFFE033C,	0XFFFE0340);
	set_name	(0XFFFE033C,	"a0x1");
	create_strlit	(0XFFFE0340,	0XFFFE0344);
	set_name	(0XFFFE0340,	"a0x1_0");
	create_strlit	(0XFFFE0344,	0XFFFE034D);
	set_name	(0XFFFE0344,	"a0000000");
	make_array	(0XFFFE034D,	0X3);
	create_strlit	(0XFFFE0350,	0XFFFE0358);
	set_name	(0XFFFE0350,	"aRange");
	create_strlit	(0XFFFE0358,	0XFFFE035F);
	set_name	(0XFFFE0358,	"aNull");
	create_strlit	(0XFFFE0360,	0XFFFE036E);
	set_name	(0XFFFE0360,	"aGeneralError");
	make_array	(0XFFFE036E,	0X2);
	create_strlit	(0XFFFE0370,	0XFFFE0379);
	set_name	(0XFFFE0370,	"aNoError");
	make_array	(0XFFFE0379,	0X3);
	create_strlit	(0XFFFE037C,	0XFFFE039C);
	set_name	(0XFFFE037C,	"a0123456789abcd");
	create_strlit	(0XFFFE039C,	0XFFFE03A6);
	set_name	(0XFFFE039C,	"aHeapGrow");
	make_array	(0XFFFE03A6,	0X2);
	create_strlit	(0XFFFE03A8,	0XFFFE03DA);
	set_name	(0XFFFE03A8,	"aSDFailedToGrow");
	make_array	(0XFFFE03DA,	0X2);
	create_dword	(x=0XFFFE03DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE03E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0XFFFE03E4,	0XFFFE03FA);
	set_name	(0XFFFE03E4,	"aKeyPlatprovisi");
	create_dword	(x=0XFFFE041C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0424);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0428);
	create_dword	(0XFFFE042C);
	create_dword	(x=0XFFFE0430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0XFFFE043C,	0X4);
	create_dword	(0XFFFE0444);
	create_dword	(0XFFFE0448);
	create_dword	(x=0XFFFE044C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0454);
	create_dword	(0XFFFE0458);
	create_dword	(x=0XFFFE045C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0464);
	create_dword	(0XFFFE0468);
	create_dword	(x=0XFFFE046C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0474);
	create_dword	(0XFFFE0478);
	create_dword	(x=0XFFFE047C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0484);
	create_dword	(0XFFFE0488);
	create_dword	(x=0XFFFE048C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0494);
	create_dword	(0XFFFE0498);
	create_dword	(x=0XFFFE049C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE04A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE04A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04A8);
	create_dword	(0XFFFE04AC);
	create_dword	(x=0XFFFE04B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04B4);
	create_dword	(0XFFFE04B8);
	create_dword	(x=0XFFFE04BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04C0);
	create_dword	(0XFFFE04C4);
	create_dword	(x=0XFFFE04C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04CC);
	create_dword	(0XFFFE04D0);
	create_dword	(x=0XFFFE04D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04D8);
	create_dword	(0XFFFE04DC);
	create_dword	(x=0XFFFE04E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04E4);
	create_dword	(0XFFFE04E8);
	create_dword	(x=0XFFFE04EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04F0);
	create_dword	(0XFFFE04F4);
	create_dword	(x=0XFFFE04F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE04FC);
	create_dword	(0XFFFE0500);
	create_dword	(x=0XFFFE0504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0508);
	create_dword	(0XFFFE050C);
	create_dword	(x=0XFFFE0510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0514);
	create_dword	(0XFFFE0518);
	create_dword	(x=0XFFFE051C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0520);
	create_dword	(0XFFFE0524);
	create_dword	(x=0XFFFE0528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE052C);
	create_dword	(0XFFFE0530);
	create_dword	(x=0XFFFE0534);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0538);
	create_dword	(0XFFFE053C);
	create_dword	(x=0XFFFE0540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0544);
	create_dword	(0XFFFE0548);
	create_dword	(x=0XFFFE054C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0550);
	create_dword	(0XFFFE0554);
	create_dword	(x=0XFFFE0558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE055C);
	create_dword	(0XFFFE0560);
	create_dword	(x=0XFFFE0564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0568);
	create_dword	(0XFFFE056C);
	create_dword	(x=0XFFFE0570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0574);
	create_dword	(0XFFFE0578);
	create_dword	(x=0XFFFE057C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0580);
	create_dword	(0XFFFE0584);
	create_dword	(x=0XFFFE0588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE058C);
	create_dword	(0XFFFE0590);
	create_dword	(x=0XFFFE0594);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0598);
	create_dword	(0XFFFE059C);
	create_dword	(x=0XFFFE05A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05A4);
	create_dword	(0XFFFE05A8);
	create_dword	(x=0XFFFE05AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05B0);
	create_dword	(0XFFFE05B4);
	create_dword	(x=0XFFFE05B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05BC);
	create_dword	(0XFFFE05C0);
	create_dword	(x=0XFFFE05C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05C8);
	create_dword	(0XFFFE05CC);
	create_dword	(x=0XFFFE05D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05D4);
	create_dword	(0XFFFE05D8);
	create_dword	(x=0XFFFE05DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05E0);
	create_dword	(0XFFFE05E4);
	create_dword	(x=0XFFFE05E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05EC);
	create_dword	(0XFFFE05F0);
	create_dword	(x=0XFFFE05F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE05F8);
	create_dword	(0XFFFE05FC);
	create_dword	(x=0XFFFE0600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0604);
	create_dword	(0XFFFE0608);
	create_dword	(x=0XFFFE060C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0610);
	create_dword	(0XFFFE0614);
	create_dword	(x=0XFFFE0618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE061C);
	create_dword	(0XFFFE0620);
	create_dword	(x=0XFFFE0624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0628);
	create_dword	(0XFFFE062C);
	create_dword	(x=0XFFFE0630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0634);
	create_dword	(0XFFFE0638);
	create_dword	(x=0XFFFE063C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0640);
	create_dword	(0XFFFE0644);
	create_dword	(x=0XFFFE0648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE064C);
	create_dword	(0XFFFE0650);
	create_dword	(x=0XFFFE0654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0658);
	create_dword	(0XFFFE065C);
	create_dword	(x=0XFFFE0660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0664);
	create_dword	(0XFFFE0668);
	create_dword	(x=0XFFFE066C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0670);
	create_dword	(0XFFFE0674);
	create_dword	(x=0XFFFE0678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE067C);
	create_dword	(0XFFFE0680);
	create_dword	(x=0XFFFE0684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0688);
	create_dword	(0XFFFE068C);
	create_dword	(x=0XFFFE0690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0694);
	create_dword	(0XFFFE0698);
	create_dword	(x=0XFFFE069C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06A0);
	create_dword	(0XFFFE06A4);
	create_dword	(x=0XFFFE06A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06AC);
	create_dword	(0XFFFE06B0);
	create_dword	(x=0XFFFE06B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06B8);
	create_dword	(0XFFFE06BC);
	create_dword	(x=0XFFFE06C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06C4);
	create_dword	(0XFFFE06C8);
	create_dword	(x=0XFFFE06CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06D0);
	create_dword	(0XFFFE06D4);
	create_dword	(x=0XFFFE06D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06DC);
	create_dword	(0XFFFE06E0);
	create_dword	(x=0XFFFE06E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06E8);
	create_dword	(0XFFFE06EC);
	create_dword	(x=0XFFFE06F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE06F4);
	create_dword	(0XFFFE06F8);
	create_dword	(x=0XFFFE06FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0700);
	create_dword	(0XFFFE0704);
	create_dword	(x=0XFFFE0708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE070C);
	create_dword	(0XFFFE0710);
	create_dword	(x=0XFFFE0714);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0718);
	create_dword	(0XFFFE071C);
	create_dword	(x=0XFFFE0720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0724);
	create_dword	(0XFFFE0728);
	create_dword	(x=0XFFFE072C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0730);
	create_dword	(0XFFFE0734);
	create_dword	(x=0XFFFE0738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE073C);
	create_dword	(0XFFFE0740);
	create_dword	(x=0XFFFE0744);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0748);
	create_dword	(0XFFFE074C);
	create_dword	(x=0XFFFE0750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0754);
	create_dword	(0XFFFE0758);
	create_dword	(x=0XFFFE075C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0760);
	create_dword	(0XFFFE0764);
	create_dword	(x=0XFFFE0768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE076C);
	create_dword	(0XFFFE0770);
	create_dword	(x=0XFFFE0774);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0778);
	create_dword	(0XFFFE077C);
	create_dword	(x=0XFFFE0780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0784);
	create_dword	(0XFFFE0788);
	create_dword	(x=0XFFFE078C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0790);
	create_dword	(0XFFFE0794);
	create_dword	(x=0XFFFE0798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE079C);
	create_dword	(0XFFFE07A0);
	create_dword	(x=0XFFFE07A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07A8);
	create_dword	(0XFFFE07AC);
	create_dword	(x=0XFFFE07B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07B4);
	create_dword	(0XFFFE07B8);
	create_dword	(x=0XFFFE07BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07C0);
	create_dword	(0XFFFE07C4);
	create_dword	(x=0XFFFE07C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07CC);
	create_dword	(0XFFFE07D0);
	create_dword	(x=0XFFFE07D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07D8);
	create_dword	(0XFFFE07DC);
	create_dword	(x=0XFFFE07E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07E4);
	create_dword	(0XFFFE07E8);
	create_dword	(x=0XFFFE07EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07F0);
	create_dword	(0XFFFE07F4);
	create_dword	(x=0XFFFE07F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE07FC);
	create_dword	(0XFFFE0800);
	create_dword	(x=0XFFFE0804);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0808);
	create_dword	(0XFFFE080C);
	create_dword	(x=0XFFFE0810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0814);
	create_dword	(0XFFFE0818);
	create_dword	(x=0XFFFE081C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0820);
	create_dword	(0XFFFE0824);
	create_dword	(x=0XFFFE0828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE082C);
	create_dword	(0XFFFE0830);
	create_dword	(0XFFFE0834);
	create_dword	(0XFFFE0838);
	create_dword	(0XFFFE083C);
	create_dword	(x=0XFFFE0840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0844);
	create_dword	(0XFFFE0848);
	create_dword	(x=0XFFFE084C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0850);
	create_dword	(0XFFFE0854);
	create_dword	(x=0XFFFE0858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE085C);
	create_dword	(0XFFFE0860);
	create_dword	(x=0XFFFE0864);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0868);
	create_dword	(0XFFFE086C);
	create_dword	(x=0XFFFE0870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0874);
	create_dword	(0XFFFE0878);
	create_dword	(x=0XFFFE087C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0880);
	create_dword	(0XFFFE0884);
	create_dword	(x=0XFFFE0888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE088C);
	create_dword	(0XFFFE0890);
	create_dword	(x=0XFFFE0894);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0898);
	create_dword	(0XFFFE089C);
	create_dword	(x=0XFFFE08A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08A4);
	create_dword	(0XFFFE08A8);
	create_dword	(x=0XFFFE08AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08B0);
	create_dword	(0XFFFE08B4);
	create_dword	(x=0XFFFE08B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08BC);
	create_dword	(0XFFFE08C0);
	create_dword	(x=0XFFFE08C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08C8);
	create_dword	(0XFFFE08CC);
	create_dword	(x=0XFFFE08D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08D4);
	create_dword	(0XFFFE08D8);
	create_dword	(x=0XFFFE08DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08E0);
	create_dword	(0XFFFE08E4);
	create_dword	(x=0XFFFE08E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08EC);
	create_dword	(0XFFFE08F0);
	create_dword	(x=0XFFFE08F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE08F8);
	create_dword	(0XFFFE08FC);
	create_dword	(x=0XFFFE0900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0904);
	create_dword	(0XFFFE0908);
	create_dword	(x=0XFFFE090C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0910);
	create_dword	(0XFFFE0914);
	create_dword	(x=0XFFFE0918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE091C);
	create_dword	(0XFFFE0920);
	create_dword	(x=0XFFFE0924);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0928);
	create_dword	(0XFFFE092C);
	create_dword	(x=0XFFFE0930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0934);
	create_dword	(0XFFFE0938);
	create_dword	(x=0XFFFE093C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0940);
	create_dword	(0XFFFE0944);
	create_dword	(x=0XFFFE0948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE094C);
	create_dword	(0XFFFE0950);
	create_dword	(x=0XFFFE0954);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0958);
	create_dword	(0XFFFE095C);
	create_dword	(x=0XFFFE0960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0964);
	create_dword	(0XFFFE0968);
	create_dword	(x=0XFFFE096C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0970);
	create_dword	(0XFFFE0974);
	create_dword	(x=0XFFFE0978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE097C);
	create_dword	(0XFFFE0980);
	create_dword	(x=0XFFFE0984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0988);
	create_dword	(0XFFFE098C);
	create_dword	(x=0XFFFE0990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0994);
	create_dword	(0XFFFE0998);
	create_dword	(x=0XFFFE099C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09A0);
	create_dword	(0XFFFE09A4);
	create_dword	(x=0XFFFE09A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09AC);
	create_dword	(0XFFFE09B0);
	create_dword	(x=0XFFFE09B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09B8);
	create_dword	(0XFFFE09BC);
	create_dword	(x=0XFFFE09C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09C4);
	create_dword	(0XFFFE09C8);
	create_dword	(x=0XFFFE09CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09D0);
	create_dword	(0XFFFE09D4);
	create_dword	(x=0XFFFE09D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09DC);
	create_dword	(0XFFFE09E0);
	create_dword	(x=0XFFFE09E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09E8);
	create_dword	(0XFFFE09EC);
	create_dword	(x=0XFFFE09F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE09F4);
	create_dword	(0XFFFE09F8);
	create_dword	(x=0XFFFE09FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A00);
	create_dword	(0XFFFE0A04);
	create_dword	(x=0XFFFE0A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A0C);
	create_dword	(0XFFFE0A10);
	create_dword	(x=0XFFFE0A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A18);
	create_dword	(0XFFFE0A1C);
	create_dword	(x=0XFFFE0A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A24);
	create_dword	(0XFFFE0A28);
	create_dword	(x=0XFFFE0A2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A30);
	create_dword	(0XFFFE0A34);
	create_dword	(x=0XFFFE0A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A3C);
	create_dword	(0XFFFE0A40);
	create_dword	(x=0XFFFE0A44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A48);
	create_dword	(0XFFFE0A4C);
	create_dword	(x=0XFFFE0A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A54);
	create_dword	(0XFFFE0A58);
	create_dword	(x=0XFFFE0A5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A60);
	create_dword	(0XFFFE0A64);
	create_dword	(x=0XFFFE0A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A6C);
	create_dword	(0XFFFE0A70);
	create_dword	(x=0XFFFE0A74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A78);
	create_dword	(0XFFFE0A7C);
	create_dword	(x=0XFFFE0A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A84);
	create_dword	(0XFFFE0A88);
	create_dword	(x=0XFFFE0A8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A90);
	create_dword	(0XFFFE0A94);
	create_dword	(x=0XFFFE0A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0A9C);
	create_dword	(0XFFFE0AA0);
	create_dword	(x=0XFFFE0AA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AA8);
	create_dword	(0XFFFE0AAC);
	create_dword	(x=0XFFFE0AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AB4);
	create_dword	(0XFFFE0AB8);
	create_dword	(x=0XFFFE0ABC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AC0);
	create_dword	(0XFFFE0AC4);
	create_dword	(x=0XFFFE0AC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0ACC);
	create_dword	(0XFFFE0AD0);
	create_dword	(x=0XFFFE0AD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AD8);
	create_dword	(0XFFFE0ADC);
	create_dword	(x=0XFFFE0AE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AE4);
	create_dword	(0XFFFE0AE8);
	create_dword	(x=0XFFFE0AEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AF0);
	create_dword	(0XFFFE0AF4);
	create_dword	(x=0XFFFE0AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0AFC);
	create_dword	(0XFFFE0B00);
	create_dword	(x=0XFFFE0B04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B08);
	create_dword	(0XFFFE0B0C);
	create_dword	(x=0XFFFE0B10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B14);
	create_dword	(0XFFFE0B18);
	create_dword	(x=0XFFFE0B1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B20);
	create_dword	(0XFFFE0B24);
	create_dword	(x=0XFFFE0B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B2C);
	create_dword	(0XFFFE0B30);
	create_dword	(x=0XFFFE0B34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B38);
	create_dword	(0XFFFE0B3C);
	create_dword	(x=0XFFFE0B40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B44);
	create_dword	(0XFFFE0B48);
	create_dword	(x=0XFFFE0B4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B50);
	create_dword	(0XFFFE0B54);
	create_dword	(x=0XFFFE0B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B5C);
	create_dword	(0XFFFE0B60);
	create_dword	(x=0XFFFE0B64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B68);
	create_dword	(0XFFFE0B6C);
	create_dword	(x=0XFFFE0B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B74);
	create_dword	(0XFFFE0B78);
	create_dword	(x=0XFFFE0B7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B80);
	create_dword	(0XFFFE0B84);
	create_dword	(x=0XFFFE0B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B8C);
	create_dword	(0XFFFE0B90);
	create_dword	(x=0XFFFE0B94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0B98);
	create_dword	(0XFFFE0B9C);
	create_dword	(x=0XFFFE0BA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BA4);
	create_dword	(0XFFFE0BA8);
	create_dword	(x=0XFFFE0BAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BB0);
	create_dword	(0XFFFE0BB4);
	create_dword	(x=0XFFFE0BB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BBC);
	create_dword	(0XFFFE0BC0);
	create_dword	(x=0XFFFE0BC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BC8);
	create_dword	(0XFFFE0BCC);
	create_dword	(x=0XFFFE0BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BD4);
	create_dword	(0XFFFE0BD8);
	create_dword	(x=0XFFFE0BDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BE0);
	create_dword	(0XFFFE0BE4);
	create_dword	(x=0XFFFE0BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BEC);
	create_dword	(0XFFFE0BF0);
	create_dword	(x=0XFFFE0BF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0BF8);
	create_dword	(0XFFFE0BFC);
	create_dword	(x=0XFFFE0C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C04);
	create_dword	(0XFFFE0C08);
	create_dword	(x=0XFFFE0C0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C10);
	create_dword	(0XFFFE0C14);
	create_dword	(x=0XFFFE0C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C1C);
	create_dword	(0XFFFE0C20);
	create_dword	(x=0XFFFE0C24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C28);
	create_dword	(0XFFFE0C2C);
	create_dword	(x=0XFFFE0C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C34);
	create_dword	(0XFFFE0C38);
	create_dword	(x=0XFFFE0C3C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C40);
	create_dword	(0XFFFE0C44);
	create_dword	(x=0XFFFE0C48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C4C);
	create_dword	(0XFFFE0C50);
	create_dword	(x=0XFFFE0C54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C58);
	create_dword	(0XFFFE0C5C);
	create_dword	(0XFFFE0C60);
	create_dword	(0XFFFE0C64);
	create_dword	(0XFFFE0C68);
	create_dword	(x=0XFFFE0C6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C70);
	create_dword	(x=0XFFFE0C74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C78);
	create_dword	(x=0XFFFE0C7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C80);
	create_dword	(x=0XFFFE0C84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C88);
	create_dword	(x=0XFFFE0C8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C90);
	create_dword	(x=0XFFFE0C94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0C98);
	create_dword	(x=0XFFFE0C9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0CA0);
	create_dword	(0XFFFE0CA4);
	create_dword	(0XFFFE0CA8);
	create_dword	(0XFFFE0CAC);
	create_dword	(0XFFFE0CB0);
	create_dword	(0XFFFE0CB4);
	create_dword	(0XFFFE0CB8);
	create_dword	(0XFFFE0E2C);
	create_dword	(0XFFFE0E30);
	create_dword	(0XFFFE0E34);
	create_dword	(x=0XFFFE0E40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0E44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE0E48);
	create_dword	(0XFFFE0E4C);
	create_dword	(x=0XFFFE0E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0XFFFE0E54,	0X4);
	create_dword	(x=0XFFFE0E5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE0E64);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0XFFFE0E68);
	make_array	(0XFFFE0E68,	0X200);
	create_dword	(x=0XFFFE1068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE106C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1074);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE107C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1084);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE108C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1094);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE109C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE10A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE10A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE10A8);
	create_dword	(x=0XFFFE10AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE10B0);
	create_dword	(0XFFFE10B4);
	create_dword	(0XFFFE10B8);
	make_array	(0XFFFE10B8,	0XD);
	create_dword	(0XFFFE10EC);
	create_dword	(0XFFFE10F0);
	make_array	(0XFFFE10F0,	0XD);
	create_dword	(0XFFFE1124);
	create_dword	(0XFFFE1128);
	make_array	(0XFFFE1128,	0XD);
	create_dword	(0XFFFE115C);
	create_dword	(0XFFFE1160);
	make_array	(0XFFFE1160,	0XD);
	create_dword	(0XFFFE1194);
	create_dword	(0XFFFE1198);
	make_array	(0XFFFE1198,	0XD);
	create_dword	(0XFFFE11CC);
	create_dword	(0XFFFE11D0);
	make_array	(0XFFFE11D0,	0XD);
	create_dword	(0XFFFE1204);
	create_dword	(0XFFFE1208);
	make_array	(0XFFFE1208,	0XD);
	create_dword	(0XFFFE123C);
	create_dword	(0XFFFE1240);
	make_array	(0XFFFE1240,	0XD);
	create_dword	(0XFFFE1274);
	create_dword	(0XFFFE1278);
	make_array	(0XFFFE1278,	0XD);
	create_dword	(0XFFFE12AC);
	create_dword	(0XFFFE12B0);
	make_array	(0XFFFE12B0,	0XD);
	create_dword	(0XFFFE12E4);
	create_dword	(0XFFFE12E8);
	make_array	(0XFFFE12E8,	0XD);
	create_dword	(0XFFFE131C);
	create_dword	(0XFFFE1320);
	make_array	(0XFFFE1320,	0XD);
	create_dword	(0XFFFE1354);
	create_dword	(0XFFFE1358);
	make_array	(0XFFFE1358,	0XD);
	create_dword	(0XFFFE138C);
	create_dword	(0XFFFE1390);
	make_array	(0XFFFE1390,	0XD);
	create_dword	(0XFFFE13C4);
	create_dword	(0XFFFE13C8);
	make_array	(0XFFFE13C8,	0XD);
	create_byte	(0XFFFE13FC);
	make_array	(0XFFFE13FC,	0X4);
	create_dword	(0XFFFE1400);
	make_array	(0XFFFE1404,	0X4);
	create_dword	(x=0XFFFE1408);
	make_array	(x,	0X19);
	op_dec		(x,	0);
	create_byte	(0XFFFE146C);
	make_array	(0XFFFE146D,	0X3);
	create_dword	(x=0XFFFE1470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE147C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE148C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0XFFFE1490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE1494);
	create_dword	(0XFFFE1498);
	create_dword	(x=0XFFFE149C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE14A0);
	create_dword	(0XFFFE14A4);
	create_dword	(x=0XFFFE14A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE14AC);
	create_dword	(0XFFFE14B0);
	create_dword	(x=0XFFFE14B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE14B8);
	create_dword	(0XFFFE14BC);
	create_dword	(x=0XFFFE14C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE14C4);
	create_dword	(0XFFFE14C8);
	create_dword	(x=0XFFFE14CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0XFFFE14D0);
	make_array	(0XFFFE14D4,	0X12C);
	create_dword	(0XFFFE1600);
	create_dword	(0XFFFE1604);
	create_dword	(0XFFFE1608);
	create_dword	(0XFFFE160C);
	create_dword	(0XFFFE1618);
	create_dword	(0XFFFE161C);
	create_dword	(0XFFFE1620);
	create_dword	(0XFFFE1624);
	create_dword	(0XFFFE162C);
	create_dword	(0XFFFE1630);
	create_dword	(0XFFFE1634);
	make_array	(0XFFFE1638,	0X8);
	create_word	(0XFFFE1640);
	create_word	(0XFFFE1642);
	create_dword	(0XFFFE1644);
	create_word	(0XFFFE1648);
	create_word	(0XFFFE164A);
	create_dword	(0XFFFE164C);
	make_array	(0XFFFE1650,	0X1B0);
	create_dword	(0XFFFE1800);
	make_array	(0XFFFE1804,	0X1FC);
	create_dword	(0XFFFE1A00);
	set_name	(0XFFFE1A00,	"mmc_dev");
	make_array	(0XFFFE1A04,	0X4);
	create_dword	(0XFFFE1A08);
	set_name	(0XFFFE1A08,	"host__timing");
	create_byte	(0XFFFE1A1C);
	make_array	(0XFFFE1A1D,	0X3);
	create_byte	(0XFFFE1A20);
	create_word	(0XFFFE1A23);
	make_array	(0XFFFE1A25,	0X3);
	create_dword	(0XFFFE1A28);
	set_name	(0XFFFE1A28,	"host__msm_host");
	make_array	(0XFFFE1A2C,	0X4);
	create_dword	(0XFFFE1A30);
	create_dword	(0XFFFE1A34);
	create_dword	(0XFFFE1A38);
	create_dword	(0XFFFE1A3C);
	create_qword	(0XFFFE1A40);
	create_dword	(0XFFFE1A48);
	create_dword	(0XFFFE1A4C);
	create_dword	(0XFFFE1A50);
	create_dword	(0XFFFE1A54);
	create_dword	(0XFFFE1A58);
	create_dword	(0XFFFE1A5C);
	create_dword	(0XFFFE1A60);
	create_dword	(0XFFFE1A64);
	create_dword	(0XFFFE1A68);
	create_dword	(0XFFFE1A6C);
	create_dword	(0XFFFE1A70);
	create_dword	(0XFFFE1A94);
	create_dword	(0XFFFE1A98);
	create_dword	(0XFFFE1A9C);
	create_dword	(0XFFFE1AA0);
	create_dword	(0XFFFE1AA4);
	create_dword	(0XFFFE1AA8);
	create_dword	(0XFFFE1AAC);
	create_dword	(0XFFFE1AB0);
	create_dword	(0XFFFE1AB4);
	create_dword	(0XFFFE1AB8);
	create_dword	(0XFFFE1ABC);
	create_dword	(0XFFFE1AC0);
	create_dword	(0XFFFE1AC4);
	create_dword	(0XFFFE1AC8);
	create_dword	(0XFFFE1ACC);
	create_byte	(0XFFFE1AD0);
	make_array	(0XFFFE1AD1,	0X3);
	create_dword	(0XFFFE1AD4);
	create_dword	(0XFFFE1AD8);
	create_dword	(0XFFFE1ADC);
	create_dword	(0XFFFE1AE0);
	create_dword	(0XFFFE1AE4);
	create_dword	(0XFFFE1AE8);
	make_array	(0XFFFE1AEC,	0X4);
	MakeStruct	(0XFFFE1AF0,	"mmc_config_data");
	set_name	(0XFFFE1AF0,	"config__config");
	create_byte	(0XFFFE1B0B);
	create_byte	(0XFFFE1B0C);
	make_array	(0XFFFE1B0D,	0X3);
	create_dword	(0XFFFE1B10);
	create_dword	(0XFFFE1B14);
	create_dword	(0XFFFE1B18);
	set_name	(0XFFFE1B18,	"download_size");
	create_dword	(0XFFFE1B1C);
	set_name	(0XFFFE1B1C,	"varlist");
	create_dword	(0XFFFE1B20);
	set_name	(0XFFFE1B20,	"cmdlist");
	create_dword	(0XFFFE1B24);
	create_dword	(0XFFFE1B28);
	create_dword	(0XFFFE1B2C);
	set_name	(0XFFFE1B2C,	"udcrq_in");
	create_dword	(0XFFFE1B30);
	set_name	(0XFFFE1B30,	"download_max");
	create_dword	(0XFFFE1B34);
	set_name	(0XFFFE1B34,	"fastboot_state");
	create_dword	(0XFFFE1B38);
	set_name	(0XFFFE1B38,	"download_base");
	create_dword	(0XFFFE1B58);
	set_name	(0XFFFE1B58,	"udcrq_out");
	create_dword	(0XFFFE1B5C);
	set_name	(0XFFFE1B60,	"txn_done");
	create_byte	(0XFFFE1B64);
	make_array	(0XFFFE1B65,	0X3);
	create_dword	(0XFFFE1B68);
	create_byte	(0XFFFE1B7C);
	make_array	(0XFFFE1B7C,	0X10);
	set_name	(0XFFFE1B7C,	"TBIE_key");
	create_dword	(0XFFFE1B8C);
	create_dword	(0XFFFE1BB0);
	set_name	(0XFFFE1BB0,	"g_boot_pubkey_fun");
	create_dword	(0XFFFE1BB4);
	create_dword	(0XFFFE1BB8);
	create_dword	(0XFFFE251C);
	create_dword	(0XFFFE2540);
	create_dword	(0XFFFE2544);
	create_dword	(0XFFFE2548);
	create_byte	(0XFFFE254C);
	make_array	(0XFFFE254D,	0X3);
	create_dword	(0XFFFE2550);
	create_dword	(0XFFFE2554);
	create_dword	(0XFFFE2558);
	create_dword	(0XFFFE255C);
	create_dword	(0XFFFE2560);
	create_dword	(0XFFFE2564);
	create_dword	(0XFFFE2568);
	create_dword	(0XFFFE256C);
	create_dword	(0XFFFE2574);
	create_dword	(0XFFFE2578);
	create_dword	(0XFFFE2584);
	create_dword	(0XFFFE2588);
	create_dword	(0XFFFE258C);
	create_dword	(0XFFFE2590);
	create_dword	(0XFFFE26C4);
	create_dword	(0XFFFE26C8);
	create_dword	(0XFFFE26CC);
	create_dword	(0XFFFE26D0);
	create_dword	(0XFFFE26F8);
	create_dword	(0XFFFE2718);
	create_dword	(0XFFFE271C);
	create_dword	(0XFFFE2818);
	create_dword	(0XFFFE281C);
	create_dword	(0XFFFE2820);
	make_array	(0XFFFE2824,	0X1C);
	create_dword	(0XFFFE2840);
	create_dword	(0XFFFE2844);
	make_array	(0XFFFE2848,	0X38);
	create_dword	(0XFFFE2880);
	create_dword	(0XFFFE2884);
	create_byte	(0XFFFE2888);
	make_array	(0XFFFE2889,	0X3);
	create_dword	(0XFFFE288C);
	create_dword	(0XFFFE2890);
	set_name	(0XFFFE2890,	"pmic_dev__name");
	create_dword	(0XFFFE2894);
	create_dword	(0XFFFE2898);
	create_dword	(0XFFFE289C);
	create_dword	(0XFFFE28A0);
	create_dword	(0XFFFE28A4);
	create_dword	(0XFFFE28A8);
	create_dword	(0XFFFE28AC);
	create_dword	(0XFFFE28B0);
	create_byte	(0XFFFE28B4);
	set_name	(0XFFFE28B4,	"bp_initialized");
	make_array	(0XFFFE28B5,	0X3);
	create_dword	(0XFFFE28B8);
	set_name	(0XFFFE28B8,	"auth_keys");
	create_dword	(0XFFFE28BC);
	create_dword	(0XFFFE28C0);
	create_dword	(0XFFFE28C4);
	create_dword	(0XFFFE28C8);
	create_dword	(0XFFFE28CC);
	create_dword	(0XFFFE28D0);
	create_dword	(0XFFFE28D4);
	create_dword	(0XFFFE31B8);
	set_name	(0XFFFE31B8,	"enc_keys");
	create_dword	(0XFFFE31BC);
	create_dword	(0XFFFE31C0);
	create_dword	(0XFFFE31C4);
	create_dword	(0XFFFE31C8);
	create_dword	(0XFFFE31CC);
	create_dword	(0XFFFE31D0);
	create_dword	(0XFFFE31D4);
	create_byte	(0XFFFE33B8);
	make_array	(0XFFFE33B9,	0X3);
	create_dword	(0XFFFE33BC);
	set_name	(0XFFFE33BC,	"partition_count");
	create_dword	(0XFFFE33C0);
	create_dword	(0XFFFE33C4);
	create_dword	(0XFFFE33C8);
	create_dword	(0XFFFE34CC);
	create_dword	(0XFFFE3530);
	create_dword	(0XFFFE35CC);
	create_dword	(0XFFFE35D0);
	create_dword	(0XFFFE35D4);
	create_dword	(0XFFFE35D8);
	create_dword	(0XFFFE35DC);
	make_array	(0XFFFE35DC,	0X40);
	create_dword	(0XFFFE36DC);
	create_dword	(0XFFFE3EE0);
	create_dword	(0XFFFE3EE4);
	make_array	(0XFFFE3EE4,	0XC);
	create_byte	(0XFFFE3F14);
	create_dword	(0XFFFE3F48);
	create_dword	(0XFFFE3F4C);
	create_byte	(0XFFFE3F50);
	make_array	(0XFFFE3F50,	0X4);
	create_dword	(0XFFFE3F54);
	create_dword	(0XFFFE3F58);
	create_dword	(0XFFFE3F5C);
	create_dword	(0XFFFE3F60);
	create_dword	(0XFFFE3F64);
	create_dword	(0XFFFE3F68);
	set_name	(0XFFFE3F68,	"theheap__base");
	create_dword	(0XFFFE3F6C);
	create_dword	(0XFFFE3F70);
	set_name	(0XFFFE3F70,	"theheap__remaining");
	create_dword	(0XFFFE3F74);
	set_name	(0XFFFE3F78,	"theheap__lock");
	create_dword	(0XFFFE3F94);
	create_dword	(0XFFFE3F98);
	create_dword	(0XFFFE3F9C);
	create_word	(0XFFFE3FA0);
	make_array	(0XFFFE3FA2,	0X2);
	create_dword	(0XFFFE3FA4);
	set_name	(0XFFFE3FA4,	"mmc_dev_0");
	make_array	(0XFFFE3FA8,	0X18);
	create_dword	(0XFFFE4FD0);
	set_name	(0XFFFE4FD0,	"txn_status");
	create_dword	(0XFFFE4FD4);
	create_dword	(0XFFFE4FD8);
	set_name	(0XFFFE4FD8,	"usb_if__udc_request_alloc");
	create_dword	(0XFFFE4FDC);
	set_name	(0XFFFE4FDC,	"usb_if__udc_start");
	create_dword	(0XFFFE4FE0);
	create_dword	(0XFFFE4FE4);
	set_name	(0XFFFE4FE4,	"usb_if__udc_endpoint_alloc");
	create_dword	(0XFFFE4FE8);
	create_dword	(0XFFFE4FEC);
	create_dword	(0XFFFE4FF0);
	set_name	(0XFFFE4FF0,	"usb_if__udc_register_gadget");
	create_dword	(0XFFFE4FF4);
	set_name	(0XFFFE4FF4,	"usb_if__usb_read");
	create_dword	(0XFFFE4FF8);
	set_name	(0XFFFE4FF8,	"usb_if__usb_write");
	create_dword	(0XFFFE502C);
	create_dword	(0XFFFE5030);
	create_dword	(0XFFFE5034);
	create_dword	(0XFFFE5038);
	create_dword	(0XFFFE503C);
	create_dword	(0XFFFE5040);
	create_dword	(0XFFFE5044);
	create_dword	(0XFFFE5048);
	create_dword	(0XFFFE504C);
	create_dword	(0XFFFE5054);
	create_dword	(0XFFFE5058);
	create_dword	(0XFFFE505C);
	create_dword	(0XFFFE5060);
	make_array	(0XFFFE5064,	0X1C);
	create_dword	(0XFFFE5080);
	create_dword	(0XFFFE5084);
	create_dword	(0XFFFE508C);
	create_dword	(0XFFFE5090);
	create_dword	(0XFFFE5094);
	create_dword	(0XFFFE5098);
	create_dword	(0XFFFE50BC);
	create_dword	(0XFFFE50C0);
	create_dword	(0XFFFE50D4);
	create_dword	(0XFFFE50D8);
	create_dword	(0XFFFE50DC);
	create_dword	(0XFFFE50E0);
	create_dword	(0XFFFE50E4);
	create_dword	(0XFFFE50E8);
	create_dword	(0XFFFE50EC);
	create_dword	(0XFFFE50F0);
	create_dword	(0XFFFE50F4);
	create_dword	(0XFFFE50F8);
	create_dword	(0XFFFE50FC);
	create_dword	(0XFFFE5100);
	make_array	(0XFFFE5104,	0XC);
	create_dword	(0XFFFE5110);
	create_dword	(0XFFFE5124);
	create_dword	(0XFFFE5128);
	create_dword	(0XFFFE512C);
	create_dword	(0XFFFE5130);
	create_dword	(0XFFFE5174);
	create_dword	(0XFFFE5178);
	create_dword	(0XFFFE517C);
	create_dword	(0XFFFE5180);
	make_array	(0XFFFE5184,	0XC);
	create_dword	(0XFFFE5190);
	create_dword	(0XFFFE51C8);
	create_dword	(0XFFFE51CC);
	create_dword	(0XFFFE51D0);
	create_dword	(0XFFFE51D4);
	create_dword	(0XFFFE51D8);
	create_dword	(0XFFFE51DC);
	create_dword	(0XFFFE51E0);
	create_dword	(0XFFFE51E4);
	create_dword	(0XFFFE51E8);
	create_dword	(0XFFFE5214);
	create_dword	(0XFFFE5218);
	create_dword	(0XFFFE521C);
	create_dword	(0XFFFE5220);
	create_dword	(0XFFFE5224);
	create_dword	(0XFFFE5264);
	create_dword	(0XFFFE5268);
	create_dword	(0XFFFE526C);
	create_dword	(0XFFFE5270);
	create_dword	(0XFFFE5274);
	create_dword	(0XFFFE5278);
	create_dword	(0XFFFE527C);
	create_dword	(0XFFFE5280);
	create_dword	(0XFFFE52B4);
	create_dword	(0XFFFE52B8);
	create_dword	(0XFFFE52BC);
	create_dword	(0XFFFE52C0);
	create_dword	(0XFFFE52C4);
	create_dword	(0XFFFE52C8);
	create_dword	(0XFFFE52CC);
	create_dword	(0XFFFE52D0);
	create_dword	(0XFFFE52D4);
	create_dword	(0XFFFE52D8);
	create_dword	(0XFFFE52DC);
	set_name	(0XFFFE52DC,	"partition_entries");
	create_dword	(0XFFFE52E0);
	create_dword	(0XFFFE52E4);
	create_dword	(0XFFFE52E8);
	create_dword	(0XFFFE52EC);
	create_dword	(0XFFFE52F0);
	create_dword	(0XFFFE56F4);
	make_array	(0XFFFE56F4,	0X5);
	create_dword	(0XFFFE5728);
	create_dword	(0XFFFE5738);
	create_dword	(0XFFFE573C);
	create_dword	(0XFFFE5760);
}

static Functions_0(void) {

	add_func    (0XFFFC0020,0XFFFC00B8);
	set_func_flags(0XFFFC0020,0x401);
	add_func    (0XFFFC00B8,0XFFFC00BC);
	set_func_flags(0XFFFC00B8,0x401);
	add_func    (0XFFFC00D8,0XFFFC00DA);
	set_func_flags(0XFFFC00D8,0x440);
	add_func    (0XFFFC00DC,0XFFFC0150);
	set_func_flags(0XFFFC00DC,0x400);
	set_frame_size(0XFFFC00DC, 0X8, 0, 0);
	add_func    (0XFFFC0150,0XFFFC01B0);
	set_func_flags(0XFFFC0150,0x400);
	set_frame_size(0XFFFC0150, 0X8, 0, 0);
	add_func    (0XFFFC01B0,0XFFFC01D6);
	set_func_flags(0XFFFC01B0,0x400);
	set_frame_size(0XFFFC01B0, 0X8, 0, 0);
	add_func    (0XFFFC01D6,0XFFFC01E4);
	set_func_flags(0XFFFC01D6,0x400);
	add_func    (0XFFFC01E4,0XFFFC0264);
	set_func_flags(0XFFFC01E4,0x400);
	set_frame_size(0XFFFC01E4, 0X8, 0, 0);
	add_func    (0XFFFC0264,0XFFFC046C);
	set_func_flags(0XFFFC0264,0x400);
	set_frame_size(0XFFFC0264, 0X20, 0, 0);
	add_func    (0XFFFC046C,0XFFFC04FC);
	set_func_flags(0XFFFC046C,0x400);
	set_frame_size(0XFFFC046C, 0X10, 0, 0);
	add_func    (0XFFFC04FC,0XFFFC0516);
	set_func_flags(0XFFFC04FC,0x400);
	set_frame_size(0XFFFC04FC, 0X10, 0, 0);
	add_func    (0XFFFC0518,0XFFFC0532);
	set_func_flags(0XFFFC0518,0x400);
	set_frame_size(0XFFFC0518, 0X10, 0, 0);
	add_func    (0XFFFC0534,0XFFFC055C);
	set_func_flags(0XFFFC0534,0x400);
	set_frame_size(0XFFFC0534, 0X8, 0, 0);
	add_func    (0XFFFC055C,0XFFFC0576);
	set_func_flags(0XFFFC055C,0x400);
	set_frame_size(0XFFFC055C, 0X8, 0, 0);
	add_func    (0XFFFC0578,0XFFFC057A);
	set_func_flags(0XFFFC0578,0x440);
	add_func    (0XFFFC057C,0XFFFC06F0);
	set_func_flags(0XFFFC057C,0x400);
	set_frame_size(0XFFFC057C, 0X60, 0, 0);
	add_func    (0XFFFC06F0,0XFFFC06FC);
	set_func_flags(0XFFFC06F0,0x400);
	add_func    (0XFFFC06FC,0XFFFC070C);
	set_func_flags(0XFFFC06FC,0x400);
	add_func    (0XFFFC070C,0XFFFC071C);
	set_func_flags(0XFFFC070C,0x400);
	add_func    (0XFFFC071C,0XFFFC072E);
	set_func_flags(0XFFFC071C,0x400);
	add_func    (0XFFFC0730,0XFFFC0788);
	set_func_flags(0XFFFC0730,0x400);
	set_frame_size(0XFFFC0730, 0X8, 0, 0);
	add_func    (0XFFFC0788,0XFFFC078A);
	set_func_flags(0XFFFC0788,0x440);
	add_func    (0XFFFC078C,0XFFFC07B8);
	set_func_flags(0XFFFC078C,0x400);
	set_frame_size(0XFFFC078C, 0X4, 0, 0);
	add_func    (0XFFFC07B8,0XFFFC07FA);
	set_func_flags(0XFFFC07B8,0x400);
	set_frame_size(0XFFFC07B8, 0X4, 0, 0);
	add_func    (0XFFFC07FC,0XFFFC0834);
	set_func_flags(0XFFFC07FC,0x401);
	set_frame_size(0XFFFC07FC, 0X8, 0, 0);
	add_func    (0XFFFC0834,0XFFFC0848);
	set_func_flags(0XFFFC0834,0x401);
	add_func    (0XFFFC0848,0XFFFC087E);
	set_func_flags(0XFFFC0848,0x400);
	add_func    (0XFFFC0880,0XFFFC0932);
	set_func_flags(0XFFFC0880,0x400);
	set_frame_size(0XFFFC0880, 0X20, 0, 0);
	add_func    (0XFFFC0934,0XFFFC094A);
	set_func_flags(0XFFFC0934,0x400);
	set_frame_size(0XFFFC0934, 0X8, 0, 0);
	add_func    (0XFFFC094C,0XFFFC0D3E);
	set_func_flags(0XFFFC094C,0x400);
	set_frame_size(0XFFFC094C, 0X80, 0, 0);
	add_func    (0XFFFC0D40,0XFFFC0D88);
	set_func_flags(0XFFFC0D40,0x400);
	set_frame_size(0XFFFC0D40, 0X10, 0, 0);
	add_func    (0XFFFC0D88,0XFFFC0E42);
	set_func_flags(0XFFFC0D88,0x400);
	set_frame_size(0XFFFC0D88, 0XC, 0, 0);
	add_func    (0XFFFC0E44,0XFFFC0F14);
	set_func_flags(0XFFFC0E44,0x400);
	SetType(0XFFFC0E44, "void __cdecl sdhci_set_uhs_mode(struct sdhci_host *host, uint32_t mode);");
	set_frame_size(0XFFFC0E44, 0X18, 0, 0);
	add_func    (0XFFFC0F14,0XFFFC0F5C);
	set_func_flags(0XFFFC0F14,0x400);
	SetType(0XFFFC0F14, "uint8_t __cdecl sdhci_set_bus_width(struct sdhci_host *host, uint16_t width);");
	set_frame_size(0XFFFC0F14, 0X8, 0, 0);
	add_func    (0XFFFC0F5C,0XFFFC157A);
	set_func_flags(0XFFFC0F5C,0x400);
	SetType(0XFFFC0F5C, "uint32_t __cdecl sdhci_send_command(struct sdhci_host *host, struct mmc_command *cmd);");
	set_frame_size(0XFFFC0F5C, 0X40, 0, 0);
	add_func    (0XFFFC157C,0XFFFC1604);
	set_func_flags(0XFFFC157C,0x400);
	set_frame_size(0XFFFC157C, 0X8, 0, 0);
	add_func    (0XFFFC1604,0XFFFC1642);
	set_func_flags(0XFFFC1604,0x400);
	SetType(0XFFFC1604, "unsigned int __cdecl mmc_boot_get_card_status(struct mmc_card *card, unsigned int prg_enabled, unsigned int *status);");
	set_frame_size(0XFFFC1604, 0X60, 0, 0);
	add_func    (0XFFFC1644,0XFFFC1682);
	set_func_flags(0XFFFC1644,0x400);
	SetType(0XFFFC1644, "uint32_t __cdecl static mmc_send_app_cmd(struct sdhci_host *host, struct mmc_card *card);");
	set_frame_size(0XFFFC1644, 0X58, 0, 0);
	add_func    (0XFFFC1684,0XFFFC171C);
	set_func_flags(0XFFFC1684,0x400);
	set_frame_size(0XFFFC1684, 0X8, 0, 0);
	add_func    (0XFFFC171C,0XFFFC1766);
	set_func_flags(0XFFFC171C,0x400);
	SetType(0XFFFC171C, "uint32_t __cdecl static mmc_stop_command(struct mmc_device *dev);");
	set_frame_size(0XFFFC171C, 0X50, 0, 0);
	add_func    (0XFFFC1768,0XFFFC17AA);
	set_func_flags(0XFFFC1768,0x400);
	SetType(0XFFFC1768, "uint32_t __cdecl static mmc_get_ext_csd(struct sdhci_host *host, struct mmc_card *card);");
	set_frame_size(0XFFFC1768, 0X58, 0, 0);
	add_func    (0XFFFC17AC,0XFFFC1850);
	set_func_flags(0XFFFC17AC,0x400);
	SetType(0XFFFC17AC, "uint32_t __cdecl static mmc_switch_cmd(struct sdhci_host *host, struct mmc_card *card, uint32_t access, uint32_t index, uint32_t value);");
	set_frame_size(0XFFFC17AC, 0X68, 0, 0);
	define_local_var(0XFFFC17AC, 0XFFFC1850, "[bp-0X64]", "status");
	define_local_var(0XFFFC17AC, 0XFFFC1850, "[bp+0]", "value");
	add_func    (0XFFFC1850,0XFFFC1898);
	set_func_flags(0XFFFC1850,0x400);
	SetType(0XFFFC1850, "uint32_t __cdecl static mmc_set_hs_interface(struct sdhci_host *host, struct mmc_card *card);");
	set_frame_size(0XFFFC1850, 0X18, 0, 0);
	define_local_var(0XFFFC1850, 0XFFFC1898, "[bp-0X18]", "value");
	add_func    (0XFFFC1898,0XFFFC19BE);
	set_func_flags(0XFFFC1898,0x400);
	SetType(0XFFFC1898, "uint32_t __cdecl mmc_sd_card_init(struct sdhci_host *host, struct mmc_card *card);");
	set_frame_size(0XFFFC1898, 0X68, 0, 0);
	add_func    (0XFFFC19C0,0XFFFC1A1E);
	set_func_flags(0XFFFC19C0,0x400);
	SetType(0XFFFC19C0, "uint32_t __cdecl mmc_sd_set_bus_width(struct sdhci_host *host, struct mmc_card **card, uint8_t width);");
	set_frame_size(0XFFFC19C0, 0X58, 0, 0);
	add_func    (0XFFFC1A20,0XFFFC1A78);
	set_func_flags(0XFFFC1A20,0x410);
	SetType(0XFFFC1A20, "uint32_t __cdecl mmc_sd_set_hs(struct sdhci_host *host, struct mmc_card *card);");
	set_frame_size(0XFFFC1A20, 0XCC, 20, 0);
	add_func    (0XFFFC1A78,0XFFFC27D8);
	set_func_flags(0XFFFC1A78,0x410);
	SetType(0XFFFC1A78, "struct mmc_device *__cdecl mmc_init(struct mmc_config_data *data);");
	set_frame_size(0XFFFC1A78, 0X16C, 36, 0);
	define_local_var(0XFFFC1A78, 0XFFFC27D8, "[bp-0X16C]", "value");
	add_func    (0XFFFC27D8,0XFFFC285C);
	set_func_flags(0XFFFC27D8,0x400);
	SetType(0XFFFC27D8, "uint32_t __cdecl mmc_sdhci_read(struct mmc_device *dev, void *dest, uint64_t blk_addr, uint32_t num_blocks);");
	set_frame_size(0XFFFC27D8, 0X60, 0, 0);
	define_local_var(0XFFFC27D8, 0XFFFC285C, "[bp+0]", "a4");
	define_local_var(0XFFFC27D8, 0XFFFC285C, "[bp+0X4]", "num_blocks");
	add_func    (0XFFFC285C,0XFFFC28DA);
	set_func_flags(0XFFFC285C,0x400);
	SetType(0XFFFC285C, "uint32_t __cdecl mmc_sdhci_write(struct mmc_device *dev, void *src, uint64_t blk_addr, uint32_t num_blocks);");
	set_frame_size(0XFFFC285C, 0X60, 0, 0);
	define_local_var(0XFFFC285C, 0XFFFC28DA, "[bp+0]", "num_blocks");
	add_func    (0XFFFC28DC,0XFFFC2B0E);
	set_func_flags(0XFFFC28DC,0x400);
	SetType(0XFFFC28DC, "uint32_t __cdecl static mmc_send_erase_grp_start(struct mmc_device *dev, uint32_t erase_start);");
	set_frame_size(0XFFFC28DC, 0X78, 0, 0);
	define_local_var(0XFFFC28DC, 0XFFFC2B0E, "[bp-0X74]", "status");
	add_func    (0XFFFC2B10,0XFFFC2B52);
	set_func_flags(0XFFFC2B10,0x400);
	SetType(0XFFFC2B10, "uint32_t __cdecl mmc_sdhci_switch_part(struct mmc_device *dev, uint32_t type);");
	set_frame_size(0XFFFC2B10, 0X18, 0, 0);
	define_local_var(0XFFFC2B10, 0XFFFC2B52, "[bp-0X18]", "value");
	add_func    (0XFFFC2B54,0XFFFC2C78);
	set_func_flags(0XFFFC2B54,0x400);
	SetType(0XFFFC2B54, "uint32_t __cdecl mmc_sdhci_rpmb_send(struct mmc_device *dev, struct mmc_command *cmd);");
	set_frame_size(0XFFFC2B54, 0X88, 0, 0);
	define_local_var(0XFFFC2B54, 0XFFFC2C78, "[bp-0X74]", "status");
	add_func    (0XFFFC2C78,0XFFFC2CEE);
	set_func_flags(0XFFFC2C78,0x400);
	SetType(0XFFFC2C78, "uint32_t __cdecl mmc_zero_out(struct mmc_device *dev, uint32_t blk_addr, uint32_t num_blks);");
	set_frame_size(0XFFFC2C78, 0X20, 0, 0);
	define_local_var(0XFFFC2C78, 0XFFFC2CEE, "[bp-0X20]", "num_blocks");
	add_func    (0XFFFC2CF0,0XFFFC2E1E);
	set_func_flags(0XFFFC2CF0,0x400);
	SetType(0XFFFC2CF0, "unsigned int __cdecl mmc_write(unsigned __int64 data_addr, unsigned int data_len, unsigned int *in);");
	set_frame_size(0XFFFC2CF0, 0X38, 0, 0);
	define_local_var(0XFFFC2CF0, 0XFFFC2E1E, "[bp-0X38]", "num_blocks");
	add_func    (0XFFFC2E20,0XFFFC2F64);
	set_func_flags(0XFFFC2E20,0x400);
	SetType(0XFFFC2E20, "uint32_t __cdecl mmc_read(uint64_t data_addr, uint32_t *out, uint32_t data_len);");
	set_frame_size(0XFFFC2E20, 0X38, 0, 0);
	define_local_var(0XFFFC2E20, 0XFFFC2F64, "[bp-0X38]", "num_blocks");
	define_local_var(0XFFFC2E20, 0XFFFC2F64, "[bp-0X2C]", "a4");
	add_func    (0XFFFC2F64,0XFFFC2F76);
	set_func_flags(0XFFFC2F64,0x400);
	set_frame_size(0XFFFC2F64, 0X8, 0, 0);
	add_func    (0XFFFC2F78,0XFFFC2F96);
	set_func_flags(0XFFFC2F78,0x400);
	set_frame_size(0XFFFC2F78, 0X8, 0, 0);
	add_func    (0XFFFC2F98,0XFFFC303C);
	set_func_flags(0XFFFC2F98,0x400);
	set_frame_size(0XFFFC2F98, 0X20, 0, 0);
	define_local_var(0XFFFC2F98, 0XFFFC303C, "[bp-0X20]", "value");
	add_func    (0XFFFC303C,0XFFFC30C4);
	set_func_flags(0XFFFC303C,0x400);
	set_frame_size(0XFFFC303C, 0X20, 0, 0);
	define_local_var(0XFFFC303C, 0XFFFC30C4, "[bp-0X20]", "value");
	add_func    (0XFFFC30C4,0XFFFC3100);
	set_func_flags(0XFFFC30C4,0x400);
	set_frame_size(0XFFFC30C4, 0X8, 0, 0);
	add_func    (0XFFFC3100,0XFFFC325E);
	set_func_flags(0XFFFC3100,0x400);
	set_frame_size(0XFFFC3100, 0X28, 0, 0);
	add_func    (0XFFFC3278,0XFFFC328A);
	set_func_flags(0XFFFC3278,0x400);
	set_frame_size(0XFFFC3278, 0X8, 0, 0);
	add_func    (0XFFFC328C,0XFFFC338E);
	set_func_flags(0XFFFC328C,0x400);
	SetType(0XFFFC328C, "void __cdecl target_sdc_init();");
	set_frame_size(0XFFFC328C, 0X38, 0, 0);
	add_func    (0XFFFC3390,0XFFFC339C);
	set_func_flags(0XFFFC3390,0x400);
	SetType(0XFFFC3390, "struct mmc_device *get_mmc_dev(void);");
	add_func    (0XFFFC339C,0XFFFC33A2);
	set_func_flags(0XFFFC339C,0x400);
	add_func    (0XFFFC33A4,0XFFFC33AA);
	set_func_flags(0XFFFC33A4,0x400);
	add_func    (0XFFFC33AC,0XFFFC33AE);
	set_func_flags(0XFFFC33AC,0x440);
	add_func    (0XFFFC33B0,0XFFFC33C6);
	set_func_flags(0XFFFC33B0,0x400);
	SetType(0XFFFC33B0, "void __cdecl sdhci_msm_init(struct sdhci_host *host, struct sdhci_msm_data *config);");
	set_frame_size(0XFFFC33B0, 0X10, 0, 0);
	add_func    (0XFFFC33C8,0XFFFC33E0);
	set_func_flags(0XFFFC33C8,0x400);
	set_frame_size(0XFFFC33C8, 0X24, 0, 0);
	add_func    (0XFFFC33E0,0XFFFC343C);
	set_func_flags(0XFFFC33E0,0x400);
	set_frame_size(0XFFFC33E0, 0, 0, 0);
	add_func    (0XFFFC343C,0XFFFC3454);
	set_func_flags(0XFFFC343C,0x400);
	set_frame_size(0XFFFC343C, 0, 0, 0);
	add_func    (0XFFFC3454,0XFFFC34B0);
	set_func_flags(0XFFFC3454,0x400);
	set_frame_size(0XFFFC3454, 0X24, 0, 0);
	add_func    (0XFFFC34B0,0XFFFC350C);
	set_func_flags(0XFFFC34B0,0x400);
	set_frame_size(0XFFFC34B0, 0X28, 0, 0);
	add_func    (0XFFFC350C,0XFFFC35A0);
	set_func_flags(0XFFFC350C,0x400);
	add_func    (0XFFFC35A0,0XFFFC3634);
	set_func_flags(0XFFFC35A0,0x400);
	add_func    (0XFFFC3634,0XFFFC3658);
	set_func_flags(0XFFFC3634,0x400);
	add_func    (0XFFFC3658,0XFFFC367C);
	set_func_flags(0XFFFC3658,0x400);
	add_func    (0XFFFC367C,0XFFFC36A0);
	set_func_flags(0XFFFC367C,0x400);
	add_func    (0XFFFC36A0,0XFFFC36B4);
	set_func_flags(0XFFFC36A0,0x400);
	set_frame_size(0XFFFC36A0, 0X4, 0, 0);
	add_func    (0XFFFC36BC,0XFFFC36CC);
	set_func_flags(0XFFFC36BC,0x400);
	add_func    (0XFFFC36CC,0XFFFC36DC);
	set_func_flags(0XFFFC36CC,0x400);
	add_func    (0XFFFC36DC,0XFFFC36F4);
	set_func_flags(0XFFFC36DC,0x400);
	add_func    (0XFFFC36F4,0XFFFC3710);
	set_func_flags(0XFFFC36F4,0x400);
	add_func    (0XFFFC3710,0XFFFC372C);
	set_func_flags(0XFFFC3710,0x400);
	add_func    (0XFFFC372C,0XFFFC3748);
	set_func_flags(0XFFFC372C,0x400);
	add_func    (0XFFFC3748,0XFFFC3764);
	set_func_flags(0XFFFC3748,0x400);
	add_func    (0XFFFC3768,0XFFFC3788);
	set_func_flags(0XFFFC3768,0x400);
	add_func    (0XFFFC3788,0XFFFC37A0);
	set_func_flags(0XFFFC3788,0x400);
	add_func    (0XFFFC37A0,0XFFFC37A8);
	set_func_flags(0XFFFC37A0,0x400);
	add_func    (0XFFFC37A8,0XFFFC37B4);
	set_func_flags(0XFFFC37A8,0x400);
	add_func    (0XFFFC37B4,0XFFFC380C);
	set_func_flags(0XFFFC37B4,0x401);
	set_frame_size(0XFFFC37B4, 0X2C, 0, 0);
	add_func    (0XFFFC380C,0XFFFC3844);
	set_func_flags(0XFFFC380C,0x401);
	set_frame_size(0XFFFC380C, 0X4C, 0, 0);
	add_func    (0XFFFC3844,0XFFFC3864);
	set_func_flags(0XFFFC3844,0x401);
	set_frame_size(0XFFFC3844, 0, 0, 0);
	add_func    (0XFFFC3864,0XFFFC38C0);
	set_func_flags(0XFFFC3864,0x401);
	set_frame_size(0XFFFC3864, 0X4C, 0, 0);
	add_func    (0XFFFC38C0,0XFFFC391C);
	set_func_flags(0XFFFC38C0,0x401);
	set_frame_size(0XFFFC38C0, 0X4C, 0, 0);
	add_func    (0XFFFC391C,0XFFFC3920);
	set_func_flags(0XFFFC391C,0x401);
	add_func    (0XFFFC3920,0XFFFC39A4);
	set_func_flags(0XFFFC3920,0x401);
	set_frame_size(0XFFFC3920, 0X2C, 0, 0);
	add_func    (0XFFFC39A4,0XFFFC39E0);
	set_func_flags(0XFFFC39A4,0x401);
	set_frame_size(0XFFFC39A4, 0X2C, 0, 0);
	add_func    (0XFFFC39E0,0XFFFC3A00);
	set_func_flags(0XFFFC39E0,0x401);
	set_frame_size(0XFFFC39E0, 0, 0, 0);
	add_func    (0XFFFC3A00,0XFFFC3CB8);
	set_func_flags(0XFFFC3A00,0x400);
	SetType(0XFFFC3A00, "void __cdecl static dump_mode_regs(uint32_t spsr, uint32_t svc_r13, uint32_t svc_r14);");
	set_frame_size(0XFFFC3A00, 0X50, 0, 0);
	add_func    (0XFFFC3CB8,0XFFFC3D60);
	set_func_flags(0XFFFC3CB8,0x401);
	SetType(0XFFFC3CB8, "void __cdecl static dump_fault_frame(struct arm_fault_frame *frame);");
	set_frame_size(0XFFFC3CB8, 0X10, 0, 0);
	add_func    (0XFFFC3D60,0XFFFC3D6E);
	set_func_flags(0XFFFC3D60,0x401);
	set_frame_size(0XFFFC3D60, 0X8, 0, 0);
	add_func    (0XFFFC3D70,0XFFFC3E5C);
	set_func_flags(0XFFFC3D70,0x400);
	set_frame_size(0XFFFC3D70, 0X10, 0, 0);
	add_func    (0XFFFC3E5C,0XFFFC4022);
	set_func_flags(0XFFFC3E5C,0x400);
	set_frame_size(0XFFFC3E5C, 0X20, 0, 0);
	add_func    (0XFFFC4024,0XFFFC4118);
	set_func_flags(0XFFFC4024,0x400);
	set_frame_size(0XFFFC4024, 0X18, 0, 0);
	add_func    (0XFFFC4118,0XFFFC4128);
	set_func_flags(0XFFFC4118,0x400);
	add_func    (0XFFFC4128,0XFFFC4148);
	set_func_flags(0XFFFC4128,0x400);
	set_frame_size(0XFFFC4128, 0X8, 0, 0);
	add_func    (0XFFFC4148,0XFFFC41C4);
	set_func_flags(0XFFFC4148,0x400);
	add_func    (0XFFFC41C4,0XFFFC41FC);
	set_func_flags(0XFFFC41C4,0x400);
	set_frame_size(0XFFFC41C4, 0X8, 0, 0);
	add_func    (0XFFFC41FC,0XFFFC421E);
	set_func_flags(0XFFFC41FC,0x401);
	set_frame_size(0XFFFC41FC, 0X8, 0, 0);
	add_func    (0XFFFC4220,0XFFFC426A);
	set_func_flags(0XFFFC4220,0x400);
	set_frame_size(0XFFFC4220, 0X8, 0, 0);
	add_func    (0XFFFC426C,0XFFFC4284);
	set_func_flags(0XFFFC426C,0x400);
	set_frame_size(0XFFFC426C, 0X10, 0, 0);
	add_func    (0XFFFC4284,0XFFFC430C);
	set_func_flags(0XFFFC4284,0x400);
	set_frame_size(0XFFFC4284, 0X8, 0, 0);
	add_func    (0XFFFC430C,0XFFFC4310);
	set_func_flags(0XFFFC430C,0x440);
	add_func    (0XFFFC4310,0XFFFC4378);
	set_func_flags(0XFFFC4310,0x400);
	set_frame_size(0XFFFC4310, 0X10, 0, 0);
	add_func    (0XFFFC4378,0XFFFC442E);
	set_func_flags(0XFFFC4378,0x400);
	set_frame_size(0XFFFC4378, 0X30, 0, 0);
	add_func    (0XFFFC4434,0XFFFC44A0);
	set_func_flags(0XFFFC4434,0x400);
	set_frame_size(0XFFFC4434, 0X8, 0, 0);
	add_func    (0XFFFC44A0,0XFFFC457A);
	set_func_flags(0XFFFC44A0,0x401);
	set_frame_size(0XFFFC44A0, 0X10, 0, 0);
	define_local_var(0XFFFC44A0, 0XFFFC457A, "[bp-0X10]", "a5");
	add_func    (0XFFFC457C,0XFFFC4588);
	set_func_flags(0XFFFC457C,0x400);
	set_frame_size(0XFFFC457C, 0X8, 0, 0);
	add_func    (0XFFFC4588,0XFFFC4602);
	set_func_flags(0XFFFC4588,0x400);
	set_frame_size(0XFFFC4588, 0X18, 0, 0);
	define_local_var(0XFFFC4588, 0XFFFC4602, "[bp-0X18]", "a5");
	add_func    (0XFFFC4604,0XFFFC4672);
	set_func_flags(0XFFFC4604,0x400);
	set_frame_size(0XFFFC4604, 0X8, 0, 0);
	add_func    (0XFFFC4674,0XFFFC46BE);
	set_func_flags(0XFFFC4674,0x400);
	set_frame_size(0XFFFC4674, 0X8, 0, 0);
	add_func    (0XFFFC46C0,0XFFFC4976);
	set_func_flags(0XFFFC46C0,0x400);
	set_frame_size(0XFFFC46C0, 0X70, 0, 0);
	add_func    (0XFFFC497C,0XFFFC4C0A);
	set_func_flags(0XFFFC497C,0x400);
	set_frame_size(0XFFFC497C, 0X40, 0, 0);
	add_func    (0XFFFC4C0C,0XFFFC504E);
	set_func_flags(0XFFFC4C0C,0x400);
	set_frame_size(0XFFFC4C0C, 0XB0, 0, 0);
	define_local_var(0XFFFC4C0C, 0XFFFC504E, "[bp-0X24]", "a4");
	add_func    (0XFFFC5050,0XFFFC5054);
	set_func_flags(0XFFFC5050,0x400);
	SetType(0XFFFC5050, "int __cdecl node_cb(int depth, const char *name, void *cookie);");
	add_func    (0XFFFC5054,0XFFFC5062);
	set_func_flags(0XFFFC5054,0x400);
	add_func    (0XFFFC5064,0XFFFC50BE);
	set_func_flags(0XFFFC5064,0x400);
	set_frame_size(0XFFFC5064, 0X18, 0, 0);
	add_func    (0XFFFC50C0,0XFFFC52F4);
	set_func_flags(0XFFFC50C0,0x400);
	SetType(0XFFFC50C0, "int __cdecl prop_cb(const char *name, uint8_t *data, uint32_t size, void *cookie);");
	set_frame_size(0XFFFC50C0, 0X88, 0, 0);
	add_func    (0XFFFC52F4,0XFFFC5364);
	set_func_flags(0XFFFC52F4,0x400);
	set_frame_size(0XFFFC52F4, 0X58, 0, 0);
	add_func    (0XFFFC5364,0XFFFC537E);
	set_func_flags(0XFFFC5364,0x400);
	add_func    (0XFFFC5380,0XFFFC5464);
	set_func_flags(0XFFFC5380,0x400);
	SetType(0XFFFC5380, "int __cdecl usb_write(void *buf, unsigned int len);");
	set_frame_size(0XFFFC5380, 0X28, 0, 0);
	define_local_var(0XFFFC5380, 0XFFFC5464, "[bp-0X20]", "req");
	add_func    (0XFFFC5464,0XFFFC5586);
	set_func_flags(0XFFFC5464,0x400);
	SetType(0XFFFC5464, "int __cdecl usb_read(void *buf, unsigned int len);");
	set_frame_size(0XFFFC5464, 0X48, 0, 0);
	add_func    (0XFFFC5588,0XFFFC559C);
	set_func_flags(0XFFFC5588,0x400);
	add_func    (0XFFFC559C,0XFFFC55F6);
	set_func_flags(0XFFFC559C,0x410);
	SetType(0XFFFC559C, "void __cdecl fastboot_ack(const char *code, const char *reason);");
	set_frame_size(0XFFFC559C, 0X8C, 12, 0);
	add_func    (0XFFFC55F8,0XFFFC573A);
	set_func_flags(0XFFFC55F8,0x401);
	SetType(0XFFFC55F8, "int __cdecl fastboot_handler(void *arg);");
	set_frame_size(0XFFFC55F8, 0X20, 0, 0);
	add_func    (0XFFFC573C,0XFFFC5890);
	set_func_flags(0XFFFC573C,0x414);
	SetType(0XFFFC573C, "void __cdecl static cmd_download(const char *arg, void *data, unsigned int sz);");
	set_frame_size(0XFFFC573C, 0X80, 32, 0);
	define_local_var(0XFFFC573C, 0XFFFC5890, "[bp-0X41]", "response");
	add_func    (0XFFFC5890,0XFFFC591E);
	set_func_flags(0XFFFC5890,0x410);
	set_frame_size(0XFFFC5890, 0X80, 16, 0);
	add_func    (0XFFFC5920,0XFFFC594C);
	set_func_flags(0XFFFC5920,0x400);
	set_frame_size(0XFFFC5920, 0X10, 0, 0);
	add_func    (0XFFFC594C,0XFFFC596E);
	set_func_flags(0XFFFC594C,0x400);
	set_frame_size(0XFFFC594C, 0X10, 0, 0);
	add_func    (0XFFFC5970,0XFFFC59C0);
	set_func_flags(0XFFFC5970,0x410);
	set_frame_size(0XFFFC5970, 0X80, 16, 0);
	add_func    (0XFFFC59C0,0XFFFC5A7C);
	set_func_flags(0XFFFC59C0,0x404);
	SetType(0XFFFC59C0, "void __cdecl static cmd_getvar(const char *arg, void *data, unsigned int sz);");
	set_frame_size(0XFFFC59C0, 0X50, 0, 0);
	add_func    (0XFFFC5A7C,0XFFFC5A9A);
	set_func_flags(0XFFFC5A7C,0x404);
	SetType(0XFFFC5A7C, "void __cdecl fastboot_fail(const char *reason);");
	set_frame_size(0XFFFC5A7C, 0, 0, 0);
	add_func    (0XFFFC5A9C,0XFFFC5ABA);
	set_func_flags(0XFFFC5A9C,0x404);
	SetType(0XFFFC5A9C, "void __cdecl fastboot_okay(const char *info);");
	set_frame_size(0XFFFC5A9C, 0, 0, 0);
	add_func    (0XFFFC5ABC,0XFFFC5C92);
	set_func_flags(0XFFFC5ABC,0x400);
	SetType(0XFFFC5ABC, "int __cdecl fastboot_init(void *base, unsigned int size);");
	set_frame_size(0XFFFC5ABC, 0X38, 0, 0);
	define_local_var(0XFFFC5ABC, 0XFFFC5C92, "[bp-0X38]", "a5");
	add_func    (0XFFFC5C94,0XFFFC5CA4);
	set_func_flags(0XFFFC5C94,0x400);
	set_frame_size(0XFFFC5C94, 0X8, 0, 0);
	add_func    (0XFFFC5CA4,0XFFFC5CBE);
	set_func_flags(0XFFFC5CA4,0x400);
	set_frame_size(0XFFFC5CA4, 0X8, 0, 0);
	add_func    (0XFFFC5CC0,0XFFFC5CD6);
	set_func_flags(0XFFFC5CC0,0x401);
	set_frame_size(0XFFFC5CC0, 0X8, 0, 0);
	add_func    (0XFFFC5CD8,0XFFFC5CEE);
	set_func_flags(0XFFFC5CD8,0x401);
	set_frame_size(0XFFFC5CD8, 0X8, 0, 0);
	add_func    (0XFFFC5CF0,0XFFFC5D06);
	set_func_flags(0XFFFC5CF0,0x400);
	set_frame_size(0XFFFC5CF0, 0X8, 0, 0);
	add_func    (0XFFFC5D08,0XFFFC5D9C);
	set_func_flags(0XFFFC5D08,0x400);
	set_frame_size(0XFFFC5D08, 0X18, 0, 0);
	add_func    (0XFFFC5D9C,0XFFFC5DA0);
	set_func_flags(0XFFFC5D9C,0x480);
	add_func    (0XFFFC5DA0,0XFFFC5DFA);
	set_func_flags(0XFFFC5DA0,0x400);
	set_frame_size(0XFFFC5DA0, 0X10, 0, 0);
	add_func    (0XFFFC5DFC,0XFFFC60D4);
	set_func_flags(0XFFFC5DFC,0x400);
	SetType(0XFFFC5DFC, "void __cdecl cmd_flash_mmc_img(const char *arg, void *data, unsigned int sz);");
	set_frame_size(0XFFFC5DFC, 0X48, 0, 0);
	add_func    (0XFFFC60D4,0XFFFC63FE);
	set_func_flags(0XFFFC60D4,0x400);
	set_frame_size(0XFFFC60D4, 0X48, 0, 0);
	define_local_var(0XFFFC60D4, 0XFFFC63FE, "[bp-0X2C]", "in");
	add_func    (0XFFFC6400,0XFFFC6420);
	set_func_flags(0XFFFC6400,0x400);
	set_frame_size(0XFFFC6400, 0X4, 0, 0);
	add_func    (0XFFFC6420,0XFFFC6424);
	set_func_flags(0XFFFC6420,0x4c0);
	add_func    (0XFFFC6424,0XFFFC649A);
	set_func_flags(0XFFFC6424,0x410);
	set_frame_size(0XFFFC6424, 0X3C, 20, 0);
	add_func    (0XFFFC649C,0XFFFC64DC);
	set_func_flags(0XFFFC649C,0x400);
	set_frame_size(0XFFFC649C, 0X10, 0, 0);
	add_func    (0XFFFC64DC,0XFFFC64EA);
	set_func_flags(0XFFFC64DC,0x400);
	set_frame_size(0XFFFC64DC, 0X8, 0, 0);
	add_func    (0XFFFC64EC,0XFFFC666E);
	set_func_flags(0XFFFC64EC,0x400);
	SetType(0XFFFC64EC, "unsigned int __fastcall boot_verify_init(void *a1);");
	set_frame_size(0XFFFC64EC, 0X48, 0, 0);
	add_func    (0XFFFC6670,0XFFFC678A);
	set_func_flags(0XFFFC6670,0x400);
	SetType(0XFFFC6670, "int __fastcall sub_FFFC6670(void *a1, int a2, int a3, _DWORD *a4);");
	set_frame_size(0XFFFC6670, 0X428, 0, 0);
	define_local_var(0XFFFC6670, 0XFFFC678A, "[bp-0X428]", "flags");
	define_local_var(0XFFFC6670, 0XFFFC678A, "[bp-0X424]", "a6");
	define_local_var(0XFFFC6670, 0XFFFC678A, "[bp-0X420]", "a7");
	define_local_var(0XFFFC6670, 0XFFFC678A, "[bp-0X418]", "RRAK_key");
	add_func    (0XFFFC678C,0XFFFC679E);
	set_func_flags(0XFFFC678C,0x400);
	set_frame_size(0XFFFC678C, 0X8, 0, 0);
	add_func    (0XFFFC67A0,0XFFFC67B2);
	set_func_flags(0XFFFC67A0,0x400);
	set_frame_size(0XFFFC67A0, 0X8, 0, 0);
	add_func    (0XFFFC67B4,0XFFFC68CA);
	set_func_flags(0XFFFC67B4,0x400);
	set_frame_size(0XFFFC67B4, 0X10, 0, 0);
	add_func    (0XFFFC68CC,0XFFFC6956);
	set_func_flags(0XFFFC68CC,0x400);
	set_frame_size(0XFFFC68CC, 0X10, 0, 0);
	add_func    (0XFFFC6958,0XFFFC6A24);
	set_func_flags(0XFFFC6958,0x400);
	set_frame_size(0XFFFC6958, 0X10, 0, 0);
	add_func    (0XFFFC6A24,0XFFFC6A88);
	set_func_flags(0XFFFC6A24,0x400);
	set_frame_size(0XFFFC6A24, 0X18, 0, 0);
	add_func    (0XFFFC6A88,0XFFFC6E4E);
	set_func_flags(0XFFFC6A88,0x400);
	SetType(0XFFFC6A88, "int __cdecl static dwc_request_queue(struct dwc_dev_t *dev, uint8_t ep_phy_num, struct dwc_request_t *req);");
	set_frame_size(0XFFFC6A88, 0X48, 0, 0);
	add_func    (0XFFFC6E50,0XFFFC6EA8);
	set_func_flags(0XFFFC6E50,0x400);
	set_frame_size(0XFFFC6E50, 0X28, 0, 0);
	add_func    (0XFFFC6EA8,0XFFFC71BC);
	set_func_flags(0XFFFC6EA8,0x400);
	SetType(0XFFFC6EA8, "void __cdecl sub_FFFC6EA8();");
	set_frame_size(0XFFFC6EA8, 0X38, 0, 0);
	add_func    (0XFFFC71BC,0XFFFC7296);
	set_func_flags(0XFFFC71BC,0x400);
	set_frame_size(0XFFFC71BC, 0X30, 0, 0);
	add_func    (0XFFFC7298,0XFFFC7388);
	set_func_flags(0XFFFC7298,0x400);
	set_frame_size(0XFFFC7298, 0X28, 0, 0);
	add_func    (0XFFFC7388,0XFFFC7E34);
	set_func_flags(0XFFFC7388,0x400);
	set_frame_size(0XFFFC7388, 0X58, 0, 0);
	add_func    (0XFFFC7E34,0XFFFC7F44);
	set_func_flags(0XFFFC7E34,0x400);
	set_frame_size(0XFFFC7E34, 0X20, 0, 0);
	add_func    (0XFFFC7F44,0XFFFC805C);
	set_func_flags(0XFFFC7F44,0x400);
	set_frame_size(0XFFFC7F44, 0X30, 0, 0);
	add_func    (0XFFFC805C,0XFFFC80A4);
	set_func_flags(0XFFFC805C,0x400);
	set_frame_size(0XFFFC805C, 0X10, 0, 0);
	add_func    (0XFFFC80A4,0XFFFC80DC);
	set_func_flags(0XFFFC80A4,0x400);
	set_frame_size(0XFFFC80A4, 0X30, 0, 0);
	add_func    (0XFFFC80DC,0XFFFC8192);
	set_func_flags(0XFFFC80DC,0x400);
	set_frame_size(0XFFFC80DC, 0X20, 0, 0);
	add_func    (0XFFFC8194,0XFFFC81E2);
	set_func_flags(0XFFFC8194,0x400);
	set_frame_size(0XFFFC8194, 0X30, 0, 0);
	add_func    (0XFFFC81E4,0XFFFC8210);
	set_func_flags(0XFFFC81E4,0x400);
	set_frame_size(0XFFFC81E4, 0X28, 0, 0);
	add_func    (0XFFFC8210,0XFFFC822E);
	set_func_flags(0XFFFC8210,0x400);
	set_frame_size(0XFFFC8210, 0X20, 0, 0);
	add_func    (0XFFFC8230,0XFFFC8286);
	set_func_flags(0XFFFC8230,0x400);
	set_frame_size(0XFFFC8230, 0X30, 0, 0);
	add_func    (0XFFFC8288,0XFFFC82A6);
	set_func_flags(0XFFFC8288,0x400);
	set_frame_size(0XFFFC8288, 0X20, 0, 0);
	add_func    (0XFFFC82A8,0XFFFC82C6);
	set_func_flags(0XFFFC82A8,0x400);
	set_frame_size(0XFFFC82A8, 0X20, 0, 0);
	add_func    (0XFFFC82C8,0XFFFC82EA);
	set_func_flags(0XFFFC82C8,0x400);
	set_frame_size(0XFFFC82C8, 0X20, 0, 0);
	add_func    (0XFFFC82EC,0XFFFC8378);
	set_func_flags(0XFFFC82EC,0x400);
	set_frame_size(0XFFFC82EC, 0X10, 0, 0);
	add_func    (0XFFFC8378,0XFFFC838C);
	set_func_flags(0XFFFC8378,0x400);
	add_func    (0XFFFC838C,0XFFFC83A4);
	set_func_flags(0XFFFC838C,0x400);
	add_func    (0XFFFC83A4,0XFFFC83B8);
	set_func_flags(0XFFFC83A4,0x400);
	add_func    (0XFFFC83B8,0XFFFC83C4);
	set_func_flags(0XFFFC83B8,0x400);
	add_func    (0XFFFC83C4,0XFFFC83E4);
	set_func_flags(0XFFFC83C4,0x400);
	set_frame_size(0XFFFC83C4, 0X4, 0, 0);
	add_func    (0XFFFC83E4,0XFFFC84E2);
	set_func_flags(0XFFFC83E4,0x400);
	set_frame_size(0XFFFC83E4, 0X20, 0, 0);
	add_func    (0XFFFC84E4,0XFFFC84EE);
	set_func_flags(0XFFFC84E4,0x400);
	add_func    (0XFFFC84F0,0XFFFC84FA);
	set_func_flags(0XFFFC84F0,0x400);
	add_func    (0XFFFC84FC,0XFFFC853E);
	set_func_flags(0XFFFC84FC,0x400);
	set_frame_size(0XFFFC84FC, 0X10, 0, 0);
	add_func    (0XFFFC8540,0XFFFC8542);
	set_func_flags(0XFFFC8540,0x440);
	add_func    (0XFFFC8544,0XFFFC854E);
	set_func_flags(0XFFFC8544,0x400);
	add_func    (0XFFFC8550,0XFFFC855E);
	set_func_flags(0XFFFC8550,0x400);
	add_func    (0XFFFC8560,0XFFFC8570);
	set_func_flags(0XFFFC8560,0x400);
	add_func    (0XFFFC8570,0XFFFC8588);
	set_func_flags(0XFFFC8570,0x400);
	add_func    (0XFFFC8588,0XFFFC85AE);
	set_func_flags(0XFFFC8588,0x400);
	set_frame_size(0XFFFC8588, 0X8, 0, 0);
	add_func    (0XFFFC85B0,0XFFFC8792);
	set_func_flags(0XFFFC85B0,0x400);
	set_frame_size(0XFFFC85B0, 0X28, 0, 0);
	add_func    (0XFFFC8794,0XFFFC87F4);
	set_func_flags(0XFFFC8794,0x400);
	add_func    (0XFFFC87F4,0XFFFC8806);
	set_func_flags(0XFFFC87F4,0x400);
	set_frame_size(0XFFFC87F4, 0X8, 0, 0);
	add_func    (0XFFFC8808,0XFFFC885A);
	set_func_flags(0XFFFC8808,0x400);
	set_frame_size(0XFFFC8808, 0X20, 0, 0);
	add_func    (0XFFFC885C,0XFFFC8BAC);
	set_func_flags(0XFFFC885C,0x400);
	set_frame_size(0XFFFC885C, 0X38, 0, 0);
	add_func    (0XFFFC8BAC,0XFFFC8C04);
	set_func_flags(0XFFFC8BAC,0x400);
	set_frame_size(0XFFFC8BAC, 0X18, 0, 0);
	add_func    (0XFFFC8C04,0XFFFC8C1A);
	set_func_flags(0XFFFC8C04,0x400);
	set_frame_size(0XFFFC8C04, 0X8, 0, 0);
	add_func    (0XFFFC8C1C,0XFFFC8C5A);
	set_func_flags(0XFFFC8C1C,0x400);
	set_frame_size(0XFFFC8C1C, 0X4, 0, 0);
	add_func    (0XFFFC8C5C,0XFFFC8CFC);
	set_func_flags(0XFFFC8C5C,0x400);
	set_frame_size(0XFFFC8C5C, 0X10, 0, 0);
	add_func    (0XFFFC8CFC,0XFFFC9006);
	set_func_flags(0XFFFC8CFC,0x400);
	set_frame_size(0XFFFC8CFC, 0X50, 0, 0);
	add_func    (0XFFFC9008,0XFFFC9234);
	set_func_flags(0XFFFC9008,0x400);
	set_frame_size(0XFFFC9008, 0X30, 0, 0);
	add_func    (0XFFFC9234,0XFFFC924C);
	set_func_flags(0XFFFC9234,0x400);
	set_frame_size(0XFFFC9234, 0X8, 0, 0);
	add_func    (0XFFFC924C,0XFFFC92BE);
	set_func_flags(0XFFFC924C,0x400);
	SetType(0XFFFC924C, "int __cdecl udc_request_queue(struct udc_endpoint_t *ept, struct udc_request *req);");
	set_frame_size(0XFFFC924C, 0X20, 0, 0);
	add_func    (0XFFFC92C0,0XFFFC93B4);
	set_func_flags(0XFFFC92C0,0x400);
	set_frame_size(0XFFFC92C0, 0X30, 0, 0);
	add_func    (0XFFFC93B4,0XFFFC93F4);
	set_func_flags(0XFFFC93B4,0x400);
	set_frame_size(0XFFFC93B4, 0X10, 0, 0);
	add_func    (0XFFFC93F4,0XFFFC93F8);
	set_func_flags(0XFFFC93F4,0x4c0);
	add_func    (0XFFFC93F8,0XFFFC9410);
	set_func_flags(0XFFFC93F8,0x400);
	set_frame_size(0XFFFC93F8, 0X8, 0, 0);
	add_func    (0XFFFC9410,0XFFFC942A);
	set_func_flags(0XFFFC9410,0x400);
	add_func    (0XFFFC942C,0XFFFC942E);
	set_func_flags(0XFFFC942C,0x440);
	add_func    (0XFFFC9430,0XFFFC948E);
	set_func_flags(0XFFFC9430,0x400);
	set_frame_size(0XFFFC9430, 0X8, 0, 0);
	add_func    (0XFFFC9490,0XFFFC951A);
	set_func_flags(0XFFFC9490,0x400);
	set_frame_size(0XFFFC9490, 0X4, 0, 0);
	add_func    (0XFFFC951C,0XFFFC956E);
	set_func_flags(0XFFFC951C,0x400);
	set_frame_size(0XFFFC951C, 0X10, 0, 0);
	add_func    (0XFFFC9570,0XFFFC9598);
	set_func_flags(0XFFFC9570,0x400);
	add_func    (0XFFFC9598,0XFFFC95E6);
	set_func_flags(0XFFFC9598,0x400);
	set_frame_size(0XFFFC9598, 0X8, 0, 0);
	add_func    (0XFFFC95E8,0XFFFC96B6);
	set_func_flags(0XFFFC95E8,0x401);
	set_frame_size(0XFFFC95E8, 0X1B0, 0, 0);
	add_func    (0XFFFC96B8,0XFFFC9908);
	set_func_flags(0XFFFC96B8,0x400);
	set_frame_size(0XFFFC96B8, 0X228, 0, 0);
	add_func    (0XFFFC9908,0XFFFC9A7C);
	set_func_flags(0XFFFC9908,0x400);
	set_frame_size(0XFFFC9908, 0X30, 0, 0);
	define_local_var(0XFFFC9908, 0XFFFC9A7C, "[bp-0X2C]", "out");
	add_func    (0XFFFC9A7C,0XFFFC9A86);
	set_func_flags(0XFFFC9A7C,0x400);
	add_func    (0XFFFC9A88,0XFFFC9BD6);
	set_func_flags(0XFFFC9A88,0x400);
	set_frame_size(0XFFFC9A88, 0X88, 0, 0);
	define_local_var(0XFFFC9A88, 0XFFFC9BD6, "[bp-0X88]", "resp_len");
	define_local_var(0XFFFC9A88, 0XFFFC9BD6, "[bp-0X7E]", "blk_cnt");
	add_func    (0XFFFC9BD8,0XFFFC9CDE);
	set_func_flags(0XFFFC9BD8,0x400);
	SetType(0XFFFC9BD8, "signed int __fastcall rpmb_write_counter_sync(void *, int a2);");
	set_frame_size(0XFFFC9BD8, 0X88, 0, 0);
	define_local_var(0XFFFC9BD8, 0XFFFC9CDE, "[bp-0X88]", "resp_len");
	add_func    (0XFFFC9CE0,0XFFFC9D5E);
	set_func_flags(0XFFFC9CE0,0x400);
	set_frame_size(0XFFFC9CE0, 0X20, 0, 0);
	add_func    (0XFFFC9D60,0XFFFC9FF0);
	set_func_flags(0XFFFC9D60,0x400);
	set_frame_size(0XFFFC9D60, 0XB0, 0, 0);
	define_local_var(0XFFFC9D60, 0XFFFC9FF0, "[bp-0XB0]", "resp_len");
	define_local_var(0XFFFC9D60, 0XFFFC9FF0, "[bp-0XA4]", "dev");
	define_local_var(0XFFFC9D60, 0XFFFC9FF0, "[bp-0X7E]", "blk_cnt");
	add_func    (0XFFFC9FF0,0XFFFCA07A);
	set_func_flags(0XFFFC9FF0,0x400);
	set_frame_size(0XFFFC9FF0, 0X20, 0, 0);
	add_func    (0XFFFCA07C,0XFFFCA1B8);
	set_func_flags(0XFFFCA07C,0x400);
	SetType(0XFFFCA07C, "int __cdecl rpmb_write_emmc(struct mmc_device *dev, uint32_t *req_buf, uint32_t blk_cnt, uint32_t *resp_buf, uint32_t *resp_len);");
	set_frame_size(0XFFFCA07C, 0X110, 0, 0);
	define_local_var(0XFFFCA07C, 0XFFFCA1B8, "[bp-0X108]", "dev");
	define_local_var(0XFFFCA07C, 0XFFFCA1B8, "[bp+0]", "resp_len");
	add_func    (0XFFFCA1B8,0XFFFCA240);
	set_func_flags(0XFFFCA1B8,0x400);
	SetType(0XFFFCA1B8, "int __cdecl rpmb_read_emmc(struct mmc_device *dev, uint32_t *req_buf, uint32_t blk_cnt, uint32_t *resp_buf, uint32_t *resp_len);");
	set_frame_size(0XFFFCA1B8, 0XF0, 0, 0);
	define_local_var(0XFFFCA1B8, 0XFFFCA240, "[bp+0]", "resp_len");
	add_func    (0XFFFCA240,0XFFFCA280);
	set_func_flags(0XFFFCA240,0x400);
	set_frame_size(0XFFFCA240, 0X10, 0, 0);
	add_func    (0XFFFCA280,0XFFFCA402);
	set_func_flags(0XFFFCA280,0x400);
	set_frame_size(0XFFFCA280, 0X20, 0, 0);
	add_func    (0XFFFCA404,0XFFFCA5B2);
	set_func_flags(0XFFFCA404,0x400);
	set_frame_size(0XFFFCA404, 0X48, 0, 0);
	add_func    (0XFFFCA5B4,0XFFFCA63E);
	set_func_flags(0XFFFCA5B4,0x400);
	set_frame_size(0XFFFCA5B4, 0X10, 0, 0);
	add_func    (0XFFFCA640,0XFFFCA65C);
	set_func_flags(0XFFFCA640,0x400);
	set_frame_size(0XFFFCA640, 0X8, 0, 0);
	add_func    (0XFFFCA65C,0XFFFCA6B6);
	set_func_flags(0XFFFCA65C,0x400);
	SetType(0XFFFCA65C, "int __fastcall sub_FFFCA65C(const char *, _DWORD, _DWORD);");
	set_frame_size(0XFFFCA65C, 0X28, 0, 0);
	add_func    (0XFFFCA6B8,0XFFFCA71A);
	set_func_flags(0XFFFCA6B8,0x400);
	set_frame_size(0XFFFCA6B8, 0X28, 0, 0);
	add_func    (0XFFFCA71C,0XFFFCA796);
	set_func_flags(0XFFFCA71C,0x400);
	set_frame_size(0XFFFCA71C, 0X30, 0, 0);
	add_func    (0XFFFCA798,0XFFFCA810);
	set_func_flags(0XFFFCA798,0x400);
	set_frame_size(0XFFFCA798, 0X21, 0, 0);
	add_func    (0XFFFCA810,0XFFFCA8BA);
	set_func_flags(0XFFFCA810,0x400);
	set_frame_size(0XFFFCA810, 0X38, 0, 0);
	add_func    (0XFFFCA8BC,0XFFFCA95C);
	set_func_flags(0XFFFCA8BC,0x400);
	set_frame_size(0XFFFCA8BC, 0X30, 0, 0);
	add_func    (0XFFFCA960,0XFFFCAA4A);
	set_func_flags(0XFFFCA960,0x400);
	set_frame_size(0XFFFCA960, 0X50, 0, 0);
	add_func    (0XFFFCAA50,0XFFFCAA5A);
	set_func_flags(0XFFFCAA50,0x400);
	add_func    (0XFFFCAA5C,0XFFFCAA68);
	set_func_flags(0XFFFCAA5C,0x400);
	add_func    (0XFFFCAA68,0XFFFCAADA);
	set_func_flags(0XFFFCAA68,0x400);
	set_frame_size(0XFFFCAA68, 0X10, 0, 0);
	add_func    (0XFFFCAADC,0XFFFCAB8C);
	set_func_flags(0XFFFCAADC,0x400);
	set_frame_size(0XFFFCAADC, 0X40, 0, 0);
	add_func    (0XFFFCAB8C,0XFFFCABA8);
	set_func_flags(0XFFFCAB8C,0x400);
	add_func    (0XFFFCABA8,0XFFFCABDC);
	set_func_flags(0XFFFCABA8,0x400);
	SetType(0XFFFCABA8, "int __fastcall se_verify_pubkey(void *, _DWORD, void *);");
	set_frame_size(0XFFFCABA8, 0X38, 0, 0);
	add_func    (0XFFFCABDC,0XFFFCAC4C);
	set_func_flags(0XFFFCABDC,0x400);
	set_frame_size(0XFFFCABDC, 0X58, 0, 0);
	define_local_var(0XFFFCABDC, 0XFFFCAC4C, "[bp-0X28]", "in");
	add_func    (0XFFFCAC4C,0XFFFCAC90);
	set_func_flags(0XFFFCAC4C,0x400);
	set_frame_size(0XFFFCAC4C, 0X40, 0, 0);
	add_func    (0XFFFCAC90,0XFFFCACFA);
	set_func_flags(0XFFFCAC90,0x400);
	set_frame_size(0XFFFCAC90, 0X28, 0, 0);
	add_func    (0XFFFCACFC,0XFFFCAD2A);
	set_func_flags(0XFFFCACFC,0x400);
	set_frame_size(0XFFFCACFC, 0X10, 0, 0);
	add_func    (0XFFFCAD2C,0XFFFCAD42);
	set_func_flags(0XFFFCAD2C,0x400);
	add_func    (0XFFFCAD44,0XFFFCADFE);
	set_func_flags(0XFFFCAD44,0x400);
	set_frame_size(0XFFFCAD44, 0X28, 0, 0);
	add_func    (0XFFFCAE00,0XFFFCAE24);
	set_func_flags(0XFFFCAE00,0x400);
	set_frame_size(0XFFFCAE00, 0X8, 0, 0);
	add_func    (0XFFFCAE24,0XFFFCAECE);
	set_func_flags(0XFFFCAE24,0x400);
	set_frame_size(0XFFFCAE24, 0X30, 0, 0);
	add_func    (0XFFFCAED0,0XFFFCB00E);
	set_func_flags(0XFFFCAED0,0x400);
	set_frame_size(0XFFFCAED0, 0X68, 0, 0);
	add_func    (0XFFFCB010,0XFFFCB0CA);
	set_func_flags(0XFFFCB010,0x400);
	SetType(0XFFFCB010, "int __fastcall sub_FFFCB010(void *a1, int a2, unsigned int a3);");
	set_frame_size(0XFFFCB010, 0X40, 0, 0);
	add_func    (0XFFFCB0CC,0XFFFCB0D8);
	set_func_flags(0XFFFCB0CC,0x400);
	add_func    (0XFFFCB0D8,0XFFFCB18E);
	set_func_flags(0XFFFCB0D8,0x400);
	set_frame_size(0XFFFCB0D8, 0X38, 0, 0);
	add_func    (0XFFFCB190,0XFFFCB198);
	set_func_flags(0XFFFCB190,0x400);
	add_func    (0XFFFCB198,0XFFFCB1BC);
	set_func_flags(0XFFFCB198,0x400);
	add_func    (0XFFFCB1C0,0XFFFCB3A8);
	set_func_flags(0XFFFCB1C0,0x400);
	set_frame_size(0XFFFCB1C0, 0X18, 0, 0);
	add_func    (0XFFFCB3C0,0XFFFCB3EA);
	set_func_flags(0XFFFCB3C0,0x400);
	set_frame_size(0XFFFCB3C0, 0X8, 0, 0);
	add_func    (0XFFFCB3EC,0XFFFCB432);
	set_func_flags(0XFFFCB3EC,0x400);
	SetType(0XFFFCB3EC, "int __fastcall event_wait(void *, _DWORD);");
	set_frame_size(0XFFFCB3EC, 0X10, 0, 0);
	add_func    (0XFFFCB434,0XFFFCB486);
	set_func_flags(0XFFFCB434,0x400);
	SetType(0XFFFCB434, "int __fastcall sub_FFFCB434(void *, _DWORD);");
	set_frame_size(0XFFFCB434, 0X18, 0, 0);
	add_func    (0XFFFCB488,0XFFFCB49A);
	set_func_flags(0XFFFCB488,0x400);
	set_frame_size(0XFFFCB488, 0X8, 0, 0);
	add_func    (0XFFFCB49C,0XFFFCB4C2);
	set_func_flags(0XFFFCB49C,0x400);
	add_func    (0XFFFCB4C4,0XFFFCB51C);
	set_func_flags(0XFFFCB4C4,0x400);
	SetType(0XFFFCB4C4, "int32_t __cdecl mutex_acquire(struct mutex_t *m);");
	set_frame_size(0XFFFCB4C4, 0X10, 0, 0);
	add_func    (0XFFFCB51C,0XFFFCB55E);
	set_func_flags(0XFFFCB51C,0x400);
	set_frame_size(0XFFFCB51C, 0X10, 0, 0);
	add_func    (0XFFFCB580,0XFFFCB5AA);
	set_func_flags(0XFFFCB580,0x400);
	set_frame_size(0XFFFCB580, 0X10, 0, 0);
	add_func    (0XFFFCB5AC,0XFFFCB69C);
	set_func_flags(0XFFFCB5AC,0x400);
	set_frame_size(0XFFFCB5AC, 0X20, 0, 0);
	add_func    (0XFFFCB69C,0XFFFCB70C);
	set_func_flags(0XFFFCB69C,0x400);
	set_frame_size(0XFFFCB69C, 0X18, 0, 0);
	add_func    (0XFFFCB70C,0XFFFCB808);
	set_func_flags(0XFFFCB70C,0x400);
	set_frame_size(0XFFFCB70C, 0X20, 0, 0);
	add_func    (0XFFFCB808,0XFFFCB828);
	set_func_flags(0XFFFCB808,0x400);
	SetType(0XFFFCB808, "_DWORD *__fastcall thread_create(unsigned __int8 *a1, void *a2, int a3, int a4, int a5);");
	set_frame_size(0XFFFCB808, 0X20, 0, 0);
	define_local_var(0XFFFCB808, 0XFFFCB828, "[bp+0]", "a5");
	add_func    (0XFFFCB828,0XFFFCB8A2);
	set_func_flags(0XFFFCB828,0x400);
	set_frame_size(0XFFFCB828, 0X18, 0, 0);
	add_func    (0XFFFCB8A4,0XFFFCB924);
	set_func_flags(0XFFFCB8A4,0x400);
	set_frame_size(0XFFFCB8A4, 0X20, 0, 0);
	add_func    (0XFFFCB924,0XFFFCB9D2);
	set_func_flags(0XFFFCB924,0x400);
	set_frame_size(0XFFFCB924, 0X18, 0, 0);
	add_func    (0XFFFCB9D4,0XFFFCBA4C);
	set_func_flags(0XFFFCB9D4,0x400);
	set_frame_size(0XFFFCB9D4, 0X30, 0, 0);
	add_func    (0XFFFCBA4C,0XFFFCBAC8);
	set_func_flags(0XFFFCBA4C,0x400);
	set_frame_size(0XFFFCBA4C, 0X10, 0, 0);
	add_func    (0XFFFCBAC8,0XFFFCBAD4);
	set_func_flags(0XFFFCBAC8,0x400);
	add_func    (0XFFFCBAD4,0XFFFCBB08);
	set_func_flags(0XFFFCBAD4,0x401);
	set_frame_size(0XFFFCBAD4, 0X8, 0, 0);
	add_func    (0XFFFCBB08,0XFFFCBB74);
	set_func_flags(0XFFFCBB08,0x400);
	set_frame_size(0XFFFCBB08, 0X38, 0, 0);
	add_func    (0XFFFCBB74,0XFFFCBC20);
	set_func_flags(0XFFFCBB74,0x400);
	set_frame_size(0XFFFCBB74, 0X18, 0, 0);
	add_func    (0XFFFCBC20,0XFFFCBCF8);
	set_func_flags(0XFFFCBC20,0x400);
	set_frame_size(0XFFFCBC20, 0X18, 0, 0);
	add_func    (0XFFFCBCF8,0XFFFCBE12);
	set_func_flags(0XFFFCBCF8,0x400);
	set_frame_size(0XFFFCBCF8, 0X38, 0, 0);
	add_func    (0XFFFCBE14,0XFFFCBE74);
	set_func_flags(0XFFFCBE14,0x400);
	set_frame_size(0XFFFCBE14, 0X10, 0, 0);
	add_func    (0XFFFCBE74,0XFFFCBEF4);
	set_func_flags(0XFFFCBE74,0x401);
	set_frame_size(0XFFFCBE74, 0X8, 0, 0);
	add_func    (0XFFFCBEF4,0XFFFCBF7C);
	set_func_flags(0XFFFCBEF4,0x400);
	set_frame_size(0XFFFCBEF4, 0X20, 0, 0);
	add_func    (0XFFFCBF7C,0XFFFCBF9E);
	set_func_flags(0XFFFCBF7C,0x400);
	set_frame_size(0XFFFCBF7C, 0X8, 0, 0);
	add_func    (0XFFFCBFA0,0XFFFCBFF4);
	set_func_flags(0XFFFCBFA0,0x400);
	set_frame_size(0XFFFCBFA0, 0X8, 0, 0);
	add_func    (0XFFFCBFF4,0XFFFCC0AE);
	set_func_flags(0XFFFCBFF4,0x400);
	set_frame_size(0XFFFCBFF4, 0X28, 0, 0);
	add_func    (0XFFFCC0B0,0XFFFCC140);
	set_func_flags(0XFFFCC0B0,0x400);
	set_frame_size(0XFFFCC0B0, 0X20, 0, 0);
	add_func    (0XFFFCC140,0XFFFCC15A);
	set_func_flags(0XFFFCC140,0x400);
	add_func    (0XFFFCC15C,0XFFFCC176);
	set_func_flags(0XFFFCC15C,0x400);
	SetType(0XFFFCC15C, "int __fastcall sub_FFFCC15C(void *, _DWORD, void *, _DWORD);");
	set_frame_size(0XFFFCC15C, 0X10, 0, 0);
	add_func    (0XFFFCC178,0XFFFCC192);
	set_func_flags(0XFFFCC178,0x400);
	set_frame_size(0XFFFCC178, 0X10, 0, 0);
	add_func    (0XFFFCC194,0XFFFCC22C);
	set_func_flags(0XFFFCC194,0x400);
	set_frame_size(0XFFFCC194, 0X18, 0, 0);
	add_func    (0XFFFCC22C,0XFFFCC246);
	set_func_flags(0XFFFCC22C,0x400);
	add_func    (0XFFFCC248,0XFFFCC256);
	set_func_flags(0XFFFCC248,0x400);
	add_func    (0XFFFCC258,0XFFFCC27A);
	set_func_flags(0XFFFCC258,0x400);
	set_frame_size(0XFFFCC258, 0X18, 0, 0);
	add_func    (0XFFFCC27C,0XFFFCC292);
	set_func_flags(0XFFFCC27C,0x400);
	set_frame_size(0XFFFCC27C, 0X10, 0, 0);
	add_func    (0XFFFCC294,0XFFFCC398);
	set_func_flags(0XFFFCC294,0x400);
	set_frame_size(0XFFFCC294, 0X20, 0, 0);
	add_func    (0XFFFCC398,0XFFFCC3CA);
	set_func_flags(0XFFFCC398,0x400);
	set_frame_size(0XFFFCC398, 0XC, 0, 0);
	add_func    (0XFFFCC3CC,0XFFFCC3E2);
	set_func_flags(0XFFFCC3CC,0x400);
	add_func    (0XFFFCC3E4,0XFFFCC502);
	set_func_flags(0XFFFCC3E4,0x400);
	SetType(0XFFFCC3E4, "int __cdecl dt_init(struct devicetree_t *dt, void *data, uint32_t len);");
	set_frame_size(0XFFFCC3E4, 0X18, 0, 0);
	add_func    (0XFFFCC504,0XFFFCC682);
	set_func_flags(0XFFFCC504,0x400);
	SetType(0XFFFCC504, "int __cdecl dt_walk(struct devicetree_t *dtree, void *ncb, void *pcb, void *cookie);");
	set_frame_size(0XFFFCC504, 0X38, 0, 0);
	add_func    (0XFFFCC684,0XFFFCC6FA);
	set_func_flags(0XFFFCC684,0x400);
	set_frame_size(0XFFFCC684, 0X8, 0, 0);
	add_func    (0XFFFCC6FC,0XFFFCC706);
	set_func_flags(0XFFFCC6FC,0x400);
	set_frame_size(0XFFFCC6FC, 0X8, 0, 0);
	add_func    (0XFFFCC708,0XFFFCC70A);
	set_func_flags(0XFFFCC708,0x440);
	add_func    (0XFFFCC70C,0XFFFCC76A);
	set_func_flags(0XFFFCC70C,0x400);
	set_frame_size(0XFFFCC70C, 0X10, 0, 0);
	add_func    (0XFFFCC76C,0XFFFCC90C);
	set_func_flags(0XFFFCC76C,0x400);
	set_frame_size(0XFFFCC76C, 0X20, 0, 0);
	add_func    (0XFFFCC90C,0XFFFCC9D8);
	set_func_flags(0XFFFCC90C,0x400);
	set_frame_size(0XFFFCC90C, 0X18, 0, 0);
	add_func    (0XFFFCC9D8,0XFFFCCA0C);
	set_func_flags(0XFFFCC9D8,0x400);
	add_func    (0XFFFCCA0C,0XFFFCCA68);
	set_func_flags(0XFFFCCA0C,0x400);
	set_frame_size(0XFFFCCA0C, 0X20, 0, 0);
	add_func    (0XFFFCCA68,0XFFFCCB72);
	set_func_flags(0XFFFCCA68,0x400);
	set_frame_size(0XFFFCCA68, 0X20, 0, 0);
	add_func    (0XFFFCCB74,0XFFFCCB76);
	set_func_flags(0XFFFCCB74,0x440);
	add_func    (0XFFFCCB78,0XFFFCCB7A);
	set_func_flags(0XFFFCCB78,0x440);
	add_func    (0XFFFCCB7C,0XFFFCCC20);
	set_func_flags(0XFFFCCB7C,0x400);
	set_frame_size(0XFFFCCB7C, 0X20, 0, 0);
	add_func    (0XFFFCCC20,0XFFFCCC44);
	set_func_flags(0XFFFCCC20,0x400);
	SetType(0XFFFCCC20, "_DWORD *__fastcall sub_FFFCCC20(const char *a1);");
	set_frame_size(0XFFFCCC20, 0X10, 0, 0);
	add_func    (0XFFFCCC44,0XFFFCCC62);
	set_func_flags(0XFFFCCC44,0x400);
	add_func    (0XFFFCCC64,0XFFFCCC9A);
	set_func_flags(0XFFFCCC64,0x400);
	set_frame_size(0XFFFCCC64, 0X18, 0, 0);
	add_func    (0XFFFCCC9C,0XFFFCCCB8);
	set_func_flags(0XFFFCCC9C,0x400);
	set_frame_size(0XFFFCCC9C, 0X18, 0, 0);
	add_func    (0XFFFCCCB8,0XFFFCCCDE);
	set_func_flags(0XFFFCCCB8,0x400);
	set_frame_size(0XFFFCCCB8, 0X18, 0, 0);
	add_func    (0XFFFCCCE0,0XFFFCCD66);
	set_func_flags(0XFFFCCCE0,0x400);
	set_frame_size(0XFFFCCCE0, 0X18, 0, 0);
	add_func    (0XFFFCCD68,0XFFFCCDAC);
	set_func_flags(0XFFFCCD68,0x400);
	set_frame_size(0XFFFCCD68, 0X20, 0, 0);
	add_func    (0XFFFCCDAC,0XFFFCCE02);
	set_func_flags(0XFFFCCDAC,0x400);
	set_frame_size(0XFFFCCDAC, 0X10, 0, 0);
	add_func    (0XFFFCCE04,0XFFFCCEAA);
	set_func_flags(0XFFFCCE04,0x400);
	set_frame_size(0XFFFCCE04, 0X18, 0, 0);
	add_func    (0XFFFCCEAC,0XFFFCD002);
	set_func_flags(0XFFFCCEAC,0x400);
	set_frame_size(0XFFFCCEAC, 0X20, 0, 0);
	add_func    (0XFFFCD004,0XFFFCD0E2);
	set_func_flags(0XFFFCD004,0x400);
	set_frame_size(0XFFFCD004, 0X20, 0, 0);
	add_func    (0XFFFCD0E4,0XFFFCD10E);
	set_func_flags(0XFFFCD0E4,0x400);
	set_frame_size(0XFFFCD0E4, 0X10, 0, 0);
	add_func    (0XFFFCD110,0XFFFCD13A);
	set_func_flags(0XFFFCD110,0x400);
	set_frame_size(0XFFFCD110, 0X10, 0, 0);
	add_func    (0XFFFCD13C,0XFFFCD1C6);
	set_func_flags(0XFFFCD13C,0x400);
	set_frame_size(0XFFFCD13C, 0X28, 0, 0);
	add_func    (0XFFFCD1C8,0XFFFCD224);
	set_func_flags(0XFFFCD1C8,0x400);
	set_frame_size(0XFFFCD1C8, 0X10, 0, 0);
	add_func    (0XFFFCD224,0XFFFCD280);
	set_func_flags(0XFFFCD224,0x400);
	set_frame_size(0XFFFCD224, 0X10, 0, 0);
	add_func    (0XFFFCD280,0XFFFCD298);
	set_func_flags(0XFFFCD280,0x400);
	add_func    (0XFFFCD298,0XFFFCD2DA);
	set_func_flags(0XFFFCD298,0x400);
	set_frame_size(0XFFFCD298, 0X10, 0, 0);
	add_func    (0XFFFCD384,0XFFFCD3AC);
	set_func_flags(0XFFFCD384,0x400);
	set_frame_size(0XFFFCD384, 0X8, 0, 0);
	add_func    (0XFFFCD3AC,0XFFFCD462);
	set_func_flags(0XFFFCD3AC,0x400);
	set_frame_size(0XFFFCD3AC, 0X10, 0, 0);
	add_func    (0XFFFCD464,0XFFFCD51A);
	set_func_flags(0XFFFCD464,0x400);
	set_frame_size(0XFFFCD464, 0X20, 0, 0);
	add_func    (0XFFFCD51C,0XFFFCD52A);
	set_func_flags(0XFFFCD51C,0x400);
	add_func    (0XFFFCD52C,0XFFFCD570);
	set_func_flags(0XFFFCD52C,0x400);
	set_frame_size(0XFFFCD52C, 0X10, 0, 0);
	add_func    (0XFFFCD570,0XFFFCD582);
	set_func_flags(0XFFFCD570,0x400);
	add_func    (0XFFFCD584,0XFFFCD62C);
	set_func_flags(0XFFFCD584,0x400);
	set_frame_size(0XFFFCD584, 0X10, 0, 0);
	add_func    (0XFFFCD62C,0XFFFCD6C0);
	set_func_flags(0XFFFCD62C,0x400);
	set_frame_size(0XFFFCD62C, 0X18, 0, 0);
	add_func    (0XFFFCD6C0,0XFFFCD7FC);
	set_func_flags(0XFFFCD6C0,0x400);
	set_frame_size(0XFFFCD6C0, 0X28, 0, 0);
	add_func    (0XFFFCD7FC,0XFFFCD8BC);
	set_func_flags(0XFFFCD7FC,0x400);
	SetType(0XFFFCD7FC, "int __fastcall bp_write_cfg(const char *, _DWORD, void *);");
	set_frame_size(0XFFFCD7FC, 0X28, 0, 0);
	add_func    (0XFFFCD8BC,0XFFFCD98A);
	set_func_flags(0XFFFCD8BC,0x400);
	set_frame_size(0XFFFCD8BC, 0X28, 0, 0);
	add_func    (0XFFFCD98C,0XFFFCDA2A);
	set_func_flags(0XFFFCD98C,0x400);
	set_frame_size(0XFFFCD98C, 0X20, 0, 0);
	define_local_var(0XFFFCD98C, 0XFFFCDA2A, "[bp-0X14]", "out");
	add_func    (0XFFFCDA2C,0XFFFCDAEE);
	set_func_flags(0XFFFCDA2C,0x400);
	set_frame_size(0XFFFCDA2C, 0X28, 0, 0);
	add_func    (0XFFFCDAF0,0XFFFCDB6A);
	set_func_flags(0XFFFCDAF0,0x400);
	set_frame_size(0XFFFCDAF0, 0X28, 0, 0);
	add_func    (0XFFFCDB6C,0XFFFCDBD0);
	set_func_flags(0XFFFCDB6C,0x400);
	set_frame_size(0XFFFCDB6C, 0X30, 0, 0);
	add_func    (0XFFFCDBD0,0XFFFCDC14);
	set_func_flags(0XFFFCDBD0,0x400);
	set_frame_size(0XFFFCDBD0, 0X1A8, 0, 0);
	add_func    (0XFFFCDC14,0XFFFCDD06);
	set_func_flags(0XFFFCDC14,0x400);
	set_frame_size(0XFFFCDC14, 0X270, 0, 0);
	add_func    (0XFFFCDD08,0XFFFCDD7E);
	set_func_flags(0XFFFCDD08,0x400);
	set_frame_size(0XFFFCDD08, 0XA8, 0, 0);
	add_func    (0XFFFCDD80,0XFFFCDE30);
	set_func_flags(0XFFFCDD80,0x400);
	set_frame_size(0XFFFCDD80, 0X38, 0, 0);
	add_func    (0XFFFCDE30,0XFFFCDEFE);
	set_func_flags(0XFFFCDE30,0x410);
	set_frame_size(0XFFFCDE30, 0X8C, 28, 0);
	add_func    (0XFFFCDF00,0XFFFCDF90);
	set_func_flags(0XFFFCDF00,0x400);
	set_frame_size(0XFFFCDF00, 0X258, 0, 0);
	define_local_var(0XFFFCDF00, 0XFFFCDF90, "[bp-0X12C]", "out");
	add_func    (0XFFFCDF90,0XFFFCE02A);
	set_func_flags(0XFFFCDF90,0x400);
	set_frame_size(0XFFFCDF90, 0X220, 0, 0);
	add_func    (0XFFFCE02C,0XFFFCE25E);
	set_func_flags(0XFFFCE02C,0x400);
	SetType(0XFFFCE02C, "int __fastcall image_verify_payload(uint8_t *dt_ptr, int a2, int a3);");
	set_frame_size(0XFFFCE02C, 0X420, 0, 0);
	define_local_var(0XFFFCE02C, 0XFFFCE25E, "[bp-0X228]", "out");
	add_func    (0XFFFCE260,0XFFFCE442);
	set_func_flags(0XFFFCE260,0x400);
	SetType(0XFFFCE260, "int __cdecl image_verify(uint8_t *dt_ptr, unsigned int img_size, int expect_type, char *expect_name, int flags, uint32_t *a6, uint8_t *a7);");
	set_frame_size(0XFFFCE260, 0X58, 0, 0);
	define_local_var(0XFFFCE260, 0XFFFCE442, "[bp+0]", "flags");
	define_local_var(0XFFFCE260, 0XFFFCE442, "[bp+0X4]", "a6");
	define_local_var(0XFFFCE260, 0XFFFCE442, "[bp+0X8]", "a7");
	add_func    (0XFFFCE444,0XFFFCE490);
	set_func_flags(0XFFFCE444,0x400);
	add_func    (0XFFFCE490,0XFFFCE4A0);
	set_func_flags(0XFFFCE490,0x400);
	add_func    (0XFFFCE4A0,0XFFFCE576);
	set_func_flags(0XFFFCE4A0,0x400);
	SetType(0XFFFCE4A0, "int __cdecl keymgr_add_key(uint8_t *key_head, uint8_t *key);");
	set_frame_size(0XFFFCE4A0, 0X18, 0, 0);
	add_func    (0XFFFCE578,0XFFFCE594);
	set_func_flags(0XFFFCE578,0x400);
	set_frame_size(0XFFFCE578, 0X8, 0, 0);
	add_func    (0XFFFCE594,0XFFFCE618);
	set_func_flags(0XFFFCE594,0x400);
	SetType(0XFFFCE594, "int __cdecl keymgr_inject_key(uint32_t fourcc, void *key, int key_len);");
	set_frame_size(0XFFFCE594, 0X28, 0, 0);
	add_func    (0XFFFCE618,0XFFFCE642);
	set_func_flags(0XFFFCE618,0x400);
	SetType(0XFFFCE618, "int __cdecl keymgr_inject_lc_keys(void *rrak, int rrak_len, void *tbie, int tbie_len);");
	set_frame_size(0XFFFCE618, 0X10, 0, 0);
	add_func    (0XFFFCE644,0XFFFCE66E);
	set_func_flags(0XFFFCE644,0x400);
	SetType(0XFFFCE644, "int __cdecl keymgr_inject_uc_keys(void *rrak, int rrak_len, void *tbie, int tbie_len);");
	set_frame_size(0XFFFCE644, 0X10, 0, 0);
	add_func    (0XFFFCE670,0XFFFCE6A2);
	set_func_flags(0XFFFCE670,0x400);
	set_frame_size(0XFFFCE670, 0XC, 0, 0);
	add_func    (0XFFFCE6A4,0XFFFCE6CE);
	set_func_flags(0XFFFCE6A4,0x400);
	set_frame_size(0XFFFCE6A4, 0XC, 0, 0);
	add_func    (0XFFFCE6D0,0XFFFCE6EA);
	set_func_flags(0XFFFCE6D0,0x400);
	add_func    (0XFFFCE6EC,0XFFFCE72C);
	set_func_flags(0XFFFCE6EC,0x400);
	set_frame_size(0XFFFCE6EC, 0X18, 0, 0);
	add_func    (0XFFFCE72C,0XFFFCE800);
	set_func_flags(0XFFFCE72C,0x400);
	set_frame_size(0XFFFCE72C, 0X38, 0, 0);
	add_func    (0XFFFCE800,0XFFFCE91C);
	set_func_flags(0XFFFCE800,0x400);
	set_frame_size(0XFFFCE800, 0X30, 0, 0);
	add_func    (0XFFFCE91C,0XFFFCE95E);
	set_func_flags(0XFFFCE91C,0x400);
	set_frame_size(0XFFFCE91C, 0X8, 0, 0);
	add_func    (0XFFFCE960,0XFFFCEFB8);
	set_func_flags(0XFFFCE960,0x400);
	SetType(0XFFFCE960, "unsigned int __cdecl partition_read_table();");
	set_frame_size(0XFFFCE960, 0X190, 0, 0);
	define_local_var(0XFFFCE960, 0XFFFCEFB8, "[bp-0XC0]", "data");
	define_local_var(0XFFFCE960, 0XFFFCEFB8, "[bp-0X84]", "header_size");
	define_local_var(0XFFFCE960, 0XFFFCEFB8, "[bp-0X80]", "max_partition_count");
	define_local_var(0XFFFCE960, 0XFFFCEFB8, "[bp-0X7C]", "partition_entry_size");
	define_local_var(0XFFFCE960, 0XFFFCEFB8, "[bp-0X78]", "first_usable_lba");
	add_func    (0XFFFCEFB8,0XFFFCEFF6);
	set_func_flags(0XFFFCEFB8,0x404);
	SetType(0XFFFCEFB8, "void __cdecl mmc_read_partition_table(uint8_t arg);");
	set_frame_size(0XFFFCEFB8, 0X10, 0, 0);
	add_func    (0XFFFCEFF8,0XFFFCF5FE);
	set_func_flags(0XFFFCEFF8,0x400);
	SetType(0XFFFCEFF8, "unsigned int __cdecl write_partition(unsigned int size, unsigned __int8 *partition);");
	set_frame_size(0XFFFCEFF8, 0XB0, 0, 0);
	add_func    (0XFFFCF600,0XFFFCF65A);
	set_func_flags(0XFFFCF600,0x400);
	SetType(0XFFFCF600, "signed int __fastcall sub_FFFCF600(const unsigned __int8 *a1);");
	set_frame_size(0XFFFCF600, 0X18, 0, 0);
	add_func    (0XFFFCF65C,0XFFFCF69A);
	set_func_flags(0XFFFCF65C,0x400);
	set_frame_size(0XFFFCF65C, 0X8, 0, 0);
	add_func    (0XFFFCF69C,0XFFFCF6DA);
	set_func_flags(0XFFFCF69C,0x400);
	set_frame_size(0XFFFCF69C, 0X8, 0, 0);
	add_func    (0XFFFCF6DC,0XFFFCF732);
	set_func_flags(0XFFFCF6DC,0x400);
	set_frame_size(0XFFFCF6DC, 0X18, 0, 0);
	add_func    (0XFFFCF734,0XFFFCF754);
	set_func_flags(0XFFFCF734,0x400);
	set_frame_size(0XFFFCF734, 0X10, 0, 0);
	add_func    (0XFFFCF754,0XFFFCF766);
	set_func_flags(0XFFFCF754,0x400);
	add_func    (0XFFFCF768,0XFFFCF862);
	set_func_flags(0XFFFCF768,0x400);
	set_frame_size(0XFFFCF768, 0X20, 0, 0);
	add_func    (0XFFFCF864,0XFFFCFA5C);
	set_func_flags(0XFFFCF864,0x400);
	set_frame_size(0XFFFCF864, 0X88, 0, 0);
	add_func    (0XFFFCFA5C,0XFFFCFAC2);
	set_func_flags(0XFFFCFA5C,0x400);
	set_frame_size(0XFFFCFA5C, 0X18, 0, 0);
	add_func    (0XFFFCFAC4,0XFFFCFAF4);
	set_func_flags(0XFFFCFAC4,0x400);
	add_func    (0XFFFCFAF4,0XFFFCFB48);
	set_func_flags(0XFFFCFAF4,0x400);
	set_frame_size(0XFFFCFAF4, 0X10, 0, 0);
	add_func    (0XFFFCFB48,0XFFFCFBC6);
	set_func_flags(0XFFFCFB48,0x400);
	set_frame_size(0XFFFCFB48, 0X18, 0, 0);
	add_func    (0XFFFCFBC8,0XFFFCFC5E);
	set_func_flags(0XFFFCFBC8,0x400);
	set_frame_size(0XFFFCFBC8, 0X18, 0, 0);
	add_func    (0XFFFCFC60,0XFFFCFC8C);
	set_func_flags(0XFFFCFC60,0x400);
	set_frame_size(0XFFFCFC60, 0X10, 0, 0);
	add_func    (0XFFFCFC8C,0XFFFCFC9C);
	set_func_flags(0XFFFCFC8C,0x400);
	add_func    (0XFFFCFC9C,0XFFFCFCD6);
	set_func_flags(0XFFFCFC9C,0x400);
	add_func    (0XFFFCFCD8,0XFFFCFD10);
	set_func_flags(0XFFFCFCD8,0x400);
	add_func    (0XFFFCFD10,0XFFFCFD56);
	set_func_flags(0XFFFCFD10,0x400);
	set_frame_size(0XFFFCFD10, 0X10, 0, 0);
	add_func    (0XFFFCFD58,0XFFFCFD94);
	set_func_flags(0XFFFCFD58,0x400);
	add_func    (0XFFFCFD94,0XFFFCFDEC);
	set_func_flags(0XFFFCFD94,0x400);
	SetType(0XFFFCFD94, "int __fastcall alloc_handle(void *, void *, void *);");
	set_frame_size(0XFFFCFD94, 0X10, 0, 0);
	add_func    (0XFFFCFDEC,0XFFFCFEB4);
	set_func_flags(0XFFFCFDEC,0x400);
	set_frame_size(0XFFFCFDEC, 0X428, 0, 0);
	add_func    (0XFFFCFEB4,0XFFFCFF6C);
	set_func_flags(0XFFFCFEB4,0x400);
	SetType(0XFFFCFEB4, "int __fastcall sub_FFFCFEB4(void *, _DWORD, void *, _DWORD, _DWORD);");
	set_frame_size(0XFFFCFEB4, 0X428, 0, 0);
	add_func    (0XFFFCFF6C,0XFFFD002E);
	set_func_flags(0XFFFCFF6C,0x400);
	set_frame_size(0XFFFCFF6C, 0X428, 0, 0);
	add_func    (0XFFFD0030,0XFFFD00EC);
	set_func_flags(0XFFFD0030,0x400);
	set_frame_size(0XFFFD0030, 0X428, 0, 0);
	add_func    (0XFFFD00EC,0XFFFD0116);
	set_func_flags(0XFFFD00EC,0x400);
	set_frame_size(0XFFFD00EC, 0X10, 0, 0);
	add_func    (0XFFFD0118,0XFFFD0148);
	set_func_flags(0XFFFD0118,0x400);
	set_frame_size(0XFFFD0118, 0X10, 0, 0);
	add_func    (0XFFFD0148,0XFFFD0168);
	set_func_flags(0XFFFD0148,0x400);
	add_func    (0XFFFD0168,0XFFFD01E0);
	set_func_flags(0XFFFD0168,0x400);
	set_frame_size(0XFFFD0168, 0X20, 0, 0);
	define_local_var(0XFFFD0168, 0XFFFD01E0, "[bp-0X20]", "out");
	add_func    (0XFFFD01E0,0XFFFD0226);
	set_func_flags(0XFFFD01E0,0x400);
	set_frame_size(0XFFFD01E0, 0X20, 0, 0);
	add_func    (0XFFFD0228,0XFFFD04E4);
	set_func_flags(0XFFFD0228,0x400);
	set_frame_size(0XFFFD0228, 0X68, 0, 0);
	add_func    (0XFFFD04E4,0XFFFD04E6);
	set_func_flags(0XFFFD04E4,0x440);
	add_func    (0XFFFD04E8,0XFFFD04EE);
	set_func_flags(0XFFFD04E8,0x400);
	add_func    (0XFFFD04F0,0XFFFD04F4);
	set_func_flags(0XFFFD04F0,0x400);
	add_func    (0XFFFD04F4,0XFFFD061C);
	set_func_flags(0XFFFD04F4,0x400);
	set_frame_size(0XFFFD04F4, 0X4, 0, 0);
	add_func    (0XFFFD061C,0XFFFD0638);
	set_func_flags(0XFFFD061C,0x400);
	add_func    (0XFFFD0638,0XFFFD0654);
	set_func_flags(0XFFFD0638,0x400);
	add_func    (0XFFFD0654,0XFFFD06BA);
	set_func_flags(0XFFFD0654,0x400);
	set_frame_size(0XFFFD0654, 0X8, 0, 0);
	add_func    (0XFFFD06BC,0XFFFD0734);
	set_func_flags(0XFFFD06BC,0x400);
	set_frame_size(0XFFFD06BC, 0XC, 0, 0);
	add_func    (0XFFFD0734,0XFFFD0822);
	set_func_flags(0XFFFD0734,0x400);
	set_frame_size(0XFFFD0734, 0X10, 0, 0);
	add_func    (0XFFFD0824,0XFFFD08C4);
	set_func_flags(0XFFFD0824,0x400);
	set_frame_size(0XFFFD0824, 0X1C, 0, 0);
	add_func    (0XFFFD08C4,0XFFFD0922);
	set_func_flags(0XFFFD08C4,0x400);
	set_frame_size(0XFFFD08C4, 0X10, 0, 0);
	add_func    (0XFFFD0924,0XFFFD0966);
	set_func_flags(0XFFFD0924,0x400);
	set_frame_size(0XFFFD0924, 0X4, 0, 0);
	add_func    (0XFFFD0968,0XFFFD0C1C);
	set_func_flags(0XFFFD0968,0x400);
	set_frame_size(0XFFFD0968, 0X40, 0, 0);
	add_func    (0XFFFD0C1C,0XFFFD127C);
	set_func_flags(0XFFFD0C1C,0x400);
	set_frame_size(0XFFFD0C1C, 0X48, 0, 0);
	add_func    (0XFFFD127C,0XFFFD129C);
	set_func_flags(0XFFFD127C,0x400);
	set_frame_size(0XFFFD127C, 0X8, 0, 0);
	add_func    (0XFFFD129C,0XFFFD14BA);
	set_func_flags(0XFFFD129C,0x400);
	set_frame_size(0XFFFD129C, 0X40, 0, 0);
	add_func    (0XFFFD14BC,0XFFFD1686);
	set_func_flags(0XFFFD14BC,0x400);
	set_frame_size(0XFFFD14BC, 0X30, 0, 0);
	add_func    (0XFFFD1690,0XFFFD1C20);
	set_func_flags(0XFFFD1690,0x400);
	set_frame_size(0XFFFD1690, 0X68, 0, 0);
	add_func    (0XFFFD1C20,0XFFFD2712);
	set_func_flags(0XFFFD1C20,0x400);
	set_frame_size(0XFFFD1C20, 0XA0, 0, 0);
	add_func    (0XFFFD2714,0XFFFD27FE);
	set_func_flags(0XFFFD2714,0x400);
	set_frame_size(0XFFFD2714, 0X18, 0, 0);
	add_func    (0XFFFD2800,0XFFFD28FC);
	set_func_flags(0XFFFD2800,0x400);
	set_frame_size(0XFFFD2800, 0X18, 0, 0);
	add_func    (0XFFFD28FC,0XFFFD2D70);
	set_func_flags(0XFFFD28FC,0x400);
	set_frame_size(0XFFFD28FC, 0X30, 0, 0);
	add_func    (0XFFFD2D70,0XFFFD31AC);
	set_func_flags(0XFFFD2D70,0x400);
	set_frame_size(0XFFFD2D70, 0X30, 0, 0);
	add_func    (0XFFFD31AC,0XFFFD3E2C);
	set_func_flags(0XFFFD31AC,0x400);
	set_frame_size(0XFFFD31AC, 0X68, 0, 0);
	add_func    (0XFFFD3EEC,0XFFFD3EF6);
	set_func_flags(0XFFFD3EEC,0x400);
	set_frame_size(0XFFFD3EEC, 0X18, 0, 0);
	add_func    (0XFFFD3EF8,0XFFFD3F02);
	set_func_flags(0XFFFD3EF8,0x400);
	set_frame_size(0XFFFD3EF8, 0X18, 0, 0);
	add_func    (0XFFFD3F04,0XFFFD3F08);
	set_func_flags(0XFFFD3F04,0x400);
	add_func    (0XFFFD3F08,0XFFFD3F22);
	set_func_flags(0XFFFD3F08,0x400);
	add_func    (0XFFFD3F24,0XFFFD3FDE);
	set_func_flags(0XFFFD3F24,0x400);
	set_frame_size(0XFFFD3F24, 0X14, 0, 0);
	add_func    (0XFFFD3FE0,0XFFFD4010);
	set_func_flags(0XFFFD3FE0,0x400);
	set_frame_size(0XFFFD3FE0, 0X10, 0, 0);
	add_func    (0XFFFD4010,0XFFFD40C8);
	set_func_flags(0XFFFD4010,0x400);
	set_frame_size(0XFFFD4010, 0X10, 0, 0);
	add_func    (0XFFFD40C8,0XFFFD41A0);
	set_func_flags(0XFFFD40C8,0x400);
	set_frame_size(0XFFFD40C8, 0X20, 0, 0);
	add_func    (0XFFFD41A0,0XFFFD4242);
	set_func_flags(0XFFFD41A0,0x400);
	set_frame_size(0XFFFD41A0, 0X20, 0, 0);
	add_func    (0XFFFD4244,0XFFFD4264);
	set_func_flags(0XFFFD4244,0x400);
	set_frame_size(0XFFFD4244, 0X10, 0, 0);
	add_func    (0XFFFD4264,0XFFFD4292);
	set_func_flags(0XFFFD4264,0x400);
	set_frame_size(0XFFFD4264, 0X20, 0, 0);
	add_func    (0XFFFD4294,0XFFFD42C2);
	set_func_flags(0XFFFD4294,0x400);
	set_frame_size(0XFFFD4294, 0X20, 0, 0);
	add_func    (0XFFFD42C4,0XFFFD43BA);
	set_func_flags(0XFFFD42C4,0x400);
	set_frame_size(0XFFFD42C4, 0X18, 0, 0);
	add_func    (0XFFFD43BC,0XFFFD44B2);
	set_func_flags(0XFFFD43BC,0x400);
	set_frame_size(0XFFFD43BC, 0X18, 0, 0);
	add_func    (0XFFFD44B4,0XFFFD44DE);
	set_func_flags(0XFFFD44B4,0x400);
	add_func    (0XFFFD44E0,0XFFFD45EE);
	set_func_flags(0XFFFD44E0,0x400);
	SetType(0XFFFD44E0, "int __fastcall sub_FFFD44E0(void *);");
	set_frame_size(0XFFFD44E0, 0X30, 0, 0);
	add_func    (0XFFFD45F0,0XFFFD462C);
	set_func_flags(0XFFFD45F0,0x400);
	SetType(0XFFFD45F0, "int __fastcall sub_FFFD45F0(void *);");
	set_frame_size(0XFFFD45F0, 0X10, 0, 0);
	add_func    (0XFFFD462C,0XFFFD462E);
	set_func_flags(0XFFFD462C,0x440);
	add_func    (0XFFFD4630,0XFFFD46D4);
	set_func_flags(0XFFFD4630,0x400);
	set_frame_size(0XFFFD4630, 0X28, 0, 0);
	add_func    (0XFFFD46D4,0XFFFD470E);
	set_func_flags(0XFFFD46D4,0x400);
	set_frame_size(0XFFFD46D4, 0X18, 0, 0);
	add_func    (0XFFFD4710,0XFFFD4752);
	set_func_flags(0XFFFD4710,0x400);
	SetType(0XFFFD4710, "int __fastcall sub_FFFD4710(void *, _DWORD, _DWORD);");
	set_frame_size(0XFFFD4710, 0X20, 0, 0);
	add_func    (0XFFFD4754,0XFFFD47E2);
	set_func_flags(0XFFFD4754,0x400);
	set_frame_size(0XFFFD4754, 0X28, 0, 0);
	add_func    (0XFFFD47E4,0XFFFD4818);
	set_func_flags(0XFFFD47E4,0x400);
	set_frame_size(0XFFFD47E4, 0X10, 0, 0);
	add_func    (0XFFFD481C,0XFFFD4850);
	set_func_flags(0XFFFD481C,0x400);
	set_frame_size(0XFFFD481C, 0X4, 0, 0);
	add_func    (0XFFFD4850,0XFFFD4868);
	set_func_flags(0XFFFD4850,0x400);
	add_func    (0XFFFD4868,0XFFFD48BA);
	set_func_flags(0XFFFD4868,0x400);
	set_frame_size(0XFFFD4868, 0X18, 0, 0);
	add_func    (0XFFFD48BC,0XFFFD48C2);
	set_func_flags(0XFFFD48BC,0x400);
	add_func    (0XFFFD48C4,0XFFFD48CA);
	set_func_flags(0XFFFD48C4,0x400);
	add_func    (0XFFFD48CC,0XFFFD4B0A);
	set_func_flags(0XFFFD48CC,0x400);
	set_frame_size(0XFFFD48CC, 0X30, 0, 0);
	add_func    (0XFFFD4B10,0XFFFD4B66);
	set_func_flags(0XFFFD4B10,0x400);
	set_frame_size(0XFFFD4B10, 0X20, 0, 0);
	add_func    (0XFFFD4B68,0XFFFD4C14);
	set_func_flags(0XFFFD4B68,0x400);
	set_frame_size(0XFFFD4B68, 0X20, 0, 0);
	add_func    (0XFFFD4C14,0XFFFD4EE8);
	set_func_flags(0XFFFD4C14,0x400);
	set_frame_size(0XFFFD4C14, 0X50, 0, 0);
	add_func    (0XFFFD4EEC,0XFFFD4F68);
	set_func_flags(0XFFFD4EEC,0x400);
	set_frame_size(0XFFFD4EEC, 0X10, 0, 0);
	add_func    (0XFFFD4F68,0XFFFD4F9A);
	set_func_flags(0XFFFD4F68,0x400);
	set_frame_size(0XFFFD4F68, 0X8, 0, 0);
	add_func    (0XFFFD4F9C,0XFFFD4FC8);
	set_func_flags(0XFFFD4F9C,0x401);
	SetType(0XFFFD4F9C, "int __fastcall ASSERT(_DWORD, const char *, void *, _DWORD, void *);");
	set_frame_size(0XFFFD4F9C, 0X18, 0, 0);
	define_local_var(0XFFFD4F9C, 0XFFFD4FC8, "[bp-0XC]", "varg_r1");
	define_local_var(0XFFFD4F9C, 0XFFFD4FC8, "[bp-0X8]", "varg_r2");
	define_local_var(0XFFFD4F9C, 0XFFFD4FC8, "[bp-0X4]", "varg_r3");
	add_func    (0XFFFD4FC8,0XFFFD50A6);
	set_func_flags(0XFFFD4FC8,0x400);
	set_frame_size(0XFFFD4FC8, 0X40, 0, 0);
	add_func    (0XFFFD50A8,0XFFFD5128);
	set_func_flags(0XFFFD50A8,0x400);
	set_frame_size(0XFFFD50A8, 0X20, 0, 0);
	add_func    (0XFFFD5128,0XFFFD513E);
	set_func_flags(0XFFFD5128,0x400);
	set_frame_size(0XFFFD5128, 0X10, 0, 0);
	add_func    (0XFFFD5140,0XFFFD5168);
	set_func_flags(0XFFFD5140,0x400);
	set_frame_size(0XFFFD5140, 0X10, 0, 0);
	add_func    (0XFFFD5168,0XFFFD5194);
	set_func_flags(0XFFFD5168,0x400);
	set_frame_size(0XFFFD5168, 0X10, 0, 0);
	add_func    (0XFFFD5194,0XFFFD51D2);
	set_func_flags(0XFFFD5194,0x400);
	set_frame_size(0XFFFD5194, 0X18, 0, 0);
	add_func    (0XFFFD51D4,0XFFFD51D8);
	set_func_flags(0XFFFD51D4,0x480);
	add_func    (0XFFFD51D8,0XFFFD5232);
	set_func_flags(0XFFFD51D8,0x400);
	set_frame_size(0XFFFD51D8, 0X4, 0, 0);
	add_func    (0XFFFD5234,0XFFFD5238);
	set_func_flags(0XFFFD5234,0x480);
	add_func    (0XFFFD5238,0XFFFD523C);
	set_func_flags(0XFFFD5238,0x480);
	add_func    (0XFFFD5248,0XFFFD5348);
	set_func_flags(0XFFFD5248,0x400);
	SetType(0XFFFD5248, "unsigned int __fastcall memcpy(void *out, void *in, unsigned int len);");
	add_func    (0XFFFD5350,0XFFFD53E4);
	set_func_flags(0XFFFD5350,0x400);
	SetType(0XFFFD5350, "int __fastcall memset(void *, int, unsigned int);");
	add_func    (0XFFFD53E4,0XFFFD5410);
	set_func_flags(0XFFFD53E4,0x400);
	add_func    (0XFFFD5410,0XFFFD5492);
	set_func_flags(0XFFFD5410,0x400);
	set_frame_size(0XFFFD5410, 0X18, 0, 0);
	add_func    (0XFFFD5494,0XFFFD5502);
	set_func_flags(0XFFFD5494,0x400);
	set_frame_size(0XFFFD5494, 0X18, 0, 0);
	add_func    (0XFFFD5504,0XFFFD5508);
	set_func_flags(0XFFFD5504,0x480);
	add_func    (0XFFFD5508,0XFFFD551C);
	set_func_flags(0XFFFD5508,0x400);
	add_func    (0XFFFD551C,0XFFFD5538);
	set_func_flags(0XFFFD551C,0x400);
	add_func    (0XFFFD5538,0XFFFD5544);
	set_func_flags(0XFFFD5538,0x400);
	add_func    (0XFFFD5544,0XFFFD5570);
	set_func_flags(0XFFFD5544,0x400);
	set_frame_size(0XFFFD5544, 0X10, 0, 0);
	add_func    (0XFFFD5570,0XFFFD5628);
	set_func_flags(0XFFFD5570,0x400);
	set_frame_size(0XFFFD5570, 0X20, 0, 0);
	add_func    (0XFFFD5628,0XFFFD568A);
	set_func_flags(0XFFFD5628,0x400);
	set_frame_size(0XFFFD5628, 0X10, 0, 0);
	add_func    (0XFFFD568C,0XFFFD5940);
	set_func_flags(0XFFFD568C,0x400);
	set_frame_size(0XFFFD568C, 0X30, 0, 0);
	add_func    (0XFFFD5940,0XFFFD5986);
	set_func_flags(0XFFFD5940,0x400);
	set_frame_size(0XFFFD5940, 0X10, 0, 0);
	add_func    (0XFFFD5988,0XFFFD5C72);
	set_func_flags(0XFFFD5988,0x400);
	set_frame_size(0XFFFD5988, 0X40, 0, 0);
	add_func    (0XFFFD5C88,0XFFFD62E8);
	set_func_flags(0XFFFD5C88,0x400);
	set_frame_size(0XFFFD5C88, 0X68, 0, 0);
	add_func    (0XFFFD62E8,0XFFFD6318);
	set_func_flags(0XFFFD62E8,0x400);
	set_frame_size(0XFFFD62E8, 0X20, 0, 0);
	add_func    (0XFFFD6318,0XFFFD6334);
	set_func_flags(0XFFFD6318,0x400);
	set_frame_size(0XFFFD6318, 0X18, 0, 0);
	define_local_var(0XFFFD6318, 0XFFFD6334, "[bp-0X8]", "varg_r2");
	define_local_var(0XFFFD6318, 0XFFFD6334, "[bp-0X4]", "varg_r3");
	add_func    (0XFFFD6334,0XFFFD6354);
	set_func_flags(0XFFFD6334,0x400);
	SetType(0XFFFD6334, "int __fastcall sub_FFFD6334(_DWORD, void *, _DWORD, _DWORD, _DWORD);");
	set_frame_size(0XFFFD6334, 0X18, 0, 0);
	define_local_var(0XFFFD6334, 0XFFFD6354, "[bp-0XC]", "varg_r1");
	define_local_var(0XFFFD6334, 0XFFFD6354, "[bp-0X8]", "varg_r2");
	define_local_var(0XFFFD6334, 0XFFFD6354, "[bp-0X4]", "varg_r3");
	add_func    (0XFFFD6354,0XFFFD6368);
	set_func_flags(0XFFFD6354,0x400);
	set_frame_size(0XFFFD6354, 0X4, 0, 0);
	add_func    (0XFFFD6368,0XFFFD6388);
	set_func_flags(0XFFFD6368,0x400);
	set_frame_size(0XFFFD6368, 0X10, 0, 0);
	add_func    (0XFFFD6388,0XFFFD63A0);
	set_func_flags(0XFFFD6388,0x400);
	set_frame_size(0XFFFD6388, 0X10, 0, 0);
	add_func    (0XFFFD63A0,0XFFFD63CE);
	set_func_flags(0XFFFD63A0,0x400);
	set_frame_size(0XFFFD63A0, 0X10, 0, 0);
	add_func    (0XFFFD63D0,0XFFFD63EE);
	set_func_flags(0XFFFD63D0,0x400);
	set_frame_size(0XFFFD63D0, 0X10, 0, 0);
	add_func    (0XFFFD63F0,0XFFFD63FC);
	set_func_flags(0XFFFD63F0,0x400);
	add_func    (0XFFFD63FC,0XFFFD6422);
	set_func_flags(0XFFFD63FC,0x400);
	set_frame_size(0XFFFD63FC, 0X20, 0, 0);
	define_local_var(0XFFFD63FC, 0XFFFD6422, "[bp-0X10]", "varg_r0");
	define_local_var(0XFFFD63FC, 0XFFFD6422, "[bp-0XC]", "varg_r1");
	define_local_var(0XFFFD63FC, 0XFFFD6422, "[bp-0X8]", "varg_r2");
	define_local_var(0XFFFD63FC, 0XFFFD6422, "[bp-0X4]", "varg_r3");
	add_func    (0XFFFD6428,0XFFFD643E);
	set_func_flags(0XFFFD6428,0x400);
	set_frame_size(0XFFFD6428, 0X8, 0, 0);
	add_func    (0XFFFD6444,0XFFFD6448);
	set_func_flags(0XFFFD6444,0x400);
	add_func    (0XFFFD6448,0XFFFD6486);
	set_func_flags(0XFFFD6448,0x400);
	SetType(0XFFFD6448, "int __fastcall memcmp(_DWORD, void *, _DWORD);");
	set_frame_size(0XFFFD6448, 0X4, 0, 0);
	add_func    (0XFFFD6488,0XFFFD64A6);
	set_func_flags(0XFFFD6488,0x400);
	SetType(0XFFFD6488, "int __fastcall strcmp(const char *, const char *);");
	add_func    (0XFFFD64A8,0XFFFD64B8);
	set_func_flags(0XFFFD64A8,0x400);
	add_func    (0XFFFD64B8,0XFFFD651C);
	set_func_flags(0XFFFD64B8,0x400);
	set_frame_size(0XFFFD64B8, 0X18, 0, 0);
	add_func    (0XFFFD651C,0XFFFD6562);
	set_func_flags(0XFFFD651C,0x400);
	set_frame_size(0XFFFD651C, 0X10, 0, 0);
	add_func    (0XFFFD6564,0XFFFD657C);
	set_func_flags(0XFFFD6564,0x400);
	add_func    (0XFFFD657C,0XFFFD6598);
	set_func_flags(0XFFFD657C,0x400);
	set_frame_size(0XFFFD657C, 0X4, 0, 0);
	add_func    (0XFFFD6598,0XFFFD65E6);
	set_func_flags(0XFFFD6598,0x400);
	SetType(0XFFFD6598, "int __fastcall strncmp(const char *, const char *, unsigned int);");
	set_frame_size(0XFFFD6598, 0X4, 0, 0);
	add_func    (0XFFFD65E8,0XFFFD6618);
	set_func_flags(0XFFFD65E8,0x400);
	set_frame_size(0XFFFD65E8, 0X8, 0, 0);
	add_func    (0XFFFD6618,0XFFFD6644);
	set_func_flags(0XFFFD6618,0x400);
	set_frame_size(0XFFFD6618, 0X8, 0, 0);
	add_func    (0XFFFD6644,0XFFFD6680);
	set_func_flags(0XFFFD6644,0x400);
	set_frame_size(0XFFFD6644, 0XC, 0, 0);
	add_func    (0XFFFD6680,0XFFFD66C0);
	set_func_flags(0XFFFD6680,0x400);
	SetType(0XFFFD6680, "int __fastcall sub_FFFD6680(_DWORD, const char *);");
	set_frame_size(0XFFFD6680, 0X18, 0, 0);
	add_func    (0XFFFD66C0,0XFFFD670A);
	set_func_flags(0XFFFD66C0,0x400);
	SetType(0XFFFD66C0, "int __fastcall strtok_r(_DWORD, void *);");
	set_frame_size(0XFFFD66C0, 0X18, 0, 0);
	add_func    (0XFFFD670C,0XFFFD67B2);
	set_func_flags(0XFFFD670C,0x400);
	set_frame_size(0XFFFD670C, 0X10, 0, 0);
	add_func    (0XFFFD67B8,0XFFFD6936);
	set_func_flags(0XFFFD67B8,0x400);
	set_frame_size(0XFFFD67B8, 0X30, 0, 0);
	add_func    (0XFFFD693C,0XFFFD6950);
	set_func_flags(0XFFFD693C,0x400);
	add_func    (0XFFFD6950,0XFFFD6988);
	set_func_flags(0XFFFD6950,0x400);
	set_frame_size(0XFFFD6950, 0X10, 0, 0);
	add_func    (0XFFFD6988,0XFFFD69A2);
	set_func_flags(0XFFFD6988,0x400);
	set_frame_size(0XFFFD6988, 0X8, 0, 0);
	add_func    (0XFFFD69A4,0XFFFD6A1E);
	set_func_flags(0XFFFD69A4,0x400);
	set_frame_size(0XFFFD69A4, 0X20, 0, 0);
	add_func    (0XFFFD6A20,0XFFFD6A32);
	set_func_flags(0XFFFD6A20,0x400);
	set_frame_size(0XFFFD6A20, 0X8, 0, 0);
	add_func    (0XFFFD6A34,0XFFFD6A46);
	set_func_flags(0XFFFD6A34,0x400);
	set_frame_size(0XFFFD6A34, 0X8, 0, 0);
	add_func    (0XFFFD6A48,0XFFFD6AB4);
	set_func_flags(0XFFFD6A48,0x400);
	add_func    (0XFFFD6AB4,0XFFFD6B9C);
	set_func_flags(0XFFFD6AB4,0x400);
	set_frame_size(0XFFFD6AB4, 0X18, 0, 0);
	add_func    (0XFFFD6B9C,0XFFFD6D20);
	set_func_flags(0XFFFD6B9C,0x400);
	set_frame_size(0XFFFD6B9C, 0X28, 0, 0);
	add_func    (0XFFFD6D20,0XFFFD6EF8);
	set_func_flags(0XFFFD6D20,0x400);
	set_frame_size(0XFFFD6D20, 0X70, 0, 0);
	add_func    (0XFFFD6EF8,0XFFFD7050);
	set_func_flags(0XFFFD6EF8,0x400);
	set_frame_size(0XFFFD6EF8, 0X60, 0, 0);
	add_func    (0XFFFD7050,0XFFFD7174);
	set_func_flags(0XFFFD7050,0x400);
	set_frame_size(0XFFFD7050, 0X20, 0, 0);
	add_func    (0XFFFD7174,0XFFFD725C);
	set_func_flags(0XFFFD7174,0x400);
	set_frame_size(0XFFFD7174, 0X90, 0, 0);
	add_func    (0XFFFD725C,0XFFFD72AC);
	set_func_flags(0XFFFD725C,0x400);
	add_func    (0XFFFD72AC,0XFFFD7384);
	set_func_flags(0XFFFD72AC,0x400);
	set_frame_size(0XFFFD72AC, 0X20, 0, 0);
	add_func    (0XFFFD7384,0XFFFD7410);
	set_func_flags(0XFFFD7384,0x400);
	set_frame_size(0XFFFD7384, 0X18, 0, 0);
	add_func    (0XFFFD7410,0XFFFD74AC);
	set_func_flags(0XFFFD7410,0x400);
	set_frame_size(0XFFFD7410, 0X18, 0, 0);
	add_func    (0XFFFD74AC,0XFFFD75CC);
	set_func_flags(0XFFFD74AC,0x400);
	set_frame_size(0XFFFD74AC, 0X20, 0, 0);
	add_func    (0XFFFD75CC,0XFFFD7638);
	set_func_flags(0XFFFD75CC,0x400);
	add_func    (0XFFFD7638,0XFFFD76E0);
	set_func_flags(0XFFFD7638,0x400);
	set_frame_size(0XFFFD7638, 0X4, 0, 0);
	add_func    (0XFFFD76E0,0XFFFD7874);
	set_func_flags(0XFFFD76E0,0x400);
	set_frame_size(0XFFFD76E0, 0X48, 0, 0);
	add_func    (0XFFFD7874,0XFFFD78C4);
	set_func_flags(0XFFFD7874,0x400);
	set_frame_size(0XFFFD7874, 0X20, 0, 0);
	add_func    (0XFFFD78C4,0XFFFD7934);
	set_func_flags(0XFFFD78C4,0x400);
	set_frame_size(0XFFFD78C4, 0X28, 0, 0);
	add_func    (0XFFFD7934,0XFFFD7994);
	set_func_flags(0XFFFD7934,0x400);
	set_frame_size(0XFFFD7934, 0X28, 0, 0);
	add_func    (0XFFFD7994,0XFFFD7AA8);
	set_func_flags(0XFFFD7994,0x400);
	set_frame_size(0XFFFD7994, 0X48, 0, 0);
	add_func    (0XFFFD7AA8,0XFFFD7AF0);
	set_func_flags(0XFFFD7AA8,0x400);
	set_frame_size(0XFFFD7AA8, 0X20, 0, 0);
	add_func    (0XFFFD7AF0,0XFFFD7C78);
	set_func_flags(0XFFFD7AF0,0x400);
	set_frame_size(0XFFFD7AF0, 0X48, 0, 0);
	add_func    (0XFFFD7C78,0XFFFD7EAC);
	set_func_flags(0XFFFD7C78,0x400);
	set_frame_size(0XFFFD7C78, 0X50, 0, 0);
	add_func    (0XFFFD7EAC,0XFFFD7F3C);
	set_func_flags(0XFFFD7EAC,0x400);
	set_frame_size(0XFFFD7EAC, 0X28, 0, 0);
	add_func    (0XFFFD7F3C,0XFFFD7FC4);
	set_func_flags(0XFFFD7F3C,0x400);
	set_frame_size(0XFFFD7F3C, 0X40, 0, 0);
	add_func    (0XFFFD7FC4,0XFFFD8144);
	set_func_flags(0XFFFD7FC4,0x400);
	set_frame_size(0XFFFD7FC4, 0X58, 0, 0);
	add_func    (0XFFFD8144,0XFFFD82C8);
	set_func_flags(0XFFFD8144,0x400);
	set_frame_size(0XFFFD8144, 0X58, 0, 0);
	add_func    (0XFFFD82C8,0XFFFD8508);
	set_func_flags(0XFFFD82C8,0x400);
	set_frame_size(0XFFFD82C8, 0XA8, 0, 0);
	add_func    (0XFFFD8508,0XFFFD85B0);
	set_func_flags(0XFFFD8508,0x400);
	set_frame_size(0XFFFD8508, 0X38, 0, 0);
	add_func    (0XFFFD85B0,0XFFFD87E8);
	set_func_flags(0XFFFD85B0,0x400);
	set_frame_size(0XFFFD85B0, 0X48, 0, 0);
	add_func    (0XFFFD87E8,0XFFFD8968);
	set_func_flags(0XFFFD87E8,0x400);
	set_frame_size(0XFFFD87E8, 0X58, 0, 0);
	add_func    (0XFFFD8968,0XFFFD8974);
	set_func_flags(0XFFFD8968,0x400);
	set_frame_size(0XFFFD8968, 0X8, 0, 0);
	add_func    (0XFFFD8974,0XFFFD8988);
	set_func_flags(0XFFFD8974,0x400);
	set_frame_size(0XFFFD8974, 0XC, 0, 0);
	add_func    (0XFFFD8988,0XFFFD898C);
	set_func_flags(0XFFFD8988,0x480);
	add_func    (0XFFFD898C,0XFFFD8990);
	set_func_flags(0XFFFD898C,0x480);
	SetType(0XFFFD898C, "int __fastcall sub_FFFD898C(void *, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);");
	add_func    (0XFFFD8990,0XFFFD8A10);
	set_func_flags(0XFFFD8990,0x400);
	set_frame_size(0XFFFD8990, 0X10, 0, 0);
	add_func    (0XFFFD8A10,0XFFFD8A1C);
	set_func_flags(0XFFFD8A10,0x400);
	SetType(0XFFFD8A10, "int __cdecl sub_FFFD8A10(void *, signed int, _DWORD, char *, signed int, int *, signed int);");
	set_frame_size(0XFFFD8A10, 0X10, 0, 0);
	add_func    (0XFFFD8A1C,0XFFFD8A30);
	set_func_flags(0XFFFD8A1C,0x400);
	set_frame_size(0XFFFD8A1C, 0X14, 0, 0);
	add_func    (0XFFFD8A30,0XFFFD8BE8);
	set_func_flags(0XFFFD8A30,0x400);
	set_frame_size(0XFFFD8A30, 0X290, 0, 0);
	add_func    (0XFFFD8BE8,0XFFFD8CDC);
	set_func_flags(0XFFFD8BE8,0x400);
	set_frame_size(0XFFFD8BE8, 0X40, 0, 0);
	add_func    (0XFFFD8D08,0XFFFD8D60);
	set_func_flags(0XFFFD8D08,0x400);
	set_frame_size(0XFFFD8D08, 0X8, 0, 0);
	add_func    (0XFFFD8D60,0XFFFD8DD0);
	set_func_flags(0XFFFD8D60,0x400);
	set_frame_size(0XFFFD8D60, 0X10, 0, 0);
	add_func    (0XFFFD8DD0,0XFFFD8DDC);
	set_func_flags(0XFFFD8DD0,0x400);
	add_func    (0XFFFD8DDC,0XFFFD8E58);
	set_func_flags(0XFFFD8DDC,0x400);
	set_frame_size(0XFFFD8DDC, 0X20, 0, 0);
	add_func    (0XFFFD8E58,0XFFFD8F54);
	set_func_flags(0XFFFD8E58,0x400);
	set_frame_size(0XFFFD8E58, 0X18, 0, 0);
	add_func    (0XFFFD8F54,0XFFFD8FAC);
	set_func_flags(0XFFFD8F54,0x400);
	set_frame_size(0XFFFD8F54, 0X10, 0, 0);
	add_func    (0XFFFD8FAC,0XFFFD8FB4);
	set_func_flags(0XFFFD8FAC,0x400);
	add_func    (0XFFFD8FB4,0XFFFD8FB8);
	set_func_flags(0XFFFD8FB4,0x440);
	add_func    (0XFFFD8FF0,0XFFFD9020);
	set_func_flags(0XFFFD8FF0,0x400);
	add_func    (0XFFFD9020,0XFFFD9044);
	set_func_flags(0XFFFD9020,0x400);
	add_func    (0XFFFD9068,0XFFFD9084);
	set_func_flags(0XFFFD9068,0x400);
	add_func    (0XFFFD9084,0XFFFD90D0);
	set_func_flags(0XFFFD9084,0x400);
	add_func    (0XFFFD90D0,0XFFFD9120);
	set_func_flags(0XFFFD90D0,0x400);
	set_frame_size(0XFFFD90D0, 0X14, 0, 0);
	add_func    (0XFFFD9120,0XFFFD91F0);
	set_func_flags(0XFFFD9120,0x400);
	set_frame_size(0XFFFD9120, 0XC, 0, 0);
	add_func    (0XFFFD91F0,0XFFFD9238);
	set_func_flags(0XFFFD91F0,0x400);
	add_func    (0XFFFD9238,0XFFFD9488);
	set_func_flags(0XFFFD9238,0x400);
	set_frame_size(0XFFFD9238, 0X70, 0, 0);
	add_func    (0XFFFD9488,0XFFFD9668);
	set_func_flags(0XFFFD9488,0x400);
	set_frame_size(0XFFFD9488, 0X68, 0, 0);
	add_func    (0XFFFD9668,0XFFFD96C0);
	set_func_flags(0XFFFD9668,0x400);
	set_frame_size(0XFFFD9668, 0X20, 0, 0);
	add_func    (0XFFFD96C0,0XFFFD97B8);
	set_func_flags(0XFFFD96C0,0x400);
	set_frame_size(0XFFFD96C0, 0X48, 0, 0);
	add_func    (0XFFFD97B8,0XFFFD97BC);
	set_func_flags(0XFFFD97B8,0x480);
	add_func    (0XFFFD97BC,0XFFFD98D8);
	set_func_flags(0XFFFD97BC,0x400);
	set_frame_size(0XFFFD97BC, 0X40, 0, 0);
	add_func    (0XFFFD98D8,0XFFFD98E4);
	set_func_flags(0XFFFD98D8,0x400);
	add_func    (0XFFFD98E4,0XFFFD98F8);
	set_func_flags(0XFFFD98E4,0x400);
	add_func    (0XFFFD98F8,0XFFFD999C);
	set_func_flags(0XFFFD98F8,0x400);
	add_func    (0XFFFD9AFC,0XFFFD9B14);
	set_func_flags(0XFFFD9AFC,0x400);
	add_func    (0XFFFD9B14,0XFFFD9B74);
	set_func_flags(0XFFFD9B14,0x400);
	add_func    (0XFFFD9C3C,0XFFFD9CB0);
	set_func_flags(0XFFFD9C3C,0x400);
	add_func    (0XFFFD9CB0,0XFFFD9CEC);
	set_func_flags(0XFFFD9CB0,0x400);
	set_frame_size(0XFFFD9CB0, 0X10, 0, 0);
	add_func    (0XFFFD9CEC,0XFFFD9D20);
	set_func_flags(0XFFFD9CEC,0x400);
	set_frame_size(0XFFFD9CEC, 0X20, 0, 0);
	add_func    (0XFFFD9D20,0XFFFD9D50);
	set_func_flags(0XFFFD9D20,0x400);
	set_frame_size(0XFFFD9D20, 0X20, 0, 0);
	add_func    (0XFFFD9D50,0XFFFD9D52);
	set_func_flags(0XFFFD9D50,0x440);
	add_func    (0XFFFD9D54,0XFFFD9DAA);
	set_func_flags(0XFFFD9D54,0x400);
	set_frame_size(0XFFFD9D54, 0X20, 0, 0);
	add_func    (0XFFFD9DAA,0XFFFDA10E);
	set_func_flags(0XFFFD9DAA,0x400);
	set_frame_size(0XFFFD9DAA, 0X38, 0, 0);
	add_func    (0XFFFDA10E,0XFFFDA460);
	set_func_flags(0XFFFDA10E,0x400);
	set_frame_size(0XFFFDA10E, 0X38, 0, 0);
	add_func    (0XFFFDA460,0XFFFDA464);
	set_func_flags(0XFFFDA460,0x400);
	add_func    (0XFFFDA464,0XFFFDA4CE);
	set_func_flags(0XFFFDA464,0x400);
	set_frame_size(0XFFFDA464, 0X4, 0, 0);
	add_func    (0XFFFDA4E0,0XFFFDA4F2);
	set_func_flags(0XFFFDA4E0,0x400);
	add_func    (0XFFFDA4F4,0XFFFDA4FC);
	set_func_flags(0XFFFDA4F4,0x400);
	add_func    (0XFFFDA500,0XFFFDA504);
	set_func_flags(0XFFFDA500,0x480);
	add_func    (0XFFFDA508,0XFFFDA510);
	set_func_flags(0XFFFDA508,0x480);
	add_func    (0XFFFDA510,0XFFFDA514);
	set_func_flags(0XFFFDA510,0x4c0);
	add_func    (0XFFFDA518,0XFFFDA520);
	set_func_flags(0XFFFDA518,0x480);
	add_func    (0XFFFDA520,0XFFFDA524);
	set_func_flags(0XFFFDA520,0x4c0);
	add_func    (0XFFFDA528,0XFFFDA530);
	set_func_flags(0XFFFDA528,0x480);
	add_func    (0XFFFDA530,0XFFFDA538);
	set_func_flags(0XFFFDA530,0x480);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X202000,"T",0,3);
	split_sreg_range(0X402020,"T",0,3);
	split_sreg_range(0XB00000,"T",0,3);
	split_sreg_range(0X2700000,"T",0,3);
	split_sreg_range(0X9000000,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0XF0440000,"T",0,3);
	split_sreg_range(0XF0501200,"T",0,3);
	split_sreg_range(0XF0A09000,"T",0,3);
	split_sreg_range(0XF0A40000,"T",0,3);
	split_sreg_range(0XF0A4D000,"T",0,3);
	split_sreg_range(0XF0A61000,"T",0,3);
	split_sreg_range(0XF0A72000,"T",0,3);
	split_sreg_range(0XF0D02000,"T",0,3);
	split_sreg_range(0XF0E00A00,"T",0,3);
	split_sreg_range(0XF0E08000,"T",0,3);
	split_sreg_range(0XF5001000,"T",0,3);
	split_sreg_range(0XF6409000,"T",0,3);
	split_sreg_range(0XF6800000,"T",0,3);
	split_sreg_range(0XFA800000,"T",0,3);
	split_sreg_range(0XFAF01000,"T",0,3);
	split_sreg_range(0XFB001000,"T",0,3);
	split_sreg_range(0XFCC01000,"T",0,3);
	split_sreg_range(0XFD001000,"T",0,3);
	split_sreg_range(0XFD400000,"T",0,3);
	split_sreg_range(0XFD501000,"T",0,3);
	split_sreg_range(0XFF001000,"T",0,3);
	split_sreg_range(0XFFFC0000,"T",0,3);
	split_sreg_range(0XFFFC0020,"T",0,3);
	split_sreg_range(0XFFFC008C,"T",0,3);
	split_sreg_range(0XFFFC009C,"T",0,3);
	split_sreg_range(0XFFFC00A8,"T",0,3);
	split_sreg_range(0XFFFC00B8,"T",0,3);
	split_sreg_range(0XFFFC00D8,"T",0X1,3);
	split_sreg_range(0XFFFC00DC,"T",0X1,3);
	split_sreg_range(0XFFFC00FC,"T",0X1,3);
	split_sreg_range(0XFFFC0126,"T",0X1,3);
	split_sreg_range(0XFFFC013A,"T",0X1,3);
	split_sreg_range(0XFFFC0150,"T",0X1,3);
	split_sreg_range(0XFFFC01B0,"T",0X1,3);
	split_sreg_range(0XFFFC01F2,"T",0X1,3);
	split_sreg_range(0XFFFC020E,"T",0X1,3);
	split_sreg_range(0XFFFC0228,"T",0X1,3);
	split_sreg_range(0XFFFC0246,"T",0X1,3);
	split_sreg_range(0XFFFC0264,"T",0X1,3);
	split_sreg_range(0XFFFC02B2,"T",0X1,3);
	split_sreg_range(0XFFFC0302,"T",0X1,3);
	split_sreg_range(0XFFFC030E,"T",0X1,3);
	split_sreg_range(0XFFFC031A,"T",0X1,3);
	split_sreg_range(0XFFFC0332,"T",0X1,3);
	split_sreg_range(0XFFFC033A,"T",0X1,3);
	split_sreg_range(0XFFFC0346,"T",0X1,3);
	split_sreg_range(0XFFFC035E,"T",0X1,3);
	split_sreg_range(0XFFFC0366,"T",0X1,3);
	split_sreg_range(0XFFFC038E,"T",0X1,3);
	split_sreg_range(0XFFFC0392,"T",0X1,3);
	split_sreg_range(0XFFFC03BA,"T",0X1,3);
	split_sreg_range(0XFFFC03F0,"T",0X1,3);
	split_sreg_range(0XFFFC043E,"T",0X1,3);
	split_sreg_range(0XFFFC0468,"T",0X1,3);
	split_sreg_range(0XFFFC046C,"T",0X1,3);
	split_sreg_range(0XFFFC048E,"T",0X1,3);
	split_sreg_range(0XFFFC049C,"T",0X1,3);
	split_sreg_range(0XFFFC04B4,"T",0X1,3);
	split_sreg_range(0XFFFC04B8,"T",0X1,3);
	split_sreg_range(0XFFFC04D2,"T",0X1,3);
	split_sreg_range(0XFFFC04D4,"T",0X1,3);
	split_sreg_range(0XFFFC04FC,"T",0X1,3);
	split_sreg_range(0XFFFC0518,"T",0X1,3);
	split_sreg_range(0XFFFC0534,"T",0X1,3);
	split_sreg_range(0XFFFC0548,"T",0X1,3);
	split_sreg_range(0XFFFC055C,"T",0X1,3);
	split_sreg_range(0XFFFC0578,"T",0X1,3);
	split_sreg_range(0XFFFC057C,"T",0X1,3);
	split_sreg_range(0XFFFC05EE,"T",0X1,3);
	split_sreg_range(0XFFFC062C,"T",0X1,3);
	split_sreg_range(0XFFFC0642,"T",0X1,3);
	split_sreg_range(0XFFFC0698,"T",0X1,3);
	split_sreg_range(0XFFFC06C0,"T",0X1,3);
	split_sreg_range(0XFFFC06CE,"T",0X1,3);
	split_sreg_range(0XFFFC06D4,"T",0X1,3);
	split_sreg_range(0XFFFC06E2,"T",0X1,3);
	split_sreg_range(0XFFFC06F0,"T",0X1,3);
	split_sreg_range(0XFFFC06FC,"T",0X1,3);
	split_sreg_range(0XFFFC070C,"T",0X1,3);
	split_sreg_range(0XFFFC071C,"T",0X1,3);
	split_sreg_range(0XFFFC0730,"T",0X1,3);
	split_sreg_range(0XFFFC0778,"T",0X1,3);
	split_sreg_range(0XFFFC0788,"T",0X1,3);
	split_sreg_range(0XFFFC078C,"T",0X1,3);
	split_sreg_range(0XFFFC07A8,"T",0X1,3);
	split_sreg_range(0XFFFC07B8,"T",0X1,3);
	split_sreg_range(0XFFFC07D6,"T",0X1,3);
	split_sreg_range(0XFFFC07DC,"T",0X1,3);
	split_sreg_range(0XFFFC07E0,"T",0X1,3);
	split_sreg_range(0XFFFC07E6,"T",0X1,3);
	split_sreg_range(0XFFFC07FC,"T",0X1,3);
	split_sreg_range(0XFFFC080C,"T",0X1,3);
	split_sreg_range(0XFFFC080E,"T",0X1,3);
	split_sreg_range(0XFFFC0820,"T",0X1,3);
	split_sreg_range(0XFFFC0834,"T",0X1,3);
	split_sreg_range(0XFFFC0842,"T",0X1,3);
	split_sreg_range(0XFFFC0848,"T",0X1,3);
	split_sreg_range(0XFFFC0854,"T",0X1,3);
	split_sreg_range(0XFFFC086E,"T",0X1,3);
	split_sreg_range(0XFFFC0880,"T",0X1,3);
	split_sreg_range(0XFFFC08E0,"T",0X1,3);
	split_sreg_range(0XFFFC0904,"T",0X1,3);
	split_sreg_range(0XFFFC091C,"T",0X1,3);
	split_sreg_range(0XFFFC0920,"T",0X1,3);
	split_sreg_range(0XFFFC0934,"T",0X1,3);
	split_sreg_range(0XFFFC094C,"T",0X1,3);
	split_sreg_range(0XFFFC0A52,"T",0X1,3);
	split_sreg_range(0XFFFC0A98,"T",0X1,3);
	split_sreg_range(0XFFFC0ADE,"T",0X1,3);
	split_sreg_range(0XFFFC0B24,"T",0X1,3);
	split_sreg_range(0XFFFC0B6A,"T",0X1,3);
	split_sreg_range(0XFFFC0BAE,"T",0X1,3);
	split_sreg_range(0XFFFC0BF8,"T",0X1,3);
	split_sreg_range(0XFFFC0C8C,"T",0X1,3);
	split_sreg_range(0XFFFC0C96,"T",0X1,3);
	split_sreg_range(0XFFFC0CAA,"T",0X1,3);
	split_sreg_range(0XFFFC0CB8,"T",0X1,3);
	split_sreg_range(0XFFFC0CF2,"T",0X1,3);
	split_sreg_range(0XFFFC0D10,"T",0X1,3);
	split_sreg_range(0XFFFC0D40,"T",0X1,3);
	split_sreg_range(0XFFFC0D5C,"T",0X1,3);
	split_sreg_range(0XFFFC0D60,"T",0X1,3);
	split_sreg_range(0XFFFC0D74,"T",0X1,3);
	split_sreg_range(0XFFFC0D86,"T",0X1,3);
	split_sreg_range(0XFFFC0D88,"T",0X1,3);
	split_sreg_range(0XFFFC0DB4,"T",0X1,3);
	split_sreg_range(0XFFFC0DC6,"T",0X1,3);
	split_sreg_range(0XFFFC0DCC,"T",0X1,3);
	split_sreg_range(0XFFFC0DE6,"T",0X1,3);
	split_sreg_range(0XFFFC0DEE,"T",0X1,3);
	split_sreg_range(0XFFFC0E06,"T",0X1,3);
	split_sreg_range(0XFFFC0E3C,"T",0X1,3);
	split_sreg_range(0XFFFC0E44,"T",0X1,3);
	split_sreg_range(0XFFFC0EE4,"T",0X1,3);
	split_sreg_range(0XFFFC0F14,"T",0X1,3);
	split_sreg_range(0XFFFC0F34,"T",0X1,3);
	split_sreg_range(0XFFFC0F44,"T",0X1,3);
	split_sreg_range(0XFFFC0F50,"T",0X1,3);
	split_sreg_range(0XFFFC0F5C,"T",0X1,3);
	split_sreg_range(0XFFFC0F74,"T",0X1,3);
	split_sreg_range(0XFFFC0F7C,"T",0X1,3);
	split_sreg_range(0XFFFC0F7E,"T",0X1,3);
	split_sreg_range(0XFFFC0FA4,"T",0X1,3);
	split_sreg_range(0XFFFC0FAA,"T",0X1,3);
	split_sreg_range(0XFFFC0FD2,"T",0X1,3);
	split_sreg_range(0XFFFC0FD6,"T",0X1,3);
	split_sreg_range(0XFFFC0FE6,"T",0X1,3);
	split_sreg_range(0XFFFC100C,"T",0X1,3);
	split_sreg_range(0XFFFC1042,"T",0X1,3);
	split_sreg_range(0XFFFC1048,"T",0X1,3);
	split_sreg_range(0XFFFC1050,"T",0X1,3);
	split_sreg_range(0XFFFC1064,"T",0X1,3);
	split_sreg_range(0XFFFC1080,"T",0X1,3);
	split_sreg_range(0XFFFC10AC,"T",0X1,3);
	split_sreg_range(0XFFFC10B8,"T",0X1,3);
	split_sreg_range(0XFFFC10C8,"T",0X1,3);
	split_sreg_range(0XFFFC10CA,"T",0X1,3);
	split_sreg_range(0XFFFC10F8,"T",0X1,3);
	split_sreg_range(0XFFFC1112,"T",0X1,3);
	split_sreg_range(0XFFFC1126,"T",0X1,3);
	split_sreg_range(0XFFFC1152,"T",0X1,3);
	split_sreg_range(0XFFFC1160,"T",0X1,3);
	split_sreg_range(0XFFFC116A,"T",0X1,3);
	split_sreg_range(0XFFFC1178,"T",0X1,3);
	split_sreg_range(0XFFFC1194,"T",0X1,3);
	split_sreg_range(0XFFFC11AE,"T",0X1,3);
	split_sreg_range(0XFFFC11B8,"T",0X1,3);
	split_sreg_range(0XFFFC11C0,"T",0X1,3);
	split_sreg_range(0XFFFC11DC,"T",0X1,3);
	split_sreg_range(0XFFFC11E4,"T",0X1,3);
	split_sreg_range(0XFFFC11F8,"T",0X1,3);
	split_sreg_range(0XFFFC1226,"T",0X1,3);
	split_sreg_range(0XFFFC124A,"T",0X1,3);
	split_sreg_range(0XFFFC1252,"T",0X1,3);
	split_sreg_range(0XFFFC1260,"T",0X1,3);
	split_sreg_range(0XFFFC1264,"T",0X1,3);
	split_sreg_range(0XFFFC1266,"T",0X1,3);
	split_sreg_range(0XFFFC1268,"T",0X1,3);
	split_sreg_range(0XFFFC127E,"T",0X1,3);
	split_sreg_range(0XFFFC12BE,"T",0X1,3);
	split_sreg_range(0XFFFC12C6,"T",0X1,3);
	split_sreg_range(0XFFFC12D4,"T",0X1,3);
	split_sreg_range(0XFFFC12E6,"T",0X1,3);
	split_sreg_range(0XFFFC1318,"T",0X1,3);
	split_sreg_range(0XFFFC1358,"T",0X1,3);
	split_sreg_range(0XFFFC1364,"T",0X1,3);
	split_sreg_range(0XFFFC136E,"T",0X1,3);
	split_sreg_range(0XFFFC1380,"T",0X1,3);
	split_sreg_range(0XFFFC13BC,"T",0X1,3);
	split_sreg_range(0XFFFC13C8,"T",0X1,3);
	split_sreg_range(0XFFFC13CC,"T",0X1,3);
	split_sreg_range(0XFFFC13E4,"T",0X1,3);
	split_sreg_range(0XFFFC13FE,"T",0X1,3);
	split_sreg_range(0XFFFC1404,"T",0X1,3);
	split_sreg_range(0XFFFC1408,"T",0X1,3);
	split_sreg_range(0XFFFC140E,"T",0X1,3);
	split_sreg_range(0XFFFC141A,"T",0X1,3);
	split_sreg_range(0XFFFC1432,"T",0X1,3);
	split_sreg_range(0XFFFC1438,"T",0X1,3);
	split_sreg_range(0XFFFC145C,"T",0X1,3);
	split_sreg_range(0XFFFC1466,"T",0X1,3);
	split_sreg_range(0XFFFC146A,"T",0X1,3);
	split_sreg_range(0XFFFC14A8,"T",0X1,3);
	split_sreg_range(0XFFFC14B6,"T",0X1,3);
	split_sreg_range(0XFFFC14C4,"T",0X1,3);
	split_sreg_range(0XFFFC14D2,"T",0X1,3);
	split_sreg_range(0XFFFC14E0,"T",0X1,3);
	split_sreg_range(0XFFFC14EE,"T",0X1,3);
	split_sreg_range(0XFFFC14FC,"T",0X1,3);
	split_sreg_range(0XFFFC150A,"T",0X1,3);
	split_sreg_range(0XFFFC1518,"T",0X1,3);
	split_sreg_range(0XFFFC1526,"T",0X1,3);
	split_sreg_range(0XFFFC1556,"T",0X1,3);
	split_sreg_range(0XFFFC157C,"T",0X1,3);
	split_sreg_range(0XFFFC15CA,"T",0X1,3);
	split_sreg_range(0XFFFC1604,"T",0X1,3);
	split_sreg_range(0XFFFC163E,"T",0X1,3);
	split_sreg_range(0XFFFC1644,"T",0X1,3);
	split_sreg_range(0XFFFC167E,"T",0X1,3);
	split_sreg_range(0XFFFC1684,"T",0X1,3);
	split_sreg_range(0XFFFC16B8,"T",0X1,3);
	split_sreg_range(0XFFFC16C8,"T",0X1,3);
	split_sreg_range(0XFFFC16CC,"T",0X1,3);
	split_sreg_range(0XFFFC16DC,"T",0X1,3);
	split_sreg_range(0XFFFC16EC,"T",0X1,3);
	split_sreg_range(0XFFFC16FC,"T",0X1,3);
	split_sreg_range(0XFFFC170C,"T",0X1,3);
	split_sreg_range(0XFFFC171C,"T",0X1,3);
	split_sreg_range(0XFFFC1754,"T",0X1,3);
	split_sreg_range(0XFFFC1768,"T",0X1,3);
	split_sreg_range(0XFFFC17AC,"T",0X1,3);
	split_sreg_range(0XFFFC1812,"T",0X1,3);
	split_sreg_range(0XFFFC1816,"T",0X1,3);
	split_sreg_range(0XFFFC181E,"T",0X1,3);
	split_sreg_range(0XFFFC1832,"T",0X1,3);
	split_sreg_range(0XFFFC1840,"T",0X1,3);
	split_sreg_range(0XFFFC1850,"T",0X1,3);
	split_sreg_range(0XFFFC1882,"T",0X1,3);
	split_sreg_range(0XFFFC1898,"T",0X1,3);
	split_sreg_range(0XFFFC18BE,"T",0X1,3);
	split_sreg_range(0XFFFC18FA,"T",0X1,3);
	split_sreg_range(0XFFFC190C,"T",0X1,3);
	split_sreg_range(0XFFFC195A,"T",0X1,3);
	split_sreg_range(0XFFFC1960,"T",0X1,3);
	split_sreg_range(0XFFFC196A,"T",0X1,3);
	split_sreg_range(0XFFFC1972,"T",0X1,3);
	split_sreg_range(0XFFFC1986,"T",0X1,3);
	split_sreg_range(0XFFFC199A,"T",0X1,3);
	split_sreg_range(0XFFFC19AE,"T",0X1,3);
	split_sreg_range(0XFFFC19C0,"T",0X1,3);
	split_sreg_range(0XFFFC1A0C,"T",0X1,3);
	split_sreg_range(0XFFFC1A20,"T",0X1,3);
	split_sreg_range(0XFFFC1A72,"T",0X1,3);
	split_sreg_range(0XFFFC1A78,"T",0X1,3);
	split_sreg_range(0XFFFC1B7A,"T",0X1,3);
	split_sreg_range(0XFFFC1BAE,"T",0X1,3);
	split_sreg_range(0XFFFC1BBC,"T",0X1,3);
	split_sreg_range(0XFFFC1BCE,"T",0X1,3);
	split_sreg_range(0XFFFC1C0A,"T",0X1,3);
	split_sreg_range(0XFFFC1C12,"T",0X1,3);
	split_sreg_range(0XFFFC1C26,"T",0X1,3);
	split_sreg_range(0XFFFC1C2E,"T",0X1,3);
	split_sreg_range(0XFFFC1C4A,"T",0X1,3);
	split_sreg_range(0XFFFC1C7A,"T",0X1,3);
	split_sreg_range(0XFFFC1CB0,"T",0X1,3);
	split_sreg_range(0XFFFC1D70,"T",0X1,3);
	split_sreg_range(0XFFFC1D80,"T",0X1,3);
	split_sreg_range(0XFFFC1D8C,"T",0X1,3);
	split_sreg_range(0XFFFC1DBE,"T",0X1,3);
	split_sreg_range(0XFFFC1DC6,"T",0X1,3);
	split_sreg_range(0XFFFC1DCA,"T",0X1,3);
	split_sreg_range(0XFFFC1E10,"T",0X1,3);
	split_sreg_range(0XFFFC1E34,"T",0X1,3);
	split_sreg_range(0XFFFC1E6C,"T",0X1,3);
	split_sreg_range(0XFFFC1E96,"T",0X1,3);
	split_sreg_range(0XFFFC1EAC,"T",0X1,3);
	split_sreg_range(0XFFFC1EB8,"T",0X1,3);
	split_sreg_range(0XFFFC1EC4,"T",0X1,3);
	split_sreg_range(0XFFFC1ED8,"T",0X1,3);
	split_sreg_range(0XFFFC1EEE,"T",0X1,3);
	split_sreg_range(0XFFFC1F52,"T",0X1,3);
	split_sreg_range(0XFFFC1F6E,"T",0X1,3);
	split_sreg_range(0XFFFC2082,"T",0X1,3);
	split_sreg_range(0XFFFC20B2,"T",0X1,3);
	split_sreg_range(0XFFFC21BC,"T",0X1,3);
	split_sreg_range(0XFFFC2268,"T",0X1,3);
	split_sreg_range(0XFFFC22EC,"T",0X1,3);
	split_sreg_range(0XFFFC2306,"T",0X1,3);
	split_sreg_range(0XFFFC2328,"T",0X1,3);
	split_sreg_range(0XFFFC2344,"T",0X1,3);
	split_sreg_range(0XFFFC2364,"T",0X1,3);
	split_sreg_range(0XFFFC2370,"T",0X1,3);
	split_sreg_range(0XFFFC237E,"T",0X1,3);
	split_sreg_range(0XFFFC239E,"T",0X1,3);
	split_sreg_range(0XFFFC23A8,"T",0X1,3);
	split_sreg_range(0XFFFC23B6,"T",0X1,3);
	split_sreg_range(0XFFFC23FA,"T",0X1,3);
	split_sreg_range(0XFFFC2508,"T",0X1,3);
	split_sreg_range(0XFFFC2518,"T",0X1,3);
	split_sreg_range(0XFFFC25F2,"T",0X1,3);
	split_sreg_range(0XFFFC2602,"T",0X1,3);
	split_sreg_range(0XFFFC2606,"T",0X1,3);
	split_sreg_range(0XFFFC265C,"T",0X1,3);
	split_sreg_range(0XFFFC2670,"T",0X1,3);
	split_sreg_range(0XFFFC26A2,"T",0X1,3);
	split_sreg_range(0XFFFC26F8,"T",0X1,3);
	split_sreg_range(0XFFFC2710,"T",0X1,3);
	split_sreg_range(0XFFFC271E,"T",0X1,3);
	split_sreg_range(0XFFFC2732,"T",0X1,3);
	split_sreg_range(0XFFFC273A,"T",0X1,3);
	split_sreg_range(0XFFFC273E,"T",0X1,3);
	split_sreg_range(0XFFFC274E,"T",0X1,3);
	split_sreg_range(0XFFFC2760,"T",0X1,3);
	split_sreg_range(0XFFFC2770,"T",0X1,3);
	split_sreg_range(0XFFFC2780,"T",0X1,3);
	split_sreg_range(0XFFFC27B4,"T",0X1,3);
	split_sreg_range(0XFFFC27D8,"T",0X1,3);
	split_sreg_range(0XFFFC2812,"T",0X1,3);
	split_sreg_range(0XFFFC2816,"T",0X1,3);
	split_sreg_range(0XFFFC2834,"T",0X1,3);
	split_sreg_range(0XFFFC283C,"T",0X1,3);
	split_sreg_range(0XFFFC2846,"T",0X1,3);
	split_sreg_range(0XFFFC285C,"T",0X1,3);
	split_sreg_range(0XFFFC2890,"T",0X1,3);
	split_sreg_range(0XFFFC2894,"T",0X1,3);
	split_sreg_range(0XFFFC28B8,"T",0X1,3);
	split_sreg_range(0XFFFC28C0,"T",0X1,3);
	split_sreg_range(0XFFFC28CA,"T",0X1,3);
	split_sreg_range(0XFFFC28DC,"T",0X1,3);
	split_sreg_range(0XFFFC2902,"T",0X1,3);
	split_sreg_range(0XFFFC2934,"T",0X1,3);
	split_sreg_range(0XFFFC294E,"T",0X1,3);
	split_sreg_range(0XFFFC2950,"T",0X1,3);
	split_sreg_range(0XFFFC2984,"T",0X1,3);
	split_sreg_range(0XFFFC2986,"T",0X1,3);
	split_sreg_range(0XFFFC29E2,"T",0X1,3);
	split_sreg_range(0XFFFC29F4,"T",0X1,3);
	split_sreg_range(0XFFFC2A12,"T",0X1,3);
	split_sreg_range(0XFFFC2A1E,"T",0X1,3);
	split_sreg_range(0XFFFC2A2C,"T",0X1,3);
	split_sreg_range(0XFFFC2A32,"T",0X1,3);
	split_sreg_range(0XFFFC2A3E,"T",0X1,3);
	split_sreg_range(0XFFFC2A52,"T",0X1,3);
	split_sreg_range(0XFFFC2A60,"T",0X1,3);
	split_sreg_range(0XFFFC2A72,"T",0X1,3);
	split_sreg_range(0XFFFC2A7E,"T",0X1,3);
	split_sreg_range(0XFFFC2A92,"T",0X1,3);
	split_sreg_range(0XFFFC2AAA,"T",0X1,3);
	split_sreg_range(0XFFFC2AC2,"T",0X1,3);
	split_sreg_range(0XFFFC2AD6,"T",0X1,3);
	split_sreg_range(0XFFFC2AE8,"T",0X1,3);
	split_sreg_range(0XFFFC2B00,"T",0X1,3);
	split_sreg_range(0XFFFC2B10,"T",0X1,3);
	split_sreg_range(0XFFFC2B3E,"T",0X1,3);
	split_sreg_range(0XFFFC2B54,"T",0X1,3);
	split_sreg_range(0XFFFC2B7E,"T",0X1,3);
	split_sreg_range(0XFFFC2BC8,"T",0X1,3);
	split_sreg_range(0XFFFC2BF8,"T",0X1,3);
	split_sreg_range(0XFFFC2BFC,"T",0X1,3);
	split_sreg_range(0XFFFC2C12,"T",0X1,3);
	split_sreg_range(0XFFFC2C28,"T",0X1,3);
	split_sreg_range(0XFFFC2C30,"T",0X1,3);
	split_sreg_range(0XFFFC2C40,"T",0X1,3);
	split_sreg_range(0XFFFC2C50,"T",0X1,3);
	split_sreg_range(0XFFFC2C54,"T",0X1,3);
	split_sreg_range(0XFFFC2C78,"T",0X1,3);
	split_sreg_range(0XFFFC2CC4,"T",0X1,3);
	split_sreg_range(0XFFFC2CDA,"T",0X1,3);
	split_sreg_range(0XFFFC2CF0,"T",0X1,3);
	split_sreg_range(0XFFFC2D38,"T",0X1,3);
	split_sreg_range(0XFFFC2D54,"T",0X1,3);
	split_sreg_range(0XFFFC2D78,"T",0X1,3);
	split_sreg_range(0XFFFC2DAE,"T",0X1,3);
	split_sreg_range(0XFFFC2DB6,"T",0X1,3);
	split_sreg_range(0XFFFC2DFC,"T",0X1,3);
	split_sreg_range(0XFFFC2E20,"T",0X1,3);
	split_sreg_range(0XFFFC2E78,"T",0X1,3);
	split_sreg_range(0XFFFC2E9C,"T",0X1,3);
	split_sreg_range(0XFFFC2ED2,"T",0X1,3);
	split_sreg_range(0XFFFC2EDA,"T",0X1,3);
	split_sreg_range(0XFFFC2F20,"T",0X1,3);
	split_sreg_range(0XFFFC2F42,"T",0X1,3);
	split_sreg_range(0XFFFC2F64,"T",0X1,3);
	split_sreg_range(0XFFFC2F78,"T",0X1,3);
	split_sreg_range(0XFFFC2F98,"T",0X1,3);
	split_sreg_range(0XFFFC2FBC,"T",0X1,3);
	split_sreg_range(0XFFFC2FC2,"T",0X1,3);
	split_sreg_range(0XFFFC301C,"T",0X1,3);
	split_sreg_range(0XFFFC302C,"T",0X1,3);
	split_sreg_range(0XFFFC303C,"T",0X1,3);
	split_sreg_range(0XFFFC3086,"T",0X1,3);
	split_sreg_range(0XFFFC308A,"T",0X1,3);
	split_sreg_range(0XFFFC309E,"T",0X1,3);
	split_sreg_range(0XFFFC30B2,"T",0X1,3);
	split_sreg_range(0XFFFC30C4,"T",0X1,3);
	split_sreg_range(0XFFFC30E0,"T",0X1,3);
	split_sreg_range(0XFFFC30F0,"T",0X1,3);
	split_sreg_range(0XFFFC3100,"T",0X1,3);
	split_sreg_range(0XFFFC31B2,"T",0X1,3);
	split_sreg_range(0XFFFC31D4,"T",0X1,3);
	split_sreg_range(0XFFFC31EA,"T",0X1,3);
	split_sreg_range(0XFFFC31F2,"T",0X1,3);
	split_sreg_range(0XFFFC3206,"T",0X1,3);
	split_sreg_range(0XFFFC320C,"T",0X1,3);
	split_sreg_range(0XFFFC3216,"T",0X1,3);
	split_sreg_range(0XFFFC323A,"T",0X1,3);
	split_sreg_range(0XFFFC3260,"T",0X1,3);
	split_sreg_range(0XFFFC326C,"T",0X1,3);
	split_sreg_range(0XFFFC3278,"T",0X1,3);
	split_sreg_range(0XFFFC328C,"T",0X1,3);
	split_sreg_range(0XFFFC335C,"T",0X1,3);
	split_sreg_range(0XFFFC3360,"T",0X1,3);
	split_sreg_range(0XFFFC3390,"T",0X1,3);
	split_sreg_range(0XFFFC339C,"T",0X1,3);
	split_sreg_range(0XFFFC33A4,"T",0X1,3);
	split_sreg_range(0XFFFC33AC,"T",0X1,3);
	split_sreg_range(0XFFFC33B0,"T",0X1,3);
	split_sreg_range(0XFFFC33C8,"T",0,3);
	split_sreg_range(0XFFFC33E0,"T",0,3);
	split_sreg_range(0XFFFC343C,"T",0,3);
	split_sreg_range(0XFFFC3454,"T",0,3);
	split_sreg_range(0XFFFC3488,"T",0,3);
	split_sreg_range(0XFFFC348C,"T",0,3);
	split_sreg_range(0XFFFC34A0,"T",0,3);
	split_sreg_range(0XFFFC34B0,"T",0,3);
	split_sreg_range(0XFFFC34E4,"T",0,3);
	split_sreg_range(0XFFFC3500,"T",0,3);
	split_sreg_range(0XFFFC350C,"T",0,3);
	split_sreg_range(0XFFFC3524,"T",0,3);
	split_sreg_range(0XFFFC3560,"T",0,3);
	split_sreg_range(0XFFFC3564,"T",0,3);
	split_sreg_range(0XFFFC3580,"T",0,3);
	split_sreg_range(0XFFFC358C,"T",0,3);
	split_sreg_range(0XFFFC35A0,"T",0,3);
	split_sreg_range(0XFFFC35B8,"T",0,3);
	split_sreg_range(0XFFFC35F4,"T",0,3);
	split_sreg_range(0XFFFC35F8,"T",0,3);
	split_sreg_range(0XFFFC3614,"T",0,3);
	split_sreg_range(0XFFFC3620,"T",0,3);
	split_sreg_range(0XFFFC3634,"T",0,3);
	split_sreg_range(0XFFFC3640,"T",0,3);
	split_sreg_range(0XFFFC3658,"T",0,3);
	split_sreg_range(0XFFFC3664,"T",0,3);
	split_sreg_range(0XFFFC367C,"T",0,3);
	split_sreg_range(0XFFFC3688,"T",0,3);
	split_sreg_range(0XFFFC36A0,"T",0,3);
	split_sreg_range(0XFFFC36BC,"T",0,3);
	split_sreg_range(0XFFFC36CC,"T",0,3);
	split_sreg_range(0XFFFC36DC,"T",0,3);
	split_sreg_range(0XFFFC36F4,"T",0,3);
	split_sreg_range(0XFFFC3710,"T",0,3);
	split_sreg_range(0XFFFC372C,"T",0,3);
	split_sreg_range(0XFFFC3748,"T",0,3);
	split_sreg_range(0XFFFC3764,"T",0,3);
	split_sreg_range(0XFFFC3768,"T",0,3);
	split_sreg_range(0XFFFC3788,"T",0,3);
	split_sreg_range(0XFFFC37A0,"T",0,3);
	split_sreg_range(0XFFFC37A8,"T",0,3);
	split_sreg_range(0XFFFC37B4,"T",0,3);
	split_sreg_range(0XFFFC37BC,"T",0,3);
	split_sreg_range(0XFFFC380C,"T",0,3);
	split_sreg_range(0XFFFC3814,"T",0,3);
	split_sreg_range(0XFFFC3844,"T",0,3);
	split_sreg_range(0XFFFC3864,"T",0,3);
	split_sreg_range(0XFFFC3870,"T",0,3);
	split_sreg_range(0XFFFC38C0,"T",0,3);
	split_sreg_range(0XFFFC38CC,"T",0,3);
	split_sreg_range(0XFFFC391C,"T",0,3);
	split_sreg_range(0XFFFC3920,"T",0,3);
	split_sreg_range(0XFFFC392C,"T",0,3);
	split_sreg_range(0XFFFC39A4,"T",0,3);
	split_sreg_range(0XFFFC39B0,"T",0,3);
	split_sreg_range(0XFFFC39E0,"T",0,3);
	split_sreg_range(0XFFFC3A00,"T",0X1,3);
	split_sreg_range(0XFFFC3ACA,"T",0X1,3);
	split_sreg_range(0XFFFC3B00,"T",0X1,3);
	split_sreg_range(0XFFFC3B02,"T",0X1,3);
	split_sreg_range(0XFFFC3B5E,"T",0X1,3);
	split_sreg_range(0XFFFC3B9C,"T",0X1,3);
	split_sreg_range(0XFFFC3BB4,"T",0X1,3);
	split_sreg_range(0XFFFC3BB8,"T",0X1,3);
	split_sreg_range(0XFFFC3BF0,"T",0X1,3);
	split_sreg_range(0XFFFC3C38,"T",0X1,3);
	split_sreg_range(0XFFFC3CB8,"T",0X1,3);
	split_sreg_range(0XFFFC3CD0,"T",0X1,3);
	split_sreg_range(0XFFFC3D56,"T",0X1,3);
	split_sreg_range(0XFFFC3D60,"T",0X1,3);
	split_sreg_range(0XFFFC3D70,"T",0X1,3);
	split_sreg_range(0XFFFC3DBE,"T",0X1,3);
	split_sreg_range(0XFFFC3DCA,"T",0X1,3);
	split_sreg_range(0XFFFC3E02,"T",0X1,3);
	split_sreg_range(0XFFFC3E5C,"T",0X1,3);
	split_sreg_range(0XFFFC3EA0,"T",0X1,3);
	split_sreg_range(0XFFFC3EAE,"T",0X1,3);
	split_sreg_range(0XFFFC3EB6,"T",0X1,3);
	split_sreg_range(0XFFFC3EBA,"T",0X1,3);
	split_sreg_range(0XFFFC3EF4,"T",0X1,3);
	split_sreg_range(0XFFFC3F00,"T",0X1,3);
	split_sreg_range(0XFFFC4024,"T",0X1,3);
	split_sreg_range(0XFFFC407A,"T",0X1,3);
	split_sreg_range(0XFFFC410A,"T",0X1,3);
	split_sreg_range(0XFFFC4118,"T",0X1,3);
	split_sreg_range(0XFFFC4128,"T",0X1,3);
	split_sreg_range(0XFFFC4148,"T",0X1,3);
	split_sreg_range(0XFFFC417E,"T",0X1,3);
	split_sreg_range(0XFFFC4184,"T",0X1,3);
	split_sreg_range(0XFFFC41B6,"T",0X1,3);
	split_sreg_range(0XFFFC41BE,"T",0X1,3);
	split_sreg_range(0XFFFC41C2,"T",0X1,3);
	split_sreg_range(0XFFFC41C4,"T",0X1,3);
	split_sreg_range(0XFFFC41EC,"T",0X1,3);
	split_sreg_range(0XFFFC41FC,"T",0X1,3);
	split_sreg_range(0XFFFC4220,"T",0X1,3);
	split_sreg_range(0XFFFC426C,"T",0X1,3);
	split_sreg_range(0XFFFC4284,"T",0,3);
	split_sreg_range(0XFFFC430C,"T",0,3);
	split_sreg_range(0XFFFC4310,"T",0,3);
	split_sreg_range(0XFFFC4378,"T",0X1,2);
	split_sreg_range(0XFFFC43A2,"T",0X1,3);
	split_sreg_range(0XFFFC43AC,"T",0X1,3);
	split_sreg_range(0XFFFC43D0,"T",0X1,3);
	split_sreg_range(0XFFFC43DC,"T",0X1,3);
	split_sreg_range(0XFFFC43E0,"T",0X1,3);
	split_sreg_range(0XFFFC43EE,"T",0X1,3);
	split_sreg_range(0XFFFC43F6,"T",0X1,3);
	split_sreg_range(0XFFFC4408,"T",0X1,3);
	split_sreg_range(0XFFFC440E,"T",0X1,3);
	split_sreg_range(0XFFFC44A0,"T",0X1,3);
	split_sreg_range(0XFFFC451A,"T",0X1,3);
	split_sreg_range(0XFFFC4524,"T",0X1,3);
	split_sreg_range(0XFFFC457C,"T",0X1,3);
	split_sreg_range(0XFFFC4588,"T",0X1,3);
	split_sreg_range(0XFFFC45A0,"T",0X1,3);
	split_sreg_range(0XFFFC45A8,"T",0X1,3);
	split_sreg_range(0XFFFC45B8,"T",0X1,3);
	split_sreg_range(0XFFFC45BE,"T",0X1,3);
	split_sreg_range(0XFFFC45FA,"T",0X1,3);
	split_sreg_range(0XFFFC4648,"T",0X1,3);
	split_sreg_range(0XFFFC464E,"T",0X1,3);
	split_sreg_range(0XFFFC4660,"T",0X1,3);
	split_sreg_range(0XFFFC469E,"T",0X1,3);
	split_sreg_range(0XFFFC46A2,"T",0X1,3);
	split_sreg_range(0XFFFC46C0,"T",0X1,3);
	split_sreg_range(0XFFFC475C,"T",0X1,3);
	split_sreg_range(0XFFFC47C8,"T",0X1,3);
	split_sreg_range(0XFFFC47D0,"T",0X1,3);
	split_sreg_range(0XFFFC47E0,"T",0X1,3);
	split_sreg_range(0XFFFC47FA,"T",0X1,3);
	split_sreg_range(0XFFFC4808,"T",0X1,3);
	split_sreg_range(0XFFFC4818,"T",0X1,3);
	split_sreg_range(0XFFFC4832,"T",0X1,3);
	split_sreg_range(0XFFFC4852,"T",0X1,3);
	split_sreg_range(0XFFFC488C,"T",0X1,3);
	split_sreg_range(0XFFFC48B4,"T",0X1,3);
	split_sreg_range(0XFFFC48CE,"T",0X1,3);
	split_sreg_range(0XFFFC48D8,"T",0X1,3);
	split_sreg_range(0XFFFC4900,"T",0X1,3);
	split_sreg_range(0XFFFC494A,"T",0X1,3);
	split_sreg_range(0XFFFC495E,"T",0X1,3);
	split_sreg_range(0XFFFC496C,"T",0X1,3);
	split_sreg_range(0XFFFC497C,"T",0X1,3);
	split_sreg_range(0XFFFC49A6,"T",0X1,3);
	split_sreg_range(0XFFFC49F0,"T",0X1,3);
	split_sreg_range(0XFFFC4A3E,"T",0X1,3);
	split_sreg_range(0XFFFC4B08,"T",0X1,3);
	split_sreg_range(0XFFFC4B0E,"T",0X1,3);
	split_sreg_range(0XFFFC4B1C,"T",0X1,3);
	split_sreg_range(0XFFFC4B3E,"T",0X1,3);
	split_sreg_range(0XFFFC4B4A,"T",0X1,3);
	split_sreg_range(0XFFFC4B60,"T",0X1,3);
	split_sreg_range(0XFFFC4B6E,"T",0X1,3);
	split_sreg_range(0XFFFC4B7C,"T",0X1,3);
	split_sreg_range(0XFFFC4B8C,"T",0X1,3);
	split_sreg_range(0XFFFC4B9E,"T",0X1,3);
	split_sreg_range(0XFFFC4BB0,"T",0X1,3);
	split_sreg_range(0XFFFC4BC2,"T",0X1,3);
	split_sreg_range(0XFFFC4BD4,"T",0X1,3);
	split_sreg_range(0XFFFC4BE6,"T",0X1,3);
	split_sreg_range(0XFFFC4BF8,"T",0X1,3);
	split_sreg_range(0XFFFC4C0C,"T",0X1,3);
	split_sreg_range(0XFFFC4C44,"T",0X1,3);
	split_sreg_range(0XFFFC4C50,"T",0X1,3);
	split_sreg_range(0XFFFC4CA2,"T",0X1,3);
	split_sreg_range(0XFFFC4CAC,"T",0X1,3);
	split_sreg_range(0XFFFC4CB4,"T",0X1,3);
	split_sreg_range(0XFFFC4D2C,"T",0X1,3);
	split_sreg_range(0XFFFC4D3A,"T",0X1,3);
	split_sreg_range(0XFFFC4D52,"T",0X1,3);
	split_sreg_range(0XFFFC4D76,"T",0X1,3);
	split_sreg_range(0XFFFC4D84,"T",0X1,3);
	split_sreg_range(0XFFFC4D92,"T",0X1,3);
	split_sreg_range(0XFFFC4DA0,"T",0X1,3);
	split_sreg_range(0XFFFC4DAE,"T",0X1,3);
	split_sreg_range(0XFFFC4E04,"T",0X1,3);
	split_sreg_range(0XFFFC4E1E,"T",0X1,3);
	split_sreg_range(0XFFFC4E8A,"T",0X1,3);
	split_sreg_range(0XFFFC4ED0,"T",0X1,3);
	split_sreg_range(0XFFFC4EF4,"T",0X1,3);
	split_sreg_range(0XFFFC4F04,"T",0X1,3);
	split_sreg_range(0XFFFC4F38,"T",0X1,3);
	split_sreg_range(0XFFFC4F58,"T",0X1,3);
	split_sreg_range(0XFFFC4F9C,"T",0X1,3);
	split_sreg_range(0XFFFC4FAA,"T",0X1,3);
	split_sreg_range(0XFFFC4FB0,"T",0X1,3);
	split_sreg_range(0XFFFC4FD2,"T",0X1,3);
	split_sreg_range(0XFFFC5006,"T",0X1,3);
	split_sreg_range(0XFFFC502C,"T",0X1,3);
	split_sreg_range(0XFFFC5038,"T",0X1,3);
	split_sreg_range(0XFFFC5046,"T",0X1,3);
	split_sreg_range(0XFFFC5050,"T",0X1,3);
	split_sreg_range(0XFFFC5064,"T",0X1,3);
	split_sreg_range(0XFFFC508A,"T",0X1,3);
	split_sreg_range(0XFFFC508E,"T",0X1,3);
	split_sreg_range(0XFFFC50A8,"T",0X1,3);
	split_sreg_range(0XFFFC50C0,"T",0X1,3);
	split_sreg_range(0XFFFC50DA,"T",0X1,3);
	split_sreg_range(0XFFFC50E2,"T",0X1,3);
	split_sreg_range(0XFFFC5100,"T",0X1,3);
	split_sreg_range(0XFFFC511C,"T",0X1,3);
	split_sreg_range(0XFFFC5128,"T",0X1,3);
	split_sreg_range(0XFFFC5140,"T",0X1,3);
	split_sreg_range(0XFFFC5182,"T",0X1,3);
	split_sreg_range(0XFFFC51A4,"T",0X1,3);
	split_sreg_range(0XFFFC51C2,"T",0X1,3);
	split_sreg_range(0XFFFC51C6,"T",0X1,3);
	split_sreg_range(0XFFFC51DC,"T",0X1,3);
	split_sreg_range(0XFFFC51F4,"T",0X1,3);
	split_sreg_range(0XFFFC5200,"T",0X1,3);
	split_sreg_range(0XFFFC520C,"T",0X1,3);
	split_sreg_range(0XFFFC522C,"T",0X1,3);
	split_sreg_range(0XFFFC5250,"T",0X1,3);
	split_sreg_range(0XFFFC525E,"T",0X1,3);
	split_sreg_range(0XFFFC5268,"T",0X1,3);
	split_sreg_range(0XFFFC5280,"T",0X1,3);
	split_sreg_range(0XFFFC5298,"T",0X1,3);
	split_sreg_range(0XFFFC52B0,"T",0X1,3);
	split_sreg_range(0XFFFC52BE,"T",0X1,3);
	split_sreg_range(0XFFFC52CA,"T",0X1,3);
	split_sreg_range(0XFFFC52D8,"T",0X1,3);
	split_sreg_range(0XFFFC52E6,"T",0X1,3);
	split_sreg_range(0XFFFC52F4,"T",0X1,3);
	split_sreg_range(0XFFFC533C,"T",0X1,3);
	split_sreg_range(0XFFFC5340,"T",0X1,3);
	split_sreg_range(0XFFFC5352,"T",0X1,3);
	split_sreg_range(0XFFFC5380,"T",0X1,3);
	split_sreg_range(0XFFFC53E6,"T",0X1,3);
	split_sreg_range(0XFFFC53EA,"T",0X1,3);
	split_sreg_range(0XFFFC53F6,"T",0X1,3);
	split_sreg_range(0XFFFC540E,"T",0X1,3);
	split_sreg_range(0XFFFC541C,"T",0X1,3);
	split_sreg_range(0XFFFC5440,"T",0X1,3);
	split_sreg_range(0XFFFC5464,"T",0X1,3);
	split_sreg_range(0XFFFC54A4,"T",0X1,3);
	split_sreg_range(0XFFFC54F2,"T",0X1,3);
	split_sreg_range(0XFFFC54F6,"T",0X1,3);
	split_sreg_range(0XFFFC5506,"T",0X1,3);
	split_sreg_range(0XFFFC5512,"T",0X1,3);
	split_sreg_range(0XFFFC5530,"T",0X1,3);
	split_sreg_range(0XFFFC553E,"T",0X1,3);
	split_sreg_range(0XFFFC5542,"T",0X1,3);
	split_sreg_range(0XFFFC5564,"T",0X1,3);
	split_sreg_range(0XFFFC558E,"T",0X1,3);
	split_sreg_range(0XFFFC559C,"T",0X1,3);
	split_sreg_range(0XFFFC5622,"T",0X1,3);
	split_sreg_range(0XFFFC564E,"T",0X1,3);
	split_sreg_range(0XFFFC5652,"T",0X1,3);
	split_sreg_range(0XFFFC5684,"T",0X1,3);
	split_sreg_range(0XFFFC569A,"T",0X1,3);
	split_sreg_range(0XFFFC56B4,"T",0X1,3);
	split_sreg_range(0XFFFC56C0,"T",0X1,3);
	split_sreg_range(0XFFFC56FE,"T",0X1,3);
	split_sreg_range(0XFFFC570A,"T",0X1,3);
	split_sreg_range(0XFFFC573C,"T",0X1,3);
	split_sreg_range(0XFFFC5758,"T",0X1,3);
	split_sreg_range(0XFFFC57A2,"T",0X1,3);
	split_sreg_range(0XFFFC57AA,"T",0X1,3);
	split_sreg_range(0XFFFC57D2,"T",0X1,3);
	split_sreg_range(0XFFFC57E6,"T",0X1,3);
	split_sreg_range(0XFFFC57F2,"T",0X1,3);
	split_sreg_range(0XFFFC5854,"T",0X1,3);
	split_sreg_range(0XFFFC586A,"T",0X1,3);
	split_sreg_range(0XFFFC5890,"T",0X1,3);
	split_sreg_range(0XFFFC58FA,"T",0X1,3);
	split_sreg_range(0XFFFC58FE,"T",0X1,3);
	split_sreg_range(0XFFFC5920,"T",0X1,3);
	split_sreg_range(0XFFFC594A,"T",0X1,3);
	split_sreg_range(0XFFFC594C,"T",0X1,3);
	split_sreg_range(0XFFFC596C,"T",0X1,3);
	split_sreg_range(0XFFFC5970,"T",0X1,3);
	split_sreg_range(0XFFFC598C,"T",0X1,3);
	split_sreg_range(0XFFFC5990,"T",0X1,3);
	split_sreg_range(0XFFFC59C0,"T",0X1,3);
	split_sreg_range(0XFFFC59E8,"T",0X1,3);
	split_sreg_range(0XFFFC59F8,"T",0X1,3);
	split_sreg_range(0XFFFC5A06,"T",0X1,3);
	split_sreg_range(0XFFFC5A0A,"T",0X1,3);
	split_sreg_range(0XFFFC5A46,"T",0X1,3);
	split_sreg_range(0XFFFC5A64,"T",0X1,3);
	split_sreg_range(0XFFFC5A7C,"T",0X1,3);
	split_sreg_range(0XFFFC5A8E,"T",0X1,3);
	split_sreg_range(0XFFFC5A9C,"T",0X1,3);
	split_sreg_range(0XFFFC5AAE,"T",0X1,3);
	split_sreg_range(0XFFFC5ABC,"T",0X1,3);
	split_sreg_range(0XFFFC5C6A,"T",0X1,3);
	split_sreg_range(0XFFFC5C72,"T",0X1,3);
	split_sreg_range(0XFFFC5C7A,"T",0X1,3);
	split_sreg_range(0XFFFC5C80,"T",0X1,3);
	split_sreg_range(0XFFFC5C8C,"T",0X1,3);
	split_sreg_range(0XFFFC5C94,"T",0X1,3);
	split_sreg_range(0XFFFC5D08,"T",0X1,3);
	split_sreg_range(0XFFFC5D6C,"T",0X1,3);
	split_sreg_range(0XFFFC5D7C,"T",0X1,3);
	split_sreg_range(0XFFFC5D8C,"T",0X1,3);
	split_sreg_range(0XFFFC5DA0,"T",0X1,3);
	split_sreg_range(0XFFFC5DC2,"T",0X1,3);
	split_sreg_range(0XFFFC5DDE,"T",0X1,3);
	split_sreg_range(0XFFFC5DFC,"T",0X1,3);
	split_sreg_range(0XFFFC5F48,"T",0X1,3);
	split_sreg_range(0XFFFC5F50,"T",0X1,3);
	split_sreg_range(0XFFFC5F54,"T",0X1,3);
	split_sreg_range(0XFFFC5F60,"T",0X1,3);
	split_sreg_range(0XFFFC5F66,"T",0X1,3);
	split_sreg_range(0XFFFC5F72,"T",0X1,3);
	split_sreg_range(0XFFFC5F84,"T",0X1,3);
	split_sreg_range(0XFFFC5F9C,"T",0X1,3);
	split_sreg_range(0XFFFC5F9E,"T",0X1,3);
	split_sreg_range(0XFFFC5FB4,"T",0X1,3);
	split_sreg_range(0XFFFC5FC6,"T",0X1,3);
	split_sreg_range(0XFFFC5FC8,"T",0X1,3);
	split_sreg_range(0XFFFC5FDE,"T",0X1,3);
	split_sreg_range(0XFFFC5FE2,"T",0X1,3);
	split_sreg_range(0XFFFC5FF0,"T",0X1,3);
	split_sreg_range(0XFFFC6020,"T",0X1,3);
	split_sreg_range(0XFFFC6034,"T",0X1,3);
	split_sreg_range(0XFFFC6038,"T",0X1,3);
	split_sreg_range(0XFFFC6042,"T",0X1,3);
	split_sreg_range(0XFFFC6060,"T",0X1,3);
	split_sreg_range(0XFFFC606E,"T",0X1,3);
	split_sreg_range(0XFFFC607C,"T",0X1,3);
	split_sreg_range(0XFFFC608A,"T",0X1,3);
	split_sreg_range(0XFFFC6098,"T",0X1,3);
	split_sreg_range(0XFFFC60B8,"T",0X1,3);
	split_sreg_range(0XFFFC60C6,"T",0X1,3);
	split_sreg_range(0XFFFC60D4,"T",0X1,3);
	split_sreg_range(0XFFFC6170,"T",0X1,3);
	split_sreg_range(0XFFFC61A2,"T",0X1,3);
	split_sreg_range(0XFFFC61E4,"T",0X1,3);
	split_sreg_range(0XFFFC620A,"T",0X1,3);
	split_sreg_range(0XFFFC6212,"T",0X1,3);
	split_sreg_range(0XFFFC6260,"T",0X1,3);
	split_sreg_range(0XFFFC626A,"T",0X1,3);
	split_sreg_range(0XFFFC629E,"T",0X1,3);
	split_sreg_range(0XFFFC62C0,"T",0X1,3);
	split_sreg_range(0XFFFC6330,"T",0X1,3);
	split_sreg_range(0XFFFC634E,"T",0X1,3);
	split_sreg_range(0XFFFC6360,"T",0X1,3);
	split_sreg_range(0XFFFC636A,"T",0X1,3);
	split_sreg_range(0XFFFC6374,"T",0X1,3);
	split_sreg_range(0XFFFC637E,"T",0X1,3);
	split_sreg_range(0XFFFC638E,"T",0X1,3);
	split_sreg_range(0XFFFC63A0,"T",0X1,3);
	split_sreg_range(0XFFFC63AA,"T",0X1,3);
	split_sreg_range(0XFFFC63AE,"T",0X1,3);
	split_sreg_range(0XFFFC63B8,"T",0X1,3);
	split_sreg_range(0XFFFC63C2,"T",0X1,3);
	split_sreg_range(0XFFFC63CC,"T",0X1,3);
	split_sreg_range(0XFFFC63D6,"T",0X1,3);
	split_sreg_range(0XFFFC63E0,"T",0X1,3);
	split_sreg_range(0XFFFC63EA,"T",0X1,3);
	split_sreg_range(0XFFFC63F4,"T",0X1,3);
	split_sreg_range(0XFFFC6400,"T",0X1,3);
	split_sreg_range(0XFFFC6418,"T",0X1,3);
	split_sreg_range(0XFFFC6424,"T",0X1,3);
	split_sreg_range(0XFFFC644A,"T",0X1,3);
	split_sreg_range(0XFFFC649C,"T",0X1,3);
	split_sreg_range(0XFFFC64A6,"T",0X1,3);
	split_sreg_range(0XFFFC64A8,"T",0X1,3);
	split_sreg_range(0XFFFC64AE,"T",0X1,3);
	split_sreg_range(0XFFFC64CC,"T",0X1,3);
	split_sreg_range(0XFFFC64DC,"T",0X1,3);
	split_sreg_range(0XFFFC64EC,"T",0X1,3);
	split_sreg_range(0XFFFC652E,"T",0X1,3);
	split_sreg_range(0XFFFC6532,"T",0X1,3);
	split_sreg_range(0XFFFC658A,"T",0X1,3);
	split_sreg_range(0XFFFC65A8,"T",0X1,3);
	split_sreg_range(0XFFFC65CC,"T",0X1,3);
	split_sreg_range(0XFFFC65D0,"T",0X1,3);
	split_sreg_range(0XFFFC661C,"T",0X1,3);
	split_sreg_range(0XFFFC662C,"T",0X1,3);
	split_sreg_range(0XFFFC663C,"T",0X1,3);
	split_sreg_range(0XFFFC665C,"T",0X1,3);
	split_sreg_range(0XFFFC6670,"T",0X1,3);
	split_sreg_range(0XFFFC66E6,"T",0X1,3);
	split_sreg_range(0XFFFC66F8,"T",0X1,3);
	split_sreg_range(0XFFFC6700,"T",0X1,3);
	split_sreg_range(0XFFFC671C,"T",0X1,3);
	split_sreg_range(0XFFFC6764,"T",0X1,3);
	split_sreg_range(0XFFFC6776,"T",0X1,3);
	split_sreg_range(0XFFFC678C,"T",0X1,3);
	split_sreg_range(0XFFFC6796,"T",0X1,3);
	split_sreg_range(0XFFFC67A0,"T",0X1,3);
	split_sreg_range(0XFFFC67AA,"T",0X1,3);
	split_sreg_range(0XFFFC67B4,"T",0X1,3);
	split_sreg_range(0XFFFC67FC,"T",0X1,3);
	split_sreg_range(0XFFFC68CC,"T",0X1,3);
	split_sreg_range(0XFFFC690E,"T",0X1,3);
	split_sreg_range(0XFFFC6932,"T",0X1,3);
	split_sreg_range(0XFFFC6958,"T",0X1,3);
	split_sreg_range(0XFFFC6A24,"T",0X1,3);
	split_sreg_range(0XFFFC6A64,"T",0X1,3);
	split_sreg_range(0XFFFC6A88,"T",0X1,3);
	split_sreg_range(0XFFFC6B2A,"T",0X1,3);
	split_sreg_range(0XFFFC6B48,"T",0X1,3);
	split_sreg_range(0XFFFC6B98,"T",0X1,3);
	split_sreg_range(0XFFFC6BC6,"T",0X1,3);
	split_sreg_range(0XFFFC6BCE,"T",0X1,3);
	split_sreg_range(0XFFFC6BE0,"T",0X1,3);
	split_sreg_range(0XFFFC6BF8,"T",0X1,3);
	split_sreg_range(0XFFFC6C12,"T",0X1,3);
	split_sreg_range(0XFFFC6C40,"T",0X1,3);
	split_sreg_range(0XFFFC6C4C,"T",0X1,3);
	split_sreg_range(0XFFFC6C52,"T",0X1,3);
	split_sreg_range(0XFFFC6C64,"T",0X1,3);
	split_sreg_range(0XFFFC6CCA,"T",0X1,3);
	split_sreg_range(0XFFFC6CD2,"T",0X1,3);
	split_sreg_range(0XFFFC6D24,"T",0X1,3);
	split_sreg_range(0XFFFC6D28,"T",0X1,3);
	split_sreg_range(0XFFFC6D2E,"T",0X1,3);
	split_sreg_range(0XFFFC6D70,"T",0X1,3);
	split_sreg_range(0XFFFC6D94,"T",0X1,3);
	split_sreg_range(0XFFFC6DB8,"T",0X1,3);
	split_sreg_range(0XFFFC6DDC,"T",0X1,3);
	split_sreg_range(0XFFFC6E2A,"T",0X1,3);
	split_sreg_range(0XFFFC6E50,"T",0X1,3);
	split_sreg_range(0XFFFC6EA8,"T",0X1,3);
	split_sreg_range(0XFFFC71BC,"T",0X1,3);
	split_sreg_range(0XFFFC7252,"T",0X1,3);
	split_sreg_range(0XFFFC7274,"T",0X1,3);
	split_sreg_range(0XFFFC7298,"T",0X1,3);
	split_sreg_range(0XFFFC72D6,"T",0X1,3);
	split_sreg_range(0XFFFC72E2,"T",0X1,3);
	split_sreg_range(0XFFFC72F2,"T",0X1,3);
	split_sreg_range(0XFFFC730A,"T",0X1,3);
	split_sreg_range(0XFFFC731C,"T",0X1,3);
	split_sreg_range(0XFFFC7340,"T",0X1,3);
	split_sreg_range(0XFFFC7364,"T",0X1,3);
	split_sreg_range(0XFFFC7388,"T",0X1,3);
	split_sreg_range(0XFFFC73AE,"T",0X1,3);
	split_sreg_range(0XFFFC73C2,"T",0X1,3);
	split_sreg_range(0XFFFC7446,"T",0X1,3);
	split_sreg_range(0XFFFC74A4,"T",0X1,3);
	split_sreg_range(0XFFFC74B2,"T",0X1,3);
	split_sreg_range(0XFFFC74BC,"T",0X1,3);
	split_sreg_range(0XFFFC74F4,"T",0X1,3);
	split_sreg_range(0XFFFC7514,"T",0X1,3);
	split_sreg_range(0XFFFC752E,"T",0X1,3);
	split_sreg_range(0XFFFC7558,"T",0X1,3);
	split_sreg_range(0XFFFC7572,"T",0X1,3);
	split_sreg_range(0XFFFC7584,"T",0X1,3);
	split_sreg_range(0XFFFC7596,"T",0X1,3);
	split_sreg_range(0XFFFC75A0,"T",0X1,3);
	split_sreg_range(0XFFFC7606,"T",0X1,3);
	split_sreg_range(0XFFFC7618,"T",0X1,3);
	split_sreg_range(0XFFFC7646,"T",0X1,3);
	split_sreg_range(0XFFFC77E6,"T",0X1,3);
	split_sreg_range(0XFFFC7816,"T",0X1,3);
	split_sreg_range(0XFFFC7824,"T",0X1,3);
	split_sreg_range(0XFFFC783A,"T",0X1,3);
	split_sreg_range(0XFFFC7846,"T",0X1,3);
	split_sreg_range(0XFFFC7886,"T",0X1,3);
	split_sreg_range(0XFFFC78D4,"T",0X1,3);
	split_sreg_range(0XFFFC7900,"T",0X1,3);
	split_sreg_range(0XFFFC7902,"T",0X1,3);
	split_sreg_range(0XFFFC7918,"T",0X1,3);
	split_sreg_range(0XFFFC7952,"T",0X1,3);
	split_sreg_range(0XFFFC797A,"T",0X1,3);
	split_sreg_range(0XFFFC79B2,"T",0X1,3);
	split_sreg_range(0XFFFC79F2,"T",0X1,3);
	split_sreg_range(0XFFFC7A30,"T",0X1,3);
	split_sreg_range(0XFFFC7A40,"T",0X1,3);
	split_sreg_range(0XFFFC7A64,"T",0X1,3);
	split_sreg_range(0XFFFC7A7A,"T",0X1,3);
	split_sreg_range(0XFFFC7A90,"T",0X1,3);
	split_sreg_range(0XFFFC7A98,"T",0X1,3);
	split_sreg_range(0XFFFC7B04,"T",0X1,3);
	split_sreg_range(0XFFFC7B3E,"T",0X1,3);
	split_sreg_range(0XFFFC7B68,"T",0X1,3);
	split_sreg_range(0XFFFC7BA4,"T",0X1,3);
	split_sreg_range(0XFFFC7BAC,"T",0X1,3);
	split_sreg_range(0XFFFC7BD0,"T",0X1,3);
	split_sreg_range(0XFFFC7BF4,"T",0X1,3);
	split_sreg_range(0XFFFC7C18,"T",0X1,3);
	split_sreg_range(0XFFFC7C3C,"T",0X1,3);
	split_sreg_range(0XFFFC7C60,"T",0X1,3);
	split_sreg_range(0XFFFC7C84,"T",0X1,3);
	split_sreg_range(0XFFFC7CA8,"T",0X1,3);
	split_sreg_range(0XFFFC7CCC,"T",0X1,3);
	split_sreg_range(0XFFFC7CF0,"T",0X1,3);
	split_sreg_range(0XFFFC7D14,"T",0X1,3);
	split_sreg_range(0XFFFC7D38,"T",0X1,3);
	split_sreg_range(0XFFFC7D5C,"T",0X1,3);
	split_sreg_range(0XFFFC7D80,"T",0X1,3);
	split_sreg_range(0XFFFC7DA4,"T",0X1,3);
	split_sreg_range(0XFFFC7DC8,"T",0X1,3);
	split_sreg_range(0XFFFC7DEC,"T",0X1,3);
	split_sreg_range(0XFFFC7E10,"T",0X1,3);
	split_sreg_range(0XFFFC7E34,"T",0X1,3);
	split_sreg_range(0XFFFC7EFC,"T",0X1,3);
	split_sreg_range(0XFFFC7F20,"T",0X1,3);
	split_sreg_range(0XFFFC7F44,"T",0X1,3);
	split_sreg_range(0XFFFC7FF0,"T",0X1,3);
	split_sreg_range(0XFFFC8014,"T",0X1,3);
	split_sreg_range(0XFFFC8038,"T",0X1,3);
	split_sreg_range(0XFFFC805C,"T",0X1,3);
	split_sreg_range(0XFFFC807E,"T",0X1,3);
	split_sreg_range(0XFFFC8086,"T",0X1,3);
	split_sreg_range(0XFFFC80A2,"T",0X1,3);
	split_sreg_range(0XFFFC80A4,"T",0X1,3);
	split_sreg_range(0XFFFC80CE,"T",0X1,3);
	split_sreg_range(0XFFFC80DC,"T",0X1,3);
	split_sreg_range(0XFFFC80F8,"T",0X1,3);
	split_sreg_range(0XFFFC8164,"T",0X1,3);
	split_sreg_range(0XFFFC8170,"T",0X1,3);
	split_sreg_range(0XFFFC8194,"T",0X1,3);
	split_sreg_range(0XFFFC81C0,"T",0X1,3);
	split_sreg_range(0XFFFC81E4,"T",0X1,3);
	split_sreg_range(0XFFFC8210,"T",0X1,3);
	split_sreg_range(0XFFFC8230,"T",0X1,3);
	split_sreg_range(0XFFFC8288,"T",0X1,3);
	split_sreg_range(0XFFFC82A8,"T",0X1,3);
	split_sreg_range(0XFFFC82C8,"T",0X1,3);
	split_sreg_range(0XFFFC82EC,"T",0X1,3);
	split_sreg_range(0XFFFC8312,"T",0X1,3);
	split_sreg_range(0XFFFC8324,"T",0X1,3);
	split_sreg_range(0XFFFC8348,"T",0X1,3);
	split_sreg_range(0XFFFC8378,"T",0X1,3);
	split_sreg_range(0XFFFC838C,"T",0X1,3);
	split_sreg_range(0XFFFC839C,"T",0X1,3);
	split_sreg_range(0XFFFC83A4,"T",0X1,3);
	split_sreg_range(0XFFFC83B8,"T",0X1,3);
	split_sreg_range(0XFFFC83C4,"T",0X1,3);
	split_sreg_range(0XFFFC83E4,"T",0X1,3);
	split_sreg_range(0XFFFC843C,"T",0X1,3);
	split_sreg_range(0XFFFC8442,"T",0X1,3);
	split_sreg_range(0XFFFC848E,"T",0X1,3);
	split_sreg_range(0XFFFC84B2,"T",0X1,3);
	split_sreg_range(0XFFFC84E4,"T",0X1,3);
	split_sreg_range(0XFFFC84F0,"T",0X1,3);
	split_sreg_range(0XFFFC84FC,"T",0X1,3);
	split_sreg_range(0XFFFC8516,"T",0X1,3);
	split_sreg_range(0XFFFC8534,"T",0X1,3);
	split_sreg_range(0XFFFC8540,"T",0X1,3);
	split_sreg_range(0XFFFC8544,"T",0X1,3);
	split_sreg_range(0XFFFC8550,"T",0X1,3);
	split_sreg_range(0XFFFC8560,"T",0X1,3);
	split_sreg_range(0XFFFC8570,"T",0X1,3);
	split_sreg_range(0XFFFC8588,"T",0X1,3);
	split_sreg_range(0XFFFC85A4,"T",0X1,3);
	split_sreg_range(0XFFFC85B0,"T",0X1,3);
	split_sreg_range(0XFFFC85D4,"T",0X1,3);
	split_sreg_range(0XFFFC85E0,"T",0X1,3);
	split_sreg_range(0XFFFC860E,"T",0X1,3);
	split_sreg_range(0XFFFC861A,"T",0X1,3);
	split_sreg_range(0XFFFC864E,"T",0X1,3);
	split_sreg_range(0XFFFC865A,"T",0X1,3);
	split_sreg_range(0XFFFC875C,"T",0X1,3);
	split_sreg_range(0XFFFC8766,"T",0X1,3);
	split_sreg_range(0XFFFC877E,"T",0X1,3);
	split_sreg_range(0XFFFC8794,"T",0X1,3);
	split_sreg_range(0XFFFC87F4,"T",0X1,3);
	split_sreg_range(0XFFFC8804,"T",0X1,3);
	split_sreg_range(0XFFFC8808,"T",0X1,3);
	split_sreg_range(0XFFFC8850,"T",0X1,3);
	split_sreg_range(0XFFFC8856,"T",0X1,3);
	split_sreg_range(0XFFFC885C,"T",0X1,3);
	split_sreg_range(0XFFFC88AC,"T",0X1,3);
	split_sreg_range(0XFFFC88E0,"T",0X1,3);
	split_sreg_range(0XFFFC88E6,"T",0X1,3);
	split_sreg_range(0XFFFC8904,"T",0X1,3);
	split_sreg_range(0XFFFC894A,"T",0X1,3);
	split_sreg_range(0XFFFC8978,"T",0X1,3);
	split_sreg_range(0XFFFC897E,"T",0X1,3);
	split_sreg_range(0XFFFC8984,"T",0X1,3);
	split_sreg_range(0XFFFC8996,"T",0X1,3);
	split_sreg_range(0XFFFC89CA,"T",0X1,3);
	split_sreg_range(0XFFFC89D0,"T",0X1,3);
	split_sreg_range(0XFFFC8A0A,"T",0X1,3);
	split_sreg_range(0XFFFC8A1A,"T",0X1,3);
	split_sreg_range(0XFFFC8A34,"T",0X1,3);
	split_sreg_range(0XFFFC8A3E,"T",0X1,3);
	split_sreg_range(0XFFFC8A42,"T",0X1,3);
	split_sreg_range(0XFFFC8A96,"T",0X1,3);
	split_sreg_range(0XFFFC8ABA,"T",0X1,3);
	split_sreg_range(0XFFFC8ADE,"T",0X1,3);
	split_sreg_range(0XFFFC8B02,"T",0X1,3);
	split_sreg_range(0XFFFC8B34,"T",0X1,3);
	split_sreg_range(0XFFFC8B64,"T",0X1,3);
	split_sreg_range(0XFFFC8B88,"T",0X1,3);
	split_sreg_range(0XFFFC8BAC,"T",0X1,3);
	split_sreg_range(0XFFFC8BE4,"T",0X1,3);
	split_sreg_range(0XFFFC8BF6,"T",0X1,3);
	split_sreg_range(0XFFFC8C00,"T",0X1,3);
	split_sreg_range(0XFFFC8C04,"T",0X1,3);
	split_sreg_range(0XFFFC8C1C,"T",0X1,3);
	split_sreg_range(0XFFFC8C22,"T",0X1,3);
	split_sreg_range(0XFFFC8C48,"T",0X1,3);
	split_sreg_range(0XFFFC8C4C,"T",0X1,3);
	split_sreg_range(0XFFFC8C54,"T",0X1,3);
	split_sreg_range(0XFFFC8C5C,"T",0X1,3);
	split_sreg_range(0XFFFC8C9C,"T",0X1,3);
	split_sreg_range(0XFFFC8CDA,"T",0X1,3);
	split_sreg_range(0XFFFC8CFC,"T",0X1,3);
	split_sreg_range(0XFFFC8D92,"T",0X1,3);
	split_sreg_range(0XFFFC8DEE,"T",0X1,3);
	split_sreg_range(0XFFFC8E10,"T",0X1,3);
	split_sreg_range(0XFFFC8F56,"T",0X1,3);
	split_sreg_range(0XFFFC8F7A,"T",0X1,3);
	split_sreg_range(0XFFFC8F9C,"T",0X1,3);
	split_sreg_range(0XFFFC8FBE,"T",0X1,3);
	split_sreg_range(0XFFFC8FE2,"T",0X1,3);
	split_sreg_range(0XFFFC9008,"T",0X1,3);
	split_sreg_range(0XFFFC909C,"T",0X1,3);
	split_sreg_range(0XFFFC90F0,"T",0X1,3);
	split_sreg_range(0XFFFC916A,"T",0X1,3);
	split_sreg_range(0XFFFC91E4,"T",0X1,3);
	split_sreg_range(0XFFFC91FA,"T",0X1,3);
	split_sreg_range(0XFFFC9210,"T",0X1,3);
	split_sreg_range(0XFFFC9234,"T",0X1,3);
	split_sreg_range(0XFFFC924C,"T",0X1,3);
	split_sreg_range(0XFFFC9294,"T",0X1,3);
	split_sreg_range(0XFFFC929C,"T",0X1,3);
	split_sreg_range(0XFFFC92E8,"T",0X1,3);
	split_sreg_range(0XFFFC92EE,"T",0X1,3);
	split_sreg_range(0XFFFC9300,"T",0X1,3);
	split_sreg_range(0XFFFC930A,"T",0X1,3);
	split_sreg_range(0XFFFC9312,"T",0X1,3);
	split_sreg_range(0XFFFC935E,"T",0X1,3);
	split_sreg_range(0XFFFC9364,"T",0X1,3);
	split_sreg_range(0XFFFC9368,"T",0X1,3);
	split_sreg_range(0XFFFC936C,"T",0X1,3);
	split_sreg_range(0XFFFC9390,"T",0X1,3);
	split_sreg_range(0XFFFC93B4,"T",0X1,3);
	split_sreg_range(0XFFFC93D0,"T",0X1,3);
	split_sreg_range(0XFFFC93F8,"T",0X1,3);
	split_sreg_range(0XFFFC942C,"T",0X1,3);
	split_sreg_range(0XFFFC9430,"T",0X1,3);
	split_sreg_range(0XFFFC9448,"T",0X1,3);
	split_sreg_range(0XFFFC9478,"T",0X1,3);
	split_sreg_range(0XFFFC947A,"T",0X1,3);
	split_sreg_range(0XFFFC9480,"T",0X1,3);
	split_sreg_range(0XFFFC9490,"T",0X1,3);
	split_sreg_range(0XFFFC9498,"T",0X1,3);
	split_sreg_range(0XFFFC94D6,"T",0X1,3);
	split_sreg_range(0XFFFC94F2,"T",0X1,3);
	split_sreg_range(0XFFFC951C,"T",0X1,3);
	split_sreg_range(0XFFFC952E,"T",0X1,3);
	split_sreg_range(0XFFFC955E,"T",0X1,3);
	split_sreg_range(0XFFFC9566,"T",0X1,3);
	split_sreg_range(0XFFFC9568,"T",0X1,3);
	split_sreg_range(0XFFFC9570,"T",0X1,3);
	split_sreg_range(0XFFFC9592,"T",0X1,3);
	split_sreg_range(0XFFFC9598,"T",0X1,3);
	split_sreg_range(0XFFFC95D6,"T",0X1,3);
	split_sreg_range(0XFFFC95E2,"T",0X1,3);
	split_sreg_range(0XFFFC95E8,"T",0X1,3);
	split_sreg_range(0XFFFC9600,"T",0X1,3);
	split_sreg_range(0XFFFC962E,"T",0X1,3);
	split_sreg_range(0XFFFC9636,"T",0X1,3);
	split_sreg_range(0XFFFC9650,"T",0X1,3);
	split_sreg_range(0XFFFC9666,"T",0X1,3);
	split_sreg_range(0XFFFC9682,"T",0X1,3);
	split_sreg_range(0XFFFC968A,"T",0X1,3);
	split_sreg_range(0XFFFC968C,"T",0X1,3);
	split_sreg_range(0XFFFC96B2,"T",0X1,3);
	split_sreg_range(0XFFFC96B8,"T",0X1,3);
	split_sreg_range(0XFFFC9706,"T",0X1,3);
	split_sreg_range(0XFFFC9740,"T",0X1,3);
	split_sreg_range(0XFFFC976C,"T",0X1,3);
	split_sreg_range(0XFFFC977A,"T",0X1,3);
	split_sreg_range(0XFFFC97A0,"T",0X1,3);
	split_sreg_range(0XFFFC97BC,"T",0X1,3);
	split_sreg_range(0XFFFC97CC,"T",0X1,3);
	split_sreg_range(0XFFFC97F0,"T",0X1,3);
	split_sreg_range(0XFFFC97F2,"T",0X1,3);
	split_sreg_range(0XFFFC97FA,"T",0X1,3);
	split_sreg_range(0XFFFC9810,"T",0X1,3);
	split_sreg_range(0XFFFC981C,"T",0X1,3);
	split_sreg_range(0XFFFC9828,"T",0X1,3);
	split_sreg_range(0XFFFC984E,"T",0X1,3);
	split_sreg_range(0XFFFC985E,"T",0X1,3);
	split_sreg_range(0XFFFC9896,"T",0X1,3);
	split_sreg_range(0XFFFC98AA,"T",0X1,3);
	split_sreg_range(0XFFFC98BC,"T",0X1,3);
	split_sreg_range(0XFFFC98D0,"T",0X1,3);
	split_sreg_range(0XFFFC98E2,"T",0X1,3);
	split_sreg_range(0XFFFC98F4,"T",0X1,3);
	split_sreg_range(0XFFFC9908,"T",0X1,3);
	split_sreg_range(0XFFFC992A,"T",0X1,3);
	split_sreg_range(0XFFFC9954,"T",0X1,3);
	split_sreg_range(0XFFFC9956,"T",0X1,3);
	split_sreg_range(0XFFFC9974,"T",0X1,3);
	split_sreg_range(0XFFFC998E,"T",0X1,3);
	split_sreg_range(0XFFFC99AC,"T",0X1,3);
	split_sreg_range(0XFFFC99C8,"T",0X1,3);
	split_sreg_range(0XFFFC99DC,"T",0X1,3);
	split_sreg_range(0XFFFC99F0,"T",0X1,3);
	split_sreg_range(0XFFFC9A0C,"T",0X1,3);
	split_sreg_range(0XFFFC9A18,"T",0X1,3);
	split_sreg_range(0XFFFC9A20,"T",0X1,3);
	split_sreg_range(0XFFFC9A26,"T",0X1,3);
	split_sreg_range(0XFFFC9A4A,"T",0X1,3);
	split_sreg_range(0XFFFC9A50,"T",0X1,3);
	split_sreg_range(0XFFFC9A64,"T",0X1,3);
	split_sreg_range(0XFFFC9A6A,"T",0X1,3);
	split_sreg_range(0XFFFC9A7C,"T",0X1,3);
	split_sreg_range(0XFFFC9A88,"T",0X1,3);
	split_sreg_range(0XFFFC9AA0,"T",0X1,3);
	split_sreg_range(0XFFFC9AA6,"T",0X1,3);
	split_sreg_range(0XFFFC9B64,"T",0X1,3);
	split_sreg_range(0XFFFC9B78,"T",0X1,3);
	split_sreg_range(0XFFFC9B86,"T",0X1,3);
	split_sreg_range(0XFFFC9BC4,"T",0X1,3);
	split_sreg_range(0XFFFC9BD8,"T",0X1,3);
	split_sreg_range(0XFFFC9C5A,"T",0X1,3);
	split_sreg_range(0XFFFC9C68,"T",0X1,3);
	split_sreg_range(0XFFFC9C6E,"T",0X1,3);
	split_sreg_range(0XFFFC9C98,"T",0X1,3);
	split_sreg_range(0XFFFC9CC6,"T",0X1,3);
	split_sreg_range(0XFFFC9CD8,"T",0X1,3);
	split_sreg_range(0XFFFC9CE0,"T",0X1,3);
	split_sreg_range(0XFFFC9D32,"T",0X1,3);
	split_sreg_range(0XFFFC9D46,"T",0X1,3);
	split_sreg_range(0XFFFC9D60,"T",0X1,3);
	split_sreg_range(0XFFFC9E12,"T",0X1,3);
	split_sreg_range(0XFFFC9E48,"T",0X1,3);
	split_sreg_range(0XFFFC9ECA,"T",0X1,3);
	split_sreg_range(0XFFFC9F5C,"T",0X1,3);
	split_sreg_range(0XFFFC9F72,"T",0X1,3);
	split_sreg_range(0XFFFC9F78,"T",0X1,3);
	split_sreg_range(0XFFFC9F90,"T",0X1,3);
	split_sreg_range(0XFFFC9FAA,"T",0X1,3);
	split_sreg_range(0XFFFC9FB0,"T",0X1,3);
	split_sreg_range(0XFFFC9FB6,"T",0X1,3);
	split_sreg_range(0XFFFC9FBC,"T",0X1,3);
	split_sreg_range(0XFFFC9FD8,"T",0X1,3);
	split_sreg_range(0XFFFC9FDE,"T",0X1,3);
	split_sreg_range(0XFFFC9FF0,"T",0X1,3);
	split_sreg_range(0XFFFCA010,"T",0X1,3);
	split_sreg_range(0XFFFCA030,"T",0X1,3);
	split_sreg_range(0XFFFCA03C,"T",0X1,3);
	split_sreg_range(0XFFFCA05E,"T",0X1,3);
	split_sreg_range(0XFFFCA074,"T",0X1,3);
	split_sreg_range(0XFFFCA07C,"T",0X1,3);
	split_sreg_range(0XFFFCA0AA,"T",0X1,3);
	split_sreg_range(0XFFFCA0BA,"T",0X1,3);
	split_sreg_range(0XFFFCA0BE,"T",0X1,3);
	split_sreg_range(0XFFFCA0E6,"T",0X1,3);
	split_sreg_range(0XFFFCA0FE,"T",0X1,3);
	split_sreg_range(0XFFFCA132,"T",0X1,3);
	split_sreg_range(0XFFFCA190,"T",0X1,3);
	split_sreg_range(0XFFFCA19E,"T",0X1,3);
	split_sreg_range(0XFFFCA1B8,"T",0X1,3);
	split_sreg_range(0XFFFCA208,"T",0X1,3);
	split_sreg_range(0XFFFCA210,"T",0X1,3);
	split_sreg_range(0XFFFCA214,"T",0X1,3);
	split_sreg_range(0XFFFCA22E,"T",0X1,3);
	split_sreg_range(0XFFFCA240,"T",0X1,3);
	split_sreg_range(0XFFFCA260,"T",0X1,3);
	split_sreg_range(0XFFFCA270,"T",0X1,3);
	split_sreg_range(0XFFFCA280,"T",0X1,3);
	split_sreg_range(0XFFFCA30A,"T",0X1,3);
	split_sreg_range(0XFFFCA38C,"T",0X1,3);
	split_sreg_range(0XFFFCA39C,"T",0X1,3);
	split_sreg_range(0XFFFCA3A2,"T",0X1,3);
	split_sreg_range(0XFFFCA3B6,"T",0X1,3);
	split_sreg_range(0XFFFCA3C4,"T",0X1,3);
	split_sreg_range(0XFFFCA3D2,"T",0X1,3);
	split_sreg_range(0XFFFCA3E0,"T",0X1,3);
	split_sreg_range(0XFFFCA3EE,"T",0X1,3);
	split_sreg_range(0XFFFCA404,"T",0X1,3);
	split_sreg_range(0XFFFCA48A,"T",0X1,3);
	split_sreg_range(0XFFFCA490,"T",0X1,3);
	split_sreg_range(0XFFFCA498,"T",0X1,3);
	split_sreg_range(0XFFFCA49E,"T",0X1,3);
	split_sreg_range(0XFFFCA4B2,"T",0X1,3);
	split_sreg_range(0XFFFCA4C2,"T",0X1,3);
	split_sreg_range(0XFFFCA4D0,"T",0X1,3);
	split_sreg_range(0XFFFCA4DE,"T",0X1,3);
	split_sreg_range(0XFFFCA4E4,"T",0X1,3);
	split_sreg_range(0XFFFCA502,"T",0X1,3);
	split_sreg_range(0XFFFCA514,"T",0X1,3);
	split_sreg_range(0XFFFCA526,"T",0X1,3);
	split_sreg_range(0XFFFCA53A,"T",0X1,3);
	split_sreg_range(0XFFFCA550,"T",0X1,3);
	split_sreg_range(0XFFFCA556,"T",0X1,3);
	split_sreg_range(0XFFFCA55C,"T",0X1,3);
	split_sreg_range(0XFFFCA588,"T",0X1,3);
	split_sreg_range(0XFFFCA59E,"T",0X1,3);
	split_sreg_range(0XFFFCA5B4,"T",0X1,3);
	split_sreg_range(0XFFFCA620,"T",0X1,3);
	split_sreg_range(0XFFFCA62C,"T",0X1,3);
	split_sreg_range(0XFFFCA632,"T",0X1,3);
	split_sreg_range(0XFFFCA638,"T",0X1,3);
	split_sreg_range(0XFFFCA640,"T",0X1,3);
	split_sreg_range(0XFFFCA64C,"T",0X1,3);
	split_sreg_range(0XFFFCA65C,"T",0X1,3);
	split_sreg_range(0XFFFCA684,"T",0X1,3);
	split_sreg_range(0XFFFCA692,"T",0X1,3);
	split_sreg_range(0XFFFCA6A4,"T",0X1,3);
	split_sreg_range(0XFFFCA6B8,"T",0X1,3);
	split_sreg_range(0XFFFCA6E8,"T",0X1,3);
	split_sreg_range(0XFFFCA6F6,"T",0X1,3);
	split_sreg_range(0XFFFCA708,"T",0X1,3);
	split_sreg_range(0XFFFCA71C,"T",0X1,3);
	split_sreg_range(0XFFFCA74E,"T",0X1,3);
	split_sreg_range(0XFFFCA76A,"T",0X1,3);
	split_sreg_range(0XFFFCA776,"T",0X1,3);
	split_sreg_range(0XFFFCA77C,"T",0X1,3);
	split_sreg_range(0XFFFCA790,"T",0X1,3);
	split_sreg_range(0XFFFCA798,"T",0X1,3);
	split_sreg_range(0XFFFCA7C6,"T",0X1,3);
	split_sreg_range(0XFFFCA7E2,"T",0X1,3);
	split_sreg_range(0XFFFCA7F0,"T",0X1,3);
	split_sreg_range(0XFFFCA7F6,"T",0X1,3);
	split_sreg_range(0XFFFCA80A,"T",0X1,3);
	split_sreg_range(0XFFFCA810,"T",0X1,3);
	split_sreg_range(0XFFFCA840,"T",0X1,3);
	split_sreg_range(0XFFFCA852,"T",0X1,3);
	split_sreg_range(0XFFFCA860,"T",0X1,3);
	split_sreg_range(0XFFFCA868,"T",0X1,3);
	split_sreg_range(0XFFFCA89C,"T",0X1,3);
	split_sreg_range(0XFFFCA8AC,"T",0X1,3);
	split_sreg_range(0XFFFCA8B4,"T",0X1,3);
	split_sreg_range(0XFFFCA8BC,"T",0X1,3);
	split_sreg_range(0XFFFCA8E2,"T",0X1,3);
	split_sreg_range(0XFFFCA8F4,"T",0X1,3);
	split_sreg_range(0XFFFCA902,"T",0X1,3);
	split_sreg_range(0XFFFCA90A,"T",0X1,3);
	split_sreg_range(0XFFFCA93E,"T",0X1,3);
	split_sreg_range(0XFFFCA94E,"T",0X1,3);
	split_sreg_range(0XFFFCA956,"T",0X1,3);
	split_sreg_range(0XFFFCA960,"T",0X1,3);
	split_sreg_range(0XFFFCA9C4,"T",0X1,3);
	split_sreg_range(0XFFFCA9C8,"T",0X1,3);
	split_sreg_range(0XFFFCA9E4,"T",0X1,3);
	split_sreg_range(0XFFFCAA04,"T",0X1,3);
	split_sreg_range(0XFFFCAA12,"T",0X1,3);
	split_sreg_range(0XFFFCAA1A,"T",0X1,3);
	split_sreg_range(0XFFFCAA30,"T",0X1,3);
	split_sreg_range(0XFFFCAA44,"T",0X1,3);
	split_sreg_range(0XFFFCAA50,"T",0X1,3);
	split_sreg_range(0XFFFCAA5C,"T",0X1,3);
	split_sreg_range(0XFFFCAA68,"T",0X1,3);
	split_sreg_range(0XFFFCAAAA,"T",0X1,3);
	split_sreg_range(0XFFFCAAAC,"T",0X1,3);
	split_sreg_range(0XFFFCAABE,"T",0X1,3);
	split_sreg_range(0XFFFCAAD4,"T",0X1,3);
	split_sreg_range(0XFFFCAADC,"T",0X1,3);
	split_sreg_range(0XFFFCAB5A,"T",0X1,3);
	split_sreg_range(0XFFFCAB64,"T",0X1,3);
	split_sreg_range(0XFFFCAB8C,"T",0X1,3);
	split_sreg_range(0XFFFCABA2,"T",0X1,3);
	split_sreg_range(0XFFFCABA8,"T",0X1,3);
	split_sreg_range(0XFFFCABD8,"T",0X1,3);
	split_sreg_range(0XFFFCABDC,"T",0X1,3);
	split_sreg_range(0XFFFCAC28,"T",0X1,3);
	split_sreg_range(0XFFFCAC4C,"T",0X1,3);
	split_sreg_range(0XFFFCAC90,"T",0X1,3);
	split_sreg_range(0XFFFCACFC,"T",0X1,3);
	split_sreg_range(0XFFFCAD26,"T",0X1,3);
	split_sreg_range(0XFFFCAD44,"T",0X1,3);
	split_sreg_range(0XFFFCAD88,"T",0X1,3);
	split_sreg_range(0XFFFCADBA,"T",0X1,3);
	split_sreg_range(0XFFFCADC0,"T",0X1,3);
	split_sreg_range(0XFFFCADE0,"T",0X1,3);
	split_sreg_range(0XFFFCAE00,"T",0X1,3);
	split_sreg_range(0XFFFCAE24,"T",0X1,3);
	split_sreg_range(0XFFFCAEA8,"T",0X1,3);
	split_sreg_range(0XFFFCAEAE,"T",0X1,3);
	split_sreg_range(0XFFFCAED0,"T",0X1,3);
	split_sreg_range(0XFFFCAFE8,"T",0X1,3);
	split_sreg_range(0XFFFCAFEE,"T",0X1,3);
	split_sreg_range(0XFFFCB010,"T",0X1,3);
	split_sreg_range(0XFFFCB08C,"T",0X1,3);
	split_sreg_range(0XFFFCB09E,"T",0X1,3);
	split_sreg_range(0XFFFCB0A8,"T",0X1,3);
	split_sreg_range(0XFFFCB0CC,"T",0X1,3);
	split_sreg_range(0XFFFCB0D8,"T",0X1,3);
	split_sreg_range(0XFFFCB190,"T",0X1,3);
	split_sreg_range(0XFFFCB198,"T",0X1,3);
	split_sreg_range(0XFFFCB1A6,"T",0X1,3);
	split_sreg_range(0XFFFCB1C0,"T",0X1,3);
	split_sreg_range(0XFFFCB1D8,"T",0X1,3);
	split_sreg_range(0XFFFCB382,"T",0X1,3);
	split_sreg_range(0XFFFCB38C,"T",0X1,3);
	split_sreg_range(0XFFFCB3C0,"T",0X1,3);
	split_sreg_range(0XFFFCB3EC,"T",0X1,3);
	split_sreg_range(0XFFFCB3FE,"T",0X1,3);
	split_sreg_range(0XFFFCB418,"T",0X1,3);
	split_sreg_range(0XFFFCB420,"T",0X1,3);
	split_sreg_range(0XFFFCB422,"T",0X1,3);
	split_sreg_range(0XFFFCB42A,"T",0X1,3);
	split_sreg_range(0XFFFCB434,"T",0X1,3);
	split_sreg_range(0XFFFCB448,"T",0X1,3);
	split_sreg_range(0XFFFCB46E,"T",0X1,3);
	split_sreg_range(0XFFFCB476,"T",0X1,3);
	split_sreg_range(0XFFFCB47A,"T",0X1,3);
	split_sreg_range(0XFFFCB488,"T",0X1,3);
	split_sreg_range(0XFFFCB49C,"T",0X1,3);
	split_sreg_range(0XFFFCB4C4,"T",0X1,3);
	split_sreg_range(0XFFFCB4D8,"T",0X1,3);
	split_sreg_range(0XFFFCB4F2,"T",0X1,3);
	split_sreg_range(0XFFFCB4F8,"T",0X1,3);
	split_sreg_range(0XFFFCB500,"T",0X1,3);
	split_sreg_range(0XFFFCB502,"T",0X1,3);
	split_sreg_range(0XFFFCB51C,"T",0X1,3);
	split_sreg_range(0XFFFCB52E,"T",0X1,3);
	split_sreg_range(0XFFFCB54A,"T",0X1,3);
	split_sreg_range(0XFFFCB552,"T",0X1,3);
	split_sreg_range(0XFFFCB556,"T",0X1,3);
	split_sreg_range(0XFFFCB57C,"T",0X1,3);
	split_sreg_range(0XFFFCB580,"T",0X1,3);
	split_sreg_range(0XFFFCB5AC,"T",0X1,3);
	split_sreg_range(0XFFFCB5D4,"T",0X1,3);
	split_sreg_range(0XFFFCB5D8,"T",0X1,3);
	split_sreg_range(0XFFFCB626,"T",0X1,3);
	split_sreg_range(0XFFFCB62A,"T",0X1,3);
	split_sreg_range(0XFFFCB632,"T",0X1,3);
	split_sreg_range(0XFFFCB63C,"T",0X1,3);
	split_sreg_range(0XFFFCB658,"T",0X1,3);
	split_sreg_range(0XFFFCB66C,"T",0X1,3);
	split_sreg_range(0XFFFCB684,"T",0X1,3);
	split_sreg_range(0XFFFCB69C,"T",0X1,3);
	split_sreg_range(0XFFFCB6B4,"T",0X1,3);
	split_sreg_range(0XFFFCB704,"T",0X1,3);
	split_sreg_range(0XFFFCB70C,"T",0X1,3);
	split_sreg_range(0XFFFCB720,"T",0X1,3);
	split_sreg_range(0XFFFCB762,"T",0X1,3);
	split_sreg_range(0XFFFCB79E,"T",0X1,3);
	split_sreg_range(0XFFFCB7A4,"T",0X1,3);
	split_sreg_range(0XFFFCB7D0,"T",0X1,3);
	split_sreg_range(0XFFFCB7E4,"T",0X1,3);
	split_sreg_range(0XFFFCB7E8,"T",0X1,3);
	split_sreg_range(0XFFFCB7FA,"T",0X1,3);
	split_sreg_range(0XFFFCB808,"T",0X1,3);
	split_sreg_range(0XFFFCB828,"T",0X1,3);
	split_sreg_range(0XFFFCB83E,"T",0X1,3);
	split_sreg_range(0XFFFCB894,"T",0X1,3);
	split_sreg_range(0XFFFCB8A0,"T",0X1,3);
	split_sreg_range(0XFFFCB8A4,"T",0X1,3);
	split_sreg_range(0XFFFCB8BC,"T",0X1,3);
	split_sreg_range(0XFFFCB90C,"T",0X1,3);
	split_sreg_range(0XFFFCB914,"T",0X1,3);
	split_sreg_range(0XFFFCB91A,"T",0X1,3);
	split_sreg_range(0XFFFCB920,"T",0X1,3);
	split_sreg_range(0XFFFCB924,"T",0X1,3);
	split_sreg_range(0XFFFCB93A,"T",0X1,3);
	split_sreg_range(0XFFFCB988,"T",0X1,3);
	split_sreg_range(0XFFFCB994,"T",0X1,3);
	split_sreg_range(0XFFFCB996,"T",0X1,3);
	split_sreg_range(0XFFFCB9D4,"T",0X1,3);
	split_sreg_range(0XFFFCBA1E,"T",0X1,3);
	split_sreg_range(0XFFFCBA4C,"T",0X1,3);
	split_sreg_range(0XFFFCBA5A,"T",0X1,3);
	split_sreg_range(0XFFFCBAC8,"T",0X1,3);
	split_sreg_range(0XFFFCBAD4,"T",0X1,3);
	split_sreg_range(0XFFFCBB02,"T",0X1,3);
	split_sreg_range(0XFFFCBB08,"T",0X1,3);
	split_sreg_range(0XFFFCBB62,"T",0X1,3);
	split_sreg_range(0XFFFCBB64,"T",0X1,3);
	split_sreg_range(0XFFFCBB68,"T",0X1,3);
	split_sreg_range(0XFFFCBB6E,"T",0X1,3);
	split_sreg_range(0XFFFCBB74,"T",0X1,3);
	split_sreg_range(0XFFFCBB8C,"T",0X1,3);
	split_sreg_range(0XFFFCBBB4,"T",0X1,3);
	split_sreg_range(0XFFFCBBBC,"T",0X1,3);
	split_sreg_range(0XFFFCBBD4,"T",0X1,3);
	split_sreg_range(0XFFFCBBE6,"T",0X1,3);
	split_sreg_range(0XFFFCBBEC,"T",0X1,3);
	split_sreg_range(0XFFFCBBF0,"T",0X1,3);
	split_sreg_range(0XFFFCBBFC,"T",0X1,3);
	split_sreg_range(0XFFFCBC0A,"T",0X1,3);
	split_sreg_range(0XFFFCBC1A,"T",0X1,3);
	split_sreg_range(0XFFFCBC20,"T",0X1,3);
	split_sreg_range(0XFFFCBCC0,"T",0X1,3);
	split_sreg_range(0XFFFCBCF2,"T",0X1,3);
	split_sreg_range(0XFFFCBCF8,"T",0X1,3);
	split_sreg_range(0XFFFCBD46,"T",0X1,3);
	split_sreg_range(0XFFFCBD8C,"T",0X1,3);
	split_sreg_range(0XFFFCBDA0,"T",0X1,3);
	split_sreg_range(0XFFFCBDE4,"T",0X1,3);
	split_sreg_range(0XFFFCBDF0,"T",0X1,3);
	split_sreg_range(0XFFFCBDFC,"T",0X1,3);
	split_sreg_range(0XFFFCBE06,"T",0X1,3);
	split_sreg_range(0XFFFCBE14,"T",0X1,3);
	split_sreg_range(0XFFFCBE28,"T",0X1,3);
	split_sreg_range(0XFFFCBE58,"T",0X1,3);
	split_sreg_range(0XFFFCBE5C,"T",0X1,3);
	split_sreg_range(0XFFFCBE66,"T",0X1,3);
	split_sreg_range(0XFFFCBE74,"T",0X1,3);
	split_sreg_range(0XFFFCBE86,"T",0X1,3);
	split_sreg_range(0XFFFCBECA,"T",0X1,3);
	split_sreg_range(0XFFFCBECE,"T",0X1,3);
	split_sreg_range(0XFFFCBEE0,"T",0X1,3);
	split_sreg_range(0XFFFCBEEC,"T",0X1,3);
	split_sreg_range(0XFFFCBEF4,"T",0X1,3);
	split_sreg_range(0XFFFCBF70,"T",0X1,3);
	split_sreg_range(0XFFFCBF76,"T",0X1,3);
	split_sreg_range(0XFFFCBF7C,"T",0X1,3);
	split_sreg_range(0XFFFCBFA0,"T",0X1,3);
	split_sreg_range(0XFFFCBFC0,"T",0X1,3);
	split_sreg_range(0XFFFCBFC8,"T",0X1,3);
	split_sreg_range(0XFFFCBFD2,"T",0X1,3);
	split_sreg_range(0XFFFCBFE2,"T",0X1,3);
	split_sreg_range(0XFFFCBFF4,"T",0X1,3);
	split_sreg_range(0XFFFCC014,"T",0X1,3);
	split_sreg_range(0XFFFCC022,"T",0X1,3);
	split_sreg_range(0XFFFCC02C,"T",0X1,3);
	split_sreg_range(0XFFFCC04A,"T",0X1,3);
	split_sreg_range(0XFFFCC0B0,"T",0X1,3);
	split_sreg_range(0XFFFCC0BC,"T",0X1,3);
	split_sreg_range(0XFFFCC0CC,"T",0X1,3);
	split_sreg_range(0XFFFCC0FA,"T",0X1,3);
	split_sreg_range(0XFFFCC122,"T",0X1,3);
	split_sreg_range(0XFFFCC12A,"T",0X1,3);
	split_sreg_range(0XFFFCC12E,"T",0X1,3);
	split_sreg_range(0XFFFCC140,"T",0X1,3);
	split_sreg_range(0XFFFCC15C,"T",0X1,3);
	split_sreg_range(0XFFFCC178,"T",0X1,3);
	split_sreg_range(0XFFFCC194,"T",0X1,3);
	split_sreg_range(0XFFFCC1A6,"T",0X1,3);
	split_sreg_range(0XFFFCC1CE,"T",0X1,3);
	split_sreg_range(0XFFFCC1D4,"T",0X1,3);
	split_sreg_range(0XFFFCC1E2,"T",0X1,3);
	split_sreg_range(0XFFFCC214,"T",0X1,3);
	split_sreg_range(0XFFFCC21E,"T",0X1,3);
	split_sreg_range(0XFFFCC220,"T",0X1,3);
	split_sreg_range(0XFFFCC226,"T",0X1,3);
	split_sreg_range(0XFFFCC22C,"T",0X1,3);
	split_sreg_range(0XFFFCC248,"T",0X1,3);
	split_sreg_range(0XFFFCC258,"T",0X1,3);
	split_sreg_range(0XFFFCC266,"T",0X1,3);
	split_sreg_range(0XFFFCC27C,"T",0X1,3);
	split_sreg_range(0XFFFCC286,"T",0X1,3);
	split_sreg_range(0XFFFCC294,"T",0X1,3);
	split_sreg_range(0XFFFCC2BA,"T",0X1,3);
	split_sreg_range(0XFFFCC368,"T",0X1,3);
	split_sreg_range(0XFFFCC374,"T",0X1,3);
	split_sreg_range(0XFFFCC388,"T",0X1,3);
	split_sreg_range(0XFFFCC390,"T",0X1,3);
	split_sreg_range(0XFFFCC398,"T",0X1,3);
	split_sreg_range(0XFFFCC3C6,"T",0X1,3);
	split_sreg_range(0XFFFCC3CC,"T",0X1,3);
	split_sreg_range(0XFFFCC3E4,"T",0X1,3);
	split_sreg_range(0XFFFCC464,"T",0X1,3);
	split_sreg_range(0XFFFCC468,"T",0X1,3);
	split_sreg_range(0XFFFCC476,"T",0X1,3);
	split_sreg_range(0XFFFCC47E,"T",0X1,3);
	split_sreg_range(0XFFFCC4A2,"T",0X1,3);
	split_sreg_range(0XFFFCC4B8,"T",0X1,3);
	split_sreg_range(0XFFFCC4EC,"T",0X1,3);
	split_sreg_range(0XFFFCC504,"T",0X1,3);
	split_sreg_range(0XFFFCC524,"T",0X1,3);
	split_sreg_range(0XFFFCC5A0,"T",0X1,3);
	split_sreg_range(0XFFFCC5A8,"T",0X1,3);
	split_sreg_range(0XFFFCC5BA,"T",0X1,3);
	split_sreg_range(0XFFFCC5C4,"T",0X1,3);
	split_sreg_range(0XFFFCC5E0,"T",0X1,3);
	split_sreg_range(0XFFFCC5E6,"T",0X1,3);
	split_sreg_range(0XFFFCC5FA,"T",0X1,3);
	split_sreg_range(0XFFFCC606,"T",0X1,3);
	split_sreg_range(0XFFFCC618,"T",0X1,3);
	split_sreg_range(0XFFFCC61E,"T",0X1,3);
	split_sreg_range(0XFFFCC630,"T",0X1,3);
	split_sreg_range(0XFFFCC63A,"T",0X1,3);
	split_sreg_range(0XFFFCC640,"T",0X1,3);
	split_sreg_range(0XFFFCC64C,"T",0X1,3);
	split_sreg_range(0XFFFCC652,"T",0X1,3);
	split_sreg_range(0XFFFCC656,"T",0X1,3);
	split_sreg_range(0XFFFCC66C,"T",0X1,3);
	split_sreg_range(0XFFFCC684,"T",0X1,3);
	split_sreg_range(0XFFFCC6FC,"T",0X1,3);
	split_sreg_range(0XFFFCC708,"T",0X1,3);
	split_sreg_range(0XFFFCC70C,"T",0X1,3);
	split_sreg_range(0XFFFCC720,"T",0X1,3);
	split_sreg_range(0XFFFCC72A,"T",0X1,3);
	split_sreg_range(0XFFFCC764,"T",0X1,3);
	split_sreg_range(0XFFFCC76C,"T",0X1,3);
	split_sreg_range(0XFFFCC7AC,"T",0X1,3);
	split_sreg_range(0XFFFCC7B8,"T",0X1,3);
	split_sreg_range(0XFFFCC7F6,"T",0X1,3);
	split_sreg_range(0XFFFCC800,"T",0X1,3);
	split_sreg_range(0XFFFCC842,"T",0X1,3);
	split_sreg_range(0XFFFCC84C,"T",0X1,3);
	split_sreg_range(0XFFFCC854,"T",0X1,3);
	split_sreg_range(0XFFFCC85E,"T",0X1,3);
	split_sreg_range(0XFFFCC86E,"T",0X1,3);
	split_sreg_range(0XFFFCC872,"T",0X1,3);
	split_sreg_range(0XFFFCC89E,"T",0X1,3);
	split_sreg_range(0XFFFCC8A8,"T",0X1,3);
	split_sreg_range(0XFFFCC8C8,"T",0X1,3);
	split_sreg_range(0XFFFCC8D2,"T",0X1,3);
	split_sreg_range(0XFFFCC8DA,"T",0X1,3);
	split_sreg_range(0XFFFCC8E4,"T",0X1,3);
	split_sreg_range(0XFFFCC8F2,"T",0X1,3);
	split_sreg_range(0XFFFCC8F6,"T",0X1,3);
	split_sreg_range(0XFFFCC8FA,"T",0X1,3);
	split_sreg_range(0XFFFCC900,"T",0X1,3);
	split_sreg_range(0XFFFCC906,"T",0X1,3);
	split_sreg_range(0XFFFCC90C,"T",0X1,3);
	split_sreg_range(0XFFFCC950,"T",0X1,3);
	split_sreg_range(0XFFFCC95A,"T",0X1,3);
	split_sreg_range(0XFFFCC976,"T",0X1,3);
	split_sreg_range(0XFFFCC998,"T",0X1,3);
	split_sreg_range(0XFFFCC9A2,"T",0X1,3);
	split_sreg_range(0XFFFCC9BC,"T",0X1,3);
	split_sreg_range(0XFFFCC9C8,"T",0X1,3);
	split_sreg_range(0XFFFCC9CE,"T",0X1,3);
	split_sreg_range(0XFFFCC9D2,"T",0X1,3);
	split_sreg_range(0XFFFCC9D8,"T",0X1,3);
	split_sreg_range(0XFFFCC9F8,"T",0X1,3);
	split_sreg_range(0XFFFCCA0C,"T",0X1,3);
	split_sreg_range(0XFFFCCA18,"T",0X1,3);
	split_sreg_range(0XFFFCCA1E,"T",0X1,3);
	split_sreg_range(0XFFFCCA34,"T",0X1,3);
	split_sreg_range(0XFFFCCA3A,"T",0X1,3);
	split_sreg_range(0XFFFCCA3E,"T",0X1,3);
	split_sreg_range(0XFFFCCA44,"T",0X1,3);
	split_sreg_range(0XFFFCCA68,"T",0X1,3);
	split_sreg_range(0XFFFCCAA0,"T",0X1,3);
	split_sreg_range(0XFFFCCAA6,"T",0X1,3);
	split_sreg_range(0XFFFCCAD0,"T",0X1,3);
	split_sreg_range(0XFFFCCADE,"T",0X1,3);
	split_sreg_range(0XFFFCCAE4,"T",0X1,3);
	split_sreg_range(0XFFFCCAF8,"T",0X1,3);
	split_sreg_range(0XFFFCCAFE,"T",0X1,3);
	split_sreg_range(0XFFFCCB1E,"T",0X1,3);
	split_sreg_range(0XFFFCCB3C,"T",0X1,3);
	split_sreg_range(0XFFFCCB44,"T",0X1,3);
	split_sreg_range(0XFFFCCB4A,"T",0X1,3);
	split_sreg_range(0XFFFCCB4E,"T",0X1,3);
	split_sreg_range(0XFFFCCB6C,"T",0X1,3);
	split_sreg_range(0XFFFCCB74,"T",0X1,3);
	split_sreg_range(0XFFFCCB78,"T",0X1,3);
	split_sreg_range(0XFFFCCB7C,"T",0X1,3);
	split_sreg_range(0XFFFCCBC6,"T",0X1,3);
	split_sreg_range(0XFFFCCBCA,"T",0X1,3);
	split_sreg_range(0XFFFCCC20,"T",0X1,3);
	split_sreg_range(0XFFFCCC30,"T",0X1,3);
	split_sreg_range(0XFFFCCC40,"T",0X1,3);
	split_sreg_range(0XFFFCCC44,"T",0X1,3);
	split_sreg_range(0XFFFCCC52,"T",0X1,3);
	split_sreg_range(0XFFFCCC54,"T",0X1,3);
	split_sreg_range(0XFFFCCC5E,"T",0X1,3);
	split_sreg_range(0XFFFCCC64,"T",0X1,3);
	split_sreg_range(0XFFFCCC82,"T",0X1,3);
	split_sreg_range(0XFFFCCC9C,"T",0X1,3);
	split_sreg_range(0XFFFCCCB8,"T",0X1,3);
	split_sreg_range(0XFFFCCCD4,"T",0X1,3);
	split_sreg_range(0XFFFCCCE0,"T",0X1,3);
	split_sreg_range(0XFFFCCCE8,"T",0X1,3);
	split_sreg_range(0XFFFCCD26,"T",0X1,3);
	split_sreg_range(0XFFFCCD68,"T",0X1,3);
	split_sreg_range(0XFFFCCDA6,"T",0X1,3);
	split_sreg_range(0XFFFCCDE4,"T",0X1,3);
	split_sreg_range(0XFFFCCDFC,"T",0X1,3);
	split_sreg_range(0XFFFCCE04,"T",0X1,3);
	split_sreg_range(0XFFFCCE28,"T",0X1,3);
	split_sreg_range(0XFFFCCE2C,"T",0X1,3);
	split_sreg_range(0XFFFCCEBE,"T",0X1,3);
	split_sreg_range(0XFFFCCEC2,"T",0X1,3);
	split_sreg_range(0XFFFCCF0C,"T",0X1,3);
	split_sreg_range(0XFFFCCF10,"T",0X1,3);
	split_sreg_range(0XFFFCCFAC,"T",0X1,3);
	split_sreg_range(0XFFFCCFD8,"T",0X1,3);
	split_sreg_range(0XFFFCCFE2,"T",0X1,3);
	split_sreg_range(0XFFFCD016,"T",0X1,3);
	split_sreg_range(0XFFFCD01A,"T",0X1,3);
	split_sreg_range(0XFFFCD038,"T",0X1,3);
	split_sreg_range(0XFFFCD03C,"T",0X1,3);
	split_sreg_range(0XFFFCD0BC,"T",0X1,3);
	split_sreg_range(0XFFFCD10A,"T",0X1,3);
	split_sreg_range(0XFFFCD136,"T",0X1,3);
	split_sreg_range(0XFFFCD14A,"T",0X1,3);
	split_sreg_range(0XFFFCD14E,"T",0X1,3);
	split_sreg_range(0XFFFCD1A2,"T",0X1,3);
	split_sreg_range(0XFFFCD1A4,"T",0X1,3);
	split_sreg_range(0XFFFCD1BE,"T",0X1,3);
	split_sreg_range(0XFFFCD1C8,"T",0X1,3);
	split_sreg_range(0XFFFCD1E6,"T",0X1,3);
	split_sreg_range(0XFFFCD1FC,"T",0X1,3);
	split_sreg_range(0XFFFCD1FE,"T",0X1,3);
	split_sreg_range(0XFFFCD20C,"T",0X1,3);
	split_sreg_range(0XFFFCD220,"T",0X1,3);
	split_sreg_range(0XFFFCD222,"T",0X1,3);
	split_sreg_range(0XFFFCD224,"T",0X1,3);
	split_sreg_range(0XFFFCD242,"T",0X1,3);
	split_sreg_range(0XFFFCD258,"T",0X1,3);
	split_sreg_range(0XFFFCD25A,"T",0X1,3);
	split_sreg_range(0XFFFCD268,"T",0X1,3);
	split_sreg_range(0XFFFCD27C,"T",0X1,3);
	split_sreg_range(0XFFFCD27E,"T",0X1,3);
	split_sreg_range(0XFFFCD280,"T",0X1,3);
	split_sreg_range(0XFFFCD288,"T",0X1,3);
	split_sreg_range(0XFFFCD296,"T",0X1,3);
	split_sreg_range(0XFFFCD298,"T",0X1,3);
	split_sreg_range(0XFFFCD2B2,"T",0X1,3);
	split_sreg_range(0XFFFCD2C4,"T",0X1,3);
	split_sreg_range(0XFFFCD2E0,"T",0X1,3);
	split_sreg_range(0XFFFCD2F2,"T",0X1,3);
	split_sreg_range(0XFFFCD2FC,"T",0X1,3);
	split_sreg_range(0XFFFCD300,"T",0X1,3);
	split_sreg_range(0XFFFCD306,"T",0X1,3);
	split_sreg_range(0XFFFCD31C,"T",0X1,3);
	split_sreg_range(0XFFFCD32A,"T",0X1,3);
	split_sreg_range(0XFFFCD34A,"T",0X1,3);
	split_sreg_range(0XFFFCD35A,"T",0X1,3);
	split_sreg_range(0XFFFCD366,"T",0X1,3);
	split_sreg_range(0XFFFCD384,"T",0X1,3);
	split_sreg_range(0XFFFCD390,"T",0X1,3);
	split_sreg_range(0XFFFCD392,"T",0X1,3);
	split_sreg_range(0XFFFCD3AC,"T",0X1,3);
	split_sreg_range(0XFFFCD3FC,"T",0X1,3);
	split_sreg_range(0XFFFCD416,"T",0X1,3);
	split_sreg_range(0XFFFCD422,"T",0X1,3);
	split_sreg_range(0XFFFCD438,"T",0X1,3);
	split_sreg_range(0XFFFCD446,"T",0X1,3);
	split_sreg_range(0XFFFCD454,"T",0X1,3);
	split_sreg_range(0XFFFCD464,"T",0X1,3);
	split_sreg_range(0XFFFCD4AE,"T",0X1,3);
	split_sreg_range(0XFFFCD4B8,"T",0X1,3);
	split_sreg_range(0XFFFCD4DE,"T",0X1,3);
	split_sreg_range(0XFFFCD4EA,"T",0X1,3);
	split_sreg_range(0XFFFCD506,"T",0X1,3);
	split_sreg_range(0XFFFCD51C,"T",0X1,3);
	split_sreg_range(0XFFFCD52C,"T",0X1,3);
	split_sreg_range(0XFFFCD56C,"T",0X1,3);
	split_sreg_range(0XFFFCD570,"T",0X1,3);
	split_sreg_range(0XFFFCD584,"T",0X1,3);
	split_sreg_range(0XFFFCD5DE,"T",0X1,3);
	split_sreg_range(0XFFFCD5F8,"T",0X1,3);
	split_sreg_range(0XFFFCD612,"T",0X1,3);
	split_sreg_range(0XFFFCD62C,"T",0X1,3);
	split_sreg_range(0XFFFCD68A,"T",0X1,3);
	split_sreg_range(0XFFFCD68C,"T",0X1,3);
	split_sreg_range(0XFFFCD6A6,"T",0X1,3);
	split_sreg_range(0XFFFCD6C0,"T",0X1,3);
	split_sreg_range(0XFFFCD71E,"T",0X1,3);
	split_sreg_range(0XFFFCD728,"T",0X1,3);
	split_sreg_range(0XFFFCD77C,"T",0X1,3);
	split_sreg_range(0XFFFCD78A,"T",0X1,3);
	split_sreg_range(0XFFFCD792,"T",0X1,3);
	split_sreg_range(0XFFFCD798,"T",0X1,3);
	split_sreg_range(0XFFFCD7B2,"T",0X1,3);
	split_sreg_range(0XFFFCD7CC,"T",0X1,3);
	split_sreg_range(0XFFFCD7E6,"T",0X1,3);
	split_sreg_range(0XFFFCD7FC,"T",0X1,3);
	split_sreg_range(0XFFFCD86C,"T",0X1,3);
	split_sreg_range(0XFFFCD874,"T",0X1,3);
	split_sreg_range(0XFFFCD888,"T",0X1,3);
	split_sreg_range(0XFFFCD8A2,"T",0X1,3);
	split_sreg_range(0XFFFCD8BC,"T",0X1,3);
	split_sreg_range(0XFFFCD93A,"T",0X1,3);
	split_sreg_range(0XFFFCD942,"T",0X1,3);
	split_sreg_range(0XFFFCD956,"T",0X1,3);
	split_sreg_range(0XFFFCD970,"T",0X1,3);
	split_sreg_range(0XFFFCD98C,"T",0X1,3);
	split_sreg_range(0XFFFCD9B0,"T",0X1,3);
	split_sreg_range(0XFFFCD9D4,"T",0X1,3);
	split_sreg_range(0XFFFCD9E6,"T",0X1,3);
	split_sreg_range(0XFFFCDA08,"T",0X1,3);
	split_sreg_range(0XFFFCDA2C,"T",0X1,3);
	split_sreg_range(0XFFFCDA6C,"T",0X1,3);
	split_sreg_range(0XFFFCDA86,"T",0X1,3);
	split_sreg_range(0XFFFCDAA2,"T",0X1,3);
	split_sreg_range(0XFFFCDAC4,"T",0X1,3);
	split_sreg_range(0XFFFCDADA,"T",0X1,3);
	split_sreg_range(0XFFFCDAE2,"T",0X1,3);
	split_sreg_range(0XFFFCDAE6,"T",0X1,3);
	split_sreg_range(0XFFFCDAEA,"T",0X1,3);
	split_sreg_range(0XFFFCDAF0,"T",0X1,3);
	split_sreg_range(0XFFFCDB24,"T",0X1,3);
	split_sreg_range(0XFFFCDB44,"T",0X1,3);
	split_sreg_range(0XFFFCDB5A,"T",0X1,3);
	split_sreg_range(0XFFFCDB62,"T",0X1,3);
	split_sreg_range(0XFFFCDB66,"T",0X1,3);
	split_sreg_range(0XFFFCDB6C,"T",0X1,3);
	split_sreg_range(0XFFFCDB9C,"T",0X1,3);
	split_sreg_range(0XFFFCDB9E,"T",0X1,3);
	split_sreg_range(0XFFFCDBA2,"T",0X1,3);
	split_sreg_range(0XFFFCDBCA,"T",0X1,3);
	split_sreg_range(0XFFFCDBD0,"T",0X1,3);
	split_sreg_range(0XFFFCDBF0,"T",0X1,3);
	split_sreg_range(0XFFFCDBF4,"T",0X1,3);
	split_sreg_range(0XFFFCDC14,"T",0X1,3);
	split_sreg_range(0XFFFCDC58,"T",0X1,3);
	split_sreg_range(0XFFFCDC68,"T",0X1,3);
	split_sreg_range(0XFFFCDC8C,"T",0X1,3);
	split_sreg_range(0XFFFCDC94,"T",0X1,3);
	split_sreg_range(0XFFFCDD08,"T",0X1,3);
	split_sreg_range(0XFFFCDD3A,"T",0X1,3);
	split_sreg_range(0XFFFCDD78,"T",0X1,3);
	split_sreg_range(0XFFFCDD80,"T",0X1,3);
	split_sreg_range(0XFFFCDDA2,"T",0X1,3);
	split_sreg_range(0XFFFCDDD6,"T",0X1,3);
	split_sreg_range(0XFFFCDDDA,"T",0X1,3);
	split_sreg_range(0XFFFCDDDC,"T",0X1,3);
	split_sreg_range(0XFFFCDDE2,"T",0X1,3);
	split_sreg_range(0XFFFCDE30,"T",0X1,3);
	split_sreg_range(0XFFFCDE84,"T",0X1,3);
	split_sreg_range(0XFFFCDEAA,"T",0X1,3);
	split_sreg_range(0XFFFCDEB4,"T",0X1,3);
	split_sreg_range(0XFFFCDEBA,"T",0X1,3);
	split_sreg_range(0XFFFCDF00,"T",0X1,3);
	split_sreg_range(0XFFFCDF4E,"T",0X1,3);
	split_sreg_range(0XFFFCDF84,"T",0X1,3);
	split_sreg_range(0XFFFCDF8A,"T",0X1,3);
	split_sreg_range(0XFFFCDF90,"T",0X1,3);
	split_sreg_range(0XFFFCDFC0,"T",0X1,3);
	split_sreg_range(0XFFFCDFDC,"T",0X1,3);
	split_sreg_range(0XFFFCDFE4,"T",0X1,3);
	split_sreg_range(0XFFFCDFF0,"T",0X1,3);
	split_sreg_range(0XFFFCDFF6,"T",0X1,3);
	split_sreg_range(0XFFFCDFF8,"T",0X1,3);
	split_sreg_range(0XFFFCE000,"T",0X1,3);
	split_sreg_range(0XFFFCE008,"T",0X1,3);
	split_sreg_range(0XFFFCE016,"T",0X1,3);
	split_sreg_range(0XFFFCE02C,"T",0X1,3);
	split_sreg_range(0XFFFCE062,"T",0X1,3);
	split_sreg_range(0XFFFCE09A,"T",0X1,3);
	split_sreg_range(0XFFFCE0A0,"T",0X1,3);
	split_sreg_range(0XFFFCE0D4,"T",0X1,3);
	split_sreg_range(0XFFFCE0D6,"T",0X1,3);
	split_sreg_range(0XFFFCE0F0,"T",0X1,3);
	split_sreg_range(0XFFFCE11A,"T",0X1,3);
	split_sreg_range(0XFFFCE12C,"T",0X1,3);
	split_sreg_range(0XFFFCE146,"T",0X1,3);
	split_sreg_range(0XFFFCE154,"T",0X1,3);
	split_sreg_range(0XFFFCE15C,"T",0X1,3);
	split_sreg_range(0XFFFCE16A,"T",0X1,3);
	split_sreg_range(0XFFFCE180,"T",0X1,3);
	split_sreg_range(0XFFFCE1BE,"T",0X1,3);
	split_sreg_range(0XFFFCE1D6,"T",0X1,3);
	split_sreg_range(0XFFFCE1E8,"T",0X1,3);
	split_sreg_range(0XFFFCE1EC,"T",0X1,3);
	split_sreg_range(0XFFFCE1FE,"T",0X1,3);
	split_sreg_range(0XFFFCE212,"T",0X1,3);
	split_sreg_range(0XFFFCE224,"T",0X1,3);
	split_sreg_range(0XFFFCE236,"T",0X1,3);
	split_sreg_range(0XFFFCE248,"T",0X1,3);
	split_sreg_range(0XFFFCE260,"T",0X1,3);
	split_sreg_range(0XFFFCE29C,"T",0X1,3);
	split_sreg_range(0XFFFCE2B0,"T",0X1,3);
	split_sreg_range(0XFFFCE2BA,"T",0X1,3);
	split_sreg_range(0XFFFCE2C8,"T",0X1,3);
	split_sreg_range(0XFFFCE2CC,"T",0X1,3);
	split_sreg_range(0XFFFCE2D0,"T",0X1,3);
	split_sreg_range(0XFFFCE2DE,"T",0X1,3);
	split_sreg_range(0XFFFCE2E4,"T",0X1,3);
	split_sreg_range(0XFFFCE2FA,"T",0X1,3);
	split_sreg_range(0XFFFCE316,"T",0X1,3);
	split_sreg_range(0XFFFCE342,"T",0X1,3);
	split_sreg_range(0XFFFCE362,"T",0X1,3);
	split_sreg_range(0XFFFCE3AC,"T",0X1,3);
	split_sreg_range(0XFFFCE3B6,"T",0X1,3);
	split_sreg_range(0XFFFCE3C8,"T",0X1,3);
	split_sreg_range(0XFFFCE3DA,"T",0X1,3);
	split_sreg_range(0XFFFCE3F0,"T",0X1,3);
	split_sreg_range(0XFFFCE406,"T",0X1,3);
	split_sreg_range(0XFFFCE41C,"T",0X1,3);
	split_sreg_range(0XFFFCE42E,"T",0X1,3);
	split_sreg_range(0XFFFCE444,"T",0X1,3);
	split_sreg_range(0XFFFCE450,"T",0X1,3);
	split_sreg_range(0XFFFCE46A,"T",0X1,3);
	split_sreg_range(0XFFFCE476,"T",0X1,3);
	split_sreg_range(0XFFFCE47A,"T",0X1,3);
	split_sreg_range(0XFFFCE48C,"T",0X1,3);
	split_sreg_range(0XFFFCE490,"T",0X1,3);
	split_sreg_range(0XFFFCE4A0,"T",0X1,3);
	split_sreg_range(0XFFFCE4C2,"T",0X1,3);
	split_sreg_range(0XFFFCE4D6,"T",0X1,3);
	split_sreg_range(0XFFFCE4E2,"T",0X1,3);
	split_sreg_range(0XFFFCE4EE,"T",0X1,3);
	split_sreg_range(0XFFFCE4F8,"T",0X1,3);
	split_sreg_range(0XFFFCE50E,"T",0X1,3);
	split_sreg_range(0XFFFCE51C,"T",0X1,3);
	split_sreg_range(0XFFFCE528,"T",0X1,3);
	split_sreg_range(0XFFFCE536,"T",0X1,3);
	split_sreg_range(0XFFFCE568,"T",0X1,3);
	split_sreg_range(0XFFFCE578,"T",0X1,3);
	split_sreg_range(0XFFFCE590,"T",0X1,3);
	split_sreg_range(0XFFFCE592,"T",0X1,3);
	split_sreg_range(0XFFFCE594,"T",0X1,3);
	split_sreg_range(0XFFFCE5D0,"T",0X1,3);
	split_sreg_range(0XFFFCE5E0,"T",0X1,3);
	split_sreg_range(0XFFFCE5EC,"T",0X1,3);
	split_sreg_range(0XFFFCE5FC,"T",0X1,3);
	split_sreg_range(0XFFFCE618,"T",0X1,3);
	split_sreg_range(0XFFFCE644,"T",0X1,3);
	split_sreg_range(0XFFFCE670,"T",0X1,3);
	split_sreg_range(0XFFFCE69C,"T",0X1,3);
	split_sreg_range(0XFFFCE6A4,"T",0X1,3);
	split_sreg_range(0XFFFCE6D0,"T",0X1,3);
	split_sreg_range(0XFFFCE6E6,"T",0X1,3);
	split_sreg_range(0XFFFCE6EC,"T",0X1,3);
	split_sreg_range(0XFFFCE708,"T",0X1,3);
	split_sreg_range(0XFFFCE710,"T",0X1,3);
	split_sreg_range(0XFFFCE720,"T",0X1,3);
	split_sreg_range(0XFFFCE726,"T",0X1,3);
	split_sreg_range(0XFFFCE72C,"T",0X1,3);
	split_sreg_range(0XFFFCE7F8,"T",0X1,3);
	split_sreg_range(0XFFFCE800,"T",0X1,3);
	split_sreg_range(0XFFFCE91C,"T",0X1,3);
	split_sreg_range(0XFFFCE960,"T",0X1,3);
	split_sreg_range(0XFFFCE98E,"T",0X1,3);
	split_sreg_range(0XFFFCE9E8,"T",0X1,3);
	split_sreg_range(0XFFFCEA36,"T",0X1,3);
	split_sreg_range(0XFFFCEA42,"T",0X1,3);
	split_sreg_range(0XFFFCEA48,"T",0X1,3);
	split_sreg_range(0XFFFCEA60,"T",0X1,3);
	split_sreg_range(0XFFFCEA84,"T",0X1,3);
	split_sreg_range(0XFFFCEB4E,"T",0X1,3);
	split_sreg_range(0XFFFCEB96,"T",0X1,3);
	split_sreg_range(0XFFFCEE5C,"T",0X1,3);
	split_sreg_range(0XFFFCEE8A,"T",0X1,3);
	split_sreg_range(0XFFFCEE98,"T",0X1,3);
	split_sreg_range(0XFFFCEEA6,"T",0X1,3);
	split_sreg_range(0XFFFCEED8,"T",0X1,3);
	split_sreg_range(0XFFFCEF02,"T",0X1,3);
	split_sreg_range(0XFFFCEF10,"T",0X1,3);
	split_sreg_range(0XFFFCEF1E,"T",0X1,3);
	split_sreg_range(0XFFFCEF38,"T",0X1,3);
	split_sreg_range(0XFFFCEF5A,"T",0X1,3);
	split_sreg_range(0XFFFCEF6C,"T",0X1,3);
	split_sreg_range(0XFFFCEF7A,"T",0X1,3);
	split_sreg_range(0XFFFCEF88,"T",0X1,3);
	split_sreg_range(0XFFFCEF96,"T",0X1,3);
	split_sreg_range(0XFFFCEFB8,"T",0X1,3);
	split_sreg_range(0XFFFCEFC8,"T",0X1,3);
	split_sreg_range(0XFFFCEFF8,"T",0X1,3);
	split_sreg_range(0XFFFCF02E,"T",0X1,3);
	split_sreg_range(0XFFFCF032,"T",0X1,3);
	split_sreg_range(0XFFFCF03E,"T",0X1,3);
	split_sreg_range(0XFFFCF046,"T",0X1,3);
	split_sreg_range(0XFFFCF0AA,"T",0X1,3);
	split_sreg_range(0XFFFCF0AE,"T",0X1,3);
	split_sreg_range(0XFFFCF0C2,"T",0X1,3);
	split_sreg_range(0XFFFCF0DA,"T",0X1,3);
	split_sreg_range(0XFFFCF1E2,"T",0X1,3);
	split_sreg_range(0XFFFCF2EE,"T",0X1,3);
	split_sreg_range(0XFFFCF2FC,"T",0X1,3);
	split_sreg_range(0XFFFCF562,"T",0X1,3);
	split_sreg_range(0XFFFCF5BA,"T",0X1,3);
	split_sreg_range(0XFFFCF5CE,"T",0X1,3);
	split_sreg_range(0XFFFCF5DC,"T",0X1,3);
	split_sreg_range(0XFFFCF5EA,"T",0X1,3);
	split_sreg_range(0XFFFCF5F8,"T",0X1,3);
	split_sreg_range(0XFFFCF600,"T",0X1,3);
	split_sreg_range(0XFFFCF62C,"T",0X1,3);
	split_sreg_range(0XFFFCF634,"T",0X1,3);
	split_sreg_range(0XFFFCF652,"T",0X1,3);
	split_sreg_range(0XFFFCF65C,"T",0X1,3);
	split_sreg_range(0XFFFCF694,"T",0X1,3);
	split_sreg_range(0XFFFCF69C,"T",0X1,3);
	split_sreg_range(0XFFFCF6D4,"T",0X1,3);
	split_sreg_range(0XFFFCF6DC,"T",0X1,3);
	split_sreg_range(0XFFFCF702,"T",0X1,3);
	split_sreg_range(0XFFFCF70C,"T",0X1,3);
	split_sreg_range(0XFFFCF71C,"T",0X1,3);
	split_sreg_range(0XFFFCF720,"T",0X1,3);
	split_sreg_range(0XFFFCF72E,"T",0X1,3);
	split_sreg_range(0XFFFCF734,"T",0X1,3);
	split_sreg_range(0XFFFCF754,"T",0X1,3);
	split_sreg_range(0XFFFCF760,"T",0X1,3);
	split_sreg_range(0XFFFCF768,"T",0X1,3);
	split_sreg_range(0XFFFCF7A0,"T",0X1,3);
	split_sreg_range(0XFFFCF7A8,"T",0X1,3);
	split_sreg_range(0XFFFCF7B0,"T",0X1,3);
	split_sreg_range(0XFFFCF7B8,"T",0X1,3);
	split_sreg_range(0XFFFCF7C0,"T",0X1,3);
	split_sreg_range(0XFFFCF7F4,"T",0X1,3);
	split_sreg_range(0XFFFCF7FC,"T",0X1,3);
	split_sreg_range(0XFFFCF82C,"T",0X1,3);
	split_sreg_range(0XFFFCF844,"T",0X1,3);
	split_sreg_range(0XFFFCF84C,"T",0X1,3);
	split_sreg_range(0XFFFCF864,"T",0X1,3);
	split_sreg_range(0XFFFCF8BE,"T",0X1,3);
	split_sreg_range(0XFFFCF8F4,"T",0X1,3);
	split_sreg_range(0XFFFCF93A,"T",0X1,3);
	split_sreg_range(0XFFFCF962,"T",0X1,3);
	split_sreg_range(0XFFFCF968,"T",0X1,3);
	split_sreg_range(0XFFFCF9AC,"T",0X1,3);
	split_sreg_range(0XFFFCF9B0,"T",0X1,3);
	split_sreg_range(0XFFFCF9B6,"T",0X1,3);
	split_sreg_range(0XFFFCF9BA,"T",0X1,3);
	split_sreg_range(0XFFFCF9C0,"T",0X1,3);
	split_sreg_range(0XFFFCF9DE,"T",0X1,3);
	split_sreg_range(0XFFFCF9F6,"T",0X1,3);
	split_sreg_range(0XFFFCFA16,"T",0X1,3);
	split_sreg_range(0XFFFCFA32,"T",0X1,3);
	split_sreg_range(0XFFFCFA38,"T",0X1,3);
	split_sreg_range(0XFFFCFA40,"T",0X1,3);
	split_sreg_range(0XFFFCFA46,"T",0X1,3);
	split_sreg_range(0XFFFCFA4C,"T",0X1,3);
	split_sreg_range(0XFFFCFA54,"T",0X1,3);
	split_sreg_range(0XFFFCFA5C,"T",0X1,3);
	split_sreg_range(0XFFFCFAAC,"T",0X1,3);
	split_sreg_range(0XFFFCFAB6,"T",0X1,3);
	split_sreg_range(0XFFFCFABC,"T",0X1,3);
	split_sreg_range(0XFFFCFAC4,"T",0X1,3);
	split_sreg_range(0XFFFCFAE8,"T",0X1,3);
	split_sreg_range(0XFFFCFAEC,"T",0X1,3);
	split_sreg_range(0XFFFCFAF0,"T",0X1,3);
	split_sreg_range(0XFFFCFAF4,"T",0X1,3);
	split_sreg_range(0XFFFCFB30,"T",0X1,3);
	split_sreg_range(0XFFFCFB36,"T",0X1,3);
	split_sreg_range(0XFFFCFB3C,"T",0X1,3);
	split_sreg_range(0XFFFCFB42,"T",0X1,3);
	split_sreg_range(0XFFFCFB48,"T",0X1,3);
	split_sreg_range(0XFFFCFBA4,"T",0X1,3);
	split_sreg_range(0XFFFCFBAA,"T",0X1,3);
	split_sreg_range(0XFFFCFBB4,"T",0X1,3);
	split_sreg_range(0XFFFCFBBA,"T",0X1,3);
	split_sreg_range(0XFFFCFBC0,"T",0X1,3);
	split_sreg_range(0XFFFCFBC8,"T",0X1,3);
	split_sreg_range(0XFFFCFC4C,"T",0X1,3);
	split_sreg_range(0XFFFCFC52,"T",0X1,3);
	split_sreg_range(0XFFFCFC58,"T",0X1,3);
	split_sreg_range(0XFFFCFC60,"T",0X1,3);
	split_sreg_range(0XFFFCFC8A,"T",0X1,3);
	split_sreg_range(0XFFFCFC8C,"T",0X1,3);
	split_sreg_range(0XFFFCFC9C,"T",0X1,3);
	split_sreg_range(0XFFFCFCBE,"T",0X1,3);
	split_sreg_range(0XFFFCFCC4,"T",0X1,3);
	split_sreg_range(0XFFFCFCCA,"T",0X1,3);
	split_sreg_range(0XFFFCFCD0,"T",0X1,3);
	split_sreg_range(0XFFFCFCD8,"T",0X1,3);
	split_sreg_range(0XFFFCFD0C,"T",0X1,3);
	split_sreg_range(0XFFFCFD10,"T",0X1,3);
	split_sreg_range(0XFFFCFD26,"T",0X1,3);
	split_sreg_range(0XFFFCFD3A,"T",0X1,3);
	split_sreg_range(0XFFFCFD42,"T",0X1,3);
	split_sreg_range(0XFFFCFD46,"T",0X1,3);
	split_sreg_range(0XFFFCFD4A,"T",0X1,3);
	split_sreg_range(0XFFFCFD4C,"T",0X1,3);
	split_sreg_range(0XFFFCFD58,"T",0X1,3);
	split_sreg_range(0XFFFCFD70,"T",0X1,3);
	split_sreg_range(0XFFFCFD7C,"T",0X1,3);
	split_sreg_range(0XFFFCFD88,"T",0X1,3);
	split_sreg_range(0XFFFCFD94,"T",0X1,3);
	split_sreg_range(0XFFFCFDBE,"T",0X1,3);
	split_sreg_range(0XFFFCFDD0,"T",0X1,3);
	split_sreg_range(0XFFFCFDDA,"T",0X1,3);
	split_sreg_range(0XFFFCFDE6,"T",0X1,3);
	split_sreg_range(0XFFFCFDEC,"T",0X1,3);
	split_sreg_range(0XFFFCFE48,"T",0X1,3);
	split_sreg_range(0XFFFCFE88,"T",0X1,3);
	split_sreg_range(0XFFFCFE90,"T",0X1,3);
	split_sreg_range(0XFFFCFEA2,"T",0X1,3);
	split_sreg_range(0XFFFCFEA8,"T",0X1,3);
	split_sreg_range(0XFFFCFEAE,"T",0X1,3);
	split_sreg_range(0XFFFCFEB4,"T",0X1,3);
	split_sreg_range(0XFFFCFF02,"T",0X1,3);
	split_sreg_range(0XFFFCFF46,"T",0X1,3);
	split_sreg_range(0XFFFCFF4E,"T",0X1,3);
	split_sreg_range(0XFFFCFF60,"T",0X1,3);
	split_sreg_range(0XFFFCFF66,"T",0X1,3);
	split_sreg_range(0XFFFCFF6C,"T",0X1,3);
	split_sreg_range(0XFFFCFFC6,"T",0X1,3);
	split_sreg_range(0XFFFD0002,"T",0X1,3);
	split_sreg_range(0XFFFD000A,"T",0X1,3);
	split_sreg_range(0XFFFD001C,"T",0X1,3);
	split_sreg_range(0XFFFD0022,"T",0X1,3);
	split_sreg_range(0XFFFD0028,"T",0X1,3);
	split_sreg_range(0XFFFD0030,"T",0X1,3);
	split_sreg_range(0XFFFD007E,"T",0X1,3);
	split_sreg_range(0XFFFD00C6,"T",0X1,3);
	split_sreg_range(0XFFFD00CE,"T",0X1,3);
	split_sreg_range(0XFFFD00E0,"T",0X1,3);
	split_sreg_range(0XFFFD00E6,"T",0X1,3);
	split_sreg_range(0XFFFD00EC,"T",0X1,3);
	split_sreg_range(0XFFFD010A,"T",0X1,3);
	split_sreg_range(0XFFFD0110,"T",0X1,3);
	split_sreg_range(0XFFFD0118,"T",0X1,3);
	split_sreg_range(0XFFFD013C,"T",0X1,3);
	split_sreg_range(0XFFFD0142,"T",0X1,3);
	split_sreg_range(0XFFFD0148,"T",0X1,3);
	split_sreg_range(0XFFFD0162,"T",0X1,3);
	split_sreg_range(0XFFFD0168,"T",0X1,3);
	split_sreg_range(0XFFFD0192,"T",0X1,3);
	split_sreg_range(0XFFFD01BC,"T",0X1,3);
	split_sreg_range(0XFFFD01C8,"T",0X1,3);
	split_sreg_range(0XFFFD01CE,"T",0X1,3);
	split_sreg_range(0XFFFD01D4,"T",0X1,3);
	split_sreg_range(0XFFFD01D8,"T",0X1,3);
	split_sreg_range(0XFFFD01E0,"T",0X1,3);
	split_sreg_range(0XFFFD0212,"T",0X1,3);
	split_sreg_range(0XFFFD0218,"T",0X1,3);
	split_sreg_range(0XFFFD021A,"T",0X1,3);
	split_sreg_range(0XFFFD0220,"T",0X1,3);
	split_sreg_range(0XFFFD0228,"T",0X1,3);
	split_sreg_range(0XFFFD03B2,"T",0X1,3);
	split_sreg_range(0XFFFD03BE,"T",0X1,3);
	split_sreg_range(0XFFFD045C,"T",0X1,3);
	split_sreg_range(0XFFFD046E,"T",0X1,3);
	split_sreg_range(0XFFFD049C,"T",0X1,3);
	split_sreg_range(0XFFFD04C4,"T",0X1,3);
	split_sreg_range(0XFFFD04D0,"T",0X1,3);
	split_sreg_range(0XFFFD04E4,"T",0X1,3);
	split_sreg_range(0XFFFD04E8,"T",0X1,3);
	split_sreg_range(0XFFFD04F0,"T",0X1,3);
	split_sreg_range(0XFFFD04F4,"T",0X1,3);
	split_sreg_range(0XFFFD0540,"T",0X1,3);
	split_sreg_range(0XFFFD0574,"T",0X1,3);
	split_sreg_range(0XFFFD0606,"T",0X1,3);
	split_sreg_range(0XFFFD061C,"T",0X1,3);
	split_sreg_range(0XFFFD0630,"T",0X1,3);
	split_sreg_range(0XFFFD0638,"T",0X1,3);
	split_sreg_range(0XFFFD064C,"T",0X1,3);
	split_sreg_range(0XFFFD0654,"T",0X1,3);
	split_sreg_range(0XFFFD0676,"T",0X1,3);
	split_sreg_range(0XFFFD0692,"T",0X1,3);
	split_sreg_range(0XFFFD06AC,"T",0X1,3);
	split_sreg_range(0XFFFD06BC,"T",0X1,3);
	split_sreg_range(0XFFFD0700,"T",0X1,3);
	split_sreg_range(0XFFFD0706,"T",0X1,3);
	split_sreg_range(0XFFFD0712,"T",0X1,3);
	split_sreg_range(0XFFFD0714,"T",0X1,3);
	split_sreg_range(0XFFFD0734,"T",0X1,3);
	split_sreg_range(0XFFFD075C,"T",0X1,3);
	split_sreg_range(0XFFFD0764,"T",0X1,3);
	split_sreg_range(0XFFFD078C,"T",0X1,3);
	split_sreg_range(0XFFFD07C4,"T",0X1,3);
	split_sreg_range(0XFFFD07CC,"T",0X1,3);
	split_sreg_range(0XFFFD07F4,"T",0X1,3);
	split_sreg_range(0XFFFD080E,"T",0X1,3);
	split_sreg_range(0XFFFD0818,"T",0X1,3);
	split_sreg_range(0XFFFD0824,"T",0X1,3);
	split_sreg_range(0XFFFD08C4,"T",0X1,3);
	split_sreg_range(0XFFFD08D8,"T",0X1,3);
	split_sreg_range(0XFFFD08EC,"T",0X1,3);
	split_sreg_range(0XFFFD0924,"T",0X1,3);
	split_sreg_range(0XFFFD0968,"T",0X1,3);
	split_sreg_range(0XFFFD0C1C,"T",0X1,3);
	split_sreg_range(0XFFFD127C,"T",0X1,3);
	split_sreg_range(0XFFFD129C,"T",0X1,3);
	split_sreg_range(0XFFFD12C0,"T",0X1,3);
	split_sreg_range(0XFFFD12CA,"T",0X1,3);
	split_sreg_range(0XFFFD1330,"T",0X1,3);
	split_sreg_range(0XFFFD1354,"T",0X1,3);
	split_sreg_range(0XFFFD13BC,"T",0X1,3);
	split_sreg_range(0XFFFD13C8,"T",0X1,3);
	split_sreg_range(0XFFFD1448,"T",0X1,3);
	split_sreg_range(0XFFFD145A,"T",0X1,3);
	split_sreg_range(0XFFFD145E,"T",0X1,3);
	split_sreg_range(0XFFFD1466,"T",0X1,3);
	split_sreg_range(0XFFFD1476,"T",0X1,3);
	split_sreg_range(0XFFFD147C,"T",0X1,3);
	split_sreg_range(0XFFFD1484,"T",0X1,3);
	split_sreg_range(0XFFFD149E,"T",0X1,3);
	split_sreg_range(0XFFFD14BC,"T",0X1,3);
	split_sreg_range(0XFFFD14CC,"T",0X1,3);
	split_sreg_range(0XFFFD14DE,"T",0X1,3);
	split_sreg_range(0XFFFD151A,"T",0X1,3);
	split_sreg_range(0XFFFD154E,"T",0X1,3);
	split_sreg_range(0XFFFD155A,"T",0X1,3);
	split_sreg_range(0XFFFD1580,"T",0X1,3);
	split_sreg_range(0XFFFD1588,"T",0X1,3);
	split_sreg_range(0XFFFD15A0,"T",0X1,3);
	split_sreg_range(0XFFFD15AC,"T",0X1,3);
	split_sreg_range(0XFFFD15BC,"T",0X1,3);
	split_sreg_range(0XFFFD15CC,"T",0X1,3);
	split_sreg_range(0XFFFD15E6,"T",0X1,3);
	split_sreg_range(0XFFFD1600,"T",0X1,3);
	split_sreg_range(0XFFFD1606,"T",0X1,3);
	split_sreg_range(0XFFFD1642,"T",0X1,3);
	split_sreg_range(0XFFFD1656,"T",0X1,3);
	split_sreg_range(0XFFFD166E,"T",0X1,3);
	split_sreg_range(0XFFFD1690,"T",0X1,3);
	split_sreg_range(0XFFFD16C0,"T",0X1,3);
	split_sreg_range(0XFFFD1728,"T",0X1,3);
	split_sreg_range(0XFFFD1736,"T",0X1,3);
	split_sreg_range(0XFFFD177C,"T",0X1,3);
	split_sreg_range(0XFFFD1790,"T",0X1,3);
	split_sreg_range(0XFFFD17C8,"T",0X1,3);
	split_sreg_range(0XFFFD17F8,"T",0X1,3);
	split_sreg_range(0XFFFD1816,"T",0X1,3);
	split_sreg_range(0XFFFD181C,"T",0X1,3);
	split_sreg_range(0XFFFD1834,"T",0X1,3);
	split_sreg_range(0XFFFD1838,"T",0X1,3);
	split_sreg_range(0XFFFD1846,"T",0X1,3);
	split_sreg_range(0XFFFD1868,"T",0X1,3);
	split_sreg_range(0XFFFD187E,"T",0X1,3);
	split_sreg_range(0XFFFD1892,"T",0X1,3);
	split_sreg_range(0XFFFD18BC,"T",0X1,3);
	split_sreg_range(0XFFFD18C4,"T",0X1,3);
	split_sreg_range(0XFFFD18CA,"T",0X1,3);
	split_sreg_range(0XFFFD18D0,"T",0X1,3);
	split_sreg_range(0XFFFD18DC,"T",0X1,3);
	split_sreg_range(0XFFFD18EA,"T",0X1,3);
	split_sreg_range(0XFFFD18FA,"T",0X1,3);
	split_sreg_range(0XFFFD1904,"T",0X1,3);
	split_sreg_range(0XFFFD190A,"T",0X1,3);
	split_sreg_range(0XFFFD191A,"T",0X1,3);
	split_sreg_range(0XFFFD192E,"T",0X1,3);
	split_sreg_range(0XFFFD1966,"T",0X1,3);
	split_sreg_range(0XFFFD196A,"T",0X1,3);
	split_sreg_range(0XFFFD1970,"T",0X1,3);
	split_sreg_range(0XFFFD198E,"T",0X1,3);
	split_sreg_range(0XFFFD1994,"T",0X1,3);
	split_sreg_range(0XFFFD19A2,"T",0X1,3);
	split_sreg_range(0XFFFD19CC,"T",0X1,3);
	split_sreg_range(0XFFFD19DE,"T",0X1,3);
	split_sreg_range(0XFFFD1A1C,"T",0X1,3);
	split_sreg_range(0XFFFD1A26,"T",0X1,3);
	split_sreg_range(0XFFFD1A46,"T",0X1,3);
	split_sreg_range(0XFFFD1A76,"T",0X1,3);
	split_sreg_range(0XFFFD1A9A,"T",0X1,3);
	split_sreg_range(0XFFFD1AA0,"T",0X1,3);
	split_sreg_range(0XFFFD1ABA,"T",0X1,3);
	split_sreg_range(0XFFFD1ADA,"T",0X1,3);
	split_sreg_range(0XFFFD1AE2,"T",0X1,3);
	split_sreg_range(0XFFFD1AE8,"T",0X1,3);
	split_sreg_range(0XFFFD1AEE,"T",0X1,3);
	split_sreg_range(0XFFFD1AFA,"T",0X1,3);
	split_sreg_range(0XFFFD1B0C,"T",0X1,3);
	split_sreg_range(0XFFFD1B0E,"T",0X1,3);
	split_sreg_range(0XFFFD1B16,"T",0X1,3);
	split_sreg_range(0XFFFD1B24,"T",0X1,3);
	split_sreg_range(0XFFFD1B2C,"T",0X1,3);
	split_sreg_range(0XFFFD1B40,"T",0X1,3);
	split_sreg_range(0XFFFD1B5A,"T",0X1,3);
	split_sreg_range(0XFFFD1B62,"T",0X1,3);
	split_sreg_range(0XFFFD1B7A,"T",0X1,3);
	split_sreg_range(0XFFFD1B86,"T",0X1,3);
	split_sreg_range(0XFFFD1BAE,"T",0X1,3);
	split_sreg_range(0XFFFD1BB6,"T",0X1,3);
	split_sreg_range(0XFFFD1BC4,"T",0X1,3);
	split_sreg_range(0XFFFD1BD8,"T",0X1,3);
	split_sreg_range(0XFFFD1BF8,"T",0X1,3);
	split_sreg_range(0XFFFD1C12,"T",0X1,3);
	split_sreg_range(0XFFFD1C20,"T",0X1,3);
	split_sreg_range(0XFFFD1C92,"T",0X1,3);
	split_sreg_range(0XFFFD1D18,"T",0X1,3);
	split_sreg_range(0XFFFD1D24,"T",0X1,3);
	split_sreg_range(0XFFFD1D6C,"T",0X1,3);
	split_sreg_range(0XFFFD1D88,"T",0X1,3);
	split_sreg_range(0XFFFD1DA8,"T",0X1,3);
	split_sreg_range(0XFFFD1DD4,"T",0X1,3);
	split_sreg_range(0XFFFD1DE6,"T",0X1,3);
	split_sreg_range(0XFFFD1E14,"T",0X1,3);
	split_sreg_range(0XFFFD1E60,"T",0X1,3);
	split_sreg_range(0XFFFD1E76,"T",0X1,3);
	split_sreg_range(0XFFFD1EC2,"T",0X1,3);
	split_sreg_range(0XFFFD1EC8,"T",0X1,3);
	split_sreg_range(0XFFFD1F06,"T",0X1,3);
	split_sreg_range(0XFFFD1F0E,"T",0X1,3);
	split_sreg_range(0XFFFD1F2C,"T",0X1,3);
	split_sreg_range(0XFFFD1F46,"T",0X1,3);
	split_sreg_range(0XFFFD1F4A,"T",0X1,3);
	split_sreg_range(0XFFFD1F5A,"T",0X1,3);
	split_sreg_range(0XFFFD1FDA,"T",0X1,3);
	split_sreg_range(0XFFFD1FE2,"T",0X1,3);
	split_sreg_range(0XFFFD2018,"T",0X1,3);
	split_sreg_range(0XFFFD2040,"T",0X1,3);
	split_sreg_range(0XFFFD2044,"T",0X1,3);
	split_sreg_range(0XFFFD2076,"T",0X1,3);
	split_sreg_range(0XFFFD2080,"T",0X1,3);
	split_sreg_range(0XFFFD20CE,"T",0X1,3);
	split_sreg_range(0XFFFD211A,"T",0X1,3);
	split_sreg_range(0XFFFD2126,"T",0X1,3);
	split_sreg_range(0XFFFD212C,"T",0X1,3);
	split_sreg_range(0XFFFD2130,"T",0X1,3);
	split_sreg_range(0XFFFD2160,"T",0X1,3);
	split_sreg_range(0XFFFD2170,"T",0X1,3);
	split_sreg_range(0XFFFD21B0,"T",0X1,3);
	split_sreg_range(0XFFFD21D0,"T",0X1,3);
	split_sreg_range(0XFFFD21D4,"T",0X1,3);
	split_sreg_range(0XFFFD21EA,"T",0X1,3);
	split_sreg_range(0XFFFD21F0,"T",0X1,3);
	split_sreg_range(0XFFFD2238,"T",0X1,3);
	split_sreg_range(0XFFFD223C,"T",0X1,3);
	split_sreg_range(0XFFFD2240,"T",0X1,3);
	split_sreg_range(0XFFFD227A,"T",0X1,3);
	split_sreg_range(0XFFFD2282,"T",0X1,3);
	split_sreg_range(0XFFFD22B2,"T",0X1,3);
	split_sreg_range(0XFFFD22CE,"T",0X1,3);
	split_sreg_range(0XFFFD22EA,"T",0X1,3);
	split_sreg_range(0XFFFD2316,"T",0X1,3);
	split_sreg_range(0XFFFD231E,"T",0X1,3);
	split_sreg_range(0XFFFD2324,"T",0X1,3);
	split_sreg_range(0XFFFD2328,"T",0X1,3);
	split_sreg_range(0XFFFD2382,"T",0X1,3);
	split_sreg_range(0XFFFD238E,"T",0X1,3);
	split_sreg_range(0XFFFD23C8,"T",0X1,3);
	split_sreg_range(0XFFFD23F6,"T",0X1,3);
	split_sreg_range(0XFFFD242E,"T",0X1,3);
	split_sreg_range(0XFFFD2434,"T",0X1,3);
	split_sreg_range(0XFFFD2440,"T",0X1,3);
	split_sreg_range(0XFFFD2474,"T",0X1,3);
	split_sreg_range(0XFFFD24A0,"T",0X1,3);
	split_sreg_range(0XFFFD24AA,"T",0X1,3);
	split_sreg_range(0XFFFD24B0,"T",0X1,3);
	split_sreg_range(0XFFFD24F2,"T",0X1,3);
	split_sreg_range(0XFFFD252C,"T",0X1,3);
	split_sreg_range(0XFFFD257C,"T",0X1,3);
	split_sreg_range(0XFFFD2580,"T",0X1,3);
	split_sreg_range(0XFFFD2584,"T",0X1,3);
	split_sreg_range(0XFFFD258C,"T",0X1,3);
	split_sreg_range(0XFFFD25A6,"T",0X1,3);
	split_sreg_range(0XFFFD25AE,"T",0X1,3);
	split_sreg_range(0XFFFD25C8,"T",0X1,3);
	split_sreg_range(0XFFFD25D4,"T",0X1,3);
	split_sreg_range(0XFFFD2600,"T",0X1,3);
	split_sreg_range(0XFFFD2608,"T",0X1,3);
	split_sreg_range(0XFFFD2616,"T",0X1,3);
	split_sreg_range(0XFFFD2652,"T",0X1,3);
	split_sreg_range(0XFFFD2658,"T",0X1,3);
	split_sreg_range(0XFFFD265E,"T",0X1,3);
	split_sreg_range(0XFFFD2662,"T",0X1,3);
	split_sreg_range(0XFFFD268A,"T",0X1,3);
	split_sreg_range(0XFFFD26AC,"T",0X1,3);
	split_sreg_range(0XFFFD26F6,"T",0X1,3);
	split_sreg_range(0XFFFD2714,"T",0X1,3);
	split_sreg_range(0XFFFD274E,"T",0X1,3);
	split_sreg_range(0XFFFD27BA,"T",0X1,3);
	split_sreg_range(0XFFFD27CC,"T",0X1,3);
	split_sreg_range(0XFFFD2800,"T",0X1,3);
	split_sreg_range(0XFFFD280C,"T",0X1,3);
	split_sreg_range(0XFFFD2860,"T",0X1,3);
	split_sreg_range(0XFFFD28A8,"T",0X1,3);
	split_sreg_range(0XFFFD28B6,"T",0X1,3);
	split_sreg_range(0XFFFD28FC,"T",0X1,3);
	split_sreg_range(0XFFFD294A,"T",0X1,3);
	split_sreg_range(0XFFFD2D5A,"T",0X1,3);
	split_sreg_range(0XFFFD2D70,"T",0X1,3);
	split_sreg_range(0XFFFD2DBE,"T",0X1,3);
	split_sreg_range(0XFFFD3196,"T",0X1,3);
	split_sreg_range(0XFFFD31AC,"T",0X1,3);
	split_sreg_range(0XFFFD3200,"T",0X1,3);
	split_sreg_range(0XFFFD320C,"T",0X1,3);
	split_sreg_range(0XFFFD324E,"T",0X1,3);
	split_sreg_range(0XFFFD325A,"T",0X1,3);
	split_sreg_range(0XFFFD327E,"T",0X1,3);
	split_sreg_range(0XFFFD3776,"T",0X1,3);
	split_sreg_range(0XFFFD3A96,"T",0X1,3);
	split_sreg_range(0XFFFD3AAE,"T",0X1,3);
	split_sreg_range(0XFFFD3B90,"T",0X1,3);
	split_sreg_range(0XFFFD3BA2,"T",0X1,3);
	split_sreg_range(0XFFFD3C1C,"T",0X1,3);
	split_sreg_range(0XFFFD3C2C,"T",0X1,3);
	split_sreg_range(0XFFFD3C6E,"T",0X1,3);
	split_sreg_range(0XFFFD3C90,"T",0X1,3);
	split_sreg_range(0XFFFD3CA8,"T",0X1,3);
	split_sreg_range(0XFFFD3CB2,"T",0X1,3);
	split_sreg_range(0XFFFD3CD4,"T",0X1,3);
	split_sreg_range(0XFFFD3D70,"T",0X1,3);
	split_sreg_range(0XFFFD3E1C,"T",0X1,3);
	split_sreg_range(0XFFFD3E2C,"T",0X1,3);
	split_sreg_range(0XFFFD3E5A,"T",0X1,3);
	split_sreg_range(0XFFFD3E68,"T",0X1,3);
	split_sreg_range(0XFFFD3E8C,"T",0X1,3);
	split_sreg_range(0XFFFD3EBA,"T",0X1,3);
	split_sreg_range(0XFFFD3EC8,"T",0X1,3);
	split_sreg_range(0XFFFD3EEC,"T",0X1,3);
	split_sreg_range(0XFFFD3EF8,"T",0X1,3);
	split_sreg_range(0XFFFD3F04,"T",0X1,3);
	split_sreg_range(0XFFFD3F08,"T",0X1,3);
	split_sreg_range(0XFFFD3F24,"T",0X1,3);
	split_sreg_range(0XFFFD3F96,"T",0X1,3);
	split_sreg_range(0XFFFD3FA6,"T",0X1,3);
	split_sreg_range(0XFFFD3FAA,"T",0X1,3);
	split_sreg_range(0XFFFD3FD2,"T",0X1,3);
	split_sreg_range(0XFFFD3FD8,"T",0X1,3);
	split_sreg_range(0XFFFD3FE0,"T",0X1,3);
	split_sreg_range(0XFFFD3FEC,"T",0X1,3);
	split_sreg_range(0XFFFD3FF4,"T",0X1,3);
	split_sreg_range(0XFFFD4006,"T",0X1,3);
	split_sreg_range(0XFFFD4010,"T",0X1,3);
	split_sreg_range(0XFFFD4032,"T",0X1,3);
	split_sreg_range(0XFFFD404E,"T",0X1,3);
	split_sreg_range(0XFFFD405E,"T",0X1,3);
	split_sreg_range(0XFFFD4080,"T",0X1,3);
	split_sreg_range(0XFFFD4086,"T",0X1,3);
	split_sreg_range(0XFFFD409A,"T",0X1,3);
	split_sreg_range(0XFFFD40A8,"T",0X1,3);
	split_sreg_range(0XFFFD40B0,"T",0X1,3);
	split_sreg_range(0XFFFD40C0,"T",0X1,3);
	split_sreg_range(0XFFFD40C8,"T",0X1,3);
	split_sreg_range(0XFFFD40F6,"T",0X1,3);
	split_sreg_range(0XFFFD4110,"T",0X1,3);
	split_sreg_range(0XFFFD4118,"T",0X1,3);
	split_sreg_range(0XFFFD4128,"T",0X1,3);
	split_sreg_range(0XFFFD412C,"T",0X1,3);
	split_sreg_range(0XFFFD4134,"T",0X1,3);
	split_sreg_range(0XFFFD4160,"T",0X1,3);
	split_sreg_range(0XFFFD4166,"T",0X1,3);
	split_sreg_range(0XFFFD416E,"T",0X1,3);
	split_sreg_range(0XFFFD418A,"T",0X1,3);
	split_sreg_range(0XFFFD419A,"T",0X1,3);
	split_sreg_range(0XFFFD41A0,"T",0X1,3);
	split_sreg_range(0XFFFD41C0,"T",0X1,3);
	split_sreg_range(0XFFFD4214,"T",0X1,3);
	split_sreg_range(0XFFFD4226,"T",0X1,3);
	split_sreg_range(0XFFFD423C,"T",0X1,3);
	split_sreg_range(0XFFFD4244,"T",0X1,3);
	split_sreg_range(0XFFFD4264,"T",0X1,3);
	split_sreg_range(0XFFFD4294,"T",0X1,3);
	split_sreg_range(0XFFFD42C4,"T",0X1,3);
	split_sreg_range(0XFFFD42D8,"T",0X1,3);
	split_sreg_range(0XFFFD42F6,"T",0X1,3);
	split_sreg_range(0XFFFD4328,"T",0X1,3);
	split_sreg_range(0XFFFD4332,"T",0X1,3);
	split_sreg_range(0XFFFD43A6,"T",0X1,3);
	split_sreg_range(0XFFFD43BC,"T",0X1,3);
	split_sreg_range(0XFFFD440E,"T",0X1,3);
	split_sreg_range(0XFFFD443C,"T",0X1,3);
	split_sreg_range(0XFFFD4446,"T",0X1,3);
	split_sreg_range(0XFFFD4468,"T",0X1,3);
	split_sreg_range(0XFFFD449E,"T",0X1,3);
	split_sreg_range(0XFFFD44B4,"T",0X1,3);
	split_sreg_range(0XFFFD44D8,"T",0X1,3);
	split_sreg_range(0XFFFD44E0,"T",0X1,3);
	split_sreg_range(0XFFFD44FC,"T",0X1,3);
	split_sreg_range(0XFFFD450A,"T",0X1,3);
	split_sreg_range(0XFFFD4514,"T",0X1,3);
	split_sreg_range(0XFFFD4536,"T",0X1,3);
	split_sreg_range(0XFFFD4552,"T",0X1,3);
	split_sreg_range(0XFFFD4562,"T",0X1,3);
	split_sreg_range(0XFFFD4574,"T",0X1,3);
	split_sreg_range(0XFFFD458A,"T",0X1,3);
	split_sreg_range(0XFFFD45C0,"T",0X1,3);
	split_sreg_range(0XFFFD45CE,"T",0X1,3);
	split_sreg_range(0XFFFD45E0,"T",0X1,3);
	split_sreg_range(0XFFFD45F0,"T",0X1,3);
	split_sreg_range(0XFFFD45FA,"T",0X1,3);
	split_sreg_range(0XFFFD4624,"T",0X1,3);
	split_sreg_range(0XFFFD462C,"T",0X1,3);
	split_sreg_range(0XFFFD4630,"T",0X1,3);
	split_sreg_range(0XFFFD467C,"T",0X1,3);
	split_sreg_range(0XFFFD468E,"T",0X1,3);
	split_sreg_range(0XFFFD46A4,"T",0X1,3);
	split_sreg_range(0XFFFD46C6,"T",0X1,3);
	split_sreg_range(0XFFFD4710,"T",0X1,3);
	split_sreg_range(0XFFFD4736,"T",0X1,3);
	split_sreg_range(0XFFFD4738,"T",0X1,3);
	split_sreg_range(0XFFFD4754,"T",0X1,3);
	split_sreg_range(0XFFFD4782,"T",0X1,3);
	split_sreg_range(0XFFFD4798,"T",0X1,3);
	split_sreg_range(0XFFFD479E,"T",0X1,3);
	split_sreg_range(0XFFFD47C2,"T",0X1,3);
	split_sreg_range(0XFFFD47C6,"T",0X1,3);
	split_sreg_range(0XFFFD47DA,"T",0X1,3);
	split_sreg_range(0XFFFD47E4,"T",0X1,3);
	split_sreg_range(0XFFFD47EE,"T",0X1,3);
	split_sreg_range(0XFFFD47F8,"T",0X1,3);
	split_sreg_range(0XFFFD480C,"T",0X1,3);
	split_sreg_range(0XFFFD481C,"T",0X1,3);
	split_sreg_range(0XFFFD483C,"T",0X1,3);
	split_sreg_range(0XFFFD4868,"T",0X1,3);
	split_sreg_range(0XFFFD4884,"T",0X1,3);
	split_sreg_range(0XFFFD488C,"T",0X1,3);
	split_sreg_range(0XFFFD48A8,"T",0X1,3);
	split_sreg_range(0XFFFD48B0,"T",0X1,3);
	split_sreg_range(0XFFFD48B6,"T",0X1,3);
	split_sreg_range(0XFFFD48CC,"T",0X1,3);
	split_sreg_range(0XFFFD4904,"T",0X1,3);
	split_sreg_range(0XFFFD492A,"T",0X1,3);
	split_sreg_range(0XFFFD493A,"T",0X1,3);
	split_sreg_range(0XFFFD4954,"T",0X1,3);
	split_sreg_range(0XFFFD496E,"T",0X1,3);
	split_sreg_range(0XFFFD49CA,"T",0X1,3);
	split_sreg_range(0XFFFD49D4,"T",0X1,3);
	split_sreg_range(0XFFFD4A00,"T",0X1,3);
	split_sreg_range(0XFFFD4A22,"T",0X1,3);
	split_sreg_range(0XFFFD4A3A,"T",0X1,3);
	split_sreg_range(0XFFFD4A48,"T",0X1,3);
	split_sreg_range(0XFFFD4A56,"T",0X1,3);
	split_sreg_range(0XFFFD4A58,"T",0X1,3);
	split_sreg_range(0XFFFD4A8A,"T",0X1,3);
	split_sreg_range(0XFFFD4AA2,"T",0X1,3);
	split_sreg_range(0XFFFD4AAE,"T",0X1,3);
	split_sreg_range(0XFFFD4AB2,"T",0X1,3);
	split_sreg_range(0XFFFD4ACA,"T",0X1,3);
	split_sreg_range(0XFFFD4AD4,"T",0X1,3);
	split_sreg_range(0XFFFD4ADE,"T",0X1,3);
	split_sreg_range(0XFFFD4B02,"T",0X1,3);
	split_sreg_range(0XFFFD4B06,"T",0X1,3);
	split_sreg_range(0XFFFD4B10,"T",0X1,3);
	split_sreg_range(0XFFFD4B2A,"T",0X1,3);
	split_sreg_range(0XFFFD4B36,"T",0X1,3);
	split_sreg_range(0XFFFD4B4C,"T",0X1,3);
	split_sreg_range(0XFFFD4B54,"T",0X1,3);
	split_sreg_range(0XFFFD4B5E,"T",0X1,3);
	split_sreg_range(0XFFFD4B60,"T",0X1,3);
	split_sreg_range(0XFFFD4B68,"T",0X1,3);
	split_sreg_range(0XFFFD4B82,"T",0X1,3);
	split_sreg_range(0XFFFD4BBE,"T",0X1,3);
	split_sreg_range(0XFFFD4BCA,"T",0X1,3);
	split_sreg_range(0XFFFD4BF8,"T",0X1,3);
	split_sreg_range(0XFFFD4C0A,"T",0X1,3);
	split_sreg_range(0XFFFD4C0E,"T",0X1,3);
	split_sreg_range(0XFFFD4C14,"T",0X1,3);
	split_sreg_range(0XFFFD4C62,"T",0X1,3);
	split_sreg_range(0XFFFD4C6C,"T",0X1,3);
	split_sreg_range(0XFFFD4C7E,"T",0X1,3);
	split_sreg_range(0XFFFD4C94,"T",0X1,3);
	split_sreg_range(0XFFFD4CC8,"T",0X1,3);
	split_sreg_range(0XFFFD4D1E,"T",0X1,3);
	split_sreg_range(0XFFFD4D86,"T",0X1,3);
	split_sreg_range(0XFFFD4D9C,"T",0X1,3);
	split_sreg_range(0XFFFD4DA4,"T",0X1,3);
	split_sreg_range(0XFFFD4DAA,"T",0X1,3);
	split_sreg_range(0XFFFD4DC6,"T",0X1,3);
	split_sreg_range(0XFFFD4DD4,"T",0X1,3);
	split_sreg_range(0XFFFD4E10,"T",0X1,3);
	split_sreg_range(0XFFFD4E1E,"T",0X1,3);
	split_sreg_range(0XFFFD4E24,"T",0X1,3);
	split_sreg_range(0XFFFD4E44,"T",0X1,3);
	split_sreg_range(0XFFFD4E50,"T",0X1,3);
	split_sreg_range(0XFFFD4E6C,"T",0X1,3);
	split_sreg_range(0XFFFD4EA2,"T",0X1,3);
	split_sreg_range(0XFFFD4EB6,"T",0X1,3);
	split_sreg_range(0XFFFD4EBA,"T",0X1,3);
	split_sreg_range(0XFFFD4EC6,"T",0X1,3);
	split_sreg_range(0XFFFD4EDC,"T",0X1,3);
	split_sreg_range(0XFFFD4EE2,"T",0X1,3);
	split_sreg_range(0XFFFD4EEC,"T",0X1,3);
	split_sreg_range(0XFFFD4F32,"T",0X1,3);
	split_sreg_range(0XFFFD4F44,"T",0X1,3);
	split_sreg_range(0XFFFD4F68,"T",0X1,3);
	split_sreg_range(0XFFFD4F7A,"T",0X1,3);
	split_sreg_range(0XFFFD4F9C,"T",0X1,3);
	split_sreg_range(0XFFFD4FC8,"T",0X1,3);
	split_sreg_range(0XFFFD4FDC,"T",0X1,3);
	split_sreg_range(0XFFFD5014,"T",0X1,3);
	split_sreg_range(0XFFFD5032,"T",0X1,3);
	split_sreg_range(0XFFFD5044,"T",0X1,3);
	split_sreg_range(0XFFFD5054,"T",0X1,3);
	split_sreg_range(0XFFFD5066,"T",0X1,3);
	split_sreg_range(0XFFFD508A,"T",0X1,3);
	split_sreg_range(0XFFFD50A0,"T",0X1,3);
	split_sreg_range(0XFFFD50A8,"T",0X1,3);
	split_sreg_range(0XFFFD50C4,"T",0X1,3);
	split_sreg_range(0XFFFD50C6,"T",0X1,3);
	split_sreg_range(0XFFFD50DE,"T",0X1,3);
	split_sreg_range(0XFFFD50FE,"T",0X1,3);
	split_sreg_range(0XFFFD5106,"T",0X1,3);
	split_sreg_range(0XFFFD5108,"T",0X1,3);
	split_sreg_range(0XFFFD5124,"T",0X1,3);
	split_sreg_range(0XFFFD5128,"T",0X1,3);
	split_sreg_range(0XFFFD5140,"T",0X1,3);
	split_sreg_range(0XFFFD5152,"T",0X1,3);
	split_sreg_range(0XFFFD515E,"T",0X1,3);
	split_sreg_range(0XFFFD5168,"T",0X1,3);
	split_sreg_range(0XFFFD517C,"T",0X1,3);
	split_sreg_range(0XFFFD518A,"T",0X1,3);
	split_sreg_range(0XFFFD5194,"T",0X1,3);
	split_sreg_range(0XFFFD51A6,"T",0X1,3);
	split_sreg_range(0XFFFD51BE,"T",0X1,3);
	split_sreg_range(0XFFFD51C4,"T",0X1,3);
	split_sreg_range(0XFFFD51D4,"T",0X1,3);
	split_sreg_range(0XFFFD51D8,"T",0X1,3);
	split_sreg_range(0XFFFD520C,"T",0X1,3);
	split_sreg_range(0XFFFD5234,"T",0X1,3);
	split_sreg_range(0XFFFD5238,"T",0X1,3);
	split_sreg_range(0XFFFD523C,"T",0,3);
	split_sreg_range(0XFFFD5248,"T",0,3);
	split_sreg_range(0XFFFD5288,"T",0,3);
	split_sreg_range(0XFFFD5290,"T",0,3);
	split_sreg_range(0XFFFD52B8,"T",0,3);
	split_sreg_range(0XFFFD52BC,"T",0,3);
	split_sreg_range(0XFFFD52D4,"T",0,3);
	split_sreg_range(0XFFFD52E4,"T",0,3);
	split_sreg_range(0XFFFD52E8,"T",0,3);
	split_sreg_range(0XFFFD5324,"T",0,3);
	split_sreg_range(0XFFFD5334,"T",0,3);
	split_sreg_range(0XFFFD5348,"T",0,3);
	split_sreg_range(0XFFFD5350,"T",0,3);
	split_sreg_range(0XFFFD5378,"T",0,3);
	split_sreg_range(0XFFFD538C,"T",0,3);
	split_sreg_range(0XFFFD53A8,"T",0,3);
	split_sreg_range(0XFFFD53B4,"T",0,3);
	split_sreg_range(0XFFFD53BC,"T",0,3);
	split_sreg_range(0XFFFD53E4,"T",0X1,3);
	split_sreg_range(0XFFFD5408,"T",0X1,3);
	split_sreg_range(0XFFFD540C,"T",0X1,3);
	split_sreg_range(0XFFFD5410,"T",0X1,3);
	split_sreg_range(0XFFFD5430,"T",0X1,3);
	split_sreg_range(0XFFFD5434,"T",0X1,3);
	split_sreg_range(0XFFFD5438,"T",0X1,3);
	split_sreg_range(0XFFFD5450,"T",0X1,3);
	split_sreg_range(0XFFFD5454,"T",0X1,3);
	split_sreg_range(0XFFFD5458,"T",0X1,3);
	split_sreg_range(0XFFFD546C,"T",0X1,3);
	split_sreg_range(0XFFFD547C,"T",0X1,3);
	split_sreg_range(0XFFFD548A,"T",0X1,3);
	split_sreg_range(0XFFFD548E,"T",0X1,3);
	split_sreg_range(0XFFFD5494,"T",0X1,3);
	split_sreg_range(0XFFFD54AC,"T",0X1,3);
	split_sreg_range(0XFFFD54B0,"T",0X1,3);
	split_sreg_range(0XFFFD54B4,"T",0X1,3);
	split_sreg_range(0XFFFD54CC,"T",0X1,3);
	split_sreg_range(0XFFFD54D0,"T",0X1,3);
	split_sreg_range(0XFFFD54E0,"T",0X1,3);
	split_sreg_range(0XFFFD54F0,"T",0X1,3);
	split_sreg_range(0XFFFD54FE,"T",0X1,3);
	split_sreg_range(0XFFFD5504,"T",0X1,3);
	split_sreg_range(0XFFFD5508,"T",0X1,3);
	split_sreg_range(0XFFFD5518,"T",0X1,3);
	split_sreg_range(0XFFFD551C,"T",0X1,3);
	split_sreg_range(0XFFFD5534,"T",0X1,3);
	split_sreg_range(0XFFFD5538,"T",0X1,3);
	split_sreg_range(0XFFFD5544,"T",0X1,3);
	split_sreg_range(0XFFFD554E,"T",0X1,3);
	split_sreg_range(0XFFFD556A,"T",0X1,3);
	split_sreg_range(0XFFFD5570,"T",0X1,3);
	split_sreg_range(0XFFFD5594,"T",0X1,3);
	split_sreg_range(0XFFFD55A8,"T",0X1,3);
	split_sreg_range(0XFFFD55D8,"T",0X1,3);
	split_sreg_range(0XFFFD5608,"T",0X1,3);
	split_sreg_range(0XFFFD5612,"T",0X1,3);
	split_sreg_range(0XFFFD561C,"T",0X1,3);
	split_sreg_range(0XFFFD5628,"T",0X1,3);
	split_sreg_range(0XFFFD564A,"T",0X1,3);
	split_sreg_range(0XFFFD565C,"T",0X1,3);
	split_sreg_range(0XFFFD5680,"T",0X1,3);
	split_sreg_range(0XFFFD568C,"T",0X1,3);
	split_sreg_range(0XFFFD56F6,"T",0X1,3);
	split_sreg_range(0XFFFD56FA,"T",0X1,3);
	split_sreg_range(0XFFFD570C,"T",0X1,3);
	split_sreg_range(0XFFFD572E,"T",0X1,3);
	split_sreg_range(0XFFFD5732,"T",0X1,3);
	split_sreg_range(0XFFFD574C,"T",0X1,3);
	split_sreg_range(0XFFFD5758,"T",0X1,3);
	split_sreg_range(0XFFFD5786,"T",0X1,3);
	split_sreg_range(0XFFFD5796,"T",0X1,3);
	split_sreg_range(0XFFFD57A0,"T",0X1,3);
	split_sreg_range(0XFFFD57B0,"T",0X1,3);
	split_sreg_range(0XFFFD57D4,"T",0X1,3);
	split_sreg_range(0XFFFD57E2,"T",0X1,3);
	split_sreg_range(0XFFFD57FE,"T",0X1,3);
	split_sreg_range(0XFFFD5814,"T",0X1,3);
	split_sreg_range(0XFFFD5828,"T",0X1,3);
	split_sreg_range(0XFFFD583E,"T",0X1,3);
	split_sreg_range(0XFFFD5852,"T",0X1,3);
	split_sreg_range(0XFFFD5856,"T",0X1,3);
	split_sreg_range(0XFFFD5872,"T",0X1,3);
	split_sreg_range(0XFFFD5886,"T",0X1,3);
	split_sreg_range(0XFFFD589C,"T",0X1,3);
	split_sreg_range(0XFFFD58A0,"T",0X1,3);
	split_sreg_range(0XFFFD58B2,"T",0X1,3);
	split_sreg_range(0XFFFD58B6,"T",0X1,3);
	split_sreg_range(0XFFFD58C8,"T",0X1,3);
	split_sreg_range(0XFFFD58D8,"T",0X1,3);
	split_sreg_range(0XFFFD58F0,"T",0X1,3);
	split_sreg_range(0XFFFD5900,"T",0X1,3);
	split_sreg_range(0XFFFD5918,"T",0X1,3);
	split_sreg_range(0XFFFD5928,"T",0X1,3);
	split_sreg_range(0XFFFD5940,"T",0X1,3);
	split_sreg_range(0XFFFD5964,"T",0X1,3);
	split_sreg_range(0XFFFD5988,"T",0X1,3);
	split_sreg_range(0XFFFD59F2,"T",0X1,3);
	split_sreg_range(0XFFFD5A08,"T",0X1,3);
	split_sreg_range(0XFFFD5A26,"T",0X1,3);
	split_sreg_range(0XFFFD5A2C,"T",0X1,3);
	split_sreg_range(0XFFFD5A3C,"T",0X1,3);
	split_sreg_range(0XFFFD5A44,"T",0X1,3);
	split_sreg_range(0XFFFD5A4A,"T",0X1,3);
	split_sreg_range(0XFFFD5A6E,"T",0X1,3);
	split_sreg_range(0XFFFD5A74,"T",0X1,3);
	split_sreg_range(0XFFFD5A86,"T",0X1,3);
	split_sreg_range(0XFFFD5A9C,"T",0X1,3);
	split_sreg_range(0XFFFD5AA2,"T",0X1,3);
	split_sreg_range(0XFFFD5AB4,"T",0X1,3);
	split_sreg_range(0XFFFD5AC0,"T",0X1,3);
	split_sreg_range(0XFFFD5B36,"T",0X1,3);
	split_sreg_range(0XFFFD5B66,"T",0X1,3);
	split_sreg_range(0XFFFD5B82,"T",0X1,3);
	split_sreg_range(0XFFFD5BA2,"T",0X1,3);
	split_sreg_range(0XFFFD5BBC,"T",0X1,3);
	split_sreg_range(0XFFFD5BC2,"T",0X1,3);
	split_sreg_range(0XFFFD5BD4,"T",0X1,3);
	split_sreg_range(0XFFFD5BE8,"T",0X1,3);
	split_sreg_range(0XFFFD5C02,"T",0X1,3);
	split_sreg_range(0XFFFD5C18,"T",0X1,3);
	split_sreg_range(0XFFFD5C1E,"T",0X1,3);
	split_sreg_range(0XFFFD5C30,"T",0X1,3);
	split_sreg_range(0XFFFD5C46,"T",0X1,3);
	split_sreg_range(0XFFFD5C4C,"T",0X1,3);
	split_sreg_range(0XFFFD5C5E,"T",0X1,3);
	split_sreg_range(0XFFFD5C6C,"T",0X1,3);
	split_sreg_range(0XFFFD5C88,"T",0X1,3);
	split_sreg_range(0XFFFD5C9A,"T",0X1,3);
	split_sreg_range(0XFFFD5CB2,"T",0X1,3);
	split_sreg_range(0XFFFD5CB6,"T",0X1,3);
	split_sreg_range(0XFFFD5CC0,"T",0X1,3);
	split_sreg_range(0XFFFD5CD8,"T",0X1,3);
	split_sreg_range(0XFFFD5E60,"T",0X1,3);
	split_sreg_range(0XFFFD5E62,"T",0X1,3);
	split_sreg_range(0XFFFD5E6C,"T",0X1,3);
	split_sreg_range(0XFFFD5EBE,"T",0X1,3);
	split_sreg_range(0XFFFD5EC4,"T",0X1,3);
	split_sreg_range(0XFFFD5ED2,"T",0X1,3);
	split_sreg_range(0XFFFD5ED8,"T",0X1,3);
	split_sreg_range(0XFFFD5EDC,"T",0X1,3);
	split_sreg_range(0XFFFD5F30,"T",0X1,3);
	split_sreg_range(0XFFFD5F4E,"T",0X1,3);
	split_sreg_range(0XFFFD5F70,"T",0X1,3);
	split_sreg_range(0XFFFD5F80,"T",0X1,3);
	split_sreg_range(0XFFFD5F8E,"T",0X1,3);
	split_sreg_range(0XFFFD5F90,"T",0X1,3);
	split_sreg_range(0XFFFD5F94,"T",0X1,3);
	split_sreg_range(0XFFFD5F9E,"T",0X1,3);
	split_sreg_range(0XFFFD5FBA,"T",0X1,3);
	split_sreg_range(0XFFFD5FCA,"T",0X1,3);
	split_sreg_range(0XFFFD610C,"T",0X1,3);
	split_sreg_range(0XFFFD6120,"T",0X1,3);
	split_sreg_range(0XFFFD612C,"T",0X1,3);
	split_sreg_range(0XFFFD615A,"T",0X1,3);
	split_sreg_range(0XFFFD619E,"T",0X1,3);
	split_sreg_range(0XFFFD61B4,"T",0X1,3);
	split_sreg_range(0XFFFD61B8,"T",0X1,3);
	split_sreg_range(0XFFFD61BC,"T",0X1,3);
	split_sreg_range(0XFFFD61CC,"T",0X1,3);
	split_sreg_range(0XFFFD61DC,"T",0X1,3);
	split_sreg_range(0XFFFD61F8,"T",0X1,3);
	split_sreg_range(0XFFFD6208,"T",0X1,3);
	split_sreg_range(0XFFFD6216,"T",0X1,3);
	split_sreg_range(0XFFFD6234,"T",0X1,3);
	split_sreg_range(0XFFFD6238,"T",0X1,3);
	split_sreg_range(0XFFFD625A,"T",0X1,3);
	split_sreg_range(0XFFFD6266,"T",0X1,3);
	split_sreg_range(0XFFFD6272,"T",0X1,3);
	split_sreg_range(0XFFFD627E,"T",0X1,3);
	split_sreg_range(0XFFFD628E,"T",0X1,3);
	split_sreg_range(0XFFFD62A0,"T",0X1,3);
	split_sreg_range(0XFFFD62B2,"T",0X1,3);
	split_sreg_range(0XFFFD62CC,"T",0X1,3);
	split_sreg_range(0XFFFD62E4,"T",0X1,3);
	split_sreg_range(0XFFFD62E8,"T",0X1,3);
	split_sreg_range(0XFFFD6318,"T",0X1,3);
	split_sreg_range(0XFFFD6334,"T",0X1,3);
	split_sreg_range(0XFFFD6354,"T",0X1,3);
	split_sreg_range(0XFFFD6368,"T",0X1,3);
	split_sreg_range(0XFFFD6388,"T",0X1,3);
	split_sreg_range(0XFFFD63A0,"T",0X1,3);
	split_sreg_range(0XFFFD63BC,"T",0X1,3);
	split_sreg_range(0XFFFD63C0,"T",0X1,3);
	split_sreg_range(0XFFFD63D0,"T",0X1,3);
	split_sreg_range(0XFFFD63F0,"T",0X1,3);
	split_sreg_range(0XFFFD63FC,"T",0X1,3);
	split_sreg_range(0XFFFD6428,"T",0X1,3);
	split_sreg_range(0XFFFD6444,"T",0X1,3);
	split_sreg_range(0XFFFD6448,"T",0X1,3);
	split_sreg_range(0XFFFD645E,"T",0X1,3);
	split_sreg_range(0XFFFD646E,"T",0X1,3);
	split_sreg_range(0XFFFD6474,"T",0X1,3);
	split_sreg_range(0XFFFD647A,"T",0X1,3);
	split_sreg_range(0XFFFD6482,"T",0X1,3);
	split_sreg_range(0XFFFD6488,"T",0X1,3);
	split_sreg_range(0XFFFD648C,"T",0X1,3);
	split_sreg_range(0XFFFD648E,"T",0X1,3);
	split_sreg_range(0XFFFD64A2,"T",0X1,3);
	split_sreg_range(0XFFFD64A8,"T",0X1,3);
	split_sreg_range(0XFFFD64AA,"T",0X1,3);
	split_sreg_range(0XFFFD64B8,"T",0X1,3);
	split_sreg_range(0XFFFD64E0,"T",0X1,3);
	split_sreg_range(0XFFFD64E6,"T",0X1,3);
	split_sreg_range(0XFFFD64F4,"T",0X1,3);
	split_sreg_range(0XFFFD6504,"T",0X1,3);
	split_sreg_range(0XFFFD6510,"T",0X1,3);
	split_sreg_range(0XFFFD6516,"T",0X1,3);
	split_sreg_range(0XFFFD651C,"T",0X1,3);
	split_sreg_range(0XFFFD6534,"T",0X1,3);
	split_sreg_range(0XFFFD653A,"T",0X1,3);
	split_sreg_range(0XFFFD6546,"T",0X1,3);
	split_sreg_range(0XFFFD6552,"T",0X1,3);
	split_sreg_range(0XFFFD655C,"T",0X1,3);
	split_sreg_range(0XFFFD6564,"T",0X1,3);
	split_sreg_range(0XFFFD656C,"T",0X1,3);
	split_sreg_range(0XFFFD6578,"T",0X1,3);
	split_sreg_range(0XFFFD657C,"T",0X1,3);
	split_sreg_range(0XFFFD6584,"T",0X1,3);
	split_sreg_range(0XFFFD658E,"T",0X1,3);
	split_sreg_range(0XFFFD6592,"T",0X1,3);
	split_sreg_range(0XFFFD6598,"T",0X1,3);
	split_sreg_range(0XFFFD65B4,"T",0X1,3);
	split_sreg_range(0XFFFD65C6,"T",0X1,3);
	split_sreg_range(0XFFFD65CC,"T",0X1,3);
	split_sreg_range(0XFFFD65D2,"T",0X1,3);
	split_sreg_range(0XFFFD65DA,"T",0X1,3);
	split_sreg_range(0XFFFD65E2,"T",0X1,3);
	split_sreg_range(0XFFFD65E8,"T",0X1,3);
	split_sreg_range(0XFFFD65F8,"T",0X1,3);
	split_sreg_range(0XFFFD65FE,"T",0X1,3);
	split_sreg_range(0XFFFD660A,"T",0X1,3);
	split_sreg_range(0XFFFD660E,"T",0X1,3);
	split_sreg_range(0XFFFD6614,"T",0X1,3);
	split_sreg_range(0XFFFD6618,"T",0X1,3);
	split_sreg_range(0XFFFD6620,"T",0X1,3);
	split_sreg_range(0XFFFD662A,"T",0X1,3);
	split_sreg_range(0XFFFD662E,"T",0X1,3);
	split_sreg_range(0XFFFD6636,"T",0X1,3);
	split_sreg_range(0XFFFD663E,"T",0X1,3);
	split_sreg_range(0XFFFD6640,"T",0X1,3);
	split_sreg_range(0XFFFD6644,"T",0X1,3);
	split_sreg_range(0XFFFD6652,"T",0X1,3);
	split_sreg_range(0XFFFD665A,"T",0X1,3);
	split_sreg_range(0XFFFD665E,"T",0X1,3);
	split_sreg_range(0XFFFD6666,"T",0X1,3);
	split_sreg_range(0XFFFD666A,"T",0X1,3);
	split_sreg_range(0XFFFD6678,"T",0X1,3);
	split_sreg_range(0XFFFD667C,"T",0X1,3);
	split_sreg_range(0XFFFD6680,"T",0X1,3);
	split_sreg_range(0XFFFD669E,"T",0X1,3);
	split_sreg_range(0XFFFD66A6,"T",0X1,3);
	split_sreg_range(0XFFFD66BA,"T",0X1,3);
	split_sreg_range(0XFFFD66BC,"T",0X1,3);
	split_sreg_range(0XFFFD66C0,"T",0X1,3);
	split_sreg_range(0XFFFD66D0,"T",0X1,3);
	split_sreg_range(0XFFFD66F4,"T",0X1,3);
	split_sreg_range(0XFFFD66FA,"T",0X1,3);
	split_sreg_range(0XFFFD6704,"T",0X1,3);
	split_sreg_range(0XFFFD670C,"T",0X1,3);
	split_sreg_range(0XFFFD6738,"T",0X1,3);
	split_sreg_range(0XFFFD673E,"T",0X1,3);
	split_sreg_range(0XFFFD6754,"T",0X1,3);
	split_sreg_range(0XFFFD6774,"T",0X1,3);
	split_sreg_range(0XFFFD677E,"T",0X1,3);
	split_sreg_range(0XFFFD6790,"T",0X1,3);
	split_sreg_range(0XFFFD67B8,"T",0X1,3);
	split_sreg_range(0XFFFD67E0,"T",0X1,3);
	split_sreg_range(0XFFFD6800,"T",0X1,3);
	split_sreg_range(0XFFFD6812,"T",0X1,3);
	split_sreg_range(0XFFFD6818,"T",0X1,3);
	split_sreg_range(0XFFFD6840,"T",0X1,3);
	split_sreg_range(0XFFFD6856,"T",0X1,3);
	split_sreg_range(0XFFFD687A,"T",0X1,3);
	split_sreg_range(0XFFFD6882,"T",0X1,3);
	split_sreg_range(0XFFFD68B0,"T",0X1,3);
	split_sreg_range(0XFFFD68CA,"T",0X1,3);
	split_sreg_range(0XFFFD68D0,"T",0X1,3);
	split_sreg_range(0XFFFD68F2,"T",0X1,3);
	split_sreg_range(0XFFFD68FE,"T",0X1,3);
	split_sreg_range(0XFFFD6906,"T",0X1,3);
	split_sreg_range(0XFFFD691A,"T",0X1,3);
	split_sreg_range(0XFFFD693C,"T",0X1,3);
	split_sreg_range(0XFFFD694E,"T",0X1,3);
	split_sreg_range(0XFFFD6950,"T",0X1,3);
	split_sreg_range(0XFFFD697C,"T",0X1,3);
	split_sreg_range(0XFFFD6988,"T",0X1,3);
	split_sreg_range(0XFFFD6990,"T",0X1,3);
	split_sreg_range(0XFFFD69A4,"T",0X1,3);
	split_sreg_range(0XFFFD69C8,"T",0X1,3);
	split_sreg_range(0XFFFD69DC,"T",0X1,3);
	split_sreg_range(0XFFFD69E8,"T",0X1,3);
	split_sreg_range(0XFFFD69EE,"T",0X1,3);
	split_sreg_range(0XFFFD69FC,"T",0X1,3);
	split_sreg_range(0XFFFD6A02,"T",0X1,3);
	split_sreg_range(0XFFFD6A0E,"T",0X1,3);
	split_sreg_range(0XFFFD6A14,"T",0X1,3);
	split_sreg_range(0XFFFD6A20,"T",0X1,3);
	split_sreg_range(0XFFFD6A2C,"T",0X1,3);
	split_sreg_range(0XFFFD6A34,"T",0X1,3);
	split_sreg_range(0XFFFD6A40,"T",0X1,3);
	split_sreg_range(0XFFFD6A48,"T",0,3);
	split_sreg_range(0XFFFD6A5C,"T",0,3);
	split_sreg_range(0XFFFD6A84,"T",0,3);
	split_sreg_range(0XFFFD6AA4,"T",0,3);
	split_sreg_range(0XFFFD6AB4,"T",0,3);
	split_sreg_range(0XFFFD6AD4,"T",0,3);
	split_sreg_range(0XFFFD6B28,"T",0,3);
	split_sreg_range(0XFFFD6B30,"T",0,3);
	split_sreg_range(0XFFFD6B40,"T",0,3);
	split_sreg_range(0XFFFD6B64,"T",0,3);
	split_sreg_range(0XFFFD6B80,"T",0,3);
	split_sreg_range(0XFFFD6B9C,"T",0,3);
	split_sreg_range(0XFFFD6BD0,"T",0,3);
	split_sreg_range(0XFFFD6BD8,"T",0,3);
	split_sreg_range(0XFFFD6BE0,"T",0,3);
	split_sreg_range(0XFFFD6BE8,"T",0,3);
	split_sreg_range(0XFFFD6C3C,"T",0,3);
	split_sreg_range(0XFFFD6CBC,"T",0,3);
	split_sreg_range(0XFFFD6CF8,"T",0,3);
	split_sreg_range(0XFFFD6D0C,"T",0,3);
	split_sreg_range(0XFFFD6D18,"T",0,3);
	split_sreg_range(0XFFFD6D20,"T",0,3);
	split_sreg_range(0XFFFD6D28,"T",0,3);
	split_sreg_range(0XFFFD6DB8,"T",0,3);
	split_sreg_range(0XFFFD6DC0,"T",0,3);
	split_sreg_range(0XFFFD6E60,"T",0,3);
	split_sreg_range(0XFFFD6EB0,"T",0,3);
	split_sreg_range(0XFFFD6EDC,"T",0,3);
	split_sreg_range(0XFFFD6EE4,"T",0,3);
	split_sreg_range(0XFFFD6EF8,"T",0,3);
	split_sreg_range(0XFFFD6F04,"T",0,3);
	split_sreg_range(0XFFFD6F64,"T",0,3);
	split_sreg_range(0XFFFD6F6C,"T",0,3);
	split_sreg_range(0XFFFD7004,"T",0,3);
	split_sreg_range(0XFFFD7024,"T",0,3);
	split_sreg_range(0XFFFD7050,"T",0,3);
	split_sreg_range(0XFFFD70A4,"T",0,3);
	split_sreg_range(0XFFFD7154,"T",0,3);
	split_sreg_range(0XFFFD715C,"T",0,3);
	split_sreg_range(0XFFFD7174,"T",0,3);
	split_sreg_range(0XFFFD71D8,"T",0,3);
	split_sreg_range(0XFFFD71E0,"T",0,3);
	split_sreg_range(0XFFFD725C,"T",0,3);
	split_sreg_range(0XFFFD7268,"T",0,3);
	split_sreg_range(0XFFFD72AC,"T",0,3);
	split_sreg_range(0XFFFD72DC,"T",0,3);
	split_sreg_range(0XFFFD72E4,"T",0,3);
	split_sreg_range(0XFFFD7300,"T",0,3);
	split_sreg_range(0XFFFD7324,"T",0,3);
	split_sreg_range(0XFFFD7344,"T",0,3);
	split_sreg_range(0XFFFD7354,"T",0,3);
	split_sreg_range(0XFFFD735C,"T",0,3);
	split_sreg_range(0XFFFD7364,"T",0,3);
	split_sreg_range(0XFFFD736C,"T",0,3);
	split_sreg_range(0XFFFD7384,"T",0,3);
	split_sreg_range(0XFFFD73A8,"T",0,3);
	split_sreg_range(0XFFFD73B4,"T",0,3);
	split_sreg_range(0XFFFD73C0,"T",0,3);
	split_sreg_range(0XFFFD73C8,"T",0,3);
	split_sreg_range(0XFFFD7404,"T",0,3);
	split_sreg_range(0XFFFD7410,"T",0,3);
	split_sreg_range(0XFFFD7454,"T",0,3);
	split_sreg_range(0XFFFD745C,"T",0,3);
	split_sreg_range(0XFFFD74A0,"T",0,3);
	split_sreg_range(0XFFFD74AC,"T",0,3);
	split_sreg_range(0XFFFD74D4,"T",0,3);
	split_sreg_range(0XFFFD74E0,"T",0,3);
	split_sreg_range(0XFFFD74F0,"T",0,3);
	split_sreg_range(0XFFFD7570,"T",0,3);
	split_sreg_range(0XFFFD75CC,"T",0,3);
	split_sreg_range(0XFFFD75F4,"T",0,3);
	split_sreg_range(0XFFFD7600,"T",0,3);
	split_sreg_range(0XFFFD761C,"T",0,3);
	split_sreg_range(0XFFFD7638,"T",0,3);
	split_sreg_range(0XFFFD764C,"T",0,3);
	split_sreg_range(0XFFFD7658,"T",0,3);
	split_sreg_range(0XFFFD7678,"T",0,3);
	split_sreg_range(0XFFFD7698,"T",0,3);
	split_sreg_range(0XFFFD76A8,"T",0,3);
	split_sreg_range(0XFFFD76B8,"T",0,3);
	split_sreg_range(0XFFFD76E0,"T",0,3);
	split_sreg_range(0XFFFD771C,"T",0,3);
	split_sreg_range(0XFFFD7788,"T",0,3);
	split_sreg_range(0XFFFD7834,"T",0,3);
	split_sreg_range(0XFFFD7844,"T",0,3);
	split_sreg_range(0XFFFD7874,"T",0,3);
	split_sreg_range(0XFFFD78C4,"T",0,3);
	split_sreg_range(0XFFFD78E4,"T",0,3);
	split_sreg_range(0XFFFD78EC,"T",0,3);
	split_sreg_range(0XFFFD7934,"T",0,3);
	split_sreg_range(0XFFFD7994,"T",0,3);
	split_sreg_range(0XFFFD7AA8,"T",0,3);
	split_sreg_range(0XFFFD7AF0,"T",0,3);
	split_sreg_range(0XFFFD7B38,"T",0,3);
	split_sreg_range(0XFFFD7B40,"T",0,3);
	split_sreg_range(0XFFFD7BC8,"T",0,3);
	split_sreg_range(0XFFFD7BF4,"T",0,3);
	split_sreg_range(0XFFFD7C34,"T",0,3);
	split_sreg_range(0XFFFD7C78,"T",0,3);
	split_sreg_range(0XFFFD7CE4,"T",0,3);
	split_sreg_range(0XFFFD7D38,"T",0,3);
	split_sreg_range(0XFFFD7D80,"T",0,3);
	split_sreg_range(0XFFFD7D8C,"T",0,3);
	split_sreg_range(0XFFFD7DA4,"T",0,3);
	split_sreg_range(0XFFFD7DD4,"T",0,3);
	split_sreg_range(0XFFFD7E54,"T",0,3);
	split_sreg_range(0XFFFD7E88,"T",0,3);
	split_sreg_range(0XFFFD7EAC,"T",0,3);
	split_sreg_range(0XFFFD7F28,"T",0,3);
	split_sreg_range(0XFFFD7F3C,"T",0,3);
	split_sreg_range(0XFFFD7FB0,"T",0,3);
	split_sreg_range(0XFFFD7FC4,"T",0,3);
	split_sreg_range(0XFFFD8004,"T",0,3);
	split_sreg_range(0XFFFD8010,"T",0,3);
	split_sreg_range(0XFFFD8018,"T",0,3);
	split_sreg_range(0XFFFD8044,"T",0,3);
	split_sreg_range(0XFFFD8050,"T",0,3);
	split_sreg_range(0XFFFD807C,"T",0,3);
	split_sreg_range(0XFFFD8084,"T",0,3);
	split_sreg_range(0XFFFD80A8,"T",0,3);
	split_sreg_range(0XFFFD80D0,"T",0,3);
	split_sreg_range(0XFFFD80F8,"T",0,3);
	split_sreg_range(0XFFFD811C,"T",0,3);
	split_sreg_range(0XFFFD8144,"T",0,3);
	split_sreg_range(0XFFFD8180,"T",0,3);
	split_sreg_range(0XFFFD818C,"T",0,3);
	split_sreg_range(0XFFFD8194,"T",0,3);
	split_sreg_range(0XFFFD81C4,"T",0,3);
	split_sreg_range(0XFFFD81D0,"T",0,3);
	split_sreg_range(0XFFFD81FC,"T",0,3);
	split_sreg_range(0XFFFD8208,"T",0,3);
	split_sreg_range(0XFFFD822C,"T",0,3);
	split_sreg_range(0XFFFD8254,"T",0,3);
	split_sreg_range(0XFFFD827C,"T",0,3);
	split_sreg_range(0XFFFD82A0,"T",0,3);
	split_sreg_range(0XFFFD82C8,"T",0,3);
	split_sreg_range(0XFFFD831C,"T",0,3);
	split_sreg_range(0XFFFD8324,"T",0,3);
	split_sreg_range(0XFFFD8354,"T",0,3);
	split_sreg_range(0XFFFD8364,"T",0,3);
	split_sreg_range(0XFFFD83CC,"T",0,3);
	split_sreg_range(0XFFFD83E8,"T",0,3);
	split_sreg_range(0XFFFD8418,"T",0,3);
	split_sreg_range(0XFFFD843C,"T",0,3);
	split_sreg_range(0XFFFD84AC,"T",0,3);
	split_sreg_range(0XFFFD84B4,"T",0,3);
	split_sreg_range(0XFFFD84CC,"T",0,3);
	split_sreg_range(0XFFFD84E8,"T",0,3);
	split_sreg_range(0XFFFD8508,"T",0,3);
	split_sreg_range(0XFFFD8548,"T",0,3);
	split_sreg_range(0XFFFD85B0,"T",0,3);
	split_sreg_range(0XFFFD8648,"T",0,3);
	split_sreg_range(0XFFFD8654,"T",0,3);
	split_sreg_range(0XFFFD86C0,"T",0,3);
	split_sreg_range(0XFFFD8710,"T",0,3);
	split_sreg_range(0XFFFD875C,"T",0,3);
	split_sreg_range(0XFFFD8788,"T",0,3);
	split_sreg_range(0XFFFD87A8,"T",0,3);
	split_sreg_range(0XFFFD87E8,"T",0,3);
	split_sreg_range(0XFFFD8820,"T",0,3);
	split_sreg_range(0XFFFD8828,"T",0,3);
	split_sreg_range(0XFFFD8830,"T",0,3);
	split_sreg_range(0XFFFD8860,"T",0,3);
	split_sreg_range(0XFFFD8868,"T",0,3);
	split_sreg_range(0XFFFD8894,"T",0,3);
	split_sreg_range(0XFFFD88A0,"T",0,3);
	split_sreg_range(0XFFFD88C8,"T",0,3);
	split_sreg_range(0XFFFD88F0,"T",0,3);
	split_sreg_range(0XFFFD8918,"T",0,3);
	split_sreg_range(0XFFFD8940,"T",0,3);
	split_sreg_range(0XFFFD8968,"T",0,3);
	split_sreg_range(0XFFFD8974,"T",0,3);
	split_sreg_range(0XFFFD8988,"T",0,3);
	split_sreg_range(0XFFFD898C,"T",0,3);
	split_sreg_range(0XFFFD8990,"T",0,3);
	split_sreg_range(0XFFFD89CC,"T",0,3);
	split_sreg_range(0XFFFD89D4,"T",0,3);
	split_sreg_range(0XFFFD89E0,"T",0,3);
	split_sreg_range(0XFFFD8A10,"T",0,3);
	split_sreg_range(0XFFFD8A1C,"T",0,3);
	split_sreg_range(0XFFFD8A30,"T",0,3);
	split_sreg_range(0XFFFD8A68,"T",0,3);
	split_sreg_range(0XFFFD8A70,"T",0,3);
	split_sreg_range(0XFFFD8A78,"T",0,3);
	split_sreg_range(0XFFFD8AB8,"T",0,3);
	split_sreg_range(0XFFFD8B10,"T",0,3);
	split_sreg_range(0XFFFD8B40,"T",0,3);
	split_sreg_range(0XFFFD8B44,"T",0,3);
	split_sreg_range(0XFFFD8BE0,"T",0,3);
	split_sreg_range(0XFFFD8BE8,"T",0,3);
	split_sreg_range(0XFFFD8CDC,"T",0,3);
	split_sreg_range(0XFFFD8CF8,"T",0,3);
	split_sreg_range(0XFFFD8D08,"T",0,3);
	split_sreg_range(0XFFFD8D24,"T",0,3);
	split_sreg_range(0XFFFD8D60,"T",0,3);
	split_sreg_range(0XFFFD8DC0,"T",0,3);
	split_sreg_range(0XFFFD8DD0,"T",0,3);
	split_sreg_range(0XFFFD8DDC,"T",0,3);
	split_sreg_range(0XFFFD8E34,"T",0,3);
	split_sreg_range(0XFFFD8E58,"T",0,3);
	split_sreg_range(0XFFFD8E68,"T",0,3);
	split_sreg_range(0XFFFD8E98,"T",0,3);
	split_sreg_range(0XFFFD8EBC,"T",0,3);
	split_sreg_range(0XFFFD8ECC,"T",0,3);
	split_sreg_range(0XFFFD8ED0,"T",0,3);
	split_sreg_range(0XFFFD8F18,"T",0,3);
	split_sreg_range(0XFFFD8F3C,"T",0,3);
	split_sreg_range(0XFFFD8F4C,"T",0,3);
	split_sreg_range(0XFFFD8F54,"T",0,3);
	split_sreg_range(0XFFFD8F60,"T",0,3);
	split_sreg_range(0XFFFD8F8C,"T",0,3);
	split_sreg_range(0XFFFD8FA4,"T",0,3);
	split_sreg_range(0XFFFD8FAC,"T",0,3);
	split_sreg_range(0XFFFD8FB4,"T",0,3);
	split_sreg_range(0XFFFD8FB8,"T",0,3);
	split_sreg_range(0XFFFD8FD0,"T",0,3);
	split_sreg_range(0XFFFD8FF0,"T",0,3);
	split_sreg_range(0XFFFD9004,"T",0,3);
	split_sreg_range(0XFFFD9020,"T",0,3);
	split_sreg_range(0XFFFD9030,"T",0,3);
	split_sreg_range(0XFFFD9054,"T",0,3);
	split_sreg_range(0XFFFD9068,"T",0,3);
	split_sreg_range(0XFFFD9074,"T",0,3);
	split_sreg_range(0XFFFD9084,"T",0,3);
	split_sreg_range(0XFFFD90A8,"T",0,3);
	split_sreg_range(0XFFFD90B8,"T",0,3);
	split_sreg_range(0XFFFD90C0,"T",0,3);
	split_sreg_range(0XFFFD90C8,"T",0,3);
	split_sreg_range(0XFFFD90D0,"T",0,3);
	split_sreg_range(0XFFFD90EC,"T",0,3);
	split_sreg_range(0XFFFD9134,"T",0,3);
	split_sreg_range(0XFFFD9148,"T",0,3);
	split_sreg_range(0XFFFD9198,"T",0,3);
	split_sreg_range(0XFFFD91C4,"T",0,3);
	split_sreg_range(0XFFFD91D4,"T",0,3);
	split_sreg_range(0XFFFD91EC,"T",0,3);
	split_sreg_range(0XFFFD91F0,"T",0,3);
	split_sreg_range(0XFFFD91F8,"T",0,3);
	split_sreg_range(0XFFFD9238,"T",0,3);
	split_sreg_range(0XFFFD92C0,"T",0,3);
	split_sreg_range(0XFFFD92D0,"T",0,3);
	split_sreg_range(0XFFFD92F8,"T",0,3);
	split_sreg_range(0XFFFD9374,"T",0,3);
	split_sreg_range(0XFFFD93E0,"T",0,3);
	split_sreg_range(0XFFFD944C,"T",0,3);
	split_sreg_range(0XFFFD9488,"T",0,3);
	split_sreg_range(0XFFFD94CC,"T",0,3);
	split_sreg_range(0XFFFD94D4,"T",0,3);
	split_sreg_range(0XFFFD94D8,"T",0,3);
	split_sreg_range(0XFFFD954C,"T",0,3);
	split_sreg_range(0XFFFD9560,"T",0,3);
	split_sreg_range(0XFFFD959C,"T",0,3);
	split_sreg_range(0XFFFD95C8,"T",0,3);
	split_sreg_range(0XFFFD95F0,"T",0,3);
	split_sreg_range(0XFFFD9640,"T",0,3);
	split_sreg_range(0XFFFD964C,"T",0,3);
	split_sreg_range(0XFFFD9668,"T",0,3);
	split_sreg_range(0XFFFD9678,"T",0,3);
	split_sreg_range(0XFFFD96C0,"T",0,3);
	split_sreg_range(0XFFFD9730,"T",0,3);
	split_sreg_range(0XFFFD97A0,"T",0,3);
	split_sreg_range(0XFFFD97B8,"T",0,3);
	split_sreg_range(0XFFFD97BC,"T",0,3);
	split_sreg_range(0XFFFD9844,"T",0,3);
	split_sreg_range(0XFFFD9858,"T",0,3);
	split_sreg_range(0XFFFD989C,"T",0,3);
	split_sreg_range(0XFFFD98D8,"T",0,3);
	split_sreg_range(0XFFFD98E4,"T",0,3);
	split_sreg_range(0XFFFD98E8,"T",0,3);
	split_sreg_range(0XFFFD98F8,"T",0,3);
	split_sreg_range(0XFFFD9900,"T",0,3);
	split_sreg_range(0XFFFD9904,"T",0,3);
	split_sreg_range(0XFFFD9958,"T",0,3);
	split_sreg_range(0XFFFD997C,"T",0,3);
	split_sreg_range(0XFFFD9994,"T",0,3);
	split_sreg_range(0XFFFD999C,"T",0,3);
	split_sreg_range(0XFFFD99C0,"T",0,3);
	split_sreg_range(0XFFFD99DC,"T",0,3);
	split_sreg_range(0XFFFD99F0,"T",0,3);
	split_sreg_range(0XFFFD9A1C,"T",0,3);
	split_sreg_range(0XFFFD9A34,"T",0,3);
	split_sreg_range(0XFFFD9A4C,"T",0,3);
	split_sreg_range(0XFFFD9A88,"T",0,3);
	split_sreg_range(0XFFFD9A8C,"T",0,3);
	split_sreg_range(0XFFFD9A9C,"T",0,3);
	split_sreg_range(0XFFFD9AD8,"T",0,3);
	split_sreg_range(0XFFFD9AF0,"T",0,3);
	split_sreg_range(0XFFFD9AFC,"T",0,3);
	split_sreg_range(0XFFFD9B14,"T",0,3);
	split_sreg_range(0XFFFD9B3C,"T",0,3);
	split_sreg_range(0XFFFD9B64,"T",0,3);
	split_sreg_range(0XFFFD9B74,"T",0,3);
	split_sreg_range(0XFFFD9B84,"T",0,3);
	split_sreg_range(0XFFFD9BFC,"T",0,3);
	split_sreg_range(0XFFFD9C3C,"T",0,3);
	split_sreg_range(0XFFFD9C6C,"T",0,3);
	split_sreg_range(0XFFFD9CB0,"T",0,3);
	split_sreg_range(0XFFFD9CD0,"T",0,3);
	split_sreg_range(0XFFFD9CEC,"T",0X1,3);
	split_sreg_range(0XFFFD9D20,"T",0X1,3);
	split_sreg_range(0XFFFD9D50,"T",0X1,3);
	split_sreg_range(0XFFFD9D54,"T",0X1,3);
	split_sreg_range(0XFFFD9D82,"T",0X1,3);
	split_sreg_range(0XFFFD9DAA,"T",0X1,3);
	split_sreg_range(0XFFFD9DCA,"T",0X1,3);
	split_sreg_range(0XFFFD9DDA,"T",0X1,3);
	split_sreg_range(0XFFFD9DE8,"T",0X1,3);
	split_sreg_range(0XFFFD9E0A,"T",0X1,3);
	split_sreg_range(0XFFFD9E48,"T",0X1,3);
	split_sreg_range(0XFFFD9E80,"T",0X1,3);
	split_sreg_range(0XFFFD9E86,"T",0X1,3);
	split_sreg_range(0XFFFD9E94,"T",0X1,3);
	split_sreg_range(0XFFFD9EA4,"T",0X1,3);
	split_sreg_range(0XFFFD9F00,"T",0X1,3);
	split_sreg_range(0XFFFD9F40,"T",0X1,3);
	split_sreg_range(0XFFFD9F48,"T",0X1,3);
	split_sreg_range(0XFFFD9F90,"T",0X1,3);
	split_sreg_range(0XFFFD9FC8,"T",0X1,3);
	split_sreg_range(0XFFFD9FD0,"T",0X1,3);
	split_sreg_range(0XFFFD9FD8,"T",0X1,3);
	split_sreg_range(0XFFFD9FEA,"T",0X1,3);
	split_sreg_range(0XFFFD9FF0,"T",0X1,3);
	split_sreg_range(0XFFFD9FFA,"T",0X1,3);
	split_sreg_range(0XFFFDA062,"T",0X1,3);
	split_sreg_range(0XFFFDA09E,"T",0X1,3);
	split_sreg_range(0XFFFDA0CC,"T",0X1,3);
	split_sreg_range(0XFFFDA0EC,"T",0X1,3);
	split_sreg_range(0XFFFDA0EE,"T",0X1,3);
	split_sreg_range(0XFFFDA0F2,"T",0X1,3);
	split_sreg_range(0XFFFDA0F4,"T",0X1,3);
	split_sreg_range(0XFFFDA0F6,"T",0X1,3);
	split_sreg_range(0XFFFDA10A,"T",0X1,3);
	split_sreg_range(0XFFFDA10E,"T",0X1,3);
	split_sreg_range(0XFFFDA12A,"T",0X1,3);
	split_sreg_range(0XFFFDA152,"T",0X1,3);
	split_sreg_range(0XFFFDA196,"T",0X1,3);
	split_sreg_range(0XFFFDA1CE,"T",0X1,3);
	split_sreg_range(0XFFFDA1D6,"T",0X1,3);
	split_sreg_range(0XFFFDA1E4,"T",0X1,3);
	split_sreg_range(0XFFFDA1F6,"T",0X1,3);
	split_sreg_range(0XFFFDA25A,"T",0X1,3);
	split_sreg_range(0XFFFDA294,"T",0X1,3);
	split_sreg_range(0XFFFDA29C,"T",0X1,3);
	split_sreg_range(0XFFFDA2E0,"T",0X1,3);
	split_sreg_range(0XFFFDA322,"T",0X1,3);
	split_sreg_range(0XFFFDA328,"T",0X1,3);
	split_sreg_range(0XFFFDA330,"T",0X1,3);
	split_sreg_range(0XFFFDA342,"T",0X1,3);
	split_sreg_range(0XFFFDA348,"T",0X1,3);
	split_sreg_range(0XFFFDA352,"T",0X1,3);
	split_sreg_range(0XFFFDA3C4,"T",0X1,3);
	split_sreg_range(0XFFFDA3FE,"T",0X1,3);
	split_sreg_range(0XFFFDA42E,"T",0X1,3);
	split_sreg_range(0XFFFDA44E,"T",0X1,3);
	split_sreg_range(0XFFFDA450,"T",0X1,3);
	split_sreg_range(0XFFFDA454,"T",0X1,3);
	split_sreg_range(0XFFFDA456,"T",0X1,3);
	split_sreg_range(0XFFFDA458,"T",0X1,3);
	split_sreg_range(0XFFFDA460,"T",0X1,3);
	split_sreg_range(0XFFFDA464,"T",0X1,3);
	split_sreg_range(0XFFFDA472,"T",0X1,3);
	split_sreg_range(0XFFFDA480,"T",0X1,3);
	split_sreg_range(0XFFFDA482,"T",0X1,3);
	split_sreg_range(0XFFFDA490,"T",0X1,3);
	split_sreg_range(0XFFFDA498,"T",0X1,3);
	split_sreg_range(0XFFFDA4A4,"T",0X1,3);
	split_sreg_range(0XFFFDA4B0,"T",0X1,3);
	split_sreg_range(0XFFFDA4BC,"T",0X1,3);
	split_sreg_range(0XFFFDA4C8,"T",0X1,3);
	split_sreg_range(0XFFFDA4CE,"T",0X1,3);
	split_sreg_range(0XFFFDA4D4,"T",0,3);
	split_sreg_range(0XFFFDA4E0,"T",0X1,3);
	split_sreg_range(0XFFFDA4F4,"T",0,3);
	split_sreg_range(0XFFFDA500,"T",0,3);
	split_sreg_range(0XFFFDA508,"T",0X1,3);
	split_sreg_range(0XFFFDA50C,"T",0,3);
	split_sreg_range(0XFFFDA510,"T",0,3);
	split_sreg_range(0XFFFDA518,"T",0X1,3);
	split_sreg_range(0XFFFDA51C,"T",0,3);
	split_sreg_range(0XFFFDA520,"T",0,3);
	split_sreg_range(0XFFFDA528,"T",0X1,3);
	split_sreg_range(0XFFFDA52C,"T",0,3);
	split_sreg_range(0XFFFDA530,"T",0X1,3);
	split_sreg_range(0XFFFDA534,"T",0,3);
	split_sreg_range(0XFFFDA540,"T",0,3);
	split_sreg_range(0XFFFDA560,"T",0,3);
	split_sreg_range(0XFFFE14D0,"T",0,3);
	split_sreg_range(0X202000,"DS",0X5,3);
	split_sreg_range(0X402020,"DS",0X5,3);
	split_sreg_range(0XB00000,"DS",0X5,3);
	split_sreg_range(0X2700000,"DS",0X5,3);
	split_sreg_range(0X9000000,"DS",0X5,3);
	split_sreg_range(0XA0001020,"DS",0X5,3);
	split_sreg_range(0XF0440000,"DS",0X5,3);
	split_sreg_range(0XF0501200,"DS",0X5,3);
	split_sreg_range(0XF0A09000,"DS",0X5,3);
	split_sreg_range(0XF0A40000,"DS",0X5,3);
	split_sreg_range(0XF0A4D000,"DS",0X5,3);
	split_sreg_range(0XF0A61000,"DS",0X5,3);
	split_sreg_range(0XF0A72000,"DS",0X5,3);
	split_sreg_range(0XF0D02000,"DS",0X5,3);
	split_sreg_range(0XF0E00A00,"DS",0X5,3);
	split_sreg_range(0XF0E08000,"DS",0X5,3);
	split_sreg_range(0XF5001000,"DS",0X5,3);
	split_sreg_range(0XF6409000,"DS",0X5,3);
	split_sreg_range(0XF6800000,"DS",0X5,3);
	split_sreg_range(0XFA800000,"DS",0X5,3);
	split_sreg_range(0XFAF01000,"DS",0X5,3);
	split_sreg_range(0XFB001000,"DS",0X5,3);
	split_sreg_range(0XFCC01000,"DS",0X5,3);
	split_sreg_range(0XFD001000,"DS",0X5,3);
	split_sreg_range(0XFD400000,"DS",0X5,3);
	split_sreg_range(0XFD501000,"DS",0X5,3);
	split_sreg_range(0XFF001000,"DS",0X5,3);
	split_sreg_range(0XFFFC0000,"DS",0X5,3);
	split_sreg_range(0XFFFDA540,"DS",0X5,3);
	split_sreg_range(0XFFFDA560,"DS",0X5,3);
	split_sreg_range(0XFFFE14D0,"DS",0X5,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
        end_type_updating(UTP_STRUCT);
}

// End of file.
