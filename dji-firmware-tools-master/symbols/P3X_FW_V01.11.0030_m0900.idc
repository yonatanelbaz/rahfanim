//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	set_selector(0X2,0);
	set_selector(0X3,0);
	set_selector(0X4,0);
	set_selector(0X5,0);
	set_selector(0X6,0);
	set_selector(0X7,0);
	set_selector(0X8,0);
	set_selector(0X9,0);
	set_selector(0XA,0);
	;
	add_segm_ex(0X8008000,0X8015500,0X3,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8008000,".text");
	SegClass (0X8008000,"CODE");
	SegDefReg(0x8008000,"T",0x0);
	SegDefReg(0x8008000,"DS",0x4);
	set_segm_type(0X8008000,2);
	add_segm_ex(0X8015500,0X801A814,0X4,1,8,2,ADDSEG_NOSREG);
	SegRename(0X8015500,".data");
	SegClass (0X8015500,"DATA");
	SegDefReg(0x8015500,"T",0x0);
	SegDefReg(0x8015500,"DS",0x4);
	set_segm_type(0X8015500,3);
	add_segm_ex(0X1FFFF700,0X20005100,0X5,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X1FFFF700,".bss");
	SegClass (0X1FFFF700,"BSS");
	SegDefReg(0x1FFFF700,"T",0x0);
	SegDefReg(0x1FFFF700,"DS",0x4);
	set_segm_type(0X1FFFF700,9);
	add_segm_ex(0X40000000,0X40006700,0XA,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40000000,".bss2");
	SegClass (0X40000000,"BSS");
	SegDefReg(0x40000000,"T",0x0);
	SegDefReg(0x40000000,"DS",0x4);
	set_segm_type(0X40000000,9);
	add_segm_ex(0X40010000,0X40015500,0X9,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40010000,".bss3");
	SegClass (0X40010000,"BSS");
	SegDefReg(0x40010000,"T",0x0);
	SegDefReg(0x40010000,"DS",0x4);
	set_segm_type(0X40010000,9);
	add_segm_ex(0X40020000,0X40022200,0X8,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X40020000,".bss4");
	SegClass (0X40020000,"BSS");
	SegDefReg(0x40020000,"T",0x0);
	SegDefReg(0x40020000,"DS",0x4);
	set_segm_type(0X40020000,9);
	add_segm_ex(0X42200000,0X42200100,0X7,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42200000,".bss5");
	SegClass (0X42200000,"BSS");
	SegDefReg(0x42200000,"T",0x0);
	SegDefReg(0x42200000,"DS",0x4);
	set_segm_type(0X42200000,9);
	add_segm_ex(0X42420000,0X42420500,0X6,1,8,2,ADDSEG_NOSREG|ADDSEG_SPARSE);
	SegRename(0X42420000,".bss6");
	SegClass (0X42420000,"BSS");
	SegDefReg(0x42420000,"T",0x0);
	SegDefReg(0x42420000,"DS",0x4);
	set_segm_type(0X42420000,9);
	add_segm_ex(0XA0001020,0XA0001028,0X1,1,5,2,ADDSEG_NOSREG);
	SegRename(0XA0001020,"EXIDX");
	SegClass (0XA0001020,"DATA");
	SegDefReg(0xA0001020,"T",0x0);
	SegDefReg(0xA0001020,"DS",0x4);
	set_segm_type(0XA0001020,3);
	set_inf_attr(INF_LOW_OFF, 0x8008000);
	set_inf_attr(INF_HIGH_OFF, 0x42420500);
}

static Enums_0(id) {

	id = add_enum(-1,"BoardVersion",0x1100000);
	add_enum_member(id,"BOARD_VER_0",	0,	-1);
	add_enum_member(id,"BOARD_VER_1",	0X1,	-1);
	add_enum_member(id,"BOARD_VER_AD_2",	0X2,	-1);
	add_enum_member(id,"BOARD_VER_3",	0X3,	-1);
	add_enum_member(id,"BOARD_VER_AD_4",	0X4,	-1);
	add_enum_member(id,"BOARD_VER_AD_5",	0X5,	-1);
	add_enum_member(id,"BOARD_VER_AR_6",	0X6,	-1);
	add_enum_member(id,"BOARD_VER_AR_7",	0X7,	-1);
	id = add_enum(-1,"SPI_AD9363_REG_DEFINES",0x1100000);
	add_enum_member(id,"AD9363_REG_SPI_CONF",	0,	-1);
	add_enum_member(id,"AD9363_REG_MULTICHIP_SYNC_AND_TX_MON_CTRL",	0X1,	-1);
	add_enum_member(id,"AD9363_REG_TX_ENABLE_FILTER_CTRL",	0X2,	-1);
	add_enum_member(id,"AD9363_REG_RX_ENABLE_FILTER_CTRL",	0X3,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_SELECT",	0X4,	-1);
	add_enum_member(id,"AD9363_REG_RFPLL_DIVIDERS",	0X5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CLOCK_DATA_DELAY",	0X6,	-1);
	add_enum_member(id,"AD9363_REG_TX_CLOCK_DATA_DELAY",	0X7,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_ENABLE",	0X9,	-1);
	add_enum_member(id,"AD9363_REG_BBPLL",	0XA,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_OFFSET",	0XB,	-1);
	add_enum_member(id,"AD9363_REG_START_TEMP_READING",	0XC,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSE2",	0XD,	-1);
	add_enum_member(id,"AD9363_REG_TEMPERATURE",	0XE,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_SENSOR_CONFIG",	0XF,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_1",	0X10,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_2",	0X11,	-1);
	add_enum_member(id,"AD9363_REG_PARALLEL_PORT_CONF_3",	0X12,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_MODE",	0X13,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_1",	0X14,	-1);
	add_enum_member(id,"AD9363_REG_ENSM_CONFIG_2",	0X15,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CTRL",	0X16,	-1);
	add_enum_member(id,"AD9363_REG_STATE",	0X17,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_WORD",	0X18,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_WORD",	0X19,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_1_CONFIG",	0X1A,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_2_CONFIG",	0X1B,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CLOCK_DIVIDER",	0X1C,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_CONFIG",	0X1D,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_WORD_MSB",	0X1E,	-1);
	add_enum_member(id,"AD9363_REG_AUXADC_LSB",	0X1F,	-1);
	add_enum_member(id,"AD9363_REG_AUTO_GPO",	0X20,	-1);
	add_enum_member(id,"AD9363_REG_AGC_GAIN_LOCK_DELAY",	0X21,	-1);
	add_enum_member(id,"AD9363_REG_AGC_ATTACK_DELAY",	0X22,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC_ENABLE_CTRL",	0X23,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOAD_SYNTH_DELAY",	0X24,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOAD_SYNTH_DELAY",	0X25,	-1);
	add_enum_member(id,"AD9363_REG_EXTERNAL_LNA_CTRL",	0X26,	-1);
	add_enum_member(id,"AD9363_REG_GPO_FORCE_AND_INIT",	0X27,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_RX_DELAY",	0X28,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_RX_DELAY",	0X29,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_RX_DELAY",	0X2A,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_RX_DELAY",	0X2B,	-1);
	add_enum_member(id,"AD9363_REG_GPO0_TX_DELAY",	0X2C,	-1);
	add_enum_member(id,"AD9363_REG_GPO1_TX_DELAY",	0X2D,	-1);
	add_enum_member(id,"AD9363_REG_GPO2_TX_DELAY",	0X2E,	-1);
	add_enum_member(id,"AD9363_REG_GPO3_TX_DELAY",	0X2F,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_RX_DELAY",	0X30,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC1_TX_DELAY",	0X31,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_RX_DELAY",	0X32,	-1);
	add_enum_member(id,"AD9363_REG_AUXDAC2_TX_DELAY",	0X33,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_POINTER",	0X35,	-1);
	add_enum_member(id,"AD9363_REG_CTRL_OUTPUT_ENABLE",	0X36,	-1);
	add_enum_member(id,"AD9363_REG_PRODUCT_ID",	0X37,	-1);
	add_enum_member(id,"AD9363_REG_REFERENCE_CLOCK_CYCLES",	0X3A,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_IO_CTRL",	0X3B,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_BIAS_CTRL",	0X3C,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL1",	0X3D,	-1);
	add_enum_member(id,"AD9363_REG_LVDS_INVERT_CTRL2",	0X3E,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL_1",	0X3F,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_1",	0X41,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_2",	0X42,	-1);
	add_enum_member(id,"AD9363_REG_FRACT_BB_FREQ_WORD_3",	0X43,	-1);
	add_enum_member(id,"AD9363_REG_INTEGER_BB_FREQ_WORD",	0X44,	-1);
	add_enum_member(id,"AD9363_REG_CLOCK_CTRL",	0X45,	-1);
	add_enum_member(id,"AD9363_REG_CP_CURRENT",	0X46,	-1);
	add_enum_member(id,"AD9363_REG_CP_BLEED_CURRENT",	0X47,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_1",	0X48,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_2",	0X49,	-1);
	add_enum_member(id,"AD9363_REG_LOOP_FILTER_3",	0X4A,	-1);
	add_enum_member(id,"AD9363_REG_VCO_CTRL",	0X4B,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_1",	0X4C,	-1);
	add_enum_member(id,"AD9363_REG_VCO_PROGRAM_2",	0X4D,	-1);
	add_enum_member(id,"AD9363_REG_SDM_CTRL",	0X4E,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_50",	0X50,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X52,	-1);
	add_enum_member(id,"AD9363_REG_RX_ANALOG_POWER_DOWN_OVERRIDE_2",	0X53,	-1);
	add_enum_member(id,"AD9363_REG_RX1_ADC_POWER_DOWN_OVERRIDE",	0X54,	-1);
	add_enum_member(id,"AD9363_REG_RX2_ADC_POWER_DOWN_OVERRIDE",	0X55,	-1);
	add_enum_member(id,"AD9363_REG_TX_ANALOG_POWER_DOWN_OVERRIDE_1",	0X56,	-1);
	add_enum_member(id,"AD9363_REG_ANALOG_POWER_DOWN_OVERRIDE",	0X57,	-1);
	add_enum_member(id,"AD9363_REG_MISC_POWER_DOWN_OVERRIDE",	0X58,	-1);
	add_enum_member(id,"AD9363_REG_UNKNOWN_5C",	0X5C,	-1);
	add_enum_member(id,"AD9363_REG_CH_1_OVERFLOW",	0X5E,	-1);
	add_enum_member(id,"AD9363_REG_CH_2_OVERFLOW",	0X5F,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_ADDR",	0X60,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_1",	0X61,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_WRITE_DATA_2",	0X62,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_1",	0X63,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_COEF_READ_DATA_2",	0X64,	-1);
	add_enum_member(id,"AD9363_REG_TX_FILTER_CONF",	0X65,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_LOW_GAIN",	0X67,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_HIGH_GAIN",	0X68,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_DELAY",	0X69,	-1);
	add_enum_member(id,"AD9363_REG_TX_LEVEL_THRESH",	0X6A,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI1",	0X6B,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI2",	0X6C,	-1);
	add_enum_member(id,"AD9363_REG_TX_RSSI_LSB",	0X6D,	-1);
	add_enum_member(id,"AD9363_REG_TPM_MODE_ENABLE",	0X6E,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_TEMP_GAIN_COEF",	0X6F,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_1_CONFIG",	0X70,	-1);
	add_enum_member(id,"AD9363_REG_TX_MON_2_CONFIG",	0X71,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_0",	0X73,	-1);
	add_enum_member(id,"AD9363_REG_TX1_ATTEN_1",	0X74,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_0",	0X75,	-1);
	add_enum_member(id,"AD9363_REG_TX2_ATTEN_1",	0X76,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_OFFSET",	0X77,	-1);
	add_enum_member(id,"AD9363_REG_TX_ATTEN_THRESH",	0X78,	-1);
	add_enum_member(id,"AD9363_REG_TX1_DIG_ATTEN",	0X79,	-1);
	add_enum_member(id,"AD9363_REG_TX2_DIG_ATTEN",	0X7C,	-1);
	add_enum_member(id,"AD9363_REG_TX1_SYMBOL_ATTEN",	0X7F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_SYMBOL_ATTEN",	0X80,	-1);
	add_enum_member(id,"AD9363_REG_TX_SYMBOL_ATTEN_CONFIG",	0X81,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_PHASE_CORR",	0X8E,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_GAIN_CORR",	0X8F,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_PHASE_CORR",	0X90,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_GAIN_CORR",	0X91,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_I",	0X92,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_1_OFFSET_Q",	0X93,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_I",	0X94,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_1_OFFSET_Q",	0X95,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_PHASE_CORR",	0X96,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_GAIN_CORR",	0X97,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_PHASE_CORR",	0X98,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_GAIN_CORR",	0X99,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_I",	0X9A,	-1);
	add_enum_member(id,"AD9363_REG_TX1_OUT_2_OFFSET_Q",	0X9B,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_I",	0X9C,	-1);
	add_enum_member(id,"AD9363_REG_TX2_OUT_2_OFFSET_Q",	0X9D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_BITS",	0X9F,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_NCO_FREQ_PHASE_OFFSET",	0XA0,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_CTRL",	0XA1,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_1",	0XA2,	-1);
	add_enum_member(id,"AD9363_REG_KEXP_2",	0XA3,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_SETTLE_COUNT",	0XA4,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH",	0XA5,	-1);
	add_enum_member(id,"AD9363_REG_MAG_FTEST_THRESH_2",	0XA6,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX1",	0XA7,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_STATUS_TX2",	0XA8,	-1);
	add_enum_member(id,"AD9363_REG_QUAD_CAL_COUNT",	0XA9,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_FULL_LMT_GAIN",	0XAA,	-1);
	add_enum_member(id,"AD9363_REG_SQUARER_CONFIG",	0XAB,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_CAL_ATTEN",	0XAC,	-1);
	add_enum_member(id,"AD9363_REG_THRESH_ACCUM",	0XAD,	-1);
	add_enum_member(id,"AD9363_REG_TX_QUAD_LPF_GAIN",	0XAE,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_I",	0XB0,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_VDS_Q",	0XB1,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_I",	0XB2,	-1);
	add_enum_member(id,"AD9363_REG_TXDAC_GN_Q",	0XB3,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_A",	0XC0,	-1);
	add_enum_member(id,"AD9363_REG_TXBBF_OPAMP_B",	0XC1,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R1",	0XC2,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2",	0XC3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R3",	0XC4,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R4",	0XC5,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_RP",	0XC6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C1",	0XC7,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_C2",	0XC8,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_CP",	0XC9,	-1);
	add_enum_member(id,"AD9363_REG_TX_TUNE_CTRL",	0XCA,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_R2B",	0XCB,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE",	0XCC,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG0",	0XD0,	-1);
	add_enum_member(id,"AD9363_REG_RESISTOR",	0XD1,	-1);
	add_enum_member(id,"AD9363_REG_CAPACITOR",	0XD2,	-1);
	add_enum_member(id,"AD9363_REG_LO_CM",	0XD3,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_DIVIDER",	0XD6,	-1);
	add_enum_member(id,"AD9363_REG_TX_BBF_TUNE_MODE",	0XD7,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_ADDR",	0XF0,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_1",	0XF1,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_DATA_2",	0XF2,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_1",	0XF3,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_COEF_READ_DATA_2",	0XF4,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_CONFIG",	0XF5,	-1);
	add_enum_member(id,"AD9363_REG_RX_FILTER_GAIN",	0XF6,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_1",	0XFA,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_2",	0XFB,	-1);
	add_enum_member(id,"AD9363_REG_AGC_CONFIG_3",	0XFC,	-1);
	add_enum_member(id,"AD9363_REG_MAX_LMT_FULL_GAIN",	0XFD,	-1);
	add_enum_member(id,"AD9363_REG_PEAK_WAIT_TIME",	0XFE,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_GAIN",	0X100,	-1);
	add_enum_member(id,"AD9363_REG_AGC_LOCK_LEVEL",	0X101,	-1);
	add_enum_member(id,"AD9363_REG_ADC_NOISE_CORRECTION_FACTOR",	0X102,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG1",	0X103,	-1);
	add_enum_member(id,"AD9363_REG_ADC_SMALL_OVERLOAD_THRESH",	0X104,	-1);
	add_enum_member(id,"AD9363_REG_ADC_LARGE_OVERLOAD_THRESH",	0X105,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_CONFIG_2",	0X106,	-1);
	add_enum_member(id,"AD9363_REG_SMALL_LMT_OVERLOAD_THRESH",	0X107,	-1);
	add_enum_member(id,"AD9363_REG_LARGE_LMT_OVERLOAD_THRESH",	0X108,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LMT_FULL_GAIN",	0X109,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_LPF_GAIN",	0X10A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MANUAL_DIGITALFORCED_GAIN",	0X10B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LMT_FULL_GAIN",	0X10C,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_LPF_GAIN",	0X10D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MANUAL_DIGITALFORCED_GAIN",	0X10E,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_1",	0X110,	-1);
	add_enum_member(id,"AD9363_REG_FAST_CONFIG_2_SETTLING_DELAY",	0X111,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_LOST_THRESH",	0X112,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONGER_SIGNAL_THRESH",	0X113,	-1);
	add_enum_member(id,"AD9363_REG_FAST_LOW_POWER_THRESH",	0X114,	-1);
	add_enum_member(id,"AD9363_REG_FAST_STRONG_SIGNAL_FREEZE",	0X115,	-1);
	add_enum_member(id,"AD9363_REG_FAST_FINAL_OVER_RANGE_AND_OPT_GAIN",	0X116,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ENERGY_DETECT_COUNT",	0X117,	-1);
	add_enum_member(id,"AD9363_REG_FAST_AGCLL_UPPER_LIMIT",	0X118,	-1);
	add_enum_member(id,"AD9363_REG_FAST_GAIN_LOCK_EXIT_COUNT",	0X119,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INITIAL_LMT_GAIN_LIMIT",	0X11A,	-1);
	add_enum_member(id,"AD9363_REG_FAST_INCREMENT_TIME",	0X11B,	-1);
	add_enum_member(id,"AD9363_REG_AGC_INNER_LOW_THRESH",	0X120,	-1);
	add_enum_member(id,"AD9363_REG_LMT_OVERLOAD_COUNTERS",	0X121,	-1);
	add_enum_member(id,"AD9363_REG_ADC_OVERLOAD_COUNTERS",	0X122,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP1",	0X123,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER1",	0X124,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_UPDATE_COUNTER2",	0X125,	-1);
	add_enum_member(id,"AD9363_REG_DIGITAL_SAT_COUNTER",	0X128,	-1);
	add_enum_member(id,"AD9363_REG_OUTER_POWER_THRESHS",	0X129,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_STP_2",	0X12A,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_HIGH_GAIN",	0X12C,	-1);
	add_enum_member(id,"AD9363_REG_EXT_LNA_LOW_GAIN",	0X12D,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_ADDRESS",	0X130,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA1",	0X131,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA2",	0X132,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_WRITE_DATA3",	0X133,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA1",	0X134,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA2",	0X135,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_READ_DATA3",	0X136,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_TABLE_CONFIG",	0X137,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_ADDRESS",	0X138,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_WRITE",	0X139,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_WRITE",	0X13A,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_WRITE",	0X13B,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_GAIN_READ",	0X13C,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_BIAS_READ",	0X13D,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CTRL_READ",	0X13E,	-1);
	add_enum_member(id,"AD9363_REG_GM_SUB_TABLE_CONFIG",	0X13F,	-1);
	add_enum_member(id,"AD9363_REG_WORD_ADDRESS",	0X140,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_DIFF_WORDERROR_WRITE",	0X141,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_ERROR_READ",	0X142,	-1);
	add_enum_member(id,"AD9363_REG_CONFIG",	0X143,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN_DIFF_READ_BACK",	0X144,	-1);
	add_enum_member(id,"AD9363_REG_MAX_MIXER_CALIBRATION_GAIN_INDEX",	0X145,	-1);
	add_enum_member(id,"AD9363_REG_TEMP_GAIN_COEF",	0X146,	-1);
	add_enum_member(id,"AD9363_REG_SETTLE_TIME",	0X147,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION",	0X148,	-1);
	add_enum_member(id,"AD9363_REG_CAL_TEMP_SENSOR_WORD",	0X149,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_01",	0X150,	-1);
	add_enum_member(id,"AD9363_REG_MEASURE_DURATION_23",	0X151,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_0",	0X152,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_1",	0X153,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_2",	0X154,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WEIGHT_3",	0X155,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_DELAY",	0X156,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_WAIT_TIME",	0X157,	-1);
	add_enum_member(id,"AD9363_REG_RSSI_CONFIG",	0X158,	-1);
	add_enum_member(id,"AD9363_REG_ADC_MEASURE_DURATION_01",	0X159,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_0",	0X15A,	-1);
	add_enum_member(id,"AD9363_REG_ADC_WEIGHT_1",	0X15B,	-1);
	add_enum_member(id,"AD9363_REG_DEC_POWER_MEASURE_DURATION_0",	0X15C,	-1);
	add_enum_member(id,"AD9363_REG_LNA_GAIN",	0X15D,	-1);
	add_enum_member(id,"AD9363_REG_CH1_ADC_POWER",	0X160,	-1);
	add_enum_member(id,"AD9363_REG_CH1_RX_FILTER_POWER",	0X161,	-1);
	add_enum_member(id,"AD9363_REG_CH2_ADC_POWER",	0X162,	-1);
	add_enum_member(id,"AD9363_REG_CH2_RX_FILTER_POWER",	0X163,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_CAL_LEVEL",	0X168,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_1",	0X169,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_2",	0X16A,	-1);
	add_enum_member(id,"AD9363_REG_CALIBRATION_CONFIG_3",	0X16B,	-1);
	add_enum_member(id,"AD9363_REG_CALIB_COUNT",	0X16C,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN1",	0X16E,	-1);
	add_enum_member(id,"AD9363_REG_RX_QUAD_GAIN2",	0X16F,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_PHASE_CORR",	0X170,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_GAIN_CORR",	0X171,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_PHASE_CORR",	0X172,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_GAIN_CORR",	0X173,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_Q_OFFSET",	0X174,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_A_OFFSETS",	0X175,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_OFFSETS_1",	0X176,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_OFFSETS",	0X177,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_A_I_OFFSET",	0X178,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_PHASE_CORR",	0X179,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_GAIN_CORR",	0X17A,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_PHASE_CORR",	0X17B,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_GAIN_CORR",	0X17C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_Q_OFFSET",	0X17D,	-1);
	add_enum_member(id,"AD9363_REG_RX1_INPUT_BC_OFFSETS",	0X17E,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_BC_OFFSETS_1",	0X17F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_OFFSETS",	0X180,	-1);
	add_enum_member(id,"AD9363_REG_RX2_INPUT_BC_I_OFFSET",	0X181,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_BITS",	0X182,	-1);
	add_enum_member(id,"AD9363_REG_WAIT_COUNT",	0X185,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_COUNT",	0X186,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_CONFIG_1",	0X187,	-1);
	add_enum_member(id,"AD9363_REG_RF_DC_OFFSET_ATTEN",	0X188,	-1);
	add_enum_member(id,"AD9363_REG_INVERT_BITS",	0X189,	-1);
	add_enum_member(id,"AD9363_REG_DC_OFFSET_CONFIG2",	0X18B,	-1);
	add_enum_member(id,"AD9363_REG_RF_CAL_GAIN_INDEX",	0X18C,	-1);
	add_enum_member(id,"AD9363_REG_SOI_THRESH",	0X18D,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_SHIFT",	0X190,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_FAST_SETTLE_SHIFT",	0X191,	-1);
	add_enum_member(id,"AD9363_REG_BB_FAST_SETTLE_DUR",	0X192,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_COUNT",	0X193,	-1);
	add_enum_member(id,"AD9363_REG_BB_DC_OFFSET_ATTEN",	0X194,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_MSB",	0X19A,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_I_LSB",	0X19B,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_MSB",	0X19C,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BB_DC_WORD_Q_LSB",	0X19D,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_MSB",	0X19E,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_I_LSB",	0X19F,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_MSB",	0X1A0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BB_DC_WORD_Q_LSB",	0X1A1,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_MSB",	0X1A2,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_I_LSB",	0X1A3,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_MSB",	0X1A4,	-1);
	add_enum_member(id,"AD9363_REG_BB_TRACK_CORR_WORD_Q_LSB",	0X1A5,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_SYMBOL",	0X1A7,	-1);
	add_enum_member(id,"AD9363_REG_RX1_RSSI_PREAMBLE",	0X1A8,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_SYMBOL",	0X1A9,	-1);
	add_enum_member(id,"AD9363_REG_RX2_RSSI_PREAMBLE",	0X1AA,	-1);
	add_enum_member(id,"AD9363_REG_SYMBOL_LSB",	0X1AB,	-1);
	add_enum_member(id,"AD9363_REG_PREAMBLE_LSB",	0X1AC,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_MSB",	0X1AD,	-1);
	add_enum_member(id,"AD9363_REG_RX_PATH_GAIN_LSB",	0X1AE,	-1);
	add_enum_member(id,"AD9363_REG_RX_DIFF_LNA_FORCE",	0X1B0,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_COARSE",	0X1B1,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_0",	0X1B2,	-1);
	add_enum_member(id,"AD9363_REG_RX_LNA_BIAS_FINE_1",	0X1B3,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_GM_CONFIG",	0X1C0,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_FORCE",	0X1C1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_MIX_GM_BIAS_FORCE",	0X1C2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_FORCE",	0X1C3,	-1);
	add_enum_member(id,"AD9363_REG_RX2_MIX_GM_BIAS_FORCE",	0X1C4,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_MSBS",	0X1C8,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_I",	0X1C9,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX1_Q",	0X1CA,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_I",	0X1CB,	-1);
	add_enum_member(id,"AD9363_REG_INPUT_A_RX2_Q",	0X1CC,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX1_I",	0X1CD,	-1);
	add_enum_member(id,"AD9363_REG_BAND1_RX1_Q",	0X1CE,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_I",	0X1CF,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_RX2_Q",	0X1D0,	-1);
	add_enum_member(id,"AD9363_REG_INPUTS_BC_MSBS",	0X1D1,	-1);
	add_enum_member(id,"AD9363_REG_FORCE_OS_DAC",	0X1D2,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_LO_CM",	0X1D5,	-1);
	add_enum_member(id,"AD9363_REG_RX_CGB_SEG_ENABLE",	0X1D6,	-1);
	add_enum_member(id,"AD9363_REG_RX_MIX_INPUTBIAS",	0X1D7,	-1);
	add_enum_member(id,"AD9363_REG_RX_TIA_CONFIG",	0X1DB,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_LSB",	0X1DC,	-1);
	add_enum_member(id,"AD9363_REG_TIA1_C_MSB",	0X1DD,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_LSB",	0X1DE,	-1);
	add_enum_member(id,"AD9363_REG_TIA2_C_MSB",	0X1DF,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R1A",	0X1E0,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R1A",	0X1E1,	-1);
	add_enum_member(id,"AD9363_REG_RX1_TUNE_CTRL",	0X1E2,	-1);
	add_enum_member(id,"AD9363_REG_RX2_TUNE_CTRL",	0X1E3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_R5",	0X1E4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_R5",	0X1E5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R2346",	0X1E6,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_MSB",	0X1E7,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C1_LSB",	0X1E8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_MSB",	0X1E9,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C2_LSB",	0X1EA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_MSB",	0X1EB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_C3_LSB",	0X1EC,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC1_CTR",	0X1ED,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE0",	0X1EE,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC2_CTR",	0X1EF,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_POW_RZ_BYTE1",	0X1F0,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_CC3_CTR",	0X1F1,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_R5_TUNE",	0X1F2,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE",	0X1F3,	-1);
	add_enum_member(id,"AD9363_REG_RX1_BBF_MAN_GAIN",	0X1F4,	-1);
	add_enum_member(id,"AD9363_REG_RX2_BBF_MAN_GAIN",	0X1F5,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_DIVIDE",	0X1F8,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBF_TUNE_CONFIG",	0X1F9,	-1);
	add_enum_member(id,"AD9363_REG_POLE_GAIN",	0X1FA,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_MHZ",	0X1FB,	-1);
	add_enum_member(id,"AD9363_REG_RX_BBBW_KHZ",	0X1FC,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY1",	0X201,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_CLK_DELAY2",	0X202,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3P",	0X203,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_SAMPLE_CLK_DELAY_3N",	0X204,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2I",	0X205,	-1);
	add_enum_member(id,"AD9363_REG_TEST_MUX_2Q",	0X206,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_RESISTANCE",	0X207,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_1_CAPACITANCE",	0X208,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_23_RESISTANCE",	0X209,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_RESISTANCE",	0X20A,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_CAPACITANCE",	0X20B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_RESISTANCE",	0X20C,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_3_CAPACITANCE",	0X20D,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_AMP_CC",	0X20E,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CURRENT_SOURCE",	0X20F,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_NMOS_CASOADE_BIAS_CURRENT",	0X210,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_FB_DAC_PMOS_CURRENT_SOURCE",	0X211,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CURRENT_SOURCE",	0X212,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X213,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_FB_DAC_PMOS_CURRENT_SOURCE",	0X214,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CURRENT_SOURCE",	0X215,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_NMOS_CASCODE_BIAS_CURRENT",	0X216,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_FB_DAC_PMOS_CURRENT_SOURCE",	0X217,	-1);
	add_enum_member(id,"AD9363_REG_FB_DAC_BIAS_CURRENT",	0X218,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CURRENT",	0X219,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_1ST_STAGE_CASCODE_CURRENT",	0X21A,	-1);
	add_enum_member(id,"AD9363_REG_INT_1_2ND_STAGE_CURRENT",	0X21B,	-1);
	add_enum_member(id,"AD9363_REG_INTEGRATOR_2_1ST_STAGE_CURRENT",	0X21C,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_1ST_STAGE_CASCODE_CURRENT",	0X21D,	-1);
	add_enum_member(id,"AD9363_REG_INT_2_2ND_STAGE_CURRENT",	0X21E,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CURRENT",	0X21F,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_1ST_STAGE_CASCODE_CURRENT",	0X220,	-1);
	add_enum_member(id,"AD9363_REG_INT_3_2ND_STAGE_CURRENT",	0X221,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_BIAS_CURRENT",	0X222,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS",	0X223,	-1);
	add_enum_member(id,"AD9363_REG_FLASH_LADDER_BIAS2",	0X225,	-1);
	add_enum_member(id,"AD9363_REG_RESET",	0X226,	-1);
	add_enum_member(id,"AD9363_REG_RX_PFD_CONFIG",	0X230,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_0",	0X231,	-1);
	add_enum_member(id,"AD9363_REG_RX_INTEGER_BYTE_1",	0X232,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_0",	0X233,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_1",	0X234,	-1);
	add_enum_member(id,"AD9363_REG_RX_FRACT_BYTE_2",	0X235,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_ALC",	0X236,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_0",	0X237,	-1);
	add_enum_member(id,"AD9363_REG_RX_FORCE_VCO_TUNE_1",	0X238,	-1);
	add_enum_member(id,"AD9363_REG_RX_ALC_VARACTOR",	0X239,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_OUTPUT",	0X23A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CURRENT",	0X23B,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OFFSET",	0X23C,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_CONFIG",	0X23D,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_1",	0X23E,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_2",	0X23F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOOP_FILTER_3",	0X240,	-1);
	add_enum_member(id,"AD9363_REG_RX_DITHERCP_CAL",	0X241,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_BIAS_1",	0X242,	-1);
	add_enum_member(id,"AD9363_REG_RX_CAL_STATUS",	0X244,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL_REF",	0X245,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_PD_OVERRIDES",	0X246,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_OVERRANGE_VCO_LOCK",	0X247,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_LDO",	0X248,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_CAL",	0X249,	-1);
	add_enum_member(id,"AD9363_REG_RX_LOCK_DETECT_CONFIG",	0X24A,	-1);
	add_enum_member(id,"AD9363_REG_RX_CP_LEVEL_DETECT",	0X24B,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_0",	0X24C,	-1);
	add_enum_member(id,"AD9363_REG_RX_DSM_SETUP_1",	0X24D,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD0",	0X24E,	-1);
	add_enum_member(id,"AD9363_REG_RX_CORRECTION_WORD1",	0X24F,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_0",	0X250,	-1);
	add_enum_member(id,"AD9363_REG_RX_VCO_VARACTOR_CTRL_1",	0X251,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP",	0X25A,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_SETUP_INIT_DELAY",	0X25B,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_ADDR",	0X25C,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_DATA",	0X25D,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_READ",	0X25E,	-1);
	add_enum_member(id,"AD9363_REG_RX_FAST_LOCK_PROGRAM_CTRL",	0X25F,	-1);
	add_enum_member(id,"AD9363_REG_RX_LO_GEN_POWER_MODE",	0X261,	-1);
	add_enum_member(id,"AD9363_REG_TX_PFD_CONFIG",	0X270,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_0",	0X271,	-1);
	add_enum_member(id,"AD9363_REG_TX_INTEGER_BYTE_1",	0X272,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_0",	0X273,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_1",	0X274,	-1);
	add_enum_member(id,"AD9363_REG_TX_FRACT_BYTE_2",	0X275,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_ALC",	0X276,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_0",	0X277,	-1);
	add_enum_member(id,"AD9363_REG_TX_FORCE_VCO_TUNE_1",	0X278,	-1);
	add_enum_member(id,"AD9363_REG_TX_ALCVARACT_OR",	0X279,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_OUTPUT",	0X27A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CURRENT",	0X27B,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OFFSET",	0X27C,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_CONFIG",	0X27D,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_1",	0X27E,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_2",	0X27F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOOP_FILTER_3",	0X280,	-1);
	add_enum_member(id,"AD9363_REG_TX_DITHERCP_CAL",	0X281,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_1",	0X282,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_BIAS_2",	0X283,	-1);
	add_enum_member(id,"AD9363_REG_TX_CAL_STATUS",	0X284,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL_REF",	0X285,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_PD_OVERRIDES",	0X286,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_OVERRANGE_VCO_LOCK",	0X287,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_LDO",	0X288,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_CAL",	0X289,	-1);
	add_enum_member(id,"AD9363_REG_TX_LOCK_DETECT_CONFIG",	0X28A,	-1);
	add_enum_member(id,"AD9363_REG_TX_CP_LEVEL_DETECT",	0X28B,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_0",	0X28C,	-1);
	add_enum_member(id,"AD9363_REG_TX_DSM_SETUP_1",	0X28D,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD0",	0X28E,	-1);
	add_enum_member(id,"AD9363_REG_TX_CORRECTION_WORD1",	0X28F,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_0",	0X290,	-1);
	add_enum_member(id,"AD9363_REG_TX_VCO_VARACTOR_CTRL_1",	0X291,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_COARSE_TUNE",	0X292,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_HIGH",	0X293,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_FINE_TUNE_LOW",	0X294,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_CONFIG",	0X295,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_WRITE",	0X296,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_READ",	0X297,	-1);
	add_enum_member(id,"AD9363_REG_DCXO_TEMPCO_ADDR",	0X298,	-1);
	add_enum_member(id,"AD9363_REG_DELTA_T_READ",	0X299,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP",	0X29A,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_SETUP_INIT_DELAY",	0X29B,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_ADDR",	0X29C,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_DATA",	0X29D,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_READ",	0X29E,	-1);
	add_enum_member(id,"AD9363_REG_TX_FAST_LOCK_PROGRAM_CTRL",	0X29F,	-1);
	add_enum_member(id,"AD9363_REG_TX_LO_GEN_POWER_MODE",	0X2A1,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG0",	0X2A6,	-1);
	add_enum_member(id,"AD9363_REG_BANDGAP_CONFIG1",	0X2A8,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_1",	0X2AB,	-1);
	add_enum_member(id,"AD9363_REG_REF_DIVIDE_CONFIG_2",	0X2AC,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX1",	0X2B0,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX1",	0X2B1,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX1",	0X2B2,	-1);
	add_enum_member(id,"AD9363_REG_FAST_ATTACK_STATE",	0X2B3,	-1);
	add_enum_member(id,"AD9363_REG_SLOW_LOOP_STATE",	0X2B4,	-1);
	add_enum_member(id,"AD9363_REG_GAIN_RX2",	0X2B5,	-1);
	add_enum_member(id,"AD9363_REG_LPF_GAIN_RX2",	0X2B6,	-1);
	add_enum_member(id,"AD9363_REG_DIG_GAIN_RX2",	0X2B7,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX1",	0X2B8,	-1);
	add_enum_member(id,"AD9363_REG_OVRG_SIGS_RX2",	0X2B9,	-1);
	add_enum_member(id,"AD9363_REG_CTRL",	0X3DF,	-1);
	add_enum_member(id,"AD9363_REG_BIST_CONFIG",	0X3F4,	-1);
	add_enum_member(id,"AD9363_REG_OBSERVE_CONFIG",	0X3F5,	-1);
	add_enum_member(id,"AD9363_REG_BIST_AND_DATA_PORT_TEST_CONFIG",	0X3F6,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_0",	0X3FC,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_1",	0X3FD,	-1);
	add_enum_member(id,"AD9363_REG_DAC_TEST_2",	0X3FE,	-1);
	id = add_enum(-1,"SPI_AR9003_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8003_REG_UNKN_2A",	0X2A,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_42",	0X42,	-1);
	add_enum_member(id,"AR8003_REG_TX1_ATTEN_0",	0X54,	-1);
	add_enum_member(id,"AR8003_REG_TX2_ATTEN_0",	0X5C,	-1);
	add_enum_member(id,"AR8003_REG_UNKN_6A",	0X6A,	-1);
	add_enum_member(id,"AR8003_REG_STATE_FLAGS",	0X7C,	-1);
	id = add_enum(-1,"SPI_FPGA_REG_DEFINES",0x1100000);
	add_enum_member(id,"FPGA_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_02",	0X2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_04",	0X4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_05",	0X5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_06",	0X6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_07",	0X7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_08",	0X8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_09",	0X9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_10",	0X10,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_12",	0X12,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_20",	0X20,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_23",	0X23,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8B",	0X8B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8C",	0X8C,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8D",	0X8D,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_8E",	0X8E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_90",	0X90,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_91",	0X91,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_92",	0X92,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_93",	0X93,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_94",	0X94,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_95",	0X95,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_96",	0X96,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_97",	0X97,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_98",	0X98,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_99",	0X99,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9A",	0X9A,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9B",	0X9B,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9E",	0X9E,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_9F",	0X9F,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A0",	0XA0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A1",	0XA1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A3",	0XA3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A5",	0XA5,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A6",	0XA6,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A7",	0XA7,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A8",	0XA8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_A9",	0XA9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AA",	0XAA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AB",	0XAB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AC",	0XAC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AD",	0XAD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_AE",	0XAE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B0",	0XB0,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B1",	0XB1,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B2",	0XB2,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B3",	0XB3,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B4",	0XB4,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B8",	0XB8,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_B9",	0XB9,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BA",	0XBA,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BB",	0XBB,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BC",	0XBC,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_BD",	0XBD,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_CE",	0XCE,	-1);
	add_enum_member(id,"FPGA_REG_UNKN_E9",	0XE9,	-1);
	id = add_enum(-1,"SPI_AR9001_REG_DEFINES",0x1100000);
	add_enum_member(id,"AR8001_REG_UNKN_00",	0,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_01",	0X1,	-1);
	add_enum_member(id,"AR8001_REG_UNKN_CE",	0XCE,	-1);
	id = add_enum(-1,"OFDM_TCX_STATE_FLAGS",0x1100000);
	set_enum_bf(id,1);
	add_enum_member(id,"OFDM_FPGA_BOOT_ERR",	0X1,	0x1);
	add_enum_member(id,"OFDM_FPGA_CONFIG_ERR",	0X2,	0x2);
	add_enum_member(id,"OFDM_EXEC_FAIL_1_ERR",	0X4,	0x4);
	add_enum_member(id,"OFDM_EXEC_FAIL_2_ERR",	0X8,	0x8);
	add_enum_member(id,"OFDM_VER_MISMATCH_ERR",	0X20,	0x20);
	add_enum_member(id,"OFDM_TCX_REGISTER_ERR",	0X40,	0x40);
	add_enum_member(id,"OFDM_RECEIVED_DATA_CRC_FAIL",	0X400,	0x400);
	add_enum_member(id,"OFDM_RECEIVED_DATA_SEQ_FAIL",	0X800,	0x800);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("DjiPacketHead");
	id = get_struc_id("DjiPacket");
	id = get_struc_id("PktPayloadS03Caa");
	id = get_struc_id("UnknStruct01");
	SetType(get_member_id(id, 0x0), "struct DjiPacket *");
	SetType(get_member_id(id, 0x4), "bool (__cdecl *)(uint8_t *)");
	id = get_struc_id("DjiPacketS09C12");
	SetType(get_member_id(id, 0x0), "struct DjiPacketHead");
	SetType(get_member_id(id, 0xB), "uint8_t");
	SetType(get_member_id(id, 0xC), "uint8_t");
	SetType(get_member_id(id, 0xD), "uint8_t");
	SetType(get_member_id(id, 0xE), "uint8_t");
	id = get_struc_id("UnknStruct02");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	id = get_struc_id("OFDMPacketExecCallback");
	SetType(get_member_id(id, 0x0), "void (__cdecl *)(uint8_t *)");
	SetType(get_member_id(id, 0x6), "uint8_t");
	SetType(get_member_id(id, 0x7), "uint8_t");
	id = get_struc_id("PktPayloadOsdHome");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	SetType(get_member_id(id, 0x10), "float");
	id = get_struc_id("USART_TypeDef");
	id = get_struc_id("USART_InitTypeDef");
	id = get_struc_id("SPI_TypeDef");
	id = get_struc_id("PktPayloadOsdGeneral");
	SetType(get_member_id(id, 0x0), "double");
	SetType(get_member_id(id, 0x8), "double");
	id = get_struc_id("PktPayloadS09C00");
	id = get_struc_id("DjiPckt0C");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"DjiPacketHead",0);
	id = add_struc(-1,"DjiPacket",0);
	id = add_struc(-1,"PktPayloadS03Caa",0);
	id = add_struc(-1,"UnknStruct01",0);
	id = add_struc(-1,"DjiPacketS09C12",0);
	id = add_struc(-1,"UnknStruct02",0);
	id = add_struc(-1,"OFDMPacketExecCallback",0);
	id = add_struc(-1,"PktPayloadOsdHome",0);
	id = add_struc(-1,"USART_TypeDef",0);
	id = add_struc(-1,"USART_InitTypeDef",0);
	id = add_struc(-1,"SPI_TypeDef",0);
	id = add_struc(-1,"PktPayloadOsdGeneral",0);
	id = add_struc(-1,"PktPayloadS09C00",0);
	id = add_struc(-1,"DjiPckt0C",0);
	
	id = get_struc_id("DjiPacket");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	mid = add_struc_member(id,"payload",	0XB,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadS03Caa");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	23);
	mid = add_struc_member(id,"field_17",	0X17,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_18",	0X18,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct01");
	mid = add_struc_member(id,"pkt",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"callback",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_8",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pkt_len",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_C",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_E",	0XE,	0x10000400,	-1,	2);
	
	id = get_struc_id("DjiPacketHead");
	mid = add_struc_member(id,"delimiter",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"protover_length",	0X1,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"hdr_crc",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"sender",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"receiver",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"seqctr",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ack",	0X8,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X9,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0XA,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPacketS09C12");
	mid = add_struc_member(id,"head",	0,	0x60000400,	get_struc_id("DjiPacketHead"),	11);
	mid = add_struc_member(id,"field_B",	0XB,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_C",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_D",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_E",	0XE,	0x000400,	-1,	1);
	
	id = get_struc_id("UnknStruct02");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"field_4",	0X4,	0x20000400,	-1,	4);
	
	id = get_struc_id("OFDMPacketExecCallback");
	mid = add_struc_member(id,"func",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = add_struc_member(id,"receiver",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"recv_flg",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmdset",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"cmd",	0X7,	0x000400,	-1,	1);
	
	id = get_struc_id("PktPayloadOsdHome");
	mid = add_struc_member(id,"lon",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"lat",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"alt",	0X10,	0x80000400,	-1,	4);
	mid = add_struc_member(id,"home_state",	0X14,	0x000400,	-1,	1);
	
	id = get_struc_id("USART_TypeDef");
	mid = add_struc_member(id,"SR",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"BRR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR1",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR3",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"GTPR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	
	id = get_struc_id("USART_InitTypeDef");
	mid = add_struc_member(id,"USART_BaudRate",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"USART_WordLength",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_StopBits",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Parity",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_Mode",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"USART_HardwareFlowControl",	0XC,	0x10000400,	-1,	2);
	
	id = get_struc_id("SPI_TypeDef");
	mid = add_struc_member(id,"CR1",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED0",	0X2,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CR2",	0X4,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED1",	0X6,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"SR",	0X8,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED2",	0XA,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"DR",	0XC,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED3",	0XE,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"CRCPR",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED4",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RXCRCR",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED5",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"TXCRCR",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED6",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SCFGR",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED7",	0X1E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"I2SPR",	0X20,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"RESERVED8",	0X22,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadOsdGeneral");
	mid = add_struc_member(id,"longtitude",	0,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"latitude",	0X8,	0x90000400,	-1,	8);
	mid = add_struc_member(id,"relative_height",	0X10,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgx",	0X12,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgy",	0X14,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"vgz",	0X16,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"pitch",	0X18,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"roll",	0X1A,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"yaw",	0X1C,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"ctrl_info",	0X1E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"latest_cmd",	0X1F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"gps_nums",	0X24,	0x000400,	-1,	1);
	mid = add_struc_member(id,"gohome_landing_reason",	0X25,	0x000400,	-1,	1);
	mid = add_struc_member(id,"start_fail_state",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"controller_state_ext",	0X27,	0x000400,	-1,	1);
	mid = add_struc_member(id,"batt_remain",	0X28,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ultrasonic_height",	0X29,	0x000400,	-1,	1);
	mid = add_struc_member(id,"motor_startup_time",	0X2A,	0x10000400,	-1,	2);
	
	id = get_struc_id("PktPayloadS09C00");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	32);
	mid = add_struc_member(id,"field_20",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_21",	0X21,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_22",	0X22,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_26",	0X26,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_27",	0X27,	0x000400,	-1,	6);
	mid = add_struc_member(id,"field_2D",	0X2D,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2E",	0X2E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_2F",	0X2F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_30",	0X30,	0x000400,	-1,	3);
	mid = add_struc_member(id,"field_33",	0X33,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_34",	0X34,	0x000400,	-1,	7);
	mid = add_struc_member(id,"field_3B",	0X3B,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3C",	0X3C,	0x000400,	-1,	2);
	mid = add_struc_member(id,"field_3E",	0X3E,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_3F",	0X3F,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_40",	0X40,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_41",	0X41,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42",	0X42,	0x000400,	-1,	1);
	
	id = get_struc_id("DjiPckt0C");
	mid = add_struc_member(id,"field_0",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_1",	0X1,	0x000400,	-1,	14);
	mid = add_struc_member(id,"crc",	0XF,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"field_11",	0X11,	0x000400,	-1,	34);
	mid = add_struc_member(id,"seqno",	0X33,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0X8008000,	E_PREV + 0,	"; File Name   : P3X_FW_V01.11.0030_m0900.elf");
	update_extra_cmt		(0X8008000,	E_PREV + 1,	"; Format      : ELF for ARM (Executable)");
	update_extra_cmt		(0X8008000,	E_PREV + 2,	"; Imagebase   : 8008000");
	update_extra_cmt		(0X8008000,	E_PREV + 3,	"; ");
	update_extra_cmt		(0X8008000,	E_PREV + 4,	"; Options     : EF_ARM_VFP_FLOAT");
	update_extra_cmt		(0X8008000,	E_PREV + 5,	"; EABI version: 5");
	update_extra_cmt		(0X8008000,	E_PREV + 6,	"; ");
	create_dword	(x=0X8008000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800800C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80080EC);
	create_insn	(0X80080F0);
	create_insn	(x=0X80080F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800810A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008112);
	op_hex		(x,	1);
	create_insn	(x=0X800811A);
	op_hex		(x,	1);
	create_insn	(0X8008120);
	create_insn	(x=0X8008132);
	op_hex		(x,	1);
	create_insn	(x=0X8008154);
	op_hex		(x,	1);
	create_insn	(0X8008170);
	make_array	(0X8008182,	0X2);
	create_insn	(0X8008184);
	create_insn	(0X80081A0);
	create_insn	(0X80081A8);
	create_insn	(0X80081AC);
	create_insn	(0X80081BA);
	create_insn	(0X80081BE);
	make_array	(0X80081CA,	0X2);
	create_insn	(x=0X80081CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80081D2);
	op_plain_offset	(x,	1,	0X2000284C);
	op_plain_offset	(x,	129,	0X2000284C);
	create_insn	(x=0X80081F4);
	op_plain_offset	(x,	1,	0X2000284C);
	op_plain_offset	(x,	129,	0X2000284C);
	create_insn	(x=0X80081F6);
	op_hex		(x,	1);
	create_dword	(x=0X80081FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8008200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008208);
	create_insn	(0X800820A);
	create_insn	(0X800820C);
	create_insn	(0X800820E);
	create_insn	(0X8008210);
	create_insn	(0X8008212);
	create_insn	(0X8008214);
	create_insn	(0X8008216);
	create_insn	(0X8008218);
	create_insn	(0X800821A);
	create_insn	(x=0X800821C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800821E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8008226,	0X2);
	create_dword	(x=0X8008228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800822C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008230);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008234);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800823C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8008240);
	create_insn	(0X800824A);
	create_insn	(x=0X800825E);
	op_hex		(x,	1);
	create_insn	(x=0X8008280);
	op_hex		(x,	1);
	create_insn	(x=0X8008292);
	op_hex		(x,	1);
	create_insn	(x=0X80082A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80082B2);
	create_insn	(0X80082C0);
	create_insn	(0X80082C6);
	create_insn	(x=0X80082CC);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082D0);
	op_hex		(x,	1);
	create_insn	(x=0X80082D4);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X80082D8);
	op_hex		(x,	1);
	make_array	(0X80082DE,	0X2);
	create_dword	(0X80082E0);
	create_dword	(x=0X80082E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80082E8);
	create_dword	(x=0X80082EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X80082F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80082FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800830A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008326);
	create_insn	(0X8008328);
	create_insn	(x=0X8008356);
	op_hex		(x,	1);
	create_insn	(0X8008366);
	create_insn	(0X8008378);
	create_insn	(x=0X800837E);
	op_hex		(x,	1);
	create_insn	(x=0X8008384);
	op_hex		(x,	1);
	create_insn	(0X800838C);
	create_insn	(x=0X8008392);
	op_hex		(x,	1);
	create_insn	(x=0X8008398);
	op_hex		(x,	1);
	create_insn	(0X80083A0);
	create_insn	(0X80083AC);
	create_insn	(0X80083B2);
	create_insn	(x=0X80083B4);
	op_hex		(x,	1);
	create_insn	(0X80083BC);
	create_insn	(0X80083CA);
	create_insn	(x=0X80083CC);
	op_hex		(x,	1);
	create_insn	(0X80083D4);
	create_insn	(0X80083E2);
	create_insn	(x=0X80083E8);
	op_hex		(x,	1);
	create_insn	(x=0X80083EE);
	op_hex		(x,	1);
	create_insn	(0X80083F6);
	create_insn	(0X8008404);
	create_insn	(x=0X8008408);
	op_hex		(x,	1);
	create_insn	(0X8008414);
	create_insn	(x=0X800841A);
	op_hex		(x,	1);
	create_insn	(x=0X8008420);
	op_hex		(x,	1);
	create_insn	(0X8008428);
	create_insn	(0X8008446);
	create_insn	(0X8008470);
	create_insn	(0X8008488);
	create_insn	(0X800849C);
	create_insn	(x=0X80084A2);
	op_hex		(x,	1);
	create_insn	(x=0X80084A8);
	op_hex		(x,	1);
	create_insn	(0X80084B0);
	create_insn	(x=0X80084B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80084BE);
	create_insn	(x=0X80084C4);
	op_hex		(x,	1);
	create_insn	(x=0X80084CA);
	op_hex		(x,	1);
	create_insn	(0X80084D2);
	create_insn	(x=0X80084D8);
	op_hex		(x,	1);
	create_insn	(x=0X80084DE);
	op_hex		(x,	1);
	create_insn	(0X80084E6);
	create_insn	(x=0X80084E8);
	op_hex		(x,	1);
	create_insn	(0X80084F2);
	create_insn	(x=0X80084F8);
	op_hex		(x,	1);
	create_insn	(x=0X80084FE);
	op_hex		(x,	1);
	create_insn	(0X8008506);
	create_insn	(x=0X800850C);
	op_hex		(x,	1);
	create_insn	(x=0X8008512);
	op_hex		(x,	1);
	create_insn	(0X800851A);
	create_insn	(0X8008528);
	create_insn	(0X8008546);
	create_insn	(0X8008572);
	create_insn	(x=0X8008576);
	op_hex		(x,	1);
	create_insn	(0X8008582);
	create_insn	(0X800858C);
	create_insn	(0X800859A);
	create_insn	(0X80085A6);
	create_insn	(0X80085AC);
	create_insn	(x=0X80085AE);
	op_hex		(x,	1);
	create_insn	(x=0X80085B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80085C2);
	op_hex		(x,	1);
	create_insn	(x=0X80085C8);
	op_hex		(x,	1);
	create_insn	(0X80085D0);
	create_insn	(0X80085DE);
	create_insn	(0X80085E4);
	create_insn	(0X8008600);
	create_dword	(x=0X8008608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800860C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8008614);
	create_dword	(0X8008618);
	create_dword	(0X800861C);
	create_insn	(x=0X8008620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008630);
	create_insn	(0X8008646);
	create_insn	(x=0X800864C);
	op_hex		(x,	1);
	create_insn	(x=0X8008654);
	op_hex		(x,	1);
	create_insn	(0X8008660);
	create_insn	(x=0X800867A);
	op_hex		(x,	1);
	create_insn	(x=0X8008688);
	op_hex		(x,	1);
	create_insn	(x=0X8008696);
	op_hex		(x,	1);
	create_insn	(x=0X80086A4);
	op_hex		(x,	1);
	create_insn	(x=0X80086B2);
	op_hex		(x,	1);
	create_insn	(x=0X80086C0);
	op_hex		(x,	1);
	create_insn	(x=0X80086E6);
	op_hex		(x,	1);
	create_insn	(0X80086F0);
	create_insn	(x=0X80086F4);
	op_hex		(x,	1);
	create_insn	(x=0X80086FA);
	op_hex		(x,	1);
	create_insn	(x=0X8008700);
	op_hex		(x,	1);
	create_insn	(x=0X8008706);
	op_hex		(x,	1);
	create_insn	(x=0X800870C);
	op_hex		(x,	1);
	create_insn	(x=0X8008712);
	op_hex		(x,	1);
	create_insn	(0X8008718);
	create_insn	(0X800872E);
	create_insn	(x=0X8008732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800873A);
	op_hex		(x,	1);
	create_insn	(x=0X8008740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800874A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800874C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80087A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80087B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80087C0);
	create_insn	(0X80087C4);
	create_insn	(x=0X80087E4);
	op_hex		(x,	1);
	create_insn	(0X80087EC);
	create_insn	(x=0X800880C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008810);
	op_hex		(x,	1);
	create_insn	(x=0X800882A);
	op_hex		(x,	1);
	create_insn	(0X8008832);
	create_insn	(x=0X8008838);
	op_hex		(x,	1);
	create_insn	(x=0X800883E);
	op_hex		(x,	1);
	create_insn	(0X8008846);
	create_insn	(x=0X800884C);
	op_hex		(x,	1);
	create_insn	(x=0X8008856);
	op_hex		(x,	1);
	create_insn	(x=0X8008862);
	op_hex		(x,	1);
	create_insn	(x=0X800886E);
	op_hex		(x,	1);
	create_insn	(x=0X8008874);
	op_hex		(x,	1);
	create_insn	(x=0X800887E);
	op_hex		(x,	1);
	create_insn	(x=0X800888A);
	op_hex		(x,	1);
	create_insn	(x=0X8008896);
	op_hex		(x,	1);
	create_insn	(0X80088A0);
	create_insn	(0X80088B6);
	create_insn	(x=0X80088C6);
	op_hex		(x,	1);
	create_insn	(x=0X80088EC);
	op_hex		(x,	1);
	create_insn	(x=0X80088F4);
	op_hex		(x,	1);
	create_insn	(x=0X8008918);
	op_hex		(x,	1);
	create_insn	(0X8008920);
	create_insn	(0X8008924);
	create_insn	(0X8008938);
	create_insn	(0X8008946);
	create_insn	(0X800894C);
	create_insn	(0X800896C);
	create_insn	(0X8008972);
	create_insn	(0X8008988);
	create_insn	(0X800898C);
	create_insn	(0X8008990);
	create_insn	(x=0X800899C);
	op_hex		(x,	1);
	create_insn	(0X80089A4);
	create_insn	(x=0X80089A6);
	op_hex		(x,	1);
	create_insn	(0X80089AC);
	create_insn	(x=0X80089AE);
	op_hex		(x,	1);
	create_insn	(0X80089B4);
	create_insn	(x=0X80089BE);
	op_hex		(x,	1);
	create_insn	(x=0X80089D4);
	op_hex		(x,	1);
	create_insn	(x=0X80089DC);
	op_hex		(x,	1);
	make_array	(0X8008A1A,	0X2);
	create_dword	(x=0X8008A1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8008A24);
	create_dword	(0X8008A28);
	create_dword	(0X8008A2C);
	create_dword	(0X8008A30);
	create_dword	(0X8008A34);
	create_insn	(x=0X8008A38);
	op_hex		(x,	1);
	create_insn	(0X8008A40);
	create_insn	(0X8008A46);
	create_insn	(x=0X8008A48);
	op_hex		(x,	1);
	create_insn	(0X8008A50);
	create_insn	(x=0X8008A54);
	op_hex		(x,	1);
	create_insn	(0X8008A5C);
	create_insn	(x=0X8008A5E);
	op_hex		(x,	1);
	create_insn	(0X8008A66);
	create_insn	(x=0X8008A72);
	op_hex		(x,	1);
	create_insn	(0X8008A78);
	create_insn	(0X8008A7C);
	create_insn	(0X8008A8E);
	create_insn	(x=0X8008A90);
	op_hex		(x,	1);
	create_insn	(x=0X8008A94);
	op_hex		(x,	1);
	create_insn	(0X8008A9C);
	create_insn	(x=0X8008AA0);
	op_hex		(x,	1);
	create_insn	(x=0X8008AAE);
	op_hex		(x,	1);
	create_insn	(0X8008AB8);
	create_insn	(x=0X8008ABA);
	op_hex		(x,	1);
	create_insn	(0X8008AC2);
	create_insn	(0X8008AD6);
	create_insn	(x=0X8008AD8);
	op_hex		(x,	1);
	create_insn	(x=0X8008ADC);
	op_hex		(x,	1);
	create_insn	(0X8008AE4);
	create_insn	(x=0X8008AE8);
	op_hex		(x,	1);
	create_insn	(x=0X8008AF6);
	op_hex		(x,	1);
	create_insn	(0X8008B02);
	create_insn	(0X8008B08);
	create_insn	(x=0X8008B0C);
	op_hex		(x,	1);
	create_insn	(x=0X8008B10);
	op_hex		(x,	1);
	create_insn	(x=0X8008B18);
	op_hex		(x,	1);
	create_insn	(0X8008B26);
	create_insn	(x=0X8008B2E);
	op_hex		(x,	1);
	create_insn	(0X8008B36);
	create_insn	(0X8008B50);
	create_insn	(0X8008B5A);
	create_insn	(0X8008B60);
	create_insn	(0X8008B68);
	create_insn	(0X8008B72);
	create_insn	(0X8008B78);
	create_insn	(x=0X8008B7C);
	op_hex		(x,	1);
	create_insn	(0X8008B86);
	create_insn	(0X8008B8A);
	create_insn	(0X8008B98);
	create_insn	(0X8008BA0);
	create_insn	(0X8008BA8);
	create_insn	(0X8008BAC);
	create_insn	(0X8008BB8);
	create_insn	(0X8008BC4);
	create_insn	(0X8008BCC);
	create_insn	(0X8008BD4);
	create_insn	(0X8008BD8);
	create_insn	(0X8008C00);
	create_insn	(0X8008C12);
	create_insn	(0X8008C32);
	create_insn	(0X8008C42);
	create_insn	(0X8008C48);
	create_insn	(0X8008C4C);
	create_insn	(0X8008C50);
	create_insn	(0X8008C56);
	create_insn	(0X8008C5C);
	create_insn	(0X8008C60);
	create_insn	(0X8008C66);
	create_insn	(0X8008C6C);
	create_insn	(0X8008C70);
	create_insn	(0X8008C78);
	create_insn	(0X8008C7A);
	create_insn	(0X8008CA0);
	create_insn	(0X8008CAC);
	create_insn	(0X8008CC8);
	create_insn	(0X8008CD8);
	create_insn	(0X8008CDE);
	create_insn	(0X8008CE2);
	create_insn	(0X8008CE6);
	create_insn	(0X8008CEA);
	create_insn	(0X8008CEE);
	make_array	(0X8008CFA,	0X2);
	create_dword	(0X8008CFC);
	create_dword	(0X8008D00);
	create_insn	(0X8008D04);
	create_insn	(x=0X8008D18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D1A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D22);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D24);
	op_hex		(x,	1);
	create_insn	(x=0X8008D2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D32);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D34);
	op_hex		(x,	1);
	create_insn	(x=0X8008D38);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D44);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D46);
	op_hex		(x,	1);
	create_insn	(x=0X8008D4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D54);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D56);
	op_hex		(x,	1);
	create_insn	(x=0X8008D5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D64);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D66);
	op_hex		(x,	1);
	create_insn	(x=0X8008D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D74);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D76);
	op_hex		(x,	1);
	create_insn	(x=0X8008D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D84);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X8008D86);
	op_hex		(x,	1);
	create_insn	(x=0X8008D8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008D96);
	op_hex		(x,	1);
	create_insn	(x=0X8008D9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008DA6);
	op_hex		(x,	1);
	create_insn	(x=0X8008DAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008DB8);
	op_hex		(x,	1);
	create_insn	(x=0X8008DBE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008DC8);
	op_hex		(x,	1);
	create_insn	(x=0X8008DCE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008DD8);
	op_hex		(x,	1);
	create_insn	(0X8008DDE);
	create_insn	(0X8008E18);
	create_insn	(0X8008E32);
	create_insn	(x=0X8008E38);
	op_hex		(x,	1);
	create_insn	(0X8008E3E);
	create_insn	(0X8008E48);
	create_insn	(0X8008E52);
	create_insn	(0X8008E58);
	create_insn	(0X8008E5C);
	create_insn	(0X8008E62);
	create_insn	(x=0X8008E6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008E70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008E7E);
	create_insn	(x=0X8008E82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008E8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008E8E);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(0X8008E92);
	create_insn	(x=0X8008E9A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008EA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008EAE);
	create_insn	(x=0X8008EB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008EBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008EBE);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	make_array	(0X8008EC2,	0X2);
	create_dword	(x=0X8008EC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8008EC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8008ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008EDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008EE8);
	create_insn	(x=0X8008EEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008F0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008F36);
	create_insn	(0X8008F48);
	create_insn	(0X8008F54);
	create_insn	(x=0X8008F62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8008F6E);
	create_insn	(x=0X8008F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008F80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008F90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8008FAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8008FB0);
	create_insn	(x=0X8008FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FB8);
	op_hex		(x,	1);
	create_insn	(x=0X8008FC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FC6);
	op_hex		(x,	1);
	create_insn	(x=0X8008FD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FD8);
	op_hex		(x,	1);
	create_insn	(x=0X8008FE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FEA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8008FEE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8008FF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8008FF6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8008FFA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8008FFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009000);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009002);
	op_hex		(x,	1);
	create_insn	(x=0X8009006);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800900A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800900C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800900E);
	op_hex		(x,	1);
	create_insn	(x=0X8009012);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009016);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800901A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009024);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800902E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009038);
	create_insn	(0X8009042);
	create_insn	(0X8009054);
	create_insn	(0X800905A);
	create_insn	(x=0X800906C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800906E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009070);
	op_hex		(x,	1);
	create_insn	(x=0X8009074);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009076);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009078);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800907A);
	op_hex		(x,	1);
	create_insn	(x=0X800907E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009086);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800908E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009092);
	create_insn	(x=0X80090A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80090A4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090A6);
	op_hex		(x,	1);
	create_insn	(x=0X80090AA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090AC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090AE);
	op_hex		(x,	1);
	create_insn	(x=0X80090B2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090BA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090C2);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80090C6);
	create_insn	(0X80090D0);
	create_insn	(0X80090E2);
	create_insn	(0X80090E8);
	create_insn	(x=0X80090F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80090FA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80090FC);
	op_hex		(x,	1);
	create_insn	(x=0X8009100);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009102);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009104);
	op_hex		(x,	1);
	create_insn	(x=0X8009108);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009110);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009118);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800911C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009120);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800912A);
	create_insn	(x=0X8009144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009148);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800914C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800914E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009150);
	op_hex		(x,	1);
	create_insn	(x=0X8009154);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009156);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009158);
	op_hex		(x,	1);
	create_insn	(x=0X800915C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800916C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009174);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009176);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009178);
	op_hex		(x,	1);
	create_insn	(x=0X800917C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800917E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800918E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009192);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009196);
	create_insn	(x=0X80091AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091B0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80091B2);
	op_hex		(x,	1);
	create_insn	(x=0X80091B6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80091D6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80091DA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80091DE);
	create_insn	(x=0X80091F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80091F4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80091F6);
	op_hex		(x,	1);
	create_insn	(x=0X80091FA);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009204);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800920A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800920E);
	create_insn	(x=0X8009222);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009226);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800922A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800922C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800922E);
	op_hex		(x,	1);
	create_insn	(x=0X8009232);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009240);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009248);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X800924C);
	create_insn	(x=0X800926C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009272);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009278);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800927C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009280);
	op_hex		(x,	1);
	create_insn	(x=0X8009284);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800928C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80092A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80092B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80092C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80092EA);
	create_insn	(x=0X80092FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009300);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009304);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009306);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009308);
	op_hex		(x,	1);
	create_insn	(x=0X800930C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800930E);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009310);
	op_hex		(x,	1);
	create_insn	(x=0X8009314);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009328);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800932C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009330);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009334);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009336);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009338);
	op_hex		(x,	1);
	create_insn	(x=0X800933C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800933E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009346);
	create_insn	(x=0X8009354);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800935C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X8009360);
	create_insn	(x=0X8009362);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800936C);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009370);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009380);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009382);
	op_hex		(x,	1);
	create_insn	(x=0X8009386);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800938A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009390);
	op_hex		(x,	1);
	create_insn	(x=0X80093A0);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80093A8);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_dword	(x=0X80093AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80093B0);
	create_dword	(0X80093B4);
	create_dword	(x=0X80093B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X80093BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093BE);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80093C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093C6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80093CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093DC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80093E4);
	create_insn	(x=0X80093E6);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(0X80093EA);
	create_insn	(x=0X80093EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80093F4);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X80093FC);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009408);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800940C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009410);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X800941A);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	create_insn	(x=0X8009424);
	op_plain_offset	(x,	1,	0X40022000);
	op_plain_offset	(x,	129,	0X40022000);
	make_array	(0X800942E,	0X2);
	create_dword	(x=0X8009430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800944A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800945E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009472);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009486);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800949A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80094AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80094CA);
	create_insn	(0X80094CC);
	create_insn	(0X80094E2);
	create_insn	(x=0X80094E8);
	op_hex		(x,	1);
	create_insn	(0X800952A);
	create_insn	(0X800952E);
	create_insn	(0X800957A);
	create_insn	(0X800958A);
	create_insn	(0X8009598);
	create_insn	(0X800959E);
	create_insn	(0X80095AC);
	create_insn	(0X80095B2);
	create_insn	(0X80095B6);
	create_insn	(0X80095BA);
	create_insn	(0X80095C0);
	create_insn	(0X80095C4);
	create_insn	(x=0X80095C8);
	op_hex		(x,	1);
	create_insn	(x=0X80095D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095F0);
	op_plain_offset	(x,	1,	0X42200000);
	op_plain_offset	(x,	129,	0X42200000);
	create_insn	(0X80095F4);
	create_insn	(x=0X80095F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80095FC);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009600);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009622);
	op_hex		(x,	1);
	create_insn	(x=0X8009626);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009628);
	op_hex		(x,	1);
	create_insn	(x=0X800962C);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(0X8009630);
	create_insn	(x=0X8009632);
	op_hex		(x,	1);
	create_insn	(x=0X800963E);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(x=0X8009642);
	op_plain_offset	(x,	1,	0X40010000);
	op_plain_offset	(x,	129,	0X40010000);
	create_insn	(0X8009646);
	create_insn	(x=0X800964A);
	op_hex		(x,	1);
	create_insn	(x=0X800964E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8009670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800967C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800968C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800969A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800969C);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(x=0X80096A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096A2);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	create_insn	(x=0X80096A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80096C0);
	op_plain_offset	(x,	1,	0X40003000);
	op_plain_offset	(x,	129,	0X40003000);
	make_array	(0X80096CA,	0X2);
	create_dword	(x=0X80096CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80096D0);
	create_insn	(x=0X80096D4);
	op_hex		(x,	1);
	create_insn	(x=0X80096DA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80096E0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80096EC);
	op_hex		(x,	1);
	create_insn	(x=0X80096F2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80096F4);
	op_hex		(x,	1);
	create_insn	(x=0X80096F8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80096FE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009702);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009706);
	op_hex		(x,	1);
	create_insn	(x=0X800970E);
	op_hex		(x,	1);
	create_insn	(x=0X8009722);
	op_hex		(x,	1);
	create_insn	(0X800972A);
	create_insn	(x=0X800972C);
	op_hex		(x,	1);
	create_insn	(0X8009732);
	create_insn	(x=0X8009738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009742);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009744);
	op_hex		(x,	1);
	create_insn	(0X8009754);
	create_insn	(x=0X8009758);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800975C);
	create_insn	(x=0X8009788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800978C);
	op_hex		(x,	1);
	create_insn	(x=0X8009798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800979E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097A0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097A4);
	op_hex		(x,	1);
	create_insn	(x=0X80097AA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097B0);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(x=0X80097B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097B6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097B8);
	op_hex		(x,	1);
	create_insn	(x=0X80097BE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097C4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097C6);
	op_hex		(x,	1);
	create_insn	(x=0X80097CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097CE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097D0);
	op_hex		(x,	1);
	create_insn	(x=0X80097D6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097DC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097DE);
	op_hex		(x,	1);
	create_insn	(x=0X80097E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097EA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097EC);
	op_hex		(x,	1);
	create_insn	(x=0X80097F4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80097F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80097FC);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009804);
	create_insn	(x=0X8009806);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800980A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009812);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009814);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009816);
	op_hex		(x,	1);
	create_insn	(x=0X800981C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009824);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009828);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009836);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800983C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009842);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009844);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009848);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800984C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009854);
	create_insn	(x=0X8009856);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009858);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800985C);
	op_hex		(x,	1);
	create_insn	(0X800986E);
	create_insn	(x=0X8009872);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009874);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009876);
	op_hex		(x,	1);
	create_insn	(x=0X800987E);
	op_hex		(x,	1);
	create_insn	(x=0X8009888);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009892);
	create_insn	(0X8009896);
	create_insn	(x=0X800989C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80098A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098AE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80098BE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80098CA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X80098E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80098E4);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X80098EC);
	create_insn	(x=0X80098EE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X80098F2);
	create_insn	(x=0X80098F6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X80098FE);
	create_insn	(x=0X8009900);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009904);
	create_insn	(x=0X8009908);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009910);
	create_insn	(x=0X8009912);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800991A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009922);
	create_insn	(x=0X8009924);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009928);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800992C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X8009934);
	create_insn	(x=0X8009936);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800993A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009942);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009944);
	op_plain_offset	(x,	1,	0X42420000);
	op_plain_offset	(x,	129,	0X42420000);
	create_insn	(x=0X8009948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800994A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800994E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009950);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X8009952);
	op_hex		(x,	1);
	create_insn	(x=0X8009956);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800995A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009960);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800996A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800996C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_dword	(x=0X8009970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009974);
	create_dword	(0X8009978);
	create_dword	(x=0X800997C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8009984);
	create_dword	(0X8009988);
	create_dword	(0X800998C);
	create_dword	(0X8009990);
	create_dword	(x=0X8009994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80099C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80099DE);
	create_insn	(0X80099E0);
	create_insn	(x=0X80099E6);
	op_hex		(x,	1);
	create_insn	(x=0X8009A0C);
	op_hex		(x,	1);
	create_insn	(0X8009A18);
	create_insn	(x=0X8009A6C);
	op_hex		(x,	1);
	create_insn	(x=0X8009AA0);
	op_hex		(x,	1);
	create_insn	(0X8009AAA);
	create_insn	(0X8009AAE);
	create_insn	(0X8009AC6);
	create_insn	(0X8009AD8);
	create_insn	(x=0X8009ADE);
	op_hex		(x,	1);
	create_insn	(x=0X8009AE4);
	op_hex		(x,	1);
	create_insn	(0X8009AEC);
	create_insn	(x=0X8009AF2);
	op_hex		(x,	1);
	create_insn	(x=0X8009AF8);
	op_hex		(x,	1);
	create_insn	(0X8009B00);
	create_insn	(0X8009B12);
	create_insn	(0X8009B18);
	create_insn	(0X8009B22);
	create_insn	(0X8009B28);
	create_insn	(0X8009B2C);
	create_insn	(0X8009B30);
	create_insn	(x=0X8009B3A);
	op_hex		(x,	1);
	create_insn	(x=0X8009B40);
	op_hex		(x,	1);
	create_insn	(0X8009B48);
	create_insn	(x=0X8009B4E);
	op_hex		(x,	1);
	create_insn	(x=0X8009B54);
	op_hex		(x,	1);
	create_insn	(0X8009B5C);
	create_insn	(x=0X8009B5E);
	op_hex		(x,	1);
	create_insn	(0X8009B6C);
	create_insn	(x=0X8009B6E);
	op_hex		(x,	1);
	create_insn	(0X8009B76);
	create_insn	(x=0X8009B7C);
	op_hex		(x,	1);
	create_insn	(x=0X8009B82);
	op_hex		(x,	1);
	create_insn	(0X8009B8A);
	create_insn	(0X8009B92);
	create_insn	(0X8009B96);
	create_insn	(0X8009B9A);
	create_insn	(x=0X8009BA2);
	op_hex		(x,	1);
	create_insn	(x=0X8009BAA);
	op_hex		(x,	1);
	create_insn	(0X8009BB0);
	create_insn	(0X8009BBE);
	create_insn	(0X8009BC4);
	create_insn	(x=0X8009BC6);
	op_hex		(x,	1);
	create_insn	(x=0X8009BF0);
	op_hex		(x,	1);
	make_array	(0X8009BFE,	0X2);
	create_dword	(x=0X8009C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009C04);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8009C0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009C1A);
	create_insn	(x=0X8009C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009C34);
	create_insn	(x=0X8009C42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C6A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009C9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CAA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CD6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009CEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009D3A);
	create_insn	(0X8009D3C);
	create_insn	(x=0X8009D40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D64);
	op_hex		(x,	1);
	create_insn	(x=0X8009D78);
	op_hex		(x,	1);
	create_insn	(x=0X8009D92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009D9E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8009DAE);
	create_insn	(x=0X8009DB2);
	op_hex		(x,	1);
	create_insn	(x=0X8009DBE);
	op_hex		(x,	1);
	create_insn	(x=0X8009DC2);
	op_hex		(x,	1);
	create_insn	(x=0X8009DD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DDE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009DF0);
	op_hex		(x,	1);
	create_insn	(x=0X8009DF6);
	op_hex		(x,	1);
	create_insn	(x=0X8009DFC);
	op_hex		(x,	1);
	create_insn	(0X8009E18);
	create_insn	(x=0X8009E1C);
	op_hex		(x,	1);
	create_insn	(x=0X8009E2A);
	op_hex		(x,	1);
	create_insn	(x=0X8009E3A);
	op_hex		(x,	1);
	create_insn	(x=0X8009E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E52);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009E58);
	op_hex		(x,	1);
	create_insn	(x=0X8009E5E);
	op_hex		(x,	1);
	create_insn	(x=0X8009E68);
	op_hex		(x,	1);
	create_insn	(0X8009E90);
	create_insn	(x=0X8009E94);
	op_hex		(x,	1);
	create_insn	(x=0X8009EA2);
	op_hex		(x,	1);
	create_insn	(x=0X8009EAE);
	op_hex		(x,	1);
	create_insn	(x=0X8009EC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009EC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009ECC);
	op_hex		(x,	1);
	create_insn	(x=0X8009ED2);
	op_hex		(x,	1);
	create_insn	(x=0X8009EDC);
	op_hex		(x,	1);
	create_insn	(0X8009F04);
	create_insn	(x=0X8009F08);
	op_hex		(x,	1);
	create_insn	(x=0X8009F16);
	op_hex		(x,	1);
	create_insn	(x=0X8009F24);
	op_hex		(x,	1);
	create_insn	(x=0X8009F38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F3E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009F44);
	op_hex		(x,	1);
	create_insn	(0X8009F5E);
	create_insn	(x=0X8009F60);
	op_hex		(x,	1);
	create_insn	(0X8009F76);
	create_insn	(x=0X8009F78);
	op_hex		(x,	1);
	create_insn	(0X8009F86);
	create_insn	(x=0X8009F88);
	op_hex		(x,	1);
	create_insn	(0X8009F9E);
	create_insn	(x=0X8009FA2);
	op_hex		(x,	1);
	create_insn	(x=0X8009FB0);
	op_hex		(x,	1);
	create_insn	(x=0X8009FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8009FE8);
	op_hex		(x,	1);
	create_insn	(x=0X8009FEE);
	op_hex		(x,	1);
	create_dword	(x=0X8009FF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009FF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8009FFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A00C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A01C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A024);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A02C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800A034);
	op_hex		(x,	1);
	create_insn	(x=0X800A03A);
	op_hex		(x,	1);
	create_insn	(0X800A044);
	create_insn	(x=0X800A046);
	op_hex		(x,	1);
	create_insn	(0X800A054);
	create_insn	(x=0X800A058);
	op_hex		(x,	1);
	create_insn	(x=0X800A06C);
	op_hex		(x,	1);
	create_insn	(x=0X800A070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A08A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A090);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A096);
	op_hex		(x,	1);
	create_insn	(x=0X800A09C);
	op_hex		(x,	1);
	create_insn	(x=0X800A0A2);
	op_hex		(x,	1);
	create_insn	(0X800A0AC);
	create_insn	(x=0X800A0B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A0E2);
	op_hex		(x,	1);
	create_insn	(x=0X800A0F2);
	op_hex		(x,	1);
	create_insn	(x=0X800A11C);
	op_hex		(x,	1);
	create_insn	(0X800A124);
	create_insn	(0X800A134);
	create_insn	(0X800A144);
	create_insn	(x=0X800A146);
	op_hex		(x,	1);
	create_insn	(x=0X800A15A);
	op_hex		(x,	1);
	create_insn	(x=0X800A182);
	op_hex		(x,	1);
	create_insn	(x=0X800A18A);
	op_hex		(x,	1);
	create_insn	(x=0X800A190);
	op_hex		(x,	1);
	create_insn	(x=0X800A1A2);
	op_hex		(x,	1);
	create_insn	(x=0X800A1A8);
	op_hex		(x,	1);
	create_insn	(0X800A1BA);
	create_insn	(0X800A200);
	create_insn	(0X800A222);
	create_insn	(0X800A244);
	create_insn	(0X800A256);
	create_insn	(0X800A26A);
	create_insn	(0X800A27A);
	create_insn	(0X800A28C);
	create_insn	(x=0X800A292);
	op_hex		(x,	1);
	create_insn	(x=0X800A298);
	op_hex		(x,	1);
	create_insn	(0X800A2A0);
	create_insn	(x=0X800A2A8);
	op_hex		(x,	1);
	create_insn	(0X800A2AE);
	create_insn	(0X800A2B6);
	create_insn	(0X800A2C0);
	create_insn	(0X800A2C6);
	create_insn	(0X800A2CA);
	create_insn	(0X800A2D2);
	create_insn	(0X800A2DC);
	create_insn	(0X800A2E2);
	create_insn	(x=0X800A2E4);
	op_hex		(x,	1);
	create_insn	(0X800A2EC);
	create_insn	(x=0X800A2EE);
	op_hex		(x,	1);
	create_insn	(0X800A2F8);
	create_insn	(x=0X800A302);
	op_hex		(x,	1);
	create_insn	(0X800A30A);
	create_insn	(x=0X800A32A);
	op_hex		(x,	1);
	create_insn	(0X800A332);
	create_insn	(0X800A338);
	create_insn	(0X800A350);
	create_insn	(x=0X800A35A);
	op_hex		(x,	1);
	create_insn	(0X800A362);
	create_insn	(x=0X800A36C);
	op_hex		(x,	1);
	create_insn	(0X800A374);
	create_insn	(0X800A37A);
	create_insn	(x=0X800A37C);
	op_hex		(x,	1);
	create_insn	(0X800A386);
	create_insn	(x=0X800A38E);
	op_hex		(x,	1);
	create_insn	(x=0X800A3A8);
	op_hex		(x,	1);
	create_insn	(0X800A3B8);
	create_insn	(x=0X800A3BA);
	op_hex		(x,	1);
	create_insn	(0X800A3C4);
	create_insn	(x=0X800A3CA);
	op_hex		(x,	1);
	create_insn	(0X800A3D8);
	create_insn	(x=0X800A3DA);
	op_hex		(x,	1);
	create_insn	(0X800A3E4);
	create_insn	(x=0X800A3EA);
	op_hex		(x,	1);
	create_insn	(0X800A3F8);
	create_insn	(x=0X800A3FE);
	op_hex		(x,	1);
	create_insn	(x=0X800A404);
	op_hex		(x,	1);
	create_insn	(0X800A40C);
	create_insn	(x=0X800A412);
	op_hex		(x,	1);
	create_insn	(x=0X800A418);
	op_hex		(x,	1);
	create_insn	(0X800A420);
	create_insn	(x=0X800A426);
	op_hex		(x,	1);
	create_insn	(x=0X800A42C);
	op_hex		(x,	1);
	create_insn	(0X800A434);
	create_insn	(x=0X800A43A);
	op_hex		(x,	1);
	create_insn	(x=0X800A440);
	op_hex		(x,	1);
	create_insn	(0X800A448);
	create_insn	(x=0X800A44A);
	op_hex		(x,	1);
	create_dword	(x=0X800A454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A45C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800A464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800A468);
	create_insn	(x=0X800A46E);
	op_hex		(x,	1);
	create_insn	(0X800A47C);
	create_insn	(x=0X800A47E);
	op_hex		(x,	1);
	create_insn	(0X800A488);
	create_insn	(x=0X800A48E);
	op_hex		(x,	1);
	create_insn	(0X800A49C);
	create_insn	(x=0X800A49E);
	op_hex		(x,	1);
	create_insn	(0X800A4A8);
	create_insn	(x=0X800A4AE);
	op_hex		(x,	1);
	create_insn	(0X800A4BC);
	create_insn	(x=0X800A4BE);
	op_hex		(x,	1);
	create_insn	(0X800A4C8);
	create_insn	(x=0X800A4CE);
	op_hex		(x,	1);
	create_insn	(0X800A4DC);
	create_insn	(x=0X800A4DE);
	op_hex		(x,	1);
	create_insn	(0X800A4E8);
	create_insn	(0X800A4FC);
	create_insn	(x=0X800A4FE);
	op_hex		(x,	1);
	create_insn	(0X800A508);
	create_insn	(0X800A51C);
	create_insn	(x=0X800A51E);
	op_hex		(x,	1);
	create_insn	(0X800A528);
	create_insn	(x=0X800A52A);
	op_hex		(x,	1);
	create_insn	(0X800A534);
	create_insn	(x=0X800A53A);
	op_hex		(x,	1);
	create_insn	(0X800A548);
	create_insn	(x=0X800A54E);
	op_hex		(x,	1);
	create_insn	(0X800A55C);
	create_insn	(x=0X800A562);
	op_hex		(x,	1);
	create_insn	(0X800A570);
	create_insn	(x=0X800A576);
	op_hex		(x,	1);
	create_insn	(0X800A584);
	create_insn	(x=0X800A58A);
	op_hex		(x,	1);
	create_insn	(0X800A598);
	create_insn	(0X800A5AE);
	create_insn	(0X800A5C4);
	create_insn	(x=0X800A5E4);
	op_hex		(x,	1);
	create_insn	(0X800A5FA);
	create_insn	(x=0X800A600);
	op_hex		(x,	1);
	create_insn	(0X800A60A);
	create_insn	(x=0X800A610);
	op_hex		(x,	1);
	create_insn	(x=0X800A616);
	op_hex		(x,	1);
	create_insn	(0X800A61E);
	create_insn	(x=0X800A624);
	op_hex		(x,	1);
	create_insn	(x=0X800A62A);
	op_hex		(x,	1);
	create_insn	(0X800A632);
	create_insn	(x=0X800A638);
	op_hex		(x,	1);
	create_insn	(x=0X800A63E);
	op_hex		(x,	1);
	create_insn	(0X800A646);
	create_insn	(x=0X800A648);
	op_hex		(x,	1);
	create_insn	(0X800A656);
	create_insn	(x=0X800A658);
	op_hex		(x,	1);
	create_insn	(0X800A666);
	create_insn	(x=0X800A668);
	op_hex		(x,	1);
	create_insn	(0X800A676);
	create_insn	(x=0X800A678);
	op_hex		(x,	1);
	create_insn	(0X800A686);
	create_insn	(0X800A68A);
	create_insn	(0X800A68E);
	create_insn	(0X800A692);
	create_insn	(0X800A696);
	create_insn	(0X800A69A);
	create_insn	(0X800A6A0);
	create_insn	(x=0X800A6A2);
	op_hex		(x,	1);
	create_insn	(0X800A6B0);
	create_insn	(x=0X800A6D8);
	op_hex		(x,	1);
	create_insn	(0X800A6DE);
	create_insn	(0X800A6F6);
	create_insn	(x=0X800A6FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A71A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A726);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A732);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800A75A);
	create_insn	(0X800A75C);
	create_insn	(x=0X800A79C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800A7A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800A7A6);
	op_stkvar	(x,	1);
	create_insn	(0X800A7C0);
	create_insn	(x=0X800A7F2);
	op_hex		(x,	1);
	create_insn	(0X800A7F8);
	create_insn	(x=0X800A800);
	op_hex		(x,	1);
	create_insn	(0X800A80C);
	create_insn	(0X800A822);
	create_insn	(0X800A840);
	create_insn	(0X800A84C);
	create_insn	(x=0X800A852);
	op_hex		(x,	1);
	create_insn	(x=0X800A858);
	op_hex		(x,	1);
	create_insn	(0X800A860);
	create_insn	(x=0X800A866);
	op_hex		(x,	1);
	create_insn	(0X800A882);
	create_insn	(0X800A886);
	create_insn	(0X800A88A);
	create_insn	(0X800A890);
	create_insn	(0X800A89A);
	create_insn	(0X800A8A0);
	create_insn	(x=0X800A8A2);
	op_hex		(x,	1);
	create_insn	(0X800A8B0);
	create_insn	(x=0X800A8B2);
	op_hex		(x,	1);
	create_insn	(0X800A8C0);
	create_insn	(x=0X800A8C6);
	op_hex		(x,	1);
	create_insn	(x=0X800A8CC);
	op_hex		(x,	1);
	create_insn	(0X800A8D4);
	create_insn	(x=0X800A8D6);
	op_hex		(x,	1);
	create_insn	(0X800A8E4);
	create_insn	(x=0X800A8EA);
	op_hex		(x,	1);
	create_insn	(x=0X800A8F0);
	op_hex		(x,	1);
	create_insn	(0X800A8F8);
	create_insn	(0X800A900);
	create_insn	(0X800A908);
	create_insn	(x=0X800A90A);
	op_hex		(x,	1);
	create_insn	(0X800A912);
	create_insn	(0X800A922);
	create_insn	(x=0X800A924);
	op_hex		(x,	1);
	create_insn	(0X800A932);
	create_insn	(x=0X800A938);
	op_hex		(x,	1);
	create_insn	(x=0X800A93E);
	op_hex		(x,	1);
	create_insn	(0X800A946);
	create_insn	(x=0X800A94C);
	op_hex		(x,	1);
	create_insn	(x=0X800A952);
	op_hex		(x,	1);
	create_insn	(0X800A95A);
	create_insn	(x=0X800A960);
	op_hex		(x,	1);
	create_insn	(x=0X800A966);
	op_hex		(x,	1);
	create_insn	(0X800A96E);
	create_insn	(x=0X800A974);
	op_hex		(x,	1);
	create_insn	(0X800A97A);
	create_insn	(0X800A982);
	create_insn	(x=0X800A988);
	op_hex		(x,	1);
	create_insn	(x=0X800A98E);
	op_hex		(x,	1);
	create_insn	(0X800A996);
	create_insn	(x=0X800A998);
	op_hex		(x,	1);
	create_insn	(0X800A9A6);
	create_insn	(x=0X800A9AC);
	op_hex		(x,	1);
	create_insn	(x=0X800A9B2);
	op_hex		(x,	1);
	create_insn	(0X800A9BA);
	create_insn	(0X800A9C8);
	create_insn	(0X800A9CE);
	create_insn	(x=0X800A9D0);
	op_hex		(x,	1);
	create_insn	(0X800AA04);
	create_insn	(0X800AA08);
	create_insn	(0X800AA0C);
	create_dword	(x=0X800AA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AA1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AA24);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800AA2C);
	create_insn	(0X800AA34);
	create_insn	(x=0X800AA36);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AA3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AA3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AA44);
	op_stkvar	(x,	1);
	create_insn	(0X800AA50);
	create_insn	(0X800AA64);
	create_insn	(x=0X800AA72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AA86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AA8A);
	create_insn	(0X800AAB8);
	create_insn	(0X800AAC4);
	create_insn	(x=0X800AADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AAE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AAEC);
	create_insn	(0X800AB1A);
	create_insn	(0X800AB26);
	create_insn	(x=0X800AB3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AB48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AB4C);
	create_insn	(0X800AB7A);
	create_insn	(0X800AB86);
	create_insn	(x=0X800AB8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ABA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ABB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800ABBC);
	create_insn	(0X800ABE4);
	create_insn	(x=0X800ABE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ABFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AC16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AC1A);
	create_insn	(0X800AC42);
	create_insn	(x=0X800AC46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AC5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AC74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AC78);
	create_insn	(0X800ACA0);
	create_insn	(x=0X800ACB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ACC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ACC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ACCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ACD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ACDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ACE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ACE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD62);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD72);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD76);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AD88);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AD9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ADA2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800ADA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800ADEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE32);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE56);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AE5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AE66);
	op_stkvar	(x,	1);
	make_array	(0X800AE6A,	0X2);
	create_dword	(x=0X800AE6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE74);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AE9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800AEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800AEA4);
	create_insn	(x=0X800AEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AEB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEBA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AECA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AECE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AED2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AED6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AEF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800AEF8);
	create_insn	(0X800AEFA);
	create_insn	(x=0X800AEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AEFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF02);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF06);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF0A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF12);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF42);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AF96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AF9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AFA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AFB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AFC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AFCA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800AFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AFDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800AFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B000);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B006);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B00A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B00E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B018);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B020);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B036);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B038);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B040);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B044);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B048);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B04C);
	op_stkvar	(x,	1);
	create_insn	(0X800B0A4);
	create_insn	(x=0X800B0AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B0B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B0C8);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	create_insn	(x=0X800B0D0);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	create_insn	(0X800B0D4);
	create_insn	(x=0X800B0E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B0F6);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800B0FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B112);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B116);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B142);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	create_insn	(x=0X800B148);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	create_insn	(x=0X800B14C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B162);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	create_insn	(x=0X800B166);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800B16E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B182);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B186);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B196);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B1AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B1C4);
	op_plain_offset	(x,	1,	0X40020000);
	op_plain_offset	(x,	129,	0X40020000);
	create_insn	(x=0X800B1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B1E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B1E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B1F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B208);
	op_plain_offset	(x,	1,	0X20000014);
	op_plain_offset	(x,	129,	0X20000014);
	make_array	(0X800B20E,	0X2);
	create_dword	(x=0X800B210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B214);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800B21C);
	create_dword	(x=0X800B220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B224);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B22C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B230);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B234);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B23C);
	create_insn	(x=0X800B248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B24E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B254);
	create_insn	(0X800B26A);
	create_insn	(0X800B298);
	create_insn	(x=0X800B29C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B2A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B2AA);
	create_insn	(0X800B2D8);
	create_insn	(0X800B2FC);
	create_insn	(x=0X800B314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B31C);
	create_insn	(x=0X800B32E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B336);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B33A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B344);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B34A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B350);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B354);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B376);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B37A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B37E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B384);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B388);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B392);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B396);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B39A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B39E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B3A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B3CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B3EC);
	create_insn	(x=0X800B3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B40A);
	op_plain_offset	(x,	1,	0X20000090);
	op_plain_offset	(x,	129,	0X20000090);
	create_insn	(x=0X800B410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B41A);
	op_plain_offset	(x,	1,	0X20000090);
	op_plain_offset	(x,	129,	0X20000090);
	create_insn	(x=0X800B41E);
	op_plain_offset	(x,	1,	0X20000090);
	op_plain_offset	(x,	129,	0X20000090);
	create_insn	(x=0X800B424);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B42A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B42E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B434);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B444);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B448);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B450);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B45A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B45C);
	op_plain_offset	(x,	1,	0X20000090);
	op_plain_offset	(x,	129,	0X20000090);
	create_insn	(x=0X800B464);
	op_plain_offset	(x,	1,	0X20000090);
	op_plain_offset	(x,	129,	0X20000090);
	create_insn	(0X800B468);
	create_insn	(0X800B476);
	create_insn	(x=0X800B486);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B4AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B4AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B4B2);
	op_stkvar	(x,	1);
	create_insn	(0X800B4BC);
	create_insn	(x=0X800B4CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B4E6);
	make_array	(0X800B4EE,	0X2);
	create_dword	(x=0X800B4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B4F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B4FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B500);
	set_name	(0X800B500,	"SPI_UsrWaitTransferComplete");
	create_insn	(x=0X800B502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B506);
	create_insn	(x=0X800B514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B51E);
	create_insn	(0X800B52A);
	create_insn	(0X800B536);
	create_insn	(x=0X800B550);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B556);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B55C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B55E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B562);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B56A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B570);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B574);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B57E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B584);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B588);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5B2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B5C8);
	op_stkvar	(x,	1);
	create_insn	(0X800B5E8);
	set_name	(0X800B5E8,	"spi_fpga_or_tcx_transfer_mark");
	create_insn	(x=0X800B5EE);
	op_hex		(x,	1);
	create_insn	(0X800B5F6);
	set_name	(0X800B5F6,	"spi_fpga_or_tcx_transfer_clear");
	create_insn	(x=0X800B5FC);
	op_hex		(x,	1);
	create_dword	(x=0X800B604);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B60C);
	create_insn	(x=0X800B616);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B646);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B64A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B64E);
	op_stkvar	(x,	1);
	create_insn	(0X800B658);
	create_insn	(x=0X800B660);
	op_stkvar	(x,	1);
	create_insn	(0X800B666);
	create_insn	(x=0X800B672);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B676);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B67A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B680);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B68C);
	op_plain_offset	(x,	1,	0X2000009C);
	op_plain_offset	(x,	129,	0X2000009C);
	create_insn	(0X800B69A);
	create_insn	(0X800B6A0);
	create_insn	(0X800B6AC);
	create_insn	(x=0X800B6B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B6DE);
	create_insn	(x=0X800B6E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B6E6);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(0X800B6EC);
	create_insn	(x=0X800B6F6);
	op_plain_offset	(x,	1,	0X2000009C);
	op_plain_offset	(x,	129,	0X2000009C);
	create_insn	(x=0X800B6FA);
	op_plain_offset	(x,	1,	0X2000009C);
	op_plain_offset	(x,	129,	0X2000009C);
	create_dword	(x=0X800B700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B70C);
	create_insn	(x=0X800B71A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B720);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B726);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B728);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B73E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B746);
	op_hex		(x,	1);
	create_insn	(x=0X800B752);
	op_hex		(x,	1);
	create_insn	(x=0X800B75A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B762);
	op_hex		(x,	1);
	create_insn	(x=0X800B76E);
	op_hex		(x,	1);
	create_insn	(x=0X800B776);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B77E);
	op_hex		(x,	1);
	create_insn	(x=0X800B78A);
	op_hex		(x,	1);
	make_array	(0X800B792,	0X2);
	create_dword	(x=0X800B794);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B79C);
	create_insn	(x=0X800B7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B7AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7B6);
	op_stkvar	(x,	1);
	create_insn	(0X800B7CC);
	create_insn	(x=0X800B7CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7D0);
	op_plain_offset	(x,	1,	0X200000A4);
	op_plain_offset	(x,	129,	0X200000A4);
	create_insn	(x=0X800B7DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B7E0);
	op_hex		(x,	1);
	create_insn	(x=0X800B7F0);
	op_hex		(x,	1);
	create_insn	(x=0X800B802);
	op_plain_offset	(x,	1,	0X200000A4);
	op_plain_offset	(x,	129,	0X200000A4);
	create_insn	(x=0X800B808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B80A);
	op_plain_offset	(x,	1,	0X200000A4);
	op_plain_offset	(x,	129,	0X200000A4);
	create_insn	(x=0X800B80E);
	op_plain_offset	(x,	1,	0X200000A4);
	op_plain_offset	(x,	129,	0X200000A4);
	create_insn	(x=0X800B81A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B820);
	op_hex		(x,	1);
	create_dword	(x=0X800B828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B82C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B830);
	create_insn	(x=0X800B832);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B856);
	create_insn	(0X800B858);
	create_insn	(x=0X800B866);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B872);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B874);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B878);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B8A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8AC);
	op_hex		(x,	1);
	create_insn	(x=0X800B8B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8B8);
	op_hex		(x,	1);
	create_insn	(x=0X800B8C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8C4);
	op_hex		(x,	1);
	create_insn	(x=0X800B8CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800B8D4);
	op_hex		(x,	1);
	create_dword	(x=0X800B8DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800B8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800B8E4);
	create_insn	(x=0X800B8EA);
	op_hex		(x,	1);
	create_insn	(0X800B8F2);
	create_insn	(x=0X800B8FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800B90E);
	create_insn	(x=0X800B920);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(0X800B92C);
	create_insn	(x=0X800B93E);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(0X800B942);
	create_insn	(x=0X800B954);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(0X800B95E);
	create_insn	(0X800B978);
	create_insn	(0X800B97A);
	create_insn	(x=0X800B98A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B990);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B99A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B99E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800B9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BA24);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(0X800BA28);
	create_insn	(x=0X800BA2C);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(x=0X800BA30);
	op_plain_offset	(x,	1,	0X200000B0);
	op_plain_offset	(x,	129,	0X200000B0);
	create_insn	(0X800BA34);
	create_insn	(x=0X800BA3A);
	op_hex		(x,	1);
	create_insn	(0X800BA42);
	create_insn	(x=0X800BA48);
	op_hex		(x,	1);
	create_insn	(x=0X800BA50);
	op_plain_offset	(x,	1,	0X40000000);
	op_plain_offset	(x,	129,	0X40000000);
	create_insn	(x=0X800BA54);
	op_hex		(x,	1);
	create_dword	(x=0X800BA5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BA60);
	create_insn	(x=0X800BA68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BA76);
	create_insn	(0X800BA78);
	create_insn	(x=0X800BA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA8A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BA96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BAA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BACE);
	create_insn	(0X800BAD4);
	create_insn	(x=0X800BAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAE8);
	op_stkvar	(x,	1);
	create_insn	(0X800BAF4);
	create_insn	(x=0X800BAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB00);
	op_stkvar	(x,	1);
	create_dword	(x=0X800BB0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800BB14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB16);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	create_insn	(x=0X800BB18);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	create_insn	(x=0X800BB1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB20);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	create_insn	(x=0X800BB22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BB30);
	create_insn	(x=0X800BB32);
	op_hex		(x,	1);
	create_insn	(x=0X800BB3A);
	op_hex		(x,	1);
	create_insn	(0X800BB42);
	create_insn	(x=0X800BB44);
	op_hex		(x,	1);
	create_insn	(x=0X800BB4C);
	op_hex		(x,	1);
	create_insn	(x=0X800BB52);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	create_insn	(0X800BB5E);
	create_insn	(x=0X800BB60);
	op_hex		(x,	1);
	create_insn	(x=0X800BB68);
	op_hex		(x,	1);
	create_insn	(0X800BB6E);
	create_insn	(x=0X800BB70);
	op_hex		(x,	1);
	create_insn	(x=0X800BB78);
	op_hex		(x,	1);
	create_insn	(x=0X800BB80);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	create_insn	(0X800BB84);
	create_insn	(x=0X800BB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB96);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BBB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBC6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BBCE);
	op_plain_offset	(x,	1,	0X200000C4);
	op_plain_offset	(x,	129,	0X200000C4);
	make_array	(0X800BBD2,	0X2);
	create_dword	(x=0X800BBD4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BBDC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BBE0);
	create_insn	(x=0X800BBEC);
	op_stkvar	(x,	1);
	create_insn	(0X800BBF2);
	create_insn	(x=0X800BBFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC0A);
	op_stkvar	(x,	1);
	create_insn	(0X800BC16);
	create_insn	(0X800BC1E);
	create_insn	(0X800BC2C);
	create_insn	(x=0X800BC3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC3E);
	op_stkvar	(x,	1);
	create_insn	(0X800BC70);
	create_insn	(x=0X800BC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BC90);
	op_stkvar	(x,	1);
	create_insn	(0X800BCA0);
	create_insn	(0X800BCD2);
	create_insn	(0X800BCDA);
	create_insn	(x=0X800BCDE);
	op_stkvar	(x,	1);
	create_insn	(0X800BCEA);
	create_insn	(0X800BD04);
	create_insn	(0X800BD1E);
	make_array	(0X800BD2E,	0X2);
	create_insn	(0X800BD30);
	create_insn	(0X800BD50);
	create_insn	(0X800BD70);
	create_insn	(x=0X800BD74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BD80);
	create_insn	(x=0X800BD82);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BD8A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800BD92,	0X2);
	create_dword	(x=0X800BD94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800BD98);
	create_insn	(x=0X800BDAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BDBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BDC6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BDCA);
	op_stkvar	(x,	1);
	create_insn	(0X800BE08);
	create_insn	(x=0X800BE0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800BE36);
	create_insn	(x=0X800BE66);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BE7A);
	op_plain_offset	(x,	1,	0X200000CC);
	op_plain_offset	(x,	129,	0X200000CC);
	create_insn	(0X800BE7E);
	create_insn	(x=0X800BE9E);
	op_plain_offset	(x,	1,	0X200000CC);
	op_plain_offset	(x,	129,	0X200000CC);
	make_array	(0X800BEA2,	0X2);
	create_dword	(x=0X800BEA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800BEA8);
	create_dword	(0X800BEAC);
	create_dword	(0X800BEB0);
	create_dword	(0X800BEB4);
	create_dword	(0X800BEB8);
	create_dword	(x=0X800BEBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800BEC4);
	create_insn	(0X800BEC8);
	create_insn	(x=0X800BEEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BEEE);
	op_hex		(x,	1);
	create_insn	(0X800BEF4);
	create_insn	(0X800BEF8);
	create_insn	(0X800BEFC);
	create_insn	(x=0X800BF0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF10);
	op_hex		(x,	1);
	create_insn	(0X800BF18);
	create_insn	(x=0X800BF3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF3E);
	op_hex		(x,	1);
	create_insn	(0X800BF44);
	create_insn	(0X800BF48);
	create_insn	(0X800BF4C);
	create_insn	(x=0X800BF5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF60);
	op_hex		(x,	1);
	create_insn	(0X800BF68);
	create_insn	(x=0X800BF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BF9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BF9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFA2);
	op_stkvar	(x,	1);
	create_insn	(0X800BFAC);
	create_insn	(0X800BFB0);
	create_insn	(0X800BFB4);
	create_insn	(x=0X800BFCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800BFD8);
	op_stkvar	(x,	1);
	make_array	(0X800BFEA,	0X2);
	create_dword	(x=0X800BFEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800BFF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800BFF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BFFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800BFFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C008);
	op_hex		(x,	1);
	create_insn	(0X800C014);
	create_insn	(x=0X800C016);
	op_hex		(x,	1);
	create_insn	(0X800C020);
	create_insn	(x=0X800C02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C032);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C036);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C03A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800C04C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C054);
	create_insn	(x=0X800C058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C074);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C082);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C088);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C08C);
	op_stkvar	(x,	1);
	create_insn	(0X800C09A);
	create_insn	(0X800C09E);
	create_insn	(0X800C0A2);
	create_dword	(x=0X800C0B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C0B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C0B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C0BC);
	create_insn	(x=0X800C0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0E2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C0F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C0FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C106);
	op_hex		(x,	1);
	create_insn	(0X800C10C);
	create_insn	(x=0X800C10E);
	op_hex		(x,	1);
	create_insn	(x=0X800C114);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(x=0X800C11C);
	op_hex		(x,	1);
	create_insn	(0X800C122);
	create_insn	(x=0X800C124);
	op_hex		(x,	1);
	create_insn	(x=0X800C12A);
	op_plain_offset	(x,	1,	0X40011000);
	op_plain_offset	(x,	129,	0X40011000);
	create_insn	(x=0X800C132);
	op_hex		(x,	1);
	create_insn	(0X800C138);
	create_insn	(x=0X800C13A);
	op_hex		(x,	1);
	create_insn	(x=0X800C142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800C142,	"get_board_version");
	create_dword	(x=0X800C148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C14C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800C154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C158);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C15C);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C15E);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C170);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C17E);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C180);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C190);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(0X800C194);
	create_insn	(x=0X800C1A2);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800C1AC);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800C1B0);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800C1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1CA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C1D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C1DC);
	create_insn	(x=0X800C1DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C1E0);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C1E8);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C1F8);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(x=0X800C200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C202);
	op_plain_offset	(x,	1,	0X200000DC);
	op_plain_offset	(x,	129,	0X200000DC);
	create_insn	(0X800C206);
	create_insn	(x=0X800C20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C222);
	make_array	(0X800C23A,	0X2);
	create_dword	(x=0X800C23C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800C240);
	create_dword	(x=0X800C244);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C24C);
	create_insn	(0X800C264);
	create_insn	(0X800C274);
	create_insn	(0X800C294);
	create_insn	(0X800C2B0);
	create_insn	(0X800C2B8);
	set_name	(0X800C2B8,	"nullsub_1");
	make_array	(0X800C2BA,	0X2);
	create_insn	(0X800C2BC);
	create_insn	(x=0X800C2CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C2D8);
	create_insn	(0X800C2EC);
	create_insn	(0X800C2EE);
	create_insn	(0X800C2F0);
	create_insn	(x=0X800C2FE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C306);
	make_array	(0X800C316,	0X2);
	create_dword	(x=0X800C318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C31C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800C320);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C322);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C326);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C32A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C32C);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(0X800C336);
	create_insn	(x=0X800C33A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C33C);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C340);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C344);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C346);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(0X800C34A);
	create_insn	(x=0X800C34E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C354);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C366);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C368);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C36E);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C374);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C37E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C38A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C38E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C39A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3A6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C3AE);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C3BC);
	op_plain_offset	(x,	1,	0X200000E4);
	op_plain_offset	(x,	129,	0X200000E4);
	create_insn	(x=0X800C3CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C3F4);
	create_insn	(x=0X800C422);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C424);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C426);
	op_stkvar	(x,	1);
	create_insn	(x=0X800C434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C440);
	create_insn	(x=0X800C444);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800C460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800C476);
	create_insn	(0X800C492);
	make_array	(0X800C4A6,	0X2);
	create_dword	(x=0X800C4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C4AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800C4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800C4B4);
	create_insn	(x=0X800C58C);
	op_hex		(x,	1);
	create_insn	(x=0X800C594);
	op_hex		(x,	1);
	create_insn	(x=0X800C59C);
	op_hex		(x,	1);
	create_insn	(x=0X800C5A4);
	op_hex		(x,	1);
	create_insn	(x=0X800C5AC);
	op_hex		(x,	1);
	create_insn	(x=0X800C5B4);
	op_hex		(x,	1);
	create_insn	(x=0X800C5BC);
	op_hex		(x,	1);
	create_insn	(x=0X800C5C4);
	op_hex		(x,	1);
	create_insn	(0X800C6D8);
	create_insn	(x=0X800C70C);
	op_hex		(x,	1);
	create_insn	(x=0X800C714);
	op_hex		(x,	1);
	create_insn	(0X800C8E8);
	create_insn	(x=0X800C956);
	op_hex		(x,	1);
	create_insn	(x=0X800C976);
	op_hex		(x,	1);
	create_insn	(x=0X800C996);
	op_hex		(x,	1);
	create_insn	(x=0X800C9B4);
	op_hex		(x,	1);
	create_insn	(x=0X800CA06);
	op_hex		(x,	1);
	create_insn	(x=0X800CA0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA50);
	op_hex		(x,	1);
	create_insn	(x=0X800CA60);
	op_hex		(x,	1);
	create_insn	(x=0X800CA6A);
	op_hex		(x,	1);
	create_insn	(x=0X800CA72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CA90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAAA);
	op_hex		(x,	1);
	create_insn	(x=0X800CAAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CACA);
	op_hex		(x,	1);
	create_insn	(x=0X800CAD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CAE0);
	op_hex		(x,	1);
	create_insn	(x=0X800CAE6);
	op_hex		(x,	1);
	create_insn	(x=0X800CAEE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CC08);
	create_insn	(x=0X800CC0E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CC22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CC2A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CC36);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800CC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CC52);
	op_hex		(x,	1);
	create_insn	(x=0X800CC5E);
	op_hex		(x,	1);
	create_insn	(x=0X800CC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CC7E);
	op_hex		(x,	1);
	create_insn	(x=0X800CC8A);
	op_hex		(x,	1);
	create_insn	(x=0X800CC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CCB4);
	op_hex		(x,	1);
	create_insn	(x=0X800CCC0);
	op_hex		(x,	1);
	create_insn	(x=0X800CCEA);
	op_hex		(x,	1);
	create_insn	(x=0X800CCF6);
	op_hex		(x,	1);
	create_insn	(0X800CD10);
	create_insn	(0X800CD16);
	create_insn	(x=0X800CD26);
	op_hex		(x,	1);
	create_insn	(x=0X800CD2C);
	op_hex		(x,	1);
	create_insn	(0X800CD4C);
	create_insn	(x=0X800CD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD82);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CD86);
	op_stkvar	(x,	1);
	create_insn	(0X800CD92);
	create_insn	(0X800CDC8);
	create_insn	(0X800CDE2);
	make_array	(0X800CE06,	0X2);
	create_dword	(x=0X800CE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CE14);
	create_insn	(x=0X800CE16);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE2A);
	create_insn	(x=0X800CE2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE48);
	create_insn	(x=0X800CE4A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE6C);
	create_insn	(x=0X800CE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CE76);
	set_name	(0X800CE76,	"spi_fpga_raw_write");
	create_insn	(0X800CE9A);
	set_name	(0X800CE9A,	"spi_fpga_raw_read");
	create_insn	(0X800CEBE);
	set_name	(0X800CEBE,	"ad936x_reg_sync_write");
	set_cmt	(0X800CEC6,	"data8",	0);
	set_cmt	(0X800CECA,	"addr8",	0);
	set_cmt	(0X800CEF6,	"data8",	0);
	create_insn	(0X800CEF6);
	set_cmt	(0X800CEFC,	"addr8",	0);
	create_insn	(0X800CF00);
	set_name	(0X800CF00,	"ad936x_reg_sync_read");
	set_cmt	(0X800CF06,	"data8",	0);
	set_cmt	(0X800CF08,	"addr8",	0);
	set_cmt	(0X800CF32,	"data8",	0);
	create_insn	(0X800CF32);
	set_cmt	(0X800CF34,	"addr8",	0);
	make_array	(0X800CF3E,	0X2);
	create_dword	(x=0X800CF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800CF44);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800CF48);
	create_insn	(x=0X800CF4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800CF52,	"addr8",	0);
	set_cmt	(0X800CF5A,	"data8",	0);
	set_cmt	(0X800CF5C,	"addr8",	0);
	create_insn	(0X800CF66);
	create_insn	(x=0X800CF6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800CF86);
	create_insn	(x=0X800CF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800CF90,	"addr8",	0);
	create_insn	(0X800CF9E);
	create_insn	(x=0X800CFA2);
	op_stkvar	(x,	1);
	set_cmt	(0X800CFA4,	"addr8",	0);
	create_insn	(x=0X800CFAA);
	op_stkvar	(x,	1);
	set_cmt	(0X800CFAE,	"addr8",	0);
	create_insn	(x=0X800CFB4);
	op_stkvar	(x,	1);
	set_cmt	(0X800CFB8,	"addr8",	0);
	create_insn	(x=0X800CFBE);
	op_stkvar	(x,	1);
	set_cmt	(0X800CFC2,	"addr8",	0);
	create_insn	(x=0X800CFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800CFCC);
	op_stkvar	(x,	1);
	create_insn	(0X800CFD0);
	set_cmt	(0X800CFD6,	"data8",	0);
	set_cmt	(0X800CFD8,	"addr8",	0);
	set_cmt	(0X800CFDE,	"addr8",	0);
	set_cmt	(0X800CFE4,	"data8",	0);
	create_insn	(x=0X800CFE4);
	op_hex		(x,	1);
	set_cmt	(0X800CFE8,	"addr8",	0);
	create_insn	(0X800D004);
	create_insn	(0X800D008);
	create_insn	(0X800D026);
	create_insn	(0X800D032);
	create_insn	(0X800D05C);
	create_insn	(0X800D068);
	create_insn	(0X800D072);
	create_insn	(x=0X800D076);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D09A);
	create_insn	(0X800D0A6);
	create_insn	(0X800D0AE);
	create_insn	(x=0X800D0F0);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(x=0X800D0F2);
	op_hex		(x,	1);
	create_insn	(x=0X800D0F6);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(x=0X800D0FC);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(x=0X800D0FE);
	op_hex		(x,	1);
	create_insn	(x=0X800D102);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(0X800D108);
	create_insn	(x=0X800D10C);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(0X800D112);
	set_cmt	(0X800D116,	"data8",	0);
	set_cmt	(0X800D118,	"addr8",	0);
	set_cmt	(0X800D11E,	"addr8",	0);
	set_cmt	(0X800D124,	"data8",	0);
	create_insn	(x=0X800D124);
	op_hex		(x,	1);
	set_cmt	(0X800D128,	"addr8",	0);
	create_insn	(0X800D13E);
	create_insn	(0X800D142);
	create_insn	(0X800D160);
	create_insn	(0X800D16C);
	create_insn	(0X800D174);
	create_insn	(0X800D19A);
	create_insn	(0X800D1A6);
	create_insn	(0X800D1AE);
	create_insn	(x=0X800D1CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D1CE);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(x=0X800D1D0);
	op_hex		(x,	1);
	create_insn	(x=0X800D1D4);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(0X800D1DA);
	create_insn	(x=0X800D1EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D206);
	create_insn	(x=0X800D216);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800D220,	"addr8",	0);
	set_cmt	(0X800D22C,	"addr8",	0);
	create_insn	(0X800D23C);
	create_insn	(0X800D240);
	create_insn	(0X800D25E);
	create_insn	(0X800D26A);
	create_insn	(0X800D272);
	create_insn	(0X800D2B8);
	create_insn	(0X800D2BC);
	create_insn	(0X800D2C6);
	create_insn	(x=0X800D2CC);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(x=0X800D2CE);
	op_hex		(x,	1);
	create_insn	(x=0X800D2D2);
	op_plain_offset	(x,	1,	0X200000F4);
	op_plain_offset	(x,	129,	0X200000F4);
	create_insn	(0X800D2D8);
	create_insn	(0X800D308);
	create_dword	(x=0X800D30C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800D310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800D314);
	create_insn	(0X800D318);
	set_cmt	(0X800D322,	"switch 7 cases ",	0);
	create_insn	(x=0X800D324);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800D32A,	"switch jump",	0);
	set_cmt	(0X800D32E,	"jump table for switch statement",	0);
	create_byte	(0X800D32E);
	set_name	(0X800D32E,	"jpt_800D32A");
	create_byte	(0X800D32F);
	create_byte	(0X800D330);
	create_byte	(0X800D331);
	create_byte	(0X800D332);
	create_byte	(0X800D333);
	create_byte	(0X800D334);
	set_cmt	(0X800D336,	"jumptable 0800D32A case 5",	1);
	create_insn	(0X800D336);
	set_cmt	(0X800D338,	"addr8",	0);
	set_cmt	(0X800D342,	"jumptable 0800D32A case 6",	1);
	create_insn	(0X800D342);
	set_cmt	(0X800D346,	"addr10",	0);
	set_cmt	(0X800D352,	"val",	0);
	set_cmt	(0X800D358,	"wrflag",	0);
	create_insn	(0X800D35E);
	create_insn	(x=0X800D360);
	op_hex		(x,	1);
	create_insn	(x=0X800D364);
	op_hex		(x,	1);
	set_cmt	(0X800D36A,	"jumptable 0800D32A case 8",	1);
	create_insn	(0X800D36A);
	set_cmt	(0X800D372,	"wrflag",	0);
	set_cmt	(0X800D374,	"addr10",	0);
	set_cmt	(0X800D384,	"jumptable 0800D32A default case",	1);
	set_name	(0X800D384,	"def_800D32A");
	set_cmt	(0X800D388,	"jumptable 0800D32A case 10",	1);
	create_insn	(0X800D388);
	create_insn	(x=0X800D392);
	op_hex		(x,	1);
	set_cmt	(0X800D39E,	"wrflag",	0);
	set_cmt	(0X800D3A0,	"addr10",	0);
	set_cmt	(0X800D3C6,	"jumptable 0800D32A case 11",	1);
	create_insn	(0X800D3C6);
	create_insn	(0X800D3D0);
	set_cmt	(0X800D3DC,	"addr8",	0);
	create_insn	(x=0X800D3E2);
	op_hex		(x,	1);
	create_insn	(x=0X800D3EA);
	op_hex		(x,	1);
	set_cmt	(0X800D3F2,	"addr8",	0);
	create_insn	(x=0X800D3F8);
	op_hex		(x,	1);
	create_insn	(0X800D3FE);
	create_insn	(0X800D400);
	set_cmt	(0X800D410,	"addr8",	0);
	set_cmt	(0X800D418,	"addr8",	0);
	set_cmt	(0X800D420,	"addr8",	0);
	create_insn	(x=0X800D426);
	op_stkvar	(x,	1);
	set_cmt	(0X800D428,	"addr8",	0);
	set_cmt	(0X800D430,	"addr8",	0);
	set_cmt	(0X800D438,	"addr8",	0);
	set_cmt	(0X800D440,	"addr8",	0);
	set_cmt	(0X800D448,	"addr8",	0);
	create_insn	(x=0X800D44E);
	op_stkvar	(x,	1);
	set_cmt	(0X800D450,	"addr8",	0);
	set_cmt	(0X800D458,	"addr8",	0);
	set_cmt	(0X800D460,	"addr8",	0);
	create_insn	(x=0X800D466);
	op_stkvar	(x,	1);
	set_cmt	(0X800D468,	"addr8",	0);
	create_insn	(x=0X800D46E);
	op_hex		(x,	1);
	create_insn	(x=0X800D472);
	op_hex		(x,	1);
	set_cmt	(0X800D476,	"data8",	0);
	set_cmt	(0X800D478,	"addr8",	0);
	set_cmt	(0X800D47E,	"addr8",	0);
	create_insn	(x=0X800D484);
	op_hex		(x,	1);
	set_cmt	(0X800D48C,	"data8",	0);
	set_cmt	(0X800D48E,	"addr8",	0);
	set_cmt	(0X800D494,	"addr8",	0);
	create_insn	(x=0X800D49A);
	op_hex		(x,	1);
	set_cmt	(0X800D4A4,	"data8",	0);
	set_cmt	(0X800D4A6,	"addr8",	0);
	set_cmt	(0X800D4AC,	"addr8",	0);
	create_insn	(x=0X800D4B2);
	op_hex		(x,	1);
	set_cmt	(0X800D4BE,	"data8",	0);
	set_cmt	(0X800D4C0,	"addr8",	0);
	set_cmt	(0X800D4C6,	"addr8",	0);
	create_insn	(x=0X800D4CC);
	op_hex		(x,	1);
	set_cmt	(0X800D4D6,	"data8",	0);
	set_cmt	(0X800D4D8,	"addr8",	0);
	set_cmt	(0X800D4DE,	"addr8",	0);
	create_insn	(x=0X800D4E4);
	op_hex		(x,	1);
	set_cmt	(0X800D4EC,	"data8",	0);
	set_cmt	(0X800D4EE,	"addr8",	0);
	set_cmt	(0X800D4F4,	"addr8",	0);
	create_insn	(x=0X800D4FA);
	op_hex		(x,	1);
	set_cmt	(0X800D504,	"data8",	0);
	set_cmt	(0X800D506,	"addr8",	0);
	set_cmt	(0X800D50C,	"addr8",	0);
	set_cmt	(0X800D50E,	"data8",	0);
	create_insn	(x=0X800D50E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D514);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D516);
	op_hex		(x,	1);
	create_insn	(x=0X800D522);
	op_hex		(x,	1);
	set_cmt	(0X800D534,	"addr8",	0);
	create_insn	(x=0X800D53A);
	op_hex		(x,	1);
	create_insn	(0X800D540);
	set_cmt	(0X800D544,	"addr8",	0);
	create_insn	(x=0X800D54A);
	op_hex		(x,	1);
	create_insn	(x=0X800D54E);
	op_hex		(x,	1);
	create_insn	(0X800D554);
	set_cmt	(0X800D558,	"addr8",	0);
	create_insn	(x=0X800D55E);
	op_hex		(x,	1);
	create_insn	(x=0X800D562);
	op_hex		(x,	1);
	create_insn	(0X800D568);
	set_cmt	(0X800D56C,	"addr8",	0);
	create_insn	(x=0X800D572);
	op_hex		(x,	1);
	create_insn	(x=0X800D576);
	op_hex		(x,	1);
	create_insn	(0X800D57C);
	set_cmt	(0X800D580,	"addr8",	0);
	create_insn	(x=0X800D586);
	op_hex		(x,	1);
	create_insn	(x=0X800D58A);
	op_hex		(x,	1);
	create_insn	(0X800D590);
	set_cmt	(0X800D594,	"addr8",	0);
	create_insn	(x=0X800D59A);
	op_hex		(x,	1);
	create_insn	(x=0X800D59E);
	op_hex		(x,	1);
	create_insn	(0X800D5A4);
	set_cmt	(0X800D5A8,	"addr8",	0);
	create_insn	(x=0X800D5AE);
	op_hex		(x,	1);
	create_insn	(x=0X800D5B2);
	op_hex		(x,	1);
	create_insn	(0X800D5B8);
	set_cmt	(0X800D5BC,	"addr8",	0);
	create_insn	(x=0X800D5C2);
	op_hex		(x,	1);
	create_insn	(x=0X800D5C6);
	op_hex		(x,	1);
	create_insn	(0X800D5CC);
	set_cmt	(0X800D5CE,	"addr8",	0);
	create_insn	(x=0X800D5D8);
	op_hex		(x,	1);
	create_insn	(0X800D5E0);
	create_insn	(x=0X800D5E4);
	op_hex		(x,	1);
	set_cmt	(0X800D5E8,	"data8",	0);
	set_cmt	(0X800D5EA,	"addr8",	0);
	set_cmt	(0X800D5F0,	"addr8",	0);
	create_insn	(x=0X800D5F6);
	op_hex		(x,	1);
	set_cmt	(0X800D600,	"data8",	0);
	set_cmt	(0X800D602,	"addr8",	0);
	set_cmt	(0X800D608,	"addr8",	0);
	create_insn	(x=0X800D60E);
	op_hex		(x,	1);
	set_cmt	(0X800D616,	"data8",	0);
	set_cmt	(0X800D618,	"addr8",	0);
	set_cmt	(0X800D61E,	"addr8",	0);
	create_insn	(x=0X800D624);
	op_hex		(x,	1);
	set_cmt	(0X800D62E,	"data8",	0);
	set_cmt	(0X800D630,	"addr8",	0);
	set_cmt	(0X800D636,	"addr8",	0);
	create_insn	(x=0X800D63C);
	op_hex		(x,	1);
	set_cmt	(0X800D644,	"data8",	0);
	set_cmt	(0X800D648,	"addr8",	0);
	set_cmt	(0X800D64E,	"addr8",	0);
	create_insn	(x=0X800D654);
	op_hex		(x,	1);
	set_cmt	(0X800D65E,	"data8",	0);
	set_cmt	(0X800D660,	"addr8",	0);
	set_cmt	(0X800D666,	"addr8",	0);
	create_insn	(x=0X800D66C);
	op_hex		(x,	1);
	set_cmt	(0X800D674,	"data8",	0);
	set_cmt	(0X800D676,	"addr8",	0);
	set_cmt	(0X800D67C,	"addr8",	0);
	create_insn	(x=0X800D682);
	op_hex		(x,	1);
	set_cmt	(0X800D68A,	"data8",	0);
	set_cmt	(0X800D68C,	"addr8",	0);
	set_cmt	(0X800D692,	"addr8",	0);
	set_cmt	(0X800D694,	"data8",	0);
	create_insn	(x=0X800D694);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D69A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800D69C);
	op_hex		(x,	1);
	create_insn	(x=0X800D6A8);
	op_hex		(x,	1);
	set_cmt	(0X800D6BA,	"addr8",	0);
	create_insn	(x=0X800D6C0);
	op_hex		(x,	1);
	create_insn	(0X800D6C6);
	set_cmt	(0X800D6CA,	"addr8",	0);
	create_insn	(x=0X800D6D0);
	op_hex		(x,	1);
	create_insn	(x=0X800D6D4);
	op_hex		(x,	1);
	create_insn	(0X800D6DA);
	set_cmt	(0X800D6DE,	"addr8",	0);
	create_insn	(x=0X800D6E4);
	op_hex		(x,	1);
	create_insn	(x=0X800D6E8);
	op_hex		(x,	1);
	create_insn	(0X800D6EE);
	set_cmt	(0X800D6F2,	"addr8",	0);
	create_insn	(x=0X800D6F8);
	op_hex		(x,	1);
	create_insn	(x=0X800D6FC);
	op_hex		(x,	1);
	make_array	(0X800D702,	0X2);
	create_dword	(x=0X800D704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800D708);
	set_cmt	(0X800D70C,	"addr8",	0);
	create_insn	(x=0X800D712);
	op_hex		(x,	1);
	create_insn	(x=0X800D716);
	op_hex		(x,	1);
	create_insn	(0X800D71C);
	set_cmt	(0X800D720,	"addr8",	0);
	create_insn	(x=0X800D726);
	op_hex		(x,	1);
	create_insn	(x=0X800D72A);
	op_hex		(x,	1);
	create_insn	(0X800D730);
	set_cmt	(0X800D734,	"addr8",	0);
	create_insn	(x=0X800D73A);
	op_hex		(x,	1);
	create_insn	(x=0X800D73E);
	op_hex		(x,	1);
	create_insn	(0X800D744);
	set_cmt	(0X800D748,	"addr8",	0);
	create_insn	(x=0X800D74E);
	op_hex		(x,	1);
	create_insn	(x=0X800D752);
	op_hex		(x,	1);
	create_insn	(0X800D758);
	set_cmt	(0X800D75A,	"addr8",	0);
	create_insn	(x=0X800D764);
	op_hex		(x,	1);
	create_insn	(0X800D76C);
	create_insn	(x=0X800D770);
	op_hex		(x,	1);
	set_cmt	(0X800D774,	"data8",	0);
	set_cmt	(0X800D776,	"addr8",	0);
	set_cmt	(0X800D77C,	"addr8",	0);
	set_cmt	(0X800D77E,	"data8",	0);
	create_insn	(x=0X800D77E);
	op_stkvar	(x,	1);
	set_cmt	(0X800D784,	"data8",	0);
	set_cmt	(0X800D786,	"addr8",	0);
	set_cmt	(0X800D78C,	"data8",	0);
	set_cmt	(0X800D78E,	"addr8",	0);
	set_cmt	(0X800D794,	"data8",	0);
	set_cmt	(0X800D796,	"addr8",	0);
	create_insn	(0X800D7A4);
	set_cmt	(0X800D7A6,	"addr8",	0);
	create_insn	(x=0X800D7AC);
	op_hex		(x,	1);
	set_cmt	(0X800D7B0,	"data8",	0);
	set_cmt	(0X800D7B2,	"addr8",	0);
	create_insn	(x=0X800D7B8);
	op_hex		(x,	1);
	set_cmt	(0X800D7C0,	"addr8",	0);
	create_insn	(0X800D7C6);
	set_name	(0X800D7C6,	"init_fpga_config");
	create_insn	(x=0X800D800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800D80A,	"data8",	0);
	create_insn	(x=0X800D81E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800D856);
	create_insn	(0X800D85E);
	create_insn	(0X800D86E);
	create_insn	(x=0X800D87E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800D888);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800D8C6,	"wrflag",	0);
	create_insn	(0X800D8C6);
	set_cmt	(0X800D8C8,	"val",	0);
	set_cmt	(0X800D8CA,	"addr10",	0);
	create_insn	(x=0X800D8CA);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800D8D0,	"wrflag",	0);
	set_cmt	(0X800D8D2,	"addr10",	0);
	create_insn	(x=0X800D8D2);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800D8DE,	"wrflag",	0);
	set_cmt	(0X800D8E0,	"addr10",	0);
	create_insn	(x=0X800D8E0);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800D8EA,	"wrflag",	0);
	set_cmt	(0X800D8EC,	"addr10",	0);
	create_insn	(x=0X800D8EC);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800D8FA,	"wrflag",	0);
	set_cmt	(0X800D8FC,	"addr10",	0);
	create_insn	(x=0X800D8FC);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800D90C);
	set_cmt	(0X800D910,	"wrflag",	0);
	create_insn	(0X800D910);
	set_cmt	(0X800D912,	"val",	0);
	set_cmt	(0X800D914,	"addr10",	0);
	create_insn	(x=0X800D914);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800D91A,	"wrflag",	0);
	set_cmt	(0X800D91C,	"val",	0);
	set_cmt	(0X800D91E,	"addr10",	0);
	create_insn	(x=0X800D91E);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800D924,	"wrflag",	0);
	set_cmt	(0X800D926,	"val",	0);
	set_cmt	(0X800D928,	"addr10",	0);
	create_insn	(x=0X800D928);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800D934,	"wrflag",	0);
	set_cmt	(0X800D936,	"val",	0);
	set_cmt	(0X800D938,	"addr10",	0);
	create_insn	(x=0X800D938);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800D944,	"wrflag",	0);
	set_cmt	(0X800D946,	"addr10",	0);
	create_insn	(x=0X800D946);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800D960,	"addr8",	0);
	create_insn	(x=0X800D960);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800D966,	"data8",	0);
	create_insn	(x=0X800D966);
	op_hex		(x,	1);
	set_cmt	(0X800D96A,	"addr8",	0);
	create_insn	(x=0X800D96A);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800D976,	"data8",	0);
	set_cmt	(0X800D978,	"addr8",	0);
	create_insn	(x=0X800D978);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800D9A2,	"addr8",	0);
	set_cmt	(0X800D9A8,	"data8",	0);
	create_insn	(x=0X800D9A8);
	op_hex		(x,	1);
	set_cmt	(0X800D9AC,	"addr8",	0);
	create_insn	(x=0X800D9AC);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800D9CC,	"wrflag",	0);
	create_insn	(0X800D9CC);
	set_cmt	(0X800D9CE,	"val",	0);
	set_cmt	(0X800D9D0,	"addr10",	0);
	create_insn	(x=0X800D9D0);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800D9DC,	"wrflag",	0);
	create_insn	(0X800D9DC);
	set_cmt	(0X800D9DE,	"val",	0);
	set_cmt	(0X800D9E0,	"addr10",	0);
	create_insn	(x=0X800D9E0);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800D9EE);
	set_cmt	(0X800D9F4,	"data8",	0);
	set_cmt	(0X800D9F6,	"addr8",	0);
	create_insn	(x=0X800D9F6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800DA02,	"wrflag",	0);
	set_cmt	(0X800DA04,	"val",	0);
	set_cmt	(0X800DA06,	"addr10",	0);
	create_insn	(x=0X800DA06);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800DA0C,	"wrflag",	0);
	set_cmt	(0X800DA0E,	"val",	0);
	set_cmt	(0X800DA10,	"addr10",	0);
	create_insn	(x=0X800DA10);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800DA16,	"wrflag",	0);
	set_cmt	(0X800DA18,	"val",	0);
	set_cmt	(0X800DA1A,	"addr10",	0);
	create_insn	(x=0X800DA1A);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X800DA32);
	create_insn	(0X800DA34);
	set_cmt	(0X800DA3A,	"data8",	0);
	set_cmt	(0X800DA3C,	"addr8",	0);
	create_insn	(x=0X800DA3C);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800DA48,	"wrflag",	0);
	set_cmt	(0X800DA4A,	"val",	0);
	set_cmt	(0X800DA4C,	"addr10",	0);
	create_insn	(x=0X800DA4C);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800DA52,	"wrflag",	0);
	set_cmt	(0X800DA54,	"val",	0);
	set_cmt	(0X800DA56,	"addr10",	0);
	create_insn	(x=0X800DA56);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800DA60);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800DA64,	"wrflag",	0);
	create_insn	(0X800DA64);
	set_cmt	(0X800DA66,	"val",	0);
	set_cmt	(0X800DA68,	"addr10",	0);
	create_insn	(x=0X800DA68);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800DA6E,	"wrflag",	0);
	set_cmt	(0X800DA70,	"val",	0);
	set_cmt	(0X800DA72,	"addr10",	0);
	create_insn	(x=0X800DA72);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800DA78,	"addr8",	0);
	create_insn	(x=0X800DA7E);
	op_hex		(x,	1);
	set_cmt	(0X800DA82,	"addr8",	0);
	create_insn	(x=0X800DA82);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(0X800DA8E);
	create_insn	(x=0X800DA92);
	op_hex		(x,	1);
	create_insn	(0X800DAA2);
	set_cmt	(0X800DAA4,	"addr8",	0);
	create_insn	(x=0X800DAA4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800DAAA);
	op_hex		(x,	1);
	set_cmt	(0X800DAAE,	"data8",	0);
	set_cmt	(0X800DAB0,	"addr8",	0);
	create_insn	(x=0X800DAB0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800DAB6);
	op_hex		(x,	1);
	set_cmt	(0X800DABE,	"addr8",	0);
	create_insn	(x=0X800DABE);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(0X800DAC4);
	set_cmt	(0X800DAC6,	"addr8",	0);
	create_insn	(x=0X800DAC6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800DACC);
	op_hex		(x,	1);
	set_cmt	(0X800DAD0,	"data8",	0);
	set_cmt	(0X800DAD2,	"addr8",	0);
	create_insn	(x=0X800DAD2);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800DAD8);
	op_hex		(x,	1);
	set_cmt	(0X800DAE0,	"addr8",	0);
	create_insn	(x=0X800DAE0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	make_array	(0X800DAE6,	0X2);
	create_dword	(x=0X800DAE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DAEC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DAF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DAF8);
	create_dword	(x=0X800DAFC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800DB00);
	create_insn	(x=0X800DB7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DB90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DBAE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DBE0);
	create_insn	(0X800DBE6);
	create_insn	(x=0X800DBF2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DC12);
	create_insn	(0X800DC22);
	create_insn	(x=0X800DC28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DC36);
	create_insn	(0X800DC3C);
	create_insn	(0X800DC48);
	create_insn	(x=0X800DC4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC5A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DC5E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X800DCA4);
	create_strlit	(0X800DCA8,	0X800DCB4);
	set_name	(0X800DCA8,	"aPhantom2x");
	create_strlit	(0X800DCB4,	0X800DCC5);
	set_name	(0X800DCB4,	"aDDDDD");
	create_byte	(0X800DCC5);
	make_array	(0X800DCC5,	0X3);
	create_strlit	(0X800DCC8,	0X800DCD2);
	set_name	(0X800DCC8,	"aVerD");
	make_array	(0X800DCD2,	0X2);
	create_strlit	(0X800DCD4,	0X800DCE5);
	set_name	(0X800DCD4,	"aFpgaBootD");
	create_byte	(0X800DCE5);
	make_array	(0X800DCE5,	0X3);
	create_strlit	(0X800DCE8,	0X800DCF8);
	set_name	(0X800DCE8,	"aFpgaCfgOk");
	create_strlit	(0X800DCF8,	0X800DD0B);
	set_name	(0X800DCF8,	"aFpgaCfgError");
	create_byte	(0X800DD0B);
	create_dword	(x=0X800DD0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DD10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DD14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800DD18);
	create_insn	(0X800DD1A);
	create_insn	(0X800DD1C);
	create_insn	(0X800DD1E);
	create_insn	(0X800DD20);
	create_insn	(0X800DD22);
	create_insn	(0X800DD24);
	create_insn	(0X800DD26);
	create_insn	(0X800DD28);
	create_insn	(x=0X800DD2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD34);
	op_hex		(x,	1);
	create_insn	(x=0X800DD40);
	op_hex		(x,	1);
	create_insn	(x=0X800DD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD46);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DD60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DD64);
	op_hex		(x,	1);
	create_insn	(x=0X800DD6C);
	op_hex		(x,	1);
	create_insn	(x=0X800DD74);
	op_hex		(x,	1);
	create_insn	(x=0X800DD7A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD7C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD7E);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD80);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD82);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD84);
	op_hex		(x,	1);
	create_insn	(x=0X800DD88);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD8A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD8C);
	op_hex		(x,	1);
	create_insn	(x=0X800DD90);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD92);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD94);
	op_hex		(x,	1);
	create_insn	(x=0X800DD98);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DD9C);
	op_hex		(x,	1);
	create_insn	(x=0X800DDA8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDAA);
	op_hex		(x,	1);
	create_insn	(x=0X800DDAE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDB0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDB2);
	op_hex		(x,	1);
	create_insn	(x=0X800DDB6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDB8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800DDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDCC);
	op_hex		(x,	1);
	create_insn	(x=0X800DDD2);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDD8);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDE4);
	op_hex		(x,	1);
	create_insn	(x=0X800DDEA);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDEC);
	op_hex		(x,	1);
	create_insn	(x=0X800DDF0);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDF6);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DDFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DDFE);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DE02);
	op_hex		(x,	1);
	create_insn	(x=0X800DE06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800DE16);
	create_insn	(x=0X800DE1A);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DE1C);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DE1E);
	op_hex		(x,	1);
	create_insn	(x=0X800DE26);
	op_hex		(x,	1);
	create_insn	(x=0X800DE30);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(0X800DE3A);
	create_insn	(0X800DE3E);
	create_insn	(x=0X800DE44);
	op_plain_offset	(x,	1,	0X40021000);
	op_plain_offset	(x,	129,	0X40021000);
	create_insn	(x=0X800DE46);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X800DE58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800DE5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DE60);
	create_dword	(0X800DE64);
	create_dword	(0X800DE68);
	create_dword	(x=0X800DE6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800DE70);
	create_dword	(0X800DE74);
	create_dword	(0X800DE78);
	create_insn	(x=0X800DE7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE7E);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DE86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE8A);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DE8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DE90);
	op_hex		(x,	1);
	create_insn	(x=0X800DE94);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DE9A);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DE9C);
	op_hex		(x,	1);
	create_insn	(0X800DEA8);
	create_insn	(0X800DEAC);
	create_insn	(x=0X800DEAE);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DEB0);
	op_hex		(x,	1);
	create_insn	(x=0X800DEB4);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DEB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DEBC);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DEC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DEC4);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DECA);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DECE);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(0X800DED2);
	create_insn	(x=0X800DEDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DEDE);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DEE0);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DEEE);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DEF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DEF6);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DEFE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF00);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF06);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF08);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF14);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF1A);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DF22);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(0X800DF2E);
	create_insn	(0X800DF32);
	create_insn	(x=0X800DF34);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF38);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DF3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF40);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF4A);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DF50);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(0X800DF5E);
	create_insn	(0X800DF62);
	create_insn	(x=0X800DF64);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF6A);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DF6E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF72);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF76);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DF78);
	op_hex		(x,	1);
	create_insn	(x=0X800DF7C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DF82);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF84);
	op_hex		(x,	1);
	create_insn	(0X800DF90);
	create_insn	(0X800DF94);
	create_insn	(x=0X800DF96);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DF98);
	op_hex		(x,	1);
	create_insn	(x=0X800DF9C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DFA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DFA4);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DFAE);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DFB4);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(0X800DFC2);
	create_insn	(0X800DFC6);
	create_insn	(x=0X800DFC8);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DFCE);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DFD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DFD6);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800DFDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800DFE0);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800DFE6);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(0X800DFF4);
	create_insn	(0X800DFF8);
	create_insn	(x=0X800DFFA);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E000);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(0X800E004);
	create_insn	(0X800E008);
	create_insn	(0X800E02A);
	create_insn	(x=0X800E030);
	op_hex		(x,	1);
	create_insn	(0X800E084);
	create_insn	(x=0X800E094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E09A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0A6);
	op_plain_offset	(x,	1,	0X2000176D);
	op_plain_offset	(x,	129,	0X2000176D);
	create_insn	(x=0X800E0AA);
	op_plain_offset	(x,	1,	0X2000176D);
	op_plain_offset	(x,	129,	0X2000176D);
	create_insn	(0X800E0B2);
	create_insn	(x=0X800E0B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0D8);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E0DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E0E6);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E0EC);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E0F4);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E0FE);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E108);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E114);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E11A);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800E120);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800E122);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E124);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800E126);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E12C);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800E12E);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E130);
	op_plain_offset	(x,	1,	0X20000134);
	op_plain_offset	(x,	129,	0X20000134);
	create_insn	(x=0X800E138);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E13A);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E140);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E152);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E154);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E156);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E158);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E15A);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E15E);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E160);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E162);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E164);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E166);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(0X800E16C);
	create_insn	(x=0X800E17E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E180);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E194);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E19E);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(x=0X800E1A2);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E1AE);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(x=0X800E1B2);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X800E1BE);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(0X800E1E2);
	create_insn	(0X800E1E6);
	create_insn	(x=0X800E1EC);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(0X800E200);
	create_insn	(0X800E204);
	create_insn	(0X800E20A);
	create_insn	(0X800E20E);
	create_insn	(x=0X800E214);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(0X800E234);
	create_insn	(0X800E238);
	create_insn	(0X800E23C);
	create_insn	(x=0X800E242);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(0X800E250);
	create_insn	(0X800E254);
	create_insn	(x=0X800E25A);
	op_plain_offset	(x,	1,	0X2000173C);
	op_plain_offset	(x,	129,	0X2000173C);
	create_insn	(x=0X800E260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E262);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E26A);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_dword	(x=0X800E278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E27C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E280);
	create_insn	(x=0X800E292);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E294);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E2A0);
	op_hex		(x,	1);
	create_insn	(0X800E2A6);
	create_insn	(x=0X800E2AC);
	op_hex		(x,	1);
	create_insn	(x=0X800E2C6);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E2D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E2D6);
	op_stkvar	(x,	1);
	create_insn	(0X800E30E);
	create_insn	(0X800E328);
	create_insn	(0X800E32C);
	create_insn	(x=0X800E32E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E33A);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E33C);
	op_hex		(x,	1);
	create_insn	(x=0X800E340);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E348);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E34A);
	op_hex		(x,	1);
	create_insn	(x=0X800E34E);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E352);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E354);
	op_hex		(x,	1);
	create_insn	(x=0X800E358);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E35C);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E35E);
	op_hex		(x,	1);
	create_insn	(x=0X800E362);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E366);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E368);
	op_hex		(x,	1);
	create_insn	(x=0X800E36C);
	op_plain_offset	(x,	1,	0X20001781);
	op_plain_offset	(x,	129,	0X20001781);
	create_insn	(x=0X800E372);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E382);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E384);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E38C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E38E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E398);
	create_insn	(x=0X800E3AC);
	op_plain_offset	(x,	1,	0X2000176D);
	op_plain_offset	(x,	129,	0X2000176D);
	create_insn	(x=0X800E3AE);
	op_plain_offset	(x,	1,	0X2000176D);
	op_plain_offset	(x,	129,	0X2000176D);
	create_insn	(x=0X800E3B2);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3BE);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3D6);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3DE);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3E2);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3E8);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3EA);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3F0);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3F2);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3FA);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E3FE);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E404);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E406);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E408);
	op_hex		(x,	1);
	create_insn	(x=0X800E40E);
	op_plain_offset	(x,	1,	0X2000175E);
	op_plain_offset	(x,	129,	0X2000175E);
	create_insn	(x=0X800E410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E414);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E416);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(0X800E41A);
	create_insn	(x=0X800E41E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E426);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E42E);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(0X800E44C);
	create_insn	(x=0X800E468);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E46E);
	op_hex		(x,	1);
	create_insn	(x=0X800E472);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E482);
	op_hex		(x,	1);
	create_insn	(x=0X800E486);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E490);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E496);
	op_hex		(x,	1);
	create_insn	(x=0X800E49A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E4AA);
	op_hex		(x,	1);
	create_insn	(x=0X800E4AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E4B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E4BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E4C8);
	op_hex		(x,	1);
	create_insn	(x=0X800E4CE);
	op_hex		(x,	1);
	create_insn	(x=0X800E4D4);
	op_hex		(x,	1);
	create_insn	(x=0X800E4DA);
	op_hex		(x,	1);
	create_insn	(0X800E4E0);
	create_insn	(x=0X800E4F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E504);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E508);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E510);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E51C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E520);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E524);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E526);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E528);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E52A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E53E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E540);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E542);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E544);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E546);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E54C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E554);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E55A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E55C);
	op_stkvar	(x,	1);
	create_insn	(0X800E560);
	create_insn	(x=0X800E562);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E564);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E566);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E56C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E57A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E57C);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E586);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E58C);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E594);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5BA);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5BE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5C0);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E5C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5CE);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E5DE);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(x=0X800E5E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E5F0);
	op_plain_offset	(x,	1,	0X2000013C);
	op_plain_offset	(x,	129,	0X2000013C);
	create_insn	(x=0X800E5F6);
	op_plain_offset	(x,	1,	0X20000118);
	op_plain_offset	(x,	129,	0X20000118);
	create_insn	(0X800E5FA);
	make_array	(0X800E622,	0X2);
	create_dword	(x=0X800E624);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800E62C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800E630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E636);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E638);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E63C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E63E);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E64C);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E64E);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E654);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E656);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(x=0X800E660);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_insn	(0X800E668);
	create_insn	(x=0X800E66C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E66E);
	op_plain_offset	(x,	1,	0X2000199A);
	op_plain_offset	(x,	129,	0X2000199A);
	create_dword	(x=0X800E674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800E678);
	create_insn	(x=0X800E686);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E68C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800E690);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800E6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E6D4);
	create_insn	(x=0X800E6EA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E6F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E6FA);
	op_hex		(x,	1);
	create_insn	(x=0X800E6FE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800E706);
	create_insn	(0X800E72A);
	create_insn	(x=0X800E740);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E746);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E75A);
	create_insn	(0X800E762);
	create_insn	(0X800E766);
	create_insn	(x=0X800E78A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E78C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E792);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E794);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7A4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7AA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7B4);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E7BA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E7C2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7C8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7CC);
	op_hex		(x,	1);
	create_insn	(x=0X800E7D2);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E7D6);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E7E0);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E7E4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7EC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E7F0);
	op_hex		(x,	1);
	create_insn	(x=0X800E7F6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E804);
	op_hex		(x,	1);
	create_insn	(x=0X800E80A);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E80E);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E810);
	op_plain_offset	(x,	1,	0X20001B34);
	op_plain_offset	(x,	129,	0X20001B34);
	create_insn	(x=0X800E816);
	op_hex		(x,	1);
	create_insn	(0X800E820);
	create_insn	(x=0X800E822);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E824);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X800E86E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E870);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E874);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E876);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E87C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E882);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E88A);
	op_hex		(x,	1);
	create_insn	(x=0X800E892);
	op_hex		(x,	1);
	create_insn	(x=0X800E896);
	op_hex		(x,	1);
	create_insn	(x=0X800E89A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E8A0);
	op_hex		(x,	1);
	create_insn	(0X800E8AA);
	create_insn	(x=0X800E8AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E8B8);
	create_insn	(x=0X800E8BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8D0);
	op_hex		(x,	1);
	create_insn	(x=0X800E8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800E8D6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800E8D8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800E8DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800E8FE);
	create_insn	(0X800E914);
	create_insn	(0X800E92E);
	create_insn	(0X800E940);
	create_insn	(0X800E956);
	create_insn	(0X800E98E);
	create_insn	(0X800E9AC);
	create_insn	(x=0X800E9B0);
	op_stkvar	(x,	1);
	create_insn	(0X800E9D2);
	create_insn	(x=0X800E9DC);
	op_hex		(x,	1);
	create_insn	(0X800E9E8);
	create_insn	(x=0X800E9F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EA06);
	create_insn	(x=0X800EA18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA26);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EA34);
	create_insn	(x=0X800EA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA46);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EA50);
	op_plain_offset	(x,	1,	0XE000E000);
	op_plain_offset	(x,	129,	0XE000E000);
	create_insn	(x=0X800EA56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EA78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800EA82,	0X2);
	create_dword	(x=0X800EA84);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EA8C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EA94);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800EA98);
	create_dword	(x=0X800EA9C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800EAA0);
	create_insn	(0X800EAA4);
	create_insn	(0X800EAAC);
	create_insn	(x=0X800EAB2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X800EABC);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EAC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EAC6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EACA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EADA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800EADE,	"data8",	0);
	create_insn	(x=0X800EADE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EAE0,	"addr8",	0);
	set_cmt	(0X800EAE6,	"data8",	0);
	create_insn	(x=0X800EAE6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EAE8,	"addr8",	0);
	set_cmt	(0X800EAEE,	"data8",	0);
	create_insn	(x=0X800EAEE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EAF0,	"addr8",	0);
	set_cmt	(0X800EAF6,	"data8",	0);
	create_insn	(x=0X800EAF6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EAF8,	"addr8",	0);
	create_insn	(x=0X800EB08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800EB16,	"addr8",	0);
	create_insn	(x=0X800EB1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB1E);
	op_hex		(x,	1);
	create_insn	(x=0X800EB26);
	op_hex		(x,	1);
	set_cmt	(0X800EB2A,	"data8",	0);
	set_cmt	(0X800EB2C,	"addr8",	0);
	set_cmt	(0X800EB32,	"data8",	0);
	create_insn	(x=0X800EB32);
	op_plain_offset	(x,	1,	0X2000017C);
	op_plain_offset	(x,	129,	0X2000017C);
	set_cmt	(0X800EB34,	"addr8",	0);
	set_cmt	(0X800EB3A,	"data8",	0);
	create_insn	(x=0X800EB3A);
	op_plain_offset	(x,	1,	0X2000017C);
	op_plain_offset	(x,	129,	0X2000017C);
	set_cmt	(0X800EB3C,	"addr8",	0);
	create_insn	(x=0X800EB42);
	op_plain_offset	(x,	1,	0X2000017C);
	op_plain_offset	(x,	129,	0X2000017C);
	create_insn	(0X800EB46);
	set_cmt	(0X800EB50,	"addr8",	0);
	create_insn	(x=0X800EB56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB5C);
	op_hex		(x,	1);
	create_insn	(x=0X800EB62);
	op_hex		(x,	1);
	set_cmt	(0X800EB6E,	"data8",	0);
	set_cmt	(0X800EB70,	"addr8",	0);
	set_cmt	(0X800EB7E,	"addr8",	0);
	set_cmt	(0X800EB80,	"data8",	0);
	create_insn	(x=0X800EB86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EB8A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EB94,	"data8",	0);
	create_insn	(0X800EB94);
	set_cmt	(0X800EB9A,	"addr8",	0);
	create_insn	(0X800EBA0);
	set_cmt	(0X800EBA2,	"addr8",	0);
	create_insn	(0X800EBA8);
	create_insn	(x=0X800EBB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EBE6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EBF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800EBF4,	"data8",	0);
	set_cmt	(0X800EBF6,	"addr8",	0);
	set_cmt	(0X800EBFE,	"addr8",	0);
	set_cmt	(0X800EC00,	"data8",	0);
	set_cmt	(0X800EC06,	"data8",	0);
	set_cmt	(0X800EC08,	"addr8",	0);
	set_cmt	(0X800EC0E,	"data8",	0);
	set_cmt	(0X800EC10,	"addr8",	0);
	set_cmt	(0X800EC16,	"data8",	0);
	set_cmt	(0X800EC18,	"addr8",	0);
	create_insn	(x=0X800EC1E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC26);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC3C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC4C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC56);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800EC58,	"addr8",	0);
	set_cmt	(0X800EC60,	"data8",	0);
	set_cmt	(0X800EC66,	"data8",	0);
	set_cmt	(0X800EC68,	"addr8",	0);
	set_cmt	(0X800EC6E,	"data8",	0);
	set_cmt	(0X800EC70,	"addr8",	0);
	create_insn	(x=0X800EC7E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800EC82);
	create_insn	(x=0X800EC86);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC8E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EC94);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EC9A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EC9C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ECA6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECA8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ECB0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECBA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECBC);
	op_hex		(x,	1);
	create_insn	(x=0X800ECC2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECC6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ECC8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECCE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ECD0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ECD4);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800ED00);
	create_insn	(x=0X800ED06);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ED08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800ED10,	"data8",	0);
	set_cmt	(0X800ED12,	"addr8",	0);
	create_insn	(x=0X800ED1A);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800ED24,	"data8",	0);
	set_cmt	(0X800ED26,	"addr8",	0);
	create_insn	(x=0X800ED2E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800ED38,	"data8",	0);
	set_cmt	(0X800ED3A,	"addr8",	0);
	create_insn	(x=0X800ED42);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800ED4C,	"data8",	0);
	set_cmt	(0X800ED4E,	"addr8",	0);
	create_insn	(x=0X800ED56);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800ED64,	"data8",	0);
	set_cmt	(0X800ED66,	"addr8",	0);
	create_insn	(x=0X800ED6E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ED72);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800ED74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800ED7E,	"data8",	0);
	set_cmt	(0X800ED80,	"addr8",	0);
	create_insn	(x=0X800ED86);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800ED8A);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800ED94,	"data8",	0);
	set_cmt	(0X800ED96,	"addr8",	0);
	create_insn	(x=0X800ED9C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EDA0);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800EDAA,	"data8",	0);
	set_cmt	(0X800EDAC,	"addr8",	0);
	create_insn	(x=0X800EDB2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EDB6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800EDBE,	"data8",	0);
	set_cmt	(0X800EDC0,	"addr8",	0);
	create_insn	(x=0X800EDC6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800EDD4,	"data8",	0);
	set_cmt	(0X800EDD6,	"addr8",	0);
	create_insn	(x=0X800EDE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EE10);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE18,	"data8",	0);
	set_cmt	(0X800EE1A,	"addr8",	0);
	create_insn	(x=0X800EE20);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE28,	"data8",	0);
	set_cmt	(0X800EE2A,	"addr8",	0);
	create_insn	(x=0X800EE30);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE38,	"data8",	0);
	set_cmt	(0X800EE3A,	"addr8",	0);
	create_insn	(x=0X800EE40);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE48,	"data8",	0);
	set_cmt	(0X800EE4A,	"addr8",	0);
	create_insn	(x=0X800EE50);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	create_insn	(x=0X800EE5E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE66,	"data8",	0);
	set_cmt	(0X800EE68,	"addr8",	0);
	create_insn	(x=0X800EE6E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE76,	"data8",	0);
	set_cmt	(0X800EE78,	"addr8",	0);
	create_insn	(x=0X800EE7E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE86,	"data8",	0);
	set_cmt	(0X800EE88,	"addr8",	0);
	create_insn	(x=0X800EE8E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800EE96,	"data8",	0);
	set_cmt	(0X800EE98,	"addr8",	0);
	create_insn	(x=0X800EE9E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	create_insn	(x=0X800EEA2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X800EEAA,	0X2);
	create_dword	(x=0X800EEAC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EEB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800EEB4);
	create_dword	(x=0X800EEB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EEBC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EEC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EEC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EECC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800EED4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X800EED8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EEE0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EEE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EEE8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EEF2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EEF8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EEFC);
	op_hex		(x,	1);
	create_insn	(x=0X800EF00);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EF2C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800EF4E);
	create_insn	(0X800EF74);
	create_insn	(x=0X800EF7A);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EF7E);
	op_hex		(x,	1);
	set_cmt	(0X800EF8A,	"data8",	0);
	set_cmt	(0X800EF8C,	"addr8",	0);
	create_insn	(x=0X800EF98);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800EFA8,	"addr8",	0);
	create_insn	(x=0X800EFAE);
	op_hex		(x,	1);
	create_insn	(0X800EFB4);
	set_cmt	(0X800EFB8,	"addr8",	0);
	create_insn	(x=0X800EFBE);
	op_hex		(x,	1);
	set_cmt	(0X800EFC2,	"addr8",	0);
	create_insn	(0X800EFD2);
	create_insn	(0X800EFD6);
	create_insn	(x=0X800EFDA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFDE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EFE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800EFE8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EFF2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800EFF4);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800EFFE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F00C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F024);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F026);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F02C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F032);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F036);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F042);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F046);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X800F04E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F060);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F062);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F06E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F072);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X800F074);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F076);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F07A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800F07E);
	create_insn	(0X800F080);
	create_insn	(x=0X800F084);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F086);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F08C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F096);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F0A4);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(0X800F0A8);
	create_insn	(x=0X800F0AC);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F0B2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F0B6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800F0BC);
	set_name	(0X800F0BC,	"tcx_config_update1");
	create_insn	(x=0X800F0BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0C2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F0C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F0CC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F0D0);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F0D6,	"addr8",	0);
	create_insn	(x=0X800F0D6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F0E6);
	op_hex		(x,	1);
	create_insn	(x=0X800F0EA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F0EC,	"data8",	0);
	create_insn	(x=0X800F0EC);
	op_hex		(x,	1);
	set_cmt	(0X800F0F0,	"addr8",	0);
	create_insn	(x=0X800F0F0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F0FA);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F102);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F10A);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F112);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F11A);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X800F120,	"wrflag",	0);
	create_insn	(0X800F120);
	set_cmt	(0X800F122,	"addr10",	0);
	create_insn	(x=0X800F122);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800F128);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F130,	"val",	0);
	create_insn	(x=0X800F130);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F134,	"wrflag",	0);
	set_cmt	(0X800F136,	"addr10",	0);
	create_insn	(x=0X800F136);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800F13C,	"wrflag",	0);
	set_cmt	(0X800F13E,	"addr10",	0);
	create_insn	(x=0X800F13E);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800F144);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F14C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F152);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(0X800F156);
	set_cmt	(0X800F15C,	"addr8",	0);
	create_insn	(x=0X800F15C);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F162);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F16A,	"data8",	0);
	create_insn	(x=0X800F16A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F16E,	"addr8",	0);
	create_insn	(x=0X800F16E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800F17A,	"wrflag",	0);
	set_cmt	(0X800F17C,	"addr10",	0);
	create_insn	(x=0X800F17C);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800F182);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F18A,	"val",	0);
	create_insn	(x=0X800F18A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F18E,	"wrflag",	0);
	set_cmt	(0X800F190,	"addr10",	0);
	create_insn	(x=0X800F190);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800F196,	"wrflag",	0);
	set_cmt	(0X800F198,	"addr10",	0);
	create_insn	(x=0X800F198);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800F19E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F1A6,	"val",	0);
	create_insn	(x=0X800F1A6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F1AA,	"wrflag",	0);
	set_cmt	(0X800F1AC,	"addr10",	0);
	create_insn	(x=0X800F1AC);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800F1B2,	"data8",	0);
	create_insn	(x=0X800F1B2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F1B4,	"addr8",	0);
	create_insn	(x=0X800F1B4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F1BA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F1BE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F1C0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F1C6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F1CC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F1CE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F1D6,	"addr8",	0);
	create_insn	(x=0X800F1D6);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F1E2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F1E8);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F1F0);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F1F8);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X800F1FE,	"wrflag",	0);
	create_insn	(0X800F1FE);
	set_cmt	(0X800F200,	"val",	0);
	set_cmt	(0X800F202,	"addr10",	0);
	create_insn	(x=0X800F202);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800F20E,	"wrflag",	0);
	create_insn	(0X800F20E);
	set_cmt	(0X800F210,	"val",	0);
	set_cmt	(0X800F212,	"addr10",	0);
	create_insn	(x=0X800F212);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800F218,	"wrflag",	0);
	set_cmt	(0X800F21A,	"val",	0);
	set_cmt	(0X800F21C,	"addr10",	0);
	create_insn	(x=0X800F21C);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800F226);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F22E);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(0X800F234);
	create_insn	(0X800F236);
	set_cmt	(0X800F23C,	"data8",	0);
	set_cmt	(0X800F23E,	"addr8",	0);
	create_insn	(x=0X800F23E);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800F24A,	"wrflag",	0);
	set_cmt	(0X800F24C,	"val",	0);
	set_cmt	(0X800F24E,	"addr10",	0);
	create_insn	(x=0X800F24E);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800F258);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800F25C,	"wrflag",	0);
	create_insn	(0X800F25C);
	set_cmt	(0X800F25E,	"val",	0);
	set_cmt	(0X800F260,	"addr10",	0);
	create_insn	(x=0X800F260);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800F266,	"wrflag",	0);
	set_cmt	(0X800F268,	"val",	0);
	set_cmt	(0X800F26A,	"addr10",	0);
	create_insn	(x=0X800F26A);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800F270);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F274);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F276);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F282);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F28A);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F292);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(0X800F298);
	set_cmt	(0X800F29E,	"data8",	0);
	set_cmt	(0X800F2A0,	"addr8",	0);
	create_insn	(x=0X800F2A0);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	set_cmt	(0X800F2AC,	"wrflag",	0);
	set_cmt	(0X800F2AE,	"val",	0);
	set_cmt	(0X800F2B0,	"addr10",	0);
	create_insn	(x=0X800F2B0);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800F2BA);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(0X800F2BE);
	set_cmt	(0X800F2C4,	"addr8",	0);
	create_insn	(x=0X800F2C4);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_insn	(x=0X800F2CA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F2CE);
	op_hex		(x,	1);
	create_insn	(x=0X800F2D2);
	op_hex		(x,	1);
	set_cmt	(0X800F2DA,	"addr8",	0);
	create_insn	(x=0X800F2DA);
	op_enum		(x,	1,	GetEnum("SPI_FPGA_REG_DEFINES"),0);
	create_word	(0X800F2DE);
	create_dword	(x=0X800F2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800F2E4);
	create_dword	(0X800F2E8);
	create_dword	(x=0X800F2EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X800F2F4);
	create_insn	(x=0X800F2F8);
	op_hex		(x,	1);
	create_insn	(x=0X800F2FC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F300);
	op_hex		(x,	1);
	set_cmt	(0X800F304,	"data8",	0);
	set_cmt	(0X800F306,	"addr8",	0);
	create_insn	(x=0X800F312);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F31A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F322);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F32C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F33A,	"data8",	0);
	create_insn	(x=0X800F33A);
	op_hex		(x,	1);
	set_cmt	(0X800F33E,	"addr8",	0);
	create_insn	(x=0X800F348);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F350);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F358);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F360);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	create_insn	(x=0X800F368);
	op_enum		(x,	1,	GetEnum("BoardVersion"),0);
	set_cmt	(0X800F36E,	"wrflag",	0);
	create_insn	(0X800F36E);
	set_cmt	(0X800F370,	"addr10",	0);
	create_insn	(x=0X800F370);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	set_cmt	(0X800F380,	"wrflag",	0);
	set_cmt	(0X800F382,	"addr10",	0);
	create_insn	(x=0X800F382);
	op_enum		(x,	1,	GetEnum("SPI_AD9363_REG_DEFINES"),0);
	create_insn	(x=0X800F38A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F38E,	"wrflag",	0);
	create_insn	(0X800F38E);
	set_cmt	(0X800F390,	"addr10",	0);
	create_insn	(x=0X800F390);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800F39A,	"wrflag",	0);
	set_cmt	(0X800F39C,	"addr10",	0);
	create_insn	(x=0X800F39C);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	set_cmt	(0X800F3AC,	"wrflag",	0);
	set_cmt	(0X800F3AE,	"addr10",	0);
	create_insn	(x=0X800F3AE);
	op_enum		(x,	1,	GetEnum("SPI_AR9003_REG_DEFINES"),0);
	create_insn	(x=0X800F3B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F3C2,	"addr8",	0);
	create_insn	(x=0X800F3CC);
	op_hex		(x,	1);
	set_cmt	(0X800F3D0,	"addr8",	0);
	create_insn	(0X800F3D6);
	create_insn	(0X800F3D8);
	set_cmt	(0X800F3DE,	"data8",	0);
	set_cmt	(0X800F3E0,	"addr8",	0);
	set_cmt	(0X800F3E6,	"data8",	0);
	set_cmt	(0X800F3E8,	"addr8",	0);
	set_cmt	(0X800F3EE,	"data8",	0);
	set_cmt	(0X800F3F0,	"addr8",	0);
	set_cmt	(0X800F3F6,	"data8",	0);
	set_cmt	(0X800F3F8,	"addr8",	0);
	set_cmt	(0X800F3FE,	"data8",	0);
	set_cmt	(0X800F400,	"addr8",	0);
	set_cmt	(0X800F40C,	"data8",	0);
	set_cmt	(0X800F40E,	"addr8",	0);
	set_cmt	(0X800F414,	"data8",	0);
	set_cmt	(0X800F416,	"addr8",	0);
	set_cmt	(0X800F41C,	"data8",	0);
	set_cmt	(0X800F41E,	"addr8",	0);
	set_cmt	(0X800F424,	"data8",	0);
	set_cmt	(0X800F426,	"addr8",	0);
	create_insn	(0X800F436);
	create_insn	(x=0X800F438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F43C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F444);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F46A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F46E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F476,	"data8",	0);
	set_cmt	(0X800F478,	"addr8",	0);
	set_cmt	(0X800F486,	"data8",	0);
	set_cmt	(0X800F488,	"addr8",	0);
	set_cmt	(0X800F496,	"data8",	0);
	set_cmt	(0X800F498,	"addr8",	0);
	create_insn	(x=0X800F49E);
	op_plain_offset	(x,	1,	0X20001B38);
	op_plain_offset	(x,	129,	0X20001B38);
	set_cmt	(0X800F4A6,	"data8",	0);
	set_cmt	(0X800F4A8,	"addr8",	0);
	create_insn	(x=0X800F4AE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F4BC);
	op_plain_offset	(x,	1,	0X20001B38);
	op_plain_offset	(x,	129,	0X20001B38);
	create_insn	(x=0X800F4C0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F4C8,	"data8",	0);
	set_cmt	(0X800F4CA,	"addr8",	0);
	set_cmt	(0X800F4D8,	"data8",	0);
	set_cmt	(0X800F4DA,	"addr8",	0);
	set_cmt	(0X800F4E8,	"data8",	0);
	set_cmt	(0X800F4EA,	"addr8",	0);
	set_cmt	(0X800F4F8,	"data8",	0);
	set_cmt	(0X800F4FA,	"addr8",	0);
	create_insn	(x=0X800F500);
	op_plain_offset	(x,	1,	0X20001B38);
	op_plain_offset	(x,	129,	0X20001B38);
	create_insn	(0X800F510);
	set_cmt	(0X800F514,	"addr8",	0);
	create_insn	(x=0X800F51A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F51C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F520,	"addr8",	0);
	create_insn	(x=0X800F526);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F52A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F52E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F534);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F53C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F53E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F542);
	op_plain_offset	(x,	1,	0X20001BC1);
	op_plain_offset	(x,	129,	0X20001BC1);
	create_insn	(x=0X800F54A);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F54C);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F550);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F552);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F558);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F55A);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F55E);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F562);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F566);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F56A);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F56E);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F572);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F576);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F57C);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F580);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F584);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F588);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F58C);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F58E);
	op_plain_offset	(x,	1,	0X200019A4);
	op_plain_offset	(x,	129,	0X200019A4);
	create_insn	(x=0X800F594);
	op_plain_offset	(x,	1,	0X20001BC1);
	op_plain_offset	(x,	129,	0X20001BC1);
	create_insn	(x=0X800F59C);
	op_plain_offset	(x,	1,	0X20001BC1);
	op_plain_offset	(x,	129,	0X20001BC1);
	create_insn	(x=0X800F5A2);
	op_plain_offset	(x,	1,	0X20001BC1);
	op_plain_offset	(x,	129,	0X20001BC1);
	set_cmt	(0X800F5A4,	"addr8",	0);
	create_insn	(x=0X800F5AA);
	op_plain_offset	(x,	1,	0X20001BC1);
	op_plain_offset	(x,	129,	0X20001BC1);
	create_insn	(x=0X800F5AC);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F5AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F5B2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800F5B4);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	set_cmt	(0X800F5F0,	"addr8",	0);
	set_cmt	(0X800F5F8,	"addr8",	0);
	set_cmt	(0X800F602,	"addr8",	0);
	create_insn	(x=0X800F612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F640,	"addr8",	0);
	create_insn	(0X800F640);
	set_cmt	(0X800F648,	"addr8",	0);
	create_insn	(0X800F654);
	create_insn	(0X800F66E);
	create_insn	(x=0X800F68E);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	create_insn	(x=0X800F694);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F69A);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	create_insn	(0X800F6A0);
	create_insn	(x=0X800F6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F6AE,	"addr8",	0);
	create_insn	(x=0X800F6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X800F6B8,	"addr8",	0);
	create_insn	(x=0X800F6BE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F6C0,	"addr8",	0);
	create_insn	(x=0X800F6C6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F6C8,	"addr8",	0);
	create_insn	(x=0X800F6CE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F6D0,	"addr8",	0);
	create_insn	(x=0X800F6D6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F6DE,	"addr8",	0);
	create_insn	(x=0X800F6E4);
	op_stkvar	(x,	1);
	set_cmt	(0X800F6E8,	"addr8",	0);
	create_insn	(x=0X800F6EE);
	op_stkvar	(x,	1);
	set_cmt	(0X800F6F2,	"addr8",	0);
	create_insn	(x=0X800F6F8);
	op_stkvar	(x,	1);
	set_cmt	(0X800F6FC,	"addr8",	0);
	create_insn	(x=0X800F702);
	op_stkvar	(x,	1);
	set_cmt	(0X800F706,	"addr8",	0);
	create_insn	(x=0X800F70C);
	op_stkvar	(x,	1);
	set_cmt	(0X800F710,	"addr8",	0);
	create_insn	(x=0X800F716);
	op_stkvar	(x,	1);
	set_cmt	(0X800F71A,	"addr8",	0);
	create_insn	(x=0X800F720);
	op_stkvar	(x,	1);
	set_cmt	(0X800F724,	"addr8",	0);
	create_insn	(x=0X800F72A);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F750);
	op_stkvar	(x,	1);
	create_insn	(0X800F75C);
	create_insn	(x=0X800F760);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F76C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F77E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_strlit	(0X800F784,	0X800F79F);
	set_name	(0X800F784,	"aErrorAd9363Reg");
	create_byte	(0X800F79F);
	create_strlit	(0X800F7A0,	0X800F7BB);
	set_name	(0X800F7A0,	"aErrorAr8003Reg");
	create_byte	(0X800F7BB);
	create_dword	(x=0X800F7BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F7C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F7CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800F7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800F7D4);
	create_dword	(0X800F7D8);
	create_dword	(0X800F7DC);
	create_dword	(0X800F7E0);
	create_insn	(0X800F7E4);
	create_insn	(x=0X800F7E6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X800F7F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800F804);
	create_insn	(x=0X800F808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F80E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X800F816,	"wrflag",	0);
	set_cmt	(0X800F818,	"addr10",	0);
	set_cmt	(0X800F82C,	"addr8",	0);
	set_cmt	(0X800F83C,	"addr8",	0);
	set_cmt	(0X800F844,	"addr8",	0);
	set_cmt	(0X800F85A,	"addr8",	0);
	set_cmt	(0X800F862,	"addr8",	0);
	set_cmt	(0X800F8F4,	"wrflag",	0);
	set_cmt	(0X800F8F6,	"addr10",	0);
	create_insn	(0X800F904);
	create_insn	(0X800F906);
	create_insn	(0X800F908);
	create_insn	(0X800F90A);
	create_insn	(0X800F90E);
	create_insn	(0X800F912);
	create_insn	(0X800F91E);
	create_insn	(0X800F924);
	set_cmt	(0X800F928,	"val",	0);
	set_cmt	(0X800F92C,	"wrflag",	0);
	set_cmt	(0X800F92E,	"addr10",	0);
	set_cmt	(0X800F934,	"addr8",	0);
	set_cmt	(0X800F93C,	"addr8",	0);
	set_cmt	(0X800F944,	"addr8",	0);
	set_cmt	(0X800F94C,	"addr8",	0);
	set_cmt	(0X800F954,	"addr8",	0);
	create_insn	(x=0X800F962);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F970);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800F978);
	create_insn	(x=0X800F97C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F980);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F98E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800F992,	"addr8",	0);
	create_insn	(x=0X800F99A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F99E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9B0);
	op_hex		(x,	1);
	create_insn	(x=0X800F9BA);
	op_hex		(x,	1);
	create_insn	(x=0X800F9C6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800F9D0);
	create_insn	(x=0X800F9DC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800F9F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800F9FA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA02);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA06);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA0E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA16);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA1E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA22);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FA26);
	create_insn	(x=0X800FA28);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FA32);
	create_insn	(x=0X800FA34);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA3C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA40);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA44);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FA5E);
	create_insn	(x=0X800FA60);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FA6A);
	create_insn	(0X800FA6C);
	create_insn	(x=0X800FA70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA72);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FA8A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA90);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA94);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA98);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FA9C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAA2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAAA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAB2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FABA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FABE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAC2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FAC8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FACE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAD2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FADA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FAE0);
	create_insn	(x=0X800FAE2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FAF2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAF6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FAFE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB04);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB0C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB0E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB10);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB1A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB1E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FB2E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB36);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB40);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB48);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB50);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB56);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB5A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB60);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB64);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB6C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB70);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB74);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB76);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB7E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB86);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB90);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB96);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FB9A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FBA2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FBA8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FBAE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FBB4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FBBA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FBC0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FBCA);
	create_insn	(0X800FBDC);
	create_dword	(x=0X800FBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FBE4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X800FBE8);
	create_dword	(0X800FBEC);
	create_dword	(0X800FBF0);
	create_dword	(0X800FBF4);
	create_dword	(0X800FBF8);
	create_dword	(0X800FBFC);
	create_strlit	(0X800FC00,	0X800FC19);
	set_name	(0X800FC00,	"a2x2x2x2x2x");
	create_byte	(0X800FC19);
	make_array	(0X800FC19,	0X3);
	create_dword	(x=0X800FC1C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X800FC20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X800FC24,	0X800FC48);
	set_name	(0X800FC24,	"a2x2x2x2x2xD");
	create_dword	(0X800FC48);
	create_insn	(0X800FC4C);
	create_insn	(x=0X800FC4E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FC54);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC6C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800FC72,	"addr8",	0);
	create_insn	(x=0X800FC78);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC7E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC86);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC8C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC94);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC9C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FC9E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCAA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCB4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCBA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCBE);
	op_hex		(x,	1);
	create_insn	(x=0X800FCC2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCC6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCCE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCD2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FCD6);
	create_insn	(x=0X800FCDE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCE6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCEA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FCF0);
	create_insn	(x=0X800FCF2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FCF6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FCFA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD06);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FD16);
	create_insn	(0X800FD18);
	create_insn	(x=0X800FD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X800FD42);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD48);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X800FD60);
	create_insn	(x=0X800FD62);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD64);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FD6E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD74);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD76);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD78);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD82);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD88);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD8E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FD90);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD96);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD98);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FD9A);
	op_hex		(x,	1);
	create_insn	(x=0X800FD9E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FDA8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FDAA);
	op_hex		(x,	1);
	create_insn	(x=0X800FDB0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FDB2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FDBE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FDC2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X800FDC2,	"tcx_config_power_zone");
	create_insn	(x=0X800FDC6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FDCC);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800FDEE);
	set_cmt	(0X800FE08,	"wrflag",	0);
	create_insn	(0X800FE08);
	set_cmt	(0X800FE0A,	"val",	0);
	set_cmt	(0X800FE0C,	"addr10",	0);
	set_cmt	(0X800FE18,	"wrflag",	0);
	create_insn	(0X800FE18);
	set_cmt	(0X800FE1A,	"val",	0);
	set_cmt	(0X800FE1C,	"addr10",	0);
	set_cmt	(0X800FE2A,	"wrflag",	0);
	create_insn	(0X800FE2A);
	set_cmt	(0X800FE2C,	"val",	0);
	set_cmt	(0X800FE2E,	"addr10",	0);
	set_cmt	(0X800FE34,	"wrflag",	0);
	set_cmt	(0X800FE36,	"val",	0);
	set_cmt	(0X800FE38,	"addr10",	0);
	set_cmt	(0X800FE4E,	"wrflag",	0);
	set_cmt	(0X800FE50,	"val",	0);
	set_cmt	(0X800FE52,	"addr10",	0);
	set_cmt	(0X800FE5E,	"wrflag",	0);
	create_insn	(0X800FE5E);
	set_cmt	(0X800FE60,	"val",	0);
	set_cmt	(0X800FE62,	"addr10",	0);
	set_cmt	(0X800FE6E,	"wrflag",	0);
	create_insn	(0X800FE6E);
	set_cmt	(0X800FE70,	"val",	0);
	set_cmt	(0X800FE72,	"addr10",	0);
	set_cmt	(0X800FE7E,	"wrflag",	0);
	create_insn	(0X800FE7E);
	set_cmt	(0X800FE80,	"val",	0);
	set_cmt	(0X800FE82,	"addr10",	0);
	set_cmt	(0X800FE90,	"wrflag",	0);
	create_insn	(0X800FE90);
	set_cmt	(0X800FE92,	"val",	0);
	set_cmt	(0X800FE94,	"addr10",	0);
	set_cmt	(0X800FE9A,	"wrflag",	0);
	set_cmt	(0X800FE9C,	"val",	0);
	set_cmt	(0X800FE9E,	"addr10",	0);
	set_cmt	(0X800FEB4,	"wrflag",	0);
	set_cmt	(0X800FEB6,	"val",	0);
	set_cmt	(0X800FEB8,	"addr10",	0);
	set_cmt	(0X800FEBE,	"wrflag",	0);
	set_cmt	(0X800FEC0,	"val",	0);
	set_cmt	(0X800FEC2,	"addr10",	0);
	create_insn	(0X800FEC6);
	create_insn	(0X800FEC8);
	set_cmt	(0X800FED0,	"wrflag",	0);
	create_insn	(0X800FED0);
	set_cmt	(0X800FED2,	"val",	0);
	set_cmt	(0X800FED4,	"addr10",	0);
	create_insn	(0X800FEE2);
	create_insn	(0X800FEE4);
	create_insn	(x=0X800FEE6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FEE8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FEEE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800FEF4,	"addr8",	0);
	set_cmt	(0X800FEFA,	"data8",	0);
	create_insn	(x=0X800FEFA);
	op_hex		(x,	1);
	set_cmt	(0X800FEFE,	"addr8",	0);
	set_cmt	(0X800FF04,	"addr8",	0);
	create_insn	(x=0X800FF0A);
	op_hex		(x,	1);
	set_cmt	(0X800FF0E,	"addr8",	0);
	create_insn	(x=0X800FF14);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800FF1C,	"addr8",	0);
	create_insn	(x=0X800FF22);
	op_hex		(x,	1);
	set_cmt	(0X800FF26,	"addr8",	0);
	create_insn	(x=0X800FF32);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FF38);
	create_insn	(x=0X800FF3A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF3C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FF42);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800FF48,	"addr8",	0);
	create_insn	(x=0X800FF4E);
	op_hex		(x,	1);
	set_cmt	(0X800FF52,	"addr8",	0);
	set_cmt	(0X800FF58,	"addr8",	0);
	set_cmt	(0X800FF5E,	"data8",	0);
	create_insn	(x=0X800FF5E);
	op_hex		(x,	1);
	set_cmt	(0X800FF62,	"addr8",	0);
	create_insn	(x=0X800FF68);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X800FF70,	"addr8",	0);
	set_cmt	(0X800FF76,	"data8",	0);
	create_insn	(x=0X800FF76);
	op_hex		(x,	1);
	set_cmt	(0X800FF7A,	"addr8",	0);
	create_insn	(x=0X800FF86);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FF8C);
	create_insn	(x=0X800FF8E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF90);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FF98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FF9A);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FF9E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FFA4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FFAA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FFB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X800FFB2);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X800FFBA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FFD2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FFD8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X800FFDE);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X800FFE2);
	create_insn	(x=0X800FFE8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X800FFEE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X800FFF6);
	create_insn	(x=0X800FFFC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010006);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X8010018);
	create_insn	(x=0X801001E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010024);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801002E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X8010038);
	create_insn	(0X8010040);
	make_array	(0X8010042,	0X2);
	create_dword	(x=0X8010044);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801004C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8010054,	0X8010061);
	set_name	(0X8010054,	"aSetAlterD");
	create_byte	(0X8010061);
	make_array	(0X8010061,	0X3);
	create_dword	(x=0X8010064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8010068);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801006A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X8010076);
	create_insn	(x=0X8010078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801007C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X8010090);
	create_insn	(0X8010092);
	create_insn	(x=0X8010094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010096);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80100A8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80100AE);
	create_insn	(x=0X80100C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80100F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010102);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010118);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801011E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010132);
	op_plain_offset	(x,	1,	0X20001AB5);
	op_plain_offset	(x,	129,	0X20001AB5);
	create_insn	(x=0X8010134);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010136);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010138);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801013E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010142);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801015E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010160);
	op_hex		(x,	1);
	create_insn	(x=0X8010168);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801016A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801016C);
	op_hex		(x,	1);
	create_insn	(x=0X8010170);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010172);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010174);
	op_hex		(x,	1);
	create_insn	(x=0X801017C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801017E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010180);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010182);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010186);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010188);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801018C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801019A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801019E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101A2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101A6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101AA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101AE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101B2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101BA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101BE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101C2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101C6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80101CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80101CE);
	op_hex		(x,	1);
	create_insn	(x=0X80101D4);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80101D8);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80101DA);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80101DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010228);
	op_plain_offset	(x,	1,	0X20001BE4);
	op_plain_offset	(x,	129,	0X20001BE4);
	create_insn	(x=0X8010230);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010232);
	op_hex		(x,	1);
	create_insn	(x=0X8010236);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010238);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801023C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010240);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010248);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801024C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010250);
	op_plain_offset	(x,	1,	0X20001B3C);
	op_plain_offset	(x,	129,	0X20001B3C);
	create_insn	(x=0X8010264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010268);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X8010270);
	create_insn	(0X801027A);
	create_insn	(x=0X801027C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010286);
	create_insn	(x=0X8010288);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801028A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010298);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X801029E);
	create_insn	(x=0X80102A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102AA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X80102BA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X80102C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102C6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80102CA);
	op_hex		(x,	1);
	create_insn	(x=0X80102D2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102D6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80102DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102E0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80102E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80102EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80102F6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801030E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010314);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010316);
	op_stkvar	(x,	1);
	create_insn	(x=0X801031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010324);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X801032C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010332);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010334);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010336);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010340);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801036A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010374);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010376);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010378);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801037A);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801037C);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801037E);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010380);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010382);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010384);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010386);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801038C);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801038E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010390);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010392);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010394);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X8010396);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010398);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X801039A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801039C);
	op_plain_offset	(x,	1,	0X20001CC7);
	op_plain_offset	(x,	129,	0X20001CC7);
	create_insn	(x=0X80103AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103B0);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X80103BA);
	create_insn	(x=0X80103BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103C2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X80103D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80103D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103DE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80103EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80103F8);
	create_insn	(x=0X80103FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801041C);
	op_plain_offset	(x,	1,	0X20001CE8);
	op_plain_offset	(x,	129,	0X20001CE8);
	create_insn	(x=0X801042E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8010436);
	create_insn	(x=0X801043E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801044A);
	op_plain_offset	(x,	1,	0X20001DF8);
	op_plain_offset	(x,	129,	0X20001DF8);
	create_dword	(x=0X8010458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801045C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010464);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801046C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010474);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801047C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X8010480,	0X801049F);
	set_name	(0X8010480,	"aId2x2x2x2x2x");
	create_byte	(0X801049F);
	create_dword	(x=0X80104A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80104A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80104A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80104AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80104B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80104B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X80104B8);
	create_insn	(0X80104BC);
	create_insn	(x=0X80104BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80104C6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80104CC);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X80104D6);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X80104DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104E2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	set_cmt	(0X80104E4,	"switch 7 cases ",	0);
	set_cmt	(0X80104E8,	"switch jump",	0);
	set_cmt	(0X80104EC,	"jump table for switch statement",	0);
	create_byte	(0X80104EC);
	set_name	(0X80104EC,	"jpt_80104E8");
	create_byte	(0X80104ED);
	create_byte	(0X80104EE);
	create_byte	(0X80104EF);
	create_byte	(0X80104F0);
	create_byte	(0X80104F1);
	create_byte	(0X80104F2);
	set_cmt	(0X80104F4,	"jumptable 080104E8 case 1",	1);
	create_insn	(0X80104F4);
	create_insn	(x=0X80104FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80104FE);
	op_hex		(x,	1);
	set_cmt	(0X8010504,	"jumptable 080104E8 case 2",	1);
	create_insn	(0X8010504);
	set_cmt	(0X8010512,	"jumptable 080104E8 case 3",	1);
	create_insn	(0X8010512);
	create_insn	(x=0X801051E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010522);
	op_hex		(x,	1);
	create_insn	(x=0X8010526);
	op_stkvar	(x,	1);
	set_cmt	(0X801052A,	"jumptable 080104E8 default case",	1);
	set_name	(0X801052A,	"def_80104E8");
	create_insn	(x=0X8010534);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010536);
	op_stkvar	(x,	1);
	create_insn	(x=0X801053E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010540);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010542);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010544);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X801054C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X8010556,	"jumptable 080104E8 case 4",	1);
	create_insn	(0X8010556);
	create_insn	(x=0X8010562);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010566);
	op_hex		(x,	1);
	set_cmt	(0X801056C,	"jumptable 080104E8 case 5",	1);
	create_insn	(0X801056C);
	create_insn	(x=0X8010578);
	op_stkvar	(x,	1);
	create_insn	(x=0X801057C);
	op_hex		(x,	1);
	set_cmt	(0X8010582,	"jumptable 080104E8 case 6",	1);
	create_insn	(0X8010582);
	create_insn	(x=0X801058E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010592);
	op_hex		(x,	1);
	create_insn	(x=0X8010598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801059A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80105A2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105A4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80105AE);
	create_insn	(x=0X80105B2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105B4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80105BE);
	create_insn	(x=0X80105C2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105C4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80105CE);
	create_insn	(x=0X80105D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105D4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80105DA);
	create_insn	(x=0X80105E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105E6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80105E8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80105EC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80105EE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80105F2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80105F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80105FA);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010604);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801060E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010616);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010624);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X801062C);
	create_insn	(x=0X8010630);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801063A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010644);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010658);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010666);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801067E);
	op_hex		(x,	1);
	create_insn	(x=0X8010684);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801068E);
	op_hex		(x,	1);
	create_insn	(x=0X8010694);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X8010696);
	op_hex		(x,	1);
	create_insn	(x=0X801069A);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80106A6);
	op_hex		(x,	1);
	create_insn	(x=0X80106B6);
	op_hex		(x,	1);
	create_insn	(x=0X80106C6);
	op_hex		(x,	1);
	create_insn	(x=0X80106D8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80106EA);
	op_hex		(x,	1);
	create_insn	(x=0X80106F0);
	op_hex		(x,	1);
	create_insn	(x=0X80106F6);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80106F8);
	op_hex		(x,	1);
	create_insn	(x=0X80106FC);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X80106FE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010700);
	op_hex		(x,	1);
	create_insn	(x=0X801070A);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X801070C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010718);
	op_plain_offset	(x,	1,	0X20000194);
	op_plain_offset	(x,	129,	0X20000194);
	create_insn	(x=0X801071C);
	op_hex		(x,	1);
	create_insn	(x=0X8010722);
	op_hex		(x,	1);
	create_insn	(x=0X8010728);
	op_hex		(x,	1);
	create_insn	(x=0X801072E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010736);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801073E);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010742);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X8010748);
	create_insn	(0X801074C);
	create_insn	(0X8010756);
	create_insn	(0X801075A);
	create_insn	(x=0X801075C);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X801076C);
	create_insn	(x=0X801076E);
	op_plain_offset	(x,	1,	0X20001BB0);
	op_plain_offset	(x,	129,	0X20001BB0);
	create_insn	(x=0X8010774);
	op_plain_offset	(x,	1,	0X20001BB0);
	op_plain_offset	(x,	129,	0X20001BB0);
	set_cmt	(0X801077A,	"data8",	0);
	set_cmt	(0X801077C,	"addr8",	0);
	set_cmt	(0X8010782,	"data8",	0);
	set_cmt	(0X8010784,	"addr8",	0);
	set_cmt	(0X801078A,	"data8",	0);
	set_cmt	(0X801078C,	"addr8",	0);
	set_cmt	(0X8010792,	"data8",	0);
	set_cmt	(0X8010794,	"addr8",	0);
	set_cmt	(0X801079A,	"data8",	0);
	set_cmt	(0X801079C,	"addr8",	0);
	create_insn	(x=0X80107A6);
	op_plain_offset	(x,	1,	0X20001BB0);
	op_plain_offset	(x,	129,	0X20001BB0);
	create_insn	(x=0X80107AC);
	op_plain_offset	(x,	1,	0X20001BB0);
	op_plain_offset	(x,	129,	0X20001BB0);
	create_insn	(x=0X80107B0);
	op_plain_offset	(x,	1,	0X20001BB0);
	op_plain_offset	(x,	129,	0X20001BB0);
	create_insn	(x=0X80107B8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107BC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107C2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107C8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107CC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107D6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107EC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80107F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80107F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010802);
	op_stkvar	(x,	1);
	create_insn	(x=0X801080C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010810);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010814);
	op_stkvar	(x,	1);
	create_insn	(x=0X801081C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010820);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801082C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801082E);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X8010830);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010834);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(0X8010838);
	create_insn	(x=0X801083A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010842);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X8010846);
	op_plain_offset	(x,	1,	0X20001AB5);
	op_plain_offset	(x,	129,	0X20001AB5);
	create_insn	(x=0X801084A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010852);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801085E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X8010864);
	create_insn	(x=0X8010866);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010870);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801087E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010882);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010886);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801088A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010896);
	op_plain_offset	(x,	1,	0X20001AB5);
	op_plain_offset	(x,	129,	0X20001AB5);
	create_insn	(x=0X80108AC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80108B0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80108B6);
	create_dword	(0X80108B8);
	make_array	(0X80108B8,	0X2);
	create_dword	(x=0X80108C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80108C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80108C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X80108CC,	0X80108ED);
	set_name	(0X80108CC,	"a2x2x2x2x2x_0");
	create_byte	(0X80108ED);
	make_array	(0X80108ED,	0X3);
	create_insn	(x=0X80108F0);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80108F6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80108FA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010900);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010904);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010908);
	op_hex		(x,	1);
	create_insn	(x=0X801090E);
	op_hex		(x,	1);
	create_insn	(x=0X8010912);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010916);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010918);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801091E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010922);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010924);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801092C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801092E);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010934);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801093A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010942);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010944);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801094A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801094E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010950);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801095A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010962);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801096A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010970);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010976);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801097E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010980);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010984);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010996);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X801099C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X80109A4);
	create_insn	(x=0X80109A6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109AC);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X80109B0);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X80109B6);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X80109BA);
	op_plain_offset	(x,	1,	0X20001AA4);
	op_plain_offset	(x,	129,	0X20001AA4);
	create_insn	(x=0X80109D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109D6);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80109DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109DE);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80109E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109E8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80109EC);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80109F2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80109F4);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X80109FA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A02);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A04);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A0A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A0C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A12);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A14);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(0X8010A1A);
	create_insn	(x=0X8010A20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010A46);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A4A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A52);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A58);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A5C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A64);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010A6A);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X8010A72,	"data8",	0);
	set_cmt	(0X8010A74,	"addr8",	0);
	set_cmt	(0X8010A7E,	"data8",	0);
	create_insn	(0X8010A7E);
	set_cmt	(0X8010A80,	"addr8",	0);
	create_insn	(x=0X8010A8C);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	set_cmt	(0X8010A98,	"data8",	0);
	create_insn	(0X8010A98);
	set_cmt	(0X8010A9A,	"addr8",	0);
	create_insn	(0X8010AA4);
	create_insn	(x=0X8010AA6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AAA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010AC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010AC2);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010AC8);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010AD8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010ADA);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010AE0);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(x=0X8010AE2);
	op_plain_offset	(x,	1,	0X20001AB4);
	op_plain_offset	(x,	129,	0X20001AB4);
	create_insn	(x=0X8010AE8);
	op_plain_offset	(x,	1,	0X20000158);
	op_plain_offset	(x,	129,	0X20000158);
	create_insn	(0X8010AF0);
	create_dword	(x=0X8010AF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8010AFC);
	create_insn	(0X8010BDE);
	create_insn	(x=0X8010BFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C18);
	op_hex		(x,	1);
	create_insn	(x=0X8010C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C40);
	op_hex		(x,	1);
	create_insn	(x=0X8010C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C46);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C4A);
	op_hex		(x,	1);
	create_insn	(x=0X8010C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C62);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010CD6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D2E);
	op_stkvar	(x,	1);
	create_insn	(0X8010D3A);
	create_insn	(x=0X8010D3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D66);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010D9E);
	op_stkvar	(x,	1);
	create_insn	(0X8010DE2);
	create_insn	(x=0X8010DE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8010E1A);
	op_stkvar	(x,	1);
	create_insn	(0X8010E5C);
	create_insn	(x=0X8010E72);
	op_hex		(x,	1);
	create_insn	(0X8010E86);
	create_insn	(0X8010E8A);
	create_insn	(x=0X8010E96);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010E9A);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010EA4);
	op_plain_offset	(x,	1,	0X20002601);
	op_plain_offset	(x,	129,	0X20002601);
	create_insn	(x=0X8010EA8);
	op_plain_offset	(x,	1,	0X20002601);
	op_plain_offset	(x,	129,	0X20002601);
	create_insn	(x=0X8010ED6);
	op_plain_offset	(x,	1,	0X20002608);
	op_plain_offset	(x,	129,	0X20002608);
	create_insn	(0X8010EFE);
	create_dword	(0X8010F00);
	create_dword	(0X8010F04);
	create_dword	(0X8010F08);
	create_dword	(0X8010F0C);
	create_dword	(0X8010F10);
	create_dword	(0X8010F14);
	create_dword	(0X8010F18);
	create_dword	(0X8010F1C);
	create_dword	(0X8010F20);
	create_dword	(0X8010F24);
	create_dword	(0X8010F28);
	create_dword	(0X8010F2C);
	create_dword	(x=0X8010F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8010F34);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8010F38);
	create_insn	(0X8010F3C);
	create_insn	(x=0X8010F44);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F48);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F4C);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F62);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F66);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F6A);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(0X8010F70);
	create_insn	(0X8010F72);
	create_insn	(0X8010F74);
	create_insn	(0X8010F76);
	create_insn	(x=0X8010F78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8010F7A);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010F7E);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010F86);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010F88);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010F94);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F98);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010F9C);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010FA6);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010FAE);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010FB0);
	op_plain_offset	(x,	1,	0X200025EC);
	op_plain_offset	(x,	129,	0X200025EC);
	create_insn	(x=0X8010FB8);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010FBA);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010FBC);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(x=0X8010FC6);
	op_plain_offset	(x,	1,	0X200025C0);
	op_plain_offset	(x,	129,	0X200025C0);
	create_insn	(0X8010FF6);
	create_insn	(0X8010FF8);
	create_insn	(0X8011004);
	create_insn	(0X8011012);
	create_insn	(0X8011024);
	create_dword	(x=0X8011028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801102C);
	create_insn	(x=0X8011036);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011040);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011048);
	op_stkvar	(x,	1);
	create_insn	(x=0X801104A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801104C);
	op_stkvar	(x,	1);
	create_insn	(0X8011062);
	create_insn	(0X80110AA);
	create_insn	(0X80110BC);
	create_insn	(0X80110F2);
	create_insn	(0X8011122);
	create_insn	(0X801114A);
	create_insn	(0X801116E);
	create_insn	(0X8011180);
	create_insn	(0X80111AE);
	create_insn	(0X80111D2);
	create_insn	(0X80111FC);
	create_insn	(0X8011232);
	create_insn	(0X80112A6);
	create_insn	(0X80112A8);
	create_insn	(0X80112B4);
	create_insn	(0X80112C0);
	create_insn	(0X80112DA);
	create_insn	(x=0X80112E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80112E8);
	create_insn	(0X80112FE);
	set_cmt	(0X801130C,	"payload_len",	0);
	create_insn	(0X801130C);
	set_cmt	(0X801130E,	"payload",	0);
	set_cmt	(0X8011310,	"spkt",	0);
	set_cmt	(0X8011312,	"send_func",	0);
	create_insn	(x=0X8011312);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8011318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801131C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X8011320,	"send_func");
	create_insn	(0X8011324);
	create_insn	(x=0X8011328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801132A);
	op_plain_offset	(x,	1,	0X2000019C);
	op_plain_offset	(x,	129,	0X2000019C);
	create_insn	(x=0X8011332);
	op_plain_offset	(x,	1,	0X2000019C);
	op_plain_offset	(x,	129,	0X2000019C);
	create_insn	(x=0X8011334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011348);
	op_plain_offset	(x,	1,	0X20001F08);
	op_plain_offset	(x,	129,	0X20001F08);
	create_insn	(x=0X801134E);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(x=0X8011352);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(x=0X8011356);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(x=0X801135A);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(x=0X801135E);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(x=0X8011364);
	op_plain_offset	(x,	1,	0X20001F1A);
	op_plain_offset	(x,	129,	0X20001F1A);
	create_insn	(0X8011368);
	create_insn	(x=0X801136A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801137C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011394);
	op_plain_offset	(x,	1,	0X2000019C);
	op_plain_offset	(x,	129,	0X2000019C);
	create_insn	(x=0X8011398);
	op_plain_offset	(x,	1,	0X2000019C);
	op_plain_offset	(x,	129,	0X2000019C);
	make_array	(0X801139E,	0X2);
	create_dword	(x=0X80113A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80113A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80113A8);
	create_insn	(x=0X80113CA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80113E2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80113F6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80113FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011406);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801141C);
	create_insn	(x=0X801144C);
	op_hex		(x,	1);
	create_insn	(0X8011456);
	create_insn	(x=0X801145E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011464);
	create_insn	(0X801147C);
	create_insn	(0X801148A);
	create_insn	(0X801148C);
	create_insn	(x=0X8011496);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80114C2);
	create_insn	(0X80114C6);
	create_insn	(x=0X80114CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011502);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011510);
	create_insn	(x=0X8011514);
	op_plain_offset	(x,	1,	0X20002368);
	op_plain_offset	(x,	129,	0X20002368);
	create_insn	(0X8011522);
	create_insn	(0X8011538);
	create_insn	(0X8011540);
	create_insn	(x=0X8011544);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011548);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X801154C);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011552);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011566);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011568);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X801156A);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X801156C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801156E);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011580);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011584);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801159A);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80115A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115AA);
	op_stkvar	(x,	1);
	create_insn	(x=0X80115AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115C0);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80115C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115DA);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X80115DC);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X80115DE);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X80115E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80115E2);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X80115F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80115FC);
	op_plain_offset	(x,	1,	0X200001A4);
	op_plain_offset	(x,	129,	0X200001A4);
	create_insn	(x=0X8011604);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011610);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X8011618);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X8011620);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011622);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X801162A);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X801162C);
	op_plain_offset	(x,	1,	0X200001AC);
	op_plain_offset	(x,	129,	0X200001AC);
	create_insn	(x=0X8011632);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X801163C);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X8011642);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X8011644);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X801164C);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	create_insn	(x=0X801164E);
	op_plain_offset	(x,	1,	0X2000175C);
	op_plain_offset	(x,	129,	0X2000175C);
	create_insn	(x=0X8011656);
	op_plain_offset	(x,	1,	0X200001B4);
	op_plain_offset	(x,	129,	0X200001B4);
	make_array	(0X801165A,	0X2);
	create_dword	(x=0X801165C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011664);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801166C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8011670);
	create_dword	(x=0X8011674);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8011678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X801167C);
	create_insn	(0X8011680);
	set_name	(0X8011680,	"nullsub_2");
	create_insn	(0X8011682);
	create_insn	(x=0X80116AE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80116B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116B6);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116CE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80116D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80116DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80116E8);
	create_insn	(x=0X80116EE);
	op_stkvar	(x,	1);
	create_insn	(0X8011700);
	create_insn	(x=0X8011702);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011708);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011718);
	op_stkvar	(x,	1);
	create_insn	(x=0X801171A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801172C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011738);
	create_insn	(x=0X801173E);
	op_stkvar	(x,	1);
	create_insn	(0X8011750);
	create_insn	(x=0X8011752);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011758);
	op_stkvar	(x,	1);
	create_insn	(x=0X801175E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801176E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011770);
	op_stkvar	(x,	1);
	create_insn	(x=0X801177C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011786);
	create_insn	(x=0X801178C);
	op_stkvar	(x,	1);
	create_insn	(0X801179C);
	create_insn	(0X80117A0);
	create_insn	(x=0X80117A2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117AE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117BA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80117BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80117D2);
	create_insn	(x=0X80117D8);
	op_stkvar	(x,	1);
	create_insn	(0X80117E8);
	create_insn	(0X80117EC);
	create_insn	(x=0X80117EE);
	op_stkvar	(x,	1);
	create_insn	(x=0X80117FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011806);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011808);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X801181E,	0X2);
	create_dword	(0X8011820);
	create_dword	(x=0X8011824);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8011828);
	create_insn	(x=0X801182A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801182C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801183C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011842);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011860);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801186E);
	op_stkvar	(x,	1);
	create_insn	(0X8011876);
	create_insn	(x=0X801187A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011882);
	create_insn	(x=0X8011884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011896);
	create_insn	(x=0X801189E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80118AA);
	op_plain_offset	(x,	1,	0X20002570);
	op_plain_offset	(x,	129,	0X20002570);
	create_insn	(x=0X80118B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X80118C2,	0X2);
	create_dword	(x=0X80118C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80118C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80118CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80118D0);
	set_name	(0X80118D0,	"packet_send");
	create_insn	(x=0X80118D8);
	op_hex		(x,	1);
	set_cmt	(0X80118DC,	"switch 31 cases ",	0);
	set_cmt	(0X80118E0,	"switch jump",	0);
	set_cmt	(0X80118E4,	"jump table for switch statement",	0);
	create_byte	(0X80118E4);
	set_name	(0X80118E4,	"jpt_80118E0");
	create_byte	(0X80118E5);
	create_byte	(0X80118E6);
	create_byte	(0X80118E7);
	create_byte	(0X80118E8);
	create_byte	(0X80118E9);
	create_byte	(0X80118EA);
	create_byte	(0X80118EB);
	create_byte	(0X80118EC);
	create_byte	(0X80118ED);
	create_byte	(0X80118EE);
	create_byte	(0X80118EF);
	create_byte	(0X80118F0);
	create_byte	(0X80118F1);
	create_byte	(0X80118F2);
	create_byte	(0X80118F3);
	create_byte	(0X80118F4);
	create_byte	(0X80118F5);
	create_byte	(0X80118F6);
	create_byte	(0X80118F7);
	create_byte	(0X80118F8);
	create_byte	(0X80118F9);
	create_byte	(0X80118FA);
	create_byte	(0X80118FB);
	create_byte	(0X80118FC);
	create_byte	(0X80118FD);
	create_byte	(0X80118FE);
	create_byte	(0X80118FF);
	create_byte	(0X8011900);
	create_byte	(0X8011901);
	create_byte	(0X8011902);
	set_cmt	(0X8011904,	"jumptable 080118E0 cases 1,4,8,15",	1);
	create_insn	(0X8011904);
	set_cmt	(0X801190E,	"jumptable 080118E0 case 30",	1);
	create_insn	(0X801190E);
	set_cmt	(0X8011938,	"jumptable 080118E0 cases 3,5,10-12,18,21,23",	1);
	create_insn	(0X8011942);
	set_cmt	(0X801194E,	"jumptable 080118E0 cases 2,6,13,14,16,20,22",	1);
	create_insn	(0X801194E);
	set_cmt	(0X801195C,	"jumptable 080118E0 case 17",	1);
	create_insn	(0X801195C);
	set_cmt	(0X8011988,	"jumptable 080118E0 default case",	1);
	create_insn	(0X8011988);
	set_name	(0X8011988,	"def_80118E0");
	create_insn	(0X801198A);
	create_insn	(x=0X8011992);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011996);
	create_insn	(x=0X801199E);
	op_hex		(x,	1);
	create_insn	(0X80119C6);
	create_insn	(0X80119D4);
	create_dword	(x=0X80119D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X80119DC);
	create_insn	(0X80119F2);
	create_insn	(0X80119FE);
	create_insn	(0X8011A08);
	create_insn	(0X8011A24);
	create_insn	(0X8011A4C);
	create_insn	(0X8011A4E);
	create_insn	(0X8011A5A);
	create_insn	(0X8011A5E);
	create_insn	(0X8011A66);
	create_insn	(0X8011A76);
	create_insn	(0X8011A7A);
	create_insn	(0X8011A7E);
	create_insn	(0X8011A8E);
	set_cmt	(0X8011A96,	"switch 13 cases ",	0);
	set_cmt	(0X8011A9A,	"switch jump",	0);
	set_cmt	(0X8011A9E,	"jump table for switch statement",	0);
	create_byte	(0X8011A9E);
	set_name	(0X8011A9E,	"jpt_8011A9A");
	create_byte	(0X8011A9F);
	create_byte	(0X8011AA0);
	create_byte	(0X8011AA1);
	create_byte	(0X8011AA2);
	create_byte	(0X8011AA3);
	create_byte	(0X8011AA4);
	create_byte	(0X8011AA5);
	create_byte	(0X8011AA6);
	create_byte	(0X8011AA7);
	create_byte	(0X8011AA8);
	create_byte	(0X8011AA9);
	create_byte	(0X8011AAA);
	set_cmt	(0X8011AAC,	"jumptable 08011A9A case 0",	1);
	create_insn	(0X8011AAC);
	set_cmt	(0X8011ABA,	"jumptable 08011A9A case 1",	1);
	create_insn	(0X8011ABA);
	set_cmt	(0X8011AC4,	"jumptable 08011A9A case 2",	1);
	create_insn	(0X8011AC4);
	create_insn	(0X8011AE0);
	set_cmt	(0X8011AE8,	"jumptable 08011A9A case 3",	1);
	create_insn	(0X8011AE8);
	create_insn	(0X8011B14);
	create_insn	(0X8011B18);
	set_cmt	(0X8011B1E,	"jumptable 08011A9A case 4",	1);
	create_insn	(0X8011B1E);
	set_cmt	(0X8011B28,	"jumptable 08011A9A case 5",	1);
	create_insn	(0X8011B28);
	set_cmt	(0X8011B32,	"jumptable 08011A9A case 6",	1);
	create_insn	(0X8011B32);
	set_cmt	(0X8011B3C,	"jumptable 08011A9A case 7",	1);
	create_insn	(0X8011B3C);
	set_cmt	(0X8011B46,	"jumptable 08011A9A case 8",	1);
	create_insn	(0X8011B46);
	set_cmt	(0X8011B50,	"jumptable 08011A9A case 9",	1);
	create_insn	(0X8011B50);
	set_cmt	(0X8011B5A,	"jumptable 08011A9A case 10",	1);
	create_insn	(0X8011B5A);
	set_cmt	(0X8011B64,	"jumptable 08011A9A case 11",	1);
	create_insn	(0X8011B64);
	set_cmt	(0X8011B84,	"jumptable 08011A9A default case",	1);
	create_insn	(0X8011B84);
	set_name	(0X8011B84,	"def_8011A9A");
	create_insn	(0X8011B86);
	set_cmt	(0X8011B9E,	"jumptable 08011A9A case 12",	1);
	create_insn	(0X8011B9E);
	create_insn	(0X8011BC0);
	create_insn	(0X8011BC6);
	create_insn	(0X8011BDE);
	create_insn	(0X8011BE6);
	create_insn	(0X8011C06);
	create_insn	(0X8011C0A);
	create_insn	(0X8011C1E);
	create_insn	(x=0X8011C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C54);
	op_hex		(x,	1);
	create_insn	(x=0X8011C5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C82);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011CAC);
	op_stkvar	(x,	1);
	create_insn	(0X8011CD0);
	create_insn	(x=0X8011D0E);
	op_hex		(x,	1);
	create_insn	(x=0X8011D18);
	op_hex		(x,	1);
	create_insn	(x=0X8011D30);
	op_hex		(x,	1);
	create_insn	(0X8011D66);
	set_name	(0X8011D66,	"packet_make_response");
	create_insn	(x=0X8011D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011D9A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011D9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DA2);
	op_hex		(x,	1);
	create_insn	(x=0X8011DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DC4);
	op_hex		(x,	1);
	create_insn	(x=0X8011DC8);
	op_hex		(x,	1);
	create_insn	(x=0X8011DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8011DD4);
	op_stkvar	(x,	1);
	make_array	(0X8011DF6,	0X2);
	create_insn	(0X8011DF8);
	create_insn	(x=0X8011DFA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011DFE);
	create_insn	(0X8011E0E);
	create_insn	(0X8011E30);
	create_insn	(0X8011E34);
	create_dword	(x=0X8011E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8011E54);
	create_insn	(x=0X8011E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011E70);
	create_insn	(0X8011E76);
	create_insn	(0X8011E7A);
	create_insn	(0X8011EAA);
	create_insn	(0X8011EAE);
	create_dword	(x=0X8011ED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8011ED4);
	create_insn	(x=0X8011EE2);
	op_hex		(x,	1);
	create_insn	(x=0X8011EE8);
	op_hex		(x,	1);
	create_insn	(x=0X8011F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8011F24);
	op_plain_offset	(x,	1,	0X200001C4);
	op_plain_offset	(x,	129,	0X200001C4);
	create_insn	(x=0X8011F30);
	op_hex		(x,	1);
	create_insn	(x=0X8011F52);
	op_plain_offset	(x,	1,	0X200001C4);
	op_plain_offset	(x,	129,	0X200001C4);
	create_insn	(x=0X8011F74);
	op_plain_offset	(x,	1,	0X200001C4);
	op_plain_offset	(x,	129,	0X200001C4);
	create_insn	(x=0X8011F78);
	op_hex		(x,	1);
	create_insn	(x=0X8011F92);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8011F98);
	create_insn	(x=0X8011FA4);
	op_hex		(x,	1);
	create_insn	(x=0X8011FAA);
	op_hex		(x,	1);
	create_insn	(x=0X8011FD0);
	op_hex		(x,	1);
	create_insn	(x=0X8011FF0);
	op_hex		(x,	1);
	create_insn	(x=0X8012008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012012);
	create_insn	(x=0X801201A);
	op_hex		(x,	1);
	create_insn	(0X801203C);
	create_insn	(0X801205A);
	create_insn	(0X801206E);
	create_insn	(0X8012072);
	create_insn	(x=0X801207E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012086);
	create_insn	(x=0X801208C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012094);
	op_hex		(x,	1);
	create_insn	(0X80120A8);
	create_insn	(0X80120B2);
	create_insn	(x=0X80120BA);
	op_stkvar	(x,	1);
	create_insn	(0X80120C0);
	create_insn	(x=0X80120C8);
	op_stkvar	(x,	1);
	create_insn	(0X80120CE);
	set_cmt	(0X80120D4,	"payload_len",	0);
	set_cmt	(0X80120D6,	"payload",	0);
	set_cmt	(0X80120D8,	"spkt",	0);
	set_cmt	(0X80120DA,	"send_func",	0);
	create_insn	(x=0X80120DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80120E2);
	create_insn	(x=0X80120E8);
	op_stkvar	(x,	1);
	set_cmt	(0X80120EC,	"data8",	0);
	set_cmt	(0X80120EE,	"addr8",	0);
	set_cmt	(0X80120F4,	"payload_len",	0);
	set_cmt	(0X80120F6,	"payload",	0);
	set_cmt	(0X80120F8,	"spkt",	0);
	set_cmt	(0X80120FA,	"send_func",	0);
	create_insn	(x=0X80120FA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012102);
	create_insn	(x=0X8012108);
	op_stkvar	(x,	1);
	set_cmt	(0X801210A,	"addr8",	0);
	create_insn	(x=0X8012110);
	op_stkvar	(x,	1);
	set_cmt	(0X8012114,	"payload_len",	0);
	set_cmt	(0X8012116,	"payload",	0);
	set_cmt	(0X8012118,	"spkt",	0);
	set_cmt	(0X801211A,	"send_func",	0);
	create_insn	(x=0X801211A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012122);
	set_name	(0X8012122,	"cmd_exec_set09_cmd06");
	create_insn	(x=0X801212C);
	op_stkvar	(x,	1);
	set_cmt	(0X8012130,	"addr10",	0);
	set_cmt	(0X8012142,	"data8",	0);
	set_cmt	(0X8012144,	"addr8",	0);
	set_cmt	(0X8012154,	"val",	0);
	create_insn	(0X8012154);
	set_cmt	(0X8012156,	"wrflag",	0);
	set_cmt	(0X801215C,	"payload_len",	0);
	set_cmt	(0X801215E,	"payload",	0);
	set_cmt	(0X8012160,	"spkt",	0);
	set_cmt	(0X8012162,	"send_func",	0);
	create_insn	(x=0X8012162);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801216A);
	create_insn	(x=0X8012174);
	op_stkvar	(x,	1);
	set_cmt	(0X8012176,	"addr10",	0);
	set_cmt	(0X8012188,	"addr8",	0);
	create_insn	(x=0X801218E);
	op_stkvar	(x,	1);
	set_cmt	(0X801219C,	"wrflag",	0);
	create_insn	(0X801219C);
	create_insn	(x=0X80121A2);
	op_stkvar	(x,	1);
	set_cmt	(0X80121A6,	"payload_len",	0);
	set_cmt	(0X80121A8,	"payload",	0);
	set_cmt	(0X80121AA,	"spkt",	0);
	set_cmt	(0X80121AC,	"send_func",	0);
	create_insn	(x=0X80121AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80121B4);
	set_name	(0X80121B4,	"cmd_exec_set09_cmd12");
	create_insn	(x=0X80121BA);
	op_stkvar	(x,	1);
	create_insn	(0X80121D4);
	create_insn	(x=0X80121DC);
	op_hex		(x,	1);
	create_insn	(x=0X80121EE);
	op_hex		(x,	1);
	set_cmt	(0X8012202,	"payload_len",	0);
	set_cmt	(0X8012204,	"payload",	0);
	set_cmt	(0X8012206,	"spkt",	0);
	set_cmt	(0X8012208,	"send_func",	0);
	create_insn	(x=0X8012208);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012210);
	create_insn	(x=0X8012220);
	op_hex		(x,	1);
	create_insn	(x=0X8012226);
	op_hex		(x,	1);
	create_insn	(x=0X8012266);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801226E);
	create_insn	(x=0X801228E);
	op_hex		(x,	1);
	create_insn	(0X801229C);
	create_insn	(0X80122A8);
	create_insn	(x=0X80122D2);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80122DA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80122E0);
	create_insn	(x=0X80122FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X8012302,	0X2);
	create_dword	(x=0X8012304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801230C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8012310);
	create_dword	(0X8012314);
	create_dword	(x=0X8012318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X801231C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8012320);
	create_insn	(x=0X8012324);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801233A);
	op_hex		(x,	1);
	create_insn	(0X8012348);
	create_insn	(0X8012356);
	create_insn	(x=0X801236C);
	op_hex		(x,	1);
	create_insn	(0X801237A);
	create_insn	(0X801237E);
	create_insn	(x=0X8012398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80123A4);
	op_hex		(x,	1);
	create_insn	(0X80123B8);
	create_insn	(x=0X80123DE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80123E4);
	create_insn	(0X80123E6);
	create_insn	(x=0X8012412);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012426);
	create_insn	(0X8012428);
	create_insn	(x=0X8012452);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012458);
	create_insn	(x=0X8012468);
	op_hex		(x,	1);
	create_insn	(x=0X801249E);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80124A8);
	create_insn	(x=0X80124B6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80124BC);
	create_insn	(x=0X80124EA);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80124F0);
	create_insn	(x=0X80124FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801250E);
	set_cmt	(0X8012510,	"payload",	0);
	create_insn	(x=0X8012514);
	op_hex		(x,	1);
	set_cmt	(0X801252E,	"spkt",	0);
	set_cmt	(0X8012530,	"payload_len",	0);
	set_cmt	(0X8012532,	"send_func",	0);
	create_insn	(x=0X8012532);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012538);
	create_insn	(0X801253A);
	create_insn	(x=0X8012544);
	op_hex		(x,	1);
	create_insn	(0X8012552);
	create_insn	(0X801255A);
	create_insn	(x=0X801255C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801258A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012590);
	create_insn	(0X8012592);
	create_insn	(0X80125B0);
	create_insn	(x=0X80125D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80125DA);
	create_insn	(0X80125DC);
	create_dword	(0X80125E0);
	create_dword	(x=0X80125E4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80125E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80125EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X80125F0,	0X801260A);
	set_name	(0X80125F0,	"aWm32xA4Fpga201");
	make_array	(0X801260A,	0X2);
	create_insn	(x=0X801260C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012612);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801261C);
	create_insn	(0X8012626);
	create_insn	(x=0X8012630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012636);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X801263C);
	create_insn	(x=0X8012644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8012650);
	op_plain_offset	(x,	1,	0X20002620);
	op_plain_offset	(x,	129,	0X20002620);
	create_insn	(0X8012676);
	make_array	(0X801267E,	0X2);
	create_dword	(x=0X8012680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8012684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X8012688);
	create_dword	(x=0X801268C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8012690);
	create_insn	(0X80126A8);
	create_insn	(0X80126AC);
	create_insn	(0X80126B8);
	create_insn	(0X80126D0);
	create_insn	(0X80126D4);
	create_insn	(x=0X80126E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80126E6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80126EC);
	create_insn	(x=0X80126EE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80126F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X8012702);
	create_insn	(0X8012712);
	create_insn	(0X8012716);
	create_insn	(0X801271A);
	create_insn	(0X8012748);
	create_insn	(0X801275A);
	create_insn	(0X8012766);
	create_insn	(0X8012796);
	create_insn	(0X801279A);
	create_insn	(x=0X80127BE);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80127C4);
	op_plain_offset	(x,	1,	0X1FFFF7E8);
	op_plain_offset	(x,	129,	0X1FFFF7E8);
	create_insn	(x=0X80127C8);
	op_plain_offset	(x,	1,	0X1FFFF7E8);
	op_plain_offset	(x,	129,	0X1FFFF7E8);
	make_array	(0X80127CE,	0X2);
	create_dword	(x=0X80127D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X80127D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X80127D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X80127EA);
	create_insn	(0X8012802);
	make_array	(0X8012806,	0X2);
	create_dword	(x=0X8012808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X801280C);
	create_dword	(0X8012810);
	create_insn	(0X8012814);
	create_insn	(0X8012838);
	create_insn	(0X801283E);
	create_insn	(0X8012848);
	create_insn	(0X801284C);
	create_insn	(0X801286C);
	create_insn	(0X8012872);
	create_insn	(0X8012896);
	create_insn	(0X801289A);
	create_insn	(0X80128A2);
	create_insn	(0X80128AA);
	create_insn	(x=0X80128B0);
	op_hex		(x,	1);
	create_insn	(x=0X80128E2);
	op_hex		(x,	1);
	create_insn	(0X8012900);
	create_insn	(0X8012934);
	create_insn	(0X8012998);
	create_insn	(x=0X80129A2);
	op_hex		(x,	1);
	create_insn	(0X80129C6);
	create_insn	(0X80129DC);
	create_insn	(x=0X8012A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012A1E);
	op_hex		(x,	1);
	create_insn	(0X8012A2A);
	create_insn	(0X8012A2C);
	create_insn	(0X8012A2E);
	create_insn	(0X8012A30);
	create_insn	(0X8012A3A);
	make_array	(0X8012A46,	0X2);
	create_insn	(x=0X8012A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8012A4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X8012A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(x=0X8012A54);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8012A58);
	create_insn	(x=0X8012A66);
	op_hex		(x,	1);
	create_insn	(x=0X8012A88);
	op_hex		(x,	1);
	create_insn	(0X8012AA2);
	create_insn	(0X8012AAE);
	create_insn	(0X8012AB0);
	create_dword	(0X8012AB8);
	create_insn	(0X8012ABC);
	create_insn	(x=0X8012ACA);
	op_hex		(x,	1);
	create_insn	(x=0X8012AD8);
	op_hex		(x,	1);
	create_insn	(0X8012AE4);
	create_insn	(x=0X8012AF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012AF6);
	op_hex		(x,	1);
	create_insn	(x=0X8012B00);
	op_stkvar	(x,	1);
	create_insn	(0X8012B0E);
	create_insn	(x=0X8012B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B22);
	op_stkvar	(x,	1);
	create_insn	(0X8012B3E);
	create_insn	(0X8012B5C);
	create_insn	(0X8012B72);
	create_insn	(0X8012B92);
	create_insn	(x=0X8012B96);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012B9A);
	op_hex		(x,	1);
	create_insn	(x=0X8012BB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012BF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C12);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C16);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C3E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C4E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C7A);
	op_hex		(x,	1);
	create_insn	(x=0X8012C80);
	op_stkvar	(x,	1);
	create_insn	(0X8012C8A);
	create_insn	(0X8012C8C);
	create_insn	(x=0X8012C90);
	op_hex		(x,	1);
	create_insn	(x=0X8012C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012C96);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CA2);
	op_hex		(x,	1);
	create_insn	(x=0X8012CAA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CAE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012CDC);
	op_stkvar	(x,	1);
	create_insn	(0X8012D16);
	create_insn	(0X8012D1E);
	create_insn	(x=0X8012D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D42);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D62);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012DB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012DC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012E08);
	op_hex		(x,	1);
	create_insn	(x=0X8012E0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012E10);
	op_hex		(x,	1);
	create_insn	(x=0X8012E16);
	op_stkvar	(x,	1);
	create_insn	(x=0X8012E1C);
	op_stkvar	(x,	1);
	create_dword	(0X8012E24);
	create_dword	(0X8012E28);
	create_dword	(0X8012E2C);
	create_dword	(0X8012E30);
	create_dword	(0X8012E34);
	create_dword	(0X8012E38);
	create_dword	(0X8012E3C);
	create_dword	(0X8012E40);
	create_dword	(0X8012E44);
	create_dword	(0X8012E48);
	create_dword	(0X8012E4C);
	create_dword	(0X8012E50);
	create_dword	(x=0X8012E54);
	op_plain_offset	(x,	0,	0X8012C10);
	op_plain_offset	(x,	128,	0X8012C10);
	create_dword	(x=0X8012E58);
	op_plain_offset	(x,	0,	0X8012CB8);
	op_plain_offset	(x,	128,	0X8012CB8);
	create_dword	(0X8012E5C);
	create_dword	(0X8012E60);
	create_dword	(0X8012E64);
	create_dword	(0X8012E68);
	create_insn	(0X8012E6C);
	create_insn	(x=0X8012E70);
	op_hex		(x,	1);
	create_insn	(0X8012F0A);
	make_array	(0X8012F52,	0X2);
	create_dword	(0X8012F54);
	create_dword	(x=0X8012F58);
	op_plain_offset	(x,	0,	0X8012EAC);
	op_plain_offset	(x,	128,	0X8012EAC);
	create_dword	(0X8012F5C);
	create_dword	(0X8012F60);
	create_dword	(0X8012F64);
	create_insn	(0X8012F68);
	create_insn	(x=0X8012F7C);
	op_hex		(x,	1);
	create_insn	(x=0X8012F98);
	op_hex		(x,	1);
	make_array	(0X8013012,	0X2);
	create_insn	(0X8013014);
	create_insn	(x=0X801301A);
	op_hex		(x,	1);
	create_insn	(0X8013040);
	create_insn	(x=0X801306A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801306C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013086);
	op_stkvar	(x,	1);
	create_insn	(0X80130CA);
	create_dword	(x=0X80130F4);
	op_plain_offset	(x,	0,	0X8013066);
	op_plain_offset	(x,	128,	0X8013066);
	create_dword	(0X80130F8);
	create_dword	(0X80130FC);
	create_insn	(0X8013100);
	make_array	(0X801310A,	0X2);
	create_dword	(0X801310C);
	create_insn	(0X8013110);
	create_insn	(x=0X8013118);
	op_hex		(x,	1);
	create_insn	(x=0X801311C);
	op_stkvar	(x,	1);
	create_insn	(0X801313E);
	create_insn	(0X801314C);
	create_insn	(0X8013176);
	create_insn	(x=0X801317A);
	op_hex		(x,	1);
	create_insn	(0X80131BC);
	create_insn	(0X80131EA);
	create_insn	(0X8013228);
	create_insn	(0X80132AC);
	create_insn	(x=0X80132E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X80132E6);
	op_hex		(x,	1);
	make_array	(0X80132EE,	0X2);
	create_dword	(0X80132F0);
	create_dword	(0X80132F4);
	create_dword	(0X80132F8);
	create_dword	(0X80132FC);
	create_dword	(0X8013300);
	create_dword	(0X8013304);
	create_dword	(0X8013308);
	create_dword	(0X801330C);
	create_dword	(0X8013310);
	create_dword	(0X8013314);
	create_dword	(0X8013318);
	create_dword	(0X801331C);
	create_dword	(0X8013320);
	create_dword	(x=0X8013324);
	op_plain_offset	(x,	0,	0X8013262);
	op_plain_offset	(x,	128,	0X8013262);
	create_dword	(x=0X8013328);
	op_plain_offset	(x,	0,	0X801327C);
	op_plain_offset	(x,	128,	0X801327C);
	create_dword	(x=0X801332C);
	op_plain_offset	(x,	0,	0X80132BE);
	op_plain_offset	(x,	128,	0X80132BE);
	create_dword	(x=0X8013330);
	op_plain_offset	(x,	0,	0X80132D6);
	op_plain_offset	(x,	128,	0X80132D6);
	create_insn	(0X8013334);
	create_insn	(x=0X801333E);
	op_hex		(x,	1);
	create_insn	(x=0X8013350);
	op_hex		(x,	1);
	create_insn	(0X8013370);
	create_insn	(0X8013396);
	create_insn	(0X801339E);
	create_insn	(x=0X80133BE);
	op_hex		(x,	1);
	create_insn	(x=0X80133C2);
	op_hex		(x,	1);
	create_insn	(0X80133CC);
	create_insn	(0X80133D2);
	create_insn	(x=0X80133EC);
	op_hex		(x,	1);
	create_insn	(0X801340E);
	create_insn	(0X8013416);
	create_insn	(0X801341E);
	create_insn	(0X8013426);
	create_insn	(x=0X801344A);
	op_hex		(x,	1);
	create_insn	(x=0X801345E);
	op_hex		(x,	1);
	create_insn	(0X801347E);
	make_array	(0X801348E,	0X2);
	create_dword	(0X8013490);
	create_dword	(0X8013494);
	create_dword	(0X8013498);
	create_dword	(x=0X801349C);
	op_plain_offset	(x,	0,	0X80133DA);
	op_plain_offset	(x,	128,	0X80133DA);
	create_dword	(0X80134A0);
	create_dword	(0X80134A4);
	create_dword	(0X80134A8);
	create_dword	(0X80134AC);
	create_dword	(0X80134B0);
	create_insn	(0X80134B4);
	create_insn	(x=0X80134B8);
	op_hex		(x,	1);
	create_insn	(x=0X80134E2);
	op_stkvar	(x,	1);
	create_insn	(0X80134EA);
	create_insn	(x=0X80134F2);
	op_stkvar	(x,	1);
	create_insn	(x=0X80134FA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013500);
	op_hex		(x,	1);
	create_insn	(x=0X8013506);
	op_stkvar	(x,	1);
	create_insn	(x=0X801351A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801351E);
	op_stkvar	(x,	1);
	create_insn	(0X801352C);
	create_insn	(x=0X8013534);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013538);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013544);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013552);
	op_hex		(x,	1);
	create_dword	(0X8013558);
	create_dword	(0X801355C);
	create_insn	(0X8013560);
	create_insn	(0X8013584);
	create_insn	(x=0X80135A6);
	op_hex		(x,	1);
	create_insn	(0X801366A);
	create_insn	(0X801367C);
	create_dword	(0X80136E0);
	create_dword	(0X80136E4);
	create_dword	(0X80136E8);
	create_dword	(x=0X80136EC);
	op_plain_offset	(x,	0,	0X801362E);
	op_plain_offset	(x,	128,	0X801362E);
	create_dword	(0X80136F0);
	create_dword	(0X80136F4);
	create_dword	(x=0X80136F8);
	op_plain_offset	(x,	0,	0X801365A);
	op_plain_offset	(x,	128,	0X801365A);
	create_dword	(0X80136FC);
	create_dword	(0X8013700);
	create_dword	(0X8013704);
	create_dword	(0X8013708);
	create_dword	(0X801370C);
	create_dword	(0X8013710);
	create_dword	(0X8013714);
	create_insn	(0X8013718);
	create_insn	(x=0X8013728);
	op_hex		(x,	1);
	create_insn	(x=0X801372C);
	op_hex		(x,	1);
	create_insn	(0X801377A);
	create_insn	(0X80137BA);
	create_insn	(0X80137F8);
	create_insn	(x=0X801380A);
	op_hex		(x,	1);
	create_insn	(0X8013844);
	create_insn	(0X801385C);
	create_insn	(0X8013892);
	create_insn	(x=0X8013898);
	op_hex		(x,	1);
	create_insn	(0X80138B0);
	create_insn	(0X80138C6);
	create_insn	(0X80138DC);
	create_insn	(0X80138EA);
	create_insn	(0X80138FC);
	create_insn	(0X8013906);
	create_insn	(0X801392C);
	create_insn	(x=0X801393C);
	op_hex		(x,	1);
	create_insn	(0X801397E);
	create_insn	(0X8013994);
	create_insn	(0X80139AC);
	create_insn	(0X80139AE);
	create_insn	(0X80139BA);
	create_insn	(x=0X80139C2);
	op_stkvar	(x,	1);
	create_insn	(0X80139E2);
	create_insn	(0X80139FA);
	create_insn	(0X8013A06);
	create_insn	(0X8013A10);
	create_insn	(0X8013A3C);
	create_insn	(0X8013A54);
	create_insn	(x=0X8013A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013A9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013AB6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013AB8);
	op_stkvar	(x,	1);
	create_insn	(0X8013ACC);
	create_insn	(0X8013ACE);
	create_insn	(x=0X8013ADE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013AF6);
	op_stkvar	(x,	1);
	create_insn	(0X8013B02);
	create_insn	(x=0X8013B22);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B28);
	op_hex		(x,	1);
	create_insn	(x=0X8013B2C);
	op_hex		(x,	1);
	create_insn	(x=0X8013B30);
	op_stkvar	(x,	1);
	create_dword	(0X8013B38);
	create_dword	(0X8013B3C);
	create_dword	(0X8013B40);
	create_dword	(0X8013B44);
	create_dword	(0X8013B48);
	create_dword	(0X8013B4C);
	create_dword	(x=0X8013B50);
	op_plain_offset	(x,	0,	0X80138A8);
	op_plain_offset	(x,	128,	0X80138A8);
	create_dword	(0X8013B54);
	create_dword	(0X8013B58);
	create_dword	(0X8013B5C);
	create_dword	(0X8013B60);
	create_dword	(0X8013B64);
	create_dword	(0X8013B68);
	create_dword	(0X8013B6C);
	create_dword	(0X8013B70);
	create_dword	(0X8013B74);
	create_dword	(0X8013B78);
	create_dword	(0X8013B7C);
	create_insn	(0X8013B80);
	create_insn	(x=0X8013B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013B9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BBE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BE2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BF6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013BFA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C32);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C4A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C52);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C56);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C7A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C86);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C8E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C96);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013C9E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CB2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CC2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CCA);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013CFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D02);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D06);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D0E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D16);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D1E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D2E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D5E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D66);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D6E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D7E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D96);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DA6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DCE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DDE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DE6);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013DF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E06);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E1A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E3A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013E78);
	op_stkvar	(x,	1);
	create_insn	(0X8013EA2);
	create_insn	(x=0X8013EA4);
	op_hex		(x,	1);
	create_insn	(x=0X8013EE2);
	op_hex		(x,	1);
	create_insn	(x=0X8013F1C);
	op_hex		(x,	1);
	create_insn	(x=0X8013F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F5A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F6A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013F74);
	op_stkvar	(x,	1);
	create_dword	(0X8013F84);
	create_dword	(x=0X8013F88);
	op_plain_offset	(x,	0,	0X8013BAE);
	op_plain_offset	(x,	128,	0X8013BAE);
	create_dword	(0X8013F8C);
	create_dword	(x=0X8013F90);
	op_plain_offset	(x,	0,	0X8013BF8);
	op_plain_offset	(x,	128,	0X8013BF8);
	create_dword	(x=0X8013F94);
	op_plain_offset	(x,	0,	0X8013C72);
	op_plain_offset	(x,	128,	0X8013C72);
	create_dword	(0X8013F98);
	create_dword	(0X8013F9C);
	create_dword	(0X8013FA0);
	create_dword	(0X8013FA4);
	create_dword	(0X8013FA8);
	create_dword	(x=0X8013FAC);
	op_plain_offset	(x,	0,	0X8013D8A);
	op_plain_offset	(x,	128,	0X8013D8A);
	create_dword	(x=0X8013FB0);
	op_plain_offset	(x,	0,	0X8013DB4);
	op_plain_offset	(x,	128,	0X8013DB4);
	create_dword	(0X8013FB4);
	create_dword	(0X8013FB8);
	create_dword	(0X8013FBC);
	create_dword	(0X8013FC0);
	create_dword	(0X8013FC4);
	create_dword	(0X8013FC8);
	create_dword	(0X8013FCC);
	create_dword	(0X8013FD0);
	create_dword	(x=0X8013FD4);
	op_plain_offset	(x,	0,	0X8013F10);
	op_plain_offset	(x,	128,	0X8013F10);
	create_dword	(0X8013FD8);
	create_dword	(0X8013FDC);
	create_dword	(0X8013FE0);
	create_dword	(0X8013FE4);
	create_insn	(0X8013FE8);
	create_insn	(x=0X8013FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013FF2);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X8013FFE);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014008);
	op_stkvar	(x,	1);
	create_insn	(x=0X801400A);
	op_stkvar	(x,	1);
	create_insn	(x=0X801401E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014054);
	op_stkvar	(x,	1);
	create_insn	(x=0X801405C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014062);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014064);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014076);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014086);
	op_stkvar	(x,	1);
	create_insn	(x=0X801408C);
	op_stkvar	(x,	1);
	create_insn	(x=0X801408E);
	op_stkvar	(x,	1);
	create_insn	(x=0X80140D4);
	op_stkvar	(x,	1);
	make_array	(0X80140E6,	0X2);
	create_dword	(0X80140E8);
	create_dword	(0X80140EC);
	create_dword	(x=0X80140F0);
	op_plain_offset	(x,	0,	0X8014038);
	op_plain_offset	(x,	128,	0X8014038);
	create_dword	(0X80140F4);
	create_insn	(0X80140F8);
	create_insn	(x=0X80140FC);
	op_hex		(x,	1);
	create_insn	(x=0X801410A);
	op_stkvar	(x,	1);
	create_insn	(0X801410E);
	create_insn	(x=0X8014128);
	op_stkvar	(x,	1);
	create_insn	(0X8014130);
	create_insn	(x=0X8014138);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014140);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014146);
	op_hex		(x,	1);
	create_insn	(x=0X8014158);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014166);
	op_hex		(x,	1);
	create_insn	(x=0X801416C);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014170);
	op_stkvar	(x,	1);
	create_insn	(x=0X801417E);
	op_stkvar	(x,	1);
	create_insn	(x=0X801418E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8014192);
	op_stkvar	(x,	1);
	make_array	(0X801419E,	0X2);
	create_dword	(0X80141A0);
	create_dword	(0X80141A4);
	create_insn	(0X80141A8);
	create_insn	(x=0X80141BE);
	op_hex		(x,	1);
	create_insn	(x=0X80141D6);
	op_hex		(x,	1);
	create_insn	(x=0X80141F4);
	op_hex		(x,	1);
	create_insn	(x=0X8014200);
	op_hex		(x,	1);
	create_insn	(x=0X801421E);
	op_hex		(x,	1);
	create_insn	(0X8014224);
	create_insn	(0X801423E);
	create_insn	(0X801424C);
	make_array	(0X8014256,	0X2);
	create_insn	(0X8014258);
	create_insn	(x=0X8014260);
	op_hex		(x,	1);
	create_insn	(x=0X80142A0);
	op_hex		(x,	1);
	create_insn	(0X80142EC);
	create_insn	(x=0X80142F0);
	op_hex		(x,	1);
	create_insn	(0X801430C);
	create_insn	(0X8014358);
	create_insn	(0X8014364);
	create_insn	(0X801437C);
	create_insn	(x=0X801438C);
	op_hex		(x,	1);
	create_insn	(0X8014394);
	create_dword	(0X80143A0);
	create_dword	(0X80143A4);
	create_insn	(0X80143A8);
	make_array	(0X80143B2,	0X2);
	create_dword	(0X80143B4);
	create_insn	(0X80143B8);
	create_insn	(0X80143D0);
	create_insn	(x=0X8014434);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X80144D8);
	op_hex		(x,	1);
	create_insn	(0X80144F0);
	create_insn	(0X8014504);
	create_insn	(0X8014516);
	create_insn	(0X8014568);
	create_insn	(0X801457A);
	create_insn	(x=0X8014584);
	op_hex		(x,	1);
	create_insn	(0X801458C);
	create_insn	(0X8014598);
	create_insn	(x=0X80145AA);
	op_hex		(x,	1);
	create_insn	(0X80145B2);
	create_insn	(0X80145C0);
	create_insn	(0X80145D4);
	create_insn	(x=0X80145DC);
	op_hex		(x,	1);
	create_insn	(0X80145E2);
	create_insn	(0X80145EA);
	create_dword	(0X80145F8);
	make_array	(0X80145F8,	0X20);
	create_dword	(0X8014678);
	create_dword	(0X801467C);
	create_insn	(0X8014680);
	create_insn	(0X80146B2);
	create_insn	(0X80146CE);
	create_insn	(x=0X80146D4);
	op_stkvar	(x,	1);
	create_insn	(0X80146DC);
	make_array	(0X80146DE,	0X2);
	create_insn	(0X80146E0);
	create_insn	(0X8014706);
	create_insn	(0X8014722);
	create_insn	(0X8014728);
	create_insn	(x=0X8014730);
	op_stkvar	(x,	1);
	create_insn	(0X8014738);
	create_insn	(x=0X801473A);
	op_hex		(x,	1);
	create_insn	(0X8014762);
	create_insn	(0X8014768);
	create_insn	(0X8014788);
	make_array	(0X801478E,	0X2);
	create_insn	(0X8014790);
	create_insn	(0X80147B0);
	create_insn	(0X80147C2);
	create_insn	(0X80147C6);
	create_insn	(0X80147DE);
	create_insn	(0X80147F2);
	create_insn	(0X8014808);
	create_insn	(x=0X8014834);
	op_hex		(x,	1);
	create_insn	(x=0X8014838);
	op_hex		(x,	1);
	create_insn	(x=0X801486A);
	op_hex		(x,	1);
	create_insn	(x=0X801486E);
	op_hex		(x,	1);
	create_insn	(0X801488C);
	create_insn	(x=0X80148B6);
	op_hex		(x,	1);
	create_insn	(0X80148D0);
	create_insn	(x=0X80148FC);
	op_hex		(x,	1);
	create_insn	(0X8014902);
	create_insn	(x=0X801491A);
	op_hex		(x,	1);
	create_insn	(0X8014920);
	create_insn	(0X801492C);
	create_insn	(0X8014930);
	create_insn	(0X8014942);
	create_dword	(0X8014954);
	create_dword	(0X8014958);
	create_insn	(0X801495C);
	create_insn	(x=0X8014960);
	op_hex		(x,	1);
	create_insn	(0X801499E);
	create_insn	(0X80149A4);
	create_insn	(x=0X80149B0);
	op_hex		(x,	1);
	set_cmt	(0X80149B4,	"switch 4 cases ",	0);
	create_insn	(x=0X80149C2);
	op_hex		(x,	1);
	set_cmt	(0X80149C8,	"switch jump",	0);
	create_insn	(0X80149C8);
	set_cmt	(0X80149CC,	"jump table for switch statement",	0);
	create_byte	(0X80149CC);
	set_name	(0X80149CC,	"jpt_80149C8");
	create_byte	(0X80149CD);
	create_byte	(0X80149CE);
	create_byte	(0X80149CF);
	set_cmt	(0X80149D0,	"jumptable 080149C8 cases 6,7",	1);
	create_insn	(0X80149D0);
	set_cmt	(0X80149DE,	"jumptable 080149C8 case 4",	1);
	create_insn	(0X80149DE);
	set_cmt	(0X80149E2,	"jumptable 080149C8 case 5",	1);
	create_insn	(x=0X80149F2);
	op_hex		(x,	1);
	create_insn	(0X80149F8);
	create_insn	(0X8014A04);
	create_insn	(0X8014A24);
	create_insn	(0X8014A36);
	create_insn	(0X8014A3A);
	create_insn	(0X8014A52);
	create_insn	(0X8014A66);
	create_insn	(0X8014A70);
	create_insn	(x=0X8014A76);
	op_hex		(x,	1);
	create_insn	(x=0X8014A7E);
	op_hex		(x,	1);
	make_array	(0X8014A86,	0X2);
	create_insn	(0X8014A88);
	create_insn	(x=0X8014AA4);
	op_hex		(x,	1);
	create_insn	(x=0X8014AB6);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X8014BA4);
	op_hex		(x,	1);
	make_array	(0X8014BBA,	0X2);
	create_dword	(0X8014BBC);
	make_array	(0X8014BBC,	0XC);
	create_insn	(0X8014BEC);
	create_insn	(0X8014C0E);
	create_insn	(0X8014C1E);
	create_insn	(x=0X8014C2E);
	op_hex		(x,	1);
	create_insn	(0X8014C36);
	create_dword	(0X8014C50);
	create_insn	(0X8014C54);
	create_insn	(x=0X8014C5C);
	op_hex		(x,	1);
	create_insn	(x=0X8014C6E);
	op_hex		(x,	1);
	create_insn	(x=0X8014CF4);
	op_hex		(x,	1);
	create_insn	(0X8014CFA);
	create_insn	(x=0X8014D5C);
	op_hex		(x,	1);
	create_insn	(0X8014D62);
	create_insn	(x=0X8014D6C);
	op_hex		(x,	1);
	create_insn	(x=0X8014DA4);
	op_hex		(x,	1);
	create_insn	(0X8014DAA);
	create_insn	(0X8014DB6);
	create_insn	(0X8014DC0);
	create_insn	(0X8014DC6);
	create_insn	(0X8014DD6);
	create_insn	(0X8014DDC);
	create_insn	(x=0X8014DEC);
	op_hex		(x,	1);
	create_insn	(0X8014DF6);
	create_insn	(0X8014E0C);
	create_insn	(x=0X8014E1C);
	op_hex		(x,	1);
	create_dword	(0X8014E24);
	create_insn	(0X8014E28);
	create_insn	(x=0X8014E3C);
	op_hex		(x,	1);
	create_insn	(x=0X8014E42);
	op_hex		(x,	1);
	create_insn	(x=0X8014E4A);
	op_hex		(x,	1);
	create_insn	(x=0X8014E50);
	op_hex		(x,	1);
	create_insn	(x=0X8014E66);
	op_stkvar	(x,	1);
	create_insn	(0X8014E70);
	make_array	(0X8014E7E,	0X2);
	create_insn	(0X8014E80);
	create_insn	(x=0X8014E86);
	op_hex		(x,	1);
	create_insn	(x=0X8014ED6);
	op_hex		(x,	1);
	create_insn	(x=0X8014EF0);
	op_hex		(x,	1);
	create_insn	(0X8014F04);
	create_insn	(x=0X8014F10);
	op_hex		(x,	1);
	create_insn	(0X8014F26);
	create_insn	(x=0X8014F32);
	op_hex		(x,	1);
	create_insn	(0X8014F38);
	create_dword	(0X8014F40);
	create_insn	(0X8014F44);
	make_array	(0X8014F4A,	0X2);
	create_dword	(0X8014F4C);
	create_insn	(0X8014F50);
	create_insn	(0X8014F68);
	create_insn	(x=0X8014F88);
	op_hex		(x,	1);
	create_insn	(x=0X8014F8C);
	op_hex		(x,	1);
	create_insn	(x=0X8014F90);
	op_hex		(x,	1);
	create_insn	(x=0X8014F94);
	op_hex		(x,	1);
	create_insn	(x=0X8014F98);
	op_hex		(x,	1);
	create_insn	(x=0X8014FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801500A);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015020);
	op_hex		(x,	1);
	create_insn	(x=0X801502A);
	op_hex		(x,	1);
	create_insn	(0X8015030);
	create_insn	(x=0X801503E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015040);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015042);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015044);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015046);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015048);
	op_stkvar	(x,	1);
	create_insn	(x=0X801504A);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801504C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X801504E);
	op_stkvar	(x,	1);
	create_insn	(x=0X8015050);
	op_stkvar	(x,	1);
	create_word	(0X8015056);
	create_insn	(0X8015058);
	create_word	(0X801506A);
	create_dword	(0X801506C);
	make_array	(0X801506C,	0X2);
	create_insn	(0X8015074);
	create_insn	(0X801508C);
	create_insn	(x=0X8015096);
	op_hex		(x,	1);
	create_insn	(x=0X80150A2);
	op_hex		(x,	1);
	create_insn	(x=0X80150AC);
	op_hex		(x,	1);
	create_insn	(0X80150B2);
	create_insn	(0X80150C0);
	create_insn	(x=0X80150C4);
	op_hex		(x,	1);
	create_insn	(0X80150CA);
	create_insn	(x=0X80150CE);
	op_hex		(x,	1);
	create_insn	(x=0X80150D6);
	op_hex		(x,	1);
	create_dword	(0X80150E8);
	create_insn	(0X80150EC);
	create_insn	(x=0X80150F6);
	op_hex		(x,	1);
	create_insn	(0X8015108);
	create_insn	(x=0X8015110);
	op_stkvar	(x,	1);
	create_insn	(0X8015118);
	make_array	(0X8015122,	0X2);
	create_insn	(0X8015124);
	create_insn	(x=0X8015130);
	op_hex		(x,	1);
	create_insn	(0X801513A);
	create_insn	(0X801514E);
	create_insn	(x=0X8015154);
	op_stkvar	(x,	1);
	create_insn	(0X801515C);
	make_array	(0X8015162,	0X2);
	create_insn	(x=0X8015164);
	op_hex		(x,	1);
	create_insn	(x=0X801518E);
	op_hex		(x,	1);
	create_insn	(0X8015194);
	create_insn	(x=0X80151B4);
	op_hex		(x,	1);
	make_array	(0X80151BA,	0X2);
	create_insn	(0X80151BC);
	create_insn	(0X80151D4);
	create_insn	(0X80151E6);
	create_insn	(0X80151EA);
	create_insn	(0X80151FA);
	create_insn	(0X801520E);
	create_insn	(0X8015224);
	create_insn	(x=0X8015244);
	op_hex		(x,	1);
	create_insn	(x=0X8015264);
	op_hex		(x,	1);
	create_insn	(x=0X8015292);
	op_hex		(x,	1);
	create_insn	(x=0X80152A0);
	op_hex		(x,	1);
	create_insn	(x=0X80152B2);
	op_hex		(x,	1);
	create_insn	(0X80152B8);
	create_insn	(0X80152CC);
	create_insn	(x=0X80152D6);
	op_hex		(x,	1);
	create_insn	(x=0X80152E6);
	op_hex		(x,	1);
	create_insn	(0X80152EC);
	create_insn	(0X80152FC);
	create_insn	(0X8015300);
	create_insn	(0X8015312);
	create_insn	(0X8015326);
	create_insn	(x=0X801532A);
	op_hex		(x,	1);
	create_insn	(0X8015364);
	create_insn	(0X801536A);
	create_insn	(x=0X8015376);
	op_hex		(x,	1);
	set_cmt	(0X801537A,	"switch 4 cases ",	0);
	create_insn	(x=0X8015388);
	op_hex		(x,	1);
	set_cmt	(0X801538E,	"switch jump",	0);
	create_insn	(0X801538E);
	set_cmt	(0X8015392,	"jump table for switch statement",	0);
	create_byte	(0X8015392);
	set_name	(0X8015392,	"jpt_801538E");
	create_byte	(0X8015393);
	create_byte	(0X8015394);
	create_byte	(0X8015395);
	set_cmt	(0X8015396,	"jumptable 0801538E cases 6,7",	1);
	create_insn	(0X8015396);
	set_cmt	(0X80153A0,	"jumptable 0801538E case 4",	1);
	create_insn	(0X80153A0);
	set_cmt	(0X80153A2,	"jumptable 0801538E case 5",	1);
	create_insn	(x=0X80153AC);
	op_hex		(x,	1);
	create_insn	(0X80153B2);
	create_insn	(0X80153BC);
	create_insn	(0X80153D4);
	create_insn	(0X80153E6);
	create_insn	(0X80153EA);
	create_insn	(0X80153FA);
	create_insn	(0X801540E);
	create_insn	(x=0X801541E);
	op_hex		(x,	1);
	create_insn	(x=0X801542A);
	op_hex		(x,	1);
	make_array	(0X8015432,	0X2);
	create_insn	(0X8015434);
	create_insn	(x=0X801543A);
	op_hex		(x,	1);
	create_insn	(x=0X8015446);
	op_hex		(x,	1);
	create_insn	(x=0X801547E);
	op_hex		(x,	1);
	create_insn	(x=0X8015494);
	op_hex		(x,	1);
	create_insn	(0X801549E);
	create_insn	(x=0X80154AE);
	op_hex		(x,	1);
	create_insn	(x=0X80154C0);
	op_hex		(x,	1);
	create_insn	(0X80154C6);
	create_insn	(0X80154F2);
	create_word	(0X80154FE);
	create_insn	(x=0X801551E);
	op_hex		(x,	1);
	create_insn	(x=0X8015538);
	op_hex		(x,	1);
	create_insn	(x=0X8015548);
	op_hex		(x,	1);
	create_insn	(x=0X8015554);
	op_hex		(x,	1);
	create_insn	(x=0X801555A);
	op_hex		(x,	1);
	create_insn	(x=0X801555E);
	op_hex		(x,	1);
	create_insn	(x=0X801556C);
	op_hex		(x,	1);
	create_insn	(x=0X8015570);
	op_hex		(x,	1);
	create_insn	(x=0X8015578);
	op_hex		(x,	1);
	create_insn	(0X8015582);
	create_insn	(x=0X80155AC);
	op_hex		(x,	1);
	create_insn	(x=0X80155B2);
	op_hex		(x,	1);
	create_insn	(x=0X80155B6);
	op_hex		(x,	1);
	create_insn	(x=0X80155C0);
	op_hex		(x,	1);
	create_insn	(0X80155CA);
	create_insn	(x=0X80155D4);
	op_hex		(x,	1);
	create_insn	(0X80155DE);
	create_insn	(x=0X80155E8);
	op_hex		(x,	1);
	create_insn	(x=0X8015602);
	op_hex		(x,	1);
	create_insn	(x=0X8015608);
	op_hex		(x,	1);
	create_insn	(x=0X801560C);
	op_hex		(x,	1);
	create_insn	(x=0X8015612);
	op_hex		(x,	1);
	create_insn	(0X8015618);
	create_insn	(x=0X8015620);
	op_hex		(x,	1);
	create_insn	(x=0X801562A);
	op_hex		(x,	1);
	create_insn	(x=0X8015630);
	op_hex		(x,	1);
	create_insn	(0X801563E);
	create_insn	(x=0X8015646);
	op_hex		(x,	1);
	create_insn	(0X8015654);
	create_dword	(x=0X801A0D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X801A698);
	make_array	(0X801A69C,	0X4);
	create_dword	(0X1FFFF7E8);
	create_dword	(0X1FFFF7EC);
	create_dword	(0X1FFFF7F0);
	make_array	(0X1FFFF7F4,	0XC);
	create_word	(0X1FFFF800);
	create_word	(0X1FFFF802);
	make_array	(0X1FFFF804,	0X4);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_word	(0X1FFFF808);
	create_word	(0X1FFFF80A);
	create_word	(0X1FFFF80C);
	create_word	(0X1FFFF80E);
	create_byte	(0X20000014);
	create_byte	(0X20000015);
	create_byte	(0X20000016);
	create_byte	(0X20000090);
	make_array	(0X20000091,	0X3);
	create_dword	(0X20000094);
	create_dword	(0X20000098);
	create_byte	(0X2000009C);
	make_array	(0X2000009D,	0X3);
	create_dword	(0X200000A0);
	create_dword	(0X200000A4);
	create_dword	(0X200000A8);
	create_dword	(0X200000AC);
	create_dword	(0X200000B0);
	create_dword	(0X200000B4);
	create_dword	(0X200000B8);
	create_dword	(0X200000BC);
	create_dword	(0X200000C0);
	create_byte	(0X200000C4);
	create_byte	(0X200000C5);
	create_byte	(0X200000C6);
	create_byte	(0X200000C7);
	create_byte	(0X200000C8);
	make_array	(0X200000C9,	0X3);
	create_byte	(0X200000CC);
	make_array	(0X200000CD,	0X3);
	create_dword	(0X200000D0);
	create_byte	(0X200000D4);
	make_array	(0X200000D5,	0X3);
	create_dword	(0X200000D8);
	create_byte	(0X200000DC);
	create_byte	(0X200000DD);
	create_byte	(0X200000DE);
	create_dword	(0X200000E0);
	create_byte	(0X200000E4);
	make_array	(0X200000E5,	0X3);
	create_dword	(0X200000E8);
	create_dword	(0X200000EC);
	create_dword	(0X200000F0);
	create_dword	(0X200000F4);
	create_dword	(0X200000F8);
	create_dword	(0X200000FC);
	create_byte	(0X20000100);
	make_array	(0X20000101,	0X3);
	create_dword	(0X20000104);
	create_byte	(0X20000118);
	create_byte	(0X20000119);
	create_byte	(0X2000011A);
	create_byte	(0X2000011B);
	create_byte	(0X2000011C);
	create_byte	(0X2000011D);
	create_byte	(0X2000011E);
	create_byte	(0X2000011F);
	create_byte	(0X20000120);
	create_word	(0X20000122);
	create_dword	(0X20000124);
	create_dword	(0X20000128);
	create_dword	(0X2000012C);
	create_dword	(0X20000130);
	create_dword	(0X20000134);
	create_word	(0X20000138);
	make_array	(0X2000013A,	0X2);
	create_dword	(0X2000013C);
	create_word	(0X20000140);
	create_byte	(0X20000142);
	create_byte	(0X20000143);
	create_byte	(0X20000158);
	create_byte	(0X20000159);
	create_byte	(0X2000015A);
	create_byte	(0X2000015B);
	create_byte	(0X2000015C);
	create_byte	(0X2000015D);
	create_byte	(0X2000015E);
	create_byte	(0X2000015F);
	create_byte	(0X20000160);
	create_byte	(0X20000161);
	create_byte	(0X20000162);
	create_byte	(0X20000163);
	create_byte	(0X20000164);
	create_byte	(0X20000165);
	create_byte	(0X20000166);
	create_byte	(0X20000167);
	set_name	(0X20000167,	"active_transciever_attenuation");
	create_byte	(0X20000168);
	set_name	(0X20000168,	"transceiver_pwr_mode_unk016C");
	create_byte	(0X20000169);
	create_byte	(0X2000016A);
	create_byte	(0X2000016B);
	create_word	(0X2000016C);
	create_word	(0X2000016E);
	create_word	(0X20000170);
	make_array	(0X20000172,	0X2);
	create_dword	(0X20000174);
	create_dword	(0X20000178);
	create_byte	(0X2000017C);
	create_byte	(0X2000017D);
	create_byte	(0X2000017E);
	create_byte	(0X2000017F);
	create_dword	(0X20000180);
	create_dword	(0X20000184);
	create_dword	(0X20000188);
	create_dword	(0X2000018C);
	create_dword	(0X20000190);
	create_byte	(0X20000194);
	create_byte	(0X20000195);
	create_byte	(0X20000196);
	create_byte	(0X20000197);
	create_byte	(0X20000198);
	make_array	(0X20000199,	0X3);
	create_byte	(0X2000019C);
	make_array	(0X2000019D,	0X3);
	create_dword	(0X200001A0);
	create_dword	(0X200001A4);
	create_dword	(0X200001A8);
	create_word	(0X200001AC);
	create_word	(0X200001AE);
	create_word	(0X200001B0);
	create_word	(0X200001B2);
	create_word	(0X200001B4);
	create_word	(0X200001B6);
	create_word	(0X200001B8);
	create_word	(0X200001BA);
	create_word	(0X200001BC);
	make_array	(0X200001BE,	0X2);
	create_dword	(0X200001C0);
	create_dword	(0X200001C4);
	create_dword	(0X200001C8);
	create_dword	(0X200001CC);
	create_dword	(0X20001638);
	create_word	(0X2000173C);
	create_word	(0X2000173E);
	create_word	(0X20001740);
	create_word	(0X20001742);
	create_word	(0X20001744);
	create_word	(0X20001746);
	create_word	(0X20001748);
	create_word	(0X2000174A);
	create_word	(0X2000175D);
	create_word	(0X20001761);
	create_word	(0X20001765);
	create_byte	(0X20001768);
	create_byte	(0X20001769);
	create_byte	(0X2000176A);
	create_dword	(0X2000176D);
	create_dword	(0X20001771);
	create_word	(0X20001775);
	create_byte	(0X20001798);
	create_dword	(0X2000199A);
	create_dword	(0X2000199E);
	create_byte	(0X200019A2);
	create_byte	(0X200019A4);
	create_byte	(0X200019A5);
	create_byte	(0X200019A6);
	create_byte	(0X200019A7);
	create_byte	(0X200019A8);
	create_byte	(0X200019A9);
	create_byte	(0X200019AA);
	create_byte	(0X200019AB);
	create_byte	(0X200019AC);
	create_byte	(0X200019AD);
	create_byte	(0X200019AE);
	create_byte	(0X200019AF);
	create_byte	(0X200019B0);
	create_byte	(0X200019B1);
	create_byte	(0X200019B2);
	create_byte	(0X200019B3);
	create_byte	(0X200019B4);
	create_byte	(0X200019B5);
	create_byte	(0X200019B6);
	create_byte	(0X200019B7);
	create_dword	(0X20001AB4);
	create_byte	(0X20001AB8);
	create_dword	(0X20001AB9);
	make_array	(0X20001ABD,	0X3);
	create_dword	(0X20001AC0);
	set_name	(0X20001AC0,	"transceiver_flags_1A28");
	create_dword	(0X20001AC4);
	create_byte	(0X20001B20);
	make_array	(0X20001B21,	0X3);
	create_dword	(0X20001B24);
	create_dword	(0X20001B2C);
	create_dword	(0X20001B30);
	create_dword	(0X20001B34);
	create_dword	(0X20001B38);
	create_dword	(0X20001B3C);
	create_byte	(0X20001B40);
	create_byte	(0X20001B41);
	make_array	(0X20001B42,	0X2);
	create_dword	(0X20001B44);
	create_dword	(0X20001B48);
	create_dword	(0X20001B4C);
	create_dword	(0X20001B50);
	create_byte	(0X20001B54);
	create_byte	(0X20001B55);
	create_byte	(0X20001B56);
	create_byte	(0X20001BBB);
	create_byte	(0X20001BBD);
	create_byte	(0X20001BBE);
	create_byte	(0X20001BBF);
	create_byte	(0X20001BC0);
	create_byte	(0X20001BC1);
	create_byte	(0X20001BC2);
	create_byte	(0X20001BC3);
	create_byte	(0X20001BC4);
	create_byte	(0X20001BC5);
	create_byte	(0X20001BC6);
	create_dword	(0X20001BC8);
	create_byte	(0X20001BCC);
	create_byte	(0X20001BCD);
	set_name	(0X20001BCD,	"tcx_control_attenuation_by_packet");
	create_byte	(0X20001BCE);
	set_name	(0X20001BCE,	"rel_tcx_control_attenuation_by_unkn1");
	create_byte	(0X20001BCF);
	set_name	(0X20001BCF,	"transciever_attenuation");
	create_byte	(0X20001BD0);
	make_array	(0X20001BD1,	0X3);
	create_dword	(0X20001BD4);
	create_dword	(0X20001BD8);
	create_byte	(0X20001BDC);
	create_word	(0X20001BDE);
	create_word	(0X20001BE0);
	make_array	(0X20001BE2,	0X2);
	create_byte	(0X20001CA4);
	create_dword	(0X20001CC7);
	create_byte	(0X20001CCB);
	create_byte	(0X20001CD2);
	create_byte	(0X20001CD4);
	make_array	(0X20001CD5,	0X3);
	create_byte	(0X20001CD8);
	make_array	(0X20001CD9,	0X7);
	create_byte	(0X20001CE0);
	create_byte	(0X20001CE3);
	create_byte	(0X20001CE4);
	create_byte	(0X20001CE5);
	create_byte	(0X20001CE6);
	create_byte	(0X20001CE7);
	create_dword	(0X20001CE8);
	create_word	(0X20001CF2);
	make_array	(0X20001CF4,	0X4);
	create_dword	(0X20001DF8);
	create_word	(0X20001E02);
	make_array	(0X20001E04,	0X4);
	create_word	(0X20001F08);
	create_dword	(0X20001F1A);
	create_dword	(0X20001F1E);
	create_dword	(0X20001F22);
	create_dword	(0X20001F26);
	create_word	(0X20001F2A);
	create_word	(0X20001F2C);
	create_byte	(0X20001F2E);
	create_dword	(0X20002368);
	create_word	(0X20002372);
	create_dword	(0X20002570);
	create_word	(0X2000257A);
	create_dword	(0X200025C0);
	create_dword	(0X200025C4);
	create_dword	(0X200025C8);
	create_dword	(0X200025CC);
	create_word	(0X200025DC);
	create_byte	(0X200025E4);
	create_dword	(0X200025EC);
	create_dword	(0X200025F0);
	create_dword	(0X200025F4);
	create_dword	(0X200025F8);
	make_array	(0X200025FC,	0X4);
	create_byte	(0X20002600);
	create_dword	(0X20002608);
	create_dword	(0X2000260C);
	create_word	(0X2000261D);
	create_dword	(0X20002620);
	create_word	(0X2000262A);
	make_array	(0X2000262C,	0X4);
	create_dword	(0X2000284C);
	create_dword	(0X20002850);
	create_dword	(0X20004FE0);
	create_word	(0X40000000);
	create_word	(0X40000024);
	make_array	(0X40000026,	0X3DA);
	create_word	(0X40000400);
	create_word	(0X40000424);
	create_dword	(0X40003000);
	create_dword	(0X40003004);
	create_dword	(0X40003008);
	create_dword	(0X4000300C);
	make_array	(0X40003010,	0X7F0);
	create_word	(0X40003808);
	make_array	(0X4000380A,	0X2);
	create_word	(0X4000380C);
	make_array	(0X4000380E,	0X3F2);
	create_word	(0X40004400);
	make_array	(0X40004402,	0X2);
	create_word	(0X40004404);
	make_array	(0X40004406,	0X3FA);
	create_word	(0X40004800);
	make_array	(0X40004802,	0X2);
	create_word	(0X40004804);
	make_array	(0X40004806,	0X3FA);
	create_dword	(0X40006600);
	create_dword	(0X40006604);
	create_dword	(0X4000660C);
	create_dword	(0X40006614);
	create_dword	(0X4000661C);
	make_array	(0X40006620,	0XE0);
	create_dword	(0X40010000);
	create_dword	(0X40010004);
	create_dword	(0X4001001C);
	make_array	(0X40010020,	0X3E0);
	create_dword	(0X40010400);
	create_dword	(0X40010404);
	create_dword	(0X40010408);
	create_dword	(0X4001040C);
	create_dword	(0X40010410);
	create_dword	(0X40010414);
	make_array	(0X40010418,	0X3E8);
	create_dword	(0X40010808);
	create_dword	(0X4001080C);
	make_array	(0X40010810,	0X3F0);
	create_dword	(0X40010C0C);
	make_array	(0X40010C10,	0X3F0);
	create_dword	(0X40011008);
	make_array	(0X4001100C,	0X3F4);
	create_dword	(0X40012408);
	create_dword	(0X4001244C);
	make_array	(0X40012450,	0X3B0);
	create_word	(0X40013800);
	make_array	(0X40013802,	0X2);
	create_word	(0X40013804);
	make_array	(0X40013806,	0X3FA);
	create_dword	(0X40020000);
	create_dword	(0X40020004);
	create_dword	(0X4002001C);
	create_dword	(0X40020044);
	create_dword	(0X40020080);
	make_array	(0X40020084,	0X37C);
	create_dword	(0X40020400);
	create_dword	(0X40020404);
	create_dword	(0X40021000);
	create_dword	(0X40021004);
	create_dword	(0X40021008);
	create_dword	(0X4002100C);
	create_dword	(0X40021010);
	create_dword	(0X40021014);
	create_dword	(0X40021018);
	create_dword	(0X4002101C);
	create_dword	(0X40021020);
	create_dword	(0X40021024);
	make_array	(0X40021028,	0XFD8);
	create_dword	(0X40022000);
	create_dword	(0X40022004);
	create_dword	(0X40022008);
	create_dword	(0X4002200C);
	create_dword	(0X40022010);
	create_dword	(0X40022014);
	create_dword	(0X4002201C);
	create_dword	(0X40022020);
	make_array	(0X40022024,	0X1DC);
	create_dword	(0X4220001C);
	create_dword	(0X422000DC);
	make_array	(0X422000E0,	0X20);
	create_dword	(0X42420000);
	create_dword	(0X4242004C);
	make_array	(0X42420050,	0X10);
	create_dword	(0X42420060);
	create_dword	(0X424200D8);
	create_dword	(0X4242043C);
	create_dword	(0X42420440);
	make_array	(0X42420444,	0X3C);
	create_dword	(0X42420480);
	make_array	(0X42420484,	0X7C);
}

static Functions_0(void) {

	add_func    (0X80081A0,0X80081A8);
	set_func_flags(0X80081A0,0x400);
	set_frame_size(0X80081A0, 0X18, 0, 0);
	add_func    (0X80081A8,0X80081AC);
	set_func_flags(0X80081A8,0x400);
	set_frame_size(0X80081A8, 0X8, 0, 0);
	add_func    (0X80081BE,0X80081CA);
	set_func_flags(0X80081BE,0x401);
	set_frame_size(0X80081BE, 0X8, 0, 0);
	add_func    (0X80081CC,0X80081FC);
	set_func_flags(0X80081CC,0x400);
	add_func    (0X800821C,0X8008226);
	set_func_flags(0X800821C,0x400);
	add_func    (0X800824A,0X80082A4);
	set_func_flags(0X800824A,0x400);
	set_frame_size(0X800824A, 0X10, 0, 0);
	add_func    (0X80082C6,0X80082DE);
	set_func_flags(0X80082C6,0x400);
	add_func    (0X80082F0,0X8008328);
	set_func_flags(0X80082F0,0x400);
	set_frame_size(0X80082F0, 0X8, 0, 0);
	add_func    (0X8008328,0X8008366);
	set_func_flags(0X8008328,0x400);
	set_frame_size(0X8008328, 0X8, 0, 0);
	add_func    (0X8008378,0X800838C);
	set_func_flags(0X8008378,0x400);
	add_func    (0X80083B2,0X80083BC);
	set_func_flags(0X80083B2,0x400);
	add_func    (0X80083BC,0X80083CA);
	set_func_flags(0X80083BC,0x400);
	add_func    (0X80083CA,0X80083D4);
	set_func_flags(0X80083CA,0x400);
	add_func    (0X80083D4,0X80083E2);
	set_func_flags(0X80083D4,0x400);
	add_func    (0X80083E2,0X80083F6);
	set_func_flags(0X80083E2,0x400);
	add_func    (0X8008428,0X800849C);
	set_func_flags(0X8008428,0x400);
	set_frame_size(0X8008428, 0X10, 0, 0);
	add_func    (0X80084B0,0X80084B6);
	set_func_flags(0X80084B0,0x400);
	add_func    (0X80085B8,0X80085D0);
	set_func_flags(0X80085B8,0x400);
	add_func    (0X80085D0,0X80085DE);
	set_func_flags(0X80085D0,0x400);
	add_func    (0X8008620,0X8008646);
	set_func_flags(0X8008620,0x400);
	set_frame_size(0X8008620, 0X8, 0, 0);
	add_func    (0X8008646,0X800872E);
	set_func_flags(0X8008646,0x400);
	set_frame_size(0X8008646, 0X8, 0, 0);
	add_func    (0X800872E,0X80087EC);
	set_func_flags(0X800872E,0x400);
	set_frame_size(0X800872E, 0X14, 0, 0);
	add_func    (0X80087EC,0X800880C);
	set_func_flags(0X80087EC,0x400);
	add_func    (0X80088A0,0X8008938);
	set_func_flags(0X80088A0,0x400);
	set_frame_size(0X80088A0, 0XC, 0, 0);
	add_func    (0X80089B4,0X8008A50);
	set_func_flags(0X80089B4,0x400);
	set_frame_size(0X80089B4, 0X8, 0, 0);
	add_func    (0X8008B68,0X8008B78);
	set_func_flags(0X8008B68,0x400);
	add_func    (0X8008D04,0X8008DDE);
	set_func_flags(0X8008D04,0x400);
	add_func    (0X8008DDE,0X8008E18);
	set_func_flags(0X8008DDE,0x400);
	set_frame_size(0X8008DDE, 0XC, 0, 0);
	add_func    (0X8008E32,0X8008E48);
	set_func_flags(0X8008E32,0x400);
	add_func    (0X8008E48,0X8008E58);
	set_func_flags(0X8008E48,0x400);
	add_func    (0X8008E58,0X8008E5C);
	set_func_flags(0X8008E58,0x400);
	add_func    (0X8008E5C,0X8008E62);
	set_func_flags(0X8008E5C,0x400);
	add_func    (0X8008E7E,0X8008E92);
	set_func_flags(0X8008E7E,0x400);
	add_func    (0X8008EE8,0X8008F54);
	set_func_flags(0X8008EE8,0x400);
	set_frame_size(0X8008EE8, 0XC, 0, 0);
	add_func    (0X8008FA4,0X8008FAC);
	set_func_flags(0X8008FA4,0x400);
	add_func    (0X8008FE6,0X8008FF2);
	set_func_flags(0X8008FE6,0x400);
	add_func    (0X8008FFE,0X800900A);
	set_func_flags(0X8008FFE,0x400);
	add_func    (0X8009016,0X8009038);
	set_func_flags(0X8009016,0x400);
	add_func    (0X8009038,0X800905A);
	set_func_flags(0X8009038,0x400);
	set_frame_size(0X8009038, 0X4, 0, 0);
	add_func    (0X800905A,0X8009092);
	set_func_flags(0X800905A,0x400);
	set_frame_size(0X800905A, 0X10, 0, 0);
	add_func    (0X80090C6,0X80090E8);
	set_func_flags(0X80090C6,0x400);
	set_frame_size(0X80090C6, 0X4, 0, 0);
	add_func    (0X800911C,0X800912A);
	set_func_flags(0X800911C,0x400);
	add_func    (0X80091DE,0X800920E);
	set_func_flags(0X80091DE,0x400);
	set_frame_size(0X80091DE, 0X14, 0, 0);
	add_func    (0X80094E2,0X800957A);
	set_func_flags(0X80094E2,0x400);
	set_frame_size(0X80094E2, 0X14, 0, 0);
	add_func    (0X800958A,0X8009598);
	set_func_flags(0X800958A,0x400);
	add_func    (0X80095B2,0X80095B6);
	set_func_flags(0X80095B2,0x400);
	add_func    (0X80095B6,0X80095BA);
	set_func_flags(0X80095B6,0x400);
	add_func    (0X80095F4,0X8009646);
	set_func_flags(0X80095F4,0x400);
	set_frame_size(0X80095F4, 0X14, 0, 0);
	add_func    (0X8009646,0X8009668);
	set_func_flags(0X8009646,0x400);
	set_frame_size(0X8009646, 0X8, 0, 0);
	add_func    (0X8009694,0X800969A);
	set_func_flags(0X8009694,0x400);
	add_func    (0X800969A,0X80096A0);
	set_func_flags(0X800969A,0x400);
	add_func    (0X80096A0,0X80096A6);
	set_func_flags(0X80096A0,0x400);
	add_func    (0X80096A6,0X80096B0);
	set_func_flags(0X80096A6,0x400);
	add_func    (0X80096B0,0X80096BA);
	set_func_flags(0X80096B0,0x400);
	add_func    (0X8009732,0X800975C);
	set_func_flags(0X8009732,0x400);
	add_func    (0X8009812,0X8009820);
	set_func_flags(0X8009812,0x400);
	add_func    (0X8009854,0X80098E0);
	set_func_flags(0X8009854,0x400);
	set_frame_size(0X8009854, 0XC, 0, 0);
	add_func    (0X80098E0,0X80098F2);
	set_func_flags(0X80098E0,0x400);
	add_func    (0X80098F2,0X8009904);
	set_func_flags(0X80098F2,0x400);
	add_func    (0X8009904,0X8009916);
	set_func_flags(0X8009904,0x400);
	add_func    (0X8009916,0X8009928);
	set_func_flags(0X8009916,0x400);
	add_func    (0X8009928,0X800993A);
	set_func_flags(0X8009928,0x400);
	add_func    (0X80099E0,0X8009A18);
	set_func_flags(0X80099E0,0x400);
	set_frame_size(0X80099E0, 0XC, 0, 0);
	add_func    (0X8009AD8,0X8009AEC);
	set_func_flags(0X8009AD8,0x400);
	add_func    (0X8009D3C,0X8009DAE);
	set_func_flags(0X8009D3C,0x400);
	set_frame_size(0X8009D3C, 0XC, 0, 0);
	add_func    (0X8009DAE,0X8009E18);
	set_func_flags(0X8009DAE,0x400);
	set_frame_size(0X8009DAE, 0XC, 0, 0);
	add_func    (0X8009E18,0X8009E90);
	set_func_flags(0X8009E18,0x400);
	set_frame_size(0X8009E18, 0X10, 0, 0);
	add_func    (0X8009E90,0X8009F04);
	set_func_flags(0X8009E90,0x400);
	set_frame_size(0X8009E90, 0X10, 0, 0);
	add_func    (0X8009F04,0X8009F5E);
	set_func_flags(0X8009F04,0x400);
	set_frame_size(0X8009F04, 0X10, 0, 0);
	add_func    (0X8009F5E,0X8009F76);
	set_func_flags(0X8009F5E,0x400);
	add_func    (0X8009F76,0X8009F86);
	set_func_flags(0X8009F76,0x400);
	add_func    (0X8009F86,0X8009F9E);
	set_func_flags(0X8009F86,0x400);
	add_func    (0X8009F9E,0X800A044);
	set_func_flags(0X8009F9E,0x400);
	set_frame_size(0X8009F9E, 0X14, 0, 0);
	add_func    (0X800A044,0X800A054);
	set_func_flags(0X800A044,0x400);
	add_func    (0X800A054,0X800A0AC);
	set_func_flags(0X800A054,0x400);
	set_frame_size(0X800A054, 0X10, 0, 0);
	add_func    (0X800A28C,0X800A2A0);
	set_func_flags(0X800A28C,0x400);
	add_func    (0X800A2B6,0X800A2C6);
	set_func_flags(0X800A2B6,0x400);
	add_func    (0X800A2EC,0X800A2F8);
	set_func_flags(0X800A2EC,0x400);
	add_func    (0X800A338,0X800A350);
	set_func_flags(0X800A338,0x400);
	set_frame_size(0X800A338, 0XC, 0, 0);
	add_func    (0X800A686,0X800A68A);
	set_func_flags(0X800A686,0x400);
	add_func    (0X800A6DE,0X800A6F6);
	set_func_flags(0X800A6DE,0x400);
	add_func    (0X800A6F6,0X800A6FC);
	set_func_flags(0X800A6F6,0x400);
	add_func    (0X800A6FC,0X800A75C);
	set_func_flags(0X800A6FC,0x400);
	set_frame_size(0X800A6FC, 0X8, 0, 0);
	add_func    (0X800A75C,0X800A80C);
	set_func_flags(0X800A75C,0x400);
	set_frame_size(0X800A75C, 0X20, 0, 0);
	add_func    (0X800A84C,0X800A860);
	set_func_flags(0X800A84C,0x400);
	add_func    (0X800A860,0X800A890);
	set_func_flags(0X800A860,0x400);
	set_frame_size(0X800A860, 0X8, 0, 0);
	add_func    (0X800A890,0X800A8A0);
	set_func_flags(0X800A890,0x400);
	add_func    (0X800A9CE,0X800AA0C);
	set_func_flags(0X800A9CE,0x400);
	set_frame_size(0X800A9CE, 0X10, 0, 0);
	add_func    (0X800AA2C,0X800AA34);
	set_func_flags(0X800AA2C,0x400);
	add_func    (0X800AA34,0X800AA50);
	set_func_flags(0X800AA34,0x400);
	set_frame_size(0X800AA34, 0X8, 0, 0);
	add_func    (0X800ACA0,0X800B0A4);
	set_func_flags(0X800ACA0,0x400);
	set_frame_size(0X800ACA0, 0X68, 0, 0);
	add_func    (0X800B0A4,0X800B20E);
	set_func_flags(0X800B0A4,0x400);
	set_frame_size(0X800B0A4, 0X20, 0, 0);
	add_func    (0X800B31C,0X800B3EC);
	set_func_flags(0X800B31C,0x400);
	set_frame_size(0X800B31C, 0X28, 0, 0);
	add_func    (0X800B3EC,0X800B468);
	set_func_flags(0X800B3EC,0x400);
	set_frame_size(0X800B3EC, 0X20, 0, 0);
	add_func    (0X800B468,0X800B4E6);
	set_func_flags(0X800B468,0x400);
	set_frame_size(0X800B468, 0X28, 0, 0);
	add_func    (0X800B4E6,0X800B4EE);
	set_func_flags(0X800B4E6,0x400);
	add_func    (0X800B500,0X800B536);
	set_func_flags(0X800B500,0x400);
	add_func    (0X800B536,0X800B5E8);
	set_func_flags(0X800B536,0x400);
	set_frame_size(0X800B536, 0X28, 0, 0);
	add_func    (0X800B5E8,0X800B5F6);
	set_func_flags(0X800B5E8,0x400);
	add_func    (0X800B5F6,0X800B604);
	set_func_flags(0X800B5F6,0x400);
	add_func    (0X800B60C,0X800B688);
	set_func_flags(0X800B60C,0x400);
	set_frame_size(0X800B60C, 0X18, 0, 0);
	add_func    (0X800B688,0X800B6AC);
	set_func_flags(0X800B688,0x400);
	add_func    (0X800B6AC,0X800B700);
	set_func_flags(0X800B6AC,0x400);
	set_frame_size(0X800B6AC, 0X10, 0, 0);
	add_func    (0X800B70C,0X800B73E);
	set_func_flags(0X800B70C,0x400);
	set_frame_size(0X800B70C, 0X10, 0, 0);
	add_func    (0X800B73E,0X800B75A);
	set_func_flags(0X800B73E,0x400);
	add_func    (0X800B75A,0X800B776);
	set_func_flags(0X800B75A,0x400);
	add_func    (0X800B776,0X800B792);
	set_func_flags(0X800B776,0x400);
	add_func    (0X800B79C,0X800B7CC);
	set_func_flags(0X800B79C,0x400);
	set_frame_size(0X800B79C, 0X10, 0, 0);
	add_func    (0X800B7CC,0X800B808);
	set_func_flags(0X800B7CC,0x400);
	set_frame_size(0X800B7CC, 0X10, 0, 0);
	add_func    (0X800B808,0X800B828);
	set_func_flags(0X800B808,0x400);
	add_func    (0X800B858,0X800B8A2);
	set_func_flags(0X800B858,0x400);
	set_frame_size(0X800B858, 0X18, 0, 0);
	add_func    (0X800B8A2,0X800B8A8);
	set_func_flags(0X800B8A2,0x400);
	add_func    (0X800B8A8,0X800B8B4);
	set_func_flags(0X800B8A8,0x400);
	add_func    (0X800B8B4,0X800B8C0);
	set_func_flags(0X800B8B4,0x400);
	add_func    (0X800B8C0,0X800B8DC);
	set_func_flags(0X800B8C0,0x400);
	add_func    (0X800B8E4,0X800B8F2);
	set_func_flags(0X800B8E4,0x400);
	add_func    (0X800B97A,0X800BA14);
	set_func_flags(0X800B97A,0x400);
	set_frame_size(0X800B97A, 0X28, 0, 0);
	add_func    (0X800BA14,0X800BA34);
	set_func_flags(0X800BA14,0x400);
	add_func    (0X800BA42,0X800BA5C);
	set_func_flags(0X800BA42,0x400);
	add_func    (0X800BA78,0X800BAC8);
	set_func_flags(0X800BA78,0x400);
	set_frame_size(0X800BA78, 0X18, 0, 0);
	add_func    (0X800BAC8,0X800BACE);
	set_func_flags(0X800BAC8,0x400);
	add_func    (0X800BACE,0X800BAD4);
	set_func_flags(0X800BACE,0x400);
	add_func    (0X800BAD4,0X800BAF4);
	set_func_flags(0X800BAD4,0x400);
	set_frame_size(0X800BAD4, 0X10, 0, 0);
	add_func    (0X800BAF4,0X800BB0C);
	set_func_flags(0X800BAF4,0x400);
	set_frame_size(0X800BAF4, 0X10, 0, 0);
	add_func    (0X800BB14,0X800BB1C);
	set_func_flags(0X800BB14,0x400);
	add_func    (0X800BB1C,0X800BB84);
	set_func_flags(0X800BB1C,0x400);
	set_frame_size(0X800BB1C, 0X8, 0, 0);
	add_func    (0X800BB84,0X800BBC6);
	set_func_flags(0X800BB84,0x400);
	set_frame_size(0X800BB84, 0X8, 0, 0);
	add_func    (0X800BBE0,0X800BC16);
	set_func_flags(0X800BBE0,0x400);
	set_frame_size(0X800BBE0, 0X18, 0, 0);
	add_func    (0X800BC16,0X800BC2C);
	set_func_flags(0X800BC16,0x400);
	set_frame_size(0X800BC16, 0X8, 0, 0);
	add_func    (0X800BC2C,0X800BCEA);
	set_func_flags(0X800BC2C,0x400);
	set_frame_size(0X800BC2C, 0X438, 0, 0);
	add_func    (0X800BD30,0X800BD50);
	set_func_flags(0X800BD30,0x400);
	set_frame_size(0X800BD30, 0X8, 0, 0);
	add_func    (0X800BD50,0X800BD70);
	set_func_flags(0X800BD50,0x400);
	set_frame_size(0X800BD50, 0X8, 0, 0);
	add_func    (0X800BD70,0X800BD74);
	set_func_flags(0X800BD70,0x480);
	add_func    (0X800BD74,0X800BD82);
	set_func_flags(0X800BD74,0x400);
	add_func    (0X800BD82,0X800BD8A);
	set_func_flags(0X800BD82,0x400);
	add_func    (0X800BD98,0X800BE08);
	set_func_flags(0X800BD98,0x400);
	set_frame_size(0X800BD98, 0X20, 0, 0);
	add_func    (0X800BE08,0X800BE36);
	set_func_flags(0X800BE08,0x400);
	set_frame_size(0X800BE08, 0X8, 0, 0);
	add_func    (0X800BE36,0X800BEA2);
	set_func_flags(0X800BE36,0x400);
	set_frame_size(0X800BE36, 0X10, 0, 0);
	add_func    (0X800BEC8,0X800BF18);
	set_func_flags(0X800BEC8,0x400);
	set_frame_size(0X800BEC8, 0X8, 0, 0);
	add_func    (0X800BF68,0X800BFEA);
	set_func_flags(0X800BF68,0x400);
	set_frame_size(0X800BF68, 0X18, 0, 0);
	add_func    (0X800BFF4,0X800BFFA);
	set_func_flags(0X800BFF4,0x400);
	add_func    (0X800BFFA,0X800C020);
	set_func_flags(0X800BFFA,0x400);
	add_func    (0X800C020,0X800C04C);
	set_func_flags(0X800C020,0x400);
	set_frame_size(0X800C020, 0X8, 0, 0);
	add_func    (0X800C054,0X800C09A);
	set_func_flags(0X800C054,0x400);
	set_frame_size(0X800C054, 0X18, 0, 0);
	add_func    (0X800C09A,0X800C09E);
	set_func_flags(0X800C09A,0x480);
	add_func    (0X800C09E,0X800C0A2);
	set_func_flags(0X800C09E,0x480);
	add_func    (0X800C0BC,0X800C142);
	set_func_flags(0X800C0BC,0x400);
	set_frame_size(0X800C0BC, 0X10, 0, 0);
	add_func    (0X800C142,0X800C148);
	set_func_flags(0X800C142,0x400);
	add_func    (0X800C194,0X800C1DC);
	set_func_flags(0X800C194,0x400);
	set_frame_size(0X800C194, 0X18, 0, 0);
	add_func    (0X800C1DC,0X800C200);
	set_func_flags(0X800C1DC,0x400);
	set_frame_size(0X800C1DC, 0X10, 0, 0);
	add_func    (0X800C24C,0X800C274);
	set_func_flags(0X800C24C,0x400);
	add_func    (0X800C274,0X800C294);
	set_func_flags(0X800C274,0x400);
	add_func    (0X800C294,0X800C2B0);
	set_func_flags(0X800C294,0x400);
	add_func    (0X800C2B8,0X800C2BA);
	set_func_flags(0X800C2B8,0x440);
	add_func    (0X800C2BC,0X800C2EC);
	set_func_flags(0X800C2BC,0x400);
	set_frame_size(0X800C2BC, 0XC, 0, 0);
	add_func    (0X800C2F0,0X800C316);
	set_func_flags(0X800C2F0,0x400);
	set_frame_size(0X800C2F0, 0XC, 0, 0);
	add_func    (0X800C320,0X800C32A);
	set_func_flags(0X800C320,0x400);
	add_func    (0X800C33A,0X800C344);
	set_func_flags(0X800C33A,0x400);
	add_func    (0X800C34A,0X800C440);
	set_func_flags(0X800C34A,0x400);
	set_frame_size(0X800C34A, 0X40, 0, 0);
	add_func    (0X800C4B4,0X800C6D8);
	set_func_flags(0X800C4B4,0x400);
	set_frame_size(0X800C4B4, 0X20, 0, 0);
	add_func    (0X800C6D8,0X800C8E8);
	set_func_flags(0X800C6D8,0x400);
	set_frame_size(0X800C6D8, 0XC, 0, 0);
	add_func    (0X800C8E8,0X800CC08);
	set_func_flags(0X800C8E8,0x400);
	set_frame_size(0X800C8E8, 0X24, 0, 0);
	add_func    (0X800CC08,0X800CD4C);
	set_func_flags(0X800CC08,0x400);
	set_frame_size(0X800CC08, 0X208, 0, 0);
	add_func    (0X800CD4C,0X800CD92);
	set_func_flags(0X800CD4C,0x400);
	set_frame_size(0X800CD4C, 0X1C, 0, 0);
	add_func    (0X800CD92,0X800CDE2);
	set_func_flags(0X800CD92,0x400);
	set_frame_size(0X800CD92, 0X18, 0, 0);
	add_func    (0X800CDE2,0X800CE06);
	set_func_flags(0X800CDE2,0x400);
	set_frame_size(0X800CDE2, 0XC, 0, 0);
	add_func    (0X800CE14,0X800CE48);
	set_func_flags(0X800CE14,0x400);
	set_frame_size(0X800CE14, 0X10, 0, 0);
	add_func    (0X800CE48,0X800CE6C);
	set_func_flags(0X800CE48,0x400);
	set_frame_size(0X800CE48, 0X10, 0, 0);
	add_func    (0X800CE76,0X800CE9A);
	set_func_flags(0X800CE76,0x400);
	SetType(0X800CE76, "void __fastcall spi_fpga_raw_write(int addr8, int data8);");
	set_frame_size(0X800CE76, 0X10, 0, 0);
	add_func    (0X800CE9A,0X800CEBE);
	set_func_flags(0X800CE9A,0x400);
	SetType(0X800CE9A, "int __fastcall spi_fpga_raw_read(int addr8);");
	set_frame_size(0X800CE9A, 0X8, 0, 0);
	add_func    (0X800CEBE,0X800CF00);
	set_func_flags(0X800CEBE,0x400);
	SetType(0X800CEBE, "void __cdecl ad936x_reg_sync_write(unsigned int addr10, int val, int wrflag);");
	set_frame_size(0X800CEBE, 0X18, 0, 0);
	add_func    (0X800CF00,0X800CF3E);
	set_func_flags(0X800CF00,0x400);
	SetType(0X800CF00, "int __cdecl ad936x_reg_sync_read(unsigned int addr10, int wrflag);");
	set_frame_size(0X800CF00, 0X10, 0, 0);
	add_func    (0X800CF48,0X800CF66);
	set_func_flags(0X800CF48,0x400);
	set_frame_size(0X800CF48, 0X8, 0, 0);
	add_func    (0X800CF86,0X800CF9E);
	set_func_flags(0X800CF86,0x400);
	set_frame_size(0X800CF86, 0X8, 0, 0);
	add_func    (0X800CF9E,0X800CFD0);
	set_func_flags(0X800CF9E,0x400);
	set_frame_size(0X800CF9E, 0X8, 0, 0);
	add_func    (0X800CFD0,0X800D112);
	set_func_flags(0X800CFD0,0x400);
	set_frame_size(0X800CFD0, 0X18, 0, 0);
	add_func    (0X800D112,0X800D1EA);
	set_func_flags(0X800D112,0x400);
	set_frame_size(0X800D112, 0X10, 0, 0);
	add_func    (0X800D1EA,0X800D206);
	set_func_flags(0X800D1EA,0x400);
	set_frame_size(0X800D1EA, 0X8, 0, 0);
	add_func    (0X800D206,0X800D2D8);
	set_func_flags(0X800D206,0x400);
	set_frame_size(0X800D206, 0X18, 0, 0);
	add_func    (0X800D2D8,0X800D30C);
	set_func_flags(0X800D2D8,0x400);
	set_frame_size(0X800D2D8, 0X10, 0, 0);
	add_func    (0X800D318,0X800D3D0);
	set_func_flags(0X800D318,0x400);
	set_frame_size(0X800D318, 0X18, 0, 0);
	add_func    (0X800D3D0,0X800D400);
	set_func_flags(0X800D3D0,0x400);
	set_frame_size(0X800D3D0, 0X8, 0, 0);
	add_func    (0X800D400,0X800D7A4);
	set_func_flags(0X800D400,0x400);
	set_frame_size(0X800D400, 0X30, 0, 0);
	define_local_var(0X800D400, 0X800D7A4, "[bp-0X2C]", "data8");
	add_func    (0X800D7A4,0X800D7C6);
	set_func_flags(0X800D7A4,0x400);
	set_frame_size(0X800D7A4, 0X8, 0, 0);
	add_func    (0X800D7C6,0X800DAA2);
	set_func_flags(0X800D7C6,0x400);
	set_frame_size(0X800D7C6, 0X20, 0, 0);
	add_func    (0X800DAA2,0X800DAC4);
	set_func_flags(0X800DAA2,0x400);
	set_frame_size(0X800DAA2, 0X8, 0, 0);
	add_func    (0X800DAC4,0X800DAE6);
	set_func_flags(0X800DAC4,0x400);
	set_frame_size(0X800DAC4, 0X8, 0, 0);
	add_func    (0X800DD28,0X800DDC8);
	set_func_flags(0X800DD28,0x400);
	set_frame_size(0X800DD28, 0XC, 0, 0);
	add_func    (0X800DDC8,0X800DDFA);
	set_func_flags(0X800DDC8,0x400);
	add_func    (0X800DE7C,0X800DE86);
	set_func_flags(0X800DE7C,0x400);
	add_func    (0X800DE86,0X800DEB8);
	set_func_flags(0X800DE86,0x400);
	set_frame_size(0X800DE86, 0X8, 0, 0);
	add_func    (0X800DEB8,0X800DED2);
	set_func_flags(0X800DEB8,0x400);
	add_func    (0X800DED2,0X800DEF4);
	set_func_flags(0X800DED2,0x400);
	set_frame_size(0X800DED2, 0X4, 0, 0);
	add_func    (0X800DEF4,0X800DEFE);
	set_func_flags(0X800DEF4,0x400);
	add_func    (0X800DEFE,0X800DF06);
	set_func_flags(0X800DEFE,0x400);
	add_func    (0X800DF06,0X800DF10);
	set_func_flags(0X800DF06,0x400);
	add_func    (0X800DF10,0X800DF3C);
	set_func_flags(0X800DF10,0x400);
	set_frame_size(0X800DF10, 0X8, 0, 0);
	add_func    (0X800DF6E,0X800DFA0);
	set_func_flags(0X800DF6E,0x400);
	set_frame_size(0X800DF6E, 0X8, 0, 0);
	add_func    (0X800DFA0,0X800DFD2);
	set_func_flags(0X800DFA0,0x400);
	set_frame_size(0X800DFA0, 0X8, 0, 0);
	add_func    (0X800E008,0X800E16C);
	set_func_flags(0X800E008,0x400);
	set_frame_size(0X800E008, 0X18, 0, 0);
	add_func    (0X800E16C,0X800E30A);
	set_func_flags(0X800E16C,0x400);
	set_frame_size(0X800E16C, 0X40, 0, 0);
	add_func    (0X800E30E,0X800E32C);
	set_func_flags(0X800E30E,0x400);
	set_frame_size(0X800E30E, 0X10, 0, 0);
	add_func    (0X800E32C,0X800E398);
	set_func_flags(0X800E32C,0x400);
	set_frame_size(0X800E32C, 0X28, 0, 0);
	add_func    (0X800E398,0X800E41A);
	set_func_flags(0X800E398,0x400);
	set_frame_size(0X800E398, 0X8, 0, 0);
	add_func    (0X800E41A,0X800E5FA);
	set_func_flags(0X800E41A,0x410);
	set_frame_size(0X800E41A, 0X28, 32, 0);
	add_func    (0X800E5FA,0X800E622);
	set_func_flags(0X800E5FA,0x400);
	set_frame_size(0X800E5FA, 0XC, 0, 0);
	add_func    (0X800E630,0X800E63C);
	set_func_flags(0X800E630,0x400);
	add_func    (0X800E63C,0X800E654);
	set_func_flags(0X800E63C,0x400);
	add_func    (0X800E654,0X800E66C);
	set_func_flags(0X800E654,0x400);
	add_func    (0X800E66C,0X800E674);
	set_func_flags(0X800E66C,0x400);
	add_func    (0X800E678,0X800E78A);
	set_func_flags(0X800E678,0x400);
	set_frame_size(0X800E678, 0X18, 0, 0);
	add_func    (0X800E78A,0X800E820);
	set_func_flags(0X800E78A,0x400);
	add_func    (0X800E820,0X800E8B8);
	set_func_flags(0X800E820,0x400);
	set_frame_size(0X800E820, 0X10, 0, 0);
	add_func    (0X800E8B8,0X800E9E8);
	set_func_flags(0X800E8B8,0x400);
	set_frame_size(0X800E8B8, 0X28, 0, 0);
	add_func    (0X800E9E8,0X800EA34);
	set_func_flags(0X800E9E8,0x400);
	set_frame_size(0X800E9E8, 0X108, 0, 0);
	add_func    (0X800EA34,0X800EAC2);
	set_func_flags(0X800EA34,0x400);
	set_frame_size(0X800EA34, 0X140, 0, 0);
	add_func    (0X800EAC2,0X800EB46);
	set_func_flags(0X800EAC2,0x400);
	set_frame_size(0X800EAC2, 0X8, 0, 0);
	add_func    (0X800EB46,0X800EBA0);
	set_func_flags(0X800EB46,0x400);
	set_frame_size(0X800EB46, 0X10, 0, 0);
	add_func    (0X800EBA0,0X800EBA8);
	set_func_flags(0X800EBA0,0x400);
	add_func    (0X800EBA8,0X800EC82);
	set_func_flags(0X800EBA8,0x400);
	set_frame_size(0X800EBA8, 0X20, 0, 0);
	add_func    (0X800EC82,0X800EFD6);
	set_func_flags(0X800EC82,0x400);
	set_frame_size(0X800EC82, 0X20, 0, 0);
	add_func    (0X800EFD6,0X800F0B8);
	set_func_flags(0X800EFD6,0);
	set_frame_size(0X800EFD6, 0X18, 0, 0);
	add_func    (0X800F0BC,0X800F3D8);
	set_func_flags(0X800F0BC,0x400);
	set_frame_size(0X800F0BC, 0X10, 0, 0);
	set_name(0X800F2F4, "locl_skip_datablk1", SN_LOCAL);
	add_func    (0X800F3D8,0X800F436);
	set_func_flags(0X800F3D8,0x400);
	set_frame_size(0X800F3D8, 0X10, 0, 0);
	add_func    (0X800F436,0X800F510);
	set_func_flags(0X800F436,0x400);
	set_frame_size(0X800F436, 0X10, 0, 0);
	add_func    (0X800F510,0X800F6A0);
	set_func_flags(0X800F510,0x400);
	set_frame_size(0X800F510, 0X18, 0, 0);
	add_func    (0X800F6A0,0X800F804);
	set_func_flags(0X800F6A0,0x400);
	set_frame_size(0X800F6A0, 0X58, 0, 0);
	add_func    (0X800F804,0X800F978);
	set_func_flags(0X800F804,0x400);
	set_frame_size(0X800F804, 0X30, 0, 0);
	add_func    (0X800F978,0X800FBE0);
	set_func_flags(0X800F978,0x400);
	set_frame_size(0X800F978, 0X30, 0, 0);
	add_func    (0X800FC4C,0X800FD18);
	set_func_flags(0X800FC4C,0x400);
	set_frame_size(0X800FC4C, 0X8, 0, 0);
	add_func    (0X800FD18,0X800FD60);
	set_func_flags(0X800FD18,0x400);
	set_frame_size(0X800FD18, 0X28, 0, 0);
	add_func    (0X800FD60,0X800FDC2);
	set_func_flags(0X800FD60,0x400);
	set_frame_size(0X800FD60, 0X10, 0, 0);
	add_func    (0X800FDC2,0X800FEE4);
	set_func_flags(0X800FDC2,0x400);
	set_frame_size(0X800FDC2, 0X8, 0, 0);
	add_func    (0X800FEE4,0X800FF38);
	set_func_flags(0X800FEE4,0x400);
	set_frame_size(0X800FEE4, 0X8, 0, 0);
	add_func    (0X800FF38,0X800FF8C);
	set_func_flags(0X800FF38,0x400);
	set_frame_size(0X800FF38, 0X8, 0, 0);
	add_func    (0X800FF8C,0X8010040);
	set_func_flags(0X800FF8C,0x200);
	set_frame_size(0X800FF8C, 0X10, 0, 0);
	add_func    (0X8010078,0X8010092);
	set_func_flags(0X8010078,0x400);
	set_frame_size(0X8010078, 0X8, 0, 0);
	add_func    (0X8010092,0X80100AE);
	set_func_flags(0X8010092,0x400);
	set_frame_size(0X8010092, 0X8, 0, 0);
	add_func    (0X80100AE,0X8010286);
	set_func_flags(0X80100AE,0x400);
	set_frame_size(0X80100AE, 0X30, 0, 0);
	add_func    (0X8010286,0X801029E);
	set_func_flags(0X8010286,0x400);
	set_frame_size(0X8010286, 0X8, 0, 0);
	add_func    (0X801029E,0X80103F8);
	set_func_flags(0X801029E,0x400);
	set_frame_size(0X801029E, 0X40, 0, 0);
	add_func    (0X80103F8,0X8010458);
	set_func_flags(0X80103F8,0x400);
	set_frame_size(0X80103F8, 0X10, 0, 0);
	add_func    (0X80104BC,0X8010598);
	set_func_flags(0X80104BC,0x400);
	set_frame_size(0X80104BC, 0X30, 0, 0);
	add_func    (0X8010598,0X80105A2);
	set_func_flags(0X8010598,0x400);
	add_func    (0X80105A2,0X80105B2);
	set_func_flags(0X80105A2,0x400);
	add_func    (0X80105B2,0X80105C2);
	set_func_flags(0X80105B2,0x400);
	add_func    (0X80105C2,0X80105D2);
	set_func_flags(0X80105C2,0x400);
	add_func    (0X80105D2,0X80105DA);
	set_func_flags(0X80105D2,0x400);
	add_func    (0X80105DA,0X8010864);
	set_func_flags(0X80105DA,0x400);
	set_frame_size(0X80105DA, 0X30, 0, 0);
	add_func    (0X8010864,0X8010900);
	set_func_flags(0X8010864,0x400);
	set_frame_size(0X8010864, 0X10, 0, 0);
	add_func    (0X8010900,0X8010916);
	set_func_flags(0X8010900,0x400);
	add_func    (0X8010916,0X8010922);
	set_func_flags(0X8010916,0x400);
	add_func    (0X801092C,0X8010938);
	set_func_flags(0X801092C,0x400);
	add_func    (0X8010942,0X801094E);
	set_func_flags(0X8010942,0x400);
	add_func    (0X8010958,0X8010960);
	set_func_flags(0X8010958,0x400);
	add_func    (0X8010960,0X8010968);
	set_func_flags(0X8010960,0x400);
	add_func    (0X8010968,0X8010974);
	set_func_flags(0X8010968,0x400);
	add_func    (0X801097E,0X8010994);
	set_func_flags(0X801097E,0x400);
	add_func    (0X8010994,0X80109A4);
	set_func_flags(0X8010994,0x400);
	add_func    (0X80109A4,0X80109D4);
	set_func_flags(0X80109A4,0x400);
	set_frame_size(0X80109A4, 0X8, 0, 0);
	add_func    (0X80109D4,0X80109DC);
	set_func_flags(0X80109D4,0x400);
	add_func    (0X80109E4,0X80109F2);
	set_func_flags(0X80109E4,0x400);
	add_func    (0X80109F2,0X8010A02);
	set_func_flags(0X80109F2,0x400);
	add_func    (0X8010A02,0X8010A0A);
	set_func_flags(0X8010A02,0x400);
	add_func    (0X8010A0A,0X8010A12);
	set_func_flags(0X8010A0A,0x400);
	add_func    (0X8010A12,0X8010A1A);
	set_func_flags(0X8010A12,0x400);
	add_func    (0X8010A1A,0X8010AA6);
	set_func_flags(0X8010A1A,0x400);
	set_frame_size(0X8010A1A, 0X8, 0, 0);
	add_func    (0X8010AA6,0X8010AF4);
	set_func_flags(0X8010AA6,0x400);
	set_frame_size(0X8010AA6, 0X8, 0, 0);
	add_func    (0X8010AFC,0X8010BDE);
	set_func_flags(0X8010AFC,0x400);
	set_frame_size(0X8010AFC, 0X28, 0, 0);
	add_func    (0X8010BDE,0X8010D3A);
	set_func_flags(0X8010BDE,0x400);
	set_frame_size(0X8010BDE, 0X60, 0, 0);
	add_func    (0X8010D3A,0X8010DE2);
	set_func_flags(0X8010D3A,0x400);
	set_frame_size(0X8010D3A, 0XC0, 0, 0);
	add_func    (0X8010DE2,0X8010E5C);
	set_func_flags(0X8010DE2,0x400);
	set_frame_size(0X8010DE2, 0X28, 0, 0);
	add_func    (0X8010E5C,0X8011028);
	set_func_flags(0X8010E5C,0x400);
	set_frame_size(0X8010E5C, 0X38, 0, 0);
	add_func    (0X801102C,0X8011062);
	set_func_flags(0X801102C,0x400);
	set_frame_size(0X801102C, 0X110, 0, 0);
	add_func    (0X801130C,0X8011318);
	set_func_flags(0X801130C,0x400);
	add_func    (0X8011324,0X8011368);
	set_func_flags(0X8011324,0x400);
	set_frame_size(0X8011324, 0X10, 0, 0);
	add_func    (0X8011368,0X801139E);
	set_func_flags(0X8011368,0x400);
	set_frame_size(0X8011368, 0XC, 0, 0);
	add_func    (0X80113A8,0X801141C);
	set_func_flags(0X80113A8,0x400);
	set_frame_size(0X80113A8, 0X10, 0, 0);
	add_func    (0X801141C,0X801148C);
	set_func_flags(0X801141C,0x400);
	set_frame_size(0X801141C, 0X10, 0, 0);
	add_func    (0X801148C,0X8011540);
	set_func_flags(0X801148C,0x400);
	set_frame_size(0X801148C, 0X18, 0, 0);
	add_func    (0X8011540,0X801165A);
	set_func_flags(0X8011540,0x400);
	set_frame_size(0X8011540, 0X40, 0, 0);
	add_func    (0X8011680,0X8011682);
	set_func_flags(0X8011680,0x440);
	add_func    (0X8011682,0X80116E8);
	set_func_flags(0X8011682,0x400);
	set_frame_size(0X8011682, 0X28, 0, 0);
	add_func    (0X80116E8,0X8011738);
	set_func_flags(0X80116E8,0x400);
	set_frame_size(0X80116E8, 0X28, 0, 0);
	add_func    (0X8011738,0X8011786);
	set_func_flags(0X8011738,0x400);
	set_frame_size(0X8011738, 0X28, 0, 0);
	add_func    (0X8011786,0X80117D2);
	set_func_flags(0X8011786,0x400);
	set_frame_size(0X8011786, 0X28, 0, 0);
	add_func    (0X80117D2,0X801181E);
	set_func_flags(0X80117D2,0x400);
	set_frame_size(0X80117D2, 0X28, 0, 0);
	add_func    (0X8011828,0X8011876);
	set_func_flags(0X8011828,0x400);
	set_frame_size(0X8011828, 0X8, 0, 0);
	add_func    (0X8011876,0X8011882);
	set_func_flags(0X8011876,0x400);
	add_func    (0X8011882,0X80118B8);
	set_func_flags(0X8011882,0x400);
	set_frame_size(0X8011882, 0X10, 0, 0);
	add_func    (0X80118B8,0X80118C2);
	set_func_flags(0X80118B8,0x400);
	add_func    (0X80118D0,0X801198A);
	set_func_flags(0X80118D0,0x400);
	set_frame_size(0X80118D0, 0X10, 0, 0);
	add_func    (0X801198A,0X80119D8);
	set_func_flags(0X801198A,0x400);
	set_frame_size(0X801198A, 0X10, 0, 0);
	add_func    (0X80119DC,0X8011A08);
	set_func_flags(0X80119DC,0x400);
	add_func    (0X8011A08,0X8011A66);
	set_func_flags(0X8011A08,0x400);
	add_func    (0X8011A66,0X8011A7E);
	set_func_flags(0X8011A66,0x400);
	add_func    (0X8011A7E,0X8011A8E);
	set_func_flags(0X8011A7E,0x400);
	add_func    (0X8011A8E,0X8011BE6);
	set_func_flags(0X8011A8E,0x400);
	set_frame_size(0X8011A8E, 0X10, 0, 0);
	add_func    (0X8011BE6,0X8011C0A);
	set_func_flags(0X8011BE6,0x400);
	set_frame_size(0X8011BE6, 0X8, 0, 0);
	add_func    (0X8011C0A,0X8011C1E);
	set_func_flags(0X8011C0A,0x400);
	set_frame_size(0X8011C0A, 0X8, 0, 0);
	add_func    (0X8011C1E,0X8011CD0);
	set_func_flags(0X8011C1E,0x400);
	set_frame_size(0X8011C1E, 0X168, 0, 0);
	add_func    (0X8011D66,0X8011DF6);
	set_func_flags(0X8011D66,0x400);
	SetType(0X8011D66, "int __fastcall packet_make_response(int *(__fastcall *send_func)(void *pkt, unsigned int len), struct DjiPacket *spkt, const uint8_t *payload, size_t payload_len);");
	set_frame_size(0X8011D66, 0X160, 0, 0);
	add_func    (0X8011DF8,0X8011E0E);
	set_func_flags(0X8011DF8,0x400);
	set_frame_size(0X8011DF8, 0X8, 0, 0);
	add_func    (0X8011E0E,0X8011E34);
	set_func_flags(0X8011E0E,0x400);
	set_frame_size(0X8011E0E, 0XC, 0, 0);
	add_func    (0X8011E34,0X8011E50);
	set_func_flags(0X8011E34,0x400);
	set_frame_size(0X8011E34, 0XC, 0, 0);
	add_func    (0X8011E54,0X8011E7A);
	set_func_flags(0X8011E54,0x400);
	set_frame_size(0X8011E54, 0X8, 0, 0);
	add_func    (0X8011E7A,0X8011EAE);
	set_func_flags(0X8011E7A,0x400);
	set_frame_size(0X8011E7A, 0XC, 0, 0);
	add_func    (0X8011EAE,0X8011ED0);
	set_func_flags(0X8011EAE,0x400);
	set_frame_size(0X8011EAE, 0XC, 0, 0);
	add_func    (0X8012086,0X80120E2);
	set_func_flags(0X8012086,0x400);
	set_frame_size(0X8012086, 0X18, 0, 0);
	add_func    (0X80120E2,0X8012102);
	set_func_flags(0X80120E2,0x400);
	set_frame_size(0X80120E2, 0X10, 0, 0);
	add_func    (0X8012102,0X8012122);
	set_func_flags(0X8012102,0x400);
	set_frame_size(0X8012102, 0X10, 0, 0);
	add_func    (0X8012122,0X801216A);
	set_func_flags(0X8012122,0x400);
	SetType(0X8012122, "void __fastcall cmd_exec_set09_cmd06(struct DjiPacket *pkt, unsigned int pkt_len);");
	set_frame_size(0X8012122, 0X10, 0, 0);
	add_func    (0X801216A,0X80121B4);
	set_func_flags(0X801216A,0x400);
	set_frame_size(0X801216A, 0X10, 0, 0);
	add_func    (0X80121B4,0X8012210);
	set_func_flags(0X80121B4,0x400);
	set_frame_size(0X80121B4, 0X10, 0, 0);
	add_func    (0X801260C,0X801261C);
	set_func_flags(0X801260C,0x400);
	add_func    (0X801261C,0X8012626);
	set_func_flags(0X801261C,0x400);
	add_func    (0X8012626,0X801267E);
	set_func_flags(0X8012626,0x400);
	set_frame_size(0X8012626, 0X18, 0, 0);
	add_func    (0X8012690,0X80126AC);
	set_func_flags(0X8012690,0x400);
	set_frame_size(0X8012690, 0X8, 0, 0);
	add_func    (0X80126B8,0X80126D4);
	set_func_flags(0X80126B8,0x400);
	set_frame_size(0X80126B8, 0X8, 0, 0);
	add_func    (0X80126D4,0X80126E0);
	set_func_flags(0X80126D4,0x400);
	add_func    (0X80126E6,0X80126EC);
	set_func_flags(0X80126E6,0x400);
	add_func    (0X80126F8,0X8012702);
	set_func_flags(0X80126F8,0x400);
	add_func    (0X801271A,0X8012766);
	set_func_flags(0X801271A,0x400);
	set_frame_size(0X801271A, 0X418, 0, 0);
	add_func    (0X8012766,0X801279A);
	set_func_flags(0X8012766,0x400);
	set_frame_size(0X8012766, 0X10, 0, 0);
	add_func    (0X801279A,0X80127BE);
	set_func_flags(0X801279A,0x400);
	set_frame_size(0X801279A, 0X10, 0, 0);
	add_func    (0X80127BE,0X80127CE);
	set_func_flags(0X80127BE,0x400);
	add_func    (0X80127D8,0X8012802);
	set_func_flags(0X80127D8,0x400);
	set_frame_size(0X80127D8, 0X8, 0, 0);
	add_func    (0X8012802,0X8012806);
	set_func_flags(0X8012802,0x400);
	add_func    (0X8012814,0X801286C);
	set_func_flags(0X8012814,0x400);
	set_frame_size(0X8012814, 0X8, 0, 0);
	add_func    (0X801286C,0X80128AA);
	set_func_flags(0X801286C,0x400);
	set_frame_size(0X801286C, 0X8, 0, 0);
	add_func    (0X80128AA,0X8012998);
	set_func_flags(0X80128AA,0x400);
	add_func    (0X8012998,0X80129DC);
	set_func_flags(0X8012998,0x400);
	add_func    (0X80129DC,0X8012A2A);
	set_func_flags(0X80129DC,0x400);
	set_frame_size(0X80129DC, 0X4, 0, 0);
	add_func    (0X8012A3A,0X8012A46);
	set_func_flags(0X8012A3A,0x400);
	set_frame_size(0X8012A3A, 0X8, 0, 0);
	add_func    (0X8012A48,0X8012A4C);
	set_func_flags(0X8012A48,0x400);
	add_func    (0X8012A50,0X8012A54);
	set_func_flags(0X8012A50,0x400);
	add_func    (0X8012A58,0X8012AA2);
	set_func_flags(0X8012A58,0x400);
	add_func    (0X8012AB0,0X8012AB8);
	set_func_flags(0X8012AB0,0x401);
	add_func    (0X8012ABC,0X8012AE4);
	set_func_flags(0X8012ABC,0x400);
	add_func    (0X8012AE4,0X8012E24);
	set_func_flags(0X8012AE4,0x400);
	set_frame_size(0X8012AE4, 0X88, 0, 0);
	add_func    (0X8012E6C,0X8012F52);
	set_func_flags(0X8012E6C,0x400);
	set_frame_size(0X8012E6C, 0X30, 0, 0);
	add_func    (0X8012F68,0X8013012);
	set_func_flags(0X8012F68,0x400);
	set_frame_size(0X8012F68, 0X18, 0, 0);
	add_func    (0X8013014,0X80130F4);
	set_func_flags(0X8013014,0x400);
	set_frame_size(0X8013014, 0X40, 0, 0);
	add_func    (0X8013100,0X801310A);
	set_func_flags(0X8013100,0x400);
	add_func    (0X8013110,0X80132EE);
	set_func_flags(0X8013110,0x400);
	set_frame_size(0X8013110, 0X28, 0, 0);
	add_func    (0X8013334,0X801348E);
	set_func_flags(0X8013334,0x400);
	set_frame_size(0X8013334, 0X20, 0, 0);
	add_func    (0X80134B4,0X8013558);
	set_func_flags(0X80134B4,0x400);
	set_frame_size(0X80134B4, 0X20, 0, 0);
	add_func    (0X8013560,0X80136E0);
	set_func_flags(0X8013560,0x400);
	set_frame_size(0X8013560, 0X18, 0, 0);
	add_func    (0X8013718,0X80140E6);
	set_func_flags(0X8013718,0x400);
	set_frame_size(0X8013718, 0X70, 0, 0);
	add_func    (0X80140F8,0X801419E);
	set_func_flags(0X80140F8,0x400);
	set_frame_size(0X80140F8, 0X20, 0, 0);
	add_func    (0X80141A8,0X80141F4);
	set_func_flags(0X80141A8,0x400);
	set_frame_size(0X80141A8, 0X18, 0, 0);
	add_func    (0X80141F4,0X801424C);
	set_func_flags(0X80141F4,0x200);
	add_func    (0X8014258,0X80142EC);
	set_func_flags(0X8014258,0x400);
	set_frame_size(0X8014258, 0X8, 0, 0);
	add_func    (0X80142EC,0X801430C);
	set_func_flags(0X80142EC,0x400);
	add_func    (0X80143D0,0X80145F8);
	set_func_flags(0X80143D0,0x400);
	set_frame_size(0X80143D0, 0X18, 0, 0);
	add_func    (0X8014680,0X80146DC);
	set_func_flags(0X8014680,0x400);
	set_frame_size(0X8014680, 0, 0, 0);
	add_func    (0X80146E0,0X8014738);
	set_func_flags(0X80146E0,0x400);
	set_frame_size(0X80146E0, 0, 0, 0);
	add_func    (0X801473A,0X8014768);
	set_func_flags(0X801473A,0x400);
	add_func    (0X8014768,0X801478E);
	set_func_flags(0X8014768,0x400);
	add_func    (0X80147F2,0X8014808);
	set_func_flags(0X80147F2,0x400);
	set_frame_size(0X80147F2, 0X10, 0, 0);
	add_func    (0X8014808,0X8014954);
	set_func_flags(0X8014808,0x400);
	set_frame_size(0X8014808, 0X10, 0, 0);
	add_func    (0X801495C,0X80149F8);
	set_func_flags(0X801495C,0x400);
	add_func    (0X80149F8,0X8014A04);
	set_func_flags(0X80149F8,0x400);
	add_func    (0X8014A04,0X8014A70);
	set_func_flags(0X8014A04,0x400);
	add_func    (0X8014A70,0X8014A86);
	set_func_flags(0X8014A70,0x400);
	set_frame_size(0X8014A70, 0X8, 0, 0);
	add_func    (0X8014A88,0X8014E24);
	set_func_flags(0X8014A88,0x400);
	set_frame_size(0X8014A88, 0X18, 0, 0);
	add_func    (0X8014E28,0X8014E70);
	set_func_flags(0X8014E28,0x400);
	set_frame_size(0X8014E28, 0X8, 0, 0);
	add_func    (0X8014F68,0X80150E8);
	set_func_flags(0X8014F68,0);
	set_frame_size(0X8014F68, 0X4, 0, 0);
	add_func    (0X80150EC,0X8015118);
	set_func_flags(0X80150EC,0x400);
	set_frame_size(0X80150EC, 0, 0, 0);
	add_func    (0X8015124,0X801515C);
	set_func_flags(0X8015124,0x400);
	set_frame_size(0X8015124, 0, 0, 0);
	add_func    (0X8015164,0X8015194);
	set_func_flags(0X8015164,0x400);
	add_func    (0X8015194,0X80151BA);
	set_func_flags(0X8015194,0x400);
	add_func    (0X80151BC,0X8015224);
	set_func_flags(0X80151BC,0x400);
	add_func    (0X8015224,0X8015326);
	set_func_flags(0X8015224,0x400);
	add_func    (0X8015326,0X80153B2);
	set_func_flags(0X8015326,0x400);
	add_func    (0X80153BC,0X801541E);
	set_func_flags(0X80153BC,0x400);
	add_func    (0X8015582,0X80155DE);
	set_func_flags(0X8015582,0x400);
	add_func    (0X80155DE,0X801565A);
	set_func_flags(0X80155DE,0x400);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X8008000,"T",0,3);
	split_sreg_range(0X80080EC,"T",0X1,3);
	split_sreg_range(0X80080F4,"T",0X1,3);
	split_sreg_range(0X800810A,"T",0X1,3);
	split_sreg_range(0X800812E,"T",0X1,3);
	split_sreg_range(0X8008148,"T",0X1,3);
	split_sreg_range(0X8008154,"T",0X1,3);
	split_sreg_range(0X8008164,"T",0X1,3);
	split_sreg_range(0X8008170,"T",0X1,3);
	split_sreg_range(0X8008178,"T",0X1,3);
	split_sreg_range(0X800817C,"T",0X1,3);
	split_sreg_range(0X800818C,"T",0X1,3);
	split_sreg_range(0X80081A0,"T",0X1,3);
	split_sreg_range(0X80081A8,"T",0X1,3);
	split_sreg_range(0X80081AC,"T",0X1,3);
	split_sreg_range(0X80081BE,"T",0X1,3);
	split_sreg_range(0X80081CC,"T",0X1,3);
	split_sreg_range(0X8008208,"T",0X1,3);
	split_sreg_range(0X800820A,"T",0X1,3);
	split_sreg_range(0X800820C,"T",0X1,3);
	split_sreg_range(0X800820E,"T",0X1,3);
	split_sreg_range(0X8008210,"T",0X1,3);
	split_sreg_range(0X8008212,"T",0X1,3);
	split_sreg_range(0X8008214,"T",0X1,3);
	split_sreg_range(0X8008216,"T",0X1,3);
	split_sreg_range(0X8008218,"T",0X1,3);
	split_sreg_range(0X800821A,"T",0X1,3);
	split_sreg_range(0X800821C,"T",0X1,3);
	split_sreg_range(0X8008240,"T",0X1,3);
	split_sreg_range(0X800824A,"T",0X1,3);
	split_sreg_range(0X8008292,"T",0X1,3);
	split_sreg_range(0X80082C0,"T",0X1,3);
	split_sreg_range(0X80082C2,"T",0X1,3);
	split_sreg_range(0X80082C6,"T",0X1,3);
	split_sreg_range(0X80082D4,"T",0X1,3);
	split_sreg_range(0X80082D8,"T",0X1,3);
	split_sreg_range(0X80082F0,"T",0X1,3);
	split_sreg_range(0X80082FE,"T",0X1,3);
	split_sreg_range(0X800830A,"T",0X1,3);
	split_sreg_range(0X8008314,"T",0X1,3);
	split_sreg_range(0X8008326,"T",0X1,3);
	split_sreg_range(0X8008328,"T",0X1,3);
	split_sreg_range(0X8008378,"T",0X1,3);
	split_sreg_range(0X8008384,"T",0X1,3);
	split_sreg_range(0X8008388,"T",0X1,3);
	split_sreg_range(0X8008398,"T",0X1,3);
	split_sreg_range(0X800839C,"T",0X1,3);
	split_sreg_range(0X80083AC,"T",0X1,3);
	split_sreg_range(0X80083AE,"T",0X1,3);
	split_sreg_range(0X80083B2,"T",0X1,3);
	split_sreg_range(0X80083BC,"T",0X1,3);
	split_sreg_range(0X80083C8,"T",0X1,3);
	split_sreg_range(0X80083CA,"T",0X1,3);
	split_sreg_range(0X80083D4,"T",0X1,3);
	split_sreg_range(0X80083E0,"T",0X1,3);
	split_sreg_range(0X80083E2,"T",0X1,3);
	split_sreg_range(0X80083EE,"T",0X1,3);
	split_sreg_range(0X80083F2,"T",0X1,3);
	split_sreg_range(0X8008402,"T",0X1,3);
	split_sreg_range(0X8008420,"T",0X1,3);
	split_sreg_range(0X8008424,"T",0X1,3);
	split_sreg_range(0X8008428,"T",0X1,3);
	split_sreg_range(0X8008446,"T",0X1,3);
	split_sreg_range(0X8008456,"T",0X1,3);
	split_sreg_range(0X8008470,"T",0X1,3);
	split_sreg_range(0X8008488,"T",0X1,3);
	split_sreg_range(0X80084A8,"T",0X1,3);
	split_sreg_range(0X80084AC,"T",0X1,3);
	split_sreg_range(0X80084B0,"T",0X1,3);
	split_sreg_range(0X80084CA,"T",0X1,3);
	split_sreg_range(0X80084CE,"T",0X1,3);
	split_sreg_range(0X80084DE,"T",0X1,3);
	split_sreg_range(0X80084E2,"T",0X1,3);
	split_sreg_range(0X80084FE,"T",0X1,3);
	split_sreg_range(0X8008502,"T",0X1,3);
	split_sreg_range(0X8008512,"T",0X1,3);
	split_sreg_range(0X8008516,"T",0X1,3);
	split_sreg_range(0X8008526,"T",0X1,3);
	split_sreg_range(0X8008528,"T",0X1,3);
	split_sreg_range(0X8008546,"T",0X1,3);
	split_sreg_range(0X8008556,"T",0X1,3);
	split_sreg_range(0X8008582,"T",0X1,3);
	split_sreg_range(0X800858C,"T",0X1,3);
	split_sreg_range(0X80085B8,"T",0X1,3);
	split_sreg_range(0X80085C8,"T",0X1,3);
	split_sreg_range(0X80085CC,"T",0X1,3);
	split_sreg_range(0X80085D0,"T",0X1,3);
	split_sreg_range(0X80085DC,"T",0X1,3);
	split_sreg_range(0X80085E4,"T",0X1,3);
	split_sreg_range(0X80085FE,"T",0X1,3);
	split_sreg_range(0X8008620,"T",0X1,3);
	split_sreg_range(0X8008630,"T",0X1,3);
	split_sreg_range(0X8008634,"T",0X1,3);
	split_sreg_range(0X8008646,"T",0X1,3);
	split_sreg_range(0X8008660,"T",0X1,3);
	split_sreg_range(0X8008662,"T",0X1,3);
	split_sreg_range(0X800866C,"T",0X1,3);
	split_sreg_range(0X800867E,"T",0X1,3);
	split_sreg_range(0X800868C,"T",0X1,3);
	split_sreg_range(0X800869A,"T",0X1,3);
	split_sreg_range(0X80086A8,"T",0X1,3);
	split_sreg_range(0X80086B6,"T",0X1,3);
	split_sreg_range(0X80086C4,"T",0X1,3);
	split_sreg_range(0X80086F0,"T",0X1,3);
	split_sreg_range(0X80086F4,"T",0X1,3);
	split_sreg_range(0X80086FA,"T",0X1,3);
	split_sreg_range(0X8008700,"T",0X1,3);
	split_sreg_range(0X8008706,"T",0X1,3);
	split_sreg_range(0X800870C,"T",0X1,3);
	split_sreg_range(0X8008712,"T",0X1,3);
	split_sreg_range(0X8008718,"T",0X1,3);
	split_sreg_range(0X800871A,"T",0X1,3);
	split_sreg_range(0X8008724,"T",0X1,3);
	split_sreg_range(0X800872E,"T",0X1,3);
	split_sreg_range(0X8008782,"T",0X1,3);
	split_sreg_range(0X80087A6,"T",0X1,3);
	split_sreg_range(0X80087B4,"T",0X1,3);
	split_sreg_range(0X80087C0,"T",0X1,3);
	split_sreg_range(0X80087C4,"T",0X1,3);
	split_sreg_range(0X80087CA,"T",0X1,3);
	split_sreg_range(0X80087D6,"T",0X1,3);
	split_sreg_range(0X80087E2,"T",0X1,3);
	split_sreg_range(0X80087EC,"T",0X1,3);
	split_sreg_range(0X800883E,"T",0X1,3);
	split_sreg_range(0X8008842,"T",0X1,3);
	split_sreg_range(0X8008874,"T",0X1,3);
	split_sreg_range(0X800889A,"T",0X1,3);
	split_sreg_range(0X80088A0,"T",0X1,3);
	split_sreg_range(0X80088B6,"T",0X1,3);
	split_sreg_range(0X80088BE,"T",0X1,3);
	split_sreg_range(0X80088E6,"T",0X1,3);
	split_sreg_range(0X8008920,"T",0X1,3);
	split_sreg_range(0X8008924,"T",0X1,3);
	split_sreg_range(0X8008946,"T",0X1,3);
	split_sreg_range(0X800894C,"T",0X1,3);
	split_sreg_range(0X8008950,"T",0X1,3);
	split_sreg_range(0X8008952,"T",0X1,3);
	split_sreg_range(0X800896C,"T",0X1,3);
	split_sreg_range(0X8008972,"T",0X1,3);
	split_sreg_range(0X8008984,"T",0X1,3);
	split_sreg_range(0X8008986,"T",0X1,3);
	split_sreg_range(0X8008988,"T",0X1,3);
	split_sreg_range(0X800898C,"T",0X1,3);
	split_sreg_range(0X80089A0,"T",0X1,3);
	split_sreg_range(0X80089A2,"T",0X1,3);
	split_sreg_range(0X80089A4,"T",0X1,3);
	split_sreg_range(0X80089AC,"T",0X1,3);
	split_sreg_range(0X80089B4,"T",0X1,3);
	split_sreg_range(0X80089CE,"T",0X1,3);
	split_sreg_range(0X8008A38,"T",0X1,3);
	split_sreg_range(0X8008A40,"T",0X1,3);
	split_sreg_range(0X8008A46,"T",0X1,3);
	split_sreg_range(0X8008A5C,"T",0X1,3);
	split_sreg_range(0X8008A72,"T",0X1,3);
	split_sreg_range(0X8008A76,"T",0X1,3);
	split_sreg_range(0X8008A78,"T",0X1,3);
	split_sreg_range(0X8008A8E,"T",0X1,3);
	split_sreg_range(0X8008A9C,"T",0X1,3);
	split_sreg_range(0X8008A9E,"T",0X1,3);
	split_sreg_range(0X8008AAC,"T",0X1,3);
	split_sreg_range(0X8008AB8,"T",0X1,3);
	split_sreg_range(0X8008AC2,"T",0X1,3);
	split_sreg_range(0X8008AC4,"T",0X1,3);
	split_sreg_range(0X8008ACE,"T",0X1,3);
	split_sreg_range(0X8008AD6,"T",0X1,3);
	split_sreg_range(0X8008AE4,"T",0X1,3);
	split_sreg_range(0X8008AE6,"T",0X1,3);
	split_sreg_range(0X8008AF4,"T",0X1,3);
	split_sreg_range(0X8008AFE,"T",0X1,3);
	split_sreg_range(0X8008B02,"T",0X1,3);
	split_sreg_range(0X8008B04,"T",0X1,3);
	split_sreg_range(0X8008B22,"T",0X1,3);
	split_sreg_range(0X8008B36,"T",0X1,3);
	split_sreg_range(0X8008B3A,"T",0X1,3);
	split_sreg_range(0X8008B44,"T",0X1,3);
	split_sreg_range(0X8008B4C,"T",0X1,3);
	split_sreg_range(0X8008B68,"T",0X1,3);
	split_sreg_range(0X8008B72,"T",0X1,3);
	split_sreg_range(0X8008B74,"T",0X1,3);
	split_sreg_range(0X8008B86,"T",0X1,3);
	split_sreg_range(0X8008B8A,"T",0X1,3);
	split_sreg_range(0X8008B90,"T",0X1,3);
	split_sreg_range(0X8008B98,"T",0X1,3);
	split_sreg_range(0X8008BA0,"T",0X1,3);
	split_sreg_range(0X8008BA8,"T",0X1,3);
	split_sreg_range(0X8008BB8,"T",0X1,3);
	split_sreg_range(0X8008BC4,"T",0X1,3);
	split_sreg_range(0X8008BCC,"T",0X1,3);
	split_sreg_range(0X8008BD4,"T",0X1,3);
	split_sreg_range(0X8008C00,"T",0X1,3);
	split_sreg_range(0X8008C0E,"T",0X1,3);
	split_sreg_range(0X8008C12,"T",0X1,3);
	split_sreg_range(0X8008C32,"T",0X1,3);
	split_sreg_range(0X8008C42,"T",0X1,3);
	split_sreg_range(0X8008C48,"T",0X1,3);
	split_sreg_range(0X8008C4C,"T",0X1,3);
	split_sreg_range(0X8008C50,"T",0X1,3);
	split_sreg_range(0X8008C52,"T",0X1,3);
	split_sreg_range(0X8008C56,"T",0X1,3);
	split_sreg_range(0X8008C58,"T",0X1,3);
	split_sreg_range(0X8008C5C,"T",0X1,3);
	split_sreg_range(0X8008C60,"T",0X1,3);
	split_sreg_range(0X8008C66,"T",0X1,3);
	split_sreg_range(0X8008C6C,"T",0X1,3);
	split_sreg_range(0X8008C70,"T",0X1,3);
	split_sreg_range(0X8008C72,"T",0X1,3);
	split_sreg_range(0X8008C74,"T",0X1,3);
	split_sreg_range(0X8008C78,"T",0X1,3);
	split_sreg_range(0X8008C7A,"T",0X1,3);
	split_sreg_range(0X8008C9E,"T",0X1,3);
	split_sreg_range(0X8008CA0,"T",0X1,3);
	split_sreg_range(0X8008CAC,"T",0X1,3);
	split_sreg_range(0X8008CC2,"T",0X1,3);
	split_sreg_range(0X8008CC4,"T",0X1,3);
	split_sreg_range(0X8008CC6,"T",0X1,3);
	split_sreg_range(0X8008CC8,"T",0X1,3);
	split_sreg_range(0X8008CD8,"T",0X1,3);
	split_sreg_range(0X8008CDE,"T",0X1,3);
	split_sreg_range(0X8008CE2,"T",0X1,3);
	split_sreg_range(0X8008CE6,"T",0X1,3);
	split_sreg_range(0X8008CEA,"T",0X1,3);
	split_sreg_range(0X8008CEE,"T",0X1,3);
	split_sreg_range(0X8008CF8,"T",0X1,3);
	split_sreg_range(0X8008D04,"T",0X1,3);
	split_sreg_range(0X8008D2A,"T",0X1,3);
	split_sreg_range(0X8008D38,"T",0X1,3);
	split_sreg_range(0X8008D3C,"T",0X1,3);
	split_sreg_range(0X8008D4C,"T",0X1,3);
	split_sreg_range(0X8008D5C,"T",0X1,3);
	split_sreg_range(0X8008D6C,"T",0X1,3);
	split_sreg_range(0X8008D7C,"T",0X1,3);
	split_sreg_range(0X8008D8C,"T",0X1,3);
	split_sreg_range(0X8008D9C,"T",0X1,3);
	split_sreg_range(0X8008DAA,"T",0X1,3);
	split_sreg_range(0X8008DAC,"T",0X1,3);
	split_sreg_range(0X8008DAE,"T",0X1,3);
	split_sreg_range(0X8008DBE,"T",0X1,3);
	split_sreg_range(0X8008DCE,"T",0X1,3);
	split_sreg_range(0X8008DDE,"T",0X1,3);
	split_sreg_range(0X8008E32,"T",0X1,3);
	split_sreg_range(0X8008E3E,"T",0X1,3);
	split_sreg_range(0X8008E44,"T",0X1,3);
	split_sreg_range(0X8008E48,"T",0X1,3);
	split_sreg_range(0X8008E52,"T",0X1,3);
	split_sreg_range(0X8008E54,"T",0X1,3);
	split_sreg_range(0X8008E58,"T",0X1,3);
	split_sreg_range(0X8008E5C,"T",0X1,3);
	split_sreg_range(0X8008E70,"T",0X1,3);
	split_sreg_range(0X8008E74,"T",0X1,3);
	split_sreg_range(0X8008E7C,"T",0X1,3);
	split_sreg_range(0X8008E7E,"T",0X1,3);
	split_sreg_range(0X8008E8A,"T",0X1,3);
	split_sreg_range(0X8008EA0,"T",0X1,3);
	split_sreg_range(0X8008EA4,"T",0X1,3);
	split_sreg_range(0X8008EAC,"T",0X1,3);
	split_sreg_range(0X8008EBA,"T",0X1,3);
	split_sreg_range(0X8008EE8,"T",0X1,3);
	split_sreg_range(0X8008F36,"T",0X1,3);
	split_sreg_range(0X8008F48,"T",0X1,3);
	split_sreg_range(0X8008F7E,"T",0X1,3);
	split_sreg_range(0X8008FA2,"T",0X1,3);
	split_sreg_range(0X8008FA4,"T",0X1,3);
	split_sreg_range(0X8008FE6,"T",0X1,3);
	split_sreg_range(0X8008FFE,"T",0X1,3);
	split_sreg_range(0X8009016,"T",0X1,3);
	split_sreg_range(0X8009024,"T",0X1,3);
	split_sreg_range(0X800902C,"T",0X1,3);
	split_sreg_range(0X800902E,"T",0X1,3);
	split_sreg_range(0X8009038,"T",0X1,3);
	split_sreg_range(0X8009042,"T",0X1,3);
	split_sreg_range(0X8009048,"T",0X1,3);
	split_sreg_range(0X8009050,"T",0X1,3);
	split_sreg_range(0X8009052,"T",0X1,3);
	split_sreg_range(0X8009054,"T",0X1,3);
	split_sreg_range(0X800905A,"T",0X1,3);
	split_sreg_range(0X8009090,"T",0X1,3);
	split_sreg_range(0X8009092,"T",0X1,3);
	split_sreg_range(0X80090C4,"T",0X1,3);
	split_sreg_range(0X80090C6,"T",0X1,3);
	split_sreg_range(0X80090D0,"T",0X1,3);
	split_sreg_range(0X80090D6,"T",0X1,3);
	split_sreg_range(0X80090DE,"T",0X1,3);
	split_sreg_range(0X80090E0,"T",0X1,3);
	split_sreg_range(0X80090E2,"T",0X1,3);
	split_sreg_range(0X80090E8,"T",0X1,3);
	split_sreg_range(0X800911A,"T",0X1,3);
	split_sreg_range(0X800911C,"T",0X1,3);
	split_sreg_range(0X8009128,"T",0X1,3);
	split_sreg_range(0X800912A,"T",0X1,3);
	split_sreg_range(0X8009136,"T",0X1,3);
	split_sreg_range(0X800918A,"T",0X1,3);
	split_sreg_range(0X8009194,"T",0X1,3);
	split_sreg_range(0X8009196,"T",0X1,3);
	split_sreg_range(0X80091D6,"T",0X1,3);
	split_sreg_range(0X80091DC,"T",0X1,3);
	split_sreg_range(0X80091DE,"T",0X1,3);
	split_sreg_range(0X800920C,"T",0X1,3);
	split_sreg_range(0X800920E,"T",0X1,3);
	split_sreg_range(0X800924A,"T",0X1,3);
	split_sreg_range(0X800924C,"T",0X1,3);
	split_sreg_range(0X800929C,"T",0X1,3);
	split_sreg_range(0X80092B0,"T",0X1,3);
	split_sreg_range(0X80092C4,"T",0X1,3);
	split_sreg_range(0X80092D4,"T",0X1,3);
	split_sreg_range(0X80092D8,"T",0X1,3);
	split_sreg_range(0X80092E6,"T",0X1,3);
	split_sreg_range(0X80092EA,"T",0X1,3);
	split_sreg_range(0X800932E,"T",0X1,3);
	split_sreg_range(0X8009330,"T",0X1,3);
	split_sreg_range(0X8009346,"T",0X1,3);
	split_sreg_range(0X8009348,"T",0X1,3);
	split_sreg_range(0X8009360,"T",0X1,3);
	split_sreg_range(0X80093AA,"T",0X1,3);
	split_sreg_range(0X80093D6,"T",0X1,3);
	split_sreg_range(0X80093E4,"T",0X1,3);
	split_sreg_range(0X80093E6,"T",0X1,3);
	split_sreg_range(0X80093FA,"T",0X1,3);
	split_sreg_range(0X80093FC,"T",0X1,3);
	split_sreg_range(0X8009402,"T",0X1,3);
	split_sreg_range(0X800941A,"T",0X1,3);
	split_sreg_range(0X8009422,"T",0X1,3);
	split_sreg_range(0X8009424,"T",0X1,3);
	split_sreg_range(0X8009434,"T",0X1,3);
	split_sreg_range(0X800944A,"T",0X1,3);
	split_sreg_range(0X800945E,"T",0X1,3);
	split_sreg_range(0X8009472,"T",0X1,3);
	split_sreg_range(0X8009486,"T",0X1,3);
	split_sreg_range(0X800949A,"T",0X1,3);
	split_sreg_range(0X80094AE,"T",0X1,3);
	split_sreg_range(0X80094C2,"T",0X1,3);
	split_sreg_range(0X80094CA,"T",0X1,3);
	split_sreg_range(0X80094CC,"T",0X1,3);
	split_sreg_range(0X80094E2,"T",0X1,3);
	split_sreg_range(0X80094F4,"T",0X1,3);
	split_sreg_range(0X8009502,"T",0X1,3);
	split_sreg_range(0X800952A,"T",0X1,3);
	split_sreg_range(0X800952E,"T",0X1,3);
	split_sreg_range(0X8009530,"T",0X1,3);
	split_sreg_range(0X8009538,"T",0X1,3);
	split_sreg_range(0X8009542,"T",0X1,3);
	split_sreg_range(0X8009568,"T",0X1,3);
	split_sreg_range(0X8009570,"T",0X1,3);
	split_sreg_range(0X8009578,"T",0X1,3);
	split_sreg_range(0X800958A,"T",0X1,3);
	split_sreg_range(0X8009596,"T",0X1,3);
	split_sreg_range(0X80095AA,"T",0X1,3);
	split_sreg_range(0X80095B2,"T",0X1,3);
	split_sreg_range(0X80095B6,"T",0X1,3);
	split_sreg_range(0X80095C0,"T",0X1,3);
	split_sreg_range(0X80095C4,"T",0X1,3);
	split_sreg_range(0X80095D8,"T",0X1,3);
	split_sreg_range(0X80095F4,"T",0X1,3);
	split_sreg_range(0X8009600,"T",0X1,3);
	split_sreg_range(0X8009602,"T",0X1,3);
	split_sreg_range(0X8009622,"T",0X1,3);
	split_sreg_range(0X8009630,"T",0X1,3);
	split_sreg_range(0X8009632,"T",0X1,3);
	split_sreg_range(0X8009636,"T",0X1,3);
	split_sreg_range(0X800963A,"T",0X1,3);
	split_sreg_range(0X8009642,"T",0X1,3);
	split_sreg_range(0X8009646,"T",0X1,3);
	split_sreg_range(0X8009694,"T",0X1,3);
	split_sreg_range(0X800969A,"T",0X1,3);
	split_sreg_range(0X80096A0,"T",0X1,3);
	split_sreg_range(0X80096A6,"T",0X1,3);
	split_sreg_range(0X80096B0,"T",0X1,3);
	split_sreg_range(0X80096C8,"T",0X1,3);
	split_sreg_range(0X8009726,"T",0X1,3);
	split_sreg_range(0X8009728,"T",0X1,3);
	split_sreg_range(0X800972A,"T",0X1,3);
	split_sreg_range(0X8009732,"T",0X1,3);
	split_sreg_range(0X8009744,"T",0X1,3);
	split_sreg_range(0X8009752,"T",0X1,3);
	split_sreg_range(0X8009754,"T",0X1,3);
	split_sreg_range(0X8009758,"T",0X1,3);
	split_sreg_range(0X800975C,"T",0X1,3);
	split_sreg_range(0X8009766,"T",0X1,3);
	split_sreg_range(0X800977A,"T",0X1,3);
	split_sreg_range(0X8009786,"T",0X1,3);
	split_sreg_range(0X8009804,"T",0X1,3);
	split_sreg_range(0X8009806,"T",0X1,3);
	split_sreg_range(0X8009812,"T",0X1,3);
	split_sreg_range(0X8009836,"T",0X1,3);
	split_sreg_range(0X800983A,"T",0X1,3);
	split_sreg_range(0X8009854,"T",0X1,3);
	split_sreg_range(0X800986A,"T",0X1,3);
	split_sreg_range(0X800986E,"T",0X1,3);
	split_sreg_range(0X8009872,"T",0X1,3);
	split_sreg_range(0X8009892,"T",0X1,3);
	split_sreg_range(0X8009896,"T",0X1,3);
	split_sreg_range(0X8009898,"T",0X1,3);
	split_sreg_range(0X800989A,"T",0X1,3);
	split_sreg_range(0X800989C,"T",0X1,3);
	split_sreg_range(0X80098E0,"T",0X1,3);
	split_sreg_range(0X80098EC,"T",0X1,3);
	split_sreg_range(0X80098EE,"T",0X1,3);
	split_sreg_range(0X80098F2,"T",0X1,3);
	split_sreg_range(0X80098FE,"T",0X1,3);
	split_sreg_range(0X8009900,"T",0X1,3);
	split_sreg_range(0X8009904,"T",0X1,3);
	split_sreg_range(0X8009910,"T",0X1,3);
	split_sreg_range(0X8009912,"T",0X1,3);
	split_sreg_range(0X8009916,"T",0X1,3);
	split_sreg_range(0X8009922,"T",0X1,3);
	split_sreg_range(0X8009924,"T",0X1,3);
	split_sreg_range(0X8009928,"T",0X1,3);
	split_sreg_range(0X8009934,"T",0X1,3);
	split_sreg_range(0X8009936,"T",0X1,3);
	split_sreg_range(0X8009968,"T",0X1,3);
	split_sreg_range(0X8009998,"T",0X1,3);
	split_sreg_range(0X80099B6,"T",0X1,3);
	split_sreg_range(0X80099C2,"T",0X1,3);
	split_sreg_range(0X80099CC,"T",0X1,3);
	split_sreg_range(0X80099DE,"T",0X1,3);
	split_sreg_range(0X80099E0,"T",0X1,3);
	split_sreg_range(0X8009A18,"T",0X1,3);
	split_sreg_range(0X8009A40,"T",0X1,3);
	split_sreg_range(0X8009A56,"T",0X1,3);
	split_sreg_range(0X8009A7E,"T",0X1,3);
	split_sreg_range(0X8009A88,"T",0X1,3);
	split_sreg_range(0X8009AAA,"T",0X1,3);
	split_sreg_range(0X8009AD8,"T",0X1,3);
	split_sreg_range(0X8009AE4,"T",0X1,3);
	split_sreg_range(0X8009AE8,"T",0X1,3);
	split_sreg_range(0X8009AF8,"T",0X1,3);
	split_sreg_range(0X8009AFC,"T",0X1,3);
	split_sreg_range(0X8009B12,"T",0X1,3);
	split_sreg_range(0X8009B14,"T",0X1,3);
	split_sreg_range(0X8009B22,"T",0X1,3);
	split_sreg_range(0X8009B24,"T",0X1,3);
	split_sreg_range(0X8009B28,"T",0X1,3);
	split_sreg_range(0X8009B2C,"T",0X1,3);
	split_sreg_range(0X8009B40,"T",0X1,3);
	split_sreg_range(0X8009B44,"T",0X1,3);
	split_sreg_range(0X8009B54,"T",0X1,3);
	split_sreg_range(0X8009B58,"T",0X1,3);
	split_sreg_range(0X8009B82,"T",0X1,3);
	split_sreg_range(0X8009B86,"T",0X1,3);
	split_sreg_range(0X8009B92,"T",0X1,3);
	split_sreg_range(0X8009B96,"T",0X1,3);
	split_sreg_range(0X8009BA6,"T",0X1,3);
	split_sreg_range(0X8009BAA,"T",0X1,3);
	split_sreg_range(0X8009BBC,"T",0X1,3);
	split_sreg_range(0X8009BC4,"T",0X1,3);
	split_sreg_range(0X8009BEE,"T",0X1,3);
	split_sreg_range(0X8009C0C,"T",0X1,3);
	split_sreg_range(0X8009C1A,"T",0X1,3);
	split_sreg_range(0X8009C34,"T",0X1,3);
	split_sreg_range(0X8009C42,"T",0X1,3);
	split_sreg_range(0X8009C56,"T",0X1,3);
	split_sreg_range(0X8009C6A,"T",0X1,3);
	split_sreg_range(0X8009C7E,"T",0X1,3);
	split_sreg_range(0X8009C92,"T",0X1,3);
	split_sreg_range(0X8009C9E,"T",0X1,3);
	split_sreg_range(0X8009CAA,"T",0X1,3);
	split_sreg_range(0X8009CB6,"T",0X1,3);
	split_sreg_range(0X8009CC2,"T",0X1,3);
	split_sreg_range(0X8009CD6,"T",0X1,3);
	split_sreg_range(0X8009CEA,"T",0X1,3);
	split_sreg_range(0X8009CFE,"T",0X1,3);
	split_sreg_range(0X8009D06,"T",0X1,3);
	split_sreg_range(0X8009D12,"T",0X1,3);
	split_sreg_range(0X8009D1E,"T",0X1,3);
	split_sreg_range(0X8009D28,"T",0X1,3);
	split_sreg_range(0X8009D3A,"T",0X1,3);
	split_sreg_range(0X8009D3C,"T",0X1,3);
	split_sreg_range(0X8009D64,"T",0X1,3);
	split_sreg_range(0X8009D6C,"T",0X1,3);
	split_sreg_range(0X8009D80,"T",0X1,3);
	split_sreg_range(0X8009DA4,"T",0X1,3);
	split_sreg_range(0X8009DA8,"T",0X1,3);
	split_sreg_range(0X8009DAE,"T",0X1,3);
	split_sreg_range(0X8009DF0,"T",0X1,3);
	split_sreg_range(0X8009E0C,"T",0X1,3);
	split_sreg_range(0X8009E18,"T",0X1,3);
	split_sreg_range(0X8009E58,"T",0X1,3);
	split_sreg_range(0X8009E84,"T",0X1,3);
	split_sreg_range(0X8009E90,"T",0X1,3);
	split_sreg_range(0X8009ECC,"T",0X1,3);
	split_sreg_range(0X8009EF8,"T",0X1,3);
	split_sreg_range(0X8009F04,"T",0X1,3);
	split_sreg_range(0X8009F44,"T",0X1,3);
	split_sreg_range(0X8009F50,"T",0X1,3);
	split_sreg_range(0X8009F5E,"T",0X1,3);
	split_sreg_range(0X8009F76,"T",0X1,3);
	split_sreg_range(0X8009F86,"T",0X1,3);
	split_sreg_range(0X8009F9E,"T",0X1,3);
	split_sreg_range(0X8009FE8,"T",0X1,3);
	split_sreg_range(0X800A034,"T",0X1,3);
	split_sreg_range(0X800A03E,"T",0X1,3);
	split_sreg_range(0X800A044,"T",0X1,3);
	split_sreg_range(0X800A054,"T",0X1,3);
	split_sreg_range(0X800A096,"T",0X1,3);
	split_sreg_range(0X800A09C,"T",0X1,3);
	split_sreg_range(0X800A0A0,"T",0X1,3);
	split_sreg_range(0X800A0AC,"T",0X1,3);
	split_sreg_range(0X800A11C,"T",0X1,3);
	split_sreg_range(0X800A124,"T",0X1,3);
	split_sreg_range(0X800A134,"T",0X1,3);
	split_sreg_range(0X800A144,"T",0X1,3);
	split_sreg_range(0X800A182,"T",0X1,3);
	split_sreg_range(0X800A18A,"T",0X1,3);
	split_sreg_range(0X800A18E,"T",0X1,3);
	split_sreg_range(0X800A1A2,"T",0X1,3);
	split_sreg_range(0X800A1A6,"T",0X1,3);
	split_sreg_range(0X800A1BA,"T",0X1,3);
	split_sreg_range(0X800A1CC,"T",0X1,3);
	split_sreg_range(0X800A1D4,"T",0X1,3);
	split_sreg_range(0X800A200,"T",0X1,3);
	split_sreg_range(0X800A222,"T",0X1,3);
	split_sreg_range(0X800A28C,"T",0X1,3);
	split_sreg_range(0X800A298,"T",0X1,3);
	split_sreg_range(0X800A29C,"T",0X1,3);
	split_sreg_range(0X800A2AE,"T",0X1,3);
	split_sreg_range(0X800A2B2,"T",0X1,3);
	split_sreg_range(0X800A2B6,"T",0X1,3);
	split_sreg_range(0X800A2C0,"T",0X1,3);
	split_sreg_range(0X800A2C2,"T",0X1,3);
	split_sreg_range(0X800A2C6,"T",0X1,3);
	split_sreg_range(0X800A2DC,"T",0X1,3);
	split_sreg_range(0X800A2DE,"T",0X1,3);
	split_sreg_range(0X800A2EC,"T",0X1,3);
	split_sreg_range(0X800A2F8,"T",0X1,3);
	split_sreg_range(0X800A30A,"T",0X1,3);
	split_sreg_range(0X800A320,"T",0X1,3);
	split_sreg_range(0X800A332,"T",0X1,3);
	split_sreg_range(0X800A338,"T",0X1,3);
	split_sreg_range(0X800A350,"T",0X1,3);
	split_sreg_range(0X800A362,"T",0X1,3);
	split_sreg_range(0X800A386,"T",0X1,3);
	split_sreg_range(0X800A404,"T",0X1,3);
	split_sreg_range(0X800A408,"T",0X1,3);
	split_sreg_range(0X800A418,"T",0X1,3);
	split_sreg_range(0X800A41C,"T",0X1,3);
	split_sreg_range(0X800A42C,"T",0X1,3);
	split_sreg_range(0X800A430,"T",0X1,3);
	split_sreg_range(0X800A440,"T",0X1,3);
	split_sreg_range(0X800A444,"T",0X1,3);
	split_sreg_range(0X800A452,"T",0X1,3);
	split_sreg_range(0X800A598,"T",0X1,3);
	split_sreg_range(0X800A5AE,"T",0X1,3);
	split_sreg_range(0X800A5C4,"T",0X1,3);
	split_sreg_range(0X800A5F4,"T",0X1,3);
	split_sreg_range(0X800A5FA,"T",0X1,3);
	split_sreg_range(0X800A616,"T",0X1,3);
	split_sreg_range(0X800A61A,"T",0X1,3);
	split_sreg_range(0X800A62A,"T",0X1,3);
	split_sreg_range(0X800A62E,"T",0X1,3);
	split_sreg_range(0X800A63E,"T",0X1,3);
	split_sreg_range(0X800A642,"T",0X1,3);
	split_sreg_range(0X800A686,"T",0X1,3);
	split_sreg_range(0X800A6B0,"T",0,3);
	split_sreg_range(0X800A6DE,"T",0X1,3);
	split_sreg_range(0X800A6F4,"T",0X1,3);
	split_sreg_range(0X800A6F6,"T",0X1,3);
	split_sreg_range(0X800A6FC,"T",0X1,3);
	split_sreg_range(0X800A71A,"T",0X1,3);
	split_sreg_range(0X800A726,"T",0X1,3);
	split_sreg_range(0X800A732,"T",0X1,3);
	split_sreg_range(0X800A73E,"T",0X1,3);
	split_sreg_range(0X800A748,"T",0X1,3);
	split_sreg_range(0X800A75A,"T",0X1,3);
	split_sreg_range(0X800A75C,"T",0X1,3);
	split_sreg_range(0X800A7A6,"T",0X1,3);
	split_sreg_range(0X800A7A8,"T",0X1,3);
	split_sreg_range(0X800A7C0,"T",0X1,3);
	split_sreg_range(0X800A7C4,"T",0X1,3);
	split_sreg_range(0X800A7F8,"T",0X1,3);
	split_sreg_range(0X800A804,"T",0X1,3);
	split_sreg_range(0X800A822,"T",0X1,3);
	split_sreg_range(0X800A84C,"T",0X1,3);
	split_sreg_range(0X800A858,"T",0X1,3);
	split_sreg_range(0X800A85C,"T",0X1,3);
	split_sreg_range(0X800A860,"T",0X1,3);
	split_sreg_range(0X800A878,"T",0X1,3);
	split_sreg_range(0X800A882,"T",0X1,3);
	split_sreg_range(0X800A886,"T",0X1,3);
	split_sreg_range(0X800A88A,"T",0X1,3);
	split_sreg_range(0X800A88C,"T",0X1,3);
	split_sreg_range(0X800A890,"T",0X1,3);
	split_sreg_range(0X800A89A,"T",0X1,3);
	split_sreg_range(0X800A89C,"T",0X1,3);
	split_sreg_range(0X800A8CC,"T",0X1,3);
	split_sreg_range(0X800A8D0,"T",0X1,3);
	split_sreg_range(0X800A8F0,"T",0X1,3);
	split_sreg_range(0X800A8F4,"T",0X1,3);
	split_sreg_range(0X800A93E,"T",0X1,3);
	split_sreg_range(0X800A942,"T",0X1,3);
	split_sreg_range(0X800A952,"T",0X1,3);
	split_sreg_range(0X800A956,"T",0X1,3);
	split_sreg_range(0X800A966,"T",0X1,3);
	split_sreg_range(0X800A96A,"T",0X1,3);
	split_sreg_range(0X800A97A,"T",0X1,3);
	split_sreg_range(0X800A97E,"T",0X1,3);
	split_sreg_range(0X800A98E,"T",0X1,3);
	split_sreg_range(0X800A992,"T",0X1,3);
	split_sreg_range(0X800A9B2,"T",0X1,3);
	split_sreg_range(0X800A9B6,"T",0X1,3);
	split_sreg_range(0X800A9C6,"T",0X1,3);
	split_sreg_range(0X800A9CE,"T",0X1,3);
	split_sreg_range(0X800A9EA,"T",0X1,3);
	split_sreg_range(0X800AA00,"T",0X1,3);
	split_sreg_range(0X800AA04,"T",0X1,3);
	split_sreg_range(0X800AA08,"T",0X1,3);
	split_sreg_range(0X800AA2C,"T",0X1,3);
	split_sreg_range(0X800AA34,"T",0X1,3);
	split_sreg_range(0X800AA50,"T",0X1,3);
	split_sreg_range(0X800AA64,"T",0X1,3);
	split_sreg_range(0X800AA86,"T",0X1,3);
	split_sreg_range(0X800AA8A,"T",0X1,3);
	split_sreg_range(0X800AA94,"T",0X1,3);
	split_sreg_range(0X800AAB4,"T",0X1,3);
	split_sreg_range(0X800AAB8,"T",0X1,3);
	split_sreg_range(0X800AAC4,"T",0X1,3);
	split_sreg_range(0X800AAE8,"T",0X1,3);
	split_sreg_range(0X800AAEC,"T",0X1,3);
	split_sreg_range(0X800AAF8,"T",0X1,3);
	split_sreg_range(0X800AB1A,"T",0X1,3);
	split_sreg_range(0X800AB26,"T",0X1,3);
	split_sreg_range(0X800AB48,"T",0X1,3);
	split_sreg_range(0X800AB4C,"T",0X1,3);
	split_sreg_range(0X800AB58,"T",0X1,3);
	split_sreg_range(0X800AB7A,"T",0X1,3);
	split_sreg_range(0X800AB86,"T",0X1,3);
	split_sreg_range(0X800ABBC,"T",0X1,3);
	split_sreg_range(0X800ABCA,"T",0X1,3);
	split_sreg_range(0X800ABE0,"T",0X1,3);
	split_sreg_range(0X800ABE4,"T",0X1,3);
	split_sreg_range(0X800AC1A,"T",0X1,3);
	split_sreg_range(0X800AC28,"T",0X1,3);
	split_sreg_range(0X800AC3E,"T",0X1,3);
	split_sreg_range(0X800AC42,"T",0X1,3);
	split_sreg_range(0X800AC78,"T",0X1,3);
	split_sreg_range(0X800AC86,"T",0X1,3);
	split_sreg_range(0X800AC9C,"T",0X1,3);
	split_sreg_range(0X800ACA0,"T",0X1,3);
	split_sreg_range(0X800AEA4,"T",0X1,3);
	split_sreg_range(0X800AEF8,"T",0X1,3);
	split_sreg_range(0X800AEFA,"T",0X1,3);
	split_sreg_range(0X800AF64,"T",0X1,3);
	split_sreg_range(0X800B0A4,"T",0X1,3);
	split_sreg_range(0X800B0D4,"T",0X1,3);
	split_sreg_range(0X800B0E0,"T",0X1,3);
	split_sreg_range(0X800B0EC,"T",0X1,3);
	split_sreg_range(0X800B110,"T",0X1,3);
	split_sreg_range(0X800B116,"T",0X1,3);
	split_sreg_range(0X800B122,"T",0X1,3);
	split_sreg_range(0X800B13A,"T",0X1,3);
	split_sreg_range(0X800B13E,"T",0X1,3);
	split_sreg_range(0X800B142,"T",0X1,3);
	split_sreg_range(0X800B14C,"T",0X1,3);
	split_sreg_range(0X800B158,"T",0X1,3);
	split_sreg_range(0X800B166,"T",0X1,3);
	split_sreg_range(0X800B180,"T",0X1,3);
	split_sreg_range(0X800B186,"T",0X1,3);
	split_sreg_range(0X800B192,"T",0X1,3);
	split_sreg_range(0X800B1AE,"T",0X1,3);
	split_sreg_range(0X800B1BA,"T",0X1,3);
	split_sreg_range(0X800B1DE,"T",0X1,3);
	split_sreg_range(0X800B1E4,"T",0X1,3);
	split_sreg_range(0X800B1F0,"T",0X1,3);
	split_sreg_range(0X800B208,"T",0X1,3);
	split_sreg_range(0X800B23C,"T",0X1,3);
	split_sreg_range(0X800B254,"T",0X1,3);
	split_sreg_range(0X800B26A,"T",0X1,3);
	split_sreg_range(0X800B27E,"T",0X1,3);
	split_sreg_range(0X800B282,"T",0X1,3);
	split_sreg_range(0X800B28A,"T",0X1,3);
	split_sreg_range(0X800B292,"T",0X1,3);
	split_sreg_range(0X800B298,"T",0X1,3);
	split_sreg_range(0X800B2AA,"T",0X1,3);
	split_sreg_range(0X800B2B6,"T",0X1,3);
	split_sreg_range(0X800B2D8,"T",0X1,3);
	split_sreg_range(0X800B2EA,"T",0X1,3);
	split_sreg_range(0X800B2F6,"T",0X1,3);
	split_sreg_range(0X800B2FC,"T",0X1,3);
	split_sreg_range(0X800B302,"T",0X1,3);
	split_sreg_range(0X800B30A,"T",0X1,3);
	split_sreg_range(0X800B31C,"T",0X1,3);
	split_sreg_range(0X800B3CE,"T",0X1,3);
	split_sreg_range(0X800B3DE,"T",0X1,3);
	split_sreg_range(0X800B3EC,"T",0X1,3);
	split_sreg_range(0X800B41C,"T",0X1,3);
	split_sreg_range(0X800B41E,"T",0X1,3);
	split_sreg_range(0X800B468,"T",0X1,3);
	split_sreg_range(0X800B476,"T",0X1,3);
	split_sreg_range(0X800B482,"T",0X1,3);
	split_sreg_range(0X800B49C,"T",0X1,3);
	split_sreg_range(0X800B4BC,"T",0X1,3);
	split_sreg_range(0X800B4CA,"T",0X1,3);
	split_sreg_range(0X800B4E2,"T",0X1,3);
	split_sreg_range(0X800B4E6,"T",0X1,3);
	split_sreg_range(0X800B500,"T",0X1,3);
	split_sreg_range(0X800B506,"T",0X1,3);
	split_sreg_range(0X800B50E,"T",0X1,3);
	split_sreg_range(0X800B51E,"T",0X1,3);
	split_sreg_range(0X800B526,"T",0X1,3);
	split_sreg_range(0X800B52A,"T",0X1,3);
	split_sreg_range(0X800B536,"T",0X1,3);
	split_sreg_range(0X800B5E8,"T",0X1,3);
	split_sreg_range(0X800B5F6,"T",0X1,3);
	split_sreg_range(0X800B60C,"T",0X1,3);
	split_sreg_range(0X800B64A,"T",0X1,3);
	split_sreg_range(0X800B658,"T",0X1,3);
	split_sreg_range(0X800B666,"T",0X1,3);
	split_sreg_range(0X800B682,"T",0X1,3);
	split_sreg_range(0X800B686,"T",0X1,3);
	split_sreg_range(0X800B688,"T",0X1,3);
	split_sreg_range(0X800B69A,"T",0X1,3);
	split_sreg_range(0X800B69E,"T",0X1,3);
	split_sreg_range(0X800B6A0,"T",0X1,3);
	split_sreg_range(0X800B6AC,"T",0X1,3);
	split_sreg_range(0X800B6DE,"T",0X1,3);
	split_sreg_range(0X800B6E4,"T",0X1,3);
	split_sreg_range(0X800B6EC,"T",0X1,3);
	split_sreg_range(0X800B6F0,"T",0X1,3);
	split_sreg_range(0X800B6F4,"T",0X1,3);
	split_sreg_range(0X800B6F6,"T",0X1,3);
	split_sreg_range(0X800B6FA,"T",0X1,3);
	split_sreg_range(0X800B70C,"T",0X1,3);
	split_sreg_range(0X800B73E,"T",0X1,3);
	split_sreg_range(0X800B74C,"T",0X1,3);
	split_sreg_range(0X800B758,"T",0X1,3);
	split_sreg_range(0X800B75A,"T",0X1,3);
	split_sreg_range(0X800B768,"T",0X1,3);
	split_sreg_range(0X800B774,"T",0X1,3);
	split_sreg_range(0X800B776,"T",0X1,3);
	split_sreg_range(0X800B784,"T",0X1,3);
	split_sreg_range(0X800B790,"T",0X1,3);
	split_sreg_range(0X800B79C,"T",0X1,3);
	split_sreg_range(0X800B7CC,"T",0X1,3);
	split_sreg_range(0X800B7DA,"T",0X1,3);
	split_sreg_range(0X800B7FE,"T",0X1,3);
	split_sreg_range(0X800B808,"T",0X1,3);
	split_sreg_range(0X800B826,"T",0X1,3);
	split_sreg_range(0X800B830,"T",0X1,3);
	split_sreg_range(0X800B856,"T",0X1,3);
	split_sreg_range(0X800B858,"T",0X1,3);
	split_sreg_range(0X800B8A2,"T",0X1,3);
	split_sreg_range(0X800B8A8,"T",0X1,3);
	split_sreg_range(0X800B8B4,"T",0X1,3);
	split_sreg_range(0X800B8C0,"T",0X1,3);
	split_sreg_range(0X800B8E4,"T",0X1,3);
	split_sreg_range(0X800B8F2,"T",0X1,3);
	split_sreg_range(0X800B90E,"T",0X1,3);
	split_sreg_range(0X800B922,"T",0X1,3);
	split_sreg_range(0X800B92C,"T",0X1,3);
	split_sreg_range(0X800B942,"T",0X1,3);
	split_sreg_range(0X800B95E,"T",0X1,3);
	split_sreg_range(0X800B972,"T",0X1,3);
	split_sreg_range(0X800B978,"T",0X1,3);
	split_sreg_range(0X800B97A,"T",0X1,3);
	split_sreg_range(0X800BA14,"T",0X1,3);
	split_sreg_range(0X800BA26,"T",0X1,3);
	split_sreg_range(0X800BA28,"T",0X1,3);
	split_sreg_range(0X800BA2C,"T",0X1,3);
	split_sreg_range(0X800BA30,"T",0X1,3);
	split_sreg_range(0X800BA42,"T",0X1,3);
	split_sreg_range(0X800BA60,"T",0X1,3);
	split_sreg_range(0X800BA76,"T",0X1,3);
	split_sreg_range(0X800BA78,"T",0X1,3);
	split_sreg_range(0X800BAC8,"T",0X1,3);
	split_sreg_range(0X800BACE,"T",0X1,3);
	split_sreg_range(0X800BAD4,"T",0X1,3);
	split_sreg_range(0X800BAF4,"T",0X1,3);
	split_sreg_range(0X800BB14,"T",0X1,3);
	split_sreg_range(0X800BB1C,"T",0X1,3);
	split_sreg_range(0X800BB30,"T",0X1,3);
	split_sreg_range(0X800BB42,"T",0X1,3);
	split_sreg_range(0X800BB52,"T",0X1,3);
	split_sreg_range(0X800BB5E,"T",0X1,3);
	split_sreg_range(0X800BB6E,"T",0X1,3);
	split_sreg_range(0X800BB7C,"T",0X1,3);
	split_sreg_range(0X800BB7E,"T",0X1,3);
	split_sreg_range(0X800BB84,"T",0X1,3);
	split_sreg_range(0X800BBE0,"T",0X1,3);
	split_sreg_range(0X800BBF2,"T",0X1,3);
	split_sreg_range(0X800BC06,"T",0X1,3);
	split_sreg_range(0X800BC12,"T",0X1,3);
	split_sreg_range(0X800BC16,"T",0X1,3);
	split_sreg_range(0X800BC1E,"T",0X1,3);
	split_sreg_range(0X800BC26,"T",0X1,3);
	split_sreg_range(0X800BC2C,"T",0X1,3);
	split_sreg_range(0X800BC5C,"T",0X1,3);
	split_sreg_range(0X800BC62,"T",0X1,3);
	split_sreg_range(0X800BC70,"T",0X1,3);
	split_sreg_range(0X800BC7E,"T",0X1,3);
	split_sreg_range(0X800BC82,"T",0X1,3);
	split_sreg_range(0X800BCA0,"T",0X1,3);
	split_sreg_range(0X800BCAA,"T",0X1,3);
	split_sreg_range(0X800BCB4,"T",0X1,3);
	split_sreg_range(0X800BCD2,"T",0X1,3);
	split_sreg_range(0X800BCDA,"T",0X1,3);
	split_sreg_range(0X800BCE2,"T",0X1,3);
	split_sreg_range(0X800BCEA,"T",0X1,3);
	split_sreg_range(0X800BD04,"T",0X1,3);
	split_sreg_range(0X800BD1E,"T",0X1,3);
	split_sreg_range(0X800BD22,"T",0X1,3);
	split_sreg_range(0X800BD30,"T",0X1,3);
	split_sreg_range(0X800BD50,"T",0X1,3);
	split_sreg_range(0X800BD70,"T",0X1,3);
	split_sreg_range(0X800BD74,"T",0X1,3);
	split_sreg_range(0X800BD80,"T",0X1,3);
	split_sreg_range(0X800BD82,"T",0X1,3);
	split_sreg_range(0X800BD98,"T",0X1,3);
	split_sreg_range(0X800BDEA,"T",0X1,3);
	split_sreg_range(0X800BDFA,"T",0X1,3);
	split_sreg_range(0X800BE08,"T",0X1,3);
	split_sreg_range(0X800BE20,"T",0X1,3);
	split_sreg_range(0X800BE36,"T",0X1,3);
	split_sreg_range(0X800BE7E,"T",0X1,3);
	split_sreg_range(0X800BE84,"T",0X1,3);
	split_sreg_range(0X800BEC8,"T",0X1,3);
	split_sreg_range(0X800BEDC,"T",0X1,3);
	split_sreg_range(0X800BEE6,"T",0X1,3);
	split_sreg_range(0X800BEEA,"T",0X1,3);
	split_sreg_range(0X800BEF4,"T",0X1,3);
	split_sreg_range(0X800BEF8,"T",0X1,3);
	split_sreg_range(0X800BEFC,"T",0X1,3);
	split_sreg_range(0X800BF0C,"T",0X1,3);
	split_sreg_range(0X800BF14,"T",0X1,3);
	split_sreg_range(0X800BF16,"T",0X1,3);
	split_sreg_range(0X800BF18,"T",0X1,3);
	split_sreg_range(0X800BF2C,"T",0X1,3);
	split_sreg_range(0X800BF36,"T",0X1,3);
	split_sreg_range(0X800BF3A,"T",0X1,3);
	split_sreg_range(0X800BF44,"T",0X1,3);
	split_sreg_range(0X800BF48,"T",0X1,3);
	split_sreg_range(0X800BF4C,"T",0X1,3);
	split_sreg_range(0X800BF5C,"T",0X1,3);
	split_sreg_range(0X800BF64,"T",0X1,3);
	split_sreg_range(0X800BF66,"T",0X1,3);
	split_sreg_range(0X800BF68,"T",0X1,3);
	split_sreg_range(0X800BF80,"T",0X1,3);
	split_sreg_range(0X800BF8A,"T",0X1,3);
	split_sreg_range(0X800BF8E,"T",0X1,3);
	split_sreg_range(0X800BFAC,"T",0X1,3);
	split_sreg_range(0X800BFB0,"T",0X1,3);
	split_sreg_range(0X800BFB4,"T",0X1,3);
	split_sreg_range(0X800BFC4,"T",0X1,3);
	split_sreg_range(0X800BFE0,"T",0X1,3);
	split_sreg_range(0X800BFE4,"T",0X1,3);
	split_sreg_range(0X800BFF4,"T",0X1,3);
	split_sreg_range(0X800BFFA,"T",0X1,3);
	split_sreg_range(0X800C010,"T",0X1,3);
	split_sreg_range(0X800C012,"T",0X1,3);
	split_sreg_range(0X800C014,"T",0X1,3);
	split_sreg_range(0X800C020,"T",0X1,3);
	split_sreg_range(0X800C054,"T",0X1,3);
	split_sreg_range(0X800C068,"T",0X1,3);
	split_sreg_range(0X800C074,"T",0X1,3);
	split_sreg_range(0X800C07E,"T",0X1,3);
	split_sreg_range(0X800C082,"T",0X1,3);
	split_sreg_range(0X800C09A,"T",0X1,3);
	split_sreg_range(0X800C09E,"T",0X1,3);
	split_sreg_range(0X800C0A2,"T",0X1,3);
	split_sreg_range(0X800C0AE,"T",0X1,3);
	split_sreg_range(0X800C0BC,"T",0X1,3);
	split_sreg_range(0X800C10C,"T",0X1,3);
	split_sreg_range(0X800C112,"T",0X1,3);
	split_sreg_range(0X800C122,"T",0X1,3);
	split_sreg_range(0X800C128,"T",0X1,3);
	split_sreg_range(0X800C138,"T",0X1,3);
	split_sreg_range(0X800C13E,"T",0X1,3);
	split_sreg_range(0X800C142,"T",0X1,3);
	split_sreg_range(0X800C154,"T",0X1,3);
	split_sreg_range(0X800C170,"T",0X1,3);
	split_sreg_range(0X800C180,"T",0X1,3);
	split_sreg_range(0X800C192,"T",0X1,3);
	split_sreg_range(0X800C194,"T",0X1,3);
	split_sreg_range(0X800C1DC,"T",0X1,3);
	split_sreg_range(0X800C1E8,"T",0X1,3);
	split_sreg_range(0X800C1F8,"T",0X1,3);
	split_sreg_range(0X800C206,"T",0X1,3);
	split_sreg_range(0X800C222,"T",0X1,3);
	split_sreg_range(0X800C22A,"T",0X1,3);
	split_sreg_range(0X800C24C,"T",0X1,3);
	split_sreg_range(0X800C264,"T",0X1,3);
	split_sreg_range(0X800C274,"T",0X1,3);
	split_sreg_range(0X800C292,"T",0X1,3);
	split_sreg_range(0X800C294,"T",0X1,3);
	split_sreg_range(0X800C2AC,"T",0X1,3);
	split_sreg_range(0X800C2B8,"T",0X1,3);
	split_sreg_range(0X800C2BC,"T",0X1,3);
	split_sreg_range(0X800C2D8,"T",0X1,3);
	split_sreg_range(0X800C2E6,"T",0X1,3);
	split_sreg_range(0X800C2EC,"T",0X1,3);
	split_sreg_range(0X800C2EE,"T",0X1,3);
	split_sreg_range(0X800C2F0,"T",0X1,3);
	split_sreg_range(0X800C306,"T",0X1,3);
	split_sreg_range(0X800C310,"T",0X1,3);
	split_sreg_range(0X800C320,"T",0X1,3);
	split_sreg_range(0X800C336,"T",0X1,3);
	split_sreg_range(0X800C33A,"T",0X1,3);
	split_sreg_range(0X800C34A,"T",0X1,3);
	split_sreg_range(0X800C374,"T",0X1,3);
	split_sreg_range(0X800C3BC,"T",0X1,3);
	split_sreg_range(0X800C3D4,"T",0X1,3);
	split_sreg_range(0X800C3F4,"T",0X1,3);
	split_sreg_range(0X800C40C,"T",0X1,3);
	split_sreg_range(0X800C412,"T",0X1,3);
	split_sreg_range(0X800C43A,"T",0X1,3);
	split_sreg_range(0X800C440,"T",0X1,3);
	split_sreg_range(0X800C45C,"T",0X1,3);
	split_sreg_range(0X800C464,"T",0X1,3);
	split_sreg_range(0X800C476,"T",0X1,3);
	split_sreg_range(0X800C47E,"T",0X1,3);
	split_sreg_range(0X800C48E,"T",0X1,3);
	split_sreg_range(0X800C492,"T",0X1,3);
	split_sreg_range(0X800C49A,"T",0X1,3);
	split_sreg_range(0X800C4B4,"T",0X1,3);
	split_sreg_range(0X800C6D8,"T",0X1,3);
	split_sreg_range(0X800C8E8,"T",0X1,3);
	split_sreg_range(0X800CC04,"T",0X1,3);
	split_sreg_range(0X800CC08,"T",0X1,3);
	split_sreg_range(0X800CC4A,"T",0X1,3);
	split_sreg_range(0X800CC76,"T",0X1,3);
	split_sreg_range(0X800CCA4,"T",0X1,3);
	split_sreg_range(0X800CCCC,"T",0X1,3);
	split_sreg_range(0X800CCD8,"T",0X1,3);
	split_sreg_range(0X800CCE2,"T",0X1,3);
	split_sreg_range(0X800CD10,"T",0X1,3);
	split_sreg_range(0X800CD16,"T",0X1,3);
	split_sreg_range(0X800CD3E,"T",0X1,3);
	split_sreg_range(0X800CD4C,"T",0X1,3);
	split_sreg_range(0X800CD5C,"T",0X1,3);
	split_sreg_range(0X800CD92,"T",0X1,3);
	split_sreg_range(0X800CDC2,"T",0X1,3);
	split_sreg_range(0X800CDC8,"T",0X1,3);
	split_sreg_range(0X800CDE2,"T",0X1,3);
	split_sreg_range(0X800CE14,"T",0X1,3);
	split_sreg_range(0X800CE48,"T",0X1,3);
	split_sreg_range(0X800CE56,"T",0X1,3);
	split_sreg_range(0X800CE6C,"T",0X1,3);
	split_sreg_range(0X800CE76,"T",0X1,3);
	split_sreg_range(0X800CE9A,"T",0X1,3);
	split_sreg_range(0X800CEBE,"T",0X1,3);
	split_sreg_range(0X800CEF6,"T",0X1,3);
	split_sreg_range(0X800CEF8,"T",0X1,3);
	split_sreg_range(0X800CF00,"T",0X1,3);
	split_sreg_range(0X800CF32,"T",0X1,3);
	split_sreg_range(0X800CF34,"T",0X1,3);
	split_sreg_range(0X800CF48,"T",0X1,3);
	split_sreg_range(0X800CF86,"T",0X1,3);
	split_sreg_range(0X800CF9E,"T",0X1,3);
	split_sreg_range(0X800CFD0,"T",0X1,3);
	split_sreg_range(0X800CFF4,"T",0X1,3);
	split_sreg_range(0X800D004,"T",0X1,3);
	split_sreg_range(0X800D008,"T",0X1,3);
	split_sreg_range(0X800D00A,"T",0X1,3);
	split_sreg_range(0X800D00E,"T",0X1,3);
	split_sreg_range(0X800D010,"T",0X1,3);
	split_sreg_range(0X800D026,"T",0X1,3);
	split_sreg_range(0X800D02A,"T",0X1,3);
	split_sreg_range(0X800D032,"T",0X1,3);
	split_sreg_range(0X800D03C,"T",0X1,3);
	split_sreg_range(0X800D044,"T",0X1,3);
	split_sreg_range(0X800D05C,"T",0X1,3);
	split_sreg_range(0X800D060,"T",0X1,3);
	split_sreg_range(0X800D068,"T",0X1,3);
	split_sreg_range(0X800D06C,"T",0X1,3);
	split_sreg_range(0X800D06E,"T",0X1,3);
	split_sreg_range(0X800D072,"T",0X1,3);
	split_sreg_range(0X800D07C,"T",0X1,3);
	split_sreg_range(0X800D084,"T",0X1,3);
	split_sreg_range(0X800D09A,"T",0X1,3);
	split_sreg_range(0X800D09E,"T",0X1,3);
	split_sreg_range(0X800D0A6,"T",0X1,3);
	split_sreg_range(0X800D0AA,"T",0X1,3);
	split_sreg_range(0X800D0AE,"T",0X1,3);
	split_sreg_range(0X800D0B0,"T",0X1,3);
	split_sreg_range(0X800D0C4,"T",0X1,3);
	split_sreg_range(0X800D0F0,"T",0X1,3);
	split_sreg_range(0X800D0FC,"T",0X1,3);
	split_sreg_range(0X800D108,"T",0X1,3);
	split_sreg_range(0X800D112,"T",0X1,3);
	split_sreg_range(0X800D12E,"T",0X1,3);
	split_sreg_range(0X800D13E,"T",0X1,3);
	split_sreg_range(0X800D142,"T",0X1,3);
	split_sreg_range(0X800D144,"T",0X1,3);
	split_sreg_range(0X800D148,"T",0X1,3);
	split_sreg_range(0X800D14A,"T",0X1,3);
	split_sreg_range(0X800D160,"T",0X1,3);
	split_sreg_range(0X800D164,"T",0X1,3);
	split_sreg_range(0X800D16C,"T",0X1,3);
	split_sreg_range(0X800D170,"T",0X1,3);
	split_sreg_range(0X800D174,"T",0X1,3);
	split_sreg_range(0X800D17A,"T",0X1,3);
	split_sreg_range(0X800D182,"T",0X1,3);
	split_sreg_range(0X800D19A,"T",0X1,3);
	split_sreg_range(0X800D19E,"T",0X1,3);
	split_sreg_range(0X800D1A6,"T",0X1,3);
	split_sreg_range(0X800D1AA,"T",0X1,3);
	split_sreg_range(0X800D1AE,"T",0X1,3);
	split_sreg_range(0X800D1B6,"T",0X1,3);
	split_sreg_range(0X800D1BE,"T",0X1,3);
	split_sreg_range(0X800D1DA,"T",0X1,3);
	split_sreg_range(0X800D1EA,"T",0X1,3);
	split_sreg_range(0X800D1FC,"T",0X1,3);
	split_sreg_range(0X800D206,"T",0X1,3);
	split_sreg_range(0X800D238,"T",0X1,3);
	split_sreg_range(0X800D23C,"T",0X1,3);
	split_sreg_range(0X800D240,"T",0X1,3);
	split_sreg_range(0X800D248,"T",0X1,3);
	split_sreg_range(0X800D25E,"T",0X1,3);
	split_sreg_range(0X800D262,"T",0X1,3);
	split_sreg_range(0X800D26A,"T",0X1,3);
	split_sreg_range(0X800D26E,"T",0X1,3);
	split_sreg_range(0X800D272,"T",0X1,3);
	split_sreg_range(0X800D278,"T",0X1,3);
	split_sreg_range(0X800D28C,"T",0X1,3);
	split_sreg_range(0X800D2B8,"T",0X1,3);
	split_sreg_range(0X800D2BC,"T",0X1,3);
	split_sreg_range(0X800D2C6,"T",0X1,3);
	split_sreg_range(0X800D2D8,"T",0X1,3);
	split_sreg_range(0X800D2E0,"T",0X1,3);
	split_sreg_range(0X800D2E8,"T",0X1,3);
	split_sreg_range(0X800D308,"T",0X1,3);
	split_sreg_range(0X800D318,"T",0X1,3);
	split_sreg_range(0X800D354,"T",0X1,3);
	split_sreg_range(0X800D35E,"T",0X1,3);
	split_sreg_range(0X800D384,"T",0X1,3);
	split_sreg_range(0X800D39E,"T",0X1,3);
	split_sreg_range(0X800D3D0,"T",0X1,3);
	split_sreg_range(0X800D3DC,"T",0X1,3);
	split_sreg_range(0X800D3EE,"T",0X1,3);
	split_sreg_range(0X800D3F8,"T",0X1,3);
	split_sreg_range(0X800D3FE,"T",0X1,3);
	split_sreg_range(0X800D400,"T",0X1,3);
	split_sreg_range(0X800D526,"T",0X1,3);
	split_sreg_range(0X800D530,"T",0X1,3);
	split_sreg_range(0X800D540,"T",0X1,3);
	split_sreg_range(0X800D554,"T",0X1,3);
	split_sreg_range(0X800D568,"T",0X1,3);
	split_sreg_range(0X800D57C,"T",0X1,3);
	split_sreg_range(0X800D590,"T",0X1,3);
	split_sreg_range(0X800D5A4,"T",0X1,3);
	split_sreg_range(0X800D5B8,"T",0X1,3);
	split_sreg_range(0X800D5CC,"T",0X1,3);
	split_sreg_range(0X800D5E0,"T",0X1,3);
	split_sreg_range(0X800D5EA,"T",0X1,3);
	split_sreg_range(0X800D6AC,"T",0X1,3);
	split_sreg_range(0X800D6B6,"T",0X1,3);
	split_sreg_range(0X800D6C6,"T",0X1,3);
	split_sreg_range(0X800D6DA,"T",0X1,3);
	split_sreg_range(0X800D6EE,"T",0X1,3);
	split_sreg_range(0X800D708,"T",0X1,3);
	split_sreg_range(0X800D71C,"T",0X1,3);
	split_sreg_range(0X800D730,"T",0X1,3);
	split_sreg_range(0X800D744,"T",0X1,3);
	split_sreg_range(0X800D758,"T",0X1,3);
	split_sreg_range(0X800D76C,"T",0X1,3);
	split_sreg_range(0X800D776,"T",0X1,3);
	split_sreg_range(0X800D7A4,"T",0X1,3);
	split_sreg_range(0X800D7C6,"T",0X1,3);
	split_sreg_range(0X800D7D0,"T",0X1,3);
	split_sreg_range(0X800D7D4,"T",0X1,3);
	split_sreg_range(0X800D7D6,"T",0X1,3);
	split_sreg_range(0X800D800,"T",0X1,3);
	split_sreg_range(0X800D804,"T",0X1,3);
	split_sreg_range(0X800D806,"T",0X1,3);
	split_sreg_range(0X800D812,"T",0X1,3);
	split_sreg_range(0X800D82C,"T",0X1,3);
	split_sreg_range(0X800D856,"T",0X1,3);
	split_sreg_range(0X800D85E,"T",0X1,3);
	split_sreg_range(0X800D866,"T",0X1,3);
	split_sreg_range(0X800D86E,"T",0X1,3);
	split_sreg_range(0X800D87E,"T",0X1,3);
	split_sreg_range(0X800D88C,"T",0X1,3);
	split_sreg_range(0X800D898,"T",0X1,3);
	split_sreg_range(0X800D8C6,"T",0X1,3);
	split_sreg_range(0X800D8DE,"T",0X1,3);
	split_sreg_range(0X800D90C,"T",0X1,3);
	split_sreg_range(0X800D910,"T",0X1,3);
	split_sreg_range(0X800D950,"T",0X1,3);
	split_sreg_range(0X800D992,"T",0X1,3);
	split_sreg_range(0X800D99A,"T",0X1,3);
	split_sreg_range(0X800D9CC,"T",0X1,3);
	split_sreg_range(0X800D9DC,"T",0X1,3);
	split_sreg_range(0X800D9EA,"T",0X1,3);
	split_sreg_range(0X800D9EE,"T",0X1,3);
	split_sreg_range(0X800DA1C,"T",0X1,3);
	split_sreg_range(0X800DA20,"T",0X1,3);
	split_sreg_range(0X800DA32,"T",0X1,3);
	split_sreg_range(0X800DA34,"T",0X1,3);
	split_sreg_range(0X800DA64,"T",0X1,3);
	split_sreg_range(0X800DA74,"T",0X1,3);
	split_sreg_range(0X800DA78,"T",0X1,3);
	split_sreg_range(0X800DA8A,"T",0X1,3);
	split_sreg_range(0X800DA8E,"T",0X1,3);
	split_sreg_range(0X800DAA2,"T",0X1,3);
	split_sreg_range(0X800DAC4,"T",0X1,3);
	split_sreg_range(0X800DB00,"T",0X1,3);
	split_sreg_range(0X800DB70,"T",0X1,3);
	split_sreg_range(0X800DBE0,"T",0X1,3);
	split_sreg_range(0X800DBE6,"T",0X1,3);
	split_sreg_range(0X800DBEA,"T",0X1,3);
	split_sreg_range(0X800DC12,"T",0X1,3);
	split_sreg_range(0X800DC22,"T",0X1,3);
	split_sreg_range(0X800DC36,"T",0X1,3);
	split_sreg_range(0X800DC3C,"T",0X1,3);
	split_sreg_range(0X800DC48,"T",0X1,3);
	split_sreg_range(0X800DC56,"T",0X1,3);
	split_sreg_range(0X800DC62,"T",0X1,3);
	split_sreg_range(0X800DC70,"T",0X1,3);
	split_sreg_range(0X800DC96,"T",0X1,3);
	split_sreg_range(0X800DD18,"T",0X1,3);
	split_sreg_range(0X800DD1A,"T",0X1,3);
	split_sreg_range(0X800DD1C,"T",0X1,3);
	split_sreg_range(0X800DD1E,"T",0X1,3);
	split_sreg_range(0X800DD20,"T",0X1,3);
	split_sreg_range(0X800DD22,"T",0X1,3);
	split_sreg_range(0X800DD24,"T",0X1,3);
	split_sreg_range(0X800DD26,"T",0X1,3);
	split_sreg_range(0X800DD28,"T",0X1,3);
	split_sreg_range(0X800DD3E,"T",0X1,3);
	split_sreg_range(0X800DD56,"T",0X1,3);
	split_sreg_range(0X800DDA2,"T",0X1,3);
	split_sreg_range(0X800DDB8,"T",0X1,3);
	split_sreg_range(0X800DDC4,"T",0X1,3);
	split_sreg_range(0X800DDC8,"T",0X1,3);
	split_sreg_range(0X800DDFA,"T",0X1,3);
	split_sreg_range(0X800DE12,"T",0X1,3);
	split_sreg_range(0X800DE16,"T",0X1,3);
	split_sreg_range(0X800DE1A,"T",0X1,3);
	split_sreg_range(0X800DE3A,"T",0X1,3);
	split_sreg_range(0X800DE3E,"T",0X1,3);
	split_sreg_range(0X800DE40,"T",0X1,3);
	split_sreg_range(0X800DE42,"T",0X1,3);
	split_sreg_range(0X800DE44,"T",0X1,3);
	split_sreg_range(0X800DE7C,"T",0X1,3);
	split_sreg_range(0X800DE86,"T",0X1,3);
	split_sreg_range(0X800DEA8,"T",0X1,3);
	split_sreg_range(0X800DEAC,"T",0X1,3);
	split_sreg_range(0X800DEAE,"T",0X1,3);
	split_sreg_range(0X800DEB8,"T",0X1,3);
	split_sreg_range(0X800DECA,"T",0X1,3);
	split_sreg_range(0X800DED2,"T",0X1,3);
	split_sreg_range(0X800DEEE,"T",0X1,3);
	split_sreg_range(0X800DEF2,"T",0X1,3);
	split_sreg_range(0X800DEF4,"T",0X1,3);
	split_sreg_range(0X800DEFE,"T",0X1,3);
	split_sreg_range(0X800DF06,"T",0X1,3);
	split_sreg_range(0X800DF10,"T",0X1,3);
	split_sreg_range(0X800DF2E,"T",0X1,3);
	split_sreg_range(0X800DF32,"T",0X1,3);
	split_sreg_range(0X800DF34,"T",0X1,3);
	split_sreg_range(0X800DF3C,"T",0X1,3);
	split_sreg_range(0X800DF5E,"T",0X1,3);
	split_sreg_range(0X800DF62,"T",0X1,3);
	split_sreg_range(0X800DF64,"T",0X1,3);
	split_sreg_range(0X800DF6E,"T",0X1,3);
	split_sreg_range(0X800DF90,"T",0X1,3);
	split_sreg_range(0X800DF94,"T",0X1,3);
	split_sreg_range(0X800DF96,"T",0X1,3);
	split_sreg_range(0X800DFA0,"T",0X1,3);
	split_sreg_range(0X800DFC2,"T",0X1,3);
	split_sreg_range(0X800DFC6,"T",0X1,3);
	split_sreg_range(0X800DFC8,"T",0X1,3);
	split_sreg_range(0X800DFD2,"T",0X1,3);
	split_sreg_range(0X800DFF4,"T",0X1,3);
	split_sreg_range(0X800DFF8,"T",0X1,3);
	split_sreg_range(0X800DFFA,"T",0X1,3);
	split_sreg_range(0X800E004,"T",0X1,3);
	split_sreg_range(0X800E008,"T",0X1,3);
	split_sreg_range(0X800E02A,"T",0X1,3);
	split_sreg_range(0X800E030,"T",0X1,3);
	split_sreg_range(0X800E07C,"T",0X1,3);
	split_sreg_range(0X800E084,"T",0X1,3);
	split_sreg_range(0X800E090,"T",0X1,3);
	split_sreg_range(0X800E0B2,"T",0X1,3);
	split_sreg_range(0X800E0C0,"T",0X1,3);
	split_sreg_range(0X800E0D0,"T",0X1,3);
	split_sreg_range(0X800E0D2,"T",0X1,3);
	split_sreg_range(0X800E0D6,"T",0X1,3);
	split_sreg_range(0X800E15E,"T",0X1,3);
	split_sreg_range(0X800E168,"T",0X1,3);
	split_sreg_range(0X800E16C,"T",0X1,3);
	split_sreg_range(0X800E1E2,"T",0X1,3);
	split_sreg_range(0X800E1E6,"T",0X1,3);
	split_sreg_range(0X800E1E8,"T",0X1,3);
	split_sreg_range(0X800E1F0,"T",0X1,3);
	split_sreg_range(0X800E200,"T",0X1,3);
	split_sreg_range(0X800E204,"T",0X1,3);
	split_sreg_range(0X800E20A,"T",0X1,3);
	split_sreg_range(0X800E20E,"T",0X1,3);
	split_sreg_range(0X800E210,"T",0X1,3);
	split_sreg_range(0X800E218,"T",0X1,3);
	split_sreg_range(0X800E234,"T",0X1,3);
	split_sreg_range(0X800E238,"T",0X1,3);
	split_sreg_range(0X800E23C,"T",0X1,3);
	split_sreg_range(0X800E23E,"T",0X1,3);
	split_sreg_range(0X800E250,"T",0X1,3);
	split_sreg_range(0X800E254,"T",0X1,3);
	split_sreg_range(0X800E256,"T",0X1,3);
	split_sreg_range(0X800E280,"T",0X1,3);
	split_sreg_range(0X800E284,"T",0X1,3);
	split_sreg_range(0X800E294,"T",0X1,3);
	split_sreg_range(0X800E2A6,"T",0X1,3);
	split_sreg_range(0X800E2AC,"T",0X1,3);
	split_sreg_range(0X800E2B0,"T",0X1,3);
	split_sreg_range(0X800E2BC,"T",0X1,3);
	split_sreg_range(0X800E2DE,"T",0X1,3);
	split_sreg_range(0X800E2E4,"T",0X1,3);
	split_sreg_range(0X800E2F4,"T",0X1,3);
	split_sreg_range(0X800E30A,"T",0X1,3);
	split_sreg_range(0X800E30E,"T",0X1,3);
	split_sreg_range(0X800E328,"T",0X1,3);
	split_sreg_range(0X800E32C,"T",0X1,3);
	split_sreg_range(0X800E342,"T",0X1,3);
	split_sreg_range(0X800E348,"T",0X1,3);
	split_sreg_range(0X800E350,"T",0X1,3);
	split_sreg_range(0X800E35A,"T",0X1,3);
	split_sreg_range(0X800E364,"T",0X1,3);
	split_sreg_range(0X800E36E,"T",0X1,3);
	split_sreg_range(0X800E398,"T",0X1,3);
	split_sreg_range(0X800E41A,"T",0X1,3);
	split_sreg_range(0X800E44C,"T",0X1,3);
	split_sreg_range(0X800E454,"T",0X1,3);
	split_sreg_range(0X800E472,"T",0X1,3);
	split_sreg_range(0X800E486,"T",0X1,3);
	split_sreg_range(0X800E49A,"T",0X1,3);
	split_sreg_range(0X800E4AE,"T",0X1,3);
	split_sreg_range(0X800E4C8,"T",0X1,3);
	split_sreg_range(0X800E4CE,"T",0X1,3);
	split_sreg_range(0X800E4D4,"T",0X1,3);
	split_sreg_range(0X800E4DA,"T",0X1,3);
	split_sreg_range(0X800E4E0,"T",0X1,3);
	split_sreg_range(0X800E4E8,"T",0X1,3);
	split_sreg_range(0X800E510,"T",0X1,3);
	split_sreg_range(0X800E560,"T",0X1,3);
	split_sreg_range(0X800E562,"T",0X1,3);
	split_sreg_range(0X800E57A,"T",0X1,3);
	split_sreg_range(0X800E58E,"T",0X1,3);
	split_sreg_range(0X800E5EC,"T",0X1,3);
	split_sreg_range(0X800E5F0,"T",0X1,3);
	split_sreg_range(0X800E5FA,"T",0X1,3);
	split_sreg_range(0X800E604,"T",0X1,3);
	split_sreg_range(0X800E618,"T",0X1,3);
	split_sreg_range(0X800E630,"T",0X1,3);
	split_sreg_range(0X800E63C,"T",0X1,3);
	split_sreg_range(0X800E652,"T",0X1,3);
	split_sreg_range(0X800E654,"T",0X1,3);
	split_sreg_range(0X800E668,"T",0X1,3);
	split_sreg_range(0X800E66C,"T",0X1,3);
	split_sreg_range(0X800E678,"T",0X1,3);
	split_sreg_range(0X800E6D4,"T",0X1,3);
	split_sreg_range(0X800E6FA,"T",0X1,3);
	split_sreg_range(0X800E702,"T",0X1,3);
	split_sreg_range(0X800E706,"T",0X1,3);
	split_sreg_range(0X800E708,"T",0X1,3);
	split_sreg_range(0X800E72A,"T",0X1,3);
	split_sreg_range(0X800E74C,"T",0X1,3);
	split_sreg_range(0X800E75A,"T",0X1,3);
	split_sreg_range(0X800E762,"T",0X1,3);
	split_sreg_range(0X800E766,"T",0X1,3);
	split_sreg_range(0X800E768,"T",0X1,3);
	split_sreg_range(0X800E78A,"T",0X1,3);
	split_sreg_range(0X800E7AA,"T",0X1,3);
	split_sreg_range(0X800E7BA,"T",0X1,3);
	split_sreg_range(0X800E7D4,"T",0X1,3);
	split_sreg_range(0X800E7D6,"T",0X1,3);
	split_sreg_range(0X800E7E4,"T",0X1,3);
	split_sreg_range(0X800E7EC,"T",0X1,3);
	split_sreg_range(0X800E80E,"T",0X1,3);
	split_sreg_range(0X800E81C,"T",0X1,3);
	split_sreg_range(0X800E820,"T",0X1,3);
	split_sreg_range(0X800E860,"T",0X1,3);
	split_sreg_range(0X800E86A,"T",0X1,3);
	split_sreg_range(0X800E86E,"T",0X1,3);
	split_sreg_range(0X800E892,"T",0X1,3);
	split_sreg_range(0X800E896,"T",0X1,3);
	split_sreg_range(0X800E89A,"T",0X1,3);
	split_sreg_range(0X800E89E,"T",0X1,3);
	split_sreg_range(0X800E8A0,"T",0X1,3);
	split_sreg_range(0X800E8AA,"T",0X1,3);
	split_sreg_range(0X800E8B8,"T",0X1,3);
	split_sreg_range(0X800E8FE,"T",0X1,3);
	split_sreg_range(0X800E914,"T",0X1,3);
	split_sreg_range(0X800E928,"T",0X1,3);
	split_sreg_range(0X800E92E,"T",0X1,3);
	split_sreg_range(0X800E940,"T",0X1,3);
	split_sreg_range(0X800E956,"T",0X1,3);
	split_sreg_range(0X800E96A,"T",0X1,3);
	split_sreg_range(0X800E97C,"T",0X1,3);
	split_sreg_range(0X800E98E,"T",0X1,3);
	split_sreg_range(0X800E9AC,"T",0X1,3);
	split_sreg_range(0X800E9B0,"T",0X1,3);
	split_sreg_range(0X800E9D2,"T",0X1,3);
	split_sreg_range(0X800E9D8,"T",0X1,3);
	split_sreg_range(0X800E9E8,"T",0X1,3);
	split_sreg_range(0X800EA06,"T",0X1,3);
	split_sreg_range(0X800EA18,"T",0X1,3);
	split_sreg_range(0X800EA20,"T",0X1,3);
	split_sreg_range(0X800EA26,"T",0X1,3);
	split_sreg_range(0X800EA2E,"T",0X1,3);
	split_sreg_range(0X800EA34,"T",0X1,3);
	split_sreg_range(0X800EA5C,"T",0X1,3);
	split_sreg_range(0X800EA62,"T",0X1,3);
	split_sreg_range(0X800EAAC,"T",0X1,3);
	split_sreg_range(0X800EABE,"T",0X1,3);
	split_sreg_range(0X800EAC2,"T",0X1,3);
	split_sreg_range(0X800EAF8,"T",0X1,3);
	split_sreg_range(0X800EB08,"T",0X1,3);
	split_sreg_range(0X800EB46,"T",0X1,3);
	split_sreg_range(0X800EB94,"T",0X1,3);
	split_sreg_range(0X800EB96,"T",0X1,3);
	split_sreg_range(0X800EBA0,"T",0X1,3);
	split_sreg_range(0X800EBA8,"T",0X1,3);
	split_sreg_range(0X800EBE6,"T",0X1,3);
	split_sreg_range(0X800EBF2,"T",0X1,3);
	split_sreg_range(0X800EC1A,"T",0X1,3);
	split_sreg_range(0X800EC38,"T",0X1,3);
	split_sreg_range(0X800EC40,"T",0X1,3);
	split_sreg_range(0X800EC48,"T",0X1,3);
	split_sreg_range(0X800EC4C,"T",0X1,3);
	split_sreg_range(0X800EC58,"T",0X1,3);
	split_sreg_range(0X800EC7E,"T",0X1,3);
	split_sreg_range(0X800EC82,"T",0X1,3);
	split_sreg_range(0X800ECB0,"T",0X1,3);
	split_sreg_range(0X800ECC2,"T",0X1,3);
	split_sreg_range(0X800ECFE,"T",0X1,3);
	split_sreg_range(0X800ED00,"T",0X1,3);
	split_sreg_range(0X800ED6E,"T",0X1,3);
	split_sreg_range(0X800EDE2,"T",0X1,3);
	split_sreg_range(0X800EE10,"T",0X1,3);
	split_sreg_range(0X800EE5E,"T",0X1,3);
	split_sreg_range(0X800EE9A,"T",0X1,3);
	split_sreg_range(0X800EE9E,"T",0X1,3);
	split_sreg_range(0X800EED8,"T",0X1,3);
	split_sreg_range(0X800EEF2,"T",0X1,3);
	split_sreg_range(0X800EEF8,"T",0X1,3);
	split_sreg_range(0X800EF2C,"T",0X1,3);
	split_sreg_range(0X800EF4E,"T",0X1,3);
	split_sreg_range(0X800EF52,"T",0X1,3);
	split_sreg_range(0X800EF74,"T",0X1,3);
	split_sreg_range(0X800EF7A,"T",0X1,3);
	split_sreg_range(0X800EF84,"T",0X1,3);
	split_sreg_range(0X800EFB4,"T",0X1,3);
	split_sreg_range(0X800EFC2,"T",0X1,3);
	split_sreg_range(0X800EFD2,"T",0X1,3);
	split_sreg_range(0X800EFD6,"T",0X1,3);
	split_sreg_range(0X800EFFE,"T",0X1,3);
	split_sreg_range(0X800F036,"T",0X1,3);
	split_sreg_range(0X800F04E,"T",0X1,3);
	split_sreg_range(0X800F074,"T",0X1,3);
	split_sreg_range(0X800F07A,"T",0X1,3);
	split_sreg_range(0X800F07E,"T",0X1,3);
	split_sreg_range(0X800F080,"T",0X1,3);
	split_sreg_range(0X800F086,"T",0X1,3);
	split_sreg_range(0X800F0A8,"T",0X1,3);
	split_sreg_range(0X800F0AC,"T",0X1,3);
	split_sreg_range(0X800F0B2,"T",0X1,3);
	split_sreg_range(0X800F0B8,"T",0X1,3);
	split_sreg_range(0X800F0BC,"T",0X1,3);
	split_sreg_range(0X800F120,"T",0X1,3);
	split_sreg_range(0X800F13C,"T",0X1,3);
	split_sreg_range(0X800F156,"T",0X1,3);
	split_sreg_range(0X800F174,"T",0X1,3);
	split_sreg_range(0X800F196,"T",0X1,3);
	split_sreg_range(0X800F1AE,"T",0X1,3);
	split_sreg_range(0X800F1B2,"T",0X1,3);
	split_sreg_range(0X800F1C0,"T",0X1,3);
	split_sreg_range(0X800F1FE,"T",0X1,3);
	split_sreg_range(0X800F20E,"T",0X1,3);
	split_sreg_range(0X800F21C,"T",0X1,3);
	split_sreg_range(0X800F21E,"T",0X1,3);
	split_sreg_range(0X800F222,"T",0X1,3);
	split_sreg_range(0X800F234,"T",0X1,3);
	split_sreg_range(0X800F236,"T",0X1,3);
	split_sreg_range(0X800F25C,"T",0X1,3);
	split_sreg_range(0X800F26C,"T",0X1,3);
	split_sreg_range(0X800F270,"T",0X1,3);
	split_sreg_range(0X800F276,"T",0X1,3);
	split_sreg_range(0X800F298,"T",0X1,3);
	split_sreg_range(0X800F2BE,"T",0X1,3);
	split_sreg_range(0X800F2F4,"T",0X1,3);
	split_sreg_range(0X800F30C,"T",0X1,3);
	split_sreg_range(0X800F312,"T",0X1,3);
	split_sreg_range(0X800F36E,"T",0X1,3);
	split_sreg_range(0X800F38E,"T",0X1,3);
	split_sreg_range(0X800F3B8,"T",0X1,3);
	split_sreg_range(0X800F3C2,"T",0X1,3);
	split_sreg_range(0X800F3D6,"T",0X1,3);
	split_sreg_range(0X800F3D8,"T",0X1,3);
	split_sreg_range(0X800F436,"T",0X1,3);
	split_sreg_range(0X800F46A,"T",0X1,3);
	split_sreg_range(0X800F4AA,"T",0X1,3);
	split_sreg_range(0X800F4BE,"T",0X1,3);
	split_sreg_range(0X800F4C0,"T",0X1,3);
	split_sreg_range(0X800F510,"T",0X1,3);
	split_sreg_range(0X800F536,"T",0X1,3);
	split_sreg_range(0X800F5F0,"T",0X1,3);
	split_sreg_range(0X800F60A,"T",0X1,3);
	split_sreg_range(0X800F640,"T",0X1,3);
	split_sreg_range(0X800F654,"T",0X1,3);
	split_sreg_range(0X800F66E,"T",0X1,3);
	split_sreg_range(0X800F686,"T",0X1,3);
	split_sreg_range(0X800F694,"T",0X1,3);
	split_sreg_range(0X800F69E,"T",0X1,3);
	split_sreg_range(0X800F6A0,"T",0X1,3);
	split_sreg_range(0X800F730,"T",0X1,3);
	split_sreg_range(0X800F75C,"T",0X1,3);
	split_sreg_range(0X800F76C,"T",0X1,3);
	split_sreg_range(0X800F7E4,"T",0X1,3);
	split_sreg_range(0X800F7F4,"T",0X1,3);
	split_sreg_range(0X800F800,"T",0X1,3);
	split_sreg_range(0X800F804,"T",0X1,3);
	split_sreg_range(0X800F82C,"T",0X1,3);
	split_sreg_range(0X800F83C,"T",0X1,3);
	split_sreg_range(0X800F85A,"T",0X1,3);
	split_sreg_range(0X800F874,"T",0X1,3);
	split_sreg_range(0X800F8BC,"T",0X1,3);
	split_sreg_range(0X800F8FC,"T",0X1,3);
	split_sreg_range(0X800F904,"T",0X1,3);
	split_sreg_range(0X800F90A,"T",0X1,3);
	split_sreg_range(0X800F90E,"T",0X1,3);
	split_sreg_range(0X800F912,"T",0X1,3);
	split_sreg_range(0X800F91E,"T",0X1,3);
	split_sreg_range(0X800F924,"T",0X1,3);
	split_sreg_range(0X800F92C,"T",0X1,3);
	split_sreg_range(0X800F92E,"T",0X1,3);
	split_sreg_range(0X800F934,"T",0X1,3);
	split_sreg_range(0X800F974,"T",0X1,3);
	split_sreg_range(0X800F978,"T",0X1,3);
	split_sreg_range(0X800F9BA,"T",0X1,3);
	split_sreg_range(0X800F9C2,"T",0X1,3);
	split_sreg_range(0X800F9C6,"T",0X1,3);
	split_sreg_range(0X800F9D0,"T",0X1,3);
	split_sreg_range(0X800F9D8,"T",0X1,3);
	split_sreg_range(0X800F9E6,"T",0X1,3);
	split_sreg_range(0X800FA26,"T",0X1,3);
	split_sreg_range(0X800FA32,"T",0X1,3);
	split_sreg_range(0X800FA3C,"T",0X1,3);
	split_sreg_range(0X800FA4C,"T",0X1,3);
	split_sreg_range(0X800FA5E,"T",0X1,3);
	split_sreg_range(0X800FA6A,"T",0X1,3);
	split_sreg_range(0X800FA6C,"T",0X1,3);
	split_sreg_range(0X800FA70,"T",0X1,3);
	split_sreg_range(0X800FA86,"T",0X1,3);
	split_sreg_range(0X800FA98,"T",0X1,3);
	split_sreg_range(0X800FAB6,"T",0X1,3);
	split_sreg_range(0X800FABE,"T",0X1,3);
	split_sreg_range(0X800FAC2,"T",0X1,3);
	split_sreg_range(0X800FAC8,"T",0X1,3);
	split_sreg_range(0X800FAE0,"T",0X1,3);
	split_sreg_range(0X800FAE2,"T",0X1,3);
	split_sreg_range(0X800FAE6,"T",0X1,3);
	split_sreg_range(0X800FB04,"T",0X1,3);
	split_sreg_range(0X800FB08,"T",0X1,3);
	split_sreg_range(0X800FB26,"T",0X1,3);
	split_sreg_range(0X800FB2E,"T",0X1,3);
	split_sreg_range(0X800FB40,"T",0X1,3);
	split_sreg_range(0X800FB5A,"T",0X1,3);
	split_sreg_range(0X800FB70,"T",0X1,3);
	split_sreg_range(0X800FB90,"T",0X1,3);
	split_sreg_range(0X800FB9A,"T",0X1,3);
	split_sreg_range(0X800FB9E,"T",0X1,3);
	split_sreg_range(0X800FBCA,"T",0X1,3);
	split_sreg_range(0X800FBD2,"T",0X1,3);
	split_sreg_range(0X800FBDC,"T",0X1,3);
	split_sreg_range(0X800FC4C,"T",0X1,3);
	split_sreg_range(0X800FC5C,"T",0X1,3);
	split_sreg_range(0X800FC66,"T",0X1,3);
	split_sreg_range(0X800FC7E,"T",0X1,3);
	split_sreg_range(0X800FC82,"T",0X1,3);
	split_sreg_range(0X800FC9C,"T",0X1,3);
	split_sreg_range(0X800FCC6,"T",0X1,3);
	split_sreg_range(0X800FCD6,"T",0X1,3);
	split_sreg_range(0X800FCDE,"T",0X1,3);
	split_sreg_range(0X800FCF0,"T",0X1,3);
	split_sreg_range(0X800FCFA,"T",0X1,3);
	split_sreg_range(0X800FD16,"T",0X1,3);
	split_sreg_range(0X800FD18,"T",0X1,3);
	split_sreg_range(0X800FD60,"T",0X1,3);
	split_sreg_range(0X800FDA0,"T",0X1,3);
	split_sreg_range(0X800FDC0,"T",0X1,3);
	split_sreg_range(0X800FDC2,"T",0X1,3);
	split_sreg_range(0X800FDEE,"T",0X1,3);
	split_sreg_range(0X800FE08,"T",0X1,3);
	split_sreg_range(0X800FE18,"T",0X1,3);
	split_sreg_range(0X800FE26,"T",0X1,3);
	split_sreg_range(0X800FE2A,"T",0X1,3);
	split_sreg_range(0X800FE3A,"T",0X1,3);
	split_sreg_range(0X800FE3E,"T",0X1,3);
	split_sreg_range(0X800FE5E,"T",0X1,3);
	split_sreg_range(0X800FE6E,"T",0X1,3);
	split_sreg_range(0X800FE7E,"T",0X1,3);
	split_sreg_range(0X800FE8C,"T",0X1,3);
	split_sreg_range(0X800FE90,"T",0X1,3);
	split_sreg_range(0X800FEA0,"T",0X1,3);
	split_sreg_range(0X800FEA4,"T",0X1,3);
	split_sreg_range(0X800FEC2,"T",0X1,3);
	split_sreg_range(0X800FEC4,"T",0X1,3);
	split_sreg_range(0X800FEC6,"T",0X1,3);
	split_sreg_range(0X800FEC8,"T",0X1,3);
	split_sreg_range(0X800FED0,"T",0X1,3);
	split_sreg_range(0X800FEDE,"T",0X1,3);
	split_sreg_range(0X800FEE2,"T",0X1,3);
	split_sreg_range(0X800FEE4,"T",0X1,3);
	split_sreg_range(0X800FF14,"T",0X1,3);
	split_sreg_range(0X800FF36,"T",0X1,3);
	split_sreg_range(0X800FF38,"T",0X1,3);
	split_sreg_range(0X800FF68,"T",0X1,3);
	split_sreg_range(0X800FF8A,"T",0X1,3);
	split_sreg_range(0X800FF8C,"T",0X1,3);
	split_sreg_range(0X800FFD8,"T",0X1,3);
	split_sreg_range(0X800FFE2,"T",0X1,3);
	split_sreg_range(0X800FFE4,"T",0X1,3);
	split_sreg_range(0X800FFE8,"T",0X1,3);
	split_sreg_range(0X800FFF6,"T",0X1,3);
	split_sreg_range(0X800FFFC,"T",0X1,3);
	split_sreg_range(0X8010002,"T",0X1,3);
	split_sreg_range(0X8010006,"T",0X1,3);
	split_sreg_range(0X8010018,"T",0X1,3);
	split_sreg_range(0X801001E,"T",0X1,3);
	split_sreg_range(0X801002E,"T",0X1,3);
	split_sreg_range(0X8010038,"T",0X1,3);
	split_sreg_range(0X8010040,"T",0X1,3);
	split_sreg_range(0X8010076,"T",0X1,3);
	split_sreg_range(0X8010078,"T",0X1,3);
	split_sreg_range(0X8010090,"T",0X1,3);
	split_sreg_range(0X8010092,"T",0X1,3);
	split_sreg_range(0X80100AC,"T",0X1,3);
	split_sreg_range(0X80100AE,"T",0X1,3);
	split_sreg_range(0X80101E8,"T",0X1,3);
	split_sreg_range(0X8010210,"T",0X1,3);
	split_sreg_range(0X8010218,"T",0X1,3);
	split_sreg_range(0X8010250,"T",0X1,3);
	split_sreg_range(0X801026C,"T",0X1,3);
	split_sreg_range(0X8010270,"T",0X1,3);
	split_sreg_range(0X801027A,"T",0X1,3);
	split_sreg_range(0X8010286,"T",0X1,3);
	split_sreg_range(0X801029C,"T",0X1,3);
	split_sreg_range(0X801029E,"T",0X1,3);
	split_sreg_range(0X80103BA,"T",0X1,3);
	split_sreg_range(0X80103BC,"T",0X1,3);
	split_sreg_range(0X80103C2,"T",0X1,3);
	split_sreg_range(0X80103F2,"T",0X1,3);
	split_sreg_range(0X80103F8,"T",0X1,3);
	split_sreg_range(0X8010408,"T",0X1,3);
	split_sreg_range(0X8010424,"T",0X1,3);
	split_sreg_range(0X8010436,"T",0X1,3);
	split_sreg_range(0X8010452,"T",0X1,3);
	split_sreg_range(0X8010456,"T",0X1,3);
	split_sreg_range(0X80104BC,"T",0X1,3);
	split_sreg_range(0X8010526,"T",0X1,3);
	split_sreg_range(0X801052A,"T",0X1,3);
	split_sreg_range(0X8010552,"T",0X1,3);
	split_sreg_range(0X8010598,"T",0X1,3);
	split_sreg_range(0X80105A2,"T",0X1,3);
	split_sreg_range(0X80105AE,"T",0X1,3);
	split_sreg_range(0X80105B2,"T",0X1,3);
	split_sreg_range(0X80105BE,"T",0X1,3);
	split_sreg_range(0X80105C2,"T",0X1,3);
	split_sreg_range(0X80105CE,"T",0X1,3);
	split_sreg_range(0X80105D2,"T",0X1,3);
	split_sreg_range(0X80105DA,"T",0X1,3);
	split_sreg_range(0X801060E,"T",0X1,3);
	split_sreg_range(0X8010616,"T",0X1,3);
	split_sreg_range(0X8010626,"T",0X1,3);
	split_sreg_range(0X801062C,"T",0X1,3);
	split_sreg_range(0X8010630,"T",0X1,3);
	split_sreg_range(0X801063A,"T",0X1,3);
	split_sreg_range(0X8010644,"T",0X1,3);
	split_sreg_range(0X8010658,"T",0X1,3);
	split_sreg_range(0X8010670,"T",0X1,3);
	split_sreg_range(0X8010682,"T",0X1,3);
	split_sreg_range(0X801069C,"T",0X1,3);
	split_sreg_range(0X80106AA,"T",0X1,3);
	split_sreg_range(0X80106BA,"T",0X1,3);
	split_sreg_range(0X80106CA,"T",0X1,3);
	split_sreg_range(0X80106EA,"T",0X1,3);
	split_sreg_range(0X80106F0,"T",0X1,3);
	split_sreg_range(0X801071C,"T",0X1,3);
	split_sreg_range(0X8010722,"T",0X1,3);
	split_sreg_range(0X8010728,"T",0X1,3);
	split_sreg_range(0X801072E,"T",0X1,3);
	split_sreg_range(0X8010748,"T",0X1,3);
	split_sreg_range(0X801074C,"T",0X1,3);
	split_sreg_range(0X8010756,"T",0X1,3);
	split_sreg_range(0X801075A,"T",0X1,3);
	split_sreg_range(0X801075C,"T",0X1,3);
	split_sreg_range(0X801075E,"T",0X1,3);
	split_sreg_range(0X801076C,"T",0X1,3);
	split_sreg_range(0X80107B8,"T",0X1,3);
	split_sreg_range(0X80107BC,"T",0X1,3);
	split_sreg_range(0X80107CC,"T",0X1,3);
	split_sreg_range(0X8010838,"T",0X1,3);
	split_sreg_range(0X8010842,"T",0X1,3);
	split_sreg_range(0X8010864,"T",0X1,3);
	split_sreg_range(0X8010874,"T",0X1,3);
	split_sreg_range(0X80108B4,"T",0X1,3);
	split_sreg_range(0X80108B6,"T",0X1,3);
	split_sreg_range(0X80108F0,"T",0X1,3);
	split_sreg_range(0X80108F6,"T",0X1,3);
	split_sreg_range(0X8010900,"T",0X1,3);
	split_sreg_range(0X801090E,"T",0X1,3);
	split_sreg_range(0X8010912,"T",0X1,3);
	split_sreg_range(0X8010916,"T",0X1,3);
	split_sreg_range(0X801092C,"T",0X1,3);
	split_sreg_range(0X8010942,"T",0X1,3);
	split_sreg_range(0X8010958,"T",0X1,3);
	split_sreg_range(0X8010960,"T",0X1,3);
	split_sreg_range(0X8010968,"T",0X1,3);
	split_sreg_range(0X801097E,"T",0X1,3);
	split_sreg_range(0X8010992,"T",0X1,3);
	split_sreg_range(0X8010994,"T",0X1,3);
	split_sreg_range(0X80109A4,"T",0X1,3);
	split_sreg_range(0X80109D4,"T",0X1,3);
	split_sreg_range(0X80109E4,"T",0X1,3);
	split_sreg_range(0X80109F2,"T",0X1,3);
	split_sreg_range(0X8010A02,"T",0X1,3);
	split_sreg_range(0X8010A0A,"T",0X1,3);
	split_sreg_range(0X8010A12,"T",0X1,3);
	split_sreg_range(0X8010A1A,"T",0X1,3);
	split_sreg_range(0X8010A46,"T",0X1,3);
	split_sreg_range(0X8010A58,"T",0X1,3);
	split_sreg_range(0X8010A6A,"T",0X1,3);
	split_sreg_range(0X8010A6E,"T",0X1,3);
	split_sreg_range(0X8010A7E,"T",0X1,3);
	split_sreg_range(0X8010A88,"T",0X1,3);
	split_sreg_range(0X8010A8C,"T",0X1,3);
	split_sreg_range(0X8010A90,"T",0X1,3);
	split_sreg_range(0X8010A98,"T",0X1,3);
	split_sreg_range(0X8010A9A,"T",0X1,3);
	split_sreg_range(0X8010A9C,"T",0X1,3);
	split_sreg_range(0X8010AA4,"T",0X1,3);
	split_sreg_range(0X8010AA6,"T",0X1,3);
	split_sreg_range(0X8010AF0,"T",0X1,3);
	split_sreg_range(0X8010AFC,"T",0X1,3);
	split_sreg_range(0X8010BDA,"T",0X1,3);
	split_sreg_range(0X8010BDE,"T",0X1,3);
	split_sreg_range(0X8010D3A,"T",0X1,3);
	split_sreg_range(0X8010DD8,"T",0X1,3);
	split_sreg_range(0X8010DE2,"T",0X1,3);
	split_sreg_range(0X8010E5C,"T",0X1,3);
	split_sreg_range(0X8010E6E,"T",0X1,3);
	split_sreg_range(0X8010E86,"T",0X1,3);
	split_sreg_range(0X8010E8A,"T",0X1,3);
	split_sreg_range(0X8010E8C,"T",0X1,3);
	split_sreg_range(0X8010E96,"T",0X1,3);
	split_sreg_range(0X8010EFE,"T",0X1,3);
	split_sreg_range(0X8010F3C,"T",0X1,3);
	split_sreg_range(0X8010F70,"T",0X1,3);
	split_sreg_range(0X8010F72,"T",0X1,3);
	split_sreg_range(0X8010F74,"T",0X1,3);
	split_sreg_range(0X8010F76,"T",0X1,3);
	split_sreg_range(0X8010F78,"T",0X1,3);
	split_sreg_range(0X8010FBE,"T",0X1,3);
	split_sreg_range(0X8010FF2,"T",0X1,3);
	split_sreg_range(0X8010FF6,"T",0X1,3);
	split_sreg_range(0X8010FF8,"T",0X1,3);
	split_sreg_range(0X8011000,"T",0X1,3);
	split_sreg_range(0X8011004,"T",0X1,3);
	split_sreg_range(0X801100E,"T",0X1,3);
	split_sreg_range(0X8011012,"T",0X1,3);
	split_sreg_range(0X8011020,"T",0X1,3);
	split_sreg_range(0X8011024,"T",0X1,3);
	split_sreg_range(0X801102C,"T",0X1,3);
	split_sreg_range(0X8011062,"T",0X1,3);
	split_sreg_range(0X80110AA,"T",0X1,3);
	split_sreg_range(0X80110AE,"T",0X1,3);
	split_sreg_range(0X80110BC,"T",0X1,3);
	split_sreg_range(0X80110F2,"T",0X1,3);
	split_sreg_range(0X8011122,"T",0X1,3);
	split_sreg_range(0X801114A,"T",0X1,3);
	split_sreg_range(0X801116E,"T",0X1,3);
	split_sreg_range(0X8011170,"T",0X1,3);
	split_sreg_range(0X8011180,"T",0X1,3);
	split_sreg_range(0X80111AE,"T",0X1,3);
	split_sreg_range(0X80111D2,"T",0X1,3);
	split_sreg_range(0X80111EC,"T",0X1,3);
	split_sreg_range(0X80111F0,"T",0X1,3);
	split_sreg_range(0X80111FC,"T",0X1,3);
	split_sreg_range(0X8011232,"T",0X1,3);
	split_sreg_range(0X80112A6,"T",0X1,3);
	split_sreg_range(0X80112A8,"T",0X1,3);
	split_sreg_range(0X80112B4,"T",0X1,3);
	split_sreg_range(0X80112C0,"T",0X1,3);
	split_sreg_range(0X80112CC,"T",0X1,3);
	split_sreg_range(0X80112DA,"T",0X1,3);
	split_sreg_range(0X80112E8,"T",0X1,3);
	split_sreg_range(0X80112FE,"T",0X1,3);
	split_sreg_range(0X8011300,"T",0X1,3);
	split_sreg_range(0X8011308,"T",0X1,3);
	split_sreg_range(0X801130C,"T",0X1,3);
	split_sreg_range(0X8011324,"T",0X1,3);
	split_sreg_range(0X8011366,"T",0X1,3);
	split_sreg_range(0X8011368,"T",0X1,3);
	split_sreg_range(0X8011376,"T",0X1,3);
	split_sreg_range(0X80113A8,"T",0X1,3);
	split_sreg_range(0X80113CA,"T",0X1,3);
	split_sreg_range(0X8011404,"T",0X1,3);
	split_sreg_range(0X801141C,"T",0X1,3);
	split_sreg_range(0X8011456,"T",0X1,3);
	split_sreg_range(0X8011464,"T",0X1,3);
	split_sreg_range(0X8011474,"T",0X1,3);
	split_sreg_range(0X801147C,"T",0X1,3);
	split_sreg_range(0X8011482,"T",0X1,3);
	split_sreg_range(0X801148A,"T",0X1,3);
	split_sreg_range(0X801148C,"T",0X1,3);
	split_sreg_range(0X80114C2,"T",0X1,3);
	split_sreg_range(0X80114C6,"T",0X1,3);
	split_sreg_range(0X80114C8,"T",0X1,3);
	split_sreg_range(0X80114CE,"T",0X1,3);
	split_sreg_range(0X80114D6,"T",0X1,3);
	split_sreg_range(0X80114FC,"T",0X1,3);
	split_sreg_range(0X8011510,"T",0X1,3);
	split_sreg_range(0X8011514,"T",0X1,3);
	split_sreg_range(0X801151C,"T",0X1,3);
	split_sreg_range(0X8011522,"T",0X1,3);
	split_sreg_range(0X8011538,"T",0X1,3);
	split_sreg_range(0X8011540,"T",0X1,3);
	split_sreg_range(0X801156C,"T",0X1,3);
	split_sreg_range(0X80115E0,"T",0X1,3);
	split_sreg_range(0X8011610,"T",0X1,3);
	split_sreg_range(0X8011632,"T",0X1,3);
	split_sreg_range(0X801167C,"T",0X1,3);
	split_sreg_range(0X8011680,"T",0X1,3);
	split_sreg_range(0X8011682,"T",0X1,3);
	split_sreg_range(0X80116E4,"T",0X1,3);
	split_sreg_range(0X80116E8,"T",0X1,3);
	split_sreg_range(0X8011700,"T",0X1,3);
	split_sreg_range(0X8011708,"T",0X1,3);
	split_sreg_range(0X801170C,"T",0X1,3);
	split_sreg_range(0X8011734,"T",0X1,3);
	split_sreg_range(0X8011738,"T",0X1,3);
	split_sreg_range(0X8011750,"T",0X1,3);
	split_sreg_range(0X8011758,"T",0X1,3);
	split_sreg_range(0X801175C,"T",0X1,3);
	split_sreg_range(0X8011786,"T",0X1,3);
	split_sreg_range(0X801179C,"T",0X1,3);
	split_sreg_range(0X80117A0,"T",0X1,3);
	split_sreg_range(0X80117A2,"T",0X1,3);
	split_sreg_range(0X80117A6,"T",0X1,3);
	split_sreg_range(0X80117D2,"T",0X1,3);
	split_sreg_range(0X80117E8,"T",0X1,3);
	split_sreg_range(0X80117EC,"T",0X1,3);
	split_sreg_range(0X80117EE,"T",0X1,3);
	split_sreg_range(0X80117F2,"T",0X1,3);
	split_sreg_range(0X8011828,"T",0X1,3);
	split_sreg_range(0X8011876,"T",0X1,3);
	split_sreg_range(0X8011882,"T",0X1,3);
	split_sreg_range(0X8011896,"T",0X1,3);
	split_sreg_range(0X80118B2,"T",0X1,3);
	split_sreg_range(0X80118B8,"T",0X1,3);
	split_sreg_range(0X80118D0,"T",0X1,3);
	split_sreg_range(0X8011904,"T",0X1,3);
	split_sreg_range(0X8011936,"T",0X1,3);
	split_sreg_range(0X8011942,"T",0X1,3);
	split_sreg_range(0X8011988,"T",0X1,3);
	split_sreg_range(0X801198A,"T",0X1,3);
	split_sreg_range(0X8011996,"T",0X1,3);
	split_sreg_range(0X80119C6,"T",0X1,3);
	split_sreg_range(0X80119C8,"T",0X1,3);
	split_sreg_range(0X80119D4,"T",0X1,3);
	split_sreg_range(0X80119DC,"T",0X1,3);
	split_sreg_range(0X80119F2,"T",0X1,3);
	split_sreg_range(0X80119FE,"T",0X1,3);
	split_sreg_range(0X8011A02,"T",0X1,3);
	split_sreg_range(0X8011A08,"T",0X1,3);
	split_sreg_range(0X8011A24,"T",0X1,3);
	split_sreg_range(0X8011A4C,"T",0X1,3);
	split_sreg_range(0X8011A4E,"T",0X1,3);
	split_sreg_range(0X8011A5A,"T",0X1,3);
	split_sreg_range(0X8011A5E,"T",0X1,3);
	split_sreg_range(0X8011A62,"T",0X1,3);
	split_sreg_range(0X8011A66,"T",0X1,3);
	split_sreg_range(0X8011A76,"T",0X1,3);
	split_sreg_range(0X8011A7A,"T",0X1,3);
	split_sreg_range(0X8011A7E,"T",0X1,3);
	split_sreg_range(0X8011A8E,"T",0X1,3);
	split_sreg_range(0X8011AE0,"T",0X1,3);
	split_sreg_range(0X8011AE6,"T",0X1,3);
	split_sreg_range(0X8011B0C,"T",0X1,3);
	split_sreg_range(0X8011B14,"T",0X1,3);
	split_sreg_range(0X8011B18,"T",0X1,3);
	split_sreg_range(0X8011B1A,"T",0X1,3);
	split_sreg_range(0X8011B84,"T",0X1,3);
	split_sreg_range(0X8011B86,"T",0X1,3);
	split_sreg_range(0X8011B98,"T",0X1,3);
	split_sreg_range(0X8011BB8,"T",0X1,3);
	split_sreg_range(0X8011BC0,"T",0X1,3);
	split_sreg_range(0X8011BC6,"T",0X1,3);
	split_sreg_range(0X8011BD8,"T",0X1,3);
	split_sreg_range(0X8011BDE,"T",0X1,3);
	split_sreg_range(0X8011BE2,"T",0X1,3);
	split_sreg_range(0X8011BE4,"T",0X1,3);
	split_sreg_range(0X8011BE6,"T",0X1,3);
	split_sreg_range(0X8011C06,"T",0X1,3);
	split_sreg_range(0X8011C0A,"T",0X1,3);
	split_sreg_range(0X8011C1C,"T",0X1,3);
	split_sreg_range(0X8011C1E,"T",0X1,3);
	split_sreg_range(0X8011CCA,"T",0X1,3);
	split_sreg_range(0X8011CD0,"T",0X1,3);
	split_sreg_range(0X8011D60,"T",0X1,3);
	split_sreg_range(0X8011D66,"T",0X1,3);
	split_sreg_range(0X8011DF8,"T",0X1,3);
	split_sreg_range(0X8011DFE,"T",0X1,3);
	split_sreg_range(0X8011E06,"T",0X1,3);
	split_sreg_range(0X8011E0E,"T",0X1,3);
	split_sreg_range(0X8011E30,"T",0X1,3);
	split_sreg_range(0X8011E34,"T",0X1,3);
	split_sreg_range(0X8011E4E,"T",0X1,3);
	split_sreg_range(0X8011E54,"T",0X1,3);
	split_sreg_range(0X8011E5A,"T",0X1,3);
	split_sreg_range(0X8011E70,"T",0X1,3);
	split_sreg_range(0X8011E76,"T",0X1,3);
	split_sreg_range(0X8011E7A,"T",0X1,3);
	split_sreg_range(0X8011EAA,"T",0X1,3);
	split_sreg_range(0X8011EAE,"T",0X1,3);
	split_sreg_range(0X8011ECE,"T",0X1,3);
	split_sreg_range(0X8011ED4,"T",0X1,3);
	split_sreg_range(0X8011F2E,"T",0X1,3);
	split_sreg_range(0X8011F76,"T",0X1,3);
	split_sreg_range(0X8011F8A,"T",0X1,3);
	split_sreg_range(0X8011F98,"T",0X1,3);
	split_sreg_range(0X8012002,"T",0X1,3);
	split_sreg_range(0X8012012,"T",0X1,3);
	split_sreg_range(0X801203C,"T",0X1,3);
	split_sreg_range(0X801204E,"T",0X1,3);
	split_sreg_range(0X801205A,"T",0X1,3);
	split_sreg_range(0X801206E,"T",0X1,3);
	split_sreg_range(0X8012072,"T",0X1,3);
	split_sreg_range(0X8012074,"T",0X1,3);
	split_sreg_range(0X8012078,"T",0X1,3);
	split_sreg_range(0X8012086,"T",0X1,3);
	split_sreg_range(0X80120A8,"T",0X1,3);
	split_sreg_range(0X80120B2,"T",0X1,3);
	split_sreg_range(0X80120BA,"T",0X1,3);
	split_sreg_range(0X80120C0,"T",0X1,3);
	split_sreg_range(0X80120CE,"T",0X1,3);
	split_sreg_range(0X80120D4,"T",0X1,3);
	split_sreg_range(0X80120E2,"T",0X1,3);
	split_sreg_range(0X8012102,"T",0X1,3);
	split_sreg_range(0X8012122,"T",0X1,3);
	split_sreg_range(0X8012154,"T",0X1,3);
	split_sreg_range(0X801215C,"T",0X1,3);
	split_sreg_range(0X801216A,"T",0X1,3);
	split_sreg_range(0X801219C,"T",0X1,3);
	split_sreg_range(0X80121A6,"T",0X1,3);
	split_sreg_range(0X80121B4,"T",0X1,3);
	split_sreg_range(0X80121D4,"T",0X1,3);
	split_sreg_range(0X80121E4,"T",0X1,3);
	split_sreg_range(0X8012210,"T",0X1,3);
	split_sreg_range(0X8012226,"T",0X1,3);
	split_sreg_range(0X801222A,"T",0X1,3);
	split_sreg_range(0X801226E,"T",0X1,3);
	split_sreg_range(0X801229C,"T",0X1,3);
	split_sreg_range(0X80122A8,"T",0X1,3);
	split_sreg_range(0X80122D2,"T",0X1,3);
	split_sreg_range(0X80122E0,"T",0X1,3);
	split_sreg_range(0X80122E8,"T",0X1,3);
	split_sreg_range(0X80122EC,"T",0X1,3);
	split_sreg_range(0X8012320,"T",0X1,3);
	split_sreg_range(0X8012348,"T",0X1,3);
	split_sreg_range(0X8012356,"T",0X1,3);
	split_sreg_range(0X8012366,"T",0X1,3);
	split_sreg_range(0X801237A,"T",0X1,3);
	split_sreg_range(0X801237E,"T",0X1,3);
	split_sreg_range(0X8012380,"T",0X1,3);
	split_sreg_range(0X8012384,"T",0X1,3);
	split_sreg_range(0X8012390,"T",0X1,3);
	split_sreg_range(0X80123B6,"T",0X1,3);
	split_sreg_range(0X80123B8,"T",0X1,3);
	split_sreg_range(0X80123E4,"T",0X1,3);
	split_sreg_range(0X80123E6,"T",0X1,3);
	split_sreg_range(0X801240A,"T",0X1,3);
	split_sreg_range(0X8012426,"T",0X1,3);
	split_sreg_range(0X8012428,"T",0X1,3);
	split_sreg_range(0X8012438,"T",0X1,3);
	split_sreg_range(0X8012444,"T",0X1,3);
	split_sreg_range(0X8012458,"T",0X1,3);
	split_sreg_range(0X801249E,"T",0X1,3);
	split_sreg_range(0X80124A8,"T",0X1,3);
	split_sreg_range(0X80124AC,"T",0X1,3);
	split_sreg_range(0X80124BC,"T",0X1,3);
	split_sreg_range(0X80124D2,"T",0X1,3);
	split_sreg_range(0X80124F0,"T",0X1,3);
	split_sreg_range(0X801250E,"T",0X1,3);
	split_sreg_range(0X801252E,"T",0X1,3);
	split_sreg_range(0X8012538,"T",0X1,3);
	split_sreg_range(0X801253A,"T",0X1,3);
	split_sreg_range(0X8012552,"T",0X1,3);
	split_sreg_range(0X801255A,"T",0X1,3);
	split_sreg_range(0X8012564,"T",0X1,3);
	split_sreg_range(0X8012572,"T",0X1,3);
	split_sreg_range(0X8012580,"T",0X1,3);
	split_sreg_range(0X8012590,"T",0X1,3);
	split_sreg_range(0X8012592,"T",0X1,3);
	split_sreg_range(0X80125B0,"T",0X1,3);
	split_sreg_range(0X80125CA,"T",0X1,3);
	split_sreg_range(0X80125DA,"T",0X1,3);
	split_sreg_range(0X801260C,"T",0X1,3);
	split_sreg_range(0X801261C,"T",0X1,3);
	split_sreg_range(0X8012626,"T",0X1,3);
	split_sreg_range(0X801263C,"T",0X1,3);
	split_sreg_range(0X8012658,"T",0X1,3);
	split_sreg_range(0X801265A,"T",0X1,3);
	split_sreg_range(0X8012676,"T",0X1,3);
	split_sreg_range(0X8012690,"T",0X1,3);
	split_sreg_range(0X80126A8,"T",0X1,3);
	split_sreg_range(0X80126B8,"T",0X1,3);
	split_sreg_range(0X80126D0,"T",0X1,3);
	split_sreg_range(0X80126D4,"T",0X1,3);
	split_sreg_range(0X80126E6,"T",0X1,3);
	split_sreg_range(0X80126F8,"T",0X1,3);
	split_sreg_range(0X8012702,"T",0X1,3);
	split_sreg_range(0X8012712,"T",0X1,3);
	split_sreg_range(0X801271A,"T",0X1,3);
	split_sreg_range(0X8012748,"T",0X1,3);
	split_sreg_range(0X8012750,"T",0X1,3);
	split_sreg_range(0X8012752,"T",0X1,3);
	split_sreg_range(0X801275A,"T",0X1,3);
	split_sreg_range(0X801275E,"T",0X1,3);
	split_sreg_range(0X8012766,"T",0X1,3);
	split_sreg_range(0X8012796,"T",0X1,3);
	split_sreg_range(0X801279A,"T",0X1,3);
	split_sreg_range(0X80127BC,"T",0X1,3);
	split_sreg_range(0X80127BE,"T",0X1,3);
	split_sreg_range(0X80127D8,"T",0X1,3);
	split_sreg_range(0X80127EA,"T",0X1,3);
	split_sreg_range(0X80127F8,"T",0X1,3);
	split_sreg_range(0X8012802,"T",0X1,3);
	split_sreg_range(0X8012814,"T",0X1,3);
	split_sreg_range(0X801281E,"T",0X1,3);
	split_sreg_range(0X8012838,"T",0X1,3);
	split_sreg_range(0X801283E,"T",0X1,3);
	split_sreg_range(0X8012848,"T",0X1,3);
	split_sreg_range(0X801284C,"T",0X1,3);
	split_sreg_range(0X8012858,"T",0X1,3);
	split_sreg_range(0X8012868,"T",0X1,3);
	split_sreg_range(0X801286C,"T",0X1,3);
	split_sreg_range(0X8012872,"T",0X1,3);
	split_sreg_range(0X8012878,"T",0X1,3);
	split_sreg_range(0X8012880,"T",0X1,3);
	split_sreg_range(0X8012896,"T",0X1,3);
	split_sreg_range(0X801289A,"T",0X1,3);
	split_sreg_range(0X80128A0,"T",0X1,3);
	split_sreg_range(0X80128A2,"T",0X1,3);
	split_sreg_range(0X80128AA,"T",0X1,3);
	split_sreg_range(0X80128E2,"T",0X1,3);
	split_sreg_range(0X80128EC,"T",0X1,3);
	split_sreg_range(0X8012900,"T",0X1,3);
	split_sreg_range(0X8012910,"T",0X1,3);
	split_sreg_range(0X8012934,"T",0X1,3);
	split_sreg_range(0X801293C,"T",0X1,3);
	split_sreg_range(0X8012952,"T",0X1,3);
	split_sreg_range(0X8012998,"T",0X1,3);
	split_sreg_range(0X80129C6,"T",0X1,3);
	split_sreg_range(0X80129DC,"T",0X1,3);
	split_sreg_range(0X80129E0,"T",0X1,3);
	split_sreg_range(0X80129EA,"T",0X1,3);
	split_sreg_range(0X8012A2A,"T",0X1,3);
	split_sreg_range(0X8012A2C,"T",0X1,3);
	split_sreg_range(0X8012A2E,"T",0X1,3);
	split_sreg_range(0X8012A30,"T",0X1,3);
	split_sreg_range(0X8012A3A,"T",0X1,3);
	split_sreg_range(0X8012A48,"T",0X1,3);
	split_sreg_range(0X8012A50,"T",0X1,3);
	split_sreg_range(0X8012A58,"T",0X1,3);
	split_sreg_range(0X8012AA2,"T",0X1,3);
	split_sreg_range(0X8012AAE,"T",0X1,3);
	split_sreg_range(0X8012AB0,"T",0X1,3);
	split_sreg_range(0X8012AB6,"T",0X1,3);
	split_sreg_range(0X8012ABC,"T",0X1,3);
	split_sreg_range(0X8012AE4,"T",0X1,3);
	split_sreg_range(0X8012B0E,"T",0X1,3);
	split_sreg_range(0X8012B3E,"T",0X1,3);
	split_sreg_range(0X8012B54,"T",0X1,3);
	split_sreg_range(0X8012B5C,"T",0X1,3);
	split_sreg_range(0X8012B72,"T",0X1,3);
	split_sreg_range(0X8012B88,"T",0X1,3);
	split_sreg_range(0X8012B92,"T",0X1,3);
	split_sreg_range(0X8012BE6,"T",0X1,3);
	split_sreg_range(0X8012C6A,"T",0X1,3);
	split_sreg_range(0X8012C8C,"T",0X1,3);
	split_sreg_range(0X8012CC4,"T",0X1,3);
	split_sreg_range(0X8012D16,"T",0X1,3);
	split_sreg_range(0X8012D1A,"T",0X1,3);
	split_sreg_range(0X8012D1E,"T",0X1,3);
	split_sreg_range(0X8012D20,"T",0X1,3);
	split_sreg_range(0X8012E18,"T",0X1,3);
	split_sreg_range(0X8012E6C,"T",0X1,3);
	split_sreg_range(0X8012E90,"T",0X1,3);
	split_sreg_range(0X8012F0A,"T",0X1,3);
	split_sreg_range(0X8012F68,"T",0X1,3);
	split_sreg_range(0X8012F82,"T",0X1,3);
	split_sreg_range(0X8012F9E,"T",0X1,3);
	split_sreg_range(0X8012FCE,"T",0X1,3);
	split_sreg_range(0X8012FEE,"T",0X1,3);
	split_sreg_range(0X8013014,"T",0X1,3);
	split_sreg_range(0X8013040,"T",0X1,3);
	split_sreg_range(0X80130CA,"T",0X1,3);
	split_sreg_range(0X8013100,"T",0X1,3);
	split_sreg_range(0X8013110,"T",0X1,3);
	split_sreg_range(0X801312E,"T",0X1,3);
	split_sreg_range(0X801313E,"T",0X1,3);
	split_sreg_range(0X801314C,"T",0X1,3);
	split_sreg_range(0X8013176,"T",0X1,3);
	split_sreg_range(0X80131BC,"T",0X1,3);
	split_sreg_range(0X80131EA,"T",0X1,3);
	split_sreg_range(0X8013228,"T",0X1,3);
	split_sreg_range(0X801323A,"T",0X1,3);
	split_sreg_range(0X80132AC,"T",0X1,3);
	split_sreg_range(0X8013334,"T",0X1,3);
	split_sreg_range(0X8013366,"T",0X1,3);
	split_sreg_range(0X8013370,"T",0X1,3);
	split_sreg_range(0X8013396,"T",0X1,3);
	split_sreg_range(0X801339E,"T",0X1,3);
	split_sreg_range(0X80133B0,"T",0X1,3);
	split_sreg_range(0X80133CC,"T",0X1,3);
	split_sreg_range(0X80133D2,"T",0X1,3);
	split_sreg_range(0X80133FC,"T",0X1,3);
	split_sreg_range(0X8013406,"T",0X1,3);
	split_sreg_range(0X801340E,"T",0X1,3);
	split_sreg_range(0X8013416,"T",0X1,3);
	split_sreg_range(0X801341E,"T",0X1,3);
	split_sreg_range(0X8013426,"T",0X1,3);
	split_sreg_range(0X8013452,"T",0X1,3);
	split_sreg_range(0X801347E,"T",0X1,3);
	split_sreg_range(0X80134B4,"T",0X1,3);
	split_sreg_range(0X80134EA,"T",0X1,3);
	split_sreg_range(0X80134EC,"T",0X1,3);
	split_sreg_range(0X80134FA,"T",0X1,3);
	split_sreg_range(0X801352C,"T",0X1,3);
	split_sreg_range(0X8013534,"T",0X1,3);
	split_sreg_range(0X8013544,"T",0X1,3);
	split_sreg_range(0X8013550,"T",0X1,3);
	split_sreg_range(0X8013560,"T",0X1,3);
	split_sreg_range(0X8013584,"T",0X1,3);
	split_sreg_range(0X80135A6,"T",0X1,3);
	split_sreg_range(0X80135B6,"T",0X1,3);
	split_sreg_range(0X801366A,"T",0X1,3);
	split_sreg_range(0X801367C,"T",0X1,3);
	split_sreg_range(0X8013718,"T",0X1,3);
	split_sreg_range(0X8013770,"T",0X1,3);
	split_sreg_range(0X801377A,"T",0X1,3);
	split_sreg_range(0X8013784,"T",0X1,3);
	split_sreg_range(0X8013788,"T",0X1,3);
	split_sreg_range(0X80137A8,"T",0X1,3);
	split_sreg_range(0X80137BA,"T",0X1,3);
	split_sreg_range(0X80137F8,"T",0X1,3);
	split_sreg_range(0X801380A,"T",0X1,3);
	split_sreg_range(0X8013812,"T",0X1,3);
	split_sreg_range(0X801382C,"T",0X1,3);
	split_sreg_range(0X8013844,"T",0X1,3);
	split_sreg_range(0X801385C,"T",0X1,3);
	split_sreg_range(0X8013892,"T",0X1,3);
	split_sreg_range(0X80138A2,"T",0X1,3);
	split_sreg_range(0X80138B0,"T",0X1,3);
	split_sreg_range(0X80138C6,"T",0X1,3);
	split_sreg_range(0X80138DC,"T",0X1,3);
	split_sreg_range(0X80138EA,"T",0X1,3);
	split_sreg_range(0X80138FC,"T",0X1,3);
	split_sreg_range(0X8013906,"T",0X1,3);
	split_sreg_range(0X801392C,"T",0X1,3);
	split_sreg_range(0X801393C,"T",0X1,3);
	split_sreg_range(0X801395A,"T",0X1,3);
	split_sreg_range(0X8013962,"T",0X1,3);
	split_sreg_range(0X801397E,"T",0X1,3);
	split_sreg_range(0X8013994,"T",0X1,3);
	split_sreg_range(0X80139A2,"T",0X1,3);
	split_sreg_range(0X80139AC,"T",0X1,3);
	split_sreg_range(0X80139AE,"T",0X1,3);
	split_sreg_range(0X80139BA,"T",0X1,3);
	split_sreg_range(0X80139E2,"T",0X1,3);
	split_sreg_range(0X80139FA,"T",0X1,3);
	split_sreg_range(0X8013A06,"T",0X1,3);
	split_sreg_range(0X8013A10,"T",0X1,3);
	split_sreg_range(0X8013A1A,"T",0X1,3);
	split_sreg_range(0X8013A3C,"T",0X1,3);
	split_sreg_range(0X8013A54,"T",0X1,3);
	split_sreg_range(0X8013ACC,"T",0X1,3);
	split_sreg_range(0X8013ACE,"T",0X1,3);
	split_sreg_range(0X8013B02,"T",0X1,3);
	split_sreg_range(0X8013B1A,"T",0X1,3);
	split_sreg_range(0X8013B80,"T",0X1,3);
	split_sreg_range(0X8013BA6,"T",0X1,3);
	split_sreg_range(0X8013DEE,"T",0X1,3);
	split_sreg_range(0X8013E02,"T",0X1,3);
	split_sreg_range(0X8013E80,"T",0X1,3);
	split_sreg_range(0X8013EA2,"T",0X1,3);
	split_sreg_range(0X8013ECA,"T",0X1,3);
	split_sreg_range(0X8013EE2,"T",0X1,3);
	split_sreg_range(0X8013F3E,"T",0X1,3);
	split_sreg_range(0X8013FE8,"T",0X1,3);
	split_sreg_range(0X80140D4,"T",0X1,3);
	split_sreg_range(0X80140F8,"T",0X1,3);
	split_sreg_range(0X801410E,"T",0X1,3);
	split_sreg_range(0X8014130,"T",0X1,3);
	split_sreg_range(0X8014132,"T",0X1,3);
	split_sreg_range(0X8014140,"T",0X1,3);
	split_sreg_range(0X8014164,"T",0X1,3);
	split_sreg_range(0X801416C,"T",0X1,3);
	split_sreg_range(0X8014176,"T",0X1,3);
	split_sreg_range(0X801417E,"T",0X1,3);
	split_sreg_range(0X801418E,"T",0X1,3);
	split_sreg_range(0X80141A8,"T",0X1,3);
	split_sreg_range(0X80141EC,"T",0X1,3);
	split_sreg_range(0X80141F4,"T",0X1,3);
	split_sreg_range(0X8014224,"T",0X1,3);
	split_sreg_range(0X8014238,"T",0X1,3);
	split_sreg_range(0X801423E,"T",0X1,3);
	split_sreg_range(0X8014258,"T",0X1,3);
	split_sreg_range(0X8014268,"T",0X1,3);
	split_sreg_range(0X801427C,"T",0X1,3);
	split_sreg_range(0X80142D4,"T",0X1,3);
	split_sreg_range(0X80142EC,"T",0X1,3);
	split_sreg_range(0X80142F8,"T",0X1,3);
	split_sreg_range(0X801430C,"T",0X1,3);
	split_sreg_range(0X8014336,"T",0X1,3);
	split_sreg_range(0X8014364,"T",0X1,3);
	split_sreg_range(0X801437C,"T",0X1,3);
	split_sreg_range(0X8014394,"T",0X1,3);
	split_sreg_range(0X80143A8,"T",0X1,3);
	split_sreg_range(0X80143B8,"T",0X1,3);
	split_sreg_range(0X80143D0,"T",0X1,3);
	split_sreg_range(0X80144D6,"T",0X1,3);
	split_sreg_range(0X80144F0,"T",0X1,3);
	split_sreg_range(0X8014504,"T",0X1,3);
	split_sreg_range(0X8014516,"T",0X1,3);
	split_sreg_range(0X8014568,"T",0X1,3);
	split_sreg_range(0X801457A,"T",0X1,3);
	split_sreg_range(0X801458C,"T",0X1,3);
	split_sreg_range(0X8014598,"T",0X1,3);
	split_sreg_range(0X80145B2,"T",0X1,3);
	split_sreg_range(0X80145C0,"T",0X1,3);
	split_sreg_range(0X80145E2,"T",0X1,3);
	split_sreg_range(0X80145EA,"T",0X1,3);
	split_sreg_range(0X8014680,"T",0X1,3);
	split_sreg_range(0X80146B2,"T",0X1,3);
	split_sreg_range(0X80146C4,"T",0X1,3);
	split_sreg_range(0X80146CE,"T",0X1,3);
	split_sreg_range(0X80146E0,"T",0X1,3);
	split_sreg_range(0X8014706,"T",0X1,3);
	split_sreg_range(0X801471C,"T",0X1,3);
	split_sreg_range(0X8014722,"T",0X1,3);
	split_sreg_range(0X8014728,"T",0X1,3);
	split_sreg_range(0X801473A,"T",0X1,3);
	split_sreg_range(0X8014762,"T",0X1,3);
	split_sreg_range(0X8014768,"T",0X1,3);
	split_sreg_range(0X8014788,"T",0X1,3);
	split_sreg_range(0X80147B0,"T",0X1,3);
	split_sreg_range(0X80147C2,"T",0X1,3);
	split_sreg_range(0X80147C6,"T",0X1,3);
	split_sreg_range(0X80147DE,"T",0X1,3);
	split_sreg_range(0X80147F2,"T",0X1,3);
	split_sreg_range(0X8014808,"T",0X1,3);
	split_sreg_range(0X801488C,"T",0X1,3);
	split_sreg_range(0X80148A2,"T",0X1,3);
	split_sreg_range(0X80148C6,"T",0X1,3);
	split_sreg_range(0X80148D0,"T",0X1,3);
	split_sreg_range(0X8014902,"T",0X1,3);
	split_sreg_range(0X8014920,"T",0X1,3);
	split_sreg_range(0X801493A,"T",0X1,3);
	split_sreg_range(0X8014942,"T",0X1,3);
	split_sreg_range(0X801494C,"T",0X1,3);
	split_sreg_range(0X801495C,"T",0X1,3);
	split_sreg_range(0X8014978,"T",0X1,3);
	split_sreg_range(0X801499E,"T",0X1,3);
	split_sreg_range(0X80149A4,"T",0X1,3);
	split_sreg_range(0X80149A8,"T",0X1,3);
	split_sreg_range(0X80149C8,"T",0X1,3);
	split_sreg_range(0X80149F8,"T",0X1,3);
	split_sreg_range(0X8014A04,"T",0X1,3);
	split_sreg_range(0X8014A24,"T",0X1,3);
	split_sreg_range(0X8014A36,"T",0X1,3);
	split_sreg_range(0X8014A3A,"T",0X1,3);
	split_sreg_range(0X8014A52,"T",0X1,3);
	split_sreg_range(0X8014A66,"T",0X1,3);
	split_sreg_range(0X8014A70,"T",0X1,3);
	split_sreg_range(0X8014A88,"T",0X1,3);
	split_sreg_range(0X8014AB6,"T",0X1,3);
	split_sreg_range(0X8014BB2,"T",0X1,3);
	split_sreg_range(0X8014BEC,"T",0X1,3);
	split_sreg_range(0X8014C0E,"T",0X1,3);
	split_sreg_range(0X8014C1E,"T",0X1,3);
	split_sreg_range(0X8014C36,"T",0X1,3);
	split_sreg_range(0X8014C44,"T",0X1,3);
	split_sreg_range(0X8014C54,"T",0X1,3);
	split_sreg_range(0X8014C64,"T",0X1,3);
	split_sreg_range(0X8014C7C,"T",0X1,3);
	split_sreg_range(0X8014CD4,"T",0X1,3);
	split_sreg_range(0X8014CFA,"T",0X1,3);
	split_sreg_range(0X8014D1E,"T",0X1,3);
	split_sreg_range(0X8014D28,"T",0X1,3);
	split_sreg_range(0X8014D62,"T",0X1,3);
	split_sreg_range(0X8014D8A,"T",0X1,3);
	split_sreg_range(0X8014DAA,"T",0X1,3);
	split_sreg_range(0X8014DB6,"T",0X1,3);
	split_sreg_range(0X8014DC0,"T",0X1,3);
	split_sreg_range(0X8014DC6,"T",0X1,3);
	split_sreg_range(0X8014DD6,"T",0X1,3);
	split_sreg_range(0X8014DDC,"T",0X1,3);
	split_sreg_range(0X8014DF6,"T",0X1,3);
	split_sreg_range(0X8014E0C,"T",0X1,3);
	split_sreg_range(0X8014E28,"T",0X1,3);
	split_sreg_range(0X8014E50,"T",0X1,3);
	split_sreg_range(0X8014E80,"T",0X1,3);
	split_sreg_range(0X8014E8E,"T",0X1,3);
	split_sreg_range(0X8014EE8,"T",0X1,3);
	split_sreg_range(0X8014EFC,"T",0X1,3);
	split_sreg_range(0X8014F04,"T",0X1,3);
	split_sreg_range(0X8014F26,"T",0X1,3);
	split_sreg_range(0X8014F38,"T",0X1,3);
	split_sreg_range(0X8014F44,"T",0X1,3);
	split_sreg_range(0X8014F50,"T",0X1,3);
	split_sreg_range(0X8014F68,"T",0X1,3);
	split_sreg_range(0X8015016,"T",0X1,3);
	split_sreg_range(0X8015074,"T",0X1,3);
	split_sreg_range(0X801508C,"T",0X1,3);
	split_sreg_range(0X80150B2,"T",0X1,3);
	split_sreg_range(0X80150C4,"T",0X1,3);
	split_sreg_range(0X80150CA,"T",0X1,3);
	split_sreg_range(0X80150D6,"T",0X1,3);
	split_sreg_range(0X80150EC,"T",0X1,3);
	split_sreg_range(0X8015108,"T",0X1,3);
	split_sreg_range(0X8015124,"T",0X1,3);
	split_sreg_range(0X801513A,"T",0X1,3);
	split_sreg_range(0X801514E,"T",0X1,3);
	split_sreg_range(0X801515C,"T",0X1,3);
	split_sreg_range(0X8015164,"T",0X1,3);
	split_sreg_range(0X8015192,"T",0X1,3);
	split_sreg_range(0X8015194,"T",0X1,3);
	split_sreg_range(0X80151B8,"T",0X1,3);
	split_sreg_range(0X80151BC,"T",0X1,3);
	split_sreg_range(0X80151D4,"T",0X1,3);
	split_sreg_range(0X80151E6,"T",0X1,3);
	split_sreg_range(0X80151EA,"T",0X1,3);
	split_sreg_range(0X80151FA,"T",0X1,3);
	split_sreg_range(0X801520E,"T",0X1,3);
	split_sreg_range(0X8015224,"T",0X1,3);
	split_sreg_range(0X80152B8,"T",0X1,3);
	split_sreg_range(0X80152CC,"T",0X1,3);
	split_sreg_range(0X80152EC,"T",0X1,3);
	split_sreg_range(0X801530A,"T",0X1,3);
	split_sreg_range(0X8015312,"T",0X1,3);
	split_sreg_range(0X801531C,"T",0X1,3);
	split_sreg_range(0X8015326,"T",0X1,3);
	split_sreg_range(0X8015340,"T",0X1,3);
	split_sreg_range(0X8015364,"T",0X1,3);
	split_sreg_range(0X801536A,"T",0X1,3);
	split_sreg_range(0X801536E,"T",0X1,3);
	split_sreg_range(0X801538E,"T",0X1,3);
	split_sreg_range(0X80153B2,"T",0X1,3);
	split_sreg_range(0X80153BC,"T",0X1,3);
	split_sreg_range(0X80153D4,"T",0X1,3);
	split_sreg_range(0X80153E6,"T",0X1,3);
	split_sreg_range(0X80153EA,"T",0X1,3);
	split_sreg_range(0X80153FA,"T",0X1,3);
	split_sreg_range(0X801540E,"T",0X1,3);
	split_sreg_range(0X801541E,"T",0X1,3);
	split_sreg_range(0X8015434,"T",0X1,3);
	split_sreg_range(0X8015442,"T",0X1,3);
	split_sreg_range(0X8015450,"T",0X1,3);
	split_sreg_range(0X801549E,"T",0X1,3);
	split_sreg_range(0X80154B6,"T",0X1,3);
	split_sreg_range(0X80154C6,"T",0X1,3);
	split_sreg_range(0X80154EC,"T",0X1,3);
	split_sreg_range(0X80154F2,"T",0X1,3);
	split_sreg_range(0X80154FE,"T",0X1,3);
	split_sreg_range(0X8015500,"T",0,3);
	split_sreg_range(0X801551E,"T",0X1,3);
	split_sreg_range(0X8015548,"T",0X1,3);
	split_sreg_range(0X8015554,"T",0X1,3);
	split_sreg_range(0X801556C,"T",0X1,3);
	split_sreg_range(0X8015582,"T",0X1,3);
	split_sreg_range(0X80155C0,"T",0X1,3);
	split_sreg_range(0X80155CA,"T",0X1,3);
	split_sreg_range(0X80155DE,"T",0X1,3);
	split_sreg_range(0X8015612,"T",0X1,3);
	split_sreg_range(0X8015618,"T",0X1,3);
	split_sreg_range(0X801562A,"T",0X1,3);
	split_sreg_range(0X801563E,"T",0X1,3);
	split_sreg_range(0X8015654,"T",0X1,3);
	split_sreg_range(0X1FFFF700,"T",0,3);
	split_sreg_range(0X40000000,"T",0,3);
	split_sreg_range(0X40010000,"T",0,3);
	split_sreg_range(0X40020000,"T",0,3);
	split_sreg_range(0X42200000,"T",0,3);
	split_sreg_range(0X42420000,"T",0,3);
	split_sreg_range(0XA0001020,"T",0,3);
	split_sreg_range(0X8008000,"DS",0X4,3);
	split_sreg_range(0X8015500,"DS",0X4,3);
	split_sreg_range(0X1FFFF700,"DS",0X4,3);
	split_sreg_range(0X40000000,"DS",0X4,3);
	split_sreg_range(0X40010000,"DS",0X4,3);
	split_sreg_range(0X40020000,"DS",0X4,3);
	split_sreg_range(0X42200000,"DS",0X4,3);
	split_sreg_range(0X42420000,"DS",0X4,3);
	split_sreg_range(0XA0001020,"DS",0X4,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
        end_type_updating(UTP_STRUCT);
}

// End of file.
